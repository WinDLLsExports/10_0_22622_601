!This program cannot be run in DOS mode.
.text
h.rdata
H.data
.pdata
H.idata
HPAGE
`fothk
`INIT
bGFIDS
B.rsrc
B.reloc
KArrH
KArrH
KArrI
KArrH
KArrH
t$ WH
KArrH
KArrH
|$ AVH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrI
|$ AVH
KArrH
KArrH
NxWmH
|$ AVH
KArrH
KArrH
KArrH
KArrH
VWAVH
KArrH
KArrH
KArrH
 A^_^
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
KArrH
|$ AVH
KArrH
KArrH
KArrH
KArrH
t$ WH
KArrH
KArrH
WAVAWH
@p@8-C}
H;Qhwx
;@8-+|
A_A^_
t$ WATAUAVAWH
\$@L;
u L+t$HE
A_A^A]A\_
x ATAVAWH
A_A^A\
UVWATAUAVAWH
PA_A^A]A\_^]
UVWATAUAVAWH
H;]gtQL
A_A^A]A\_^]
UVWATAUAVAWH
L+l$8H
D$0H;
PA_A^A]A\_^]
UVWATAUAVAWH
G(H+l$@H;
{h@8-
@8jpt&H
@8iHt
@8o t9H
`A_A^A]A\_^]
x AVH
\$@A+
SUVWATAUAVAWH
E8T/`t0I
fE;T4Ds
D$@E3
T/@E8Q`t?A
XA_A^A]A\_^][
VWAVH
0A^_^
|$PH;{
KArrH
KArrH
cxbmH
KHstH
KHstH
x AUAVAWH
A_A^A]
ASmDH
x UATAUAVAWH
AdStH
ASmDH
ASmDH
ASmDH
A_A^A]A\]
\$ E3
\$ E3
\$ E3
|$ E3
L$8E3
DPnPH
WATAUAVAWH
H9(uOH
A_A^A]A\_
x ATAVAWH
H9(uqH
DPnPH
A_A^A\
WAVAWH
t$0M;
A_A^_
x AWH
x AWH
x AWH
x AWH
UAVAWH
A_A^]
\$ UVWATAUAVAWH
pA_A^A]A\_^]
L$ E3
x AVH
wGtWI
|$(fD
WAVAWH
0A_A^_
H!D$(
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
H!D$(
t$ UWAVH
t$ UWAVH
UVWATAWH
A_A\_^]
L$XeH
x AVH
:NAISH
x AVH
t$ UWAVH
x AVH
D$HNdCxH
NxNtH
NxNrD
NxPwH
NxPwH
PnPNH
D$HNdCxH
NxNtH
UVWATAUAVAWH
NxOfA
D$pH;
A_A^A]A\_^]
L$@!D$@L
|$ UATAUAVAWH
A_A^A]A\]
NxOfH
NxOfH
NxPwH
KArrH
NxNrH
L$0f9O
D$4t#
UWAVH
t$ WH
t$ WAVAWH
KArrH
KArrH
A_A^_
` UAVAWH
A_A^]
t$ WAVAWH
A_A^_
x ATAVAWH
@A_A^A\
x UATAUAVAWH
fD9iHt"H
fD9iHt#H
yHH9=g
uOH9=
KArrH
A_A^A]A\]
x UATAUAVAWH
fD9iHt"H
fD9iHt#H
yHH9={
uOH9=*
KArrH
A_A^A]A\]
PnPNH
x AVH
UWAWH
|$(A^
x AVH
UWAVH
p AWH
D9@(s|3
x ATAVAWH
fD9$Cu
fD9${u
A_A^A\
NAISH
D$`t#
NAInH
H!T$ D
NAInH
H!|$ D
H!\$ D
x ATAVAWH
D$`t#
D$XE3
A_A^A\
|$ AVH
WATAUAVAWH
f D9~
L9v(u
L9w u
0A_A^A]A\_
H!|$ D
HcG,A
f9iHt#H
T$ E3
t$ WH
D$@E3
L$XH3
H!t$ D
uIHcG
H!t$ D
x AVH
x AVH
H!t$ D
H!|$ D
H!|$ D
NAEIH
H!\$ D
H!t$ D
;NAEIt
H!l$ D
H!t$ D
=diOSt
H!\$ D
H!t$ D
;NAEIt
H!l$ D
H!t$ D
=diODt
H!\$ D
H!t$ D
;NAEIt
H!\$ D
H!t$ D
;NAEIt
H!|$ D
H!|$ D
?NAEIt
H!|$ D
H!|$ D
;NAEIt
x AVH
KsplH
nxmaH
KArrH
KsplH
NxRBH
nxmaD
nxmaI
VWAVH
T$@H;Q
 A^_^
;w0t+H
|$ UAVAWH
A_A^]
WATAUAVAWH
fD9+t
fD9/t
fD9+t
7fD9/t
t$(fD
A_A^A]A\_
WAVAWH
fD9;t
;fD9;t
A_A^_
VWAVH
fD9qHt
UWATAVAWH
u@D8%
L9g u
G D8c 
fD9aHt
A_A^A\_]
UVWATAUAVAWH
pA_A^A]A\_^]
x AVH
t$ WH
H9n0u
t$ WH
t$ WH
@8x t)H
UWAVH
L$0E3
L$0E3
x ATAVAWH
fD9#t
;fD9#t
l$(fD
A_A^A\
UWAVH
l$ VWATAVAWH
H95Q5
fD9aH
fD9aHt"H
fD9aHt
y;H95
PA_A^A\_^
@USVWATAVAWH
d$DD8%
NdCxH
D8%@:
y4H95@/
DeStD
yOH95z-
H95C-
NdCxH
u@H95
A_A^A\_^[]
WATAVH
 A^A\_
\$ E3
H9-E$
{ AVH
B`fE+
(D$0f
UVWATAUAVAWH
0A_A^A]A\_^]
H UVWATAUAVAWH
NxWmHk
(|$pL
A_A^A]A\_^]
USVWAVH
L9t$@uTH
L9t$PuTH
A^_^[]
UVWATAUAVAWH
O@+k8A
@A_A^A]A\_^]
VWAVH
0A^_^
UVWATAUAVAWH
fD9iHt!H
uKH9=c
fD9iHt/H
pA_A^A]A\_^]
VWAVH
x AVH
fD9qHt
fD9qHt)H
fD9qHt)H
x AVH
\$ E3
UWAVH
s AWH
D$@E3
D$@E3
L$XE3
VWAVH
@A^_^
WATAUAVAWH
l$0L;
A_A^A]A\_
t$ UWAVH
|$ AVH
x AVH
NdCxI
x AVH
|$ UH
)D$0H
L$ SVWH
ECtxH
@USVWATAUAVAWH
L9n t
A_A^A]A\_^[]
|$ UAVAWH
A_A^]
t$ WH
f9,Au
L$0E3
|$ UATAUAVAWH
NxOfA
KArrH
KArrH
NxOfH
NxOfD
NxOfI
A_A^A]A\]
|$ UAVAWH
A_A^]
(D$ f
(D$0H
(D$@H
(D$PH
(D$`H
t$ UWATAVAWH
(D$ f
(D$ f
(D$ f
(D$ f
(D$ H
A_A^A\_]
UVWAVAWH
A_A^_^]
|$ UH
NxOfH
NxPLH
NxPLt#H
NxPLt
NxPLt"L
NxPLt
NxWSH
D8BLu
D8BMu
D8RTu
NxWSt#H
NxWSt
NxWSt"L
NxWSt
L:@H;
A9@0t
x UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
 A_A^A]A\_
KArrH
ECtxH
WAVAWH
0A_A^_
WAVAWH
0A_A^_
f!~XH9>u
x AVH
NxRBH
WATAVH
D$ ;O
A^A\_
x AVH
+M0#M
A+Q0A#Q
+N0#N
A+Q0A#Q
+O0#O
Q0A#Q
x AUAVAWH
fD9;t
;fD9;t
l$(fD
A_A^A]
|$ UATAUAVAWH
I9W u
f9QHt
A_A^A]A\]
9GNxIt
x ATAVAWH
FHf;F
0A_A^A\
x ATAVAWH
0A_A^A\
WAVAWH
0A_A^_
WATAUAVAWH
0A_A^A]A\_
UVWATAUAVAWH
0A_A^A]A\_^]
LcO A
WATAUAVAWH
fD9<Cu
fD9<{u
A_A^A]A\_
t$ UWAVH
CxDrH
NxApH
GNxIH
VWAVH
T$hE3
@A^_^
;xuZH
x AVH
@8h0t$H
9(u"H
WAVAWH
 A_A^_
WATAUAVAWH
A_A^A]A\_
WAVAWH
T$(E3
D$8D*
D$0D;
@A_A^_
x AUAVAWH
(D$ @
0A_A^A]
x ATAVAWD
|$8A_A^A\
x AVH
x AVH
x AVH
VWAVH
@A^_^
x AVH
UAVAWH
A_A^]
x AVH
nblTH
NxApH
H9=O=
WAVAWH
@A_A^_
NxApH
KArrH
CoQuH
NtxTH
UVWATAUAVAWH
L$8H3
@A_A^A]A\_^]
NtxTH
NtxTH
NtxTH
WAVAWH
@A_A^_
t$ UWAUAVAWH
A_A^A]_]
KArrH
KArrH
NrxRH
x AVH
x UATAWH
D8{ th
D8{!tXH
u!D8{
A_A\]
Z(sTH
D8S u
D8S!u
D8S u
D8S!u
L$0E3
|$ UAVAWH
A_A^]
|$ UAVAWH
A_A^]
x UATAUAVAWH
L$`E3
A_A^A]A\]
x AVH
x AVH
x UATAUAVAWH
A_A^A]A\]
KArrH
KArrH
\$ H;
VWATAVAWH
A_A^A\_^
L$0H3
x AVH
UVWATAUAVAWH
KArrH
pA_A^A]A\_^]
KArrH
UVWATAUAVAWH
NtxTH
NtxTH
NtxTH
NtxTH
^,M9n0
KArrH
NtxTH
KArrH
A_A^A]A\_^]
x ATAVAWH
0A_A^A\
x AVH
KArrH
NtxTH
UAVAWH
H;_`u
A_A^]
TrQuH
{ AVH
H!7H!u
H!u D
x AVH
I3A@H#
tBfD9
t$ WH
H9y@u
x UATAUAVAWH
A_A^A]A\]
A9@0u0L
A9@0u
UATAUAVAWH
A_A^A]A\]
UAVAWH
L$@fD
A_A^]
WATAUAVAWH
fE;\7DsVE3
D7DD;
 A_A^A]A\_
KArrH
SUVWATAUAVAWH
fA9t$
fA;\$
D;@A#
|$ A#G
HA_A^A]A\_^][
@8l$Xu
WAVAWH
0A_A^_
TrQuH
KArrH
NxDmH
A9@0t
UVWATAUAVAWH
A_A^A]A\_^]
t$ WATAUAVAWH
A_A^A]A\_
x AVH
p AWH
uCL9=3
UATAUAVAWH
A_A^A]A\]
@USVWAVAWH
L$`E3
A_A^_^[]
8\$4u
8\$5u
8\$6t
TrQuH
WAVAWH
 A_A^_
A9@0uCL
A9@0u2H
9B0u#
TrQuH
L$0fD
SUVWATAUAVAWH
s`fA9F
D8@A#
D8@A#
D$0E3
HA_A^A]A\_^][
x UATAUAVAWH
A_A^A]A\]
WAVAWH
TrQuu]H
A_A^_
I#I(A
NtxTH
NxRBH
UVWAVAWH
]8tWE8y
 A_A^_^]
UVWATAUAVAWH
K D8I t
K(D8I t
4I3D7@H#
I1D7@I
D3kPL#
D7@E3
}PH;E
A_A^A]A\_^]
UVWATAUAVAWH
t$@L9N8
D$8I;@H
,M9L6Hu
J!D+@J
I3@PI#
t6HE3
t$HH;D$8t
PA_A^A]A\_^]
UWAVH
A8CHtSH
x ATAUAVAWD
|$@A_A^A]A\
,f93r
,f93r
t)<;u
@USVWATAVAWH
epA_A^A\_^[]
UWATAVAWH
|$8E3
A_A^A\_]
nxmaH
KArrH
nxbmH
{ AVH
L$ E3
WATAUAVAWH
 A_A^A]A\_
|$(A^
UAVAWH
A_A^]
x ATAVAWH
I9N0t=@
A_A^A\
NxNtH
t$ WH
L$`H3
UWAVH
D$0H9A
A H;D$8u
L$@H3
UWAVH
D$KH;
WATAWH
L9%R_
0A_A\_
L95K^
p AWH
WAVAWH
 A_A^_
NxPwH
NxPwH
x UATAWH
y2L9=|W
v(L9=
y=L9=
NxwRH
yAL9=
y*L9=YU
A_A\]
|$ UAVAWH
A_A^]
D9C,t
NxPwH
UWAVH
NxPEA
NxPEA
NxPwH
WATAUAVAWH
A_A^A]A\_
NxpRH
p AWH
L9=<H
L$hH3
NxPEH
L$hH3
NxPEH
WATAUAVAWH
 A_A^A]A\_
NxIRH
L$(E3
NxIRH
VWATAVAWH
A_A^A\_^
NxpRH
NxpRH
WAVAWH
NxRBI
@A_A^_
UVWATAUAVAWH
pbxnL
pA_A^A]A\_^]
E;K0u
A;@0u
t$ UWAVH
ECtxH
R$fA;Z*
ECtxH
@USVWH
KHstH
f9D$@u
8D$Bu
x AVH
H9?u1H
x AVH
UVWATAUAVAWH
D8d$A
@8|$`
9|$Pv*H
L$hH;
L$pH;D$X~@@8|$Ht H
A_A^A]A\_^]
t H9B
t$ WAVAWH
 A_A^_
L$ E3
L$ UH
L$PE3
D$PH;
D$hH;
SUVWATAUAVAWH
\$ 9_
L$ E;N
t,K94
8A_A^A]A\_^][
q(@85
BatlH
D$(BatlA
WATAUAVAWH
OPD8Q
G D8R
OPD8Q
0A_A^A]A\_
WATAUAVAWH
WPD8Z
G D8Z
_,8\$xL
W E8P
A_A^A]A\_
H9\$8t
W E8P
8\$xt
D$pA+
x ATAVAWH
@A_A^A\
x AVH
UVWATAUAVAWH
L$PH3
`A_A^A]A\_^]
SUVWATAUAVAWH
u)@8y
u*@8{
uEA9<$t
u*@8y
u*@8{
ufA99t
u*@8{
uoA9<$t
u*@8{
ugA9<$t
D$$fA
u*@8{
uvA9<$t
u,@8{
uiA9<$t
u*@8{
uiA9<$t
u,@8{
u\A9<$t
HA_A^A]A\_^][
x ATAUAVAWE3
|$@A_A^A]A\
@UVWATAUAVAWH
D8{0t
}Hf+EvL
D!t$ E
D!t$ E
]xD8I
A_A^A]A\_^]
L$(E3
rOfA;[
UVWATAUAVAWH
IPD8Q
u-@8{
C D8R
KPD8Q
|$ fD
CPE8P
u,@8{
C D8R
u,@8{
C D8R
u-@8{
t$ fE
C D8R
t$ fE
u,@8{
t$ fE
C D8R
t$ fE
u.@8{
C D8j
0A_A^A]A\_^]
r`f;K
t$ WATAUAVAWM
f;L$0t
t$HA_A^A]A\_
@UVWATAUAVAWH
D$ fD
D8c0t
D$ E3
D!d$ E
D!d$ E3
A_A^A]A\_^]
t$(A#
WATAUAVAWH
D$xE3
 A_A^A]A\_
I,u1A
x ATAVAWH
K(fA+I
fA+I(
A)C(I
D8c+t
 A_A^A\
x AVL
I9R@u
|$(A^
VWATAVAWH
D9?t\Hc
L$hHk
 A_A^A\_^
UVWATAUAVAWH
u+D8m
K(uWA
A_A^A]A\_^]
A;F+L
WAVAWH
|$ E3
A_A^_
D$(fD
t$ WH
D$0E3
l$2E3
D$@E3
@USVWAVH
pA^_^[]
-fffffff
fffffff
fffffff
fffffff
.fffffff
fffffff
fffffff
fffff
AQAPRQPH
(D$ H
0XYZAXAY
ffffff
fffff
fffff
NDIS_MINIPORT_BLOCK_TYPE
NxQueue
NxAdapter
minio\netcx\adapter\adapterpnppower.cpp
!m_driverState
STATUS_INSUFFICIENT_RESOURCES
NxBufferQueue
NxDevice
minio\netcx\adapter\devicepnppower.cpp
NxDriver
NxConfiguration
CxDriverContext
! Queues.resize(Queues.count() + 1)
!m_ndisMiniport
!m_ndisPnpPower
!m_powerPolicy
minio\netcx\adapter\nxadapter.cpp
!offloadFacade
!m_offloadManager
! m_txDemux.reserve(AdapterInit->TxDemux.count())
*NumRssQueues
m_receiveFilterCapabilities.SupportedPacketFilters == 0
STATUS_NOT_SUPPORTED
PacketFilter & ~(m_receiveFilterCapabilities.SupportedPacketFilters) && GetMediaType() != NdisMediumNative802_11
!m_apps.append(wistd::unique_ptr<INxApp> { static_cast<INxApp *>(client) })
ms_fragment_virtualaddress
ms_packet_wifiexemptionaction
ms_fragment_returncontext
ms_fragment_databuffer
ms_fragment_logicaladdress
ms_fragment_mdl
ms_packet_ieee8021q
ms_packet_hash
! QueueCreationContext.Extensions.append(*extension)
! context.CreatedQueueObject
STATUS_UNSUCCESSFUL
NxAdapter::InitializePowerManagement
QueryExtension(Extension.Name, Extension.Version, Extension.Type) != nullptr
STATUS_DUPLICATE_NAME
! m_packetExtensions.append(wistd::move(extension))
NetAdapterCx
NetAdapterInitAllocateCommon
imp_NetAdapterLightweightInitAllocate
************************************************************
* NetAdapterOffloadSetChecksumCapabilities has been         
* deprecated. Use NetAdapterOffloadSetTxChecksumCapabilities
* and NetAdapterOffloadSetRxChecksumCapabilities instead.   
************************************************************
**********************************************************
* NetOffloadIsChecksumIPv4Enabled has been deprecated.    
* Use NetOffloadIsTxChecksumIPv4Enabled and               
* NetOffloadIsRxChecksumIPv4Enabled instead.              
**********************************************************
**********************************************************
* NetOffloadIsChecksumTcpEnabled has been deprecated.     
* Use NetOffloadIsTxChecksumTcpEnabled and                
* NetOffloadIsRxChecksumTcpEnabled instead.               
**********************************************************
**********************************************************
* NetOffloadIsChecksumUdpEnabled has been deprecated.     
* Use NetOffloadIsTxChecksumUdpEnabled and                
* NetOffloadIsRxChecksumUdpEnabled instead.               
**********************************************************
mbbcx
wificx
extensionType == MediaExtensionType::None
STATUS_ACCESS_DENIED
GetNxDriverFromWdfDriver(Driver) != nullptr
STATUS_ALREADY_REGISTERED
>NxExecutionContext
! ring
!m_allocator
!m_bufferPool
bufferVector == nullptr
5`";Jb
status != STATUS_OBJECT_TYPE_MISMATCH
status
m_resetDiagnosticsBuffer == WDF_NO_HANDLE
STATUS_SUCCESS
resetDiagnosticsSize == 0U
!DbgkLiveDumpAddSecondaryDataRoutine
STATUS_INVALID_PARAMETER
NetAdapterCx
NxDevice::CollectDiagnostics
NxDevice::Initialize
!m_oidList
cbSourceString > USHORT_MAX
STATUS_INTEGER_OVERFLOW
!m_pGuidToOidMap
NetAdapterMof
BufferSize < sizeof(WNODE_TOO_SMALL)
STATUS_BUFFER_TOO_SMALL
!wnodeCopy
!dataBuffer
!tempInstanceNameBuffer
!miniport
STATUS_WMI_INSTANCE_NOT_FOUND
targetAdapters.count() == 0
(ndisGuid->Flags & fNDIS_GUID_TO_STATUS) == 0
STATUS_INVALID_DEVICE_REQUEST
NxDevice::WritePowerStateChangeEvent
cxDeviceInit == nullptr
NETEXECUTIONCONTEXT %p
NxExecutionContextTask
minio\netcx\adapter\nxexecutioncontextapi.cpp
DeferredDeleteContext
minio\netcx\adapter\nxexecutioncontexttask.cpp
!WIN_VERIFY(RTL_IS_POWER_OF_TWO(Extension->NonWdfStyleAlignment))
!WIN_VERIFY(Extension->NonWdfStyleAlignment <= alignment)
!WIN_VERIFY(Extension->Size <= MAXIMUM_ALLOWED_EXTENSION_SIZE)
!WIN_VERIFY(Extension->Size != 0)
! m_extensionName
ms_packet_checksum
ms_packet_gso
ms_packet_rsc
ms_packet_rsc_timestamp
!checksumOffload
!m_offloads.append(wistd::move(checksumOffload))
!rxChecksumOffload
!m_offloads.append(wistd::move(rxChecksumOffload))
!txChecksumOffload
!m_offloads.append(wistd::move(txChecksumOffload))
!gsoOffload
!m_offloads.append(wistd::move(gsoOffload))
!rscOffload
!m_offloads.append(wistd::move(rscOffload))
*IPChecksumOffloadIPv4
*TCPChecksumOffloadIPv4
*TCPChecksumOffloadIPv6
*UDPChecksumOffloadIPv4
*UDPChecksumOffloadIPv6
*LsoV1IPv4
*LsoV2IPv4
*LsoV2IPv6
*UsoIPv4
*UsoIPv6
*RscIPv4
*RscIPv6
*RscTimestamp
<&NxQueueVerifier
minio\netcx\adapter\nxqueue.cpp
!m_frameworkExecutionContext
Receive
%ws execution context #%lu for %wZ
! m_Vectors.resize( m_Vectors.count()+1)
! bufferArray.resize(BufferCounts)
aJ6T9
**********************************************************
* NetAdapterCx detected a verifier rule violation.       *
**********************************************************
PsGetVersion
WmiTraceMessage
WmiQueryTraceInformation
EtwRegisterClassicProvider
EtwUnregister
!m_registryPath
**********************************************************
* NetAdapterCx 1.%u (Preview) client detected.            
* Recompile your source code and target NetAdapterCx 2.%u.
**********************************************************
**********************************************************
* NetAdapterCx 2 (Preview) client detected.               
* Recompile your source code and target NetAdapterCx 2.x  
* (Stable) or NetAdapterCx 2.3 (Preview or Stable).       
**********************************************************
************************* 
* NetAdapterCx detected a function count mismatch. The driver 
* using this extension will not load until it is re-compiled 
* with the latest version of the extension's header and libs 
* Actual function table count  : %u 
* Expected function table count: %u 
*************************** 
************************* 
* Driver verifier should be enabled on both client and Cx
* If not, DV may report false violations while verifiying NDIS rules
*************************** 
\Device\netadaptercx
KmdfLibrary
DriverEntry failed 0x%x for driver %wZ
FxStubBindClasses: invalid driver image, the address of symbol __KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol __KMDF_CLASS_BIND_END 0x%p, status 0x%x
FxGetNextClassBindInfo failed
FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubInitTypes: invalid driver image, the address of symbol __KMDF_TYPE_INIT_START 0x%p is greater than the address of symbol __KMDF_TYPE_INIT_END 0x%p, status 0x%x
FxGetNextObjectContextTypeInfo failed
length < NDIS_SIZEOF_STATISTICS_INFO_REVISION_1
! (buffer + length > buffer)
length < NDIS_SIZEOF_RSC_STATISTICS_REVISION_1
STATUS_BUFFER_OVERFLOW
NetAdapterCx Queue Counter
! newApp
! queueControl
! rxScaling
! m_rxScaling
! txScaling
bufferLength % addressLength != 0
! (buffer + bufferLength > buffer)
! m_multicastAddressList.resize(addressCount)
App %lu - RX %zu
App %lu - TX %zu
bufferLength < sizeof(ULONG)
! m_Table.resize( m_Table.count()+1)
! row.resize(Count)
!dot11Context
!m_NblPool
length < NDIS_SIZEOF_OFFLOAD_PARAMETERS_REVISION_3
length < NDIS_SIZEOF_OFFLOAD_ENCAPSULATION_REVISION_1
*RssBaseProcGroup
*RssMaxProcGroup
*RssBaseProcNumber
*RssMaxProcNumber
! m_affinitizedQueues.resize(m_maxProcessorIndex - m_minProcessorIndex + 1)
! m_indirectionTable.resize(capabilities.NumberOfIndirectionTableEntries)
Parameters.HashInformation == 0
WI_AreAllFlagsClear(Parameters.HashInformation, hashTypeMask)
WI_IsAnyFlagSet(Parameters.HashInformation, reservedHashFunction)
WI_IsFlagClear(Parameters.HashInformation, hashFunctionMask)
size != sizeof(m_hashSecretKey)
key == nullptr
! translatedEntries.resize(Parameters.NumberOfIndirectionTableEntries)
length < NDIS_SIZEOF_RECEIVE_SCALE_PARAMETERS_V2_REVISION_1
length < NDIS_SIZEOF_RSS_SET_INDIRECTION_ENTRIES_REVISION_1
parameters->RssEntrySize != sizeof(NDIS_RSS_SET_INDIRECTION_ENTRY)
entries == nullptr
! translatedEntries.resize(parameters->NumberOfRssEntries)
UpdateIndirectionTableEntryStatus( parameters->NumberOfRssEntries, translatedEntries, entries)
! translatedEntries.resize(m_indirectionTable.count())
aGd! m_txQueues.reserve(TxQueueCount)
! m_rxQueues.reserve(RxQueueCount)
! txQueues.resize(TxQueueCount)
! rxQueues.resize(RxQueueCount)
! queue
! queues.resize(RxScaling->GetNumberOfQueues() - m_rxQueues.count())
! m_rxQueues.reserve(RxScaling->GetNumberOfQueues())
! rxQueue
! queues.resize(TxQueueCount - m_txQueues.count())
Z! demux.reserve(Configuration.Count)
!tssDemux
! demux[demux.count() - 1]
V!resize(MdlCount)
!m_MdlStorage
! resize(NdlCount)
!m_NblStorage
! m_layoutParseBuffer.resize(m_datapathCapabilities.NominalMtu)
!RTL_IS_POWER_OF_TWO(IndirectionTableCount)
!m_indirectionTable.resize(IndirectionTableCount)
!blContext
4FBufferPoolConfig->Flag & NET_CLIENT_BUFFER_POOL_FLAGS_SERIALIZATION
STATUS_NOT_IMPLEMENTED
BufferPoolConfig->BufferAlignment > PAGE_SIZE
!RTL_IS_POWER_OF_TWO(BufferPoolConfig->BufferAlignment)
!bufferManager
!pool
!m_BuffersRef.resize(m_PoolSize)
!m_BuffersInUseFlag.Initialize(m_PoolSize)
!resize(m_PoolSize)
IsEmpty()
!m_MemoryConstraints.append(*MemoryConstraints)
m_MemoryConstraints.count() > 1
!m_BufferVectorAllocator.get()
actualBufferOffset < BufferAlignmentOffset
actualBufferSize < BufferSize
TxThreadPriority
RxThreadPriority
TxThreadAffinity
RxThreadAffinity
SetTxThreadAffinity
SetRxThreadAffinity
TxReportPerfCounters
TxPerfCountersIterationInterval
RxReportPerfCounters
RxPerfCountersIterationInterval
EcUpdatePerfCounters
AllowDmaHalBypass
DmaBouncePolicy
IgnoreVerifierDebugBreak
! m_temporary.reserve(m_extensions.count() + 1)
! m_extensions.insertSorted(extension, sort)
minio\netcx\adapter\idle\powerreferenceholder.cpp
minio\netcx\adapter\idle\idlestatemachine.cpp
\Registry\Machine\System\CurrentControlSet\Control\NetworkSetup2\Interfaces\{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}\Kernel
IfType
NetLuidIndex
MediaType
hostvnic
y9^b?<
!TxDemux.append(tssDemux)
qFRTd<
*IdleRestriction
!arpOffload
!nsOffload
cT3Mk:V
minio\netcx\adapter\powerpolicy\nxidlerestrictions.cpp
PowerRequiredWorkItemContext
minio\netcx\adapter\powerpolicy\nxpowerreference.cpp
ms_packet_lso
! m_laLookupTable
! m_vaLookupTable
Lower
DpcDuration
%.4S:%wZ-%wZ
NameGenerationError
Execution Context
EC statistics
NxAdapterStateTransition
DevicelessAdapterInterfaceGuid
AdapterNetLuid
AdapterStateTransitionFrom
AdapterStateTransitionEvent
AdapterStateTransitionTo
NxAdapterStateTransition
DeviceBusAddress
AdapterNetLuid
AdapterStateTransitionFrom
AdapterStateTransitionEvent
AdapterStateTransitionTo
NxDeviceStateTransition
DeviceBusAddress
DeviceStateTransitionFrom
DeviceStateTransitionEvent
DeviceStateTransitionTo
Microsoft.Windows.Ndis.NetAdapterCx
Microsoft.Windows.Ndis.NetAdapterCx.Translator
RSDS2,
NetAdapterCx.pdb
.text
.text$mn
.text$mn$00
.text$mn$21
.rdata$brc
.giats
.rdata
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
WilStagingFeatureDescriptors$__m
.data$brc
.data
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.pdata
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
fogrp
.gfids
.rsrc$01
.rsrc$02
KeAcquireSpinLockRaiseToDpc
KeInitializeSpinLock
KeReleaseSpinLock
KeSetEvent
ExAllocatePoolWithTag
ExFreePoolWithTag
KeInitializeEvent
KeWaitForSingleObject
KeEnterCriticalRegion
KeLeaveCriticalRegion
RtlQueryFeatureConfiguration
RtlEqualUnicodeString
ObfDereferenceObject
IoGetDeviceNumaNode
RtlCopyUnicodeString
EtwWriteTransfer
IoFileObjectType
ObReferenceObjectByHandle
IoUnregisterPlugPlayNotificationEx
KeClearEvent
IoRegisterPlugPlayNotification
ZwOpenFile
MmIsDriverVerifyingByAddress
ZwClose
RtlNotifyFeatureUsage
DbgPrintEx
KdRefreshDebuggerNotPresent
_strnicmp
KeReadStateEvent
ExAllocatePool2
RtlUnicodeStringToInteger
DbgkWerCaptureLiveKernelDump
IoWMIDeviceObjectToProviderId
ObfReferenceObject
IoWMIWriteEvent
IofCompleteRequest
_vsnwprintf
KeLowerIrql
KfRaiseIrql
KeGetCurrentIrql
wcsstr
RtlRegisterFeatureConfigurationChangeNotification
EtwSetInformation
RtlInitUnicodeString
RtlQueryFeatureConfigurationChangeStamp
RtlUnregisterFeatureConfigurationChangeNotification
EtwUnregister
MmGetSystemRoutineAddress
EtwRegister
IoWMIRegistrationControl
ntoskrnl.exe
WdfRegisterClassLibrary
WDFLDR.SYS
NdisWdfMiniportDereference
NdisConvertNtStatusToNdisStatus
NdisWdfGetAdapterContextFromAdapterHandle
NdisConvertNdisStatusToNtStatus
NdisOpenConfigurationKeyByName
NdisCloseConfiguration
NdisOpenConfigurationEx
NdisWriteConfiguration
NdisReadNetworkAddress
NdisWdfReadConfiguration
NdisWdfChangeSingleInstance
NdisWdfCloseIrpHandler
NdisWdfDeviceControlIrpHandler
NdisWdfExecuteMethod
NdisWdfGetGuidToOidMap
NdisWdfDeviceInternalControlIrpHandler
NdisWdfQuerySingleInstance
NdisLWMRegisterMiniportDriver
NdisLWMDeregisterMiniportDriver
NdisMDeregisterMiniportDriver
NdisWdfRegisterMiniportDriver
NdisWdfRegisterCx
NdisWdfDeregisterCx
NDIS.SYS
WppAutoLogTrace
WppAutoLogStart
imp_WppRecorderReplay
WppAutoLogStop
WppRecorder.sys
IoAllocateWorkItem
IoFreeWorkItem
IoQueueWorkItem
ExFreePool
ExAcquirePushLockExclusiveEx
ExReleasePushLockExclusiveEx
ExAcquirePushLockSharedEx
ExReleasePushLockEx
ExAcquireRundownProtectionEx
ExReleaseRundownProtectionEx
ExWaitForRundownProtectionRelease
ExReInitializeRundownProtection
ExInitializeRundownProtection
PcwRegister
PcwUnregister
PcwAddInstance
MmBuildMdlForNonPagedPool
IoBuildPartialMdl
MmSizeOfMdl
ZwQuerySystemInformation
KeQueryMaximumProcessorCountEx
KeGetCurrentProcessorNumberEx
ExQueueWorkItem
MmUnmapLockedPages
MmMapLockedPagesSpecifyCache
MmGetPhysicalAddress
KeFlushIoBuffers
RtlInitializeBitMapEx
RtlClearAllBitsEx
RtlSetBitEx
RtlClearBitEx
ExReleaseRundownProtection
ExAcquireRundownProtection
swprintf_s
KeQueryTimeIncrement
RtlStringFromGUID
RtlFreeUnicodeString
KeSetImportanceDpc
KeSetTargetProcessorDpcEx
KeInsertQueueDpc
KeInitializeDpc
RtlRunOnceExecuteOnce
PsCreateSystemThread
ZwSetInformationThread
KeSetBasePriorityThread
KeSetSystemGroupAffinityThread
KeShouldYieldProcessor
KeQueryDpcWatchdogInformation
wcscpy_s
ExAllocateFromNPagedLookasideList
ExFreeToNPagedLookasideList
ExInitializeNPagedLookasideList
ExDeleteNPagedLookasideList
ExWaitForRundownProtectionReleaseCacheAware
KeInitializeMutex
KeReleaseMutex
ExAcquireRundownProtectionCacheAware
ExAllocateCacheAwareRundownProtection
ExReleaseRundownProtectionCacheAware
ExReInitializeRundownProtectionCacheAware
ExFreeCacheAwareRundownProtection
WdfVersionUnbind
WdfLdrQueryInterface
WdfVersionBind
WdfVersionUnbindClass
WdfVersionBindClass
NdisMSendNetBufferListsComplete
NdisMIndicateReceiveNetBufferLists
NdisFreeNetBufferListPool
NdisFreeNetBufferList
NdisAllocateNetBufferAndNetBufferList
NdisAllocateNetBufferListContext
NdisAllocateNetBufferListPool
NdisMSetMiniportAttributes
NdisMIndicateStatusEx
NdisReadConfiguration
NdisAdvanceNetBufferDataStart
NdisRetreatNetBufferDataStart
NdisWdfMiniportStarted
NdisWdfMiniportSetPower
NdisWdfPnpPowerEventHandler
NdisWdfAsyncPowerReferenceCompleteNotification
NdisWdfNotifyWmiAdapterArrival
NdisWdfMiniportTryReference
NdisWdfCreateIrpHandler
NdisWdfQueryAllData
NdisMPauseComplete
NdisMRestartComplete
NdisMOidRequestComplete
NdisWdfPnPAddDevice
NdisWdfMiniportDataPathStart
NdisLWMInitializeNetworkInterface
NdisLWMStartNetworkInterface
NdisLWMUninitializeNetworkInterface
NdisIfGetInterfaceIndexFromNetLuid
NdisGetDataBuffer
NdisFreeFragmentNetBufferList
NdisAllocateFragmentNetBufferList
NdisAdvanceNetBufferListDataStart
NdisCopyReceiveNetBufferListInfo
NdisCopySendNetBufferListInfo
NdisFreeNetBufferListContext
NmrDeregisterClient
NmrClientAttachProvider
NmrWaitForClientDeregisterComplete
NmrRegisterClient
NETIO.SYS
ZwQueryValueKey
ZwOpenKey
__chkstk
wcscmp
t$ WH
KArrH
KArrH
t$ WH
KArrH
KArrH
KArrH
t$ WH
KArrH
NWmiH
NxExH
BTH!B(H!B0!BH!BLH!BP
nxbpH
WATAUAVAWH
KArrH
A_A^A]A\_
L$0H3
D$ H!D$ H
L$8H3
UVWAVAWH
A1/A3
 A_A^_^]
t$ WATAUAVAWH
A_A^A]A\_
H9-'e
p WAVAWH
NrxRH
KArrH
NrxRH
NrxRH
A_A^_
NtxTH
t$ WATAUAVAWH
KArrH
,H;F v
|$(E3
NxRxI
A_A^A]A\_
D$HNxRx
L$PH3
x UATAUAVAWH
TrQuH
D$0E3
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
TrQuH
A_A^A]A\]
WAVAWH
@A_A^_
A8HcI0H
t$ WH
\$ UVWATAUAVAWH
NxRxI
d$(E3
`A_A^A]A\_^]
x ATAVAWH
L9%{;
A_A^A\
NxDmH
KsplH
VWATAVAWH
KsplL
KsplH
A_A^A\_^
t$ WH
KArrH
WATAUAVAWH
|$(E3
t$ E3
t$pL;
0A_A^A]A\_
KArrH
KArrH
KArrH
x AVH
x AVH
nxmvH
T$@E3
nxmaH
nxmaH
nxmaH
nxmvH
KArrH
nxmvH
VWATAVAWH
D$HE3
L$HH3
A_A^A\_^
KHstH
ECNaH
t$ E3
x AVH
HGrmH
KHstH
SThbH
KArrH
t$ WH
KArrH
p WATAUAVAWH
H;l$ 
A_A^A]A\_
L$PH3
WAVAWH
D$8@8k
sCH9+u
H9/u5H
L$@H3
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
MOFDATA
NETADAPTERMOF
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Network Adapter Class Extension for WDF
FileVersion
10.0.22621.586 (WinBuild.160101.0800)
InternalName
NetAdapterCx.sys
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
NetAdapterCx.sys
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.586
VarFileInfo
Translation
pZ1C>1
Z}*5f
NetAdapterCx Queue Counter Set.
NetAdapterCx Queue Counter
NetAdapterCx Queue Counter"Total number of polling iterations
Total Iterations
Total Iterations
Rate of polling iterations
Iterations/Sec
Iterations/Sec#Total number of packets transferred
Packets Transferred
Packets Transferred
Rate of packets transferred
Packets Transferred/Iteration
Packets Transferred/Iteration!Total number of packets Completed
Packets Completed
Packets Completed
Rate of packets Completed
Packets Completed/Iteration
Packets Completed/Iteration
Rate of NBL pending
NBL Pending/Iteration
NBL Pending/Iteration
Average Queue Depth
Average Queue Depth
Average Queue Depth
MOFDATA
MOFDATA
en-US
Z/[<\
TOU:VGX
T+U?UkU
VzW5X
T7V$W
Q;RpRUT
V'WqW
^y^+_
PSQrR
Y3ZQZ
Z4[T\`]]_
QXS}TpU9V
[C[}\
\p^7_
\[]S^F_
SpUlV1WuW
]/^H_
iPlQ9R
[7]!^F^
Q(QIQ#R
S#TLU
^t^I_
R|S2T
T}UJV
P2PPP
XCXWX
Y%Z[ZkZ
PTV.W
X'XoY.Z
SDThT
Ze^U_
T-U/V
P2Q|R
W(XG]p]
_?_w_
RPSBT
WQ^m^
PmR:T
U.U?U
___q_
YLZ<]
TPU~UZV
XIY6Z
[k\5]_^
7PoP&\\^
V;XfX'YHYO[o[
5RTR~T
T<V\VA\S\
S6S:UQUmW
T,T^V
WIXUY
UGV}V
WoZ=[
S)VBV
TbULW
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
220505192315Z
230504192315Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
?/=KzdN
uyL7j
#HMDuV
:Tt3n
v~Bpd
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4700220
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
&go`4
m<&8cx
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,7Y28+lcJrzRTgHDi+fpW4YyE71JrGtNL+b4Gy7k2NgA=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
20220817030010.91Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:2AD4-4B92-FA011%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211028192739Z
230126192739Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:2AD4-4B92-FA011%0#
Microsoft Time-Stamp Service0
6z$WD
IsK6*
L8zp0
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
vFfl|
n{(aM0
"c}FK
^?H4"
g;^z 
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:2AD4-4B92-FA011%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220817052427Z
20220818052427Z0t0:
1,0*0
1(0&0
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
mH7n[
|ED$X
Q~2j,
