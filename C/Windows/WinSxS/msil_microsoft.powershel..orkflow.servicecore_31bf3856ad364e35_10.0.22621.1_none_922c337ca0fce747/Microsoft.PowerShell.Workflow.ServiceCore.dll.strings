!This program cannot be run in DOS mode.
.text
`.rsrc
@.reloc
_,D~Q
,3rd=
%- &(
6.l8!
-B+Hr
`\1;E
Nxs;I
ZvloS
*BSJB
v4.0.30319
#Strings
#GUID
#Blob
!D!c!k!
"M#q#
#5$G$|$
%=%w%
&,&4&<&D&
')'2'8'
(.(X(
(4);)
*-*d*
*=+L+
+T,Z,c,
,*-:-|-E.].
0!050I0d0
2"242>2
3J3f3~3
404Z4c4k4
5!5;5
636F6L6
7'7M7^7
7G8S8_8t8z8
:+;q;
<+<3<A<J<h<
A&A0A6A
 % . p z 
 $!:!K!
$'%1%H%Y%n%
($(J(h(q(z(
*$*v*-+h+q+z+
,-,=,t,},
-0-V-_-
/=0V0]0{0
5/5\5l5u5~5
9J:f:
=!=$=?=H=|=
=O>c>
?/?@?
{!|+}/~/
<>c__DisplayClass20_0
<>9__70_0
<SortStartParameters>b__70_0
<>c__DisplayClass21_0
<>9__51_0
<CreateJob>b__51_0
<>c__DisplayClass51_0
<>9__102_0
<Execute>b__102_0
<>9__22_0
<GetJobsByFilter>b__22_0
<ServiceRequests>b__22_0
<>c__DisplayClass22_0
<>c__DisplayClass172_0
<>9__203_0
<CacheMetadata>b__203_0
<>9__13_0
<RemoteActivityResumeRequired>b__13_0
<>9__33_0
<AddStartParametersFromCollection>b__33_0
<>c__DisplayClass3_0
<>c__DisplayClass64_0
<>c__DisplayClass15_0
<>9__25_0
<.ctor>b__25_0
<>9__85_0
<ClearAll>b__85_0
<>c__DisplayClass116_0
<>c__DisplayClass26_0
<>9__17_0
<AssignRunspaceIfPossible>b__17_0
<>c__DisplayClass17_0
<>c__DisplayClass27_0
<>9__57_0
<GetConnectionForRunspace>b__57_0
<>c__DisplayClass57_0
<>9__97_0
<get_PSDefaultActivitiesAreAllowed>b__97_0
<>c__DisplayClass108_0
<>c__DisplayClass18_0
<>9__98_0
<Update>b__98_0
<>c__DisplayClass8_0
<>c__DisplayClass19_0
<>9__29_0
<GetChildJobsFromRepository>b__29_0
<>c__DisplayClass159_0
<>9__59_0
<ServiceCleanupRequests>b__59_0
<>9__169_0
<GetVariablesToSetInRunspace>b__169_0
<>c__DisplayClass69_0
<>9__0
<GetJobByInstanceId>b__0
<GetJobBySessionId>b__0
<GetJobsByCommand>b__0
<ReleaseRunspace>b__0
<CheckForWorkflowVariableChange>b__0
<GetActivityFromCache>b__0
<CompileActivityAndSaveInCache>b__0
<GetJobsByName>b__0
<GetJobsByState>b__0
<OnComplete>b__0
<DoOperation>b__0
<GetDefinition>b__0
<CheckAndReconnectAfterCrashOrShutdown>b__0
<SetActivityVariables>b__0
<SearchJobsOnV2Parameters>b__0
<InitializeCmdletInstanceParameters>b__0
<Get>b__0
<ServiceOneRequest>b__0
<IsOutOfProcessActivity>b__0
FB329000228CC5A24C264C57139DE8BF854FC86FC18BF1C04AB61A2B5CB4B921
<>9__70_1
<SortStartParameters>b__70_1
<>9__51_1
<ServiceOneRequest>b__51_1
<>9__22_1
<ServiceRequests>b__22_1
<>9__13_1
<RemoteActivityResumeRequired>b__13_1
<>c__DisplayClass116_1
<>c__DisplayClass27_1
<>9__98_1
<Update>b__98_1
<>9__59_1
<ServiceCleanupRequests>b__59_1
<>9__169_1
<GetVariablesToSetInRunspace>b__169_1
<>9__1
<GetJobBySessionId>b__1
<GetConnectionForRunspace>b__1
<GetJobsByState>b__1
<OnComplete>b__1
<GetJobsByFilter>b__1
<SetActivityVariables>b__1
<SearchJobsOnV2Parameters>b__1
Func`1
TimeBasedCache`1
Variable`1
Nullable`1
IEnumerable`1
ConcurrentQueue`1
Stack`1
Item`1
Expression`1
Location`1
Action`1
ICollection`1
PSDataCollection`1
PSMemberInfoCollection`1
ReadOnlyCollection`1
InitialSessionStateEntryCollection`1
EventHandler`1
IEqualityComparer`1
IEnumerator`1
SortedSet`1
HashSet`1
TypedAsyncResult`1
TypedCompletedAsyncResult`1
ArraySegment`1
DelegateInArgument`1
InOutArgument`1
InstancePersistenceEvent`1
Constraint`1
IList`1
Repository`1
Activity`1
Lazy`1
secureString1
shellUri1
credential1
get_Item1
authentication1
connectionInfo1
<>7__wrap1
set_Argument1
certificateThumbprint1
<>m__Finally1
UInt32
ToInt32
<>c__DisplayClass27_2
<currentType>5__2
<parentDebugger>5__2
<>9__2
<SearchJobsOnV2Parameters>b__2
<ServiceOneRequest>b__2
Func`2
Tuple`2
ActivityAction`2
KeyedCollection`2
Converter`2
KeyValuePair`2
PowerShellStreams`2
IDictionary`2
ConcurrentDictionary`2
LoadFromFile2
SaveToFile2
DoSave2
secureString2
shellUri2
credential2
get_Item2
authentication2
connectionInfo2
<>7__wrap2
options2
SerializeObject2
DeserializeObject2
CreateDefault2
set_Argument2
certificateThumbprint2
Encrypt2
<>m__Finally2
<>9__51_3
<ServiceOneRequest>b__51_3
<>c__DisplayClass27_3
<SearchJobsOnV2Parameters>b__3
Tuple`3
get_Item3
<>7__wrap3
PROCESSOR_ARCHITECTURE_IA64
PROCESSOR_ARCHITECTURE_AMD64
Int64
<>c__DisplayClass27_4
<SearchJobsOnV2Parameters>b__4
Func`4
<GetAllWorkflowInstanceIds>d__35
get_UseUTF16
<GetActivityArguments>d__127
<GetCallStack>d__37
__StaticArrayInitTypeSize=18
7DF2F2E92B5F5DEF051BFF1EF74C87DDE5543C1CBD36E139CAF32F9E2E132F68
<Module>
<PrivateImplementationDetails>
get_MaxPersistenceStoreSizeGB
set_MaxPersistenceStoreSizeGB
TokenMaxPersistenceStoreSizeGB
DefaultMaxPersistenceStoreSizeGB
maxPersistenceStoreSizeGB
ConnectionURI
get_UI
PROCESSOR_ARCHITECTURE_INTEL
UseSSL
PROCESSOR_ARCHITECTURE_ARM
IsRunningOnProcessorArchitectureARM
PROCESSOR_ARCHITECTURE_UNKNOWN
SYSTEM_INFO
System.IO
ZeroFreeBSTR
SecureStringToBSTR
value__
Lambda
get_Data
wfMetaData
ProtectedData
GetSerializedData
System.Management.Automation.PerformanceData
System.Diagnostics.PerformanceData
get_InstanceData
get_HasMoreData
get_PrivateData
ConstructObjectFromPrivateData
applicationPrivateData
ConstructPrivateData
_privateData
LoadSerializedStreamData
SaveSerializedStreamData
serializedVerboseStreamData
serializedWarningStreamData
serializedDebugStreamData
serializedInformationStreamData
serializedErrorStreamData
serializedProgressStreamData
serializedInputStreamData
serializedOutputStreamData
PSSessionConfigurationData
sessionConfigurationData
serializedTimerData
PopulateSteamsData
GetObjectData
get_JobMetadata
set_JobMetadata
serializedJobMetadata
CreateJobMetadata
_jobMetadata
LoadSerializedMetadata
SaveSerializedMetadata
HostSettingCommandMetadata
get_HostCommandMetadata
set_HostCommandMetadata
commandMetadata
get_InstanceMetadata
SerializeInstanceMetadata
CacheMetadata
get_PrivateMetadata
set_PrivateMetadata
serializedPrivateMetadata
WorkflowTakesPrivateMetadata
_privateMetadata
GetJobInfoFromMetadata
NativeActivityMetadata
metadata
mscorlib
LoadJob
DoUnloadJob
AddJob
AddChildJob
CreateChildJob
RemoveChildJob
DoSuspendJob
TraceJob
DoLabeledResumeJob
DoResumeJob
CreateJob
DoTerminateJob
RemoveJob
UnblockJob
_syncRemoveChilJob
DoStopJob
AsJob
GetJob
ContainerParentJob
parentJob
StartJob
DoAbortJob
EndCreateNewJob
BeginCreateNewJob
newJob
get_PSWorkflowJob
set_PSWorkflowJob
childWorkflowJob
CheckWorkflowJob
_workflowsBeforeGc
WorkflowLimitBeforeGc
get_ActivitiesCacheCleanupIntervalMSec
set_ActivitiesCacheCleanupIntervalMSec
TokenActivitiesCacheCleanupIntervalMSec
MinActivitiesCacheCleanupIntervalMSec
DefaultActivitiesCacheCleanupIntervalMSec
MaxActivitiesCacheCleanupIntervalMSec
activitiesCacheCleanupIntervalMSec
activitiesCleanupIntervalMSec
get_WSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
set_WSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
TokenWSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
MinWSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
DefaultWSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
MaxWSManPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
wsmanPluginReportCompletionOnZeroActiveSessionsWaitIntervalMSec
get_WorkflowShutdownTimeoutMSec
set_WorkflowShutdownTimeoutMSec
TokenWorkflowShutdownTimeoutMSec
MinWorkflowShutdownTimeoutMSec
DefaultWorkflowShutdownTimeoutMSec
MaxWorkflowShutdownTimeoutMSec
workflowShutdownTimeoutMSec
get_PSActionRetryIntervalSec
set_PSActionRetryIntervalSec
get_PSConnectionRetryIntervalSec
set_PSConnectionRetryIntervalSec
SucceededWorkflowJobsPerSec
SuspendedWorkflowJobsPerSec
FailedWorkflowJobsPerSec
ResumedWorkflowJobsPerSec
StoppedWorkflowJobsPerSec
TerminatedWorkflowJobsPerSec
RunningWorkflowJobsPerSec
ActivityHostMgrFailedRequestsPerSec
ActivityHostMgrIncomingRequestsPerSec
get_TimeoutSec
set_TimeoutSec
get_PSWorkflowApplicationPersistUnloadTimeoutSec
get_WorkflowApplicationPersistUnloadTimeoutSec
set_WorkflowApplicationPersistUnloadTimeoutSec
TokenWorkflowApplicationPersistUnloadTimeoutSec
MinWorkflowApplicationPersistUnloadTimeoutSec
DefaultWorkflowApplicationPersistUnloadTimeoutSec
MaxWorkflowApplicationPersistUnloadTimeoutSec
workflowApplicationPersistUnloadTimeoutSec
get_RemoteNodeSessionIdleTimeoutSec
set_RemoteNodeSessionIdleTimeoutSec
TokenRemoteNodeSessionIdleTimeoutSec
MinRemoteNodeSessionIdleTimeoutSec
DefaultRemoteNodeSessionIdleTimeoutSec
MaxRemoteNodeSessionIdleTimeoutSec
_remoteNodeSessionIdleTimeoutSec
get_ActivityProcessIdleTimeoutSec
set_ActivityProcessIdleTimeoutSec
TokenActivityProcessIdleTimeoutSec
MinActivityProcessIdleTimeoutSec
DefaultActivityProcessIdleTimeoutSec
MaxActivityProcessIdleTimeoutSec
activityProcessIdleTimeoutSec
get_PSActionRunningTimeoutSec
set_PSActionRunningTimeoutSec
activityHostTimeoutSec
EndJobLogic
BeginJobLogic
DoStartJobLogic
System.Collections.Generic
ReactivateSync
SuspendJobAsync
DoResumeJobAsync
UnblockJobAsync
StopJobAsync
DoStartJobAsync
CloseAsync
OpenAsync
get_IsAsync
set_IsAsync
_isAsync
ConnectAsync
ReconnectAsync
DisconnectAsync
startAsync
CommandRunOutOfProc
CimCommandRunInProc
GetRunInProc
runInProc
get_Id
set_Id
get_CurrentManagedThreadId
<>l__initialThreadId
runspaceId
get_InstanceId
set_InstanceId
JobMetadataInstanceId
get_JobInstanceId
set_JobInstanceId
jobInstanceId
storedInstanceId
get_DisconnectedRunspaceInstanceId
set_DisconnectedRunspaceInstanceId
get_DuplicateInstanceId
get_PowerShellInstanceId
CompareBasedOnInstanceId
JobMetadataParentInstanceId
parentInstanceId
get_WorkflowInstanceId
workflowInstanceId
GetJobByInstanceId
get_ActivityInstanceId
_instanceId
referenceId
sourceId
get_TypeId
searchId
taskId
powerShellId
JobMetadataSessionId
JobMetadataParentSessionId
parentSessionId
GetJobBySessionId
get_ActivityDefinitionId
get_ConfigProviderId
_configProviderId
get_OwnerId
get_InstanceOwnerId
_ownerId
get_FullyQualifiedErrorId
errorId
CurrentProcessId
CounterSetId
PSWorkflowId
PSParentActivityId
set_ParentActivityId
activityId
CheckAndStartCallbackServicingThread
CheckAndStartConnectionServicingThread
CheckAndStartServicingThread
get_NeedToStartServicingThread
_needToStartServicingThread
CheckAndStartRequestServicingThread
CheckAndStartCleanupThread
CheckAndStartThrottleManagerThread
CheckAndStartDisconnectReconnectThread
get_CurrentThread
CallDoLoad
EndUnload
ConfigureTimerOnUnload
BeginUnload
GetOrAdd
TryAdd
IsDebuggerStopEventSubscribed
_isOperationsServiced
get_WorkflowInstanceLoaded
set_WorkflowInstanceLoaded
wfAppNeverLoaded
ModulesLoaded
_modulesLoaded
ModulesNotLoaded
get_WorkflowNotLoaded
get_WorkflowAlreadyLoaded
_fullyLoaded
get_Unloaded
set_Unloaded
get_InternalUnloaded
set_InternalUnloaded
SetInternalUnloaded
_internalUnloaded
get_OnUnloaded
set_OnUnloaded
HandleWorkflowApplicationUnloaded
OnWorkflowUnloaded
add_DataAdded
remove_DataAdded
MergeError_DataAdded
HandleErrorDataAdded
get_ItemAdded
CheckFileSignatureAsNeeded
get_RunningTimeExceeded
get_NoWorkflowProvided
get_AsyncResultAlreadyEnded
get_OnSuspended
set_OnSuspended
OnWorkflowSuspended
isUnbounded
add_StateChanged
remove_StateChanged
OnJobStateChanged
HandleRunspaceStateChanged
HandleMyStateChanged
add_ActiveSessionsChanged
remove_ActiveSessionsChanged
get_ActivityNotCached
get_ElapsedTimeReached
get_RunningTimeReached
get_PersistenceSizeReached
PersistenceStoreMaxSizeReached
IsMatched
add_ProcessCrashed
remove_ProcessCrashed
add_Finished
remove_Finished
get_Finished
WorkflowValidationFinished
WorkflowExecutionFinished
ActivityExecutionFinished
ProcessFinished
get_InvalidRunspaceSpecified
GetIsComputerNameSpecified
enableValidationParamSpecified
get_InvalidAsyncResultSpecified
Interlocked
_invoked
_newConnectionMarked
NotMarked
get_Enabled
set_Enabled
get_IsEnabled
enabled
terminalStateHandled
NotHandled
MarkCanceled
HandleWorkflowApplicationCanceled
get_IsCanceled
set_IsCanceled
get_Failed
set_Failed
WorkflowActivityValidationFailed
WorkflowActivityExecutionFailed
get_DependModuleImportFailed
errorExceptionLoadCalled
endCalled
_stopCalled
_elapsedTimerCalled
ReconnectCalled
DisconnectCalled
WorkflowExecutionCancelled
get_IsCancelled
_cancelled
WorkflowCleanupPerformed
ParameterSplattingWasPerformed
BookmarkResumed
WorkflowResumed
CreateJobMetadataWithNoParentDefined
NotDefined
get_OnStopped
set_OnStopped
get_DebuggerStopped
OnWorkflowStopped
PersistIdleTimerInProgressOrTriggered
TimerFired
_timerFired
RemoteActivityResumeRequired
PopulateJobRepositoryIfRequired
InternalBookmarkingRequired
serializationErrorHasOccured
OnWSManServerShuttingDownEventRaised
CompletedAndClosed
get_Disposed
set_Disposed
CheckDisposed
_isDisposed
_streamsDisposed
AssertNotDisposed
disposed
add_Elapsed
remove_Elapsed
PersistUnloadTimer_Elapsed
timer_Elapsed
MaxRunTimeElapsed
HandleTimerElapsed
ValidationTimerElapsed
HandleCleanupTimerElapsed
ShutdownWaitTimerElapsed
HandleCleanupWaitTimerElapsed
Timer_WorkflowTimerElapsed
RetryTimerElapsed
parameterCollectionProcessed
WorkflowActivityValidated
add_BreakpointUpdated
remove_BreakpointUpdated
HandleRunspaceBreakpointUpdated
updated
ParentJobCreated
WorkflowJobCreated
add_ActivityCreated
remove_ActivityCreated
OnActivityCreated
_isPopulated
_repositoryPopulated
get_IsAutoGenerated
set_IsAutoGenerated
CreateRestricted
get_Completed
set_Completed
OnSuspendJobCompleted
OnResumeJobCompleted
OnStopJobCompleted
OnStartJobCompleted
JobActionAsyncCompleted
add_CloseCompleted
remove_CloseCompleted
HandleCloseCompleted
get_OnCompleted
set_OnCompleted
add_OpenCompleted
remove_OpenCompleted
HandleOpenCompleted
HandleWorkflowApplicationCompleted
PostOperationCompleted
SetAsCompleted
get_IsCompleted
_isCompleted
add_ReconnectCompleted
remove_ReconnectCompleted
HandleReconnectCompleted
add_DisconnectCompleted
remove_DisconnectCompleted
HandleDisconnectCompleted
OnWorkflowCompleted
get_AsyncResultAlreadyCompleted
get_OnFaulted
set_OnFaulted
OnWorkflowFaulted
IsPathRooted
get_WorkflowInstanceStateCorrupted
RemoveJobStarted
get_JobCannotBeStarted
OutOfProcessRunspaceStarted
WorkflowValidationStarted
WorkflowExecutionStarted
ActivityExecutionStarted
AllCommandsStarted
NotStarted
notStarted
get_Aborted
set_Aborted
get_OnAborted
set_OnAborted
HandleWorkflowApplicationAborted
WorkflowExecutionAborted
get_SuspendedOrAborted
get_JobSuspendedOrAborted
_jobSuspendedOrAborted
OnWorkflowAborted
get_WFCallingWFNotSupported
get_ValueFromPipelineNotSupported
get_CustomRemotingNotSupported
get_UnblockNotSupported
get_XamlWorkflowsNotSupported
WorkflowPersisted
get_WorkflowInstanceIncompletelyPersisted
ActivityExecutionQueued
saved
get_JobStateRetrieved
set_JobStateRetrieved
JobRemoved
get_WorkflowChildCouldNotBeRemoved
wReserved
get_OneComputerNameAllowed
_powerShellActivitiesAreAllowed
get_PSDefaultActivitiesAreAllowed
get_OnlyOneDefaultParameterCollectionAllowed
get_AsJobandJobNameNotAllowed
IsActivityAllowed
JobMetadataPid
get_AsyncResultNotValid
get_WorkflowNameInvalid
get_Guid
searchGuid
NewGuid
get_WorkflowGuid
NewWorkflowGuid
workflowGuid
_guid
<HostCommandMetadata>k__BackingField
<PSActionRetryIntervalSec>k__BackingField
<PSConnectionRetryIntervalSec>k__BackingField
<TimeoutSec>k__BackingField
<PSActionRunningTimeoutSec>k__BackingField
<Id>k__BackingField
<JobInstanceId>k__BackingField
<DisconnectedRunspaceInstanceId>k__BackingField
<WorkflowInstanceLoaded>k__BackingField
<OnUnloaded>k__BackingField
<OnSuspended>k__BackingField
<IsCanceled>k__BackingField
<Failed>k__BackingField
<OnStopped>k__BackingField
<Disposed>k__BackingField
<OnCompleted>k__BackingField
<OnFaulted>k__BackingField
<OnAborted>k__BackingField
<JobStateRetrieved>k__BackingField
<HelperCommand>k__BackingField
<Namespace>k__BackingField
<Runspace>k__BackingField
<PowerShellInstance>k__BackingField
<PSWorkflowInstance>k__BackingField
<ForceDisableStartOrEndPersistence>k__BackingField
<BuildReturnedCode>k__BackingField
<SourceLanguageMode>k__BackingField
<PSProgressMessage>k__BackingField
<Locale>k__BackingField
<IsWorkflowSuspendable>k__BackingField
<Idle>k__BackingField
<OnIdle>k__BackingField
<WorkflowScriptFile>k__BackingField
<Name>k__BackingField
<CommandName>k__BackingField
<PSApplicationName>k__BackingField
<PSConfigurationName>k__BackingField
<ComputerName>k__BackingField
<PSComputerName>k__BackingField
<ProjectName>k__BackingField
<AssemblyName>k__BackingField
<Runtime>k__BackingField
<EnableRemotingActivityAutoResume>k__BackingField
<CommandExecutionType>k__BackingField
<TimerType>k__BackingField
<ActivityType>k__BackingField
<Verbose>k__BackingField
<PSVerbose>k__BackingField
<Delegate>k__BackingField
<HostPersistenceDelegate>k__BackingField
<ActivateDelegate>k__BackingField
<State>k__BackingField
<RemoteActivityState>k__BackingField
<Value>k__BackingField
<WhatIf>k__BackingField
<Warning>k__BackingField
<PSWarning>k__BackingField
<RunWithCustomRemoting>k__BackingField
<Debug>k__BackingField
<PSDebug>k__BackingField
<ProjectFilePath>k__BackingField
<BuildLogPath>k__BackingField
<ProjectFolderPath>k__BackingField
<PSWorkflowPath>k__BackingField
<AssemblyPath>k__BackingField
<ResourceUri>k__BackingField
<PSConnectionUri>k__BackingField
<CurrentBookmark>k__BackingField
<PSCredential>k__BackingField
<ActionRetryInterval>k__BackingField
<ConnectionRetryInterval>k__BackingField
<PSAuthenticationLevel>k__BackingField
<PowerShell>k__BackingField
<Xaml>k__BackingField
<PSUseSsl>k__BackingField
<BookmarkResumingExtension>k__BackingField
<CLRVersion>k__BackingField
<StoreVersion>k__BackingField
<Session>k__BackingField
<CimSession>k__BackingField
<EnableCompression>k__BackingField
<PSAuthentication>k__BackingField
<Information>k__BackingField
<PSInformation>k__BackingField
<Impersonation>k__BackingField
<Configuration>k__BackingField
<PSDisableSerialization>k__BackingField
<OnPersistableIdleAction>k__BackingField
<WarningAction>k__BackingField
<InformationAction>k__BackingField
<ErrorAction>k__BackingField
<AsyncExecutionCollection>k__BackingField
<Connection>k__BackingField
<PSAllowRedirection>k__BackingField
<FunctionDefinition>k__BackingField
<PSSessionOption>k__BackingField
<EnableEncryption>k__BackingField
<SynchronousExecution>k__BackingField
<ConnectionInfo>k__BackingField
<FailureOnSetup>k__BackingField
<EndLineNumber>k__BackingField
<StartLineNumber>k__BackingField
<EndColumnNumber>k__BackingField
<StartColumnNumber>k__BackingField
<Invoker>k__BackingField
<CustomHandler>k__BackingField
<PSRemotingBehavior>k__BackingField
<Error>k__BackingField
<PSError>k__BackingField
<EnableAllPrivileges>k__BackingField
<PSRequiredModules>k__BackingField
<Streams>k__BackingField
<SupportDisconnectedStreams>k__BackingField
<SessionOptions>k__BackingField
<Parameters>k__BackingField
<ActivityParameters>k__BackingField
<Progress>k__BackingField
<PSProgress>k__BackingField
<ParameterDefaults>k__BackingField
<Results>k__BackingField
<ActionAttempts>k__BackingField
<ActivityObject>k__BackingField
<TypeImplementingCmdlet>k__BackingField
<Result>k__BackingField
<AsyncResult>k__BackingField
<PSActivityEnvironment>k__BackingField
<PSCertificateThumbprint>k__BackingField
<RetryCount>k__BackingField
<ActionRetryCount>k__BackingField
<PSActionRetryCount>k__BackingField
<ConnectionRetryCount>k__BackingField
<PSConnectionRetryCount>k__BackingField
<WorkflowFullScript>k__BackingField
<RetryAttempt>k__BackingField
<PSPort>k__BackingField
<PSPersist>k__BackingField
<WorkflowHost>k__BackingField
<CleanupTimeout>k__BackingField
<Input>k__BackingField
<HelperCommandInput>k__BackingField
<UseDefaultInput>k__BackingField
<Output>k__BackingField
<AppendOutput>k__BackingField
<MergeErrorToOutput>k__BackingField
<ImplementationContext>k__BackingField
<WorkflowContext>k__BackingField
<PSActivityContext>k__BackingField
<IsScriptWorkflow>k__BackingField
<Policy>k__BackingField
<DisconnectedIntentionally>k__BackingField
<Busy>k__BackingField
<Authority>k__BackingField
field
get_Child
CancelChild
AddImplementationChild
Microsoft.Build
TrimEnd
ReleaseResourcesAndCheckForEnd
DecrementRunningCountAndCheckForEnd
StartResumablePSCommand
get_Command
set_Command
JobMetadataCommand
AddCommand
InstancePersistenceCommand
get_InvokeCommand
BeginExecuteOneCommand
InitializeOneCommand
BeginRunOneCommand
CimBaseCommand
CloseRunspaceAndDisposeCommand
RunPowerShellCommand
BeginInvokeOnPowershellCommand
GetComputerNameFromCommand
CompareBasedOnCommand
NewPSWorkflowExecutionOptionCommand
get_MaximumReceivedDataSizePerCommand
_psDebuggerCommand
CreateWorkflowOwnerCommand
DeleteWorkflowOwnerCommand
get_HelperCommand
set_HelperCommand
GetComputerNameAndJobIdForCommand
patternForCommand
GetArgsForCommand
InternalProcessCommand
StopProcessCommand
GetWmiObjectCommand
JobMetadataParentCommand
parentCommand
currentCommand
HandlePromptCommand
LoadWorkflowCommand
SaveWorkflowCommand
ImportWorkflowCommand
GetJobsByCommand
get_MyCommand
EndTryCommand
BeginTryCommand
command
Int32MaxValueDivideByThousand
Append
Suspend
get_NoMatchingWorkflowWasFound
get_JobNotFound
get_ActivityNotFound
set_IsBackground
InvokeWmiMethod
GetMethod
method
ProcessWorkflowInstanceRecord
VerboseRecord
ProcessActivityStateRecord
ProcessCustomTrackingRecord
WarningRecord
DebugRecord
InformationalRecord
InformationRecord
WorkflowInstanceUnhandledExceptionRecord
get_ErrorRecord
TraceErrorRecord
RemotingErrorRecord
AddIdentifierInfoToErrorRecord
GetInnerErrorRecord
IContainsErrorRecord
errorRecord
ProcessRecord
WriteProgressRecord
progressRecord
record
get_Password
ComparePassword
PSHostUserInterface
Replace
get_Namespace
set_Namespace
AddNamespace
get_Runspace
set_Runspace
UnregisterAndReleaseRunspace
CloseRunspace
CloseAndDisposeRunspace
CreateRunspace
BeginSetVariablesInRemoteRunspace
RemoveWorkflowVariablesFromRunspace
GetVariablesToSetInRunspace
CreateHelperFunctionsAndWorkflowMetaDataOnRunspace
OpenRunspace
RunInProcNoRunspace
SetWorkflowVariablesToRunspace
GetConnectionForRunspace
CreateOutOfProcessRunspace
EndGetRunspace
BeginGetRunspace
get_DefaultRunspace
currentRunspace
CreateLocalActivityRunspace
_runspace
ClassNameTrace
get_ParamSpecifiedMoreThanOnce
inheritance
get_Instance
LoadedInstance
CompletedInstance
PersistedInstance
get_AcceptUninitializedInstance
DoSuspendInstance
DoResumeInstance
DoCreateInstance
DoTerminateInstance
get_CompleteInstance
DoExecuteInstance
DoRemoveInstance
_wfInstance
get_PowerShellInstance
set_PowerShellInstance
CreatePowerShellInstance
CimInstance
InitializePSWorkflowApplicationInstance
DoStopInstance
_globalConnectionManagerInstance
PowerShellProcessInstance
_processInstance
GetInstance
AddCounterSetInstance
DoAbortInstance
DoPersistInstance
powerShellWorkflowHostInstance
get_RemovingWrokflowInstance
get_PSWorkflowInstance
set_PSWorkflowInstance
CreatePSWorkflowInstance
RestoreFromWorkflowInstance
get_NoWorkflowInstance
_workflowInstance
ActivityInstance
activityInstance
_instance
AddReference
RemoveReference
IdentityReference
ActionPreference
PSRunInProcessPreference
PSPersistPreference
System.Activities.Persistence
get_ForceDisableStartOrEndPersistence
set_ForceDisableStartOrEndPersistence
CheckForStartOrEndPersistence
ActivityEndPersistence
HandlePersistence
get_WarningMessageForPersistence
get_ErrorMessageForPersistence
Sequence
get_Force
set_Force
_force
get_Source
set_Source
PowerShellTraceSource
GetTraceSource
DebugSource
debugSource
ResetCommandProcessorSource
get_FaultSource
scriptSource
source
get_BuildReturnedCode
set_BuildReturnedCode
System.Collections.Generic.IEqualityComparer<System.Management.Automation.InvocationInfo>.GetHashCode
RunspaceMode
PSLanguageMode
get_LanguageMode
set_LanguageMode
get_NotSupportedLanguageMode
get_SourceLanguageMode
set_SourceLanguageMode
sourceLanguageMode
GetSystemLanguageMode
_languageMode
FileMode
get_OutputBufferingMode
SetDebugMode
WorkflowDebugMode
CompressionMode
WorkflowInstanceCreationMode
creationMode
GetActivityRunMode
SetDebuggerStepMode
get_ProcessDebugCommandNotInDebugStopMode
SystemEnforcementMode
TestMode
get_MaxSessionsPerRemoteNode
set_MaxSessionsPerRemoteNode
TokenMaxSessionsPerRemoteNode
MinMaxSessionsPerRemoteNode
DefaultMaxSessionsPerRemoteNode
MaxMaxSessionsPerRemoteNode
maxSessionsPerRemoteNode
XmlNode
_mode
ActivityTree
activityTree
get_Message
set_Message
get_UnableToStartWorkflowMessageMessage
WriteMessage
warningMessage
get_ProgressPositionMessage
get_InvalidPSParameterCollectionAdditionalErrorMessage
get_ParameterErrorMessage
get_InvalidPSParameterCollectionEntryErrorMessage
get_PSProgressMessage
set_PSProgressMessage
get_StatusMessage
JobMetadataStatusMessage
_statusMessage
message
System.Management.Automation.Language
AddRange
ValidateRange
get_ProvidedValueIsOutOfRange
CheckForWorkflowVariableChange
CompareExchange
get_Cache
get_RunspaceCache
_runspaceCache
set_UseAppDomainLevelModuleCache
GetActivityFromCache
CompileActivityAndSaveInCache
_validationCache
FunctionCache
DefinitionCache
get_WorkflowDetailsCache
_workflowDetailsCache
compiledAssemblyCache
get_ActivityCache
outOfProcessActivityCache
_cache
EndInvoke
BeginInvoke
get_Locale
set_Locale
_wfJobTable
CleanUpWorkflowJobTable
ClearWorkflowManagerInstanceTable
get_NameTable
XmlNameTable
get_SharedTypeTable
_sharedTypeTable
ActivitiesTypeTable
ArgsTable
_currentTable
ClearWorkflowTable
CheckIfSuspendable
IsSuspendable
isSuspendable
get_IsWorkflowSuspendable
set_IsWorkflowSuspendable
get_PSVariable
get_UpdatePreferenceVariable
PipelineVariable
WarningVariable
InformationVariable
AddImplementationVariable
psActivityContextImplementationVariable
ErrorVariable
SetVariable
OutVariable
SetWorkflowDebuggerContextVariable
TransactionAvailable
Nullable
IEnumerable
EmptyEnumerable
IDisposable
Hashtable
AssignRunspaceIfPossible
MaxRunspacesPossible
ToDouble
get_Idle
set_Idle
get_CanInduceIdle
get_PersistableIdle
set_PersistableIdle
HandleWorkflowApplicationPersistableIdle
get_OnIdle
set_OnIdle
HandleWorkflowApplicationIdle
add_OnProcessIdle
remove_OnProcessIdle
OnWorkflowIdle
_idle
RuntimeFieldHandle
RuntimeMethodHandle
RuntimeTypeHandle
GetFieldFromHandle
GetMethodFromHandle
GetTypeFromHandle
get_AsyncWaitHandle
_completedWaitHandle
EventWaitHandle
NoPersistHandle
noPersistHandle
LoadFromFile
ReadScriptFromFile
SaveVersionFile
SerializeAndSaveToFile
get_ScriptFile
get_WorkflowScriptFile
set_WorkflowScriptFile
scriptFile
get_NoMachineProfile
set_TrackingProfile
Compile
IsInRole
WindowsBuiltInRole
Tuple
AddAccessRule
FileSystemAccessRule
ImportPSModule
requiredModule
get_PSDefiningModule
get_DefiningModule
XName
get_Name
set_Name
TranslateMetaDataName
metaDataName
JobMetadataName
get_ParameterCollectionOnlyUsedWithAsJobAndJobName
jobName
funcName
get_PSCommandName
get_CommandName
set_CommandName
variableName
GetRandomFileName
versionFileName
ITypeName
get_TypeName
set_PSJobTypeName
AdapterTypeName
get_BookmarkName
bookmarkName
get_LocalName
get_FullName
get_PSApplicationName
set_PSApplicationName
get_InvocationName
get_PSConfigurationName
set_PSConfigurationName
optionName
get_AppName
set_AppName
folderName
get_UserName
JobMetadataUserName
parameterName
get_PSComputerName
set_PSComputerName
PopulatePSComputerName
get_ComputerName
set_ComputerName
get_CredentialParameterAssignedWithNoComputerName
DefaultComputerName
computerName
patternForName
get_ProjectName
set_ProjectName
GetName
participantName
get_ArgumentName
argumentName
JobMetadataParentName
parentName
_scriptName
DebugContextName
rootWorkflowName
GetJobsByName
get_DisplayName
set_DisplayName
get_AssemblyName
set_AssemblyName
CompiledAssemblyName
compiledAssemblyName
GetRuntimeAssemblyName
GetDirectoryName
set_ActivityName
get_CannotSupplyUriAndComputername
_breakFrame
CallStackFrame
get_Scheme
set_Scheme
_lastGcTime
PSElapsedTime
StartedTime
set_PSEndTime
get_LastUsedDateTime
set_LastUsedDateTime
_lastUsedDateTime
RemainingTime
PSRunningTime
set_PSBeginTime
CalculatePersistenceStoreSizeForFirstTime
StartedAtForFirstTime
firstTime
get_Runtime
set_Runtime
ICommandRuntime
set_CommandRuntime
DirectExecutionActivitiesCommandRuntime
GetPSWorkflowRuntime
_runtime
StartTimerOnResume
get_EnableRemotingActivityAutoResume
set_EnableRemotingActivityAutoResume
get_JobQueuedForResume
WaitOne
get_Line
AppendLine
WriteErrorLine
get_NewLine
activityLine
Combine
sendToPipeline
_testHelperCloseDone
Clone
DataProtectionScope
get_Type
get_IsGenericType
WellKnownSidType
commandType
set_RecordType
ProgressRecordType
CounterSetInstanceType
get_NodeType
XamlNodeType
get_BaseType
get_UpdateType
BreakpointUpdateType
securityCriticalAttributeType
GetReflectionAttributeType
ValueType
get_NewJobWrongType
AccessControlType
controlType
get_AuthenticationType
ActionType
get_CommandExecutionType
set_CommandExecutionType
DetermineCommandExecutionType
get_TimerType
set_TimerType
WorkflowTimerType
timerType
SearchOneFilterType
CounterType
get_JobSourceAdapterType
jobSourceAdapterType
dwProcessorType
get_ProxyAccessType
GetType
CounterSetType
_cmdletType
get_ArgumentType
eventType
get_ActivityType
set_ActivityType
activityType
get_PropertyType
set_ProxyType
FileShare
Compare
Where
System.Core
GetWmiCommandCore
Microsoft.PowerShell.Workflow.ServiceCore
get_InstanceStore
set_InstanceStore
PSWorkflowFileInstanceStore
CreateInstanceStore
CreatePSWorkflowInstanceStore
DeserializeWorkflowMetadataFromStore
DeserializeWorkflowInstanceStateFromStore
DeserializeActivityStateFromStore
DeserializeWorkflowDefinitionFromStore
DeserializeWorkflowErrorExceptionFromStore
DeserializeWorkflowTimerFromStore
LoadWorkflowInstancesFromStore
DeserializeWorkflowStreamsFromStore
DeserializeContextFromStore
_store
HandleFailure
wProcessorArchitecture
Microsoft.Management.Infrastructure
get_UICulture
set_UICulture
get_CurrentUICulture
get_Culture
set_Culture
resourceCulture
get_InvariantCulture
get_CurrentCulture
MethodBase
CounterSetRegistrarBase
get_CurrentCultureIgnoreCase
get_OrdinalIgnoreCase
_servicingThreadRelease
_timerThreadRelease
EncryptFalse
get_PSVerbose
set_PSVerbose
get_Verbose
set_Verbose
WriteVerbose
_connectionToClose
toClose
System.IDisposable.Dispose
TryParse
recurse
StoreJobIdForReuse
RetrieveJobIdForReuse
activityToValidate
TryUpdate
Create
get_Delegate
set_Delegate
set_OnUnloadedDelegate
set_OnSuspenedDelegate
set_OnStoppedDelegate
set_OnCompletedDelegate
set_OnFaultedDelegate
set_OnAbortedDelegate
callSuspendDelegate
get_HostPersistenceDelegate
set_HostPersistenceDelegate
set_OnIdleDelegate
get_ActivateDelegate
set_ActivateDelegate
PrepareSessionDelegate
set_OnPersistableIdleActionDelegate
JobActionWorkerDelegate
MulticastDelegate
ActivityDelegate
Correlate
FunctionBodyTemplate
ResetPopulate
Terminate
get_State
set_State
LoadSerializedJobState
SaveSerializedJobState
serializedJobState
DoSetJobState
get_AsyncState
IsFinishedState
get_UserSuppliedState
expectedState
SafelyHandleFaultedState
HandleWorkflowApplicationFaultedState
get_SuspendNotValidState
get_ResumeNotValidState
AssertValidState
ResetRunspaceState
WorkflowInstanceState
ActivityInstanceState
EditorBrowsableState
searchState
taskState
PerformTaskAtTerminalState
PerformCleanupAtTerminalState
get_SessionState
GetInitialSessionState
PSInvocationState
operationState
get_CompletionState
get_InvalidWorkflowDefinitionState
JobMetadataFilterState
_previousState
GetApartmentState
EnableStreamUnloadOnPersistentState
_unloadStreamsOnPersistentState
WorkflowState
GetJobsByState
LoadSerializedActivityState
SaveSerializedActivityState
serializedActivityState
get_RemoteActivityState
set_RemoteActivityState
deserializedRemoteActivityState
PSWorkflowRemoteActivityState
_remoteActivityState
<>1__state
InternalDelete
DoDelete
RetryDelete
OnSuspendUnloadComplete
OnUnloadComplete
OnComplete
JobCreationComplete
add_OperationComplete
remove_OperationComplete
HandleOperationComplete
RaiseOperationComplete
HandleCloseOperationComplete
Write
CompilerGeneratedAttribute
GeneratedCodeAttribute
DebuggerNonUserCodeAttribute
AttributeUsageAttribute
NeutralResourcesLanguageAttribute
ValidateRangeAttribute
DebuggableAttribute
EditorBrowsableAttribute
ComVisibleAttribute
AssemblyKeyFileAttribute
AssemblyTitleAttribute
IteratorStateMachineAttribute
OutputTypeAttribute
DefaultValueAttribute
TargetFrameworkAttribute
ContainsSecurityCriticalAttribute
XmlAttribute
DebuggerHiddenAttribute
AssemblyDelaySignAttribute
ExtensionAttribute
AssemblyFileVersionAttribute
AssemblyInformationalVersionAttribute
AssemblyConfigurationAttribute
AssemblyDescriptionAttribute
InternalsVisibleToAttribute
MoveToAttribute
ParameterAttribute
AliasAttribute
FlagsAttribute
CompilationRelaxationsAttribute
ReliabilityContractAttribute
AssemblyProductAttribute
CmdletAttribute
AssemblyCopyrightAttribute
RequiredArgumentAttribute
AssemblyCompanyAttribute
ParameterSpecificCategoryAttribute
BehaviorCategoryAttribute
InputAndOutputCategoryAttribute
ConnectivityCategoryAttribute
RuntimeCompatibilityAttribute
Execute
ReadByte
commandQueue
_pendingQueue
StartOperationsFromQueue
TryDequeue
Enqueue
get_Value
set_Value
WroteInstanceMetadataValue
get_IsDeletedValue
oldValue
InstanceValue
get_HasValue
TryGetValue
SetValue
get_DefaultValue
newValue
MaxValue
UpdateCounterByValue
_value
ShouldContinue
CallDoSave
debuggerActive
TryRemove
ReducePersistenceSize
CheckMaxPersistenceSize
dwPageSize
get_CacheSize
FunctionCacheSize
_cacheSize
CurrentPersistenceStoreSize
_firstTimeCalculatingCurrentStoreSize
ActivityHostMgrProcessesPoolSize
get_MaximumReceivedObjectSize
LoadFromFileAndDeserialize
SuppressFinalize
get_WhatIf
set_WhatIf
IndexOf
SerializeablePropertyBag
DeserializePropertyBag
HasFlag
GetHostPersistFlag
GetActivityPersistFlag
LoadConfig
System.Management.Automation.Tracing
NeedToReturnFromServicing
SafelyReturnFromServicing
_isServicing
_isReconnectServicing
NotServicing
System.Runtime.DurableInstancing
System.Activities.DurableInstancing
System.Threading
add_DataAdding
remove_DataAdding
HandleInformationalRecordDataAdding
HandleInformationalDataAdding
HandleInformationDataAdding
RegisterHandlersForDataAdding
UnregisterHandlersForDataAdding
HandleErrorDataAdding
HandleProgressDataAdding
HandleOutputDataAdding
PowerShellInvocation_ErrorAdding
_suspending
set_PacketEncoding
Microsoft.Build.Logging
ResetCaching
System.Activities.Tracking
bookmarking
WorkflowResuming
_resuming
IterationsRemaining
get_Running
get_JobRunning
_jobRunning
IsRunning
System.Runtime.Versioning
get_PSWarning
set_PSWarning
get_Warning
set_Warning
verboseWarning
ThrowErrorOrWriteWarning
get_SerializationWarning
set_IsWarning
IsRecurring
isRecurring
get_FailedString
get_CompletedString
GetLocalizedString
SecureString
get_RunningString
originalString
GetExceptionString
AddIdentifierInfoToString
GetString
_isDisposing
disposing
System.Management.Automation.Remoting
get_RunWithCustomRemoting
set_RunWithCustomRemoting
get_SupportsCustomRemoting
_starting
System.Activities.Hosting
get_WorkflowNotExecuting
ReadToFollowing
get_PersistencePathToolLong
get_PSDebug
set_PSDebug
get_Debug
set_Debug
WriteDebug
tableToSearch
jobsToSearch
IsMatch
ListsMatch
get_InstanceOwnerIdMismatch
get_InstanceVersionMismatch
ComputeStringHash
Flush
GetResolvedProviderPathFromPSPath
System.Xml.XPath
get_Path
set_Path
subPath
resolvedPath
CreateAndEnsureInstancePath
get_PersistencePath
set_PersistencePath
TokenPersistencePath
DefaultPersistencePath
persistencePath
get_VariablePath
get_ProjectFilePath
set_ProjectFilePath
filePath
get_ModulePath
_modulePath
get_InstanceStorePath
_instanceStorePath
IsDefaultStorePath
get_WorkflowStorePath
_workflowStorePath
storePath
get_BuildLogPath
set_BuildLogPath
GetTempPath
get_ProviderPath
get_ProjectFolderPath
set_ProjectFolderPath
GetFolderPath
get_UserPath
WindowsPath
SetPath
_parentPath
get_PSWorkflowPath
set_PSWorkflowPath
get_AssemblyPath
set_AssemblyPath
CompiledAssemblyPath
compiledAssemblyPath
get_RuntimeAssemblyPath
set_RuntimeAssemblyPath
GetRuntimeAssemblyPath
runtimeAssemblyPath
get_DependentAssemblyPath
_dependentAssemblyPath
_path
get_Length
GetSavedStreamDataLength
GetSavedMetadataLength
GetSavedJobStateLength
GetSavedActivityStateLength
ActivityHostMgrFailedRequestsQueueLength
PSRemotingPendingRequestsQueueLength
ActivityHostMgrPendingRequestsQueueLength
PSRemotingForcedToWaitRequestsQueueLength
MaxAllowedPersistencePathLength
GetSavedDefinitionLength
GetSavedErrorExceptionLength
GetSavedTimerLength
GetSavedContextLength
GetDirectoryLength
StartsWith
get_ResourceUri
set_ResourceUri
resourceUri
get_ShellUri
set_ShellUri
CompareShellUri
ActivityHostShellUri
get_PSConnectionUri
set_PSConnectionUri
set_ConnectionUri
CompareConnectionUri
get_Callback
AsyncCallback
RunspaceDisconnectedCallback
AddToPendingCallback
BookmarkCallback
RaiseTerminalCallback
PowerShellInvocationCallback
CompletionCallback
LocalRunspaceProviderCallback
ConnectionManagerCallback
ActivityHostManagerCallback
SetVariablesCallback
ImportRequiredModulesCallback
WaitCallback
SendOrPostCallback
CleanupActivityCallback
_callback
Track
_nestedCallStack
HandleCallStack
UpdateCallStack
GetCallStack
get_SkipCACheck
set_CertCACheck
get_SkipCNCheck
set_CertCNCheck
get_SkipRevocationCheck
set_CertRevocationCheck
DebuggerCheck
get_SyncLock
_syncLock
BindAcquiredLock
syncElapsedLock
MaxPersistenceStoreSizeLock
gcmLock
get_ThisLock
thisLock
get_EndBlock
get_BeginBlock
get_ProcessBlock
get_ModuleScriptBlock
_moduleScriptBlock
get_InvalidBookmark
EndResumeBookmark
duringResumeBookmark
OnResumeBookmark
BeginResumeBookmark
DoResumeBookmark
validateBookmark
CreateBookmark
get_CurrentBookmark
set_CurrentBookmark
bookmark
Microsoft.Build.Framework
dwActiveProcessorMask
WorkflowDeletedFromDisk
_hasMoreDataOnDisk
Marshal
get_PSCredential
set_PSCredential
get_Credential
set_Credential
CompareCredential
CimCredential
get_ProxyCredential
_credential
Normal
System.Management.Automation.Internal
ConstructPrivateDataInternal
CreateJobInternal
ValidateWorkflowInternal
ReactivateWorkflowInternal
System.Security.Principal
PSPrincipal
WindowsPrincipal
retryTotal
op_LessThanOrEqual
get_MarkForRemoval
set_MarkForRemoval
_markForRemoval
set_Interval
WaitInterval
DefaultPSPersistInterval
get_RetryInterval
set_RetryInterval
get_ActionRetryInterval
set_ActionRetryInterval
actionRetryInterval
get_ConnectionRetryInterval
set_ConnectionRetryInterval
connectionRetryInterval
_retryInterval
interval
get_InvalidLabel
label
CheckForCancel
System.Collections.ObjectModel
System.ComponentModel
Parallel
get_Level
TraceLevel
set_ConformanceLevel
get_PSAuthenticationLevel
set_PSAuthenticationLevel
ImpersonationLevel
wProcessorLevel
WriteCommandDetail
CloseAll
noToAll
yesToAll
ClearAll
WaitAll
ConvertAll
kernel32.dll
Microsoft.PowerShell.Workflow.ServiceCore.dll
pwrshplugin.dll
RuntimeAssembly_dll
get_PowerShell
set_PowerShell
CreateDisconnectedPowerShell
EndInvokePowerShell
CancelInvokePowerShell
BeginInvokePowerShell
UpdatePowerShell
DisposeRunspaceInPowerShell
StopPowerShell
GetPowerShell
powershell
get_NewJobDefinitionNull
setToNull
get_XamlNotNull
System.Xml
System.Xaml
get_Xaml
set_Xaml
UpdateFunctionFromXaml
CreateFunctionFromXaml
GenerateFunctionFromXaml
ImportedWorkflowFromXaml
ErrorImportingWorkflowFromXaml
get_WorkflowXaml
set_WorkflowXaml
GetWorkflowXaml
workflowXaml
WorkflowDefinition_xaml
JobMetadata_xml
PrivateMetadata_xml
WorkflowInstanceState_xml
ActivityState_xml
VerboseStream_xml
WarningStream_xml
DebugStream_xml
InformationStream_xml
ErrorStream_xml
ProgressStream_xml
InputStream_xml
OutputStream_xml
Version_xml
ErrorException_xml
Timer_xml
RequiredAssemblies_xml
PSWorkflowCommonParameters_xml
Input_xml
ToBool
ThreadPool
_connectionPool
System.Security.AccessControl
GetAccessControl
SetAccessControl
get_PSUseSsl
set_PSUseSsl
get_UseSsl
set_UseSsl
_useSsl
FileStream
get_VerboseStream
set_VerboseStream
get_WarningStream
set_WarningStream
get_DebugStream
set_DebugStream
get_InformationStream
set_InformationStream
GZipStream
get_ErrorStream
set_ErrorStream
get_ProgressStream
set_ProgressStream
get_InputStream
set_InputStream
get_OutputStream
set_OutputStream
CreateOutputStream
MemoryStream
get_NameNotSpecifiedForParam
get_ValueNotSpecifiedForParam
get_Item
set_Item
AddItem
QueueUserWorkItem
ProjectItem
GetItem
_currentItem
System
isGenericCim
LoadFrom
IsAssignableFrom
CopyUpdatedValuesFrom
get_ImportingWorkflowFrom
get_AuthenticationMechanism
set_AuthenticationMechanism
ConvertPSAuthenticationMechanismToCimPasswordAuthenticationMechanism
CertificateAuthenticationMechanism
psAuthenticationMechanism
_authenticationMechanism
System.Management.Automation.Remoting.WSMan
resourceMan
ToBoolean
op_GreaterThan
op_LessThan
TimeSpan
PrivateDataToken
NameToken
ValueToken
ParamToken
token
_connectionToOpen
toOpen
get_IsOpen
get_Column
wProcessorRevision
IWorkflowInstanceExtension
PSWorkflowInstanceExtension
get_BookmarkResumingExtension
set_BookmarkResumingExtension
GetExtension
HostExtension
GetFileNameWithoutExtension
get_InvalidWorkflowExtension
extension
get_CLRVersion
set_CLRVersion
get_Version
get_InstanceVersion
PersistenceVersion
get_StoreVersion
set_StoreVersion
_version
get_Session
set_Session
PrepareSession
prepareSession
ReleaseSession
get_CimSession
set_CimSession
get_SuspendedJobRecoveredFromPreviousSession
GetSession
System.IO.Compression
get_EnableCompression
set_EnableCompression
enableCompression
get_UseCompression
get_Expression
MethodCallExpression
MemberExpression
ParameterExpression
ConstantExpression
NewExpression
NewArrayExpression
UnaryExpression
session
InstanceStorePermission
get_UninitializedSpecification
ModuleSpecification
specification
DisposeWorkflowApplication
EndStartWorkflowApplication
BeginStartWorkflowApplication
workflowApplication
get_PSAuthentication
set_PSAuthentication
CompareAuthentication
get_CredentialParameterCannotBeSpecifiedWithNegotiateWithImplicitAuthentication
get_ProxyAuthentication
get_Location
JobMetadataLocation
get_ObjectWasCreatedAtNotAllowedLocation
SetLocation
_location
BeginPowerShellInvocation
get_MyInvocation
System.Activities.Validation
get_EnableValidation
set_EnableValidation
TokenEnableValidation
DefaultEnableValidation
enableValidation
parameterValidation
AssertValidation
propogation
TrackingGuidContainerParentJobCorrelation
WorkflowRuntimeCompilation
System.Management.Automation
get_PSInformation
set_PSInformation
get_Information
set_Information
WriteInformation
UnhandledExceptionAndTermination
get_Impersonation
set_Impersonation
NamespaceDeclaration
CodeGeneration
AsyncOperation
ThrottleOperation
CloseOperation
CreateOperation
OpenOperation
DoOperation
CloseOneAndOpenAnotherOperation
ReconnectOperation
DisconnectOperation
SubmitOperation
get_CurrentOperation
set_CurrentOperation
operation
System.Activities.XamlIntegration
set_Duration
get_Configuration
set_Configuration
PSSessionConfiguration
PSWorkflowSessionConfiguration
get_ActivityHostConfiguration
_configuration
GetImplementation
Microsoft.Build.Evaluation
CheckAndLoadInstanceForReactivation
DoLoadInstanceForReactivation
System.Globalization
System.Runtime.Serialization
get_PSDisableSerialization
set_PSDisableSerialization
GetDisableSerialization
get_Action
get_RecommendedAction
set_RecommendedAction
PSPersistableIdleAction
get_OnPersistableIdleAction
set_OnPersistableIdleAction
DoGetPersistableIdleAction
OnWorkflowPersistableIdleAction
get_ResumeAction
ActivityOnResumeAction
DebuggerResumeAction
resumeAction
IsTerminalStateAction
get_WarningAction
set_WarningAction
get_RetryingAction
CheckForTerminalAction
get_InformationAction
set_InformationAction
UnhandledExceptionAction
SetDebuggerAction
get_ErrorAction
set_ErrorAction
WorkflowUnhandledErrorAction
PSWorkflowErrorAction
CheckBreakpointAction
get_ErrorWhileExecutingActivityAction
op_Subtraction
get_CurrentPSTransaction
System.Reflection
ICollection
_remoteRunspaceIdCollection
CommandCollection
EndRunGarbageCollection
BeginRunGarbageCollection
enumerateCollection
ValueCollection
AddStartParametersFromCollection
CheckIfBookmarkExistInCollection
get_AsyncExecutionCollection
set_AsyncExecutionCollection
asyncExecutionCollection
PSParameterCollection
CommandParameterCollection
commandParameterCollection
MergeParameterCollection
defaultsParameterCollection
parameterCollection
PropertyDescriptorCollection
LockObjectsCollection
ProjectCollection
attributeAstCollection
PSInputCollection
_inputCollection
KeyCollection
collection
get_Connection
set_Connection
ValidateConnection
CreateConnection
get_RetryingConnection
AssignConnection
_currentConnection
DisablePSWorkflowConnection
_connection
get_Direction
ArgumentDirection
get_PSAllowRedirection
set_PSAllowRedirection
SetAccessRuleProtection
SetVariableFunction
StepOutOfFunction
StepIntoFunction
innerfunction
PerformWSManPluginReportCompletion
ChildWorkflowJobAddition
get_Definition
get_PSWorkflowJobDefinition
AsWorkflowJobDefinition
workflowJobDefinition
jobDefinition
LoadSerializedDefinition
SaveSerializedDefinition
get_ModuleDefinition
_moduleDefinition
GetGenericTypeDefinition
firstTimeStoringDefinition
get_XamlDefinition
_outerFnXamlDefinition
_xamlDefinition
get_FunctionDefinition
set_FunctionDefinition
GetDefinition
get_PSWorkflowDefinition
set_PSWorkflowDefinition
_definition
set_DisplayScriptPosition
ActivityPosition
_activityPosition
PSSessionTypeOption
get_PSSessionOption
set_PSSessionOption
_psSessionOption
pssessionOption
PSWorkflowExecutionOption
caption
IOException
get_Exception
InvalidDataException
CryptographicException
get_UnhandledException
get_OnUnhandledException
set_OnUnhandledException
HandleWorkflowApplicationUnhandledException
unhandledException
JobFailedException
PipelineStoppedException
ObjectDisposedException
runspaceDisconnectedException
NotImplementedException
PSNotSupportedException
HandleRunOneCommandException
FileNotFoundException
ItemNotFoundException
DirectoryNotFoundException
ThrowInvalidRunspaceException
TraceException
NullReferenceException
RuntimeException
CheckForSevereException
PSRemotingDataStructureException
ParseException
InvalidJobStateException
RemoteException
SetValueException
PathTooLongException
DoResumeJobCatchException
XPathException
allowBreakException
PSArgumentNullException
ValidationException
AccessViolationException
get_TerminationException
PSInvalidOperationException
SerializationException
get_InnerException
LoadSerializedErrorException
SaveSerializedErrorException
serializedErrorException
get_SerializationErrorException
_errorException
UnauthorizedAccessException
ProcessException
FormatException
InvalidDataContractException
PSRemotingTransportRedirectException
PSArgumentException
PSRemotingTransportException
transportException
PSInvalidCastException
TimeoutException
StackOverflowException
SecurityException
_exception
verboseDescription
statusDescription
option
get_EnableEncryption
set_EnableEncryption
enableEncryption
get_PersistWithEncryption
set_PersistWithEncryption
TokenPersistWithEncryption
DefaultPersistWithEncryption
persistWithEncryption
get_NoEncryption
set_NoEncryption
set_Assertion
System.Runtime.ConstrainedExecution
PersistBeforeExecution
UpdateImplementationContextForLocalExecution
useCurrentThreadForExecution
WorkflowLoadedForExecution
LoadingWorkflowForExecution
get_SynchronousExecution
set_SynchronousExecution
EndWorkflowExecution
CancellingWorkflowExecution
BeginWorkflowExecution
get_Reason
set_Reason
JobMetadataStateReason
get_DebuggerStopReason
ShouldProcessReason
shouldProcessReason
get_ExitReason
reason
StringComparison
WildcardPattern
MessagePattern
functionNamePattern
PrepareAndRun
commandToRun
add_ShuttingDown
CheckAndReconnectAfterCrashOrShutdown
Unknown
TryConvertTo
CopyTo
FieldInfo
CommandInfo
MethodInfo
FileInfo
PSModuleInfo
CultureInfo
get_JobStateInfo
get_PreviousJobStateInfo
get_RunspaceStateInfo
PSInvocationStateInfo
get_InvocationStateInfo
PathInfo
BookmarkInfo
CheckXamlInfo
TraceThreadPoolInfo
FileSystemInfo
lpSystemInfo
GetSystemInfo
get_InvocationInfo
JobInvocationInfo
jobInvocationInfo
CreateInvocationInfo
invocationInfo
SerializationInfo
get_ConnectionInfo
set_ConnectionInfo
RunspaceConnectionInfo
get_OriginalConnectionInfo
WSManConnectionInfo
GetConnectionInfo
ActivityHostConnectionInfo
_connectionInfo
PSMemberInfo
ProviderInfo
PSSenderInfo
_senderInfo
StringContainsIdentifierInfo
get_UserInfo
CounterInfo
ConstructorInfo
PSWorkflowPerformanceCounterSetInfo
PSActivityArgumentInfo
UpdateScriptInfo
RequestInfo
requestInfo
WorkflowInfo
get_CategoryInfo
ErrorCategoryInfo
DirectoryInfo
ActivityInfo
PSPropertyInfo
asyncOp
CleanUp
UpdateSourceMap
functionSourceMap
_funcToSourceMap
AddWorkflowFunctionToMap
_timerMap
ParseScriptForMap
_funcToValidLineNumbersMap
Sleep
BeginStop
EvaluateForStop
_inProcActivityLookup
DoCleanup
RaiseCallbacksAfterCleanup
RequestCleanup
get_ActivityParameterGroup
get_InputAndOutputGroup
get_ConnectivityGroup
BeginRunspaceInitializeSetup
get_FailureOnSetup
set_FailureOnSetup
onSetup
System.Xml.Linq
System.Linq
psRunningTimeoutDelayActivityInstanceVar
Clear
PSCounterSetRegistrar
get_RecordNumber
get_EndLineNumber
set_EndLineNumber
get_StartLineNumber
set_StartLineNumber
get_EndColumnNumber
set_EndColumnNumber
get_StartColumnNumber
set_StartColumnNumber
get_Tracer
StructuredTracer
_structuredTracer
etwTracer
_tracer
StringReader
XamlXmlReader
XamlReader
TextReader
get_RemoteRunspaceProvider
CreateRemoteRunspaceProvider
get_LocalRunspaceProvider
get_UnboundedLocalRunspaceProvider
_unboundedLocalRunspaceProvider
CreateLocalRunspaceProvider
ResetLocalRunspaceProvider
_localRunspaceProvider
IsDisconnectedByRunspaceProvider
_runspaceProvider
get_InvokeProvider
AddDefaultExtensionProvider
PSWorkflowConfigurationProvider
IFormatProvider
StringBuilder
instanceFolder
SpecialFolder
sender
GetBuffer
OutBuffer
get_JobManager
wfJobManager
GetJobManager
PSWorkflowJobManager
SetWorkflowJobManager
_jobManager
XmlNamespaceManager
get_ResourceManager
WorkflowInstanceExtensionManager
AsyncOperationManager
GetGlobalCimConnectionManager
IsServerManager
PSEventManager
ShutdownWorkflowManager
_manager
ILogger
FileLogger
ConsoleLogger
get_Debugger
IJobDebugger
get_PSWorkflowDebugger
get_JobStoppedByDebugger
_debugger
JobIdentifier
LoadJobWithIdentifier
SecurityIdentifier
identifier
get_Invoker
set_Invoker
_currentInvoker
ActivityInvoker
invoker
ExecuteOneRunspaceFreeCommandWorker
InitializeRunspaceAndExecuteCommandWorker
JobActionWorker
DisconnectReconnectWorker
RunPowerShellInActivityHostWorker
add_Handler
remove_Handler
set_Handler
WorkflowTimerElapsedHandler
get_CustomHandler
set_CustomHandler
operationHandler
CheckAndAddStateChangedEventHandler
ElapsedEventHandler
ActivityCreatedEventHandler
handler
System.CodeDom.Compiler
get_PSActivityHostController
CreatePSActivityHostController
PSResumableActivityHostController
_activityHostController
RunInActivityController
PSOutOfProcessActivityController
PSTimer
get_Timer
set_Timer
DisposePersistUnloadTimer
StartPersistUnloadTimer
ElapsedTimer
LoadSerializedTimer
SaveSerializedTimer
IsOneTimeTimer
isOneTimeTimer
RunningTimer
cancelTimer
_validationTimer
_shutdownTimer
StopTimer
_cleanupTimer
SetupTimer
StartTimer
PSWorkflowTimer
_timer
XContainer
AsyncCompleteContainer
get_IsRunspaceOwner
get_InstanceOwner
BindInstanceOwner
CreateWorkflowOwner
DeleteWorkflowOwner
StringComparer
_invocationComparer
InvocationInfoComparer
get_User
AddParameter
CommandParameter
SwitchParameter
GetUbiquitousParameter
Delimiter
GetJobsByFilter
filter
Enter
ObjectCounter
WorkflowJobSourceAdapter
computer
set_XmlResolver
SymbolResolver
ToLower
NetDataContractSerializer
XmlObjectSerializer
PSPerfCountersMgr
_perfCountersMgr
get_Behavior
get_PSRemotingBehavior
set_PSRemotingBehavior
get_PSError
set_PSError
get_Error
set_Error
JobError
_suppressTerminateError
WriteError
JobRemoveError
ThrowTerminatingError
PSSuspendOnError
WorkflowValidationError
WorkflowExecutionError
suppressError
HandleTransportError
_wfValidator
PSWorkflowValidator
GetWorkflowValidator
IEnumerator
CacheEnumerator
_tableEnumerator
_configEnumerator
GetConnectionEnumerator
_connectionEnumerator
System.Collections.Generic.IEnumerable<Microsoft.PowerShell.Workflow.PSWorkflowId>.GetEnumerator
System.Collections.Generic.IEnumerable<System.Management.Automation.CallStackFrame>.GetEnumerator
System.Collections.Generic.IEnumerable<Microsoft.PowerShell.Activities.PSActivityArgumentInfo>.GetEnumerator
System.Collections.IEnumerable.GetEnumerator
IDictionaryEnumerator
_dictionaryEnumerator
Activator
.ctor
.cctor
Monitor
CustomTypeDescriptor
MemberDescriptor
PropertyDescriptor
IntPtr
DefaultCleanupWaitTimerIntervalMs
Metadatas
_metadatas
get_ChildJobs
UnloadAllJobs
_waitForJobs
GetJobs
workflowJobs
PSVariableIntrinsics
PathIntrinsics
CommandInvocationIntrinsics
ItemCmdletProviderIntrinsics
System.Diagnostics
GetAllWorkflowInstanceIds
PSWorkflowPerformanceCounterIds
CheckAndStartRequiredThreads
DecrementHostCountAndStartThreads
Microsoft.PowerShell.Commands
StopAllResumablePSCommands
get_Commands
set_Commands
runningCommands
commands
FromSeconds
_timeoutInSeconds
StartPersistUnloadWithZeroSeconds
timeoutSeconds
delaySeconds
get_TotalMilliseconds
FromMilliseconds
NativeMethods
System.Management.Automation.Runspaces
get_MaxInProcRunspaces
TokenMaxInProcRunspaces
DefaultMaxInProcRunspaces
_maxInProcRunspaces
ArgsTableForRunspaces
GetRunspaces
DefaultMaxRunspaces
_maxRunspaces
get_WorkflowGuidForTraces
ActivityXamlServices
ActivityValidationServices
System.Runtime.InteropServices
System.Runtime.CompilerServices
System.Resources
Resources.resources
DebuggingModes
DebugModes
SelectNodes
get_EnableAllPrivileges
set_EnableAllPrivileges
get_InstanceMetadataChanges
get_RequiredAssemblies
serializedRequiredAssemblies
_requiredAssemblies
PowerShellActivitiesAssemblies
get_DependentAssemblies
set_DependentAssemblies
_dependentAssemblies
get_Queries
GetDirectories
SessionCapabilities
Microsoft.PowerShell.Activities
System.Activities
_cachedActivities
AllowedSystemActivities
MandatorySystemActivities
PSDefaultActivities
get_Properties
GetProperties
get_Variables
_wfMetaVariables
UpdatePreferenceVariables
WorkflowPreferenceVariables
UpdateVariables
UserVariables
ExpandEnvironmentVariables
SetActivityVariables
activityVariables
_variables
LoadDefaultTypeFiles
GetDefaultTypeFiles
ActivitiesTypesFiles
GetFiles
get_Modules
get_PSRequiredModules
set_PSRequiredModules
InitializeActivityEnvironmentAndAddRequiredModules
BeginImportRequiredModules
_modules
computerNames
_scriptLines
get_Types
SearchAllFilterTypes
WorkflowFilterTypes
PipelineResultTypes
componentTypes
_stores
checkSignatures
_numberOfUses
InitializeActivityHostProcesses
_hostProcesses
get_MaxActivityProcesses
set_MaxActivityProcesses
TokenMaxActivityProcesses
MinMaxActivityProcesses
DefaultMaxActivityProcesses
MaxMaxActivityProcesses
maxActivityProcesses
set_DisableFormatUpdates
get_States
get_Attributes
workflowAttributes
AddMinutes
GcDelayInMinutes
writtenTotalBytes
get_Values
hostValues
LanguagePrimitives
InheritanceFlags
BindingFlags
PropagationFlags
CompareOtherWSManSettings
PSInvocationSettings
ValidationSettings
XamlXmlReaderSettings
XamlReaderSettings
CompareProxySettings
settings
GetDebuggerStopArgs
PSEventArgs
DataAddedEventArgs
ActiveSessionsChangedEventArgs
ActivityHostCrashedEventArgs
ElapsedEventArgs
elapsedEventArgs
BreakpointUpdatedEventArgs
ActivityCreatedEventArgs
AsyncCompletedEventArgs
WorkflowApplicationCompletedEventArgs
WorkflowApplicationAbortedEventArgs
WorkflowApplicationIdleEventArgs
JobStateEventArgs
RunspaceStateEventArgs
DataAddingEventArgs
WorkflowApplicationEventArgs
WorkflowApplicationUnhandledExceptionEventArgs
DebuggerStopEventArgs
_debuggerStopEventArgs
WorkflowStatusEventArgs
PSJobStartEventArgs
eventArgs
SavedComponentLengths
<>4__this
ServiceCallbacks
_isServicingCallbacks
AddToPendingCallbacks
_callbacks
get_EnumeratorNeverBlocks
set_EnumeratorNeverBlocks
get_Bookmarks
GetBookmarks
bookmarks
GetTasks
AddDestinationCredentials
AddProxyCredentials
System.Collections.Generic.IEqualityComparer<System.Management.Automation.InvocationInfo>.Equals
listOfLabels
FunctionDetails
get_ErrorDetails
set_ErrorDetails
WorkflowDetails
details
DebuggerUtils
WorkflowUtils
ActivityUtils
get_SupportDisconnectedPSStreams
get_Streams
set_Streams
PSDataStreams
DoLoadJobStreams
SelfUnloadJobStreams
DoUnloadJobStreams
get_SupportDisconnectedStreams
set_SupportDisconnectedStreams
supportDisconnectedStreams
closeStreams
DisposeStreams
RemoveHandlersFromStreams
removeHandlersFromStreams
AddHandlersToStreams
_streams
allParams
ActivityParams
GetItems
System.Security.Claims
Contains
get_Extensions
GetAdditionalExtensions
ConfigureAllExtensions
PSWorkflowExtensions
CreateWorkflowExtensions
get_MaxConnectedSessions
set_MaxConnectedSessions
TokenMaxConnectedSessions
MinMaxConnectedSessions
DefaultMaxConnectedSessions
MaxMaxConnectedSessions
_maxConnectedSessions
get_MaxDisconnectedSessions
set_MaxDisconnectedSessions
TokenMaxDisconnectedSessions
MinMaxDisconnectedSessions
DefaultMaxDisconnectedSessions
MaxMaxDisconnectedSessions
_maxDisconnectedSessions
availableSessions
System.Linq.Expressions
System.Text.RegularExpressions
SetDirectoryPermissions
MaxIterations
System.Collections
_createdConnections
_maxOutBoundConnections
_currentConnections
connections
CreateWorkflowExtensionCreationFunctions
GetWorkflowDebuggerFunctions
set_IgnoreProcessingInstructions
Microsoft.Management.Infrastructure.Options
get_Options
PSThreadOptions
set_ThreadOptions
WildcardOptions
InstanceValueOptions
_wfOptions
ScopedItemOptions
get_SessionOptions
set_SessionOptions
CompareSessionOptions
CimSessionOptions
cimSessionOptions
WSManSessionOptions
SetSessionOptions
sessionOptions
StringSplitOptions
RegexOptions
set_ExposeFlowControlExceptions
exceptions
options
StopAllAsyncExecutions
RemoveInheritablePermissons
_isServicingCleanups
get_DebuggerCannotModifyWFVars
get_Chars
_validWFLineNumbers
ConfigureWorkflowHandlers
System.Timers
deserializedTimers
SetupTimers
StartTimers
_timers
RuntimeHelpers
ContainsWildcardCharacters
set_CheckCharacters
SearchJobsOnV2Parameters
get_Parameters
set_Parameters
WorkflowSpecificParameters
InitializeCmdletInstanceParameters
AddCommonWfParameters
get_CommonParameters
GetMetaDataAndCommonParameters
get_PSWorkflowCommonParameters
set_PSWorkflowCommonParameters
serializedPSWorkflowCommonParameters
_psWorkflowCommonParameters
workflowCommonParameters
commonParameters
get_StartParameters
set_StartParameters
SortStartParameters
get_WorkflowParameters
set_WorkflowParameters
serializedWorkflowParameters
_workflowParameters
get_ActivityParameters
set_ActivityParameters
activityParameters
parameters
filters
_cleanupComputers
parentComputers
WaitForPendingFinalizers
get_Errors
get_HadErrors
_resumeErrors
errors
dwNumberOfProcessors
FileAccess
set_EnableNetworkAccess
_useJobIPCProcess
ShouldProcess
SafelyDisposeProcess
OutOfProcess
RunInProcess
GetCurrentProcess
CreateNewActivityHostProcess
process
lpMinimumApplicationAddress
lpMaximumApplicationAddress
get_PSProgress
set_PSProgress
get_Progress
set_Progress
WriteProgress
wfSuspendInProgress
get_JobSuspensionInProgress
IsShutdownInProgress
get_JobStopInProgress
NotInProgress
progress
get_Formats
lockObjects
AttributeTargets
Microsoft.Management.Infrastructure.CimCmdlets
FileSystemRights
rights
_disablePersistenceLimits
_paramDefaults
LoadFromDefaults
get_ParameterDefaults
set_ParameterDefaults
HostParameterDefaults
parameterDefaults
defaults
get_Results
set_Results
AsyncResults
DebuggerCommandResults
ProcessValidationResults
PSWorkflowValidationResults
validationResults
MergeMyResults
results
Constants
Elements
System.Activities.Statements
get_Statements
statements
set_IgnoreComments
get_Arguments
GetGenericArguments
get_NamedArguments
RunCommandsArguments
GetActivityArguments
arguments
InternalStoreComponents
WorkflowStoreComponents
components
returnParents
get_Events
RaiseEvents
WSManServerChannelEvents
SubscribeWorkflowApplicationEvents
get_AdditionalConstraints
_variableBreakPoints
_lineBreakPoints
breakPoints
get_Breakpoints
_commandBreakpoints
SetBreakpoints
_initalParentBreakpoints
get_ActionAttempts
set_ActionAttempts
attempts
attributeAsts
_failedRequests
ServiceRequests
_pendingRequests
_inComingRequests
ServiceCleanupRequests
_requests
get_Exists
ValidateIfLabelExists
_busyHosts
MinActivityHosts
get_Outputs
_gcStatus
get_CompilationErrorWhileBuildingWorkflows
get_MaxRunningWorkflows
set_MaxRunningWorkflows
TokenMaxRunningWorkflows
MinMaxRunningWorkflows
DefaultMaxRunningWorkflows
MaxMaxRunningWorkflows
maxRunningWorkflows
CreateJobsFromWorkflows
get_DependentWorkflows
_dependentWorkflows
get_Keys
RemoveAt
ElementAt
Concat
PrivateDataFormat
GetInitialSessionStateWithSharedTypesAndNoFormat
Subtract
get_IsAbstract
AsPSObject
_servicingThreadSyncObject
get_TimerServicingSyncObject
_timerServicingSyncObject
_resumeErrorSyncObject
_syncObject
ReadObject
get_BaseObject
WriteObject
SerializeObject
DeserializeObject
RemoveLockObject
GetLockObject
psObject
get_TargetObject
ManagementObject
set_InputObject
get_ActivityObject
set_ActivityObject
activityObject
object
Template_Project
LoadProject
Select
Collect
get_ReadyForReconnect
set_ReadyForReconnect
_readyForReconnect
get_ActivityFailedDueToRunspaceDisconnect
DoNotCheckForDisconnect
_checkForDisconnect
get_ReadyForDisconnect
set_ReadyForDisconnect
_readyForDisconnect
Protect
Unprotect
CreateValidScriptLineSet
get_Target
originalTarget
target
PSCmdlet
wrappedCmdlet
get_TypeImplementingCmdlet
set_TypeImplementingCmdlet
System.Collections.IEnumerator.Reset
set_AutoReset
TimerReset
get_Offset
get_Left
FindBreakpointHit
op_Implicit
Split
get_ValidationCacheLimit
TokenValidationCacheLimit
DefaultValidationCacheLimit
_validationCacheLimit
get_CompiledAssemblyCacheLimit
TokenCompiledAssemblyCacheLimit
DefaultCompiledAssemblyCacheLimit
_compiledAssemblyCacheLimit
get_OutOfProcessActivityCacheLimit
TokenOutOfProcessActivityCacheLimit
DefaultOutOfProcessActivityCacheLimit
_outOfProcessActivityCacheLimit
get_SessionThrottleLimit
set_SessionThrottleLimit
TokenSessionThrottleLimit
MinSessionThrottleLimit
DefaultSessionThrottleLimit
MaxSessionThrottleLimit
sessionThrottleLimit
_throttleLimit
MaxCimSessionsUpperLimit
MaxCimSessionsLowerLimit
CommonInit
NewArrayInit
CreateDefault
PopulateParameterFromDefault
SingleOrDefault
GetValueOrDefault
FirstOrDefault
default
get_Result
set_Result
IAsyncResult
TAsyncResult
get_AsyncResult
set_AsyncResult
get_InvalidAsyncResult
LocalRunspaceAsyncResult
GetRunspaceAsyncResult
FileStoreAsyncResult
ConnectionAsyncResult
_psAsyncResult
_asyncResult
ActivityWithResult
validationResult
BookmarkResumptionResult
result
ReadToDescendant
ToLowerInvariant
CreatePersistenceIOParticipant
GetTrackingParticipant
PSWorkflowTrackingParticipant
Constant
System.Management
Microsoft.PowerShell.Commands.Management
XElement
Decrement
Increment
get_PSActivityEnvironment
set_PSActivityEnvironment
activityEnvironment
environment
XmlDocument
set_MaxCharactersInDocument
get_Argument
AddArgument
InArgument
OutArgument
argument
Component
SetParent
_parent
System.Collections.Generic.IEnumerator<Microsoft.PowerShell.Workflow.PSWorkflowId>.Current
System.Collections.Generic.IEnumerator<System.Management.Automation.CallStackFrame>.Current
System.Collections.Generic.IEnumerator<Microsoft.PowerShell.Activities.PSActivityArgumentInfo>.Current
System.Collections.IEnumerator.Current
System.Collections.Generic.IEnumerator<Microsoft.PowerShell.Workflow.PSWorkflowId>.get_Current
System.Collections.Generic.IEnumerator<System.Management.Automation.CallStackFrame>.get_Current
System.Collections.Generic.IEnumerator<Microsoft.PowerShell.Activities.PSActivityArgumentInfo>.get_Current
System.Collections.IEnumerator.get_Current
GetCurrent
<>2__current
System.Collections.Concurrent
EscapeSingleQuotedStringContent
EscapeFormatStringContent
scriptContent
get_Extent
IScriptExtent
RaiseWFJobEvent
OnWSManServerActiveSessionsChangedEvent
RaiseProcessFinishedEvent
RaiseBreakpointUpdatedEvent
BindEvent
InstancePersistenceEvent
GenerateEvent
RaiseDebuggerStopEvent
ManualResetEvent
manualResetEvent
AutoResetEvent
HasRunnableWorkflowEvent
ValidateActivitiesConstraint
IsWorkflowTypeEndpoint
get_Breakpoint
AddBreakpoint
CommandBreakpoint
VariableBreakpoint
CheckLineBreakpoint
RemoveBreakpoint
StopAtBreakpoint
suspendAtNextCheckpoint
get_CredentialParameterCannotBeSpecifiedWithPSCertificateThumbPrint
get_PSCertificateThumbprint
set_PSCertificateThumbprint
get_CertificateThumbprint
set_CertificateThumbprint
CompareCertificateThumbprint
_certificateThumbprint
get_Count
PSRemotingRequestsBeingServicedCount
PSRemotingConnectionsDisposedCount
PSRemotingConnectionsCreatedCount
PSRemotingConnectionsClosedReopendCount
get_GetReferenceCount
CommandsRunningCount
_connectedSessionCount
_disconnectedSessionCount
get_MaximumConnectionRedirectionCount
set_MaximumConnectionRedirectionCount
DefaultMaximumConnectionRedirectionCount
SucceededWorkflowJobsCount
SuspendedWorkflowJobsCount
FailedWorkflowJobsCount
ResumedWorkflowJobsCount
StoppedWorkflowJobsCount
TerminatedWorkflowJobsCount
RunningWorkflowJobsCount
WaitingWorkflowJobsCount
ActivityHostMgrDisposedProcessesCount
ActivityHostMgrCreatedProcessesCount
ActivityHostMgrBusyProcessesCount
get_ActiveSessionsCount
_activeSessionsCount
_inProgressCount
get_RetryCount
set_RetryCount
get_PSActionRetryCount
set_PSActionRetryCount
get_ActionRetryCount
set_ActionRetryCount
actionRetryCount
get_PSConnectionRetryCount
set_PSConnectionRetryCount
get_ConnectionRetryCount
set_ConnectionRetryCount
connectionRetryCount
_retryCount
account
get_SyncRoot
GetPathRoot
_projectRoot
get_Script
AddScript
InvokeScript
IsActivityInlineScript
get_WorkflowFullScript
set_WorkflowFullScript
fullScript
RunspaceInitScript
_script
get_RetryAttempt
set_RetryAttempt
LogRetryAttempt
retryAttempt
DefaultWFPrompt
WFDebugPrompt
Decrypt
Encrypt
ThreadStart
Restart
Convert
get_PSPort
set_PSPort
get_Port
set_Port
WSManLocalPort
set_DestinationPort
get_ShutdownAbort
_port
get_ModulesToImport
SecuritySupport
get_Ast
AttributeBaseAst
AttributeAst
NamedBlockAst
ScriptBlockAst
AttributedExpressionAst
VariableExpressionAst
ConvertExpressionAst
UnaryExpressionAst
FunctionDefinitionAst
ParameterAst
AssignmentStatementAst
NamedAttributeArgumentAst
externalSuspendRequest
ServiceOneRequest
VerifyRequest
IList
XmlNodeList
searchList
ToList
get_PSPersist
set_PSPersist
_psPerfCountersMgrInst
System.Management.Automation.Host
PSHost
get_Host
LocalHost
PSWorkflowHost
get_WorkflowHost
set_WorkflowHost
GetWorkflowHost
DefaultWorkflowHost
workflowHost
RunPowerShellInActivityHost
_host
First
TimeOut
get_Timeout
set_Timeout
get_ForceSuspendTimeout
get_IdleTimeout
_idleTimeout
get_CleanupTimeout
set_CleanupTimeout
timeout
get_Input
set_Input
get_HelperCommandInput
set_HelperCommandInput
pipelineInput
set_SerializeInput
varsInput
get_UseDefaultInput
set_UseDefaultInput
input
get_Output
set_Output
get_AppendOutput
set_AppendOutput
AddIdentifierInfoToOutput
get_MergeErrorToOutput
set_MergeErrorToOutput
_output
MoveNext
System.Text
get_Text
get_CommandText
ReadAllText
WriteAllText
get_InnerText
XamlSchemaContext
get_DataContext
WorkflowDataContext
LoadSerializedContext
SaveSerializedContext
serializedContext
InstancePersistenceContext
StreamingContext
PSDebugContext
BookmarkContext
PopulateRunspaceFromContext
ValidationContext
get_CreationContext
get_JobCreationContext
WorkflowJobCreationContext
_jobCreationContext
creationContext
get_ImplementationContext
set_ImplementationContext
get_InvalidImplementationContext
PopulateActivityImplementationContext
CimActivityImplementationContext
cimActivityImplementationContext
activityImplementationContext
_implementationContext
PSTransactionContext
get_PSWorkflowContext
set_PSWorkflowContext
get_WorkflowContext
set_WorkflowContext
LoadWorkflowContext
get_PSActivityContext
set_PSActivityContext
PSResumableActivityContext
NativeActivityContext
psActivityContext
activityContext
context
createNew
get_InstanceView
get_Now
get_UtcNow
Microsoft.PowerShell.Workflow
get_Workflow
set_Workflow
LoadWorkflow
StopBookMarkedWorkflow
ValidateWorkflow
TerminateWorkflow
ReactivateWorkflow
SaveWorkflow
TerminateAndRemoveWorkflow
get_ErrorWhileValidatingWorkflow
InitializeWithWorkflow
get_MaxSessionsPerWorkflow
set_MaxSessionsPerWorkflow
TokenMaxSessionsPerWorkflow
MinMaxSessionsPerWorkflow
DefaultMaxSessionsPerWorkflow
MaxMaxSessionsPerWorkflow
maxSessionsPerWorkflow
get_IsWorkflow
windowsWorkflow
get_DependentWorkflow
set_DependentWorkflow
_dependentWorkflow
get_IsScriptWorkflow
set_IsScriptWorkflow
scriptWorkflow
get_UnableToStartWorkflow
workflow
get_ParallelScriptBlockSyntax
index
Regex
PSBookmarkPrefix
PSSuspendBookmarkPrefix
PSPersistBookmarkPrefix
prefix
Delay
get_Array
InitializeArray
NullArray
ToArray
CounterInfoArray
get_Policy
set_Policy
SystemPolicy
SetVariablesFromPolicy
ImportModulesFromPolicy
GetSystemLockdownPolicy
policy
Consistency
TimerReachedAlready
CheckIfTimerHasReachedAlready
get_Body
set_Body
get_Key
ContainsKey
GetKey
System.Security.Cryptography
InstanceStoreCryptography
get_Assembly
compiledAssembly
runtimeAssembly
set_LocalAssembly
CompileDependentWorkflowsToAssembly
CommandRunRemotely
RunOneCommandFinally
get_DisconnectedIntentionally
set_DisconnectedIntentionally
get_CompletedSynchronously
set_CompletedSynchronously
_completedSynchronously
get_CannotRemoveWorkflowJobDirectly
SelectMany
BlockCopy
s_aditionalEntropy
IsProductBinary
ToDictionary
ConvertToParameterDictionary
parameterDictionary
SaveStreamsIfNecessary
WorkflowInstanceQuery
ActivityStateQuery
CustomTrackingQuery
query
get_Category
ErrorCategory
errorCategory
RunspaceFactory
PowerShellTraceSourceFactory
CreateDirectory
PSCurrentDirectory
SetCurrentDirectory
directory
ContainerParentJobRepository
_jobRepository
GetChildJobsFromRepository
ClearRepository
set_AddToHistory
CheckAddToHistory
addToHistory
ShouldAddCommandToHistory
BeginActionRetry
IImplementsConnectionRetry
attemptRetry
GetRemoteActivityRunspaceEntry
SetRemoteActivityRunspaceEntry
SessionStateVariableEntry
SessionStateTypeEntry
InitialSessionStateEntry
SessionEntry
sessionEntry
SessionStateFormatEntry
DictionaryEntry
entry
get_Busy
set_Busy
SetBusy
ResetBusy
_busy
op_Equality
op_Inequality
Facility
dwAllocationGranularity
get_Authority
set_Authority
System.Security
System.Management.Automation.Security
FileSystemSecurity
ObjectSecurity
AddDirectorySecurity
PSIdentity
get_Identity
get_CurrentUserIdentity
ClaimsIdentity
WindowsIdentity
_currentIdentity
PSGeneratedCIMActivity
CheckForPersistenceAfterPSActivity
PersistAfterNextPSActivity
get_Activity
DynamicActivity
dynamicActivity
RemoveCachedActivity
PipelineEnabledActivity
get_AllowedActivity
set_AllowedActivity
TokenAllowedActivity
DefaultAllowedActivity
allowedActivity
get_InvalidActivity
suspendActivity
ScheduleActivity
ValidateActivity
terminateActivity
NativeActivity
PSRemotingActivity
WmiActivity
debugBreakActivity
AllowExternalActivity
RunDirectExecutionActivity
ConvertXamlToActivity
PSCleanupActivity
ExecuteCleanupActivity
get_OutOfProcessActivity
set_OutOfProcessActivity
TokenOutOfProcessActivity
IsOutOfProcessActivity
DefaultOutOfProcessActivity
outOfProcessActivity
IsWindowsActivity
GetActivity
GenericCimCmdletActivity
StepToNextActivity
EtwActivity
activity
IsConnectionPoolEmpty
IsNullOrEmpty
get_IsEmpty
PSNoteProperty
get_CmdletDoesNotImplementInputObjectProperty
ProjectProperty
GetProperty
SetProperty
DynamicActivityProperty
WorkflowInstanceProxy
get_SessionStateProxy
SetVariablesInRunspaceUsingProxy
Resources
ActivityFailedDueToRunspaceDisconnect
ActivityNotCached
ActivityNotFound
ActivityParameterGroup
AsJobandJobNameNotAllowed
AsyncResultAlreadyCompleted
AsyncResultAlreadyEnded
AsyncResultNotValid
CannotRemoveWorkflowJobDirectly
CannotSupplyUriAndComputername
CmdletDoesNotImplementInputObjectProperty
CompilationErrorWhileBuildingWorkflows
CompletedString
ConnectivityGroup
CredentialParameterAssignedWithNoComputerName
CredentialParameterCannotBeSpecifiedWithNegotiateWithImplicitAuthentication
CredentialParameterCannotBeSpecifiedWithPSCertificateThumbPrint
CustomRemotingNotSupported
DebuggerCannotModifyWFVars
DebuggerStopReason
DependModuleImportFailed
DuplicateInstanceId
ElapsedTimeReached
ErrorMessageForPersistence
ErrorWhileExecutingActivityAction
ErrorWhileValidatingWorkflow
ExitReason
FailedString
ForceSuspendTimeout
ImportingWorkflowFrom
InputAndOutputGroup
InstanceOwnerIdMismatch
InstanceVersionMismatch
InvalidActivity
InvalidAsyncResult
InvalidAsyncResultSpecified
InvalidBookmark
InvalidImplementationContext
InvalidLabel
InvalidRunspaceSpecified
InvalidWorkflowDefinitionState
InvalidWorkflowExtension
JobCannotBeStarted
JobNotFound
JobQueuedForResume
JobStopInProgress
JobStoppedByDebugger
JobSuspensionInProgress
NameNotSpecifiedForParam
NewJobDefinitionNull
NewJobWrongType
NoMatchingWorkflowWasFound
NotSupportedLanguageMode
NoWorkflowInstance
NoWorkflowProvided
ObjectWasCreatedAtNotAllowedLocation
OneComputerNameAllowed
OnlyOneDefaultParameterCollectionAllowed
ParallelScriptBlockSyntax
ParameterCollectionOnlyUsedWithAsJobAndJobName
ParamSpecifiedMoreThanOnce
PersistencePathToolLong
PersistenceSizeReached
ProcessDebugCommandNotInDebugStopMode
ProgressPositionMessage
ProvidedValueIsOutOfRange
RemovingWrokflowInstance
ResumeNotValidState
RetryingAction
RetryingConnection
RunningString
RunningTimeExceeded
RunningTimeReached
SerializationErrorException
SerializationWarning
ShutdownAbort
SuspendedJobRecoveredFromPreviousSession
SuspendNotValidState
UnableToStartWorkflow
UnblockNotSupported
UninitializedSpecification
ValueFromPipelineNotSupported
ValueNotSpecifiedForParam
WarningMessageForPersistence
WFCallingWFNotSupported
WorkflowAlreadyLoaded
WorkflowChildCouldNotBeRemoved
WorkflowInstanceIncompletelyPersisted
WorkflowInstanceStateCorrupted
WorkflowNameInvalid
WorkflowNotExecuting
WorkflowNotLoaded
XamlNotNull
XamlWorkflowsNotSupported
https
WorkflowHost
PowerShell activity: Cancelling pending command {0}.
PowerShell activity: Stopping command {0}.
commandQueue
psActivityContextImplementationVariable
psRunningTimeoutDelayActivityInstanceVar
context
PowerShell activity ID={0}: Beginning execution.
PSComputerName
Input
PowerShell activity ID={0}: Using parameter {1}, with value '{2}'.
PowerShell activity ID={0}: Execution skipped due to supplied (but empty) pipeline input.
Result
PowerShell activity ID={0}: No ErrorStream was passed in; creating a new stream.
PSError
PowerShell activity ID={0}: Merge error to the output stream and current error stream is the host default; creating a new stream.
PowerShell activity ID={0}: No ProgressStream was passed in; creating a new stream.
PowerShell activity ID={0}: No VerboseStream was passed in; creating a new stream.
PowerShell activity ID={0}: No DebugStream was passed in; creating a new stream.
PowerShell activity ID={0}: No WarningStream was passed in; creating a new stream.
PowerShell activity ID={0}: No InformationStream was passed in; creating a new stream.
completed
notstarted
PowerShell activity ID={0}: Max running time: {1}.
PowerShell activity ID={0}: Invoking command.
PSDisableSerializationPreference
PowerShell activity ID={0}: No OutputStream was passed in; creating a new stream.
PSParentActivityID
ProgressPreference
SilentlyContinue
Ignore
PSProgress
PSActivity
OnResumeBookmark
We are about to rethrow the exception in order to preserve the stack trace writing it into the logs.
PSPersistPreference
PSPersist
PSWarning
PSVerbose
PSDebug
PSInformation
ParameterDefaults
PowerShell activity ID={0}: Using default {1} value.
Could not find corresponding task context field for activity argument: 
Verbose
Debug
WhatIf
ErrorAction
WarningAction
InformationAction
Begining action to run command {0}.
Beginning initialization for command '{0}'.
Adding dependent module to policy: 
BEGIN BeginExecuteOneCommand {0}.
END BeginExecuteOneCommand
Running WMI/CIM generic activity on ThreadPool thread
PowerShell activity: Finished running command.
Exception handling for command {0}.
Got exception running command: {0}.
ActivityActionFailed
Executing callback for GetRunspace for computer 
Error in connecting to remote computer 
ConnectionAttemptFailed
Runspace successfully obtained with guid 
Returning from callback for GetRunspace for computer 
PSCurrentDirectory
Executing callback for LocalRunspaceProvider
Local Runspace successfully obtained with guid 
localhost
CimSession
Returning from callback for GetRunspace for LocalRunspaceProvider
Executing callback for Executing command out of proc
Get-WMIObject
Invoke-WMIMethod
InputObject
ComputerName
BEGIN SetVariablesInRunspaceUsingProxy
SetVariablesInRunspaceUsingProxy: Copying the workflow variables to a RemoteSessionStateProxy is not supported.
END SetVariablesInRunspaceUsingProxy
BEGIN BeginSetVariablesInRemoteRunspace
            Get-Variable -Exclude input | Remove-Variable -ErrorAction Ignore; $input | Foreach-Object {$nvp=$_}; foreach($k in $nvp.keys){set-variable -name $k -value $nvp[$k]}
        
END BeginSetVariablesInRemoteRunspace
BEGIN BeginRunspaceInitializeSetup
Setting variables for command failed, attempting retry
Setting variables for command failed, returning
END BeginRunspaceInitializeSetup
Import-Module
Importing modules in runspace 
CimJob_BrokenCimSession
OutputEncoding
Executing callback for setting variables in remote runspace
Setting varibles in remote runspace failed using script, trying with proxy
Runspace initialization failed, attempting retry
Executing callback for importing required modules
Completed BeginInvoke call on PowerShell
PSShowComputerName
PSSourceJobInstanceId
^([\d\w]{8}\-[\d\w]{4}\-[\d\w]{4}\-[\d\w]{4}\-[\d\w]{12}:\[.*\]:).*
Executing callback for Executing command using PowerShell - either inproc or remote
Errors occurred executing the command.
Executing callback when remote runspace got disconnected
Runspace disconnected is treated as an errors in executing the command.
PSSuspendOnError
PowerShell activity: Executing cancel request.
CacheMetadata
Adding PowerShell specific extensions to metadata, CommonParameters are {0} available.
Microsoft.PowerShell.Activities.InlineScript
PSRunInProcessPreference
Microsoft_PowerShell_Workflow_Bookmark_
Microsoft_PowerShell_Workflow_Bookmark_Suspend_
Microsoft_PowerShell_Workflow_Bookmark_PSPersist_
PowerShell activity ID={0}: WMI Command '{1}'.
Impersonation
PowerShell activity ID={0}: Setting parameter {1} to {2}.
Authentication
PSAuthenticationLevel
PowerShell activity ID={0}: Setting parameter {1} to {2} from ubiquitious parameters.
AuthenticationLevel
Locale
EnableAllPrivileges
Authority
Namespace
Credential
output
implementationContext
cmdletType
CimCmdlets\New-CimSession
activityImplementationContext
activity
                <PrivateData>
                    <Param Name='AllowedActivity' Value='PSDefaultActivities' />
                </PrivateData>
Microsoft.PowerShell.Workflow
Reset
Disable-PSWorkflowConnection
XamlWorkflowSupported
Workflow_XamlFileNotFound
.xaml
Workflows_InvalidWorkflowFileExtension
Workflow_XAMLfileNotAccessible
Workflow_NoMatchingWorkflowXamlFileFound
[CmdletBinding()]
function:\script:
workflowGuid
command
commandName ='
jobName ='
workflowGUID = 
startAsync 
PowerShell.WorkflowJobStartEvent
Trying to convert Xaml into Activity.
Trying to convert Xaml into Activity and using additional xamls assembly.
^[a-zA-Z0-9-_]*$
Generating function for name: {0}, WFGuid: {1}
PSPrivateMetadata
AsJob
                    
Parameter
System.Management.Automation.CredentialAttribute
[Parameter(
Mandatory
ValueFromPipeline
$true
[Parameter(Mandatory=$true)] 
{0}[{1}] ${2}{3},
                
[{0}] ${1}{2},
                
                        # Update any parameters that had default values in the workflow
                        $parametersWithDefaults = @(
                    # None of the workflow parameters had default values
                    $parametersWithDefaults = @()
                    trap { break }
                    $parameterCollectionProcessed = $false
                    $PSParameterCollectionDefaultsMember = $null
                    $suspendOnError = $false
                    if ($PSBoundParameters.ContainsKey('PSParameterCollection'))
                    {
                        # validate parameters used with PSParameterCollection
                        foreach ($pa in $PSBoundParameters.Keys)
                        {
                            if ($pa -eq 'JobName' -or $pa -eq 'AsJob' -or $pa -eq 'InputObject' -or $pa -eq 'PSParameterCollection')
                            {
                                continue
                            }
                            $msg = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::InvalidPSParameterCollectionAdditionalErrorMessage;
                            throw (New-Object System.Management.Automation.ErrorRecord $msg, StartWorkflow.InvalidArgument, InvalidArgument, $PSParameterCollection)
                        }
                        $parameterCollectionProcessed = $true
                        # See if there is a defaults collection, indicated by '*'
                        foreach ($collection in $PSParameterCollection)
                        {
                            if ($collection['PSComputerName'] -eq '*' )
                            {
                                if ($PSParameterCollectionDefaultsMember -ne $null)
                                {
                                    $msg = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::ParameterErrorMessage;
                                    throw ( New-Object System.Management.Automation.ErrorRecord $msg, StartWorkflow.InvalidArgument, InvalidArgument, $PSParameterCollection)
                                }
                                $PSParameterCollectionDefaultsMember = $collection;
                                foreach($parameter in $parametersWithDefaults)
                                {
                                    if(! $collection.ContainsKey($parameter))
                                    {
                                        $collection[$parameter] = (Get-Variable $parameter).Value
                                    }
                                }
                            }
                        }
                        $PSParameterCollection = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::MergeParameterCollection(
                                        $PSParameterCollection, $PSParameterCollectionDefaultsMember)
                        # canonicalize each collection...
                        $PSParameterCollection = foreach ( $c in $PSParameterCollection) {
                            if($c.containskey('AsJob') -or $c.containsKey('JobName') -or $c.containsKey('PSParameterCollection') -or $c.containsKey('InputObject'))
                            {
                                    $msg = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::InvalidPSParameterCollectionEntryErrorMessage;
                                    throw ( New-Object System.Management.Automation.ErrorRecord $msg, StartWorkflow.InvalidArgument, InvalidArgument, $PSParameterCollection)
                            }
                            if ($c['ErrorAction'] -eq "Suspend")
                            {
                                $suspendOnError = $true
                                $c['ErrorAction'] = "Continue"
                            }
                            $validated = & "
                            $validated['PSSuspendOnError'] = $suspendOnError
                            $validated
                        }
                        # If there was no '*' collection, added the paramter defaults
                        # to each individual collection if the parameter isn't already there... 
                        if (-not $PSParameterCollectionDefaultsMember)
                        {
                            foreach ($collection in $PSParameterCollection)
                            {
                                foreach($parameter in $parametersWithDefaults)
                                {
                                    if(! $collection.ContainsKey($parameter))
                                    {
                                        $collection[$parameter] = (Get-Variable $parameter).Value
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        if ($PSBoundParameters['ErrorAction'] -eq "Suspend")
                        {
                            $errorActionPreference = "Continue"
                            $suspendOnError = $true
                            $PSBoundParameters['ErrorAction'] = "Continue"
                        }
                        $PSBoundParameters = & "
" @PSBoundParameters
                        # no PSParameterCollection so add the default values to PSBoundParameters
                        foreach($parameter in $parametersWithDefaults)
                        {
                            if(! $PSBoundParameters.ContainsKey($parameter))
                            {
                                $PSBoundParameters[$parameter] = (Get-Variable $parameter).Value
                            }
                        }
                    }
                    
$PSInputCollection
        begin {{
                function 
                     $PSBoundParameters
              }}
                $PSInputCollection = New-Object 'System.Collections.Generic.List[PSObject]'
            }}
            process {{
                 if ($PSBoundParameters.ContainsKey('InputObject'))
                 {{
                     $PSInputCollection.Add($InputObject)
                 }}
            }}
            
            end {{
                {0}
                if ($PSBoundParameters['PSCredential'])
                {{
                    $CredentialTransform = New-Object System.Management.Automation.CredentialAttribute
                    $LocalCredential = $CredentialTransform.Transform($ExecutionContext, $PSCredential)
                    $PSBoundParameters['PSCredential'] = [system.management.automation.pscredential]$LocalCredential
                    if (!$PSBoundParameters['PSComputerName'] -and !$PSBoundParameters['PSConnectionURI'])
                    {{
                        $PSBoundParameters['PSComputerName'] =  New-Object string @(,'localhost')
                    }}
                }}
                # Extract the job name if specified
                $jobName = ''
                if ($PSBoundParameters['JobName'])
                {{
                    $jobName = $PSBoundParameters['JobName']
                    [void] $PSBoundParameters.Remove('JobName');
                }}
                # Extract the PSParameterCollection if specified
                [hashtable[]] $jobSpecifications = @()
                $parametersCollection = $null;
                if ($PSBoundParameters['PSParameterCollection'])
                {{
                    $parameterSCollection = $PSBoundParameters['PSParameterCollection']
                    [void] $PSBoundParameters.Remove('PSParameterCollection');
                }}
                # Remove the InputObject parameter from the bound parameters collection
                if ($PSBoundParameters['InputObject'])
                {{
                    [void] $PSBoundParameters.Remove('InputObject');
                }}
                # Remove parameters consumed by this function or PowerShell itself
                $null = $PSBoundParameters.Remove('AsJob')
                $null = $psBoundParameters.Remove('WarningVariable')
                $null = $psBoundParameters.Remove('ErrorVariable')
                $null = $psBoundParameters.Remove('OutVariable')
                $null = $psBoundParameters.Remove('OutBuffer')
                $null = $psBoundParameters.Remove('PipelineVariable')
                $null = $psBoundParameters.Remove('InformationVariable')
                
                # Add parameter to add the path of the workflow module, needed by Import-LocalizedData
                # which uses this as a base path to find localized content files.
                $psBoundParameters['PSWorkflowRoot'] = '{2}'
                # Variable that contains the source language mode.
                [string] $SourceLanguageMode = '{3}'
                if (Test-Path variable:\PSSenderInfo)
                {{
                    $psBoundParameters['PSSenderInfo'] = $PSSenderInfo
                }}
                $psBoundParameters['PSCurrentDirectory'] = $pwd.Path
                $psBoundParameters['PSSuspendOnError'] = $suspendOnError
                # Process author-specified metadata which is set using
                # the Private member in the module manifest
                $myCommand = $MyInvocation.MyCommand
                $myModule = $myCommand.Module
                if ($myModule)
                {{
                    # The function was defined in a module so look for 
                    # the PrivateData member
                    [Hashtable] $privateData = $myModule.PrivateData -as [Hashtable]
                        
                    if ($privateData)
                    {{
                        # Extract the nested hashtable corresponding to this
                        # command
                        [hashtable] $authorMetadata = $privateData[$myCommand.Name]
                        if ($authorMetadata)
                        {{
                            # Copy the author-supplied hashtable so we can safely
                            # modify it.
                            $authorMetadata = @{{}} + $authorMetadata 
                            if ($psBoundParameters['PSPrivateMetadata'])
                            {{
                                # merge in the user-supplied metadata
                                foreach ($pair in $psPrivateMetadata.GetEnumerator())
                                {{
                                    $authorMetadata[$pair.Key] = $pair.Value
                                }}
                            }}
                            # and update the bound parameter to include the merged data
                            $psBoundParameters['PSPrivateMetadata'] = $authorMetadata
                        }}
                    }}
                }}
                # Add in the input collection if there wasn't one explicitly passed
                # which can only happen through PSParameterCollection               
                if (! $PSBoundParameters['PSInputCollection'])
                {{
                    $PSBoundParameters['PSInputCollection'] = $PSInputCollection
                }}
                # Populate Verbose / Debug / Error from preference variables
                if (-not $PSBoundParameters.ContainsKey('Verbose'))
                {{
                    if($verbosePreference -in "Continue","Inquire")
                    {{
                        $PSBoundParameters['Verbose'] = [System.Management.Automation.SwitchParameter]::Present
                    }}
                }}
                if (-not $PSBoundParameters.ContainsKey('Debug'))
                {{
                    if($debugPreference -in "Continue","Inquire")
                    {{
                        $PSBoundParameters['Debug'] = [System.Management.Automation.SwitchParameter]::Present
                    }}
                }}
                if (-not $PSBoundParameters.ContainsKey('ErrorAction'))
                {{
                    $PSBoundParameters['ErrorAction'] = $errorActionPreference
                }}
                if(Test-Path variable:\errorActionPreference)
                {{
                    $errorAction = $errorActionPreference
                }}
                else
                {{
                    $errorAction = "Continue"
                }}
                if ($PSBoundParameters['ErrorAction'] -eq "SilentlyContinue")
                {{
                    $errorAction = "SilentlyContinue"
                }}
                if($PSBoundParameters['ErrorAction'] -eq "Ignore")
                {{
                    $PSBoundParameters['ErrorAction'] = "SilentlyContinue"
                    $errorAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['ErrorAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['ErrorAction'] = "Continue"
                    $errorAction = "Continue"
                }}
                if (-not $PSBoundParameters.ContainsKey('WarningAction'))
                {{
                    $PSBoundParameters['WarningAction'] = $warningPreference
                }}
                if(Test-Path variable:\warningPreference)
                {{
                    $warningAction = $warningPreference
                }}
                else
                {{
                    $warningAction = "Continue"
                }}
                
                if ($PSBoundParameters['WarningAction'] -in "SilentlyContinue","Ignore")
                {{
                    $warningAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['WarningAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['WarningAction'] = "Continue"
                    $warningAction = "Continue"
                }}
                if (-not $PSBoundParameters.ContainsKey('InformationAction'))
                {{
                    $PSBoundParameters['InformationAction'] = $informationPreference
                }}
                if(Test-Path variable:\informationPreference)
                {{
                    $informationAction = $informationPreference
                }}
                else
                {{
                    $informationAction = "Continue"
                }}
                
                if ($PSBoundParameters['InformationAction'] -in "SilentlyContinue","Ignore")
                {{
                    $informationAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['InformationAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['InformationAction'] = "Continue"
                    $informationAction = "Continue"
                }}
                #  Create the final parameter collection...
                $finalParameterCollection = $null
                if ($PSParameterCollection -ne $null)
                {{
                    $finalParameterCollection = $PSParameterCollection 
                }}
                else
                {{
                    $finalParameterCollection = $PSBoundParameters
                }}
                try
                {{
                    # Start the workflow and return the job object...
                    $debuggerActive = (@(Get-PSBreakpoint).Count -gt 0)
                    if (($debuggerActive -eq $false) -and
                        ($host -ne $null) -and
                        ($host.Runspace -ne $null) -and
                        ($host.Runspace.Debugger -ne $null))
                    {{
                        $debuggerActive = $host.Runspace.Debugger.IsActive
                    }}
                    $job = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::StartWorkflowApplication(
                                        $PSCmdlet,
                                        $jobName,
                                        '{1}',
                                        $AsJob,
                                        $parameterCollectionProcessed,
                                        $finalParameterCollection,
                                        $debuggerActive,
                                        $SourceLanguageMode)
                }}
                catch
                {{
                    # extract exception from the error record
                    $e = $_.Exception
                    # this is probably a method invocation exception so we want the inner exception
                    # if it exists
                    if ($e -is [System.Management.Automation.MethodException] -and $e.InnerException)
                    {{
                        $e = $e.InnerException
                    }}
                    $msg = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::UnableToStartWorkflowMessageMessage -f `
                        $MyInvocation.MyCommand.Name, $e.Message
                    $newException = New-Object System.Management.Automation.RuntimeException $msg, $e
                    throw (New-Object System.Management.Automation.ErrorRecord $newException, StartWorkflow.InvalidArgument, InvalidArgument, $finalParameterCollection)
                }}
                if (-not $AsJob -and $job -ne $null)
                {{
                    try
                    {{
                        Receive-Job -Job $job -Wait -Verbose -Debug -ErrorAction $errorAction -WarningAction $warningAction -InformationAction $informationAction
                        $PSCmdlet.InvokeCommand.HasErrors = $job.State -eq 'failed'
                    }}
                    finally
                    {{
                        if($job.State -ne "Suspended" -and $job.State -ne "Stopped")
                        {{
                            Remove-Job -Job $job -Force
                        }}
                        else
                        {{
                            $job
                        }}
                    }}
                }}
                else
                {{
                    $job
                }}
            }}
^ *\#.*$
[string[]] $PSComputerName
[ValidateNotNullOrEmpty()] $PSCredential
[uint32] $PSConnectionRetryCount
[uint32] $PSConnectionRetryIntervalSec
[ValidateRange(1, 2147483)][uint32] $PSRunningTimeoutSec
[ValidateRange(1, 2147483)][uint32] $PSElapsedTimeoutSec
[bool] $PSPersist
[ValidateNotNullOrEmpty()] [System.Management.Automation.Runspaces.AuthenticationMechanism] $PSAuthentication
[ValidateNotNullOrEmpty()][System.Management.AuthenticationLevel] $PSAuthenticationLevel
[ValidateNotNullOrEmpty()] [string] $PSApplicationName
[uint32] $PSPort
[switch] $PSUseSSL
[ValidateNotNullOrEmpty()] [string] $PSConfigurationName
[ValidateNotNullOrEmpty()][string[]] $PSConnectionURI
[switch] $PSAllowRedirection
[ValidateNotNullOrEmpty()][System.Management.Automation.Remoting.PSSessionOption] $PSSessionOption
[ValidateNotNullOrEmpty()] [string] $PSCertificateThumbprint
[hashtable] $PSPrivateMetadata
[switch] $AsJob
[string] $JobName
$InputObject
                
                param (
                    {0}
                    [hashtable[]] $PSParameterCollection
                    [Parameter(ValueFromPipeline=$true)]
                    
                    )
updated
<Param Name='{0}' Value='{1}' />
persistencepath
maxpersistencestoresizegb
persistwithencryption
maxrunningworkflows
enablevalidation
allowedactivity
outofprocessactivity
maxdisconnectedsessions
maxconnectedsessions
maxsessionsperworkflow
maxsessionsperremotenode
maxactivityprocesses
activityprocessidletimeoutsec
workflowapplicationpersistunloadtimeoutsec
wsmanpluginreportcompletiononzeroactivesessionswaitintervalmsec
activitiescachecleanupintervalmsec
remotenodesessionidletimeoutsec
sessionthrottlelimit
workflowshutdowntimeoutmsec
<PrivateData>{0}</PrivateData>
DefinitionCache: Caching activity for definition with instance ID: {0}. The activity Tree is passed.
DefinitionCache: Caching activity for definition with instance ID: {0}. Xaml is passed
%windir%\system32
deserializedRemoteActivityState
RemoteActivityState: runspace entry for taskid: {0}, taskEntry: {1}
RemoteActivityState.SetRemoteActivityRunspaceEntry: runspace entry for taskid: {0}, taskState: {1}, computerName: {2}
RemoteActivityState.SetRemoteActivityRunspaceEntry: persisting the Streams and RemoteActivityState
RemoteActivityState.RemoteActivityResumeRequired returning activityResumeRequired: {0}
Workflow Application is completed and is in closed state.
Flatting out the PSDataCollection returned outputs.
Workflow Application is completed in Canceled state.
Workflow Application is completed in Aborted state.
Workflow Application is completed in Unhandled exception state.
PSWorkflowErrorAction
PSWorkflowApplicationInstance
HandlePersistence
Persisting the workflow.
There has been exception while persisting the workflow in the background thread.
SafelyHandleFaultedState
There has been exception while marking the workflow in faulted state in the background thread.
Workflow Application is idle.
Workflow Application is unloaded.
PSWorkflowInstance
DoSuspendInstance
Not able to unload workflow application in a given timeout.
Workflow Application is completed in Faulted state.
HandleWorkflowApplicationFaultedState
Since we are in shuting down mode so ignoring the remote exception
Creating Workflow instance.
runtime
Creating Workflow instance after crash and shutdown workflow.
Loading for Workflow resumption.
Workflow is loaded for reactivation, Guid = 
DoLoadInstanceForReactivation
There has been an exception while loading the workflow state from persistence store.
Serialization exception occurred while saving workflow to persistence store
Workflow_Serialization_Error
Error stream is not in Open state
WorkflowJobCreationContext
Exception occurred while loading the workflow definition
Exception occurred while loading the workflow streams
Marking the job to the faulted state.
Exception occurred while loading the RemoteActivityState
Exception occurred while loading the workflow terminating error
Exception occurred while loading the workflow timer
Exception occurred while loading the workflow metadata
Trying to resume workflow
Workflow resumed
Starting workflow execution
Workflow application started execution
bookmark
Loading Workflow
Workflow is loaded, Guid = 
Disposing the job
PSRunningTimeoutSec
PSElapsedTimeoutSec
InstanceId
Command
ParentName
ParentInstanceId
ParentSessionId
ParentCommand
WorkflowInstanceId
WorkflowTrackingProfile
Started
Completed
Persisted
UnhandledException
ReactivateWorkflowInternal
Invalid bookmark: '{0}'.
Workflow is in Canceled state.
PersistUnloadTimer_Elapsed
Got an exception while unloading the workflow Application.
Location
JobName
JobInstanceId
JobId
JobCommandName
ParentJobName
ParentJobInstanceId
ParentJobId
ParentCommandName
wfInstance
Write-Error
ErrorRecord
System.Management.Automation.Remoting.ServerRemoteHost
Out-Default
parent
functionSourceMap
funcToSourceMap
funcName
script
clr-namespace:Microsoft.PowerShell.Activities;assembly=Microsoft.PowerShell.Activities
//{0}:PowerShellValue/@Expression
^'\d+:\d+:\S+'$
prompt
Get-PSCallStack
[WFDBG:{0}]: 
PS>> 
Out-String
Stream
Set-Location
Set-DebuggerVariable
Variables
Set-Variable
PSWorkflowDebugger
Value
Visibility
Private
PSDebugContext
Remove-DebuggerVariable
PSWorkflowDebuggerCannotModifyWorkflowVariables
specification
PSWorkflowJob
InitializeWithWorkflow
Setting streams
DoStartJobLogic
BEGIN
ready to start
DoStopJob
DoSuspendJob
The job is not suspendable.
InvalidJobState
Reason
DoSetJobState
Setting state to {0}, Setting Reason to exception: {1}
Done setting state
WorkflowTakesPrivateMetadata
SortStartParameters
Found parameter; {0}; {1}
PSInputCollection
PSParameterCollection
PSConnectionRetryCount
PSActionRetryCount
PSConnectionRetryIntervalSec
PSActionRetryIntervalSec
PSCredential
PSPort
PSUseSSL
PSConfigurationName
PSApplicationName
PSConnectionURI
PSSessionOption
PSAuthentication
PSCertificateThumbprint
PSAllowRedirection
PSSenderInfo
PSWorkflowRoot
WorkflowCommandName
HandleMyStateChanged
NewState: {0}; OldState: {1}
BEGIN Unloading streams from memory
END Unloading streams from memory
DoStartJobAsync
DoResumeJob
DoLabeledResumeJob
DoResumeBookmark
InvalidJobState to resume a bookmark
DoTerminateJob
trying to terminate running workflow job
Trying to load and terminate suspended workflow
DoAbortJob
OnWorkflowCompleted
OnWorkflowAborted
OnWorkflowFaulted
OnWorkflowStopped
OnWorkflowSuspended
OnWorkflowIdle
OnWorkflowPersistIdleAction
OnWorkflowUnloaded
LoadWorkflow
Calling instance loader
RestoreFromWorkflowInstance
StatusMessage
JobActionAsyncCompleted
operation: {0}
CommonInit
Construction/initialization
StopJobAsync
SuspendJobAsync
streams
exception
DoResumeJobAsync
WorkflowJobSourceAdapter: Getting all Workflow jobs
WorkflowJobSourceAdapter: Getting Workflow jobs by name: {0}
WorkflowJobSourceAdapter: Getting Workflow jobs by command: {0}
WorkflowJobSourceAdapter: Getting Workflow job by instance id: {0}
WorkflowJobSourceAdapter: Getting Workflow job by session id: {0}
WorkflowJobSourceAdapter: Getting Workflow jobs by state: {0}
filter
WorkflowJobSourceAdapter: Getting Workflow jobs by filter: {0}
ProcessId
State
WorkflowJobSourceAdapter: Removing Workflow job with instance id: {0}
WorkflowJobSourceAdapter: Ingnoring the exception. Exception details: {0}
Shutting down WSMan server: Exception details: {0}
WorkflowJobSourceAdapterRepository
Getting an exception while loading the previously persisted workflows...
PSWorkflowJobManager
storedInstanceId
Job Throttling Thread
Calling WSManPluginReportCompletion as there are no active sessions and no inprogress/pending jobs
jobInstanceId
workflow
UserName
jobInvocationInfo
WorkflowJobSourceAdapter: Creating Workflow job with definition: {0}
Shutting down workflow manager: suspend forcefully : Exception details: {0}
WorkflowManager : Getting all the workflow instances.
WorkflowManager : Geting workflow instances based on filters
WorkflowManager : Removing job instance with id: 
Remove
WorkflowManager : 
RemoveJob
Worklfow Job is already disposed. so removing it.
WorkflowManager : Forgeting job instance with id: 
Validating a workflow.
System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
PSDefaultActivities
Microsoft.PowerShell.Activities.PSPersist
Microsoft.PowerShell.Activities.Suspend
configuration
results
WorkflowValidation : 
SuspendOnError
DynamicActivity
DoWhile
ForEach`1
Parallel
ParallelForEach`1
Sequence
Switch`1
While
Assign
Assign`1
Delay
InvokeMethod
TerminateWorkflow
WriteLine
Rethrow
Throw
TryCatch
Literal`1
VisualBasicValue`1
VisualBasicReference`1
LocationReferenceValue`1
VariableValue`1
VariableReference`1
LocationReferenceReference`1
LambdaValue`1
Flowchart
FlowDecision
FlowSwitch`1
AddToCollection`1
ExistsInCollection`1
RemoveFromCollection`1
ClearCollection`1
microsoft.powershell.activities
microsoft.powershell.core.activities
microsoft.powershell.diagnostics.activities
microsoft.powershell.management.activities
microsoft.powershell.security.activities
microsoft.powershell.utility.activities
microsoft.powershell.workflow.servicecore
microsoft.wsman.management.activities
The workflow Calling workflow is not supported so throwing the exception.
Workflow_
PSWorkflowCompilation\
Project
RuntimeProject.csproj
Build.Log
<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration><Platform>AnyCPU</Platform><ProductVersion>10.0</ProductVersion><SchemaVersion>2.0</SchemaVersion><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><TargetFrameworkProfile></TargetFrameworkProfile><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>bin\Debug\</OutputPath><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup><DebugType>pdbonly</DebugType><Optimize>true</Optimize><OutputPath>bin\Release\</OutputPath><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.CSharp" /><Reference Include="System" /><Reference Include="System.Activities" /><Reference Include="System.Core" /><Reference Include="System.Data" /><Reference Include="System.ServiceModel" /><Reference Include="System.ServiceModel.Activities" /><Reference Include="System.Xaml" /><Reference Include="System.Xml" /><Reference Include="System.Xml.Linq" /><Reference Include="System.Management" /><Reference Include="System.Management.Automation" /><Reference Include="Microsoft.PowerShell.Workflow.ServiceCore" /></ItemGroup><Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /><!-- To modify your build process, add your task inside one of the targets below and uncomment it.  Other similar extension points exist, see Microsoft.Common.targets. <Target Name="BeforeBuild"></Target><Target Name="AfterBuild"></Target>--></Project>
AssemblyName
XamlAppDef
assembly=
Reference
logfile=
obj\Release\
{0} Created
WorkflowTrackingParticipant
{0} Emitted trackRecord: {1}  Level: {2}, RecordNumber: {3}
 Workflow InstanceID: {0} Workflow instance state: {1}
Variables:
Name: {0} Value: {1}
 :Activity DisplayName: {0} :ActivityInstanceState: {1} {2}
User Data:
DebugSequencePoint
 {0} : {1}
TimerType
IsRecurring
IsOneTimeTimer
Interval
RemainingTime
StartedAtForFirstTime
deserializedTimers
PSWorkflowTimer Elapsed: 
{5db760bc-64b2-4da7-b4ef-7dab105fbb8c}
{faa17411-9025-4b86-8b5e-ce2f32b06e13}
Getting an exception while comparing credentials...
result
PersistenceVersion
StoreVersion
CLRVersion
EnableEncryption
EnableCompression
Exception while reading or parsing the version file: {0}
V.xml
IS.xml
OS.xml
ES.xml
WS.xml
VS.xml
PS.xml
DS.xml
INFS.xml
EE.xml
I.xml
UI.xml
JM.xml
PM.xml
TI.xml
WD.xaml
RA.dll
RA.xml
S.xml
AS.xml
Trying to delete one more time.
Get-Location
WorkflowAdditionalStores
WriteWarning
State of runspace passed to invoker 
BEGIN invocation of command out of proc
END invocation of command out of proc
Running powershell in activity host threw exception
PrivateData
Param
validationcachelimit
compiledassemblycachelimit
outofprocessactivitycachelimit
maxinprocrunspaces
default
credssp
Microsoft\Windows\PowerShell\WF\PS
InlineScript
%windir%\system32\windowspowershell\v1.0\modules\psworkflow\PSWorkflow.types.ps1xml
http://schemas.microsoft.com/powershell/Microsoft.PowerShell.Workflow.ActivityHost
BEGIN Creating new PowerShell process instance
END Creating new PowerShell process instance 
New runspace created 
Opening runspace 
Runspace opened successfully 
$ExecutionContext.SessionState.LanguageMode = '
Opening runspace threw  PSRemotingTransportRedirectException
Opening runspace threw  PSRemotingTransportException
Opening runspace threw  PSRemotingDataStructureException
Force
function _PSSetVariable
        {
            [CmdletBinding()]
            param(
        
                [Parameter(Position=0)]
                [string[]]
                $Name,
        
                [Parameter(Position=1)]
                [object[]]
                $Value        
            )
            for($i=0; $i -lt $Name.Count; $i++)
            {
                microsoft.powershell.utility\set-variable -name $Name[$i] -value $Value[$i] -scope global
            }
            Set-StrictMode -Off
        }
_PSSetVariable
Remove-Item
function:\_PSSetVariable
BEGIN Setting up variables in runspace 
END Setting up variables in runspace 
BEGIN Setting up runspace from policy 
END Setting up runspace from policy 
PSWorkflowRuntime
sessionConfigurationData
senderInfo
configProviderId
PSWorkflowConfigurationProvider is null
http://schemas.microsoft.com/powershell/microsoft.windows.servermanagerworkflows
PSW Conn: Creating new connection
PSW Conn: Disconnected Remote Runspace is not avialable. Runspace Instance Id: 
PSW Conn: Disconnected PowerShell is not avialable. Runspace Instance Id: 
PSW Conn: Calling OpenAsync on runspace
PSW Conn: Calling CloseAsync on runspace
PSW Conn: Calling Disconnect Async
PSW Conn: Calling reconnect async
PSW Conn: runspace state
Disposing broken connection to {0}
PSW Conn: disposing runspace
PSW ConnMgr: New incoming request for runspace queued
asyncResult
PSW ConnMgr: Request serviced and runspace returned
PSW ConnMgr: Runspace released
runspace
PSW ConnMgr: Another timer thread is already servicing return
PSW ConnMgr: Timer fired
PSW ConnMgr: Timer servicing started
Closing idle connection to {0}
PSW ConnMgr: Timer servicing completed
PSW ConnMgr: {0}
QueueUserWorkItem Connection Servicing thread
Callback thread
Starting servicing thread
PSW ConnMgr: Assigning existing connection to request
PSW ConnMgr: Creating new connection to service request
PSW ConnMgr: Assigning potential connection to service request
PSW ConnMgr: Closing potential connection and creating a new one to service request
PSW ConnMgr: Safely returning from servicing
PSW ConnMgr: Returning from servicing as ConnMgr is disposed or being disposed
PSW ConnMgr: Returning from servicing since timer fired
PSW ConnMgr: Setting check for runspaces disconnect flag
PSW ConnMgr: Incoming connectioninfo is null
PSW ConnMgr: Cannot find table for computername 
PSW ConnMgr: Cannot find list for config 
PSW ConnMgr: Cannot find the actual connection object
Cleanup thread
PSW ConnMgr: Cannot find specified computer in _waitCallbacks dictionary: 
ConnectionManager
Queuing user workitem Running operations in throttle queue
Running operations in throttle queue
PSW ConnMgr: Done throttling
Queuing user workitem disconnect/reconnect worker
Running disconnect/reconnect worker
PSW ConnMgr: Exiting disconnect reconnect worker
PSW ConnMgr: Runspace marked as ready for disconnect
workflowInstance
New local runspace created
QueueUserWorkItem Request Servicing thread
LocalRunspaceProvider: Request serviced and runspace returned
RunningInPSWorkflowEndpoint
True if we're in a Workflow Endpoint
{urn:schemas-microsoft-com:System.Runtime.DurableInstancing/4.0/metadata}InstanceType
instanceId
instanceOwnerId
instanceData
instanceMetadata
WORKFLOW:
PSParentActivityID
PSRunInProcessPreference
PSPersistPreference
PSComputerName
            Get-Variable -Exclude input | Remove-Variable -ErrorAction Ignore; $input | Foreach-Object {$nvp=$_}; foreach($k in $nvp.keys){set-variable -name $k -value $nvp[$k]}
        
^([\d\w]{8}\-[\d\w]{4}\-[\d\w]{4}\-[\d\w]{4}\-[\d\w]{12}:\[.*\]:).*
localhost
^[a-zA-Z0-9-_]*$
                $PSInputCollection = New-Object 'System.Collections.Generic.List[PSObject]'
            }}
            process {{
                 if ($PSBoundParameters.ContainsKey('InputObject'))
                 {{
                     $PSInputCollection.Add($InputObject)
                 }}
            }}
            
            end {{
                {0}
                if ($PSBoundParameters['PSCredential'])
                {{
                    $CredentialTransform = New-Object System.Management.Automation.CredentialAttribute
                    $LocalCredential = $CredentialTransform.Transform($ExecutionContext, $PSCredential)
                    $PSBoundParameters['PSCredential'] = [system.management.automation.pscredential]$LocalCredential
                    if (!$PSBoundParameters['PSComputerName'] -and !$PSBoundParameters['PSConnectionURI'])
                    {{
                        $PSBoundParameters['PSComputerName'] =  New-Object string @(,'localhost')
                    }}
                }}
                # Extract the job name if specified
                $jobName = ''
                if ($PSBoundParameters['JobName'])
                {{
                    $jobName = $PSBoundParameters['JobName']
                    [void] $PSBoundParameters.Remove('JobName');
                }}
                # Extract the PSParameterCollection if specified
                [hashtable[]] $jobSpecifications = @()
                $parametersCollection = $null;
                if ($PSBoundParameters['PSParameterCollection'])
                {{
                    $parameterSCollection = $PSBoundParameters['PSParameterCollection']
                    [void] $PSBoundParameters.Remove('PSParameterCollection');
                }}
                # Remove the InputObject parameter from the bound parameters collection
                if ($PSBoundParameters['InputObject'])
                {{
                    [void] $PSBoundParameters.Remove('InputObject');
                }}
                # Remove parameters consumed by this function or PowerShell itself
                $null = $PSBoundParameters.Remove('AsJob')
                $null = $psBoundParameters.Remove('WarningVariable')
                $null = $psBoundParameters.Remove('ErrorVariable')
                $null = $psBoundParameters.Remove('OutVariable')
                $null = $psBoundParameters.Remove('OutBuffer')
                $null = $psBoundParameters.Remove('PipelineVariable')
                $null = $psBoundParameters.Remove('InformationVariable')
                
                # Add parameter to add the path of the workflow module, needed by Import-LocalizedData
                # which uses this as a base path to find localized content files.
                $psBoundParameters['PSWorkflowRoot'] = '{2}'
                # Variable that contains the source language mode.
                [string] $SourceLanguageMode = '{3}'
                if (Test-Path variable:\PSSenderInfo)
                {{
                    $psBoundParameters['PSSenderInfo'] = $PSSenderInfo
                }}
                $psBoundParameters['PSCurrentDirectory'] = $pwd.Path
                $psBoundParameters['PSSuspendOnError'] = $suspendOnError
                # Process author-specified metadata which is set using
                # the Private member in the module manifest
                $myCommand = $MyInvocation.MyCommand
                $myModule = $myCommand.Module
                if ($myModule)
                {{
                    # The function was defined in a module so look for 
                    # the PrivateData member
                    [Hashtable] $privateData = $myModule.PrivateData -as [Hashtable]
                        
                    if ($privateData)
                    {{
                        # Extract the nested hashtable corresponding to this
                        # command
                        [hashtable] $authorMetadata = $privateData[$myCommand.Name]
                        if ($authorMetadata)
                        {{
                            # Copy the author-supplied hashtable so we can safely
                            # modify it.
                            $authorMetadata = @{{}} + $authorMetadata 
                            if ($psBoundParameters['PSPrivateMetadata'])
                            {{
                                # merge in the user-supplied metadata
                                foreach ($pair in $psPrivateMetadata.GetEnumerator())
                                {{
                                    $authorMetadata[$pair.Key] = $pair.Value
                                }}
                            }}
                            # and update the bound parameter to include the merged data
                            $psBoundParameters['PSPrivateMetadata'] = $authorMetadata
                        }}
                    }}
                }}
                # Add in the input collection if there wasn't one explicitly passed
                # which can only happen through PSParameterCollection               
                if (! $PSBoundParameters['PSInputCollection'])
                {{
                    $PSBoundParameters['PSInputCollection'] = $PSInputCollection
                }}
                # Populate Verbose / Debug / Error from preference variables
                if (-not $PSBoundParameters.ContainsKey('Verbose'))
                {{
                    if($verbosePreference -in "Continue","Inquire")
                    {{
                        $PSBoundParameters['Verbose'] = [System.Management.Automation.SwitchParameter]::Present
                    }}
                }}
                if (-not $PSBoundParameters.ContainsKey('Debug'))
                {{
                    if($debugPreference -in "Continue","Inquire")
                    {{
                        $PSBoundParameters['Debug'] = [System.Management.Automation.SwitchParameter]::Present
                    }}
                }}
                if (-not $PSBoundParameters.ContainsKey('ErrorAction'))
                {{
                    $PSBoundParameters['ErrorAction'] = $errorActionPreference
                }}
                if(Test-Path variable:\errorActionPreference)
                {{
                    $errorAction = $errorActionPreference
                }}
                else
                {{
                    $errorAction = "Continue"
                }}
                if ($PSBoundParameters['ErrorAction'] -eq "SilentlyContinue")
                {{
                    $errorAction = "SilentlyContinue"
                }}
                if($PSBoundParameters['ErrorAction'] -eq "Ignore")
                {{
                    $PSBoundParameters['ErrorAction'] = "SilentlyContinue"
                    $errorAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['ErrorAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['ErrorAction'] = "Continue"
                    $errorAction = "Continue"
                }}
                if (-not $PSBoundParameters.ContainsKey('WarningAction'))
                {{
                    $PSBoundParameters['WarningAction'] = $warningPreference
                }}
                if(Test-Path variable:\warningPreference)
                {{
                    $warningAction = $warningPreference
                }}
                else
                {{
                    $warningAction = "Continue"
                }}
                
                if ($PSBoundParameters['WarningAction'] -in "SilentlyContinue","Ignore")
                {{
                    $warningAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['WarningAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['WarningAction'] = "Continue"
                    $warningAction = "Continue"
                }}
                if (-not $PSBoundParameters.ContainsKey('InformationAction'))
                {{
                    $PSBoundParameters['InformationAction'] = $informationPreference
                }}
                if(Test-Path variable:\informationPreference)
                {{
                    $informationAction = $informationPreference
                }}
                else
                {{
                    $informationAction = "Continue"
                }}
                
                if ($PSBoundParameters['InformationAction'] -in "SilentlyContinue","Ignore")
                {{
                    $informationAction = "SilentlyContinue"
                }}
                if ($PSBoundParameters['InformationAction'] -eq "Inquire")
                {{
                    $PSBoundParameters['InformationAction'] = "Continue"
                    $informationAction = "Continue"
                }}
                #  Create the final parameter collection...
                $finalParameterCollection = $null
                if ($PSParameterCollection -ne $null)
                {{
                    $finalParameterCollection = $PSParameterCollection 
                }}
                else
                {{
                    $finalParameterCollection = $PSBoundParameters
                }}
                try
                {{
                    # Start the workflow and return the job object...
                    $debuggerActive = (@(Get-PSBreakpoint).Count -gt 0)
                    if (($debuggerActive -eq $false) -and
                        ($host -ne $null) -and
                        ($host.Runspace -ne $null) -and
                        ($host.Runspace.Debugger -ne $null))
                    {{
                        $debuggerActive = $host.Runspace.Debugger.IsActive
                    }}
                    $job = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::StartWorkflowApplication(
                                        $PSCmdlet,
                                        $jobName,
                                        '{1}',
                                        $AsJob,
                                        $parameterCollectionProcessed,
                                        $finalParameterCollection,
                                        $debuggerActive,
                                        $SourceLanguageMode)
                }}
                catch
                {{
                    # extract exception from the error record
                    $e = $_.Exception
                    # this is probably a method invocation exception so we want the inner exception
                    # if it exists
                    if ($e -is [System.Management.Automation.MethodException] -and $e.InnerException)
                    {{
                        $e = $e.InnerException
                    }}
                    $msg = [Microsoft.PowerShell.Commands.ImportWorkflowCommand]::UnableToStartWorkflowMessageMessage -f `
                        $MyInvocation.MyCommand.Name, $e.Message
                    $newException = New-Object System.Management.Automation.RuntimeException $msg, $e
                    throw (New-Object System.Management.Automation.ErrorRecord $newException, StartWorkflow.InvalidArgument, InvalidArgument, $finalParameterCollection)
                }}
                if (-not $AsJob -and $job -ne $null)
                {{
                    try
                    {{
                        Receive-Job -Job $job -Wait -Verbose -Debug -ErrorAction $errorAction -WarningAction $warningAction -InformationAction $informationAction
                        $PSCmdlet.InvokeCommand.HasErrors = $job.State -eq 'failed'
                    }}
                    finally
                    {{
                        if($job.State -ne "Suspended" -and $job.State -ne "Stopped")
                        {{
                            Remove-Job -Job $job -Force
                        }}
                        else
                        {{
                            $job
                        }}
                    }}
                }}
                else
                {{
                    $job
                }}
            }}
<PrivateData>{0}</PrivateData>
<Param Name='{0}' Value='{1}' />
AsJob
PSCredential
PSPort
PSUseSSL
PSConfigurationName
PSApplicationName
PSConnectionURI
PSAllowRedirection
PSSessionOption
PSAuthentication
PSAuthenticationLevel
PSCertificateThumbprint
PSParameterCollection
PSInputCollection
InputObject
PSSenderInfo
PSCurrentDirectory
PSSuspendOnError
Verbose
Debug
ErrorAction
WarningAction
InformationAction
ErrorVariable
WarningVariable
InformationVariable
OutVariable
OutBuffer
PipelineVariable
PSConnectionRetryCount
PSActionRetryCount
PSConnectionRetryIntervalSec
PSActionRetryIntervalSec
PSPrivateMetadata
WorkflowTakesPrivateMetadata
WorkflowJobCreationContext
PSRunningTimeoutSec
PSElapsedTimeoutSec
2147483
PSWorkflowRoot
JobName
InstanceId
Command
Reason
ParentName
ParentCommand
ParentInstanceId
ParentSessionId
Location
StatusMessage
UserName
ProcessId
State
PSPersist
PSRequiredModules
PSWorkflowErrorAction
%windir%\system32
PS>> 
[WFDBG:{0}]: 
PSDebugContext
PSWorkflowJob
WorkflowManager : 
<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration><Platform>AnyCPU</Platform><ProductVersion>10.0</ProductVersion><SchemaVersion>2.0</SchemaVersion><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><TargetFrameworkProfile></TargetFrameworkProfile><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>bin\Debug\</OutputPath><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup><DebugType>pdbonly</DebugType><Optimize>true</Optimize><OutputPath>bin\Release\</OutputPath><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.CSharp" /><Reference Include="System" /><Reference Include="System.Activities" /><Reference Include="System.Core" /><Reference Include="System.Data" /><Reference Include="System.ServiceModel" /><Reference Include="System.ServiceModel.Activities" /><Reference Include="System.Xaml" /><Reference Include="System.Xml" /><Reference Include="System.Xml.Linq" /><Reference Include="System.Management" /><Reference Include="System.Management.Automation" /><Reference Include="Microsoft.PowerShell.Workflow.ServiceCore" /></ItemGroup><Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /><!-- To modify your build process, add your task inside one of the targets below and uncomment it.  Other similar extension points exist, see Microsoft.Common.targets. <Target Name="BeforeBuild"></Target><Target Name="AfterBuild"></Target>--></Project>
WorkflowTrackingParticipant
PowerShellValue<Object>
PrivateData
Param
Value
PSDefaultActivities
persistencepath
persistwithencryption
maxpersistencestoresizegb
maxrunningworkflows
allowedactivity
outofprocessactivity
enablevalidation
maxdisconnectedsessions
maxconnectedsessions
maxsessionsperworkflow
maxsessionsperremotenode
maxactivityprocesses
activityprocessidletimeoutsec
workflowapplicationpersistunloadtimeoutsec
wsmanpluginreportcompletiononzeroactivesessionswaitintervalmsec
activitiescachecleanupintervalmsec
remotenodesessionidletimeoutsec
sessionthrottlelimit
validationcachelimit
compiledassemblycachelimit
outofprocessactivitycachelimit
workflowshutdowntimeoutmsec
maxinprocrunspaces
http://schemas.microsoft.com/powershell/Microsoft.PowerShell.Workflow.ActivityHost
function _PSSetVariable
        {
            [CmdletBinding()]
            param(
        
                [Parameter(Position=0)]
                [string[]]
                $Name,
        
                [Parameter(Position=1)]
                [object[]]
                $Value        
            )
            for($i=0; $i -lt $Name.Count; $i++)
            {
                microsoft.powershell.utility\set-variable -name $Name[$i] -value $Value[$i] -scope global
            }
            Set-StrictMode -Off
        }
WrapNonExceptionThrows
10.0.10011.16384
)Microsoft.PowerShell.Workflow.ServiceCore
.NETFramework,Version=v4.5
*Microsoft (R) Windows (R) Operating System
9Copyright (c) Microsoft Corporation. All rights reserved.
Microsoft Corporation
\M3PTestAutomation,PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
XM3PTestCommon,PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
[VSTS.M3PUnitTest,PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
]VSTS.ActivityTests,PublicKey=0024000004800000940000000602000000240000525341310004000001000100b5fc90e7027f67871e773a8fde8938c81dd402ba65b9201d60593e96c492651e889cc13f1415ebb53fac1131ae0bd333c5ee6021672d9718ea31a8aebd0da0072f25d87dba6fc90ffd598ed4da35e44c398c454307e8e33b8426143daec9f596836f97c8f74750e5975c64e2189f45def46b2a2b1247adc3652bf5c308055da9
XActivityTests,PublicKey=0024000004800000940000000602000000240000525341310004000001000100eb57e8072e5fa11a7783bde0003e38bec8272f81d965c161b33b2f45404c9c9177a682ee7049400723fc456ea69b638514943375f7c594027477f9d17e8c3535e6491f382308fbf1c7795413456ac88c0c9881ef49ab9789919f5eeabc9149ccb800bbef8f04103ea24b9be1fb923006b0a272c0d8d928bfdbe947a0f3df4a99
[WorkflowCoreTest,PublicKey=0024000004800000940000000602000000240000525341310004000001000100eb57e8072e5fa11a7783bde0003e38bec8272f81d965c161b33b2f45404c9c9177a682ee7049400723fc456ea69b638514943375f7c594027477f9d17e8c3535e6491f382308fbf1c7795413456ac88c0c9881ef49ab9789919f5eeabc9149ccb800bbef8f04103ea24b9be1fb923006b0a272c0d8d928bfdbe947a0f3df4a99
[WorkflowJobsTest,PublicKey=0024000004800000940000000602000000240000525341310004000001000100eb57e8072e5fa11a7783bde0003e38bec8272f81d965c161b33b2f45404c9c9177a682ee7049400723fc456ea69b638514943375f7c594027477f9d17e8c3535e6491f382308fbf1c7795413456ac88c0c9881ef49ab9789919f5eeabc9149ccb800bbef8f04103ea24b9be1fb923006b0a272c0d8d928bfdbe947a0f3df4a99
Gd:\os\public\x86fre\onecoreuap\internal\strongnamekeys\fake\windows.snk
GMicrosoft.PowerShell.Activities.PSActivity+<GetActivityArguments>d__127
DMicrosoft.PowerShell.Workflow.PSWorkflowDebugger+<GetCallStack>d__37
ZMicrosoft.PowerShell.Workflow.PSWorkflowFileInstanceStore+<GetAllWorkflowInstanceIds>d__35
3System.Resources.Tools.StronglyTypedResourceBuilder
4.0.0.0
AllowMultiple
Inherited
Import
PSWorkflow
HelpUri.https://go.microsoft.com/fwlink/?LinkID=210606[
PSWorkflowExecutionOption
HelpUri.https://go.microsoft.com/fwlink/?LinkID=210609@
7Microsoft.PowerShell.Commands.PSWorkflowExecutionOption
Position
Mandatory
ValueFromPipeline
ValueFromPipelineByPropertyName
PSPath
Position
PSDependentWorkflow
Position
PSDependentAssemblies
lSystem.Resources.ResourceReader, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089#System.Resources.RuntimeResourceSet
PADPADP
}3jmW6z
7sxm8
K=AYM
Uu8dW
X%jq_E
ActivityFailedDueToRunspaceDisconnect
ActivityNotCached[
ActivityNotFound
ActivityParameterGroup
AsJobandJobNameNotAllowed
AsyncResultAlreadyCompleted
AsyncResultAlreadyEnded
AsyncResultNotValid
CannotRemoveWorkflowJobDirectly
CannotSupplyUriAndComputername
CmdletDoesNotImplementInputObjectProperty
CompilationErrorWhileBuildingWorkflows
CompletedString
ConnectivityGroup
CredentialParameterAssignedWithNoComputerName
CredentialParameterCannotBeSpecifiedWithNegotiateWithImplicitAuthentication
CredentialParameterCannotBeSpecifiedWithPSCertificateThumbPrint
CustomRemotingNotSupported
DebuggerCannotModifyWFVars
DebuggerStopReason
DependModuleImportFailed
DuplicateInstanceId
ElapsedTimeReached
ErrorMessageForPersistence
ErrorWhileExecutingActivityAction
ErrorWhileValidatingWorkflow
ExitReason
FailedString
ForceSuspendTimeout
ImportingWorkflowFrom
InputAndOutputGroup
InstanceOwnerIdMismatch
InstanceVersionMismatch
InvalidActivity
InvalidAsyncResult
InvalidAsyncResultSpecified
InvalidBookmark
InvalidImplementationContext
InvalidLabel
InvalidRunspaceSpecified
InvalidWorkflowDefinitionState
InvalidWorkflowExtension
JobCannotBeStarted
JobNotFound
JobQueuedForResume
JobStopInProgress
JobStoppedByDebugger
JobSuspensionInProgress
NameNotSpecifiedForParam
NewJobDefinitionNull
NewJobWrongType
NoMatchingWorkflowWasFound
NoWorkflowInstance
NoWorkflowProvided
NotSupportedLanguageMode
ObjectWasCreatedAtNotAllowedLocation
OneComputerNameAllowed
OnlyOneDefaultParameterCollectionAllowed
ParallelScriptBlockSyntax
ParamSpecifiedMoreThanOnce
ParameterCollectionOnlyUsedWithAsJobAndJobName
PersistencePathToolLong
PersistenceSizeReached
ProcessDebugCommandNotInDebugStopMode
ProgressPositionMessage
ProvidedValueIsOutOfRange
RemovingWrokflowInstance
ResumeNotValidState
RetryingAction
RetryingConnection
RunningString
RunningTimeExceeded
RunningTimeReached
SerializationErrorException
SerializationWarning
ShutdownAbort
SuspendNotValidState
SuspendedJobRecoveredFromPreviousSession
UnableToStartWorkflow
UnblockNotSupported
UninitializedSpecification
ValueFromPipelineNotSupported
ValueNotSpecifiedForParam
WFCallingWFNotSupported
WarningMessageForPersistence
WorkflowAlreadyLoaded
WorkflowChildCouldNotBeRemoved
WorkflowInstanceIncompletelyPersisted
WorkflowInstanceStateCorrupted
WorkflowNameInvalid
WorkflowNotExecuting
WorkflowNotLoaded
XamlNotNull
XamlWorkflowsNotSupported
YThe activity failed because the connection to the remote computer '{0}' was disconnected.
The workflow cannot be started because the compiled activity for the workflow was not found. Cache the workflow definition by calling DefinitionCache.Instance.Add.
6Could not find an activity for the command name '{0}'.
Activity-Specific Parameters
The argument to -PSParameterCollection can not contain AsJob, JobName, InputObject or PSParameterCollection as entries. Remove the extra entries and try again.
RThe async result is already finished. A finished operation cannot be called twice.
?An End operation has already been called for this async result.
(The IAsyncResult specified is not valid.
Cannot remove the PSWorkflowJob without removing its parent. Please remove the ContainerParentJob that contains this PSWorkflowJob.
4Cannot supply both connection URI and computer name.
=The '{0}' cmdlet does not implement the InputObject property.
JCompilation error while building dependent workflows. For details see {0}.
Completed
Connectivity
The PSCredential parameter is supported only when the PSComputerName or PSConnectionUri parameters are used. The PSCredential parameter has been ignored.
rA credential cannot be specified when NegotiateWithImplicitCredential is specified as the value of Authentication.
IA CertificateThumbprint cannot be specified when Credential is specified.
8This activity does not support custom remote management.
Workflow variables cannot be modified inside the debugger.  The command or script did not run because it attempted to modify variable '${0}'.
7The debugger Quit command has stopped the workflow job.
The activity cannot continue running because an error occurred while importing dependent module(s) '{0}' specified for activity '{1}'.  To fix this problem, verify that the module exists on the computer. If the module is not required, remove references to the module from the activity.
BA duplicate instance ID was found. The instance ID already exists.
;An elapsed time-out occurred, and the workflow was stopped.
The workflow job cannot be suspended because it does not include checkpoints (also called persistence points). To make the workflow suspendable, use the PSPersist parameter of the workflow. To suspend the workflow forcibly, use the Force parameter of the Suspend-Job cmdlet.
3An error occurred while trying to run the activity.
8An exception has occurred while validating the workflow.
Workflow complete.
Failed
nThe force-suspend time-out period cannot be zero or null. Specify a time-out period that is greater than zero.
#Importing workflow from file '{0}'.
Input and Output
*The OwnerId of the instance is mismatched.
*The Version of the instance is mismatched.
The activity is not valid: {0}
5The async result from the file provider is not valid.
.The specified IAsyncResultObject is not valid.
JThe bookmark '{0}' is not valid; it does not exist in the workflow engine.
\The specified ActivityImplementationContext is not of type CimActivityImplementationContext.
6The label is not valid: The label '{0}' doesn't exist.
$The specified runspace is not valid.
The workflow definition has been recycled, because the workflow definition cache limit of {0} has been reached. Import the workflow or module again, and then retry the operation.
Workflow files must have a file name extension of .xaml or .dll, not {0}. If you are using a workflow with a file name extension of .dll, then you must pass only one assembly.
aThe job cannot be started. The job state must be NotStarted and the job can only be started once.
^The job could not be removed because a job matching the specified criteria could not be found.
2The job has been added to the queue to be resumed.
Stop operation is in progress.
7The debugger Quit command has stopped the workflow job.
!Suspend operation is in progress.
SA parameter element specified in the configuration does not have a Name attribute. 
The workflow job could not be created because the JobInvocationInfo does not contain a JobDefinition. Initialize the JobInvocationInfo with a JobDefinition to create a workflow job.
The workflow job could not be created because the JobInvocationInfo specifies a type other than WorkflowJobSourceAdapter. Correct the JobSourceAdapter type or verify that the correct type is being used.
4No workflows were found in the specified path '{0}'.
AA workflow instance does not exist for the specified Instance ID.
#Null or empty workflow is provided.
mThe '{0}' language mode  is not supported. Supported language modes are FullLanguage and ConstrainedLanguage.
"Internal Error: The object is marked for restricted construction, but another type is constructing it elsewhere.  
Target Type:{0}
Allowed Creator Type: {1}
Actual Creator Type: {2}
Method: {3}
"Only one computer name is allowed.
The argument to -PSParameterCollection can only contain one entry where PSComputerName is set to '*'. Remove the extra entries and try again.
BThe syntax of a parallel script block is 'Parallel { <commands> }'
Parameter {0} has been specified more than once. Remove multiple references to this parameter from the session configuration, and then try again.
The PSParameterCollection parameter can only be used with AsJob, JobName and InputObject. Move the additional parameters to within the PSParameterCollection argument and try again.
The value of the PersistencePath parameter {0} exceeds the maximum allowed length. The persistence path should not be greater than {1} characters.
eThe Persistence store has reached its maximum size. Free up storage space by removing completed jobs.
D"Cannot process the debugger command until the debugger is stopped."
 {0} line:{1} char:{2}
HValue {0} is out of the allowed range. Allowed range is from {1} to {2}.
*Removing workflow instance from the table.
"The workflow could not be resumed.
&Retrying activity action: attempt {0}.
1Retrying activity connection: attempt {0} of {1}.
Running
LThe activity has exceeded the specified maximum running time of {0} seconds.
GBecause a running time-out has occurred, the workflow has been stopped.
The input objects cannot be serialized. Serialized data is required to suspend and resume workflows. To resolve the error, verify that the values of all variables and parameters are of types that can be serialized.
The input objects cannot be serialized. This might prevent the workflow from being resumed correctly. The serialization error might indicate a problem with the data contract that is defined at the type or attribute level. To resolve the problem, verify that the values of all variables and parameters can be serialized. Serialization error is: {0}.
8Shutdown request is in progress, workflow is suspending.
Suspend could not be completed.
This PSWorkflowJob was recovered from another session in a suspended state. This can indicate that the workflow was interrupted by a process failure, or a system restart. Run Resume-Job to try resuming the workflow.
,The workflow '{0}' could not be started: {1}
8Unblock is not a supported operation on a PSWorkflowJob.
The workflow job could not be created because the JobInvocationInfo was not properly initialized. Initialize the JobInvocationInfo with workflow information.
Parameters defined for workflow functions do not support ValueFromPipeline. Remove this attribute and import or define the workflow again.
TA parameter element specified in the configuration does not have a Value attribute. 
1Workflows cannot call workflows on this platform.
This workflow job cannot be suspended because there are no checkpoints (also called persistence points) in the workflow. To make the workflow job suspendable, add checkpoints to the workflow.
For more information about how to add checkpoints, see the help topics for Windows PowerShell Workflow.
 This workflow is already loaded.
NOne or more workflows that are part of the specified job could not be removed.
The workflow job cannot be resumed, either because persistence data could not be saved completely, or saved persistence data has been corrupted.  You must restart the workflow.
0The workflow instance state file does not exist.
nThe workflow name "{0}" is not a valid workflow. Specify a valid workflow name and then try the command again.
OThe workflow is not running. The current state of the workflow instance is {0}.
(The workflow instance is not yet loaded.
!The provided XAML cannot be null.
Cannot load the workflow. Only signed in-box XAML-based workflows or script-based workflows are supported in the current language mode.
Microsoft.PowerShell.Workflow.ServiceCore.pdb
_CorDllMain
mscoree.dll
!POWERSHELLWORKFLOW
VS_VERSION_INFO
VarFileInfo
Translation
StringFileInfo
000004b0
Comments
Microsoft.PowerShell.Workflow.ServiceCore
CompanyName
Microsoft Corporation
FileDescription
Microsoft.PowerShell.Workflow.ServiceCore
FileVersion
10.0.22621.1
InternalName
Microsoft.PowerShell.Workflow.ServiceCore.dll
LegalCopyright
Copyright (c) Microsoft Corporation. All rights reserved.
OriginalFilename
Microsoft.PowerShell.Workflow.ServiceCore.dll
ProductName
Microsoft (R) Windows (R) Operating System
ProductVersion
10.0.22621.1
Assembly Version
3.0.0.0
