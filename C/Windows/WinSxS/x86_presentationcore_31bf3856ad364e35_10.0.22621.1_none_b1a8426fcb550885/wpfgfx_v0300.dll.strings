!This program cannot be run in DOS mode.
Richc
.text
`.data
.rsrc
@.reloc
 !"#$%
&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
wpfgfx_v0300.dll
IMILBitmapEffectConnector_IsConnected
IMILBitmapEffectInputConnector_ConnectTo
IMILBitmapEffectInputConnector_GetConnection
IMILBitmapEffectOutputConnector_GetConnection
IMILBitmapEffectOutputConnector_GetNumberConnections
IMILBitmapEffectRenderContext_GetFinalTransform
IMILBitmapEffectRenderContext_GetOutputDPI
IMILBitmapEffectRenderContext_GetOutputPixelFormat
IMILBitmapEffectRenderContext_SetInitialTransform
IMILBitmapEffectRenderContext_SetOutputDPI
IMILBitmapEffectRenderContext_SetOutputPixelFormat
IMILBitmapEffectRenderContext_SetRegionOfInterest
IMILBitmapEffectRenderContext_SetUseSoftwareRenderer
IMILBitmapEffect_GetOutput
IMILBitmapEffect_GetParentEffect
IMILBitmapEffect_IMILBitmapEffectConnectionsInfo_GetNumberInputs
IMILBitmapEffect_IMILBitmapEffectConnectionsInfo_GetNumberOutputs
IMILBitmapEffect_IMILBitmapEffectConnections_GetInputConnector
IMILBitmapEffect_IMILBitmapEffectConnections_GetOutputConnector
IMILBitmapEffect_IMILBitmapEffectGroup_Add
IMILBitmapEffect_IMILBitmapEffectGroup_GetInteriorInputConnector
IMILBitmapEffect_IMILBitmapEffectGroup_GetInteriorOutputConnector
IMILBitmapEffect_IMILBitmapEffectPrimitive_GetAffineMatrix
IMILBitmapEffect_IMILBitmapEffectPrimitive_HasAffineTransform
IMILBitmapEffect_IMILBitmapEffectPrimitive_HasInverseTransform
IMILBitmapEffect_IMILBitmapEffectPrimitive_SetValue
IMILBitmapEffect_IMILBitmapEffectPrimitive_TransformPoint
IMILBitmapEffect_IMILBitmapEffectPrimitive_TransformRect
IMILBitmapEffect_SetInputSource
InteropDeviceBitmap_AddDirtyRect
InteropDeviceBitmap_Create
InteropDeviceBitmap_Detach
InteropDeviceBitmap_GetAsSoftwareBitmap
MIL3DCalcBrushToIdealSampleSpace
MIL3DCalcProjected2DBounds
MILAddRef
MILCreateBitmapEffectOuterPublic
MILCreateEventProxy
MILCreateFactory
MILCreateStreamFromStreamDescriptor
MILFactoryCreateBitmapEffect
MILFactoryCreateBitmapEffectContext
MILFactoryCreateBitmapEffectOuter
MILFactoryCreateBitmapRenderTarget
MILFactoryCreateMediaPlayer
MILFactoryCreateSWRenderTargetForBitmap
MILIStreamWrite
MILInitializeBitmapEffectPublic
MILLoadResource
MILMediaCanPause
MILMediaClose
MILMediaGetBufferingProgress
MILMediaGetDownloadProgress
MILMediaGetMediaLength
MILMediaGetNaturalHeight
MILMediaGetNaturalWidth
MILMediaGetPosition
MILMediaHasAudio
MILMediaHasVideo
MILMediaIsBuffering
MILMediaNeedUIFrameUpdate
MILMediaOpen
MILMediaProcessExitHandler
MILMediaSetBalance
MILMediaSetIsScrubbingEnabled
MILMediaSetPosition
MILMediaSetRate
MILMediaSetVolume
MILMediaShutdown
MILMediaStop
MILQueryInterface
MILRelease
MILRenderTargetBitmapClear
MILRenderTargetBitmapGetBitmap
MILStreamNotifyReadComplete
MILSwDoubleBufferedBitmapAddDirtyRect
MILSwDoubleBufferedBitmapCreate
MILSwDoubleBufferedBitmapGetBackBuffer
MILSwDoubleBufferedBitmapProtectBackBuffer
MILUpdateSystemParametersInfo
MilChannel_AppendCommandData
MilChannel_BeginCommand
MilChannel_CommitChannel
MilChannel_EndCommand
MilChannel_GetMarshalType
MilChannel_SendSyncCommand
MilChannel_SetNotificationWindow
MilChannel_SetReceiveBroadcastMessages
MilCompositionEngine_DeinitializePartitionManager
MilCompositionEngine_EnterCompositionEngineLock
MilCompositionEngine_ExitCompositionEngineLock
MilCompositionEngine_GetComposedEventId
MilCompositionEngine_InitializePartitionManager
MilCompositionEngine_UpdateSchedulerSettings
MilComposition_PeekNextMessage
MilComposition_SyncFlush
MilComposition_WaitForNextMessage
MilConnection_CreateChannel
MilConnection_DestroyChannel
MilContent_AttachToHwnd
MilContent_DetachFromHwnd
MilCreateReversePInvokeWrapper
MilGlyphCache_AppendCommandDataAtRenderTime
MilGlyphCache_BeginCommandAtRenderTime
MilGlyphCache_EndCommandAtRenderTime
MilGlyphRun_SetGeometryAtRenderTime
MilPlayer_Create
MilPlayer_Process
MilReleasePInvokePtrBlocking
MilResource_CreateOrAddRefOnChannel
MilResource_DuplicateHandle
MilResource_GetRefCountOnChannel
MilResource_ReleaseOnChannel
MilResource_SendCommand
MilResource_SendCommandBitmapSource
MilResource_SendCommandMedia
MilSyncPacketTransport_Create
MilSyncPacketTransport_Present
MilTransport_AddRef
MilTransport_Create
MilTransport_CreateFromPacketTransport
MilTransport_CreateTransportParameters
MilTransport_DisconnectTransport
MilTransport_Release
MilUtility_ArcToBezier
MilUtility_CopyPixelBuffer
MilUtility_GeometryGetArea
MilUtility_GetPointAtLengthFraction
MilUtility_GetTileBrushMapping
MilUtility_PathGeometryBounds
MilUtility_PathGeometryCombine
MilUtility_PathGeometryFlatten
MilUtility_PathGeometryHitTest
MilUtility_PathGeometryHitTestPathGeometry
MilUtility_PathGeometryOutline
MilUtility_PathGeometryWiden
MilUtility_PolygonBounds
MilUtility_PolygonHitTest
MilVersionCheck
MilVisualTarget_AttachToHwnd
MilVisualTarget_DetachFromHwnd
SetMilPerfInstrumentationFlags
D$$PW
t$ SP
L$ SP
t$ SVP
t$ SP
t$ SVWP
batch processing error
T_^[]
w(96u
;_Lt6V
_^[Y]
N(PQW
Y__^[
Software\Microsoft\Avalon.Graphics
=]mE=H
i^<io
Q>U0j
I.?>*:R>
e>2U0>
T$0RP
D$@PS
D$ PW
D$ _^[
Sl;V@
SVWhLp
kernel32.dll
MbP?U
8_Ht}
_^[Y]
PSQR3
uTVWh
L$ vD
D$HPW
@_^[]
PSQR3
L$XQP
L$xQP
QQSVW3
  !!!"""##$$$%%%&&&'''((())))***+++,,,,---....////000011122223333344445555666677777888899999:::::;;;;;<<<<<=====>>>>>?????@@@@@AAAAABBBBBBCCCCCCDDDDDEEEEEEFFFFFFGGGGGGHHHHHHIIIIIIJJJJJJKKKKKKKLLLLLLMMMMMMMNNNNNNOOOOOOOPPPPPPPQQQQQQQRRRRRRRSSSSSSSTTTTTTTTUUUUUUUVVVVVVVWWWWWWWWXXXXXXXXYYYYYYYZZZZZZZZ[[[[[[[[\\\\\\\\\]]]]]]]]^^^^^^^^_________````````aaaaaaaaabbbbbbbbbccccccccdddddddddeeeeeeeeeefffffffffggggggggghhhhhhhhhhiiiiiiiiijjjjjjjjjjkkkkkkkkkklllllllllmmmmmmmmmmnnnnnnnnnnnooooooooooppppppppppqqqqqqqqqqqrrrrrrrrrrssssssssssstttttttttttuuuuuuuuuuuvvvvvvvvvvvwwwwwwwwwwwxxxxxxxxxxxyyyyyyyyyyyyzzzzzzzzzzz{{{{{{{{{{{{|||||||||||}}}}}}}}}}}}~~~~~~~~~~~~
j@[Sj
j!X+E
T$4RP
QQSVW
t$$SV
t$DPR3
t$ SVW
ffffff
PX9u0
SVWQQ
SVWu$
D$(QQ
L$(QS
KXv=;M
t$ SWP
t$ SWP
PPPV3
t$ SWP
{8;7t,
!9!;;
9^\v4
G;~\r
P`VQRP
C\PjB
{0;7t*
D$0+D$(
D$4+D$,9L$
j@[Sj
8_hLp
Q ;P 
UseReferenceRasterizer
9~$t(
DisableHWAcceleration
Software\Microsoft\Direct3D
DisableD3DXPSGP
DisablePSGP
TSSSS
TSSSS
d3d9.dll
Direct3DCreate9Ex
Direct3DCreate9
QQSW3
G;~Lr
AAGGNK
t-Vj 
Software\Microsoft\Windows NT\CurrentVersion\WinSAT
VideoMemoryBandwidth
VideoMemorySize
GLSV3
9FPt7
RequiredVideoDriverDate
HardwareInformation.MemorySize
InstalledDisplayDrivers
pLNWxN
:f;9u+f
PixelStructure
GammaLevel
ClearTypeLevel
TextContrastLevel
Wu^!]
IsWow64Process
$;%L0r
t8WVS
t)WVS
Tj Q3
TVh2i
ecKpH
SVVVh
DISPLAY
@_^[]
QQSV3
FX;Fl
Fd^[]
T$$RP
t$,WP
u$+D$
;L$,}
sdQPRV
^dPRS
8M$VW
F [Y]
SVSSS
WerRegisterMemoryBlock
D$<Pj
T$(RP
T$8RP
D$8+D$,+
L$<+L$0
D$DPQ
t$8VW
2;1^u
9~Xu)
F(+F 9F0
\$,+\$$
t$(VS
GDj`Y3
_^[Y]
UUUUUU
UUUUUU
T$(RP
PRQV3
T;A s
_^[Y]
G Hu5
O8+O0IxC
G8+G0H
F4+F,S
V0;V8
;tcJtRJtAJt0Jt
**U*UU
E :A`u(
;AHu 
;ALtz
s(VQQ
t$ SP
C@_^3
8^(t39^$t
)AP^]
t@SVW
!~ !~
F;s,r
C<9x,
Wp+Wh
Ot+Ol
_^[Y]
Fp+Fh9
Ft+Fl9
G$;F$u$
G0;F0u
E(_^[]
@_^[]
X8+XH;
t/9{dtG
K`_^[
C`;C,u
@_^[]
PPPIP
D$(Pj
D$(PVV
D$hPVV
T$4RP
T$,RP
DSVW3
F9t$ 
F0PVQQ
O$VPQW
C Pj[
L$,QV
L$ QV
UUUUUU
t$(SV
F@;FH
F0;F8
""*"**3f
KXv=;M
t$ SWP
^dPRS
;L$$w
C v4;E
D$pPVV
_^[Y]
_^[Y]
O\9wl
GX_^[
T$(G;
_^[Y]
O<B;U
default
V@;PX
Data_PS.
_PS_ConstData
float 
// Pixel Shader Constant Data
struct PixelShaderConstantData
PixelShaderConstantData Data_PS;
rDB;U
9w8t\
SSSS%
PRVWjZ
dynamic_cast
discard
delete
D$,QQ
QQSVW
]$VWS
]$VWQQ
QRPh0P
user32.dll
UpdateLayeredWindowIndirect
L$0}M
L$TQP
D$LG;|$0
L$ Qh
){4[]
G;~4r
G;~4r
Fd^[]
F49F8[
QQVW3
F;wLr
A [9y 
    float4 WorldPos2D,
    Transform2D_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    Output.Diffuse = float4(1.0, 1.0, 1.0, 1.0);
    Output.Position = mul(WorldPos2D, Data.mat4x4WorldToProjection);
mat4x4WorldToProjection
    float4 Diffuse,
    inout float4 BlendColor
    )
    BlendColor = Diffuse;
    float4 BlendColor,
    inout float4 curPixelColor
    )
    curPixelColor *= BlendColor;
    float4 Diffuse,
    inout float4 curPixelColor
    )
    curPixelColor.a *= Diffuse.a;
    float2 inputUV,
    MultiplyTexture_Transform_InputUV_VS_ConstData data,
    inout float2 outputUV
    )
    outputUV.x = inputUV.x*data.mat3x2TextureTransform[0][0] + inputUV.y*data.mat3x2TextureTransform[1][0] + data.mat3x2TextureTransform[2][0];
    outputUV.y = inputUV.x*data.mat3x2TextureTransform[0][1] + inputUV.y*data.mat3x2TextureTransform[1][1] + data.mat3x2TextureTransform[2][1];
    float2 inputUV,
    MultiplyAlphaMask_Transform_InputUV_VS_ConstData data,
    inout float2 outputUV
    )
    outputUV.x = inputUV.x*data.mat3x2TextureTransform[0][0] + inputUV.y*data.mat3x2TextureTransform[1][0] + data.mat3x2TextureTransform[2][0];
    outputUV.y = inputUV.x*data.mat3x2TextureTransform[0][1] + inputUV.y*data.mat3x2TextureTransform[1][1] + data.mat3x2TextureTransform[2][1];
   float2 uv,
   sampler TextureSampler,
   inout float4 curPixelColor
    float4 sampledColor = tex2D(TextureSampler, uv);
    curPixelColor *= sampledColor;
   float2 uv,
   sampler TextureSampler,
   inout float4 curPixelColor
    float4 sampledColor = tex2D(TextureSampler, uv);
    curPixelColor.rgb *= sampledColor.rgb;
    float2 inputUV,
    inout float2 outputUV
    )
    outputUV = inputUV;
    MultiplyConstant_PS_ConstData data,
    inout float4 curPixelColor
    )
    curPixelColor *= data.diffuse;
    MultiplyAlpha_PS_ConstData data,
    inout float4 curPixelColor
    )
    curPixelColor *= data.alpha.a;
    MultiplyAlpha_NonPremultiplied_PS_ConstData data,
    inout float4 curPixelColor
    )
    curPixelColor.a *= data.alpha.a;
    in    float2  uv,
    in    sampler TextureSampler,
    inout float4  curPixelColor
    )
    float4 sampledColor = tex2D(TextureSampler, uv);
    curPixelColor *= sampledColor.a;
    float2 inputUV,
    MultiplySuperSampleTexture_Transform_InputUV_VS_ConstData data,
    inout float4 outputUV01,
    inout float4 outputUV23
    )
    float2 uv;
    uv.x = inputUV.x*data.mat3x2TextureTransform[0][0] + inputUV.y*data.mat3x2TextureTransform[1][0] + data.mat3x2TextureTransform[2][0];
    uv.y = inputUV.x*data.mat3x2TextureTransform[0][1] + inputUV.y*data.mat3x2TextureTransform[1][1] + data.mat3x2TextureTransform[2][1];
    float2 unitUMinor = float2(data.ddxyEstimated.x / 8, 0);
    float2 unitVMinor = float2(0, data.ddxyEstimated.y / 8);
    float2 unitUMajor = unitUMinor * 3;
    float2 unitVMajor = unitVMinor * 3;
    outputUV01.xy = uv + unitUMajor - unitVMinor;
    outputUV01.zw = uv - unitUMinor - unitVMajor;
    outputUV23.xy = uv - unitUMajor + unitVMinor;
    outputUV23.zw = uv + unitUMinor + unitVMajor;
    float2 inputUV,
    MultiplySuperSampleTexture_NoTransform_InputUV_VS_ConstData data,
    inout float4 outputUV01,
    inout float4 outputUV23
    )
    float2 uv = inputUV;
    float2 unitUMinor = float2(data.ddxyEstimated.x / 8, 0);
    float2 unitVMinor = float2(0, data.ddxyEstimated.y / 8);
    float2 unitUMajor = unitUMinor * 3;
    float2 unitVMajor = unitVMinor * 3;
    outputUV01.xy = uv + unitUMajor - unitVMinor;
    outputUV01.zw = uv - unitUMinor - unitVMajor;
    outputUV23.xy = uv - unitUMajor + unitVMinor;
    outputUV23.zw = uv + unitUMinor + unitVMajor;
   float4 uv01,
   float4 uv23,
   sampler TextureSampler,
   inout float4 curPixelColor
    float4 sampledColor0 = tex2D(TextureSampler, uv01.xy);
    float4 sampledColor1 = tex2D(TextureSampler, uv01.zw);
    float4 sampledColor2 = tex2D(TextureSampler, uv23.xy);
    float4 sampledColor3 = tex2D(TextureSampler, uv23.zw);
    float4 sampledColorAvg = (sampledColor0 + sampledColor1 + sampledColor2 + sampledColor3) / 4;
    curPixelColor *= sampledColorAvg;
   float4 uv01,
   float4 uv23,
   sampler TextureSampler,
   inout float4 curPixelColor
    float4 sampledColor0 = tex2D(TextureSampler, uv01.xy);
    float4 sampledColor1 = tex2D(TextureSampler, uv01.zw);
    float4 sampledColor2 = tex2D(TextureSampler, uv23.xy);
    float4 sampledColor3 = tex2D(TextureSampler, uv23.zw);
    float4 sampledColorAvg = (sampledColor0 + sampledColor1 + sampledColor2 + sampledColor3) / 4;
    curPixelColor.rgb *= sampledColorAvg.rgb;
    float2 samplePos,
    sampler TextureSampler,
    MultiplyRadialGradientCentered_PS_ConstData GradInfoParams,
    inout float4 color
    )
    float4 sampleGradientColor;
    // Get distance (in unit circle) from sample point to the gradient origin:
    float uc_dx = samplePos.x;
    float uc_dy = samplePos.y;
    float distToOriginSqr = uc_dx*uc_dx + uc_dy*uc_dy;
    // Simple radial gradient
    float sampleGradientTexCoord = sqrt(distToOriginSqr);
    // Ensure that the gradient space does not wrap around,
    // interpolating with the last stop at the center point.
    if (sampleGradientTexCoord < GradInfoParams.flHalfTexelSizeNormalized)
    {
        sampleGradientTexCoord = GradInfoParams.flHalfTexelSizeNormalized;
    }
    sampleGradientColor = tex1D(TextureSampler, sampleGradientTexCoord);
    color *= sampleGradientColor;
    float2 samplePos,
    sampler TextureSampler,
    MultiplyRadialGradientNonCentered_PS_ConstData GradInfoParams,
    inout float4 color
    )
    //
    // There are overflow issues in refrast and hw implementation of clamping.
    // Therefore we need to clamp ourselves in areas of the shader that have a
    // high risk of overflowing.
    //
    // We will go with 32768 as the maximum number of wraps that's support in 
    // supported since that's what refrast has.
    //
    #define MAX_RELIABLE_WRAP_VALUE 32768
    float u;
    float2 sampleToFirstTexelRegionCenter = samplePos - GradInfoParams.ptFirstTexelRegionCenter;
    float firstTexelRegionRadiusSquared = GradInfoParams.flHalfTexelSizeNormalized * GradInfoParams.flHalfTexelSizeNormalized;
    if (dot(sampleToFirstTexelRegionCenter, sampleToFirstTexelRegionCenter) <
        firstTexelRegionRadiusSquared)
    {
        u = GradInfoParams.flHalfTexelSizeNormalized;
    }
    else
    {
        // Get distance (in unit circle) from sample point to the gradient origin:
        float2 sampleToOrigin = samplePos - GradInfoParams.ptGradOrigin;
        float A = dot(sampleToOrigin, sampleToOrigin);
        
        float B = 2.0f * dot(GradInfoParams.ptGradOrigin, sampleToOrigin);
        float2 ptGradOriginPerp = {GradInfoParams.ptGradOrigin.y, -GradInfoParams.ptGradOrigin.x};
        float sampleToOriginCrossOriginNorm = dot(sampleToOrigin, ptGradOriginPerp);
        // see brushspan.cpp for an explanation of why the determinant is calculated this way.
        float determinant = 
            4.0f * (  GradInfoParams.gradientSpanNormalized * GradInfoParams.gradientSpanNormalized * A
                    - sampleToOriginCrossOriginNorm * sampleToOriginCrossOriginNorm);
        
        if (0.0f > determinant)
        {
            // This complex region appears when the gradient origin is outside the
            // ellipse defining the end of the gradient. When rendering this region
            // we choose the last texel color.
            u = 1.0f - GradInfoParams.flHalfTexelSizeNormalized;
        }
        else
        {
            u = (2 * A * GradInfoParams.gradientSpanNormalized) / (sqrt(determinant) - B);
            
            if (u < GradInfoParams.flHalfTexelSizeNormalized)
            {
                if (u < 0.0)
                {
                    // This negative region appears when the gradient origin is outside the
                    // ellipse defining the end of the gradient. When rendering this region
                    // we choose the last texel color.
                    u = 1.0f - GradInfoParams.flHalfTexelSizeNormalized;
                }
                else                                                         
                {
                    // Ensure that the gradient space does not wrap around,
                    // interpolating with the last stop at the center point.
                    // This value for u picks the first texel in the texture.
                    
                    // Given an infinite precicision machine, we'd never get to this case since
                    // we should have skipped the quadratic equation up top. Nevertheless,
                    // we do not have an infinite precision machine, so we may still get here.
                    u = GradInfoParams.flHalfTexelSizeNormalized;
                }
            }   
            else
            {
                //
                // Refrast & probably hw implement wrapping/clamping logic by first casting
                // the float to an integer and then doing integer math.  They are not robust
                // against integer overflow, so we need to do the check manually.
                //
                if (u > MAX_RELIABLE_WRAP_VALUE)
                {
                    u = 1.0f;
                }
            }
        }
    }    
    color *= tex1D(TextureSampler, u);
gradientSpanNormalized
ptFirstTexelRegionCenter
ptGradOrigin
    in  Get3DTransforms_VS_ConstData Data,
    out float4x4 mat4x4WorldViewTransform,
    out float4x4 mat4x4WorldViewProjTransform,
    out float4x4 mat4x4WorldViewAdjTransTransform
    )
    mat4x4WorldViewTransform         = Data.mat4x4WorldViewTransform;
    mat4x4WorldViewProjTransform     = Data.mat4x4WorldViewProjTransform;
    mat4x4WorldViewAdjTransTransform = Data.mat4x4WorldViewAdjTransTransform;
mat4x4WorldViewAdjTransTransform
mat4x4WorldViewProjTransform
mat4x4WorldViewTransform
    in    float4x4 mat4x4WorldViewTransform,
    in    float4x4 mat4x4WorldViewProjTransform,
    in    float4x4 mat4x4WorldViewAdjTransTransform,
    inout float4   Position,
    inout float3   Normal,
    inout VertexShaderOutput Output
    )
    Normal          = normalize(mul(Normal, (float3x3)mat4x4WorldViewAdjTransTransform));
    // NOTE: Dividing the output position by w here will completely break
    //       textures. The card needs to interpolate different 1/w values.
    Output.Position = mul(Position, mat4x4WorldViewProjTransform);
    Position        = mul(Position, mat4x4WorldViewTransform);
    Position        /= Position.w;
    CalcAmbientLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    Output.Diffuse = Data.Color;
    inout float3 TransformedNormal
    )
    TransformedNormal *= -1.0;
    in    float3   TransformedNormal,
    in    CalcDiffuseDirectionalLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    Output.Diffuse.rgb += Data.Color.rgb * max(dot(TransformedNormal, Data.Direction), 0);
    in    float4   TransformedPosition,
    in    float3   TransformedNormal,
    in    CalcDiffusePointLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    float3 VecToLight = Data.Position - TransformedPosition;
    float DistToLight = length(VecToLight);
    // normalize L
    VecToLight /= DistToLight;
    // the max is to ensure that the attenuation only diminishes the light
    float atten = 1.0 / max(Data.AttenAndRange.x
                            + Data.AttenAndRange.y * DistToLight
                            + Data.AttenAndRange.z * DistToLight * DistToLight,
                            1.0);
    // AttenAndRange.w is the light's range
    Output.Diffuse.rgb += Data.Color.rgb
                          * max(dot(TransformedNormal, VecToLight), 0)
                          * atten
                          * step(DistToLight, Data.AttenAndRange.w);
    in    float4   TransformedPosition,
    in    float3   TransformedNormal,
    in    CalcDiffuseSpotLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    float3 VecToLight = Data.Position - TransformedPosition;
    float DistToLight = length(VecToLight);
    // normalize L
    VecToLight /= DistToLight;
    // the max is to ensure that the attenuation only diminishes the light
    float atten = 1.0 / max(Data.AttenAndRange.x
                            + Data.AttenAndRange.y * DistToLight
                            + Data.AttenAndRange.z * DistToLight * DistToLight,
                            1.0);
    float rho = max(dot(Data.Direction, VecToLight), 0);
    // CosHalfPhiAndCosDiff.x = cos(Phi/2)
    // CosHalfPhiAndCosDiff.y = cos(Theta/2) - cos(Phi/2)
    float spot = saturate((rho - Data.CosHalfPhiAndCosDiff.x) / Data.CosHalfPhiAndCosDiff.y);
    // AttenAndRange.w is the light's range
    Output.Diffuse.rgb += Data.Color.rgb
                          * max(dot(TransformedNormal, VecToLight), 0)
                          * atten
                          * spot
                          * step(DistToLight, Data.AttenAndRange.w);
    in    GetSpecularPower_VS_ConstData Data,
    out   float SpecularPower,
    inout VertexShaderOutput Output
    )
    SpecularPower = Data.SpecularPower.x;
    // Initialize the output alpha because the specular
    // lighting functions ignore it.
    Output.Diffuse.a = 0.0;
    in    float    SpecularPower,
    in    float4   TransformedPosition,
    in    float3   TransformedNormal,
    in    CalcSpecularDirectionalLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    // Note: This does not actually generate a branch. The compiler translates this into
    //       an instruction (slt) that returns 0 or 1 and multiplies that times the output color
    if (dot(Data.Direction, TransformedNormal) > 0)
    {
        // in WorldView space, the camera is at <0> so just invert the position
        float3 HalfVector = normalize(normalize(-TransformedPosition.xyz) + Data.Direction);
        Output.Diffuse.rgb += Data.Color.rgb * pow(max(dot(HalfVector, TransformedNormal), 0), SpecularPower);
    }
    in    float    SpecularPower,
    in    float4   TransformedPosition,
    in    float3   TransformedNormal,
    in    CalcSpecularPointLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    float3 VecToLight = Data.Position - TransformedPosition;
    // Note: This does not actually generate a branch. The compiler translates this into
    //       an instruction (slt) that returns 0 or 1 and multiplies that times the output color
    if (dot(VecToLight, TransformedNormal) > 0)
    {
        float DistToLight = length(VecToLight);
        // normalize L
        VecToLight /= DistToLight;
        // in WorldView space, the camera is at <0> so just invert the position
        float3 HalfVector = normalize(normalize(-TransformedPosition.xyz) + VecToLight);
        // the max is to ensure that the attenuation only diminishes the light
        float atten = 1.0 / max(Data.AttenAndRange.x
                                + Data.AttenAndRange.y * DistToLight
                                + Data.AttenAndRange.z * DistToLight * DistToLight,
                                1.0);
        // AttenAndRange.w is the light's range
        Output.Diffuse.rgb += Data.Color.rgb
                              * pow(max(dot(TransformedNormal, HalfVector), 0), SpecularPower)
                              * atten
                              * step(DistToLight, Data.AttenAndRange.w);
    }
    in    float    SpecularPower,
    in    float4   TransformedPosition,
    in    float3   TransformedNormal,
    in    CalcSpecularSpotLighting_VS_ConstData Data,
    inout VertexShaderOutput Output
    )
    float3 VecToLight = Data.Position - TransformedPosition;
    // Note: This does not actually generate a branch. The compiler translates this into
    //       an instruction (slt) that returns 0 or 1 and multiplies that times the output color
    if (dot(VecToLight, TransformedNormal) > 0)
    {
        float DistToLight = length(VecToLight);
        // normalize L
        VecToLight /= DistToLight;
        // in WorldView space, the camera is at <0> so just invert the position
        float3 HalfVector = normalize(normalize(-TransformedPosition.xyz) + VecToLight);
        // the max is to ensure that the attenuation only diminishes the light
        float atten = 1.0 / max(Data.AttenAndRange.x
                                + Data.AttenAndRange.y * DistToLight
                                + Data.AttenAndRange.z * DistToLight * DistToLight,
                                1.0);
        float rho = max(dot(Data.Direction, VecToLight), 0);
        // CosHalfPhiAndCosDiff.x = cos(Phi/2)
        // CosHalfPhiAndCosDiff.y = cos(Theta/2) - cos(Phi/2)
        float spot = saturate((rho - Data.CosHalfPhiAndCosDiff.x) / Data.CosHalfPhiAndCosDiff.y);
        // AttenAndRange.w is the light's range
        Output.Diffuse.rgb += Data.Color.rgb
                              * pow(max(dot(TransformedNormal, HalfVector), 0), SpecularPower)
                              * atten
                              * spot
                              * step(DistToLight, Data.AttenAndRange.w);
    }
TNullFunction
Transform2D
MultiplyByInputDiffuse
MultiplyByInputDiffuse_NonPremultipliedInput
MultiplyTexture_Transform_InputUV
MultiplyTexture_NoTransformFromUV
MultiplyConstant
MultiplyAlpha
MultiplyAlpha_NonPremultiplied
MultiplyAlphaMask_NoTransformFromUV
MultiplyAlphaMask_Transform_InputUV
MultiplySuperSampleTexture_Transform_InputUV
MultiplySuperSampleTexture_NoTransform_InputUV
MultiplyRadialGradientCentered
MultiplyRadialGradientNonCentered
Get3DTransforms
Transform3D
CalcAmbientLighting
FlipNormal
CalcDiffuseDirectionalLighting
CalcDiffusePointLighting
CalcDiffuseSpotLighting
GetSpecularPower
CalcSpecularDirectionalLighting
CalcSpecularPointLighting
CalcSpecularSpotLighting
w@B;U
mat3x2TextureTransform
diffuse
alpha
ddxyEstimated
flHalfTexelSizeNormalized
Color
Direction
Position
AttenAndRange
SpecularPower
CosHalfPhiAndCosDiff
@ ;A 
D$8PQV
D$hPS
E j ^u
v`j V
QQSW3
QQSV3
T$LRj
9~(u`
D$$Pj
D$ Pj
QQSVW
Gd;Gh
|$,Yu
D$PPj
L$0VP
Sj Z3
// Samplers...
// Pixel Fragment Data...
Output
Diffuse
>struct 
float4x4 
Output.
TEXCOORD
_ConstantTable
Data_VS.
T    for (int i = 0; i < 
; ++i)
    {
Normal
WorldView
WorldViewProj
WorldViewAdjTrans
    }
0123456789
// Fragment Vertex Shader functions...
D3DX_VERSION
DIRECT3D_VERSION
DIRECT3D
// Main Vertex Shader
VertexShaderOutput
VertexShader(
    float4 Position : POSITION,
    // Right now, only COLOR0 or NORMAL is used in a pass. The compiler
    // optimizes away what's not used.
    float4 Diffuse  : COLOR0,
    float3 Normal   : NORMAL,
    float2 UV_0     : TEXCOORD0,
    float2 UV_1     : TEXCOORD1
    )
    VertexShaderOutput Output = (VertexShaderOutput)0;
    // These will be optimized away when not in use
    float4x4 View, WorldView, WorldViewProj, WorldViewAdjTrans;
    float    SpecularPower;
        );
    Output.Diffuse.rgb = min(Output.Diffuse.rgb, 1.0);
    return Output;
// Main Pixel Shader
float4
PixelShader(
    float4 Position : POSITION,
    float4 Diffuse  : COLOR0
    ) : COLOR
    float4 curColor = Diffuse;
        
curColor
        );
    return curColor;
struct VertexShaderOutput
    float4 Position : POSITION;
    float4 Diffuse  : COLOR0;
float4 
// Fragment Pixel Shader fragments...
// Copyright (c) Microsoft Corporation.  All rights reserved.
// Technique
technique T0
    pass P0
    {
        VertexShader = compile vs_2_0 VertexShader();
        PixelShader  = compile ps_2_0 PixelShader();
    }
// End of Dynamic Shader Code
_VS_ConstData
// Vertex Fragment Data...
// Vertex Shader Constant Data
struct VertexShaderConstantData
VertexShaderConstantData Data_VS;
QQSVW3
VertexShader
        
vs_3_0
9p4t'9p
 SVW3
Pst"=
ptt"=
 SVW3
@;F(r
PH9PX
vs_3_sw
vs_2_sw
vs_2_a
vs_2_0
vs_1_1
ps_3_sw
ps_2_sw
ps_2_b
ps_2_a
ps_2_0
ps_1_4
ps_1_3
ps_1_2
column_major
Stack
UNKNOWN
color
false
Direct3DShaderValidatorCreate9
d3d9.dll
vertexfragment
pixelfragment
samplerCUBE
sampler3D
sampler2D
sampler1D
textureCUBE
texture3D
texture2D
texture1D
texture
string
double
float
Values
Value
matrix
vector
default value
initializer
function parameters
structure members
global variables
VFace
Psize
Tessfactor
Specular
Sample
Depth
PositionT
Binormal
Tangent
Texcoord
PSize
BlendIndices
BlendWeight
Microsoft (R) D3DX9 Shader Compiler 4.08.01.0612
pT9pXs
Q(9PT
I,9HX
`SVW3
@;F,r
u#AA@@
QQSV3
G49^ t
G tR9^$
G,t,9^0t
value
annotation members
loop control variables
local variables
initial value
QQSVW
K PPQP
9Ntum@;F
QQSVW
QSVW3
90tT9p
1F`9_
(SVW3
VWSh0
tKB;V
dword
HHt)Hu
H(;OT
H$;OH
Kp;Opu
Kl;Olu
C0_^3
HSVW3
HHt,Hu
@l@tF
intrinsic function '%s' is not yet implemented
tex1D will considered dependent since texcoord was not declared as at least float2
@_^[]
UsageType
9P$tv
X@;Y@
input
output
QQSVW
Outputs
Inputs
Parameters
@_^[]
u(jvh
WSjQhh
WSjbh\
WShQ"
WShb 
;E SVW
Semantics
Sj,[V
B0@;A
9] VW
_0C;^
V89Q8t
H8;N8t
Decls
mutable
friend
continue
const_cast
const
compile_fragment
compile
class
catch
CTABP
I`;H`
@`;F`
zl;ylt
Cl u69s
9F<tw
I$;N$
RWWRR
C PQQ
C PQQ
Tinternal error: unhandled production
comma expression used where an initializer list may have been intended
DwordExpr
'%s' already has a body
VariableDim
invalid use of '%s'
TypeDefs
9^ uE9^$t
G$tZ9^(
G,t=9^0u 9^4
QSVW3
SWWWW
A Zt,
0NNt0N
QQSV3
dSVW3
9Htt%
QQSVW
|BC;]
9^\WtJ3
9^0t}
|/9^`t(
switch
struct
static_cast
static
stateblock_state
sizeof
signed
short
shared
sampler_state
Passes
DzaB;U
u,AA@@
Swizzle
States
tH9X 
Stmts
|f9~L
|89}0t
l;zlu
virtual
volatile
vertexshader
XFt$=
PhCTAB
3_^[]
Tt)W3
QQSVW3
PixelShader
p tt=
9^8Wt6
BH;FH
Xj _3
Xj _3
transpose
texCUBEproj
texCUBElod
texCUBEgrad
texCUBEbias
texCUBE
tex3Dproj
tex3Dlod
tex3Dgrad
tex3Dbias
tex3D
tex2Dproj
tex2Dlod
tex2Dgrad
tex2Dbias
tex2D
tex1Dproj
tex1Dlod
tex1Dgrad
tex1Dbias
tex1D
smoothstep
saturate
rsqrt
round
refract
reflect
radians
normalize
noise
log10
length
ldexp
isnan
isinf
isfinite
fwidth
frexp
floor
faceforward
distance
determinant
degrees
cross
clamp
atan2
D3DCOLORtoUBYTE4
sincos
internal error: unrecognized expression
function '%s' missing implementation
internal error: l-value expected
typename
typedef
throw
template
t!HHt
while
namespace
extern
explicit
break
inout
inline
o_%s%d
TvTJJ
vs_2_x
vs_1_0
vs.3.sw
vs.3.0
vs.2.x
vs.2.sw
vs.2.a
vs.2.0
vs.1.1
vs.1.0
tx_1_0
ps_2_x
ps_1_0
ps.3.sw
ps.3.0
ps.2.x
ps.2.sw
ps.2.b
ps.2.a
ps.2.0
ps.1.4
ps.1.3
ps.1.2
ps.1.1
ps.1.0
ps_1_1
YYt&R
technique
__FILE__
__LINE__
public
protected
private
pixelshader
return
reinterpret_cast
register
row_major
Arguments
VVVVRVV
ps_3_0
operator
PHB9U
WH;SX
stateblock
sampler
WQShY8
WPShu8
@H;GHu
using
unsigned
union
uniform
zH;yHu"
t$A;M
_Sampler
sampler 
9P$u.9P
v);x8
float2 
SSSSVS
I0;K0
[0;Z0
D$,P3
D$ Pj
asm_fragment
E C;]
u@9E u;
9x<u$
9_4vQ
|!C;_4r
T$XRP
P(j)j
P(j2j
P(jtj
MaxMultisampleType
WWWS3
WWWSj
@PWWS
@PPWS
(VWQQ
D$0PVV
D$0PVV
D$(QQ
UseDX9LText
DisableGpuThrottling
WARNING: MILCore: Direct3D 9 is not installed or load failed.
WARNING: MILCore: Unable to locate Direct3DCreate9.
Please check for proper Direct3D 9 installation.
Wow64DisableWow64FsRedirection
Wow64RevertWow64FsRedirection
DwmAttachMilContent
DwmDetachMilContent
EnableDebugControl
MilCore-%d
D$PSP
D$,PSj
D$HPSS
D$hj8
D$PSP
L$ Qj
D$Lj4P
F;t$Tr
L$ Qj
G;{ r
C9_ vR
C;_ s
DwmGetTransportAttributes
ReleaseOnChannel was called on a resource that is not anymore on this channel
D$,Pj
D$,Pj
intermediate rendering error
presentation error
HHttHt7H
Invalid dirty region
9\$@t-
9u4t^
69u u
9u$t2
T$\RV
T$,RP
T$<RP
9{Ht2
D$ PW
D$ Pj
9u8t 
]9u,u
D$0PSQ
L$(QS
L$,QS
j#X9E
f:\dd\wpf\src\graphics\core\hw\d3ddevicemanager.cpp
CD3DDeviceManager::ComposeCreateParameters
(dwFlags & MilRTInitialization::FullScreenNoAutoRotate) == 0
NeedsRePresentOnWake
j QRj
N8j Qj
D$8PV
f:\dd\wpf\src\graphics\core\hw\hwbitmapcolorsource.cpp
CHwBitmapColorSource::GetSysMemUpdateSurfaceSource
(m_pvReferencedSystemBits == 0)
The bitmap bits moved. We cannot handle this well because we reference them
v)j j
float3 
float4x2 
Ht6HHt
$WWWWj
D$tPj
F8+F0P
!$&(*,.02468:<>@BCEGIKLNPQSUVXZ[]^`acdfgijlmopqstuwxy{|}~
G8+G0H
G8+G0H
L$DQ3
HtVHt2Ht
HHtLHt(H
lSShb
D$(+D$4P
:QShP
f:\dd\wpf\src\graphics\common\shared\milcom.cpp
CMILCOMBase::InternalAddRef
Tried to AddRef an object which has previously been freed (refcount went to 0).
L$ ;L$(}
WWWWj
D$ +D$
D$(+D$
Could not create display set.
DwmIsCompositionEnabled
DWMAPI.dll
D$$PW
D$ Pj
L$8QP
KH+K@
L$ QP
K,+K$
D$(J#
T$$}H
T$$~H
'%s' : macro redefinition
QWSSPR
C\uX9CDuS
unexpected end of file
unexpected tokens following preprocessor directive
t>OOt:O
comment continues past end of file
hex value truncated to 32bits
octal value truncated to 32bits
decimal value truncated to 32bits
@p@9F4s
XH;ZH
BH;FHu1
XH;ZHu+
internal error: argument missing context (A%u)
NdC;]
V<;PT
asymetric returns from if statements not yet implemented
internal error: unrecognized statement
l;zlu.
'%s': output parameter '%s' never assigned a value
'%s': output parameter '%s' missing semantics
'%s': function return value missing semantics
'%s': input parameter '%s' missing semantics
'%s': recursive functions not yet implemented
internal error: unrecognized value
overloaded function not found
'%s': entrypoint not found
unrecognized compiler target '%s'
D3DX: (WARN) D3DX relies upon this behavior.
D3DX: (WARN) least zero bytes. Deletion of a null pointer should quietly do nothing.
D3DX: (WARN) An allocation of zero bytes should return a unique non-null pointer to at
D3DX: (WARN) Overloaded ::new and ::delete operators do not conform to C++ standards:
XH;ZHu,
YH;ZHu
R0@;E
SH;WX
^X;_Xs
r(9r,s
QH9PH
w!t8=
@ t#;
A tz=
  tE=
0 t-=
@ t"=
P t,=
;QHu.
Q,G;x
u19_(
internal error: argument was never used (A%u)
internal error: argument was never used (A%u, I%u)
internal error: cannot read from argument pool (A%u)
internal error: cannot write to argument pool (A%u, I%u)
internal error: output argument was never initialized (A%u)
internal error: argument used without having been initialized (A%u, I%u)
variable '%s' used without having been completely initialized
J0;H0u
J0;H0u
Fl@tZ
indefinite arcsine
indefinite arccosine
indefinite logarithm
internal error: component out of range
program too complex; there are more active values than registers
C9X\u
C9X\u
tcHt(Ht
PHB9U
F,WHP
@,;A,u*j
internal warning: optimization did not converge
internal error: production failed!
internal error: scope underflow
redefinition of formal parameter '%s'
internal error: scope missing
object literals are not allowed inside functions
Object types are not allowed in structs
non-matrix types cannot be declared 'row_major' or 'column_major'
invalid subscript '%s'
'%s': identifier represents a %s, not a %s
T'%s': ambiguous function call
'%s': loop control variable used outside for-loop scope conflicts with a previous declaration in the outer scope; most recent definition used
'%s': array dimensions of type must be explicit
incorrect number of arguments to numeric-type constructor
cannot convert from 'object type' to 'numeric type'
constructors only defined for numeric base types
Ht8Ht.Ht$Ht
l-value specifies const object
type mismatch
object assignments are not allowed inside functions
scalar, vector, or matrix expected
'%s': void functions cannot return a value
'%s': secondary array dimensions must be explicit
'%s': %s cannot have annotations
'%s': %s cannot have semantics
'%s': missing %s
'%s': %s must be a literal expression
'%s': output only %s cannot have %ss
'%s': non-numeric uniform %s cannot have %ss
'%s': %s cannot have %ss
'%s': %s cannot be declared 'volatile'
'%s': %s cannot be declared 'shared'
'%s': %s cannot be declared 'extern'
'%s': %s cannot be declared 'uniform out'
'%s': %s cannot be declared 'uniform'
'%s': %s cannot be declared 'static'
'%s': uniform %s cannot be declared 'static'
'%s': extern %s cannot be declared 'static'
'%s': %s must be numeric
'%s': output paramaters cannot be declared 'const'
'%s': %s cannot be declared 'const'
'%s': %s cannot be declared 'inline'
'%s': %s cannot be target specific
'%s': implicit array missing %s
'%s': implicit array type does not match %s
'%s': array dimensions of %s must be explicit
'%s': function return value differs from prototype
'%s': void function cannot have a semantic
'%s': missing default value for parameter '%s'
'%s': function return value must be numeric
'%s': functions cannot be declared 'extern'
'%s': functions cannot be declared 'uniform'
'%s': intrinsic function does not take %u parameter%s
'%s': function does not take %u parameter%s
unsupported compiler target '%s'
internal error: no profile exists for this shader version
internal error: unexpected Alias on texture declaration
wgtY=
 pt*=
wEt7=
wJt$=
internal error: next match table entry index is negative
Inconsistent semantic definition: %s and %s
bt:Ht+
<iu6h
maximum iterator register index exceeded - Try reducing number of loops and depth of loops
maximum iterator register index exceeded - Try reducing number of loops
maximum boolean register index exceeded - Try reducing number of constant branches
invalid register semantic '%s', or variable must be bound to multiple register banks (%c register binding required)
overlapping register semantics not yet implemented '%c%u'
AT;AX
AT;AX
X8;Y8u(
X<;Y<u 
A<;B<t
internal error: unexpected endif found
Conditional block too complex
internal error: if block with non matching predicates found
internal error: endif mismatch
internal error: IF with size greater then 1 found
internal error: instruction missing outputs
internal error: unexpected output register type
maximum address register index exceeded
target does not support relative addressing
maximum loop register index exceeded
maximum bool register index exceeded
sampler mismatch: sampler used inconsistently
internal error: non-vectorized pool violated port constraints
internal error: result violated port constraints
tw91ts
x ;x@
t-9F8u(
t19F8u,
QPRh|
QPRht
t.Nt&Nt
9~,v<
G;~,r
r_$Int%d
overlapping output semantics
maximum number of inputs exceeded
internal error: input register missing semantic
internal error: output register missing semantic
`UUe?
?%s target does not support texture lookups
maximum number of samplers exceeded. %s target can have a maximum of %i samplers
invalid type used for '%s' %s semantics
%s semantics '%s' has been deprecated; use '%s%d' instead
invalid input semantic '%s', only _centroid allowed
Invalid %s semantics - POSITIONT0
invalid %s
multi-register semantics are not allowed in fragments '%s'
c_$zz%d
X<;Z<
WWWWj
WWWWj
@Qm6t
error
internal error: production failed
invalid or unsupported integer constant expression
warning
syntax error
internal error: out of memory
internal error: stack underflow
yacc stack overflow
(%u): 
token
end of file
end of line
string constant
token '%s'
version token
vFace
oDepth
break_c
phase
texldl
texldd
dp2add
texdepth
texm3x3
texdp3
texm3x2depth
texdp3tex
texreg2rgb
texm3x3vspec
texm3x3spec
texm3x3tex
texm3x3pad
texm3x2tex
texm3x2pad
texreg2gb
texreg2ar
texbeml
texbem
texldb
texldp
texld
texkill
texcrd
texcoord
breakp
endrep
label
endloop
callnz
depth
psize
position
centroid
Microsoft (R) D3DX9 Shader Assembler 4.08.01.0612
debug info exceeds maximum comment size; no debug info emitted
ps_1_0 is no longer supported; using ps_1_1
vs_1_0 is no longer supported; using vs_1_1
?internal error: result register invalid
internal error: unknown node
L@array index out of bounds
'%s': function must return a value
Constant variable '%s' bound to register greater than 8191 (%d requested)
division by zero
imaginary square root
redefinition of '%s'
%s%s%u
float expected
Types
undeclared identifier '%s'
variable
function
techinque
'%s': array dimensions must be literal scalar expressions
'%s': array dimension must be between 1 and 65536
COLOR%d must be a four-component vector
COLOR outputs must be contiguous from COLOR0 to COLORn
pixel shader must minimally write all four components of COLOR0
DEPTH must be a scalar
vertex shader must minimally write all four components of POSITION
PSIZE must be a scalar
relative address refrences too deep
internal error: overlapping output writes
cannot map expression to pixel shader instruction set
cannot map expression to vertex shader instruction set
v_%s%d
SPECIAL
internal error: InputRemap component matchup failed
cannot perform dependent texture read which in any way is based on color inputs
program too big
internal error: arguments not vectorized
relative addressing not allowed for pixel shaders
invalid reference to input semantic '%s%d'
internal error: multiple write to same output
maximum constant register index exceeded - Try reducing number of constants referenced
maximum sampler register index exceeded
maximum input register index exceeded
maximum predicate register index exceeded
maximum temp register index exceeded
internal error: unexpected input register type
constant table info exceeds maximum comment size
A33[Aff
T2?u$F?<vZ?
A@Y!A
,A]p2A
E%BRo(B
#2B9r5B
MB).QBB
yXB~-\B
=oB`*sBr wB
 {BU)
a8CzD:C
-mCh]oC,
:xCQyzC%
)5=62
48?7+
OXHt,N4
KKba[
<NULL>
h#jQ*
TNULL
Tfloat  
USERProcessHandleQuota
GDIProcessHandleQuota
f:\dd\wpf\src\graphics\shared\util\utillib\debugbreak.cpp
Direction
Color
Noise
Opacity
ShadowDepth
Softness
KernelType
ExpandOutput
Radius
GlowColor
GlowSize
EdgeProfile
LightAngle
Smoothness
Relief
BevelWidth
RGB9Rast.dll
RGB9Rast_2.dll
D3D9GetSWInfo
H(:K(u
xL;{Lu2
1f;2u
Hd;Kd
Hh;Kh
Hl;Kl
Hp;Kpuz
Ht;Ktur
DwmGetGraphicsStreamClient
The render thread failed unexpectedly.
j@XPW
;A s"
TWWWW
GetRefCountOnChannel was called on a resource that is not anymore on this channel
HVWj<
F8t.9^4t)!]
DwmGetCompositionTimingInfo
DwmFlush
W~18^H
T8^Ht
9X8VtA
D$$PSSj
D$8PS
T$ RP
D$dPV
D$(Ph
D$,PV
RSSVS
D$,PS
D$$Pj
D$,QQ
@j@X9E
j@^Vj
_^[Y]
C,@u`
9_puz
F, u{
t!Hu5
9_puB;
9~lu29}
9qlu&
T$<RP
MFCreateVideoSampleFromSurface
MFCreateDXSurfaceBuffer
uphPi
_^[Y]
DXVA2CreateDirect3DDeviceManager9
DllGetClassObject
TuJ9=l
evr.dll
TuJ9=p
TuBhHl
dxva2.dll
t+VVj
PVh!y
_^[Y]
QSVW3
AAGGNK
SVWt+f
D$(SVW
F !\$(!\$,
T$$RP
L$4_^[3
AA@@NKG
f91t7
_^[Y]
_^[Y]
CD98u
Start of HSC: m_targetState
Start of HSC: m_targetInternalState
Start of HSC: m_pendingInternalState
Start of HSC: m_currentInternalState
Start of HSC: m_actualState
End of HSC: m_targetState
End of HSC: m_targetInternalState
End of HSC: m_pendingInternalState
End of HSC: m_currentInternalState
End of HSC: m_actualState
RQSje
pause
currentPosition
t(G;}
Streams
audio
^[YY]
T_[Y]
v4WSj
T8^`t
QQSVW
}1jrV
L$ Qh
L$(Qh
QQSVW
z9N`u
89~tt3
_^[Y]
_^[Y]
QQSW3
O<;OD
O8;O@
_^[Y]
QSVW3
w0Sh`
v0Wh`
 ;F,r
C(9C,u
 ;^,r
 ;K,s3
D$$PV
 ;G,r
;~(v_S3
NoDialogs
Avalon EVR
q$Vh@
q$Vh@
QQSVW
q$Vh@
qauds
qmids
q$Rh@
tgItS
ct8It
tqItX
tJIt1It
6RQh 
6RQh 
T_^[Y]
0WVh 
T_^[]
NxQRW
_^[Y]
}-jnW
}1jaS
E HtBHHt
^88^It
tSVQQ
8t#9}
^8^[]
SVWvl
l8_)u
18_(u
.8_)u
G,9Xpt
g8_(u
18_)u
)8_(u
h8_)u
28_)u
)8_(u
d8_)u
18_)u
)8_(u
_ _^[
z8_(u
|H8_)u
D$hDE
D$TDE
F$_^]
D$ QQ
C$VW3
L$$QQQ
9G`u|
uv9C\uq9C`ul2
8GqtM8GptH8CqtC8Cpt>
t@It'It
@_^[]
G;~Dr
;ADr"hJ
;ADr%
8VWj8
DVWj@
LVWjH
8VWj8
0VWj0
DVWj@
8VWj8
@VWj@
LVWjH
4VWj0
HVWjH
4VWj0
8VWj8
F,SWV3
zf`;K
KPt/k
HHt1HHt$Ht
IIt2IIt
u"PhB
jPQRj
N8jPQj
v`jPV
;C|VWru
OL;Oh
GH;Ghs!
t%9{(r
;CTv"
G0+G4;
G8+G<;
PQRSW
D$ ;F,
T$(RP
t$<+s
E WVW
L$@+L$83
t$ WQ
D$D9D$<
t$0VS
Jt"Jt
9p4u 
[v#;E
?tb;M
?te;E
;C(v#j j
v)jPj
;C(v#jPj
v)jPj
;K0v&3
;K0v&3
;FXv#jPj
E jP^u
v'jPj
v&jPj
v'jPj
y u>S
A [9y u
9xHSv(
T$ RP
u$+D$
BL+J 
B`VWRh
^WRVj
L$$+L$
QSVW3
HtJHt1Hu
_^[Y]
QQSVW
D$lPj
T$ RP
tv9P<tq
B|WVS
QQSVW3
TSSSj
TSSSj
TSSSj
L$,;E
D$8_^[
\00_^
PSQR3
T$ +t$4+T$0
L$,QS
F fff
F$www
T$,RP
w"SWj
F fff
F$www
QQSW3
H0;H,w
F,Xj 
P89:t
tiHt5H
C,9C0wZf
:tQSI
:tPSI
tsIt<
tsIt<
v,SVW
9ptu2
t~HHtz
TYQPV
Software\Microsoft\Windows NT\CurrentVersion\Windows
BreakOnUnexpectedErrors
DisableInstrumentationBreaking
MIL FAILURE: Unexpected HRESULT 0x%08x in caller: %s
MilUnexpectedError
This break is due to an unexpected HRESULT in the caller, not this method.
***   Investigate the stack capture to determine the source of the HRESULT.
MilInstrumentationBreak
Unexpected HRESULT in MilInstrumentation* caller
Tt"Sj
WVRQPh
Vjc_W
tYHHt<
Break, Go (continue), terminate Process, or terminate Thread (bgpt)? 
Function: 
***  
*** Assertion failed: %ls%ls%ls
***   %s%ls%sSource: `%ls:%ld`
(No kernel debugger is present.) Respond with:
  g                    -- Go (continue)
  eb 0x%p 'p';g  -- terminate Process
  eb 0x%p 't';g  -- terminate Thread
 or regular debugging.
'i' is only supported with debug builds.
Unrecognized response.
t\JtRJt*Ju
;C0tS3
CGXc=
?O8v?;
tEHHtA
t6It)IIt
D{wVWj
Ht9HHt
]w"t3
tZHHtV
tlHtZHHtM
Ht]Ht
u,@BB
Et2Ht
Axtwj
 !"#777777777777777777$$%&&''()*)7))77+7',),)-./0123456
G;~|r
D$$PP
9{|v(
F;s|r
t2HHt"Ht'Ht Ht
>WWWj
9^ th
<;{Pt7VS
F;{4tAV
Wt(jP
9~Lt7
C;{lt>V
\$(vr
C$vL;E
C,vI;E
C4v=;E
K@v[;M
CHvD;E
CPvG;E
CXv;;E
P(VQRP
P VQRP
P VQRP
[XvG;E
C(vG;E
C0vD;E
C8v;;E
9C`VW
;H`s3
9X`v$3
\$0RP
T$@RSS
T$4RP
F;s$r
F;s$r
G;~$r
G;~$r
QQVW3
tp9w$
QQSW3
tV9_$
C;_$s
QQSV3
QQSVW
Tu%hP
$SVW3
L$ QV
T$PRP
T$|RS
T$HRP
D$(P3
9Y4s8
WWWWV
D$,t`9]
L$@QV
D$0Pj
D$$pG
L$ QVP
D$,jtX
D$(Pj
D$4PV
D$<Pj
D$(P3
D$$VV
D$$VV
$SVW3
D$LP3
D$(Pj
+D$$+
|$P9|$
|$0!t$0
|SVWj
L$0Y3
L$8QV
D$0Pj
D$4Pj
D$LP3
 SVW3
u0C;^
D$4PV
_^[Y]
D$(QQ
T$,G;
T$(G;
T$(G;
 SVWj
C9_Dv[
t-WhL~
3_^[]
s$9>t
;A4s0
;AHs0
Vtu9]
APPID
q(9>u
97t,A
;HHsS
;H\sS
9^<Wv~
C;^<s/
9^<Wv~
C;^<s/
t$$|'
;9~8v|
G;~8s0
sX9>t
s@9>t
;Cd}!
T$ RP
t09_pu
CInteropDeviceBitmap::Present D3D failure
tHHt$Huw
T$ RP
D$ \;K
D$(_^[
SQj*P
SSSPj
QRj|P
QQQPh
QQjcP
1Pj{V
SSSPj|V
QQQQj
WPPPj
0WWWWj
VPPVj
VVVVj
QQQQj
N`QRP
NdQRP
NhQRP
NlQRP
9^0t%
spVRP
stVRP
9{,v~!|$
D$\PP
G;{,r
9C(to9C,
;F uD
u?9^lt"
9^\Wu
D$@QQ
T$(|0
L$$QS
T$0RP
D$ !\$
T$0|0
L$DQW
T$`|4
T$lRP
\$x|7
D$x|:
D$$+D$
\$P9\$
D$$+D$
A{d9|$
L$(QP
~>HHt*Ht HHt
t`Ht.H
D$8QQ
T$$RP
T$0RP
L$$Qh
T$(|0
L$4QV
T$H|4
T$\RP
D$DPV
D$TPPPP
L$ QP
~>HHt*Ht HHt
HtZHt2H
D$8QQ
D$HQQ
D$XQQ
T$ |0
T$(RP
|$||%
T$xRP
T$8|0
L$4QV
T$X|4
T$TRP
|$(|7;
D$L|#
t$p|7
D$(PPPP
~>HHt*Ht HHt
?333333
D$@QQ
T$xRP
T$0|0
L$$QW
T$X|4
T$TRP
\$x|4
D$L|&
~>HHt*Ht HHt
QQSVW
Drop Shadow
;L$,r
;T$(r
T$(;L$
|$ F;
$tZ=H
`3t<=E
~@luZ
L$$QRP
L$$~5
L$,QRP
9t$(~
D$ ;H
L$ QRP
t$ VP
t&Nt<Nu
Wt|=p
gYt6=5/
QQSVW
Bevel
69t$@
L$P9L$Hr
L$T9L$Lr
L$L+|$@3
L$pFP
9L$ vr
\$T+T$
L$0+T$ 
f+D$8
ffffff
|;;V$}6
QQSVW
Gauss Blur
|!9L$Hw
9L$@w
9L$$t
9L$0r
D$,9D$ r
L$,+L$ 
D$$@;
d$4RP
d$XRP
T$(RW
D$4t%
9L$ sD
QQSVW
Outer Glow
|$0+\$,+|$(3
D$DSWV
L$L+L$ 
L$H;L$
@;E |
t(HuVj
D$@QQ
D$0QQ
L$\Qh
T$8RP
T$`|0
L$lQW
T$x|4
T$tRP
|$8|+
T$ +L$$
T9_xu&
WWWPj
89K|v
A;K|r
|6C;_
@$;A$t
@$;A$t
[Et0$
ItkIt+
CD:CEt
CDPh3
CDPh<
t9Ht-Ht!Ht
CD:CEt
CD:CEu
CD:CEt
CD:CEt
CD:CEt
CD:CE
CDQQP
CEVVP
CDPh3
CFVVP
CDPh3
CDPhs
CDPh3
CDPh3
CDPh3
CD:CE
CDPh3
CDPh3
CEVVP
CDPh3
CDPh3
CDPh3
CD:CE
CDPh#
CD:CE
CDPh#
tsHtE
CD:CE
CEVVP
CEVVP
O 9N r
O$;N$u
Q$;S$u
I ;K r{
19^ v
QQSVW
t-9p(v'
+0F;u
O$;N$u
9O$u'
9K8u&
C<@9F<s
Q SVW
tV<"v0<.v#<1v(<2t
vWSVW
Rt3Nt0Nt&Nt
t0Nt-Nt#Nt
QtCHt@Ht-Ht
IMAGE
E(SHPSW
X+E$P
PVVt;
PVVt)
PVVt;
PVVt)
FXt+WWh
failed to open source file: '%s'
FF@@BB
error: %s
unexpected #elif following #else
unexpected #elif
unexpected #else following #else
unexpected #else
unexpected #endif
disable
u'9FDu h0
9S@VW
uY<=u3
defined
define
include
ifndef
ifdef
pragma
undef
endif
pack_matrix
functional defines in preprocessor expressions not yet implemented
_^u89CLt
invalid preprocessor command '%s'
SVWht
duplicate macro parameter '%s'
 r-h\
too many nested #includes
include interface required to support #include from resource or memory
F\_^[
Tdivision by zero in preprocessor expression
uT@@j
TvRII
not enough actual parameters for macro '%s'
unexpected end of file in macro expansion
error X%u: 
%s X%u: 
syntax error : unexpected %s
float '%gl'
float '%gf'
float '%gh'
float '%g'
integer '%uul'
integer '%dl'
integer '%u'
character continues past end of file
t2<\u'
FF@@BB
string continues past end of line
string continues past end of file
SPECULAR
DIFFUSE
VFACE
SAMPLE
DEPTH
COLOR
POSITIONT
TESSFACTOR
BINORMAL
TANGENT
PSIZE
NORMAL
BLENDINDICES
BLENDWEIGHT
POSITION
Ht7Ht
t/HuM
G9FLu
tCHt7Ht+Ht
sample
positiont
tessfactor
binormal
tangent
normal
blendindices
blendweight
volume
at)It;
invalid mask '%s'
atLJtX
t<Vh`,
invalid swizzle '%s'
9Nxtg
u'9Y u"
tw9N8u6
9H$t]h 5
internal error: instruction size mismatch
only a0.x is allowed as a relative address register in vs_1_1
source modifiers incompatible with SUB instruction
relative addressing of predicates is not supported in this shader version
source modifiers are not allowed on predicates
predicates are not supported in this shader version
relative addressing of destination parameters is not supported in this shader version
only one address register reference is allowed in a relative address expression
source modifiers are not allowed on destination parameters
call, callnz, label, and ret instructions are not allowed in assembly fragments
Matrices cannot be specified in temp registers with the fragment linker
?f;>tZ
hFINF
fragment info exceeds maximum comment size
hDBUG
v"QPShpC
constant register address out of bounds on constant '%s', size %d, offset %d
constant register '%s' must be defined as a variable '%s'
'%s' is not a valid register name.  Registers must start with v_, r_, c_, b_, or i_ depending on the register type. (o_ for vs_3_0 only)
addressing operations are not allowed on output registers '%s'
Invalid output register '%s' specified
addressing operations not allowed on temporary registers '%s'
addressing operations are not allowed on input registers '%s'
Invalid input register '%s' specified
Invalid pixel shader input register '%s' specified
invalid register, input, or constant name '%s'
t"HHu
entrypoint
tChpR
t<QQQQj
temporary and constant registers are not allowed in assembly fragments
invalid register '%s'
invalid register '%s[...]'
invalid register '%s[%u]'
temporary, constant, and output registers are not allowed in vs_3_0 assembly fragments
F4[_^
only one address register reference allowed in a relative address expression
scalar registers cannot be swizzled
complement is not supported in this shader version
complement cannot be used with other modifiers
invalid complement expression
negate and divide modifiers cannot be combined
not cannot be used with other modifiers
scalar registers cannot be masked
instruction predication is not supported in this shader version
instruction coissue is not supported in this shader version
9CTuD
invalid instruction modifiers '%s'
'%s' is not a valid instruction in this shader version
uT@@j
TvRII
9^lt%
Fp9^xt
only vs_1_1, vs_2_0, vs_2_x, vs_2_sw, ps_2_0, ps_2_x, and ps_2_sw are supported for assembly fragments
unrecognized shader version
shader version expected
ND;H\r
9^\u$9^P
t79FPu29FTu-
^\t3S
9^Puo9^Tuj
^T9^\u
t49^Pu/9^Tu*
loop does not appear to terminate in a timely manner (%d iterations)
9E$t.9E
u)9FXt
u%9FXu
E PSW
sampler array index must be a literal expression
array reference cannot be used as an l-value; not natively addressable
9^PuN9^TuI
9X\tb
ItJIt+IuD
It8Iu5
HtBHuf
HtAHud
HtBHuf
Ht@Hub
HtAHud
Ht@Hub
<[uuF
tZVVVVj
Yt?VVVj
t"VVVj
F ;G uJ
F$;G$uB
F(;G(u:
F,;G,u2
A ;B u
F8;G8uv
F<;G<un
F4;G4uh
F(;G(uA
G0;F0u
G4+F4
integer constant register '%s' must be defined as a variable of type int3 or int4 only
boolean constant register '%s' must be defined as a variable of type bool only
ud9X$u[
Sampler variable '%s' does not specify the sampler type.  Explicit sampler types required for asm fragments.
HX9s<t
0tt-=
@tt&=
w3t^=
 `tB=
0`t;=
P`t4=
%s semantic '%s'
p4;2t#
QlSV3
R,;S,t
R,;P,u
y8_^]
t.PP%
@[_^]
PDB;Q
HHtZHt
t/It'It
t2It*It
t<Ht1Ht.H
t(It%It"It
t9Ht1Ht.Ht
t`Ht9Ht
C(Ph@
{@_^3
syntax error: unexpected %s
integer constant
float constant
duplicate usages specified
It5It
%sstruct{%u}
%s%s%ux%u
const 
unknown
 !"#$%;&&&'(('((;)*+,-./012;345678;;;;;;;;;;;;;;;;;;;;9:
indefinite power
infinite/indefinite log
indefinite asin
indefinite acos
'%s': cannot %sconvert from '%s' to '%s'
cannot %sconvert from '%s' to '%s'
implicitly 
VBRWj
vector dimension must be between 1 and %u
vector dimension must be a literal scalar expression
matrix dimensions must be literal scalar expressions
matrix dimensions must be between 1 and %u
array dimensions must be literal scalar expressions
dimension of conditional does not match value
type mismatch between conditional values
conditional must be numeric
WSVVj
G$t$W
array expected
scalar expected
relative addressing not supported in vs_1_0 instruction set
PTPh`T
P`t'=
yP[_3
texcoord inputs used directly (that is, other than sampling from textures) in shader body in ps_1_%i are always clamped from 0 to 1
internal error: malformed clip found
Clip must be from a 3 vector in ps_1_%i
t,90t(9p
SVWv:
unable to emulate vector conditionals in ps_1_%i shader model
|<F;u
;G0uc9E
;B uO
cannot access w component from texcoord in general expression
dependent texture read not supported on ps_1_%i
%s%s is not supported on ps_1_%i
AHF;s
9^<tg
;H8uU
cannot perform double dependent texture read in ps_1_x
;CLs0
@;CLr
too many texture loads and reads from texcoords
conflicting sampler array bindings
conflicting user defined sampler bindings. If two samplers have the same user binding, they cannot both be used in the same shader
cannot read from same texcoord. In ps_1_%i, each sampler must have a unique TEXCOORD
cannot bind sampler to sampler array. In ps_1_%i, samplers must be bound to the same stage as their TEXCOORD
cannot perform texture lookup twice from a user bound or similar array access sampler in ps_1_%i
cannot bind sampler to user specified stage. In ps_1_%i, samplers must be bound to the same stage as their TEXCOORD
cannot read from a texcoord which was used as input in a sampler
u09x<u+
can read from texcoord and use it for texlookup only in ps_1_4 and higher
texture loads or clips cannot be from inputs not marked TEXCOORD
sZSVW
vLWjt
|sC;^
|!C;^
@_^[]
dependent texture read chain cannot exceed 1 in ps_1_4
9x$tG
cannot perform texture load that is in anyway dependent on COLOR registers
program is order of magnitude too large to compile to ps_1_4
QSVW3
9X8u4
;B8u 
;B8uJ
tg98tc9x
;V8w_
program too complex: exceeded available constant registers.
literal values outside range -1 to 1 are clamped on all ps_1_x shading models
exceeded maximum constant registers
rt~9}
9p8u+
internal error: texld alias found
internal error: uppropagation failed
9^LWvo
C;^Lr
WXA;M
program too complex: out of temporary registers
internal error: unvectorized register found
tA;G8t<C
9M$uW9M 
cannot match to texreg2ar or texreg2gb instruction because cannot have input modifiers
expression can only be map to texreg2rgb, but this instruction is not supported on 1_%i
cannot match to texreg2rgb instruction because can only have input modifier _bx2
cannot bind sampler to sampler array, sampler must be bound to %i
internal error: unexpected argument type
cannot match to texm* because texm* can only have bx2 modifier on input texload
cannot match to texm* because texm* cannot have source modifiers on input texcoord
unable to match texm* because source inputs are not in appropriate texture coordinates. See ps_1_% assembly reference for more information
unable to match texm because computed texcoord is used in shader
cannot bind sampler to user specified stage, sampler must be bound to %i
 SVW3
FlHt5H
relative addressing not supported in ps_1_x
VVVVj
| VVVV
internal error: unexpected output register
cannot map swizzle to ps_1_4
YYt%9
|~G;~
|BG;~
internal error: illformed write field
unable to emmulate write masks for ps_1_%i shader model
9^Lv;
B;VLr
@;FLr
shader cannot compile to a ps_1_%i shader because this model can't match all the dependent texture read(s) this shader requires
cannot map this dependent texture read to ps_1_%i
jQhD(
'texcoord' reference exceeds valid range for this shader model (max: %i)
%s semantic '%s' not yet implemented in ps_1_x
invalid reference to %s semantic '%s'
%s semantic '%s' has been deprecated; use '%s%d' instead
invalid %s semantic '%s'
specular
 SVWj
@ t =
u)hL4
program is order of magnitude too large to compile to ps_1_%i
program too complex to compile to ps_1_4
shader too complex. Try reducing number of texture loads used
cannot access texture coordinate w-component in a general way in ps_1_%i
internal error: no profile exists for this pixel shader version
@ t-=
P t9=
0pt%=
|}C;^
|CC;^
|QG;~
QSVW3
SSSSW
SSSSW
PPPPV
PPPPVP
PPPPVS
PPPPVP
;F(s2
internal error: write to output with instruction other than mov
internal error: invalid swizzle found
  tc=
0 tP=
@ t==
P t*=
0PtM=
w<tx=
``t'=
p`tj=
 pt+=
texlod not supported on this target
internal error: no profile exists for this vertex shader version
FOG must be a scalar
P tl=
0ptL=
Pst-=
`st&=
w't:=
|wG;~
|;G;~
WWWWj
WWWWQWW
WWWWj
WWWWj
WWWWj
WWWWj
WWWWj
|WWWWWj
WWWWj
WWWWQWW
WWWWj
|^WWWWj
WWWWj
WWWW3
WWWWQWW
WWWWSWW
WWWWSWW
|AWWWWSWW
internal error: DST test failure
QQSVW
@ tf=
P tS=
p t@=
 pt1=
wyt9=
@st?=
Pst,=
`st%=
wUtJ=
@tt5=
Ptt.=
`tt'=
ptt =
clip not supported in texture shaders
wXG;~
hPRSI
hCLIT
hFXLC
too many outputs to target TX
too many arguments to target TX
invalid reference to output semantic '%s%d'
^$;Z$u
v ;r u
cannot bind the same variable to multiple constants in the same constant bank
cannot map general loop to this instruction set
9A<u+3
Dz|QQ3
AT;AX
xT;xX
internal error: multiple breaks found
v<3r<
;A8uJ
;A<u7
;w8ug
p<3q<
u>9P8
@<3A<=
cannot match lerp because lerp factor is not _sat'd
G`;C`u
G`;C`u
tIjiP
YYu5jI
YYu&jb
tIjiP
YYu5jI
YYu&jb
FT;FXt
SVWht
;A(r#
;N,s!9XHs
@;F,r
_bias opportunity missed because source was not clamped 0 to 1
complement opportunity missed because input result WAS clamped from 0 to 1
hPRES
hDBUG
R`;Q`t
;X`u6
;X`ul
;Y`u);Qtu$
i_$zz%d
0tt(=
SSSSVS
SSSSVS
SSSSVS
clip cannot be performed from a constant or literal
clip must be performed from a float4 vector for ps_2_0 models
cannot clip from a swizzled vector
clip must be performed from a float3 vector for ps_1_x models
QQVj(
QQSVW
SSSSVS
SSSSWSS
SSSSWSSP
PpWt#
QQVj&
NH+H$
NH9H0u
;NLv39E
;NLr)
@;F8r
G;~8r
F0tA9]
9^8v"
@;F8s
WINMM.dll
WindowsCodecs.dll
timeEndPeriod
timeBeginPeriod
WICCreateImagingFactory_Proxy
ntdll.dll
OLEAUT32.dll
ole32.dll
USER32.dll
GDI32.dll
KERNEL32.dll
ADVAPI32.dll
MSVCR80.dll
_CIcosh
_CIexp
_CIfmod
_CIsinh
_CItan
_CItanh
_fpclass
isspace
_controlfp
_clearfp
strchr
_CIlog
_CIpow
floor
_CIatan
_CIasin
_CIcos
qsort
memmove
toupper
isxdigit
isalpha
isalnum
isdigit
tolower
setlocale
_strdup
_vsnprintf
_stricmp
_CIsqrt
_CIsin
_CIatan2
_CIacos
memset
memcpy
_copysign
calloc
_resetstkoflw
malloc
_wcsicmp
__clean_type_info_names_internal
_except_handler4_common
__CppXcptFilter
_adjust_fdiv
_amsg_exit
_initterm_e
_initterm
_encoded_null
_malloc_crt
_onexit
_lock
_encode_pointer
__dllonexit
_unlock
??_V@YAXPAX@Z
??_U@YAPAXI@Z
wcsncpy_s
_purecall
_vsnwprintf
_finite
_isnan
_wtoi
_recalloc
_decode_pointer
_crt_debugger_hook
RegQueryValueExA
RegOpenKeyA
RegOpenKeyExW
RegQueryValueExW
RegCloseKey
AllocateLocallyUniqueId
TraceMessage
GetTraceLoggerHandle
GetTraceEnableLevel
GetTraceEnableFlags
RegisterTraceGuidsW
UnregisterTraceGuids
TraceEvent
QueryPerformanceFrequency
QueryPerformanceCounter
InitializeSListHead
InterlockedPushEntrySList
InterlockedExchange
GetTickCount
GetCurrentThreadId
TryEnterCriticalSection
MulDiv
InterlockedExchangeAdd
FindResourceW
LoadResource
LockResource
GlobalUnlock
QueryDepthSList
InterlockedFlushSList
UnmapViewOfFile
GetSystemInfo
GetVersionExW
IsProcessorFeaturePresent
SleepEx
RtlCaptureStackBackTrace
ExitProcess
GetProcessHeap
HeapAlloc
HeapFree
HeapReAlloc
TerminateThread
GetCurrentThread
LocalAlloc
Sleep
DuplicateHandle
SetThreadPriority
CreateThread
WaitForMultipleObjects
ResetEvent
WaitForSingleObject
SetEvent
CloseHandle
CreateEventW
GetCurrentProcessId
InterlockedCompareExchange
GetModuleHandleW
GetCurrentProcess
UnhandledExceptionFilter
SetUnhandledExceptionFilter
IsDebuggerPresent
DisableThreadLibraryCalls
GetLastError
InitializeCriticalSectionAndSpinCount
SetLastError
DeleteCriticalSection
LoadLibraryW
OutputDebugStringW
GetProcAddress
FreeLibrary
EnterCriticalSection
LeaveCriticalSection
InterlockedIncrement
RaiseException
CreateFileMappingW
VirtualAlloc
VirtualFree
CreateFileW
CreateFileA
CreateFileMappingA
GetFileSize
MapViewOfFile
SizeofResource
OutputDebugStringA
VirtualProtect
GetModuleHandleA
LoadLibraryA
lstrcmpiA
TerminateProcess
WideCharToMultiByte
GetFullPathNameA
InitializeCriticalSection
GetVersionExA
GetSystemTimeAsFileTime
InterlockedDecrement
SystemTimeToFileTime
GetSystemDirectoryW
FindFirstFileW
FindClose
CreateDCW
SelectPalette
RealizePalette
CreateCompatibleBitmap
GetSystemPaletteEntries
CreatePalette
SetLayout
GetRegionData
GetDIBits
CreateCompatibleDC
RectInRegion
CombineRgn
CreateRectRgnIndirect
SelectObject
CreateDIBSection
DeleteObject
BitBlt
DrawEscape
GdiEntry13
DeleteDC
GetDeviceCaps
CreateICW
EqualRect
EnumDisplayMonitors
GetMonitorInfoW
SystemParametersInfoW
EnumDisplaySettingsW
UpdateLayeredWindow
PostMessageW
IsWindow
InvalidateRect
GetDC
ReleaseDC
GetClientRect
ClientToScreen
PeekMessageW
SetLayeredWindowAttributes
OffsetRect
GetWindowDC
TranslateMessage
DispatchMessageW
MsgWaitForMultipleObjects
GetDesktopWindow
RegisterWindowMessageW
SetRect
IntersectRect
IsRectEmpty
GetGuiResources
EnumDisplayDevicesW
CoTaskMemFree
PropVariantCopy
PropVariantClear
CoUninitialize
CoInitialize
CoCreateInstance
CoTaskMemAlloc
NtMapViewOfSection
RtlSetBits
RtlInitializeBitMap
DbgBreakPoint
DbgPrompt
NtQuerySystemInformation
DbgPrintEx
RtlClearBits
RtlInterlockedFlushSList
NtCreateSection
RtlFindClearBitsAndSet
NtUnmapViewOfSection
f:\binaries.x86ret\bin\i386\Optimization\opt\wpf\wpfgfx_v0300.pdb
!! ##%%&&$$''++(**),,,//
24445677899::;;;;;
==>?@@ABBCDEEFGGHJ33LMNNPPPPPPPPPPRRROOOOOSTTTUUVVWWIIIII[[[[[[YYYYY````````ddeeeeeffffffgghhhh
ZZZZZiiijjkkll-------mm__nnn..
QQXXXXXXoooo""<<
KKK\\\\]]p
?@ABC
:;<=>
#$%,-./
./0123Kf567NnOU
DghYt
e,55B
:,P#G
G7V%&+5k
::G~@:
w-%&G4
8-cFF4
88@@m8rGe
:55f%%f
FWWW\]G
 !"#$
 !"#$
 !"#$
 !"#$
 !"#$
 !"#$
 !"#$
 !"#$
 !"#$
)={()<D
,{O_<,><d
0)<[4
[)~<,D{)
;,vKD,NO
:;<,>?:;
))e,}
0-}+4-6|
)}NO))
_[{:;def?
0{};~
;<=;<
]):;,)(
,(([)!
,(,)+
:)(]=)
)(+,-
:;<)>?
E{!}ux
(6`+)-+,-
)*+,-
*+,-./
;<=>?
)*+,-./
:;<=>?%
)*+,-./
]:;<=>?[
)*+,-./}
}:;<=>?%
)*+,-
}:;<=>?[
 !"#$%
%+7DP\
CDEF3!289AB"GH
! !(!!"#")""
 K J  #
!!!!!!""""""
      
$$$$&&
<(>/+
4567+
+)-))
>?:)<
>?:)<:>?:)<
>?:)<
>?:)<
>?:)<)>?:<<;>?:
123456789:;
` !*+,JKY
VZ;[st'<
9:78#
|{"%^_
%Thj=>H?@NA  B  C DPQRSE
FGbc%Ide
nX]uHvMwOx}~
gi-$ lmo
]////////X]
0123456
             
++-+[-kn-)
UV.-;.,>,(),+,,.,@ABC,()G+,,,]+
;,,(,,+,,DE,c,=,?,,,,def
333?333?333?333?333?
333?333?333?333?
deviceTransform
vs_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samSrcColor
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samSrcColor
sampleStart
weights
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samSrcColor
sampleStart
weights
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samAccumColor
g_samSrcColor
sampleStart
weights
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samAccumColor
g_samSrcColor
sampleStart
weights
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
g_samShdColor
g_samSrcColor
offset
opacity
shadowColor
ps_2_0
Microsoft (R) HLSL Shader Compiler 9.19.949.1104
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
wpfgfx_v0300.dll
FileVersion
3.0.6920.9151 built by: WinRelRS6
InternalName
wpfgfx_v0300.dll
LegalCopyright
 Microsoft Corporation.  All rights reserved.
OriginalFilename
wpfgfx_v0300.dll
ProductName
Microsoft
 .NET Framework
ProductVersion
3.0.6920.9151
Comments
Flavor=Retail
PrivateBuild
DDBLD373A
VarFileInfo
Translation
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0"><assemblyIdentity version="1.0.0.0" processorArchitecture="X86" name="wpfgfx_v0300" type="win32"></assemblyIdentity><dependency><dependentAssembly><assemblyIdentity type="win32" name="Microsoft.VC80.CRT" version="8.0.50727.1830" processorArchitecture="x86" publicKeyToken="1fc8b3b9a1e18e3b"></assemblyIdentity></dependentAssembly></dependency></assembly>P
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4v4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5
6 6$6(6J6|6
?*?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?
0!0'0-0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=
>j?p?
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
=!=%=)=-=1=5=9===A=E=I=M=Q=U=Y=]=a=e=i=m=q=u=y=}=
>!>%>)>->1>5>9>=>A>E>I>M>Q>U>Y>]>a>e>i>m>q>u>y>}>
0"0z0
2P2]2
2A3n4
416;6
8094989<9
9e:i:m:q:u:y:}:
2$2/2P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5x5|5
656E7
7!9g9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
=;>W?]?
1+161x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8
889<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:
; ;$;(;,;0;4;8;C;t;x;|;
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
>0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
9B9`9k9
:0:;:Y:d:
;);4;R;];{;
<%<C<N<l<w<
=&=1=O=Z=x=
>+>H>S>q>|>
?!?A?a?
0#0*010<0f0q0w0
0*101;1Y1d1
2"2&2*2.22262:2>2B2F2J2N2R2V2Z2^2b2f2j2n2r2v2z2~2
3"3&3*3.32363:3>3B3F3J3N3R3V3Z3^3b3f3j3n3r3v3z3~3
4 4$4(4,4044484<4@4D4H4o4u4
5t6x6|6
7&7`7d7h7l7p7t7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9U9]9
:-:4:::A:M:
;]=k={=
1F2d2
;q<|<
=i>{>
,0004080<0@0D0H0L0P0T0X0\0`0d0
2 2$2(2,2024282<2@2D2H2L2P2T2X2\276v6
667l7|7
7J8S8
8Z9|9
1'2s2
3r4g:
=9>E>n>
}0<1@1D1H1L1
0 1H1
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
9$9(9,9094989<9@9
> >$>(>,>0>4>8><>@>D>H>
0T>1?}?
4`6K7J8o8v8
:5;_;
<0@0D0H0L0P0
3$4]4
4"4&4*4.42464:4>4v5$7V7
7L9{9
9*:N:
*0^0m0{0
192G2N2
4 4)424<4F4O4Y4
(0,0004080<0@0
34484<4@4D4H4L4P4T4X4\4`4d4 6
8I8c:v:C;p;{;
< <$<(<,<0<4<8<<<@<D<H<
="=`=t=
?-?4?;?F?M?X?\?`?d?h?l?p?t?x?|?
:J;B<i<t<z<
5 5$5-5]5
6F8U8
<-=P=u=
4 686T6[6c6s6
7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
9*979p9
9G:B;H;W;r;
1,2P2
6>7L7S7Z7
8 8$8(8,8084888<8@8D8H8L8P8T8X8
::;H;[;l;
<&<3<H<q<
= =L=
=!>'>.>8>?>F>M>T>q>|>
?"?9?{?
0^0q0
2"3s3
3s4{4
4/5U5^5f5
7'8T8
9S9c:
=D>l>
060S1\1a1g1
6)6)7G7_7g7|7
7J8e8n8
:Q:9;H;
=0=C=N=W=^=
=<?F?
0"1F1M1T1Z1
2z3u4
4L5W5
<-<3<
>!>&>,>8>E>K>Q>X>^>d>j>v>
?"?(?.?5?>?D?T?q?z?
181h1u1
2*2L2f2
3%3C3x3
3(4F4O4X4]4p4|4
4p5x5|5
6!636D6K6[6b6h6p6
7I7P7W7}7
8 8$8(8,80848@8F8W8]8c8j8u8
9 9%9*90969;9F9W9a9e9k9v9|9
:$:(:.:2:8:<:B:F:L:P:X:a:i:y:
;!;1;A;Q;a;n;x;
<-<3<9<D=J=^=r=
=$>)>5>
> ?0?@?N?\?h?m?r?
0.070>0G0T0c0q0~0
1!1&1,1D1I1U1d1j1v1
2 2,202:2@2F2
5s5z5
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
;d;x;
;8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<
=-=E=L=S=d=h=l=p=t=x=|=
=Q>j>q>x>
3$373`3
5`6d6h6l6p6t6x6
5(6A7L7
8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8
0M1m1
2m2y2!4'4B4R4X4h4p4
5:6A6H6R6\6n6
7 7&747;7w7
<3<\<z<
75:{:
=*>V>
?/?L?l?
0(0{0
>+>D>\>u>
17162h2]3t3
5&515
9/9O9
=a>R?a?
4C9l9p9t9x9|9
:B:H:O:Y:
;(;,;0;4;D;^;
<$<.<<<d<|<
=(=/=
2W3^3e3o3y3
5"5)505:5D5P5T5X5\5`5d5h5l5p5t5x5|5
667I7P7s9
9P:T:X:\:`:d:h:l:p:t:x:|:
;(;f;
0 0+0@0o0z0
0A1Y1
3=4K4`4r4{4
6Z7r7
8"8S8}8
9<:T:
;,;A;M;T;
0@0J0
2#3o6M8o8]9
:1;S;)=
7$747
7,8{:
<p=t=x=|=
=A>c>
4D5z5
9m:z:
: ;';.;C;I;P;
</<G<t<
>@>G>M>
2+3H3X3
5&5-5]5
7/7G7
8#8.8W8
9H9e9l9r9
:0:f:m:t:
:c;j;o;~;
;#<6<=<C<Q<Y<f<l<s<z<
=-=u=
>+>D>M>[>b>o>u>
?B?w?
1*242T2[2
3 3$3(3,3034383<3@3D3m3
4B4Z4
6g6"7@7s7
949:9A9K9\9":8:
;);k;
<-=E=L=S=Z=l=u=|=
?6?=?C?]?d?n?t?{?
1.151s1
1%2;2D5M5
6m7|7
5t7E8Y;
0@0H0L0P0T0X0\0i0
233s3
8/9,<_=t=}=
4 4$4(4,4
658V8a8
;`=g=n=
7$7*70767<7B7H7N7T7Z7`7f7l7t7x7|7
;+;1;o;
V0a0K6
<L?\?
1%1H1W1]1h1l1p1t1x1|1
1Z4x4
9?:>= >&>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?
0#1-1<1A1j1(2E2L2`2d2h2l2p2t2x2|2
283<3@3D3H3L3P3
5^8>9D9^9
=<=c=
1*1$2
;d;h;l;p;
<5<M<T<[<b<t<
1'1;1J1
1E2x2
;V;k<
K0V0s0~0
2X3<5@5D5a5u5
5+696
6A9Q9A;
? ?$?(?,?0?4?8?x?
1^3n3
3#6z6
6'7+819I9h9
6^6|6
727o7w7
8;9V9
1H1w1q2
427s8Q:
2<3@3D3H3 5&5-5r5y5
6 6K6]6
7h9l9p9t9x9|9
7-747;719{9
:":&:*:.:2:6:::>:B:F:J:N:R:V:Z:^:b:f:j:n:r:v:z:~:
758k8
<?=E=N=U=Z=`=u=
0"0n0
0'1014181<1@1D1H1L1P1T1X1\1y1
1<2@2D2O2{2
6<6@6D6H6L6
494g4
505S5
7d>h>l>p>
:%:-:2:6:::>:B:F:J:N:R:
;*<x<
<Z?p?t?x?|?
102T2X2\2`2d2h2l2p2
3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
5@6`6p6
7 7(70787@7X7p7x7
3335_5x5|5
8#8{8V<
9Q9b9n9
$2`3l3s3
5Y7.898D8~8
8E9h9o:
:k;!< >%?N?n?
3C4V4
5$5,5\5
5S6`6d6h6
8$838B8Y8m8
>Q?z?
8V9p9
;i<|<
?7?s?{?
0)0T0|0
6&6-666<6E6L6W6r6x6#718
)474=4
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=
:#:-:::C:O:_:v:
;&;2;
=@>H>L>P>_>
0)0a0+6q;y;
;><+>I>(?
0b3^49;
6*6A6X6
3K5{5
647)9
1&2s2
6O7`7
2m9Z=
P0e0l477
40N0R0V0Z0^0b0f0j0n0r0v0z0~0
1"1&1*1.12161:1>1B1F1J1N1R1V1Z1^1b1f1j1n1r1v1z1~1
4X5i5
;I<V<`<c=d?w?
0Y2o2
5?5n5
8S9Z9g9n9
;D;m;
565I5b5{5
6 7_8
363@3D3H3S3
5g>}>
2G2l2n6
;"<z<
?@?b?
031E1[1b1v1
2'2;2O2c2u2S3{4
4R6N9
:.;W<[<_<c<g<k<o<s<w<{<
6*6K6m6
:3:U:w:
:!;C;e;
<3<><T<w<
<e=}=
=_?w?
010<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
646B7X7s7
7Z9d9h9l9{9J;r;
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
4@7B<u<=>
798Y9
6&6;6M6`6u6
6D7X7y7
838L8B9R9
1#2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=
3,3B3T3Z3`3e3w3|3
4m5w5
7!7@7
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0
9`:l:t:
;$;0;8;
;L<X<`<l<x<
=8>D>L>X>d>l>x>
$0D0P0X0
0l1x1
2$202<2D2P2\2d2
2X3d3l3x3
4(404
4D5P5X5d5p5x5
6(646<6
607<7D7P7\7d7
9(909<9H9P9
:d:p:x:
;(;4;<;H;T;\;
;P<\<d<p<|<
= =(=
=<>H>P>\>h>p>|>
(040<0H0T0\0h0t0|0
1p1|1
2 2(242@2H2
3\3h3p3|3
4 4,444@4L4T4
4H5T5\5h5t5|5
6 6,686@6
647@7H7T7`7h7t7
8$8,8|8
8 9,949@9L9T9`9l9t9
:h:t:|:
; ;,;8;@;
<T<`<h<t<
=$=,=8=D=L=
>@>L>T>`>l>t>
,080@0L0X0`0
2$2,282D2L2
3(303`3l3t3
4$40484D4P4X4
4L5X5`5l5x5
6$606<6D6
7 7(787D7L7X7d7l7x7
8(808<8H8P8\8h8p8
8$90989D9P9X9d9p9x9
:l:x:
;$;0;<;D;P;\;d;
< <(<4<@<H<X<d<l<x<
=(=0=<=H=P=
=D>P>X>d>p>x>
?(?4?<?
0 000<0D0P0\0d0p0|0
1 1(1x1
2(202<2H2P2\2h2p2|2
3d3p3x3
4(444<4H4T4\4
5P5\5d5p5|5
7g:}:
<#<7<K<_<s<
>I>c>w>
1a1u1
4B4G4T4[4d4j4p4{4
<%<-<7<?<G<]<c<u<y<}<
=!=%=)=-=1=5=9===A=E=I=M=Q=U=Y=]=a=e=i=m=q=u=y=}=
>!>%>)>->1>5>9>=>A>E>I>M>Q>U>Y>]>a>e>i>m>q>u>y>}>
?!?%?)?-?1?5?9?=?A?E?I?M?Q?U?Y?]?a?e?i?m?q?u?y?}?
0!0%0)0-0105090=0A0E0I0M0Q0U0Y0]0a0e0i0m0q0u0y0}0
1 1&1,131Q1j1
2(242@2L2X2d2p2|2
3$303<3H3T3`3l3x3
3h4l4p4t4x4|4
5*656
7#7S7m7
8/8E8
9 9h9x9|9
9(;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
<Y=a=q=y=
&1b1(5
:-;A;U;g;a<
c1;3C3
9<9e9
25<I<
> >,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>
192R2q2
;u<|<
=X=\=`=d=h=q=
>5?q?
01116H6_6
:6;H;N;c;i;z;
0N0w0
1 1$1+1<1C1O1\1`1d1h1l1p1t1x1|1
:-;R;i;
3^4a6
85:J:g:
0+1A1P1{1
2F2N2y2
9_9}:
;e<v<
=@=Y=
0,0m0
4.5Z5
849?9
>4>o>s?
1A4v4
6I9{9
9E:7<N<S<b<
2<2q2
8O8n8
<7=q?{?
3<3D3d3~3
:$;|<
0(080>0
3>3V3
3 4g4&5o5)6
9'9f9":T:X:\:`:d:
;`<1>
:q;w;
2%2e2
78:S:u:
0N3d3
3:4N4a4
014<4G4R4]4h4s4~4
9 :%:*:/:
363T3s3
=$>,>
1)141?1
1R4~4
8"8+878e8o8
9 9G:
0-838T8
;@<b<
0Y7r8y8
879X9y9
;|;'=H=
=,?3?9?C?I?P?V?\?c?i?p?w?}?
23282?2
6n7u7
3j4P5
8F;z;
>??g?
26=6H6S6p6{6
6*8;8V8
=1=t=
>'>v>
3 3,3Y3_3j3
;4;R;
=(=8=I=
=I>a>
1>2\2
2Y3;4A4j6
:F:M:]:O<
8:8E8
5(7:7G7w7
7>8]8
<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
?2?O?Z?_?l?{?
0=0n0
0+1<1M1b1
5e6=7
7O;8<
<(=">
3)424
:,;U;E<
=N>t>
1M1Y1}1
1-2U2
4 4*444>4a4k4u4
5/595C5M5O6T6[6b6i6
;+<1<D<H<L<
?/?<?J?T?
6&=+?
4J4c9s98>
=L=f=
>C>y>
375i5
6O7l7v7~7
9<9{9
0<0^0y0
0'1/1q1
34393A3S3
4I4n4}4
4^8z8
:I;U;_;k;u;
=(=Y=z=
h0f123
9c:V;"={=
;?;U;
<F=z=
1d2m3
4y4k5
5a6m7z7
8:8p8|8
3E3W3h3o3
4Q4]4
d0h0l0p0t0x0|0
1(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6X6\6`6d6h6l6p6t6x6|6
7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8
9l:x:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
?d?p?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0d2h2l2p2t2x2|2
4D4L4R4X4`4f4m4
525=5C5J5n5u5z5
:4:f:z:
;9;J;\;
001C1L1V1
2&5?5
6'646
8P:W:k:
5!637D7f7
8';8;S;d;
<3<i<
>0>z>
>.?F?
1+1Q1=2f2
5)5j5t5x5|5
8#9e9
:9:{:
<-=u=
=->o>
:C;J;m>
2"3G4O4s4
0o4]5d5
5M7d7
:3<O<j<x<
6 60656D6w6~6
6+707?7o7v7|7
7&8+8<8o8v8|8
:!:G:P:Y:^:d:~:
;%;,;2;:;A;G;N;V;};
<-<4<;<d<i<w<
=&=-=;=N=V=\=b=h=n=t=z=
>&>.>7>=>U>
>.?3?:?Z?_?z?
-020@0V0b0
1<1x1
2%2*292n2
3 3@3h3m3|3
3[4~4
42575E5X5
6%6>6R6c6h6x6
7 767M7W7z7
8-8I8Y8^8t8
9U9b9o9
:1:E:`:v:
;A;];o;
;'<E<Y<o<
061<1K1
1@2_2d2|2
3>3C3W3
4@4H4^4p4
4E5J5_5
6.6W6_6u6
6*7/7D7m7u7
8#8H8P8f8
9!9I9Q9g9z9
9 :%:<:f:n:
:A;F;];
</<7<M<o<
=v={=
=3>R>
?D?L?b?
0*0T0t0
1>1J1
232?2
3)3J3R3h3
4%4A4
5T5\5j5
626=6]6}6
6R7y7
:7:<:L: ;<;B;Q;
<!<&<3<K<y<
=N=o=t=
>7?<?
0T1Y1k1
1+20252F2
2 3%373J3
4<4O4T4g4z4
607Q7W7
9*979E9O9_9l9z9
:#:3:@:O:\:o:
; ;3;J;Y;p;
<1<F<o<
<@=E=]=p=
>$>B>l>q>
0"0]0c0h0
1A1F1~1
2;2_2d2
3[3`3
4(4-444^4
4%5*575P5
6)6B6
6u7z7
8B8G8X8
9O9T9e9
:":3:q:v:
<?<D<K<
=e=j={=
>">Z>_>|>
> ?%?6?
*0/0A0y0~0
1H1Q1u2z2
4 414D4
5i5n5
6M7n7
828R9W9i9
;B<\<a<r<
>'>,>H>b>v>
0#0T0
051:1A1a1f1#2u2
2 3`3e3
4$4*40464<4B4G4M4W4\4m4
5#5=5O5Z5h5
7m7r7
8$8)8:8
8(9-9c9h9y9
:<:p:u:
:O;z;
<a<f<k<
0'0]0b0t0
0P1}1
1p2u2
253A3F3_3=4B4T4~4
7N7S7e7
7(8~8
8h9m9
:#:U:Z:k:
;j;o;
<2<a<g<
?V?_?h?m?
00050
0,1A1F1
2B2W2\2
20353F3
505v5
6@6E6^677C7H7t7
7(8I8
9%:S:X:]:
;8<=<D<
=2=V=[=`=
>D>I>P>{>
>h?m?t?
070`0e0w0
10151_1h1
3"3:3M3
5/5<5A5R5i5~5
6%666;6L6c6}6
7&7V7_7
8)8<8G8L8W8k8
<T<z<
<A=F=W=
0&1G1L1\1s1
1!2&262M2i2
3'3C3k3p3
4)4W4\4m4
5&5=5W5
;0;d;
<(<-<D<
=/=X=]=
>'?,?C?a?
1'1K1S1Z1
2%282a2f2x2
4U4Z4n4
4!5&5=5
6J6n6{6
7.7R7_7}7
8M8v8
929N9^9
:#:`:
;-;P;U;l;
<1<c<
="=O=f=
>!>Y>k>p>
>7?u?z?
'0=0B0T0
1J1k1p1
2&2)3H3O3V3]3d3k3p3u3
4/4:4R4c4t4
626D6]6t6
7/7A7q7
80858F8a8
9!9&989[9`9q9
9M:R:j:
;W;\;a;
<=<B<
>3?8?L?
0L0Q0^0w0
2"2/2H2o2
3!323W3
5@5E5\5x5
6(646b6g6y6
:j;o;
= =M=R=f=
>#>(>@>R>[>l>~>
?-?D?f?
0;1C1V1
1 2%292S2m2
41464G4a4u4
4=5B5V5s5
6(6X6]6n6
6'7,7?7U7s7
8F8K8\8
879<9M9{9
:#:u:z:
:C;^;
<%=b=}=
1W1_1r1
252I2w2
3A3I3
4/4x4}4
475f5m5{5
7]8s8x8
9=9Q9V9m9
9):Y:h:
;6;d;|;
<+<[<q<
=*=M=R=f=}=
=,>1>E>\>
?F?W?j?
*0@0E0J0[0
0?1W1
2e3Z4
12191@1G1O1T1c1
2.2`2
3*393H3W3f3z3
444K4
5"5'5,5=5
556:6Q6m6
95:::N:
;;;@;V;
<(<O<T<h<
<V=[=p=
>4>C>j>y>
>9?@?G?a?g?v?
1W4w5
7"7&7*7.72767:7>7B7S7[7h7
9I9N9e9
:%:*:A:a:f:}:
:A;F;];x;};
<"<9<T<Y<p<
=0=5=L=g=l=
>(>C>H>_>z>
?&?+?B?m?
0.0I0N0e0
1%1*1A1\1a1x1
282=2T2o2t2
3*3/3@3
5-5H5M5]5
7-7]7f7k7|7
8A8F8V8i8
9M9a9f9y9
:&;7;`;
;-<y<
=)=.=3=y=
>1>l>
>*?<?_?
000K0P0`0z0
1'1:1t1
2B2l2q2
3!3&363I3x3
3`4f4~4
6;6@6Q6h6w6
767;7W7i7
8*858I8
9'9,9;9
:(:-:>:U:
:;;@;Q;s;
<1<6<o<
='=G=l=q=
>!>W>\>
?#?(?9?P?
2070I0r0
1*1;1
2 2S2X2l2
3b3g3
414B4
52575K5t5y5
6/6=6^6
7$787j7o7
83888L8z8
9C9H9\9
:C:d:i:z:
;h;m;
;C<H<X<
<F=W=\=n=
= >F>K>]>o>
? ?3?F?z?
1$151]1b1r1"2'282[2`2r2
4H4M4_4r4
5*5=5y5
7!8&8-8
9p9u9
98:\:a:r:);F;K;[;
<n=s=
= >A>F>y>
>D?I?\?
2I2_2d2v2
5%5,5l5
526:6A6
727U7g7
8P8m8t8{8
8$9)9<9
:];b;t;
<F=K=]=
>$>R>W>h>
1B1G1Z1
22373I3o3t3
=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
0>1g1
3$3G3M3T3
4T4[4a4
8J<v?
>8?U?}?
(030G0R0i0
0)9=;b<:=0>u>
2l4!<A<;>[>+?]?
8#9*9L9S9^9e9k9q9v9
1&151E1T1c1l1q1|1
2$3-363G3L3R3e3l3}3
4=5S5h5
=/=g=f>
7>7H7
?1?G?c?
2"3r3]4
5P7i7d8
3H4i4
5<7G7p7|7
>$>(>,>0>
l1x1 3,3(6
3T3:4
:O;f;
> >$>(>,>x>
3<4"5v5
849@9
2*363
>A>b>h>>?Y?`?
2 2$2(2
333P3
4>5X5
5%6P8X8
859]9
:$;];
5 5$5(5,5054585<5@5D5H5L5
5e6y6
+:J:j:
=P>~>
1 1$1
=`>l>
;%;?;b;x;
;'<U<
4R90=
2M4~4
7=7C7J7Q7X7
=^=4>
>)>A>H>O>
2E4K4
5<6J6z6
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:
:7;a;|;
>Y?`?g?n?u?
1C2p2z2
424D4
2,6064686<6@6D6H6
1:1|1
3e3r3
3%4j4
?&?U?p?
3%4y4
5$5(5,5054585<5@5D5H5
=,=3=K=
?#?4?C?
o0w0}0
1@1G1
3P4\4q4x4
5^6o6W7
636D6b6
707]7
7M8n8}8
9!:<:
:=;Y;
=c>y>
;';T;
143X394X4z5
5'606o8x8|8
9A9V9
0.1<1@1D1H1L1P1U1\1
1L2d2
2D5L5P5T5X5\5`5
6?6T6z6
7+7@7
<-<@<&>
2H3\4
6 6$6(6
7Y8_8
9h9~9
9a:j:q:{:
;3;C;[;k;
<'<.<8<B<L<V<`<j<t<
=o=~=
>4>9>@>
?0V0[0b0,1
2#2R2f2s2x2
2;3B3T3[3`3g3B5
]2a2e2i2m2q2u2y2}2
61?1H1
6&626>6J6V6i687J7\7m8
8B9-;?;
E3q3F5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6
1P2N3U3
E9I9M9Q9U9Y9]9a9e9i9m9q9u9y9}9
;)?7?
+0:0]0h0v0|0
:1:D:K:_:V;
0-2G2
4M5c5
6-6G6
='=?=E=K=Q=X=h=
2*3k3
5=5G5
;O=`=
7P;l;
;.?J?g?u?
202:2
>2>K>d>
7l85:H:S:
d0Z1s3
9R:a;
3C3I3w4}4
5$5+505Z5
9U9~9
9H:]<B=^=
?(?A?
0k2s2
4L4X4
435P8l:
1i;b=
=R>7?S?
4_5x7
8*9g9Z;
1'3#464<4H4v4|4
8o9w9
9 >&>.>
6/8;8I8[8V;~;
0-1=1G1Q1f3{3
6R;`<k<
4[5t5
6:7P7
9R9t9x9|9
;N>l>t>x>|>
2)2J2k2
5)6:6Y6m6
6.757<7C7P7z7
8&838J8V8]8d8k8x8
9*:;:Z:n:
;/<@<L<X<d<l<p<x<|<
<+=@=L=X=d=p=|=
?'?t?
3 3$3(3,3034383<3@3D3V3d3k3r3y3
4"44484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$565D5K5R5Y5b5t5x5|5
7 7'7.787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8
:":):/:
;6;=;D;K;Q;
0#0*000S0Y0l0y0
233p3H6
7L7P7
:^:!=V>
0V2`2i2 3i3
1:2D2P2j2q2~2
283O3V3\3
4;4P4T4X4\4`4d4h4l4p4t4x4|4
4K5{5
5K5X5w5
7;7A7
B1I1V1
152D2T2X2p2w2~2
3(383<3
4M4n4
5-545;5A5y5
7+7M7T7Z7
1q132
4&4-4
5C5j5
7x8f;><i<
2+22292@2T2X2\2`2d2h2p2t2x2|2
2>5t5
:'=2===H=o=
M0e0r0
1X1p1y1
2 2$2(2,2024282<2@2T2
3c3j3p3t3x3|3
3*4;4
8 8(8C8K8i8q8
:(:Q:v:
;3;Q;d;{;
0e0!161
1 2S2Y2
;.;>;N;^;p;
1A2J2n2
3>4k5
9*939O9X9r9{9
9::B:]:e:
:5;N;S;
;)<@<|<
<!=C=k=
2,323
5\8g8t8
8P9[9z9
9(:0:K:S:n:v:
:K;d;i;
<2<W<u<
=)=Y=
>4?k?
101=1F1
8P;g;~;
=Z=o=
Q6W6]6S:
:$<A<
1 1$1(1,1014181<1V1
4Z5p5
;-;3;
4\6d6h6l6p6t6x6|6
7?9^9
<D>]>
0&030A0
417<7E7
8*868
9&:/:X:k:
;:<O<
>:?[?f?x?
5 8m:t:{:
<h=r=}=
>X>p>z>
<7=;=?=
7#7'7+7
4$4U4Y4]4
:V:r;
>)>5><>B>I>P>W>^>e>l>s>
1&111?1
<7={=
6 6%6+656>6I6U6Z6j6o6u6{6
7T8X8^8d8j8p8v8|8
=%=8=K=^=d=
0*0=0C0V0\0o0u0
2=2G2Q293
:$:o<
2*3=3P3
4C5g5
7K8Q8
<^=d=
:':+:/:3:7:;:?:C:
:%;5;Z;q;
< <$<(<z<
=#=.=K=]=
>H?b?
2L3b3
2,395
:(;U;
;h=/>u>
;.=L=j=
>*>F>`>
1)2Y2
4_4L5j5
677v7
88:=:
<)=;=S=\=`=d=h=l=p=t=x=|=
>M>S>Y>]>c>g>n>v>~>
?&?A?P?U?_?n?
1)1/151<1F1R1[1t1
21292C2J2R2\2d2l2
3 3$3(3,3034383<3@3D3H3L3P3}3
>K?i?n?|?
0%0E0f0j0n0r0v0z0~0
7!797Q7g7
8)8V9
:9:c:
<&=P=i=
>*>\>
>%?9?O?e?{?
101I1b1w1
2,2E2Z2s2
3$4h4
445x5
7 8d8
809t9
<,=p=
0(1l1
182|2
4$5h5
546x6
8 9d9
>2?W?
8c9q9R:
;D=a=
1<1F1
2J2R2
:1:A:S:w:
6Q6p6
6'777c7
8;8M8v8
9#9'9+9/93979;9?9C9G9K9O9S9W9[9_9c9
=$=,=D=M=R=_=f=o=u={=
0%0/050;0B0L0X0a0z0
1%171?1I1P1X1b1j1r1
2"2&2*2.22262:2>2B2F2J2N2R2V2Z2^2b2f2j2n2r2v2z2~2
;3;N;i;
=Q=l=
> >>>g>
464T4r4
4D9[9v9
;d<;=
30<0m4v4_9h9
=>>T>
?#?0?a?u?
1.3Q3I6
6P7u7
7G8}8
=.=`=
>`?d?h?l?p?t?x?|?
0&1^1
5W5_5
5D6L6h6p6
6&7y7
9'9B9Z9a9h9o9
:;:t:
;#<H<X<_<r<w<
=-=?=b=
>m>q>u>y>}>
3#6N8K9
=A>]>i>
2#2'2+2/23272;2?2C2G2K2O2S2W2[2_2c2g2k2o2s2w2{2
6b6W8g8
9<9n9
4'5B6F6J6N6R6V6Z6^6b6f6j6n6r6v6z6~6
6E7W7r7X8~8
9P:j:k;
<*=<=
2P4V6
405V7
;9;Q;^<
050U0l0s0
8)9:9e:
0R0+5
6$7A7V7k7
5"5;5T5m5
75:T:
5,5@5T5{5
566V6x6
7;9a:
2 5*545
9w:L;
2=9b9
9>:d:
2;6=<
=2=h=v=
:+:V:
=h>~>
434x4
;2<g<W=y=
=O>r?
;*>P>{>
1c2U<
9r?|?
8[=c=i=o=u={=
=!?)?/?5?=?E?K?Q?Y?a?g?m?z?
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,70747`7d7h7l7p7t7x7|7
4$4,484H4T4`4l4x4
5 5,54585D5L5P5\5p5|5
6$606@6L6T6\6h6x6
7 7,747@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8084888@8D8H8P8T8X8`8d8h8p8t8x8
9 9$9(9094989@9D9H9P9T9X9`9d9h9p9t9x9
 2D2h2
3@3d3
4$4<4`4
585\5
646X6d6|6
747X7
P5T5X5\5`5d5h5l5p5t5x5|5
586<6@6D6H6L6P6t6
7(747L7p7
989\9
:4:@:X:d:|:
;0;T;`;x;
;t<|<
=8=<=
> >4>H>`>d>h>
?,?0?l?p?t?x?|?
1 1$1(1,1
Washington1
Redmond1
Microsoft Corporation1(0&
Microsoft Code Signing PCA 20110
201215213145Z
211202213145Z0t1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Corporation0
E0C1)0'
 Microsoft Operations Puerto Rico1
230012+4630090
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicCodSigPCA2011_2011-07-08.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicCodSigPCA2011_2011-07-08.crt0
DLYwh
bf&!D
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20110
110708205909Z
260708210909Z0~1
Washington1
Redmond1
Microsoft Corporation1(0&
Microsoft Code Signing PCA 20110
S0Q0O
Ihttp://crl.microsoft.com/pki/crl/products/MicRooCerAut2011_2011_03_22.crl0^
R0P0N
Bhttp://www.microsoft.com/pki/certs/MicRooCerAut2011_2011_03_22.crt0
3http://www.microsoft.com/pkiops/docs/primarycps.htm0@
Legal_policy_statement
e_.,>
D=xz#
*?*kXIc
QEX82q'
WqVNHE
Washington1
Redmond1
Microsoft Corporation1(0&
Microsoft Code Signing PCA 2011
Microsof
http://www.microsoft.com0
mcm+A
20210504053413.179Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
201015172821Z
220112172821Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp Service0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicTimStaPCA_2010-07-01.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicTimStaPCA_2010-07-01.crt0
VkQ@w
!XlX@
LI|kQ
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
100701213655Z
250701214655Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
|hK,_
$`2X`F
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
1http://www.microsoft.com/PKI/docs/CPS/default.htm0@
Legal_Policy_Statement
oK0D$"<
z.9Wv
r~akow
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:0842-4BE6-C29A1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20210504111501Z
20210505111501Z0w0=
1/0-0
1(0&0
j3bI)
yi#pc 
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
P?}7dn
