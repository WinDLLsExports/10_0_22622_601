!This program cannot be run in DOS mode.
Rich5
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
@USVWATAVAWH
ph_8E
fE9$@u
fE9$Su
A_A^A\_^[]
UVWATAUAVAWH
ph_8E
A_A^A]A\_^]
UWAUAVAWH
ph_8E
A_A^A]_]
L$HH3
L$HH3
UVWAVAWH
@A_A^_^]
t$ UWAVH
UVWAVAWH
uLH9]
A_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWAVH
fD94Bu
t$(E3
t$(E3
t$(E3
A^_^[]
@USVWATAVAWH
fD9<Au
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
fE9<vu
t$(E3
D$ E3
D$ E3
A_A^A\_^[]
UVWATAVH
D$(E3
A^A\_^]
VWAVH
D$ f9
L$(H3
0A^_^
UVWATAUAVAWH
\$(E3
\$(E3
ph_8E
D$ E3
fD9$Au
D$ E3
ph_8E
ph_8E
ph_8E
ph_8E
|$(E3
\$(E3
|$(E3
A_A^A]A\_^]
UVWATAUAVAWH
\$(E3
\$(E3
ph_8E
D$(E3
A_A^A]A\_^]
u`H9S
L$HH3
WAVAWH
9A98uCA9x
pcPZt
0A_A^_
UVWATAUAVAWH
y\L9m
fE9,@u
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$HE3
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
Q|I\e!)
%ProgramW6432%
Winsock
$(runtime.windows)
Parameters
MinSockAddrLength
SocketType
$(runtime.host.hklm.system)\CURRENTCONTROLSET\HARDWARE\PROFILES\CURRENT
AddressFamily
Version
%SystemDrive%
ByteOrder
Protocol
OfflineCapable
%CommonProgramW6432%
HKEY_LOCAL_MACHINE\SOFTWARE
$(runtime.bootDrive)
$(runtime.host.hklm.software)
$(runtime.host.hklm.system)
Mapping
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet
%ProgramFiles%
%CommonProgramFiles%
$(runtime.commonFiles)
HelperDllName
%SystemRoot%
ProviderGUID
ProtocolMaxOffset
$(runtime.programFiles)
%SystemRoot%\system32
$(runtime.host.hklm.system.ccs)
MaxSockAddrLength
szProtocol
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
ProviderFlags
$(runtime.system32)
MessageSize
ServiceFlags
$(runtime.host.hkcr)
Transports
HKEY_LOCAL_MACHINE\SYSTEM
onecore\base\wcp\plugins\winsockai\dll\appperms.cpp
Windows::WCP::WinsockAI::WinsockAppPermittedCatsInstaller::Install
Not-null check failed: Component
Windows::WCP::WinsockAI::WinsockAppPermittedCatsInstaller::Uninstall
Windows::WCP::WinsockAI::WinsockAppPermittedCatsInstaller::Configure
Component->Manifest->GetTableOfContents(&Toc)
onecore\base\wcp\plugins\winsockai\dll\namespace.cpp
Windows::WCP::WinsockAI::WinsockNamespaceInstaller::Install
Not-null check failed: Services
Not-null check failed: Success
Services->get_TargetProcessorArchitecture(&Processor)
Services->get_IsolationAllocator( Allocator.GetMutablePointer())
GetLastError
Windows::WCP::WinsockAI::WinsockNamespaceInstaller::Uninstall
__lastErr
onecore\private\Base\inc\auto_dllpath.h
Windows::Rtl::`anonymous-namespace'::CAutoDllPathImpl::{ctor}::<lambda_72858cb0c7aff8b9b38aea4da7165edb>::operator ()
Not-null check failed: m_hModule != nullptr
Windows::Rtl::`anonymous-namespace'::CAutoDllPathImpl::{dtor}::<lambda_b0f24db7bc869d7f631152cf9ec3f5d6>::operator ()
m_pfnRemoveDllDirectory(m_DirectoryCookie)
AddDllDirectory
Windows::Rtl::`anonymous-namespace'::CAutoDllPathImpl::SetDllPath
pfnAddDllDirectory != nullptr
RemoveDllDirectory
m_pfnRemoveDllDirectory != nullptr
0 != m_DirectoryCookie
Windows::Rtl::`anonymous-namespace'::CAutoDllPathLegacyImpl::{ctor}::<lambda_3f9b539e2da0d2969cf5ca0c293e5078>::operator ()
Windows::Rtl::`anonymous-namespace'::CAutoDllPathLegacyImpl::{dtor}::<lambda_d49cad0d697d5bf5be50b814e5a4f541>::operator ()
m_pfnSetDllDirectoryW(m_LastDllPath)
GetDllDirectoryW
Windows::Rtl::`anonymous-namespace'::CAutoDllPathLegacyImpl::SetDllPath
pfnGetDllDirectoryW != nullptr
SetDllDirectoryW
m_pfnSetDllDirectoryW != nullptr
::GetLastError()
m_pfnSetDllDirectoryW(lpPathName)
Windows::Rtl::CAutoDllPath::SetDllPath
::GetVersionExW( &versionInfo )
kernel32.dll
m_hModule != nullptr
m_pAutoDllPathImpl = new CAutoDllPathLegacyImpl(m_hModule)
api-ms-win-core-libraryloader-l1-1-0.dll
m_pAutoDllPathImpl = new CAutoDllPathImpl(m_hModule)
WinsockTransportsAI
Winsock Transports AI
Winsock Transports AI: status = {0}; message = {1}; info: {2}
Winsock Transports AI: status = {0}; message = {1}
onecore\base\wcp\plugins\winsockai\dll\transports.cpp
Windows::WCP::WinsockAI::WinsockTransportsInstaller::RemoveSzFromMultiSz
Not-null check failed: pszRemoveString
Not-null check failed: pMultiSz
Not-null check failed: pResultMultiSz
(RtlSplitLUnicodeString( RTL_SPLIT_LUNICODE_STRING_FLAG_FIRST, &Temp, NULL, NULL, L'\0', &First, &Rest))
Winsock Transports AI: {0} is bailing with status {1} from calling {2} at line {3}
_status
RtlEqualLUnicodeStrings(&String, &First, NULL, &fMatchFound)
RtlDuplicateCountedStringToLUnicodeString( MultiSz.Length / sizeof(WCHAR), MultiSz.Buffer, pResultMultiSz->GetMutablePointer())
Windows::WCP::WinsockAI::WinsockTransportsInstaller::AddSzToMultiSz
Not-null check failed: pszAddString
RtlDuplicateCountedStringToLUnicodeString( lenMultiSz / sizeof(WCHAR), pMultiSz, pResultMultiSz->GetMutablePointer())
RtlAllocateLUnicodeString(cbNewSize,pResultMultiSz->GetMutablePointer())
Windows::WCP::WinsockAI::WinsockTransportsInstaller::OpenSpecifiedTransport
Not-null check failed: Transport
Not-null check failed: TransportHandle
::NtCreateKey( &CurrentTransport, KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY | DELETE, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
::NtCreateKey( &CurrentTransportParameters, KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY | DELETE, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
::NtCreateKey( CTPWinsock.GetMutablePointer(), KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY | DELETE, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
Windows::WCP::WinsockAI::WinsockTransportsInstaller::WriteProtocolToTransport
Not-null check failed: TransportWinsockRoot
::NtCreateKey( &CurrentProtocol, KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY | DELETE, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Version), 0, REG_DWORD, (void *)(&Version), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_AddressFamily), 0, REG_DWORD, (void *)(&AddressFamily), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_MaxSockAddrLength), 0, REG_DWORD, (void *)(&MaxSockAddrLength), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_MinSockAddrLength), 0, REG_DWORD, (void *)(&MinSockAddrLength), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_SocketType), 0, REG_DWORD, (void *)(&SocketType), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Protocol), 0, REG_DWORD, (void *)(&Protocol), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_ProtocolMaxOffset), 0, REG_DWORD, (void *)(&ProtocolMaxOffset), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_ByteOrder), 0, REG_DWORD, (void *)(&ByteOrder), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_MessageSize), 0, REG_DWORD, (void *)(&MessageSize), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_szProtocol), 0, REG_EXPAND_SZ, ProtocolName, (ULONG)wcslen(ProtocolName) * sizeof(WCHAR))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_ProviderFlags), 0, REG_DWORD, (void *)(&ProviderFlags), sizeof(DWORD))
::NtSetValueKey( CurrentProtocol, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_ServiceFlags), 0, REG_DWORD, (void *)(&ServiceFlags), sizeof(DWORD))
ntStatus
Windows::WCP::WinsockAI::WinsockTransportsInstaller::OpenNextSubkey
subKeyBuffer.Alloc(length)
::NtEnumerateKey( TransportWinsockKey, 0, KeyBasicInformation, subKeyInfo, subKeyInfoLength, &length)
::NtOpenKey( subKeyHandle.GetMutablePointer(), DELETE, &LocalAttrs)
Windows::WCP::WinsockAI::WinsockTransportsInstaller::Install
Init(Services, IS_PHASE_OFFLINE(Phase))
Running the Winsock Transports Installer for installation.
WSPathTranslator( WS_PATH_TRANSLATOR_FLAG_USE_HOST_PATHS, g_RGWCH__percent_SystemRoot_percent__bslash_system32, MAX_PATH+1, ExpandedSystem32, &Size)
DllPath.SetDllPath(ExpandedSystem32)
$(runtime.host.hklm.system.ccs)\Services
Services->get_IsolationAllocator(Allocator.GetMutablePointer())
Services->ReplaceMacros( ICSIINSTALLERSERVICES_REPLACE_MACROS_FLAG_USE_PHYSICAL_PATHS, WinsockKeyPath, WinsockTranslatedKeyPath.GetMutablePointer(), NULL)
RtlConvertWin32RegistryPathToNtRegistryPath( &lusWinSockTranslatedKeyPath, &lusNtWinsockTranslatedKeyPath)
RtlInitUnicodeStringFromLUnicodeString( lusNtWinsockTranslatedKeyPath.GetConstPointer(), &usNtWinsockTranslatedKeyPath)
::NtOpenKey( &WinsockKey, KEY_QUERY_VALUE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY, &ObjAttr)
::NtCreateKey( &WinsockSubKey, KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
::NtCreateKey( &WinsockParameters, KEY_READ | KEY_WRITE | KEY_CREATE_SUB_KEY, &LocalAttrs, 0, NULL, REG_OPTION_NON_VOLATILE, NULL)
Component->Manifest->SearchULONGTable( 0, Toc, Windows::Cms::CMS_SECTIONID_WINSOCK_TRANSPORTS_SECTION, &WinsockTransportsTable)
Component->Manifest->EnumerateULONGTable( 0, WinsockTransportsTable, &TransportElements)
TransportElements->Next(1, &Item, &NumElements)
Component->Manifest->GetBlob(Item.Value, &TempSize, (void**)&CmsElement)
Component->Manifest->GetString(CmsElement->transport, TransportService.GetMutablePointer())
Component->Manifest->GetString(CmsElement->helper, Helper.GetMutablePointer())
OpenSpecifiedTransport( TransportService, WinsockKey, Transport.GetMutablePointer())
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_MaxSockAddrLength), 0, REG_DWORD, (void *)(&MaxAddrLen), sizeof(DWORD))
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_MinSockAddrLength), 0, REG_DWORD, (void *)(&MinAddrLen), sizeof(DWORD))
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_HelperDllName), 0, REG_EXPAND_SZ, Helper, Helper == NULL ? 0 : (ULONG)((wcslen(Helper) + 1) * sizeof(WCHAR)))
Component->Manifest->GetGUID( CmsElement->ProviderGuid, &ProviderGuid)
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_ProviderGUID), 0, REG_BINARY, &ProviderGuid, sizeof(GUID))
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_OfflineCapable), 0, REG_DWORD, &OfflineCapableValue, sizeof(DWORD))
Component->Manifest->EnumerateULONGTable( 0, CmsElement->mappings, &ChildElements)
ChildElements->Next(1, &ChildItem, &NumChildren)
::RtlReallocateLBlob(0, WSH_MAX_MAPPING_DATA, MappingData.GetMutablePointer())
Component->Manifest->GetBlob(ChildItem.Value, &TempSize, (void**)&CmsMapping)
Component->Manifest->GetString(CmsMapping->addressFamily, AddressFamily.GetMutablePointer())
Component->Manifest->GetString(CmsMapping->protocol, Protocol.GetMutablePointer())
TranslateAddressFamilyToInt(PWSTR(AddressFamily), &AddressFamilyInt)
TranslateProtocolToInt(PWSTR(Protocol), &ProtocolInt)
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Mapping), 0, REG_BINARY, (BYTE *)(MappingData.Buffer), (MappingRows * MAPPING_COLUMNS + 2) * sizeof(ULONG))
Component->Manifest->EnumerateULONGTable( 0, CmsElement->protocols, &ChildElements)
Component->Manifest->GetBlob(ChildItem.Value, &TempSize, (void**)&CmsProtocol)
Component->Manifest->GetString(CmsProtocol->protocolName, ProtocolName.GetMutablePointer())
Component->Manifest->GetString(CmsProtocol->addressFamily, AddressFamily.GetMutablePointer())
Component->Manifest->GetString(CmsProtocol->protocol, ProtocolString.GetMutablePointer())
Component->Manifest->EnumerateULONGTable( 0, CmsProtocol->providerFlags, &ChildProviderFlags)
ChildProviderFlags->Next(1, &ChildFlagItem, &NumFlagChildren)
Component->Manifest->GetBlob(ChildFlagItem.Value, &TempSize, (void**)&CmsProviderFlag)
Component->Manifest->EnumerateULONGTable( 0, CmsProtocol->serviceFlags, &ChildServiceFlags)
ChildServiceFlags->Next(1, &ChildFlagItem, &NumFlagChildren)
Component->Manifest->GetBlob(ChildFlagItem.Value, &TempSize, (void**)&CmsServiceFlag)
TranslateProtocolToInt(PWSTR(ProtocolString), &ProtocolInt)
WriteProtocolToTransport( Transport, NumProtocols, CmsProtocol->version, AddressFamilyInt, CmsProtocol->maxSockAddrLength, CmsProtocol->minSockAddrLength, CmsProtocol->socketType, ProtocolInt, CmsProtocol->protocolMaxOffset, CmsProtocol->byteOrder, CmsProtocol->messageSize, ProtocolName, ProviderFlagsValue, ServiceFlagsValue)
WSPathTranslator( WS_PATH_TRANSLATOR_FLAG_USE_HOST_PATHS, Helper, MAX_PATH+1, ExpandedHelper, &Size)
::RtlReallocateLBlob(0, WSH_MAX_MAPPING_DATA, pTriples.GetMutablePointer())
((HRESULT)(::GetLastError()) <= 0 ? ((HRESULT)(::GetLastError())) : ((HRESULT) (((::GetLastError()) & 0x0000FFFF) | (7 << 16) | 0x80000000)))
WSHGetWinsockMapping
::NtSetValueKey( Transport, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Mapping), 0, REG_BINARY, (BYTE *)(pTriples.Buffer), cTriples)
::RtlReallocateLBlob(0, cbBufferRequired, WsockTransportsMultiSz.GetMutablePointer())
::NtQueryValueKey( WinsockParameters, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Transports), KeyValuePartialInformation, WsockTransportsMultiSz.Buffer, cbBufferRequired, &cbBufferRequired)
Tcpip
Tcpip6
AddSzToMultiSz( TransportService, reinterpret_cast<LPWSTR>(ValueInfo->Data), ValueInfo->DataLength, prepend, &NewMultiSz)
AddSzToMultiSz( TransportService, NULL, 0, FALSE, &NewMultiSz)
::NtSetValueKey( WinsockParameters, const_cast<PUNICODE_STRING>(&g_UNICODE_STRING_Transports), 0, REG_MULTI_SZ, NewMultiSz.Buffer, (ULONG)(NewMultiSz.Length))
HRESULT_FROM_WIN32(m_pfnMigrateWinsockConfigurationEx(&migrateDisp, 0, 0, &TargetInformation, traceFn))
Winsock Transports AI installation succeeded.
Windows::WCP::WinsockAI::WinsockTransportsInstaller::Uninstall
Running Winsock Transports Installer for uninstallation.
RtlConvertWin32RegistryPathToNtRegistryPath(&lusWinSockTranslatedKeyPath, &lusNtWinsockTranslatedKeyPath)
RtlInitUnicodeStringFromLUnicodeString(lusNtWinsockTranslatedKeyPath.GetConstPointer(), &usNtWinsockTranslatedKeyPath)
Component->Manifest->SearchULONGTable(0, Toc, Windows::Cms::CMS_SECTIONID_WINSOCK_TRANSPORTS_SECTION, &WinsockTransportsTable)
OpenNextSubkey( Transport, Allocator, TransportSubKey.GetMutablePointer())
::NtDeleteKey(TransportSubKey)
::NtDeleteKey(Transport)
RemoveSzFromMultiSz( TransportService, reinterpret_cast<LPWSTR>(ValueInfo->Data), ValueInfo->DataLength, &NewMultiSz)
Winsock Transports AI uninstallation succeeded
IPPROTO_TCP
IPPROTO_UDP
IPPROTO_RAW
IPPROTO_ICMP
IPPROTO_ICMPV6
IPPROTO_IPV4
IPPROTO_IPV6
IPPROTO_ESP
IPPROTO_AH
IPPROTO_RDP
IPPROTO_ND
IPPROTO_HOP_OPTS
IPPROTO_IGMP
IPPROTO_GGP
IPPROTO_ST
IPPROTO_CBT
IPPROTO_EGP
IPPROTO_IGP
IPPROTO_PUP
IPPROTO_IDP
IPPROTO_ROUTING
IPPROTO_FRAGMENT
IPPROTO_NONE
IPPROTO_DSTOPTS
IPPROTO_ICLFXBM
IPPROTO_PIM
IPPROTO_PGM
IPPROTO_L2TP
IPPROTO_SCTP
IPPROTO_MAX
HV_PROTOCOL_RAW
BTHPROTO_RFCOMM
BTHPROTO_L2CAP
AF_INET
AF_INET6
AF_UNSPEC
AF_NETBIOS
AF_BTH
AF_IRDA
AF_UNIX
AF_IMPLINK
AF_PUP
AF_CHAOS
AF_NS
AF_IPX
AF_ISO
AF_OSI
AF_ECMA
AF_DATAKIT
AF_CCITT
AF_SNA
AF_DECnet
AF_DLI
AF_LAT
AF_HYLINK
AF_APPLETALK
AF_VOICEVIEW
AF_FIREFOX
AF_BAN
AF_ATM
AF_CLUSTER
AF_12844
AF_NETDES
AF_TCNPROCESS
AF_TCNMESSAGE
AF_ICLFXBM
AF_LINK
AF_HYPERV
AF_UNKNOWN1
onecore\base\wcp\plugins\winsockai\dll\winsockai.cpp
Windows::WCP::WinsockAI::WinsockAdvancedInstallers::Init
Not-null check failed: pServices
ws2_helper.dll
WSCSetApplicationCategoryEx
WSCUnInstallNameSpaceEx2
WSCInstallNameSpaceEx2
MigrateWinsockConfigurationEx
ws2_32.dll
mswsock.dll
Windows::WCP::WinsockAI::WinsockAdvancedInstallers::WSPathTranslator
Not-null check failed: OutgoingPath
Not-null check failed: OutgoingLength
winsockai.pdb
.text$mn
.text$mn$00
.text$x
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
winsockai.DLL
DllCanUnloadNow
DllCsiGetHandler
_wcsicmp
_itow_s
wcstol
_purecall
__C_specific_handler
wcscpy_s
malloc
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
GetLastError
GetProcAddress
SetLastError
FreeLibrary
GetVersionExW
LoadLibraryExW
DisableThreadLibraryCalls
DeleteCriticalSection
InitializeCriticalSection
HeapDestroy
LoadLibraryW
Sleep
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-libraryloader-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
RtlRaiseStatus
NtCreateKey
NtSetValueKey
NtEnumerateKey
NtOpenKey
NtQueryValueKey
NtDeleteKey
NtClose
ntdll.dll
ConvertHResultToNtStatus
RtlReportErrorOrigination
ConvertNtStatusToHResult
RtlSplitLUnicodeString
RtlEqualLUnicodeStrings
RtlDuplicateCountedStringToLUnicodeString
RtlAllocateLUnicodeString
RtlConvertWin32RegistryPathToNtRegistryPath
RtlInitUnicodeStringFromLUnicodeString
RtlReallocateLBlob
RtlFreeLUnicodeString
RtlFreeLBlob
?RtlTraceFormat_PCWSTR_AsLiteralString@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceVa@Rtl@WCP@Windows@@YAXKKPEAU_RTL_TRACING_FACILITY@123@QEBD_KPEAD@Z
?RtlTraceFormat_PCSTR_AsLiteralString@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCULONG@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCULONG_AsWin32Error@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCNTSTATUS@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCHRESULT@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?GetWin32PathOfSiblingFile@COM@Windows@@YAJPEAXPEBGPEAV?$Auto@U_LUNICODE_STRING@@@2@@Z
RtlInitLUnicodeStringFromNullTerminatedString
RtlConcatenateLUnicodeStrings
RtlEqualLUnicodeStringPrefix
RtlUpcaseUCSCharacter
WCP.dll
memcmp
memcpy
memmove
memset
;:<xG
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Winsock Advanced Installers
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
winsockai.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
winsockai.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
[Fs;m
,ey3a1purd+Q3talw/y+RLVNK1rFaVpx80ehkKvXAbfQ=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
+6jma
r7<oM
20220506222535.268Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:8D41-4BF7-B3B71%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211028192740Z
230126192740Z0
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:8D41-4BF7-B3B71%0#
Microsoft Time-Stamp Service0
w&KD~
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
]\;^.OG
rx"6|
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1-0+
$Microsoft Ireland Operations Limited1&0$
Thales TSS ESN:8D41-4BF7-B3B71%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220507041618Z
20220508041618Z0w0=
1/0-0
1(0&0
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
`y]H0
iQ,>v
f+yph]
