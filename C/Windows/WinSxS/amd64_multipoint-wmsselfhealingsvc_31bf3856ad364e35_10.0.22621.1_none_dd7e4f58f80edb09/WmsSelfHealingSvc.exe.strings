!This program cannot be run in DOS mode.
RichD;j
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
L$0H3
WAVAWH
LH!\$(L
!\$ L
@A_A^_
p AWH
qjX~j
WAVAWH
A_A^_
UWAUAVAWH
A_A^A]_]
VWATAUAWH
H!|$pH
A_A]A\_^
@USVWAUAVAWH
D9uXuK
t7D9}@t1
@A_A^A]_^[]
@SUWATAUH
PA]A\_][
VWATAVAWH
@A_A^A\_^
UVWAVAWH
A_A^_^]
x UATAUAVAWH
fD93u
H!t$0H
L!d$ L
A_A^A]A\]
L$ SVWAVH
(A^_^[
UVWATAUAVAWH
$taH9U
A_A^A]A\_^]
VWAVH
@A^_^
L$0H3
H SUVWATAUAV
A^A]A\_^][
UVWAVAW
A_A^_^]
ATAVAWH
 A_A^A\
USVWATAUAVAWH
fA90t
HA_A^A]A\_^[]
x ATAVAWH
@A_A^A\
R<z/H
x UATAUAVAWH
D$ E3
D$ E3
p1^zq
A_A^A]A\]
q1^zq
R<z/H
t$ WH
pjX~j
L$@H3
x UATAUAVAWH
}0D9d$Tt)
|$@E3
D$pL+
D$pH+
D9t$Ht
A_A^A]A\]
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
UVWATAUAVAWH
L$XE3
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
D9|$@H
|$ E3
D$XE3
A_A^A]A\_^]
c AVH
OH!\$(L
L$@E3
H!\$ 3
L$XH3
x UATAUAVAWH
fD9 t%f
8.t5fD9
fD9 t
D$ E3
A_A^A]A\]
t$ WAUAVH
A^A]_
p AWH
UVWATAUAVAWH
D$`E3
L$@E3
L$hH3
pA_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
WAVAWH
A_A^_
USATAUAVH
PA^A]A\[]
WATAUAVAWH
L$`H3
A_A^A]A\_
p AWH
VWATAVAWH
@A_A^A\_^
VWAVH
uGfD9s
fD9sbu
 A^_^
UVWATAUAVAWH
fD9,Ku
fD9;I
fD9+t|H
u?fD9;u9
>.u+H
fF9,gu
)fD9/u
@A_A^A]A\_^]
UVWATAUAVAWH
fE9$xu
D$@H;
fD9$nu
A_A^A]A\_^]
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
UVAVH
D$ H!
L$(E3
@A^^]
WAVAWH
@A_A^_
ATAVAWH
fD9 t
@A_A^A\
t$ UWAUAVAWH
A_A^A]_]
VWAUAVAWH
!\$pL
H!\$ H
A_A^A]_^
q0R^G'
D$ I;
p0R^G'
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$HE3
ffffff
x AVH
@:Provides self-healing for Windows MultiPoint Server.
@:Windows MultiPoint Server Self-Healing Service
WmsRepair
CWmsSelfHealingSvc::OnInit
m_hExitEvent != 0
CBRAEx
CWmsSelfHealingSvc::OnInit
termsrv\wms\src\platform\wmsselfhealingsvc\wmsselfhealingsvc.cpp
%s(%d) - %s - Assertion failed:  %s (%s)  hr = 0x%08X
Assertion failed:  %s(%d) - %s - %s (%s)  hr = 0x%08X
m_hThreadProcKillEvent != 0
m_hThreadProc
CWmsSelfHealingSvc::OnInit returning %s
CWmsSelfHealingSvc::OnStop
m_hThreadProcKillEvent != NULL
CWmsSelfHealingSvc::OnStop
fSuccess
CWmsSelfHealingSvc::Run
CWmsSelfHealingSvc::Run Exiting.
CWmsSelfHealingSvc::StartMonitoring - eMode = %s
m_hRebootEvent != 0
CWmsSelfHealingSvc::StartMonitoring
CWmsSelfHealingSvc::StartMonitoring - hr = 0x%08X
CWmsSelfHealingSvc::StopMonitoring
CWmsSelfHealingSvc::StopMonitoring - hr = 0x%08X
CWmsSelfHealingSvc::RunSelfHealing - eMode = %s
hProgressEvent != 0
CWmsSelfHealingSvc::RunSelfHealing
dwWait == ((((DWORD )0x00000000L) ) + 0 )
CWmsSelfHealingSvc::RunSelfHealing - dwPercentCompleted = %i
CWmsSelfHealingSvc::RunSelfHealing fRebootRequired = %s
CWmsSelfHealingSvc::RunSelfHealing - hr = 0x%08X
CWmsSelfHealingSvc::DisplayStatusMessage
SrcRes.dll
CWmsSelfHealingSvc::DisplayStatusMessage
cchStatusMessage != 0
CWmsSelfHealingSvc::DisplayStatusMessage - WmsgPostNotifyMessage returned 0x%X
CWmsSelfHealingSvc::StartUp
CWmsSelfHealingSvc::StartUp - VCF is currently uninstalling, not running self-healing.
CWmsSelfHealingSvc::StartUp - hr = 0x%08x
CWmsSelfHealingSvc::ShutDown - reset service ready event
pThis
CWmsSelfHealingSvc::s_ThreadProc
CWmsSelfHealingSvc::ThreadProc
CWmsSelfHealingSvc::ThreadProc - Waiting for WNF_DEP_OOBE_COMPLETE to be set
CWmsSelfHealingSvc::ThreadProc - Service was shutdown while waiting for WNF_DEP_OOBE_COMPLETE to be set
CWmsSelfHealingSvc::ThreadProc - WNF_DEP_OOBE_COMPLETE was set
CWmsSelfHealingSvc::IsMachineOobeCompleted - NtQueryWnfStateData failed, status = %x
(((NTSTATUS)(status)) >= 0)
CWmsSelfHealingSvc::IsMachineOobeCompleted
(lr == 0L) || (lr == 2L)
CWmsSelfHealingSvc::s_CheckDiskProtectionUninstallInProgress
GetLogPath
dwResult != 0 && dwResult <= cchPath
wmain
hLogFile != ((HANDLE)(LONG_PTR)-1)
%%temp%%\WmsSelfHealingSvc-%s-%s.log
HH-mm-ss
yyyyy-MM-dd
System\CurrentControlSet\Services\WMS\Parameters\
DelayedUninstall
Global\WmsShellStartingEvent
Global\WmsSelfHealingSvcReadyEvent
Assertion failed:  %s(%d) - %s - %s (%s)
%s(%d) - %s - Assertion failed:  %s (%s)
ASSERT
FALSE
[%I64u] [%u-%02u-%02u %02u:%02u:%02u.%03u] %s [%X.%X.%X] 
hRecord
__EHM_MsiWrite
termsrv\wms\src\common\ehmlib\ehmlib.cpp
rc == 0L
__EHM_FlatFileWrite
10.0.10011.16384
level < (sizeof(*RtlpNumberOf(s_rgEventDescriptor)))
DEBUGMSGV
SUCCEEDED (hr)
CNTService::CNTService
termsrv\wms\src\common\ntservice\ntservice.cpp
CNTService::s_HandlerEx ::SetServiceStatus (0x%IX, %lu)
hSCM != 0
CNTService::Install
hService != 0
SYSTEM\CurrentControlSet\Services\
lr == 0L
Description
UIGroup
Group
Winmgmt
RpcSs
DependOnService
Parameters
SYSTEM\CurrentControlSet\Control\Safeboot\Minimal\
Service
SYSTEM\CurrentControlSet\Control\Safeboot\Network\
CNTService::OnAddParameterKeys
CNTService::OnContinue
CNTService::OnDeviceEvent
CNTService::OnInit
CNTService::OnPause
CNTService::OnPowerEvent
CNTService::OnSessionEvent
CNTService::OnShutdown
CNTService::OnSystemTimeChange
CNTService::OnUserControl
%ls is already installed
%ls installed
l%s failed to install. Error %d
%ls is not installed
%ls removed. (You must delete the file (%s) yourself.)
Could not remove %ls. Error %d
fSuccess == TRUE
CNTService::s_ServiceMain
CNTService::s_ServiceMainService Not Registered %x
CNTService::StartServiceW
CNTService::Uninstall
fResult
SYSTEM\CurrentControlSet\Services\EventLog\Application\
Utils::StringTableHelper
termsrv\wms\src\common\srcutils\debughelpers.cpp
eMode < ARRAYSIZE (s_rgStringMap)
EEM_Role_Oobe
EEM_Role_ServiceStartup
EEM_Connector_Oobe
EEM_WmsShell
EEM_Staging
Utils::ExecutionModeToString
lpFilename != NULL
GetModulePath
termsrv\wms\src\common\srcutils\srcutils.cpp
cchFileName != 0
pszFullPath
AppendFileNameToModulePath
LoadResourceDLL
hInst
CreateWmsSid
pSDTempBuffer
CreateSecurityDescriptor
CreateWmsNamedEvent
dwLastError == 5L
hWmsSvcReadyEvent != 0
AdjustPrivilege
GenerateDumpFileName
cchUsedWithoutNull != 0 && cchUsedWithoutNull != (sizeof(*RtlpNumberOf(szModulePathName)))
*pszModuleFileName != L'\0'
%s\%s_%d_%s_%s.dmp
WriteDumpOnExceptionUnhandled exception 0x%08X
WriteDumpOnException
WriteDumpOnExceptionCreating dump file:  %s
hFile != ((HANDLE)(LONG_PTR)-1)
Reboot - pszMessage = %s, timeout = %i, shutdown reason = 0x%08X
SeShutdownPrivilege
Reboot
dwError == 21L
ServicesActive
hServiceManager != 0
GetWindowsServiceInformation
hService != 0 || dwError == 1060L
fSuccess == 0 && dwError == 122L
pQueryServiceConfig
WaitForServiceStatusChange
dwRet == 0L
WaitForServiceStatusChange - waiting for status change
WaitForServiceStatusChange - APC received
WaitForServiceStatusChange - some other APC was received
WaitForServiceStatusChange - dwRet = %u
((HRESULT)0x8000FFFFL)
WaitForServiceStatusChange - Exiting, hr = 0x%X
!fSuccess
SYSTEM\CurrentControlSet\Control\Safeboot\Minimal\{0}
SYSTEM\CurrentControlSet\Control\Safeboot\Network\{0}
IsServiceInSafeModeList
ConditionalWaitForServiceStartUsingEventToStop - %s.
ConditionalWaitForServiceStartUsingEventToStop
ConditionalWaitForServiceStartUsingEventToStop - %s service is running.
ConditionalWaitForServiceStartUsingEventToStop - %s service is auto-start.
ConditionalWaitForServiceStartUsingEventToStop - OS is booted in safe mode, but %s service is in the safe mode list.
ConditionalWaitForServiceStartUsingEventToStop - OS is booted in normal mode.
ConditionalWaitForServiceStartUsingEventToStop- %s is in state %u, waiting for service to start running.
eServiceStatusChangeWaitResult == SSWR_ServiceStatusChanged
StartServiceIfNotRunningAndWait - %s.
StartServiceIfNotRunningAndWait
fSuccess || (::GetLastError () == 1056L)
iResult <= SSM_SafeModeWithNetwork
GetSystemStartMode
GetTokenInformationWithLocalAlloc
(err == 24L) || (err == 122L)
pTokenInformation
WmsShell
\UNC\
\\?\Volume
{00000000-0000-0000-0000-000000000000}
::$DATA
ProductDumpsDir
SOFTWARE\Microsoft\Windows MultiPoint Server
SOFTWARE\Microsoft\Windows MultiPoint Server
PlatformSkuUtils::IsRole
termsrv\wms\src\common\srcutils\platformskuutils.cpp
PlatformSkuUtils::IsConnector
ConnectorInstalled
RoleInstalled
PlatformUtils::HasOobeCompleted
termsrv\wms\src\common\srcutils\platformutils.cpp
PlatformUtils::SetOobeCompleted
OOBECompleted
termsrv\wms\src\common\srcutils\usermanagement.cpp
nStatus == 0 || nStatus == (2100+121)
CUserManagement::s_DoesUserExist
status == ((NTSTATUS)0x00000000L)
CUserManagement::s_InitLsaUnicodeString
CUserManagement::s_GetLocalGroupSid
termsrv\wms\src\common\srcutils\registry.cpp
RegUtil::GetStringValue
cb % sizeof (WCHAR) == 0
assert
fileName
lineNumber
function
macro
message
version
assert
fileName
lineNumber
function
macro
message
hresult
version
Microsoft.Windows.RemoteDesktop.MultiPoint
RSDSD
WmsSelfHealingSvc.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
RegGetValueW
EventRegister
EventUnregister
ADVAPI32.dll
CloseHandle
CreateEventW
GetLastError
IsDebuggerPresent
CreateThread
SetEvent
WaitForSingleObject
FreeLibrary
ResetEvent
WaitForMultipleObjects
GetDateFormatEx
GetTimeFormatEx
ExpandEnvironmentStringsW
SetUnhandledExceptionFilter
GetLocalTime
CreateFileW
WriteFile
KERNEL32.dll
_vsnwprintf
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
__C_specific_handler
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
CoCreateInstance
CoInitializeEx
CoUninitialize
ole32.dll
OLEAUT32.dll
LoadStringW
USER32.dll
WmsgPostNotifyMessage
WMsgAPI.dll
MiniDumpWriteDump
dbghelp.dll
NtQueryWnfStateData
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
EventSetInformation
EventWrite
EventWriteTransfer
SetServiceStatus
OpenSCManagerW
CreateServiceW
RegOpenKeyW
RegSetValueExW
RegCreateKeyW
RegCloseKey
CloseServiceHandle
OpenServiceW
RegisterServiceCtrlHandlerExW
StartServiceCtrlDispatcherW
ControlService
QueryServiceStatus
DeleteService
RegDeleteKeyW
LookupAccountNameW
OpenProcessToken
CreateWellKnownSid
CopySid
InitializeAcl
AddAccessAllowedAce
AddAccessDeniedAce
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
RegOpenKeyExW
LookupPrivilegeValueW
AdjustTokenPrivileges
InitiateSystemShutdownExW
QueryServiceConfigW
NotifyServiceStatusChangeW
StartServiceW
GetTokenInformation
LsaOpenPolicy
LsaNtStatusToWinError
LsaLookupNames2
LsaFreeMemory
LsaClose
Sleep
GetModuleHandleW
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
UnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
ProcessIdToSessionId
K32GetModuleBaseNameW
GetModuleFileNameW
HeapSetInformation
LocalFree
LocalAlloc
LoadLibraryExW
OpenEventW
SleepEx
__CxxFrameHandler4
_wcsicmp
wprintf
_purecall
wcsrchr
wcschr
iswalpha
malloc
_callnewh
msi.dll
NetApiBufferFree
NetUserGetInfo
NETAPI32.dll
GetSystemMetrics
memcmp
memset
HH-mm-ss
yyyyy-MM-dd
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
WmsRepairService
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WmsSelfHealingSvc.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WmsSelfHealingSvc.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
