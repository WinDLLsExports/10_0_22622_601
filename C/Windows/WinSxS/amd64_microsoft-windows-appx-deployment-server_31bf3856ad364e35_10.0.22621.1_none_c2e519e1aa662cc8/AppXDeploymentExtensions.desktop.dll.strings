!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
@USWH
fA9|B
fA9|B
L$xE3
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
L$0H3
T$XE3
L$`H3
L$XE3
D$(E3
D$0E3
L$PH3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
fA94@u
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
fA94@u
A_A^_^]
L$pH3
\$ UH
D$pE3
D$hE3
D$XE3
D$`E3
\$ UVWATAVH
f94Bu
fA94@u
fA94@u
A^A\_^]
L$pH3
D$(E3
L$XE3
D$(E3
D$`E3
L$ E3
L$pH3
L$`H3
@USWH
f9<Bu
f9<Bu
f9<Bu
f9<Ju
@USVWH
f94Bu
f94Ju
@USVWATAVAWH
f94Bu
f94Bu
f94Bu
fA94@u
fA94@u
A_A^A\_^[]
@USWH
f9<Bu
f9<Ju
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
@SVWH
SVWAVH
8A^_^[
WAVAWH
\$8H;
A_A^_
p:_0#
\$ UH
M H1E
 H3E H3E
ntelA
ineID
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
WAVAWH
0A_A^_
SVWAVAWH
0A_A^_^[
oD$ f
oL$0f
oT$@f
o\$PH
q0R^G'
D$TE3
x AVH
@USVWATAUAVAWH
A_A^A]A\_^[]
t5fA9(t/I
|$ UH
VWAVH
D$0E3
ug@89t`H
^ H9;t
L$0H9;t
|$ UATAUAVAWH
u.@8}
F8@88t
A_A^A]A\]
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
D$8E3
D$(E3
D$@E3
VWAVH
 A^_^
USVWAVAWH
A_A^_^[]
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
@A_A^A]A\_^]
L$ SWH
L$XH+
s WAVAWH
@A_A^_
UVWAVAWH
~0H+~(H
0A_A^_^]
\$ WH
L$0L;L$8t*A
t$ WAVAWH
\$PfD
@u;L9;u$E3
0A_A^_
p WAVAWH
 A_A^_
\$0H;\$8t
t$ WH
WAVAWH
T$0L+
A_A^_
|$ UATAUAVAWH
A_A^A]A\]
UVWAVAWH
H!t$XA
D$H!D$@
A_A^_^]
SVWAVAWH
`A_A^_^[
x AVH
rHfD97w
C9fD97u,
x AVH
H9;s!
VWAVH
t$$fD
D$0D9r
@A^_^
L$ SVWH
UVWAVAWH
 A_A^_^]
UWAVH
HcT$ HcL$$H
t$ WH
{ ATAVAWH
 A_A^A\
UVWAVAWH
L$HH3
PA_A^_^]
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PM;
A_A^]
p8V~{/q
p8V~{/q
pRXt8
p8V~{/q
pRXt8
pRXt8
p8V~{/q
pRXt8
p8V~{/q
@USVWATAUAVAWH
u3H;z
H!]o8_ u
A_A^A]A\_^[]
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
H;YPr
H;YPr
H;YPr
H;YPr
UWAVH
C(!C8H
UWAVH
C(!C8H
UWAVH
UWAVH
C(!C8H
UVWATAVH
PA^A\_^]
UWAVH
C(!C8H
UVWAVAWH
PA_A^_^]
UWAVH
C(!C8H
UWAVH
C(!C8H
UWAVH
C(!C8H
UVWAVAWH
PA_A^_^]
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UVWAVAWH
PA_A^_^]
UWAVH
C(!C8H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H
UWAVH
C(!C8H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UVWAVAWH
PA_A^_^]
UWAVH
C(!C8H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
VWAVH
 A^_^
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
q1]Rz?L
H;KPsX
USVWAVH
pA^_^[]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
p@Q4K
qRXt8
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
pRXt8
pRXt8
p8V~{/q
p8V~{/q
pRXt8
p8V~{/q
pRXt8
p8V~{/q
p8V~{/q
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
q8V~{/q
D$(E3
D$PE3
L$PH3
L$ UVWH
fA9<Hu
fA9<Iu
f9<Ju
fA9<Cu
L$`H3
R$fA;Z*
fA9Z*v#A
UWAVH
L$PH3
WAVAWH
@A_A^_
WAVAWH
fD9<Ou
D9;}OH
A_A^_
@USVWATAUAVAWH
9t$8|
t(@85
SVWATAUAVAWH
yxxxxxxxI
\$xHi
D$ Mi
0A_A^A]A\_^[
\$xI;
WAVAWH
 A_A^_
9t$@t
9t$@t
x UAVAWH
A_A^]
D8D$0u.D8D$8t
!D8D$@t
D8D$HA
UVWAVAWH
0A_A^_^]
s WAVAWH
D$pfD
fF9<@u
fF9<Bu
fF9<@u
fD9<zu
D8|$Xt
fF9<Bu
fF9<Bu
fF9<@u
fD9<zu
CD$`H
A_A^_
@USVWAVH
`A^_^[]
D$8@8
D$8@8
f9<Bu
(D$ f
|$ UATAUAVAWH
A_A^A]A\]
)L$PH
)L$PH
piYZX
@USVWH
@USVWATAUAVAWH
D$pE3
A_A^A]A\_^[]
D$(E3
@ !H0H
@8!HHH
@P!H`f
\$ UVWH
xs@8u
|$ UATAUAVAWH
A_A^A]A\]
L$0E3
D$`E3
L$`H3
L$pH3
|$ UATAUAVAWH
"HcE0
}X;u0
D9mPt
D9+u0
D9+tK
A_A^A]A\]
|$ UAVAWH
"HcE 
A_A^]
fB9<@u
"D$@H
x AVH
L$hE3
p AWH
@SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
x ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
SVWAVAWH
\$x@2
0A_A^_^[
WATAUAVAWH
w\I;H
 A_A^A]A\_
t$ UWAVH
L$ E3
0A^_]
UAVAWH
Hu2fD9
A_A^]
UWAVH
|$ UATAUAVAWH
t=D9+t8L
t%E9(t M
tQD9*tLH
A_A^A]A\]
VWATAVAWH
fD9$Au
0A_A^A\_^
VWAVH
@SVWH
CD$0H
USVWH
USVWH
USVWH
USVWH
USVWH
USVWH
USVWH
UWATAVAWH
@A_A^A\_]
WAVAWH
A_A^_
UATAUAVAWH
uP;uH
A_A^A]A\]
UWATAVAWH
A_A^A\_]
|$ UH
\$ WH
L$XH3
\$ UVWAVAWH
A_A^_^]
f94Cu
f94Cu
t7f9Q
t1fD9Q
|6fD9Q
u)fD9Q
t"f9Q
x AVH
UVWATAUAVAWH
fD97tYf
?/tSL
t0L9g
A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
H9Fhs
 A_A^A]A\_
WATAUAVAWH
H9Ghs
 A_A^A]A\_
qP[\=
D$HE3
L$0H;
@USVWH
H!]@H
(_^[]
@USWATAVAWH
D9uou7H
D9uot
D9uwt7
D9uwu
D9uot'L
D9uot/D8ugt)L
D9uot'L
A_A^A\_[]
@USVWAVH
L9u8u
@A^_^[]
\$ UVWH
H9uwu"
@8ugu
9uotRH
@8uot
t$ WH
UVWAVAWH
@8u0t
@A_A^_^]
UWAVH
\$ E3
USVWATAVAWH
PA_A^A\_^[]
UVWAVAWH
PA_A^_^]
USVWATAVAWH
PA_A^A\_^[]
9D$Pt
UVWATAUAVAWH
D9e@t
D9eXt4H
nD9e@tDH
A_A^A]A\_^]
UWAVH
UWAVH
UVWAVAWH
A_A^_^]
@USVWAVAWH
8A_A^_^[]
@USVWAVAWH
8A_A^_^[]
@USVWAVAWH
8A_A^_^[]
f9<Bu
L$ UVWH
fA9<Hu
f9<Ju
fA9<Au
H!C(H
t$ WAVAWH
I9>t$H
0A_A^_
SUWAVAWH
H!X D
D$ E3
0A_A^_][
t$ WATAUAVAWH
|Ff9Q
 A_A^A]A\_
(L9l$Xu
L$8H3
x AVH
WATAUAVAWH
D8l$`A
l$aD8l$d
D$cD9l$tt
D9l$l
D;t$ls
D8+uAA
D9l$pv7L
;t$pr
A_A^A]A\_
L$ UH
x ATAVAWH
0A_A^A\
VWATAVAWH
 A_A^A\_^
x ATAVAWH
A_A^A\
UWAVH
PA^_]
p WAVAWH
fD94Yu
0A_A^_
VWAVH
0A^_^
x UATAUAVAWH
A_A^A]A\]
UWAVH
PA^_]
q8V~{/q
@USWH
x AVH
UVWATAUAVAWH
D9m@t
D9m@t
D9m@t
D$ E3
D$ E3
A_A^A]A\_^]
@USWAVH
A^_[]
@USWH
q8V~{/q
@USWH
H;YPr
H;_Pr
H;_Pr
UVWAVAWH
A_A^_^]
UWATAVAWH
xBL9eHt<A
_HD8e@t
D9#t(
E9&u$D9#u"H
cD9#v+L
E9&v+L
A_A^A\_]
9.tkf
9+teL
t$ UWATAVAWH
A_A^A\_]
D$@H;
q8V~{/q
@USVWATAVAWH
PA_A^A\_^[]
CT$(H
L$HH3
@USVWAVAWH
A_A^_^[]
WATAUAVAWH
LD9&v9H
A_A^A]A\_
@USVWATAUAVAWH
D9egt8H
E9'uQH
fD9 u%D8
D9egu)E3
fD9$Au
D9egt$L9e
D9egt$L9e
A_A^A]A\_^[]
x UAVAWH
fD9<~u
A_A^]
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
9uPt/H
9uPtBH
A_A^A]A\_^]
@USVWAVAWH
hA_A^_^[]
D$@H;
|$ ATAVAWH
D9d$0
D9d$0
A_A^A\
8\$PtRH
q8V~{/q
@USVWATAUAVAWH
l$ E3
D9(vVH;
l$ E3
HA_A^A]A\_^[]
UVWAVAWH
|$ E3
PA_A^_^]
|$ UH
x AVH
WAVAWH
 A_A^_
@SUVWH
D$0L;
u%H!\$8H
WATAUAVAWH
H9/sDH
 A_A^A]A\_
x AVH
uPH9i
H9YhvbH;^
H;_hr
x UATAUAVAWH
D8d$0
A_A^A]A\]
q8V~{/q
H9_hvGH;_hr
H;_hr
UVWATAUAVAWH
A_A^A]A\_^]
l$HE3
D9l$8
l$hE3
D9l$Xt6H
D9l$pt6H
UWAVH
pbTT$
(D$ f
t$ UH
q8V~{/q
UAVAWH
@A_A^]
D$`E3
@USVWATAUAVAWH
l$ E3
D8l$@
A_A^A]A\_^[]
UATAWH
|$ E3
A_A\]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
f9,Cu
UVWAVAWH
@A_A^_^]
@USVWAVAWH
(D$Pf
:\tIA
A_A^_^[]
D$@H9
q8V~{/q
L$ UH
UWAVH
PA^_]
q@Q4K
VWATAVAWH
0A_A^A\_^
UVWATAUAVAWH
H9wHu-A
I94$u
H9wXu
0A_A^A]A\_^]
t$ WAVAWH
@A_A^_
D$ E3
x ATAUAVH
t+H;_
EHH;p
t4H;_
 A^A]A\
WAVAWH
FXH;X
FXH;X
A_A^_
UVWAVAWH
A_A^_^]
UATAUAVAWH
0A_A^A]A\]
q@Q4K
t$ WAVAWH
H9_Hu
H9_Pu
GPH;p
GPH;p
GHH;p
GHH;p
QH9_Hu
GHH;p
GHH;p
0A_A^_
t$ WAVAWH
@A_A^_
WATAUAVAWH
A_A^A]A\_
p@Q4K
|$ AVH
|$ AVH
9_(u#H
GHH;p
GHH;p
GPH;p
GPH;p
WAVAWH
 A_A^_
@USVWAUAVAWH
t$ E3
A_A^A]_^[]
UATAUAVAWH
A_A^A]A\]
x AVH
@USVWAVAWH
D$ E3
A_A^_^[]
x AVH
@USVWAVH
pA^_^[]
UWAVH
|$ UATAUAVAWH
A_A^A]A\]
UWAVH
H UATAUAVAWH
A_A^A]A\]
@USVWATAVAWH
PA_A^A\_^[]
WAVAWH
 A_A^_
L$ UH
L$@H3
L$@H3
q@Q4K
k VWATAVAWH
H;{ r
@`H;{ r
K0H;{ r
@`H;{ r
L$XH3
A_A^A\_^
k VWAUAVAWH
L$HH3
A_A^A]_^
H9y v
H;{ r
q@Q4K
UATAUAVAWH
}PD;u0
A_A^A]A\]
L$ UH
q@Q4K
fA9,@u
fA9,xu
H9k8H
H9k0L
H9k8H
EC8H9k0H
D$`E3
L$`H3
q@Q4K
pSX0@
p@Q4K
q@Q4K
L$hH3
L$@H3
UVWAVAWH
fD9<Fu
fD9|M
D$PE3
D$0E3
pA_A^_^]
q@Q4K
UVWATAUAVAWH
pjSt=
A_A^A]A\_^]
|$ UH
t$ UWAVH
vaH;Z
@USVWAWH
D$ E3
0A__^[]
@8x u
8A t*H
8A t*H
x AVH
fD9tE
9T$ v
|$ AVH
D$ E3
D9t$`
UVWAVAWH
T$@E3
fD9<Hu
(L$@f
fD9<xu
(L$@f
A_A^_^]
q8V~{/q
|$ AWH
UWATAVAWH
D8` t
A_A^A\_]
x ATAVAWH
A_A^A\
t$ UWATAVAWH
tOI;~
H;t$ps1H
A_A^A\_]
x UAVAWH
A_A^]
UWATAVAWH
H;Egu_H
D9|$@t
D9|$@t
A_A^A\_]
UVWAVAWH
A_A^_^]
q8V~{/q
t$ UWATAVAWH
D8}puJ
|$ E3
D9|$@t
D9|$@t
A_A^A\_]
UVWATAVH
A^A\_^]
q8V~{/q
@USWH
q@Q4K
H;^ sXH
H;^ r
t$ WAVAWH
 A_A^_
H;~(s\H
v;H;~(r
sSH;_
H9Y v$H;Y r
H;_ r
x ATAVAWH
@A_A^A\
UATAUAVAWH
L9l$0
D9l$@
A_A^A]A\]
p@Q4K
WAVAWH
fD9<Ou
D9;}OH
A_A^_
q@Q4K
WATAUAVAWH
0A_A^A]A\_
D$(E3
D$HE3
WAVAWH
D$TE3
@SUVWATAVAW
D$PE3
D$0H;
UVWAVAWH
@t4I;G
 A_A^_^]
WAVAWH
0A_A^_
t$xE3
t$ E3
t$ E3
UVAVH
D8ugt^
UVWATAUAVAWH
D8l$0u
D9l$4t)D
D9l$4t?H
D9l$4
D;t$4
A_A^A]A\_^]
x ATAVAWH
t#H;;r
t4H;;r
0A_A^A\
VWAVH
@A^_^
VWAVH
t[H;^
@t!I;F
 A^_^
D$8E3
L$0E3
FP9_@t
9W@u*
UAVAWH
A_A^]
|$ AVH
q@Q4K
t$ WH
H;{(s8H
@SVWATAUAVAWH
t$HE3
w0M9&
D$@L9g(
uXL9g
A_A^A]A\_^[
t$ WH
@USWH
@SVWH
H;{(s8H
H9_(v
H;_(s
@USWH
@USWH
@USWH
@USWH
@USWH
|$ UATAUAVAWH
A_A^A]A\]
@SVWATAUAVAWH
0A_A^A]A\_^[
L$@H3
D$0H;
t7f9+t2H
f9,Cu
@USVWAVH
A^_^[]
UVWATAUAVAWH
A_A^A]A\_^]
t$ UWAVH
D9sHv
D9s0v
D9s`vAH
t$ UWAVH
SUVWATAUAVAWH
|$(E3
L;`0r
8A_A^A]A\_^][
UVWATAUAVAWH
@A_A^A]A\_^]
VWAVH
@A^_^
UAVAWH
M_L9}
A_A^]
@SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
@A_A^A]A\_^[
t$PH;
t$ UWAVH
q8V~{/q
SVWATAUAVAWH
0A_A^A]A\_^[
WATAUAVAWH
t$pE3
 A_A^A]A\_
t$(H;
H;SPt
H;|$8
q8V~{/q
L$(H;
L$(I;
L$(L+
WAVAWH
 A_A^_
UVWAVAWH
PA_A^_^]
L$@H3
t$0H;
@USVWAVH
T$@E3
A^_^[]
VWATAVAWH
\$8E3
A_A^A\_^
VWAVH
 A^_^
vb'vb'v
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
D$8L;
WAVAWH
0A_A^_
L$ VWAVH
 A^_^
x ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
|$ AVH
VWATAVAWH
(D$@f
A_A^A\_^
x ATAVAWH
0A_A^A\
)t$`M
(t$`H
t$ WATAUAVAWH
 A_A^A]A\_
SVWATAUAVAWH
\$xHi
D$ Mi
0A_A^A]A\_^[
\$xI;
WAUAVH
@A^A]_
x AVH
t$ UWAVH
x AUAVAWH
 A_A^A]
WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
x AUAVAWH
 A_A^A]
VWATAVAWH
 A_A^A\_^
WAVAWH
 A_A^_
WAVAWH
 A_A^_
VWAVH
\$PI;
 A^_^
WAVAWH
\$`L+
 A_A^_
x ATAVAWH
0A_A^A\
T$(H+
D$(I+
L$hH3
T$(H+
D$(I+
L$hH3
T$(H+
D$(I+
L$hH3
t$ WH
|$ AVH
|$ AVH
\$ WH
L$pH3
@USWH
L$PH3
\$ WH
L$HH3
L$HH;C
UWATAVAWH
D8g tSH
MWD8a tPH
D8ewt
A_A^A\_]
\$ UVWH
WATAUAVAWH
L;t$Ht
f9<Hu
EHI;EPt
A_A^A]A\_
f9<Cu
D$HH+D$@H
\$8H;
q8V~{/q
WAVAWH
A_A^_
WAVAWH
0A_A^_
\$ UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
F;~ sEL
VWATAVAWH
 A_A^A\_^
rlH9K8vfH
t$ WH
u_H;{ uY
VWAVH
D;0t)
 A^_^
(D$ f
f9Kxu
|-udH
GtfD;
{||urH
WATAUAVAWH
f99t;H
 A_A^A]A\_
WAVAWH
=u!H;+u
.u(H;+u
0A_A^_
WATAUAVAWH
;u }3L
;E$}fL
A_A^A]A\_
t$ WATAUAVAWH
D;s }
A_A^A]A\_
(9Q|t
t$ WH
(D$ H
t@L;P
|$ UH
/w/t'
@SVWH
CT$0L
L$PH3
l$ VWATAUAVH
fD9(t
A^A]A\_^
@USVWAVAWH
wOI9V
A_A^_^[]
{|}t H
(D$ f
WAVAWH
 A_A^_
UVWATAUAVAWH
`A_A^A]A\_^]
VWAVH
@A^_^
D$ E3
L$pH3
L$HH3
|$ AVH
SVWATAUAVAWH
D$ Mi
0A_A^A]A\_^[
@SVWATAUAVAWH
0A_A^A]A\_^[
8A t*H
WATAUAVAWH
D$`H;
d$HM;
t$pI;
H;VPt
A_A^A]A\_
q8V~{/q
VWAVH
PA^_^
USVWATAVAWH
 A_A^A\_^[]
USVWATAVAWH
@A_A^A\_^[]
WAVAWH
 A_A^_
@USVWAVAWH
A_A^_^[]
WAVAWH
fD98t
 A_A^_
L$`H3
VWAVH
 A^_^
t$ WH
;/uAI
L$@H3
WATAUAVAWH
L$PH+
L$PH+
|$0L;
D8h tAL
L$PH+
A_A^A]A\_
|$ UH
q8V~{/q
H;\$8u
H;\$8u
L$@H3
WAVAWH
t$@I;
|$(I;
A_A^_
t$ UWATAVAWH
L;t$H
A_A^A\_]
q8V~{/q
VWAVH
F H;X
(D$0f
VWAVH
F H;X
(D$0f
q@Q4K
VWAVH
WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
L$8H;
L$8I;
L$8L+
L$8H;
L$8I;
L$8L+
\$8E3
A@A8@ t-H
\$8E3
L$8H;
L$8I;
L$8L+
8B t(H
UVWATAUAVAWH
I9T$ 
d$0I;
A_A^A]A\_^]
x ATAVAWH
I9T$ 
A_A^A\
x AVH
3333333
(t$pL
WAVAWH
 A_A^_
x AVH
WATAUAVAWH
D$8E3
A_A^A]A\_
WAVAWH
@A_A^_
3333333
t$ WATAUAVAWH
D$8E3
A_A^A]A\_
WATAUAVAWH
D$8E3
A_A^A]A\_
x ATAVAWH
L$8E3
@A_A^A\
x AVH
3333333
L#F0M
x ATAVAWH
@A_A^A\
VWAVH
0A^_^
SVWATAUAVAWH
0A_A^A]A\_^[
\$ WH
L$PH3
VWAVH
@8i t9
pBR:&
fB9,Hu
l$8H9i u+H
t&@8l$8u
@A^_^
x AVH
pBR:&
fF94Hu
L9p A
\$ UVWH
D$0H;G
8]Pt:8]
UVWATAUAVAWH
sA8v tPI
A_A^A]A\_^]
\$@L;_Hu
UVWATAUAVAWH
D8|$XL
D8p tMD8t$Xt
D8t$Xt
D8t$X
A_A^A]A\_^]
@USVWAUAVAWH
A_A^A]_^[]
@USVWAVH
\$0I;^
A^_^[]
\$@L;_Hu
h UAVAWH
pBR:&
L$ E3
A_A^]
qB^Xh
qB^Xh
x ATAVAWH
pBR:&
0A_A^A\
UVWAVAWH
L$@H3
PA_A^_^]
q)P47
pBR:&
q)P47
L$ E3
VWAVH
pBR:&
0A^_^
x ATAVAWH
I9T$ 
@A_A^A\
fB9<Bu
VWATAVAWH
D$xE3
fF9<Fu
fF9<Fu
fF9<Bu
PA_A^A\_^
pBR:&
L$ E3
pBR:&
L$ E3
t$ UWAVH
UVWAVAWH
A_A^_^]
VWAVH
 A^_^
3333333
UUUUUUU
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
t$ WATAUAVAWH
M#u0M
 A_A^A]A\_
t$ WATAUAVAWH
M#u0M
 A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
L$8H;
L$8I;
L$8L+
L$8H;
L$8I;
L$8L+
\$8E3
\$8E3
\$8E3
L$8H;
L$8I;
L$8L+
\$8E3
L$8H;
L$8I;
L$8L+
\$8E3
L$8H;
L$8I;
L$8L+
L$8H;
L$8I;
L$8L+
L$8H;
L$8I;
L$8L+
L$8H;
L$8I;
L$8L+
W H+W
W H+W
USVWATAVAWH
PA_A^A\_^[]
H!|$8H!|$0H!|$(H!|$ 3
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
L$0H;A s
A_A^_
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
D$xHi
D$ Mi
|$xI;
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
D$0Li
|$HM;
PA_A^A]A\_^[
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
WAVAWH
@A_A^_
WAVAWH
@A_A^_
L#F0M
L#F0M
T$P@8
T$X@8
[8A8X8t!A
[8A8X8t!A
@USVWAVH
\$0A8X t)H
A^_^[]
ATAVAWH
L$hH3
A_A^A\
UWATAVAWH
fD9$Bu
A_A^A\_]
VWATAUAVH
D8k t%H
D8l$xth@
D8h teD8
A^A]A\_^
WATAUAVAWH
@8p tB
E8>tKH
A_A^A]A\_
WATAUAVAWH
O D8h t@
D8.tXI
CHE8h8u
A_A^A]A\_
VWATAVAWH
A_A^A\_^
t$ WAVAWH
CD$8H
L$XH3
A_A^_
VWAVH
\$`H;_Ht`H
@A^_^
t$ UWAUAVAWH
A_A^A]_]
@SVWATAUAVAWH
E8h t?H
D8k t
D8k taH
r.D8k t#H
D8l$X
D8h tMD8l$Xt
D8l$Xt
A_A^A]A\_^[
\$ UVWH
VWAVH
tYD8t$`t
D8t$`t
fB94Gu
L$`H3
L$XH3
fB9,Bu
L$PH3
\$ WH
L$XH3
L$XH3
@USVWAVH
H9t$ 
@8p tH@8t$Ht
@8t$Ht
t7@8u
A^_^[]
H;GHH
9\$xu
L$PH3
UWATAVAWH
A_A^A\_]
@USVWAVH
A^_^[]
L$`H3
L$ E3
@USVWATAVAWH
A_A^A\_^[]
@SUVWH
L9G(A
\$ UVWH
L9G(A
@SVWH
L9G(A
O`H;Oht
@USVWAVH
A^_^[]
@SUVWH
L9G(A
@USVWATAVAWH
L!d$8L!d$0L!d$(L!d$ 3
A_A^A\_^[]
@USVWATAUAVAWH
!t$03
A_A^A]A\_^[]
VWAVH
t$ E3
H;Gpu
L$ E3
VWAVH
\$ UVWH
UWAVH
@SVWAVH
A^_^[
D$8E3
Cc}H+
Cc}H+
q@^PZ
@SVWH
@SVWATAUAVAWH
0A_A^A]A\_^[
q@Q4K
x AVH
VWAVH
0A^_^
@SVWAVAWH
L$pH3
A_A^_^[
@SVWATAUAVAWH
L$xH3
A_A^A]A\_^[
@USVWAUAVAWH
A_A^A]_^[]
@SVWAVH
L$pH3
A^_^[
WAVAWH
 A_A^_
VWATAVAWH
0A_A^A\_^
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
@SVWATAUAVAWH
0A_A^A]A\_^[
p AWH
q@Q4K
CXH9h
K0H9i
CXH9h
K0H9i
CXH9h
K0H9i
CXH9h
K0H9i
CXH9h
KxH9i
S0H9j
CXH9h
KxH9i
S0H9j
K0H9i
K0H9i
WAVAWH
A_A^_
WAVAWH
A_A^_
L$PH3
L$pH3
@SVWH
@USVWATAVAWH
A_A^A\_^[]
CT$`L
@SVWAVH
A^_^[
L$XH3
D$ H9C
CT$`H
@SUVWAVH
fD94Au
t$ E3
L$`H3
pA^_^][
L$XH3
UWATAVAWH
A_A^A\_]
(D$ f
fA9<Hu
f9<Bu
UWAVH
fA94Hu
f94Ju
fA94Cu
x UAVAWH
fE94Hu
fE94Ku
fE94Ju
fD94Cu
A_A^]
x UATAUAVAWH
{@A8w
A8v`t
A_A^A]A\]
x UATAUAVAWH
} A8w
A8v`t
A_A^A]A\]
@8|$Hu
@8|$Hu
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
x ATAVAWH
A_A^A\
D$TE3
@SUVWATAVAW
A_A^A\_^][
\$ UVW
D$PE3
D$TE3
\$ WH
L$PH3
L$PH3
L$PH3
L$PH3
L$PH3
L$PH3
@8qHtD@8q@u
(t$`L
WAVAWH
3333333
(t$`I
A_A^_
(t$`I
` UAVAWH
(t$`I
A_A^]
x AVH
(t$pL
(t$`L
WAVAWH
(t$`I
A_A^_
WAVAWH
(t$`I
A_A^_
x ATAVAWH
A_A^A\
WAVAWH
(t$`I
A_A^_
(t$`I
` UAVAWH
(t$`I
A_A^]
` UAVAWH
(t$`I
A_A^]
x AVH
(t$pL
x AVH
(t$pL
x AVH
(t$pL
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
D$ Hi
0A_A^A]A\_^[
WAVAWH
 A_A^_
SVWATAUAVAWH
D$pMi
0A_A^A]A\_^[
VWATAVAWH
A_A^A\_^
@SUVWAVH
A^_^][
\$ UVWH
@USVWATAUAVAWH
L$ H+
w=rNH
L$0I+
A_A^A]A\_^[]
WATAUAVAWH
0A_A^A]A\_
\$ UVWH
x AVH
x ATH
H+L$(H
D$@L9H s
x AVH
D$0H9H s
VWAVH
)t$`H
(t$`L
VWAVH
)t$`H
(t$`L
8Bpt,H
x UATAUAVAWH
D$8D8h
D$8E8h
D$PD8h
Eu H;u
d$4@2
H;C(tJL
H;D$`
D$PE3
D$PD8h
EM H;M
v D8h
A_A^A]A\]
UWAVH
@USVWATAUAVAWH
L$h@8u
D$0H;D$8t
I;E u
L$(@8u
t$X@8u
D$0I+
(D$Pf
A_A^A]A\_^[]
x UATAUAVAWH
D$`E8
D$`H9D$Pu!H
E8}Pt
E8}`t
:D$hu)H
D$`H9D$Pu
I;MHugH
D8|$Xt
H9|$P
D8xxt<H
H;D$@
H;D$@
C H9D$p
L$0H9
H;D$@
H;D$@t
A_A^A]A\]
t$ WH
t$ UWAVH
D8Z t
D8Z t
UVWAVAWH
A_A^_^]
@USVWATAUAVAWH
F8d8 
D$0H;
(D$@f
A_A^A]A\_^[]
x UATAUAVAWH
\$0E3
E8I9G(t
E8w8u
|$HH;|$pu'A
D$PH;D$`u%A
\$0E2
\$HD8s
D$0D8p
H;D$8uJ
A_A^A]A\]
x UATAUAVAWH
D8l$8t
D8l$H
D$`D8h
x0D8n
D$HD8l$8tL
D8oPt
L90t?I
u,D8oP
H;G tbI
D8oPt
D$PE2
EpD8m`t
D8h(tJH
D8oPtBH;GH
(D8oPt6H;_H
D8oPt*
seD8oPt
H;OHu
D8n(u
D8n(u
A_A^A]A\]
UVWAVAWH
A_A^_^]
\$ WH
L$`H3
L$@H3
UWAVH
D$ E3
UWAVH
PA^_]
UUUUUUU
WAVAWH
(t$`I
A_A^_
x AVH
3333333
(t$pL
x AVH
3333333
(t$pL
WAVAWH
UUUUUUU
(t$`I
A_A^_
VWATAVAWH
(t$`I
A_A^A\_^
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
WAVAWH
A_A^_
UVWATAUAVAWH
I;G8t*
E8l$ 
A_A^A]A\_^]
\$ UVWATAUAVAWH
@s F;
0s F;
D8d$!t,H
D9d$$
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
\$ UVWATAUAVAWH
 s#D;
 s#D;
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
VAVAWH
L$HE3
A_A^^
UVWATAUAVAWH
N(I;N0t
D8o ttH
A_A^A]A\_^]
UVWATAUAVAWH
L$xE3
D9l$$
D9l$ 
D;t$$
A_A^A]A\_^]
p WvA>
UVWATAUAVAWH
t$ E2
|$(;}
p WvA>
A_A^A]A\_^]
|$ SRD1t
D$$H;
|$ UATAUAVAWH
M8uwL
A_A^A]A\]
@SVWATAUAVAWH
fG9,Fu
fF9,Gu
fG9,Gu
fE9,\u
l$ E3
A_A^A]A\_^[
x AVH
q@Q4K
|$ UATAWH
D$ E3
A_A\]
t$ UH
L$ E3
|$ UATAUAVAWH
l$ E3
l$ E3
E8n@thE
E8nAt*A
D$(E3
A8F@u|8E
twA8FAt8A
A8FBt3I
L$(E3
E8n@t<E
L$ E3
A_A^A]A\]
x UAVAWH
A_A^]
x AVH
x AVH
|$ UH
H;D$Xs$H
@USVWH
h_^[]
t$ WH
|$ UAVAWH
L$ E3
A_A^]
L$pH3
q@Q4K
WATAVH
A^A\_
WATAUAVAWH
A_A^A]A\_
x AVH
UVWATAUAVAWH
D9.u(H
D9e@u
PA_A^A]A\_^]
|$ UH
F H;x
\$ UVWH
G H;X
O H;Y
T$HE3
WATAVH
@A^A\_
x UATAUAVAWH
D$pE3
H+\$x
H;\$ps
H;\$p
A_A^A]A\]
x ATAVAWH
fD9#t
 A_A^A\
WAVAWH
f9,^u
 A_A^_
x AVH
t$ WH
@USWH
UWAVH
 A^_]
x AVH
D$0u 
t<Lc@
L$`H3
x AVH
x ATAVAWH
fD9$xu
 A_A^A\
t$ WH
x AVH
D$(L+
x AVH
{ AVH
UWAVH
UWAVH
0A^_]
UATAVH
0A^A\]
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
t$ WH
T$0E3
UWAVH
 A^_]
VWAVH
0A^_^
UAVAWH
@A_A^]
WAVAWH
 A_A^_
{ AVH
UWAVH
` UAVAWH
@A_A^]
VWAVH
0A^_^
UWAVH
@A^_]
UWAVH
USVWAVH
A^_^[]
UWAVH
x AVH
fD94Zu
trfD92tlH
UWATAVAWH
fD9!u
fD9$Au
fD9"u
fE9 u
fE9$@u
fD9!u
fD9$Cu
fE9$Ou
fD9$~u
A_A^A\_]
L$(E3
D$ E3
UVWATAUAVAWH
fA9\M
fD9<~u
`A_A^A]A\_^]
t$P9T$0A
UWAVH
 A^_]
WAVAWH
 A_A^_
{ AVH
UAVAWH
A_A^]
\$ UVW
D$pE3
x AVH
t$ WH
L$`H3
L$TE3
H9{8v
H;{8r
D$`Hcy
L$`H3
\$ WH
WAVAWH
A_A^_
L$8H3
L$`H3
L$ WH
L$HH;
@USVWAVH
H+CXH
A^_^[]
H WATAUAVAWH
A_A^A]A\_
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
D$`Hcy
L$`H3
L$ SVWH
=;\$8t5
Y;\$8tQ
3;\$8t+
@USWH
@USWH
@USWH
t$ WH
` UAVAWH
!D$x!D$p!D$tL
A_A^]
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
l$ VWATAVAWH
A_A^A\_^
f9,Nu
f9,Pu
VWATAVAWH
@A_A^A\_^
t$ WH
f9,Hu
f9,Vu
VWAVH
 A^_^
UVWATAUAVAWH
l$PE3
H;\$Ps
A_A^A]A\_^]
` UAVAWH
@A_A^]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
L$@H3
VWAVH
 A^_^
|$ UATAUAVAWH
fD9,qu
fD9,_u
0A_A^A]A\]
UAVAWH
@A_A^]
WAVAWH
0A_A^_
fD9|]
UWAVH
 A^_]
L$ SH
UWATAVAWH
H!]0L
A_A^A\_]
D$x0u
D$H0u
|$ UH
UAVAWH
@A_A^]
UWAVH
0A^_]
x AVH
UVWATAVH
A^A\_^]
VWAVH
UVWATAUAVAWH
D9>v[H
pA_A^A]A\_^]
L$8H3
@USVWATAUAVAWH
A_A^A]A\_^[]
L$pH3
UVWATAUAVAWH
A_A^A]A\_^]
USVWATAUAVAWH
mwt3H
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
@8<.u
T$ E3
|$ E3
D$`E3
L$`H3
UATAUAVAWH
fE9$Ju
fE9$Ku
fD9$Ku
fD9$Ou
fD9$Nu
fE9$Nu
fE9$Gu
A_A^A]A\]
L$ UH
@USVWH
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
x AVH
fD94Zu
trfD92tlH
` UAVAWH
A_A^]
x AVH
x AVH
t$ WH
t$ WH
t$ WH
UVWAVAWH
@A_A^_^]
x AVH
VWAVH
 A^_^
|$ UAVAWH
0A_A^]
|$ UAVAWH
0A_A^]
` UAVAWH
@A_A^]
VWAVH
@A^_^
UWAVH
PA^_]
@USVWAVH
0A^_^[]
UWAVH
 A^_]
UWAVH
 A^_]
UVWATAVH
PA^A\_^]
UATAVH
A^A\]
` UAVAWH
@A_A^]
UWAVH
` UAVAWH
@A_A^]
VWAVH
@A^_^
UWAVH
PA^_]
@USVWAVH
0A^_^[]
UWAVH
 A^_]
x AVH
{ AVH
UWAVH
UWAVH
@USVWAVAWH
A_A^_^[]
@USVWAVAWH
A_A^_^[]
UWAVH
 A^_]
UWAVH
 A^_]
x AVH
{ AVH
UWAVH
 A^_]
UWAVH
x AVH
VWAVH
@A^_^
L+C0L;
tOH;{
UVWAVAWH
PA_A^_^]
C H;>r
@USWH
@USVWH
_^[]H
@USWH
|$ UATAUAVAWH
D8q8uyH
D8s8u_H
pRU>'
A_A^A]A\]
UWATAVAWH
}Pt}H
 A_A^A\_]
D$ SRD1H
t$ UWAVH
L$0E3
L$@E3
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@USWH
@USWH
@USWH
@USWH
@USWH
UVWAVAWH
@A_A^_^]
UATAUAVAWH
A_A^A]A\]
|$ UAVAWH
0A_A^]
UVWAVAWH
A_A^_^]
t$ WH
@SVWH
@SVWH
@USWH
@USWH
VWAVH
H;\$Xs7M
 A^_^
@SVWH
UWAWH
E8H!}8H
 @8}(t?L
@A__]
VWAVH
0A^_^
UWAVH
UWAVH
VWAVH
@A^_^
UWAVH
PA^_]
x AVH
{ AVH
VWAVH
0A^_^
UWAVH
@A^_]
VWAVH
@A^_^
UWAVH
PA^_]
UVWATAVH
`A^A\_^]
UATAVH
A^A\]
UVWATAVH
`A^A\_^]
UATAVH
A^A\]
` UAVAWH
@A_A^]
UWAVH
UVWAVAWH
A_A^_^]
@USVWAVH
D$0E3
A^_^[]
f9,Au
WATAUAVAWH
H9T$x
 A_A^A]A\_
tZf97tUH
fA9<@u
|$ UH
@USVWAVH
`A^_^[]
D$ E3
@USVWH
D$ E3
HcK(A
GNHcK(A
x ATAVAWH
D#CtA
C`#St
D#CtD
 A_A^A\
WATAUAVAWH
C`#St
D#CtA
 A_A^A]A\_
x AVH
WATAUAVAWH
F(D9h,u
D#GtD
 A_A^A]A\_
G()p(H
\$ UVWATAUAVAWD
L$PI#
\$XD;
A_A^A]A\_^]
ATAVAWH
 A_A^A\
WATAUAVAWH
~VHcS(A
HcK(H
~VHcS(A
HcK(H
 A_A^A]A\_
~\IcR(A
IcJ(H
~1LcA(H
HcI(H
HcQ(H
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
T$xHc
A_A^A]A\_^][
McC(A
IcK(f
l$ VWATAUAVAW
\$8Lc
Hc\$@E
l$PA_A^A]A\_^
L$ H3
r}6Ic
|$(A^
x ATAVAWH
 A_A^A\
x ATAUAVAWD
~ZIcQ(A
IcI(H
IcQ(fA
IcI(H
~XIcQ(A
IcI(H
~]IcQ(A
IcI(H
~ZIcQ(A
IcI(H
~TIcQ(A
IcI(H
~ZIcQ(A
IcI(H
~WIcQ(A
IcI(H
|$@A_A^A]A\
USVWATAUAVAWH
]PL;iPs
L;oHu$H
O@H9OPt
MHL;oHu!H
]PL;oPs
oXL9oPt4A
xA_A^A]A\_^[]
x ATAVAWH
~@H9FXu
 A_A^A\
UVWATAUAVAWH
L$ Ic
D$HA;
T$@A*
A_A^A]A\_^]
WAVAWH
D$@E3
A_A^_
WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
\$`L;APs
\$`E3
G@H9GP
\$`L;GPs
\$`L;
G@H9GPt
\$`L;
GXL9GPt
0A_A^A]A\_
SUVWATAUAVAWH
l$pL;OPs
G,A_A^A]A\_^][
x AVH
K H;O
W H;S
G L;C
x AVH
L$ WH
L$ WH
L$ WH
t$ WH
t$ WH
p WAVAWH
 A_A^_
|$ UAVAWH
pBR:&
p(X|S
A_A^]
VWAVH
0A^_^
VWAVH
0A^_^
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
t$ WH
UWAVH
@A^_]
UWATAVAWH
D$ tk
A_A^A\_]
t$ WH
t$ WH
t$ WH
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWAVAWH
H!}@H
vHD+p
H9^0tGH
(A_A^_^[]
H;Q0s
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
p AWH
@SVWH
@SVWH
qB^Xh
t$ WAVAWH
 A_A^_
]8H9^@t5H
]8H9^@t5H
UVWAVAWH
MHH9O(t*H
0A_A^_^]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
qjSt=
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
pjSt=
A(A;@
A(A;@
@SVWH
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
H;S(v
q)P47
pBR:&
p(X|S
L$XH3
q)P47
pBR:&
p(X|S
L$XH3
L$PH3
VWAVH
L$HE3
 A^_^
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
L$0E3
D$hH;
D$hH;
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
qC\r4
A(A;@
\$ UVWH
\$ UVWH
\$ UVWH
t$ WH
L$ WH
L$ WH
L$ WH
t$ WH
t$ WH
pBR:&
L$PH3
L$@9L$ t
UVWAUAVH
pA^A]_^]
UVWAUAVH
pz\:(
pA^A]_^]
qKPV!
t$ WH
qKPV!
@USWATAUAVAWH
A_A^A]A\_[]
t$ WH
t$ WH
t$ WH
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWAVAWH
H!}@H
vHD+p
H9^0tGH
(A_A^_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
H;Q0s
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
WAVAWH
 A_A^_
WAVAWH
t99K u
 A_A^_
@SVWH
@SVWH
qB^Xh
UVWAVAWH
 A_A^_^]
t$ WAVAWH
0A_A^_
]8H9^@t5H
]8H9^@t5H
UVWATAUAVAWH
PA_A^A]A\_^]
UWATAVAWH
A_A^A\_]
USVWATAVAWH
`A_A^A\_^[]
qjSt=
WAVAWH
tO9_HtJH
 A_A^_
VWAVH
 A^_^
VWAVH
0A^_^
t$ WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
t$ WATAUAVAWH
0A_A^A]A\_
@SVWH
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
H;S(v
q)P47
pBR:&
L$XH3
WAVAWH
0A_A^_
VWAVH
L$HE3
 A^_^
USVWAUAVAWH
H!]PL
0A_A^A]_^[]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
)t$PL
(t$PH
`A_A^_^]
L$0E3
VWATAVAWH
A_A^A\_^
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
qZ\tW
\$ UVWH
\$ UVWH
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
L$8H;
L$8I;
L$8L+
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
L$8H;
L$8I;
L$8L+
\$8E3
\$8E3
L$8H;
L$8I;
L$8L+
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
L$8H;
L$8I;
L$8L+
\$8E3
\$ VWAVH
PA^_^
\$ VWAVH
PA^_^
\$ VWAVH
PA^_^
VWATAVAWH
D$0t,M
A_A^A\_^
9)v4H
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
C H!C(H
VWAVH
0A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
@A^_^
\$ UVWAVAWH
A_A^_^]
@USVWATAVAWH
D8d$0
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
\$ UVWAVAWH
H!D$(H!D$ L
A_A^_^]
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
VWAVH
0A^_^
9O4t;
WAVAWH
 A_A^_
VWATAVAWH
A_A^A\_^
p WAVAWH
 A_A^_
x AVH
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WAVAWH
 A_A^_
x AVH
x ATH
H+L$(H
UVWAVAWH
PA_A^_^]
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
x AVH
{ ATAVAWH
fD9#t
0A_A^A\
VWAVH
 A^_^
{ AVH
9*v4H
pHT^I
t$ WH
t$ UWATAVAWH
pz\:(
A_A^A\_]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
\$ VWAVH
UATAUAVAWH
M9.ubI
pjSt=
pz\:(
A_A^A]A\]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
t$ WAVAWH
D92u&H
D92u&H
D8t8@thD8
uVHc^$H
D8t9@tYHc^
0A_A^_
UVWATAUAVAWH
D8l8@
D8l8@u
D8l8@u
A_A^A]A\_^]
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
qKPV!
qKPV!
qKPV!
SUVWAVH
0A^_^][
VWAVH
f9,Au
fB9,Ju
0A^_^
t$ WH
UVWAVAWH
D8~Xu
D8~htiH
D8~xteH
A_A^_^]
t$ WATAUAVAWH
t$8L;
D8d8@A
D8d8@t
A_A^A]A\_
t$ WATAUAVAWH
\$pI;
A_A^A]A\_
VWAVH
D8wxt
VWATAVAWH
HcF D8d8H
A_A^A\_^
t$ WATAVH
d$0D8
A^A\_
t$ WATAUAVAWH
\$8I;
D8g|t
A_A^A]A\_
VWAWH
SUVWH
8_^][
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
q[Z~v
@SUVWAVH
D$PH!|$@H
`A^_^][
t$ UWAWH
UVWAVAWH
@A_A^_^]
L$PH3
@SUVWAVH
D$PH!|$@H
`A^_^][
SUVWH
8_^][
SUVWH
8_^][
@SUVWAVH
D$PH!|$@H
`A^_^][
@USVWAVAWH
A_A^_^[]
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
h VWAVH
xI;o(r
 A^_^
t$ WH
D#D$0D
3D$8%
3D$8%x
@USWH
0Ic@ I
HcG H
D$ E3
@USWH
UVWATAUAVAWH
A9_0t0H
D$xA;
tpE9w0t9A
0A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
VWAVH
L$`H3
pA^_^
L$PE3
L$`E3
t09q u
L$XH3
UWAVH
@SVWH
\$ UH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@USVWAVH
H!}8H
E8H!}@H
H!}8H
 A^_^[]
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
VWAVH
;t$@t
 A^_^
l$ VWAVH
H+D$ u
H+D$(H
L$0H3
@A^_^
UVWATAUAVAWH
9s(v'H
0A_A^A]A\_^]
x AVH
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
UWAVH
UVWATAUAVAWH
PA_A^A]A\_^]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
w(;w(v
PA^_]
8\$`uI
8\$`t
L$`H;
L$`H3
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
qqTt>
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
VWAUAVAWH
;l$Pt
 A_A^A]_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
qqTt>
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
qqTt>
VWAVH
0A^_^
)t$0I
(t$0H
)t$0I
(t$0H
)t$0I
(t$0H
)t$0I
(t$0H
t$ WH
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
H;S(v
x AVH
H;S(v
D$ E3
\$ UVWATAUAVAWH
pAXxi
A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
q)P47
@USVWATAUAVH
pBR:&
A^A]A\_^[]
q)P47
UVWAVAWH
pBR:&
pA_A^_^]
x AVH
@SVWH
pBR:&
L$`H3
x AVH
pHW>8
p(Q6k7(
@SUVWAVH
L$`H3
pA^_^][
x AVH
t$ WH
UVWAVAWH
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
0A_A^_^]
WAVAWH
u,!]0H
@A_A^_
L$ WH
9\$@L
@USVWAVAWH
XA_A^_^[]
UWATAVAWH
0A_A^A\_]
L$pH3
UVWAVAWH
D;v(r
@A_A^_^]
uRH9K
H+D$0u
H+D$8H
t$ UWAVH
0A^_]
T$ E3
qrRPf/
qcU24.0
pcU24.0
qBZVZ
U^='Y
L$PH3
VWAVH
0A^_^
U^='Y
UVWAVAWH
D8|$@t
pBR:&
D8|$@
A_A^_^]
l$ VWAVH
L$XH3
qcXV/
qrTzz
L$PH3
q[]T?
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
A,9A(
BX9A4t
UVWATAUAVAWH
pz\:(
}PD8u
pA_A^A]A\_^]
UVWATAUAVAWH
pA_A^A]A\_^]
t$ UWATAVAWH
fE9<~u
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
WAVAWH
pC^4_
@A_A^_
qB^Xh
qC^4_
UVWAVAWH
`A_A^_^]
\$ UVWATAUAVAWH
pBR:&
A_A^A]A\_^]
WAVAWH
0A_A^_
q:_:C
9\$Ht
9\$Ht
9\$Ht
x AVH
x AVH
t<H!x
VWAVH
 A^_^
x AVH
x AVH
L$ E3
VWAVH
0A^_^
D$(E3
D$ E3
D$(E3
D$ E3
D$ E3
VWAUAVAWH
0A_A^A]_^
WAVAWH
H !X M
0A_A^_
D$ E3
t$ WH
D$@E3
D$ E3
x AVH
x AVH
@SVWH
L$hH3
@SVWH
L$HH3
L$PH3
f94Su
<@\t/
f94Cu
f94Su
UVWAVAWH
D$ E3
pA_A^_^]
UAVAWH
@A_A^]
UWATAVAWH
|$ E3
uXI96t
A_A^A\_]
L$ UH
UWAWH
f94Qu
E0f;0ta
 A__]
p AWH
@SUVWATAUAVAWH
A_A^A]A\_^][
WATAUAVAWH
 A_A^A]A\_
t$ WH
WAVAWH
 A_A^_
@SVWH
\$ WH
L$0H3
gfffffffI
gfffA
L$PH3
\$ E3
8\$ u
L$PH3
UVWAVAWH
0A_A^_^]
WATAWH
\$8D8d$pu
D8d$xt
D8d$pt
D8d$xt
@A_A\_
x ATAVAWH
fE9$Pu
@A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
$0< u
L$XH3
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
L$hH3
pA_A^A]A\_^]
@SUVWAVAWH
A_A^_^][
|$XH;{
WAVAWH
0A_A^_
@SUVWAVAWH
L$0I;N
A_A^_^][
t$ UWAVH
fD94Au
0A^_]
f9<Au
f9<Fu
f9<Fu
D$@E3
WATAUAVAWH
 A_A^A]A\_
p AWH
x UATAUAVAWH
sUI;_
t5I;_
L$PI9
D$PI9
D$HI9
A_A^A]A\]
UWAVH
D$ E3
L9v u
L9v(u
L9v0u
L9v8u1
|$ UH
x UAVAWH
A_A^]
|$ UH
L$HH3
L$HH3
qiYVH
x UAVAWH
A_A^]
USVWATAUAVAWH
A_A^A]A\_^[]
q`W|1/
UWAVH
pbTT$
qbTT$
UWAVH
UWAVH
qIRtK
x AVH
Z2b/8
VWAVH
 A^_^
WAVAWH
 A_A^_
VWAVH
 A^_^
VWAVH
 A^_^
qsQ~K6
VWAVH
 A^_^
|$ UAVAWH
A_A^]
p WAVAWH
0A_A^_
x AVH
x AVH
x UAVAWH
YD8}gu
A_A^]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
p AWH
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
x AVH
UVWATAUAVAWH
A_A^A]A\_^]
qSY:w
UWAVH
UWAVH
{ AVH
x AVH
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
x AVH
UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
A_A^_^]
UWAVH
@USVWATAVAWH
D8|$0
pjSt=
pjSt=
pjSt=
pjSt=
pjSt=
A_A^A\_^[]
fB9,Fu
UATAUAVAWH
t$ E3
\$ E3
A_A^A]A\]
` UAVAWH
D8d$@t
D8d$@tS
fD9$Cu
A_A^]
@USVWATAUAVAWH
D9|$@
f9<Au
D9t$@
9|$@t
A_A^A]A\_^[]
VWAVH
t$ E3
0A^_^
|$ UAVAWH
@A_A^]
UVWATAUAVAWH
A_A^A]A\_^]
UWAVH
PA^_]
t$ UWAWH
f94Qu
 A__]
H!\$83
H!\$0H!\$(H!\$ 3
C !C0H
C8!CHH
CP!C`f
\$X!D$PL
` UAVAWH
fD9$Wu
fD9$Gu
fD9$^u
A_A^]
|$ UATAUAVAWH
fD9,Vu
xID9m0u
A_A^A]A\]
t$ WH
L$0H3
L$@H3
t$ UWATAUAWH
fD9$Gu
D9d$Hv%H
A_A]A\_]
|$@E3
UWAVH
WAVAWH
tFf9.tAL
tAfA9+t;L
tSfA9+tML
0A_A^_
` UAVAWH
A_A^]
fB9<Bu
fB9<Bu
fB9<Bu
fB9<Bu
fB9<Bu
VWAVH
 A^_^
fF94Fu
fB9,Bu
fB9<Bu
fB9<Bu
t$ WH
@ !H0H
@8!HHH
@P!H`f
UATAVH
|$ E3
A^A\]
UVWAVAWH
A_A^_^]
l$ VWATAVAWH
fD9dt.t
A_A^A\_^
t2H;H
WAVAWH
A_A^_
UWATAVAWH
d$ E3
A_A^A\_]
ATAVAWH
fD9$zu
L9d$ u
0A_A^A\
ATAVAWH
fD9$zu
L9d$ u
0A_A^A\
s WAVAWH
@A_A^_
VWAVH
 A^_^
|$ UAVAWH
A_A^]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UVWAVAWH
0A_A^_^]
UWAVH
0A^_]
UWAVH
0A^_]
UWAVH
 A^_]
VWAVH
0A^_^
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
@8l$Xu
UVWATAUAVAWH
pA_A^A]A\_^]
UVWAVAWH
L$PE3
D8t$0u
A_A^_^]
@USWH
x ATAVAWH
fE9<Fu
A_A^A\
t$ UWATAVAWH
fD9$xu
fG9$^u
D$lfE
\$nfA
A_A^A\_]
|$ E3
|$ UH
SUVWAVH
D8t$xu
|$xfD
@A^_^][
t$ WH
VWAVH
 A^_^
x AVH
@USVWAVH
A^_^[]
UAVAWH
A_A^]
@USWH
@USWH
L$ E3
L$ UWAVH
D8s(H
D8s*H
E8tCH
@A^_]
t$ E3
UAVAWH
A_A^]
UVWATAUAVAWH
L;eHs{H
pA_A^A]A\_^]
UVWATAUAVAWH
EpI;D$
A_A^A]A\_^]
USVWATAUAVAWH
y&D9O
L$ E3
A_A^A]A\_^[]
UVWATAUAVAWH
@8}Pt
@A_A^A]A\_^]
t$ WH
|$ UAVAWH
@A_A^]
UVWAVAWH
A_A^_^]
VWAVH
L$XE3
fD94Bu
@A^_^
@USVWATAVAWH
A_A^A\_^[]
t$ WAVAWH
0A_A^_
UVWATAUAVAWH
fG9,qu
pKY|[
A_A^A]A\_^]
UWAVH
fD94Qu
UWAVH
0A^_]
L$XH3
qiZR46
qiZR46
H UAVAWH
A_A^]
@USVWAVH
A^_^[]
x AVH
H;s r
H9{ v
H;{ r
L$@H3
L$@H3
UVWAVAWH
@A_A^_^]
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
T$0E3
(D$ H
(D$ H
L$ WH
UAVAWH
A_A^]
@USVWAVH
A^_^[]
9E8t>I
x AVH
9D$pt+
L$ UH
UWATAVAWH
0A_A^A\_]
@USWH
t$ UWATAVAWH
H!}@E3
D$ E3
0A_A^A\_]
x UAVAWH
L$0H!|$(3
A_A^]
x UAVAWH
A_A^]
x AVH
|$ UH
UAVAWH
A_A^]
VWAVH
 A^_^
UVWATAUAVAWH
fD9<Qu
fD;:A
pA_A^A]A\_^]
D!D$ D
L$ UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
 A^_^
UAVAWH
fF9<Iu
fD9<Au
A_A^]
f9]%t
L$ USVWATAUAVH
D$ E3
A^A]A\_^[]
` UAVAWH
A_A^]
` UAVAWH
A_A^]
@USVWAVAWH
A_A^_^[]
@USVWAVH
A^_^[]
H!t$(E3
!t$ 3
tyH!t$ E3
UVWAVAWH
A_A^_^]
x UAVAWH
A_A^]
@USWH
UATAUAVAWH
A_A^A]A\]
\$ UVWAVAWH
pA_A^_^]
t$ WH
f9<Cu
f9<Cu
f9<Cu
x UATAUAVAWH
A_A^A]A\]
|$ UH
t$ UWATAUAWH
A_A]A\_]
D$ H!D$(
UVWATAUAVAWH
piZR46
A_A^A]A\_^]
VWAVH
 A^_^
t$ H;\$0s=I
t$ WH
UWAVH
;] sDH
PA^_]
UWAVH
L$`E3
|$Xf9t$`t
D$(@@!
UWAVH
t$ E3
t$ E3
fD94Qu
@USVWAVH
A^_^[]
x AVH
fD97u
t0H;s
UWATAUAVH
fE9,$
A^A]A\_]
t$ WH
VWAVH
xD8t$xtn
tQfD93tKH;
fD94Cu
@A^_^
UVWATAUAVAWH
t2H;n
0A_A^A]A\_^]
y uDL
UVWATAUAVAWH
fD9,Fu
A_A^A]A\_^]
WAVAWH
fE9<Au
 A_A^_
uGH98uBH
WAVAWH
D9~hv@A
0A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
fD9,Au
UVWATAUAVAWH
t$8fD
wVA97s
d$0fD
`A_A^A]A\_^]
pxZ0!
@USVWATAUAVAWH
D$8E3
D$@fA
A_A^A]A\_^[]
UWATAVAWH
D9aLu
D$ E3
A_A^A\_]
UVWATAUAVAWH
D8y$t
L$xE3
D$(E3
@A_A^A]A\_^]
\$0ue
t$ WATAUAVAWH
D9|$p
fD9<nu
f9,~u
0A_A^A]A\_
L$ USVWAVH
`A^_^[]
9s@|+3
x AVH
 Hcy@H
9y<tjH
f9,Au
x AVH
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A9<$sEA
D$`@8l$ht
 A_A^A]A\_^]
f9<Au
f9<Au
f9<Au
@USVWAVAWH
A_A^_^[]
D$ E3
L$xD;
L$(E3
UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
D$HA+
L;t$Hw
A_A^A]A\_^]
@USVWATAUAVAWH
I9>tWI
|$ I9
A_A^A]A\_^[]
WAVAWH
fE9<Xu
@A_A^_
VWAVH
 A^_^
UWAVH
@A^_]
t$ WH
YXW>9
L$@E3
WAVAWH
0A_A^_
\$ UVWAVAWH
t$0E3
A_A^_^]
\$ UVWATAUAVAWH
L!d$0E3
L!d$0H
A_A^A]A\_^]
p WAVAWH
fE98t
l$Pf9.s
 A_A^_
WAVAWH
fD9<Yu
 A_A^_
VWAVH
L$hE3
@A^_^
fD;L$0
x ATAVAWH
@A_A^A\
l$ VH
D$(L!L$ H
UWAWH
H!} I
D$(E3
L!L$ 3
WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
VWAVH
PA^_^
D$XHc
L$XH3
WATAUAVAWH
L9l$hu
fE9$Wu
fD9$Fu
L$hI;
l$hL9
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
fD9<Vu
fD9<Gu
L9|$xt eH
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
L$HE3
L$HE3
 A^_^
T$(E3
x AVH
t$ UWAVH
*tiD;
|$ UH
@SVWH
D$PE3
D$8E3
UVWATAUAVAWH
t$ E3
fA94Fu
A_A^A]A\_^]
WAVAWH
A_A^_
D$XE3
|$PE3
UATAUAVAWH
D8ewt#D9eoA
A_A^A]A\]
t$ WAVAWH
Et$@H
9\$Pv[H
;\$Pr
L$`H3
A_A^_
@USWH
UWAVH
@USWH
UVWATAUAVAWH
xKI;w
@8|$0
@8|$1u
A_A^A]A\_^]
L$XH3
UWAUAVAWH
A_A^A]_]
USVWATAUAVAWH
A_A^A]A\_^[]
L$hE3
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
L$ VWAVH
0A^_^
UVWATAUAVAWH
psVV%
pz\:(
A_A^A]A\_^]
W2a')
_^6&a
@USVWATAUAVAWH
SRD1t
A_A^A]A\_^[]
L$@H3
@USVWATAUAVH
A^A]A\_^[]
UVWATAUAVAWH
D9|$0u%
D9|$0t
D9|$0t
\$pD9|$0tWH
D9|$0
D9|$0
D9|$0t H
D9|$0t#H
D9|$0t
D8|$4t
D9|$0tSH
D9|$0
D9|$0
D9|$0t H
D9|$0t H
A_A^A]A\_^]
UATAUAVAWH
D;t$H
f94Su
t$ E3
A_A^A]A\]
t$ UWATAVAWH
D9d$0uQH
A_A^A\_]
UVWATAUAVAWH
D;t$0
D9l$4
A_A^A]A\_^]
H9D$Xu(3
x ATAVAWH
 A_A^A\
USVWAVH
0A^_^[]
f9,Zu
L$`H3
UATAUAVAWH
A_A^A]A\]
@SUVWH
@USVWAVH
p![XT?
0A^_^[]
UVWATAUAVAWH
fD9,Xu
HcD$@
Hc\$@
L$P;L$@
D$ E3
LcL$@L
D$ E3
A_A^A]A\_^]
VWAVH
0A^_^
UVWAVAWH
0A_A^_^]
@USVWAVH
A^_^[]
x ATH
|$(A\
D$\D+
L$`H3
L$`H3
SUVWATAUAVAWH
QZ^&A
8A_A^A]A\_^][
D$03D$8
D$43D$<
Ng0D+
`[@D+
i|,D+
`[@D+
x AVH
x AVH
SUVWH
HiUx(
api-ms-win-security-provider-l1-1-0.dll
WINSPOOL.DRV
ext-ms-win-advapi32-safer-l1-1-0.dll
ext-ms-win-com-ole32-l1-1-0
ext-ms-win-com-ole32-l1-1-1
ext-ms-win-com-ole32-l1-1-2
ext-ms-win-com-ole32-l1-1-3
ext-ms-win-com-ole32-l1-1-4
ext-ms-win-com-ole32-l1-1-5
ext-ms-win-com-ole32-l1-3-0
ext-ms-win-com-ole32-l1-4-0
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-storage-sense-l1-2-2
ext-ms-win-storage-sense-l1-2-3
ext-ms-win-storage-sense-l1-2-4
ext-ms-win-storage-sense-l1-2-5
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-3
ext-ms-win-shell-shell32-l1-5-0
ext-ms-win-shell-shell32-l1-2-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-3.dll
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-1.dll
ext-ms-win-wevtapi-eventlog-l1-1-2.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-0.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-3.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
ext-ms-win-desktopappx-l1-1-3.dll
ext-ms-win-desktopappx-l1-2-1.dll
ext-ms-win-desktopappx-l1-1-7.dll
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-desktopappx-l1-1-7
ext-ms-win-desktopappx-l1-2-0
ext-ms-win-desktopappx-l1-2-1
EDGEHTML.dll
api-ms-win-ntuser-ie-message-l1-1-0.dll
FirewallAPI.dll
AppXAllUserStore.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-resources-languageoverlay-l1-1-4
ext-ms-win-resources-languageoverlay-l1-1-5
ext-ms-win-resources-languageoverlay-l1-1-6
ext-ms-win-resources-languageoverlay-l1-1-7
ext-ms-win-security-capauthz-l1-1-0.dll
capauthz.dll
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-session-wtsapi32-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
api-ms-win-core-synch-l1-2-0.dll
kernel32.dll
SleepConditionVariableCS
WakeAllConditionVariable
OSIntegration.DEH.ComServiceServerRegistration
OSIntegration.DEH.PackagedComCatalogCollectorForUserOrSystemRegister
Unknown exception
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
lstd::exception: %hs
ntdll.dll
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil/Staging.h
WilStaging_02
false
*[local-name()='Applications']/*[local-name()='Application']
Executable
Alias
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.appointmentsProvider']
C++/WinRT version:2.0.220110.5
ancestor::*[local-name()='Application']
CreatePort
RemovePort
Microsoft Software Printer Driver
windows.customInstall
CustomInstallExec.exe
/install
/uninstall
*[local-name()='CustomInstall']
Folder
desktop8:RunAsUser
*/*[local-name()='InstallActions']/*[local-name()='InstallAction']
*/*[local-name()='UninstallActions']/*[local-name()='UninstallAction']
*/*[local-name()='RepairActions']/*[local-name()='RepairAction']
Microsoft.classicAppInstaller_8wekyb3d8bbwe
*[local-name()='StringData']/*[local-name()='DataItem']
*[local-name()='BinaryData']
*[local-name()='KeywordAllData']
*[local-name()='KeywordAnyData']
*[local-name()='LevelData']
*[local-name()='TriggerEvents']
*[local-name()='TriggerCustom']
*[local-name()='PredefinedTriggerEvents']
*[local-name()='Service']
*[local-name()='Dependencies']
*[local-name()='DependentService']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and @Name='protectedApp']
ancestor::*[local-name()='Application']/*[local-name()='VisualElements']
System\CurrentControlSet\Services
PackageFullName
AppUserModelId
PackageOrigin
staterepository
S-1-5-11
S-1-5-80-1949724575-2387902436-65106593-1201171665-3967308604
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.installedLocationVirtualization']
*[local-name()='InstalledLocationVirtualization']
*[local-name()='UpdateActions']
ModifiedItems
DeletedItems
AddedItems
packageWriteRedirectionCompatibilityShim
Local\SM0:%lu:%lu:%hs
OSIntegration.DEH.ComManagedInprocServerClassRegistration
OSIntegration.DEH.ComExeClassRegistration
m'w8Z
Windows.Foundation.ExeServerRegistration
Windows.Foundation.Collections.PropertySet
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.PackagedComCatalogCollector
;~ rB
localSystem
delayedStart
Windows.FullTrustApplication
machine
mediumIL
windows
disabled
console
appContainer
windowsApp
ActionStop
manual
Windows.PartialTrustApplication
packagedClassicApp
networkService
localService
win32App
modern
classic
appSilo
ActionStart
InstalledLocationVirtualization
windows.publisherCacheFolders
windows.localExperiencePack
windows.hostRuntime
windows.installedLocationVirtualization
Square44x44Logo
StartPage
StartAccount
SmallLogo
Action
EntryPoint
Clsid
StartupType
Executable
Square150x150Logo
Square30x30Logo
Description
Subtype
Value
Arguments
RuntimeType
TriggerType
DisplayName
Category
OSIntegration.DEH.ComInprocHandlerClassDllRegistration
OSIntegration.DEH.ComInterfaceRegistration
OSIntegration.DEH.ComExeServerRegistration
OSIntegration.DEH.ComServiceClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
X~zjg
OSIntegration.DEH.ComInprocServerClassDllRegistration
Windows.Foundation.PropertyValue
Windows.Foundation.ExeServerActivatableClassRegistration
OSIntegration.DEH.ComProxyStubRegistration
onecore\admin\appmodel\osim\src\extensiondll\desktop\registration.cpp
windows.applicationRegistration
windows.approvedShellExtension
windows.internal.shadowCopyExclude
windows.service
windows.MMGA
windows.mailProvider
windows.desktopEventLogging
windows.firewallRules
windows.controlPanelItem
windows.systemFileAssociation
windows.eventTracing
windows.integrityExtension
windows.DeviceSetupManager
windows.wcosAdapterApp
windows.userMutablePackageDirectories
windows.alarm
windows.scopeCompatEnforcer
windows.capability
windows.autoPlayContent
windows.autoPlayDevice
windows.autoPlayHandler
*[local-name()='FileOpenPicker']
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileOpenPickerHelper.hpp
Windows.FileOpenPicker
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\FileOpenPicker.hpp
windows.fileOpenPicker
*[local-name()='FileSavePicker']
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileSavePickerHelper.hpp
Windows.FileSavePicker
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\FileSavePicker.hpp
windows.fileSavePicker
Windows.CachedFileUpdater
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\CachedFileUpdater.hpp
windows.cachedFileUpdater
windows.appUriHandler
Windows.AppPrinter
windows.appPrinter
Windows.ShareTarget
windows.shareTarget
%s:%s
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHelper.hpp
Software\Microsoft\Windows\CurrentVersion\Explorer\AppContract
%s\%s\%s
windows.LockScreenCall
windows.lockScreenCall
Windows.File
windows.fileExplorerContextMenus
windows.primaryInteropAssemblies
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and @ContentType]
windows.contentType
windows.fileTypeAssociation
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
DEFAULT_DATA
windows.defaultPrograms
windows.protocol
windows.licensing
Windows.Protocol
windows.accountPictureProvider
Windows.CameraSettings
windows.cameraSettings
Windows.PrintTaskSettings
windows.printTaskSettings
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MoCOMHelper.hpp
Windows.Print3DWorkflow
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHandler.hpp
windows.print3DWorkflow
windows.appExtension
windows.stateExtension
windows.MicrosoftAccountClient.SignOut
windows.indexedDB
windows.searchIndexer
windows.sharedFonts
windows.classicAppCompatKeys
/*[local-name()='Package']
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHelpers.hpp
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHandlers.hpp
windows.shortcut
MoCOM
windows.repositoryExtension
windows.search.Migration
windows.errorReporting
windows.fileExplorerClassicContextMenuHandler
windows.fileExplorerClassicDragDropContextMenuHandler
onecore\admin\appmodel\osim\src\extensiondll\desktop\dllmain.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\shellrefresh.cpp
CheckPoint.VPN_cw5n1h2txyewy
f5.vpn.client_cw5n1h2txyewy
FileManager_cw5n1h2txyewy
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
Microsoft.MoCamera_cw5n1h2txyewy
SonicWALL.MobileConnect_cw5n1h2txyewy
windows.devicesflow_cw5n1h2txyewy
windows.immersivecontrolpanel_cw5n1h2txyewy
Windows.MiracastView_cw5n1h2txyewy
Windows.MtcUvc_cw5n1h2txyewy
Windows.PrintDialog_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
OOBEApp_cw5n1h2txyewy
SettingsApp_cw5n1h2txyewy
BrowserChoice_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
DefaultApp_cw5n1h2txyewy
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
Xbox.KinectTuner_cw5n1h2txyewy
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
\resources.pri
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='OSPackageDependency']
Microsoft.GameOS
Files
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
: does not have a resources.pri file or could not create a resource manager
vector too long
Bad optional access
string too long
bad array new length
AppxManifest.xml
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
onecore\admin\appmodel\Common\Utilities.hpp
Resources
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
neutral
onecore\admin\appmodel\osim\src\deh\appx\common\xmltools.cpp
<Error message string not found>
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
ContractId
ActivatableClassId
AppUserModelID
PackageRelativeExecutable
DesktopAppXActivateOptions
DesiredInitialViewState
PackageId
command
DelegateExecute
Parameters
MultiSelectModel
Extended
ddeexec
application
topic
ifexec
{4ED3A719-CEA8-4BD9-910D-E252F997AFC2}
{BFEC0C93-0B7D-4F2C-B09C-AFFFC4BDAE78}
{A56A841F-E974-45C1-8001-7E3F8A085917}
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
\LaunchWinApp.exe" "%1"
ancestor::*[local-name()='
$(Package)
[{Package}]
invalid string_view position
onecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
invalid string position
-$R7>u
list too long
onecore\admin\appmodel\osim\src\deh\appx\common\deploymentextension.cpp
Windows.BackgroundTasks
Windows.PreInstalledConfigTask
Windows.UpdateTask
Windows.AppService
Windows.AppointmentDataProvider
Windows.ContactDataProvider
Windows.EmailDataProvider
Windows.UserDataTaskDataProvider
Windows.PrintWorkflowBackgroundTask
Windows.BarcodeScannerProvider
Windows.PosPaymentConnector
Windows.PrintSupportExtension
Windows.PrintSupportWorkflow
onecore\admin\appmodel\osim\src\deh\appx\common\mocomhelper.cpp
Windows.Launch
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
onecore\admin\appmodel\osim\src\deh\appx\common\MoCOMHelper.hpp
@*[local-name()='HostId']
VailProxy
./*[local-name()='AppService']
uap4:SupportsMultipleInstances
./*[local-name()='BackgroundTasks']
Subsystem
@*[local-name()='Subsystem']
SupportsMultipleInstances
@*[local-name()='SupportsMultipleInstances']
ResourceGroup
ExeHost
NavigateTo
AppObject.RuntimeType
Windows.PartialTrustApplication
Windows.FullTrustApplication
@*[local-name()='RuntimeBehavior']
@*[local-name()='TrustLevel']
../..
./*[local-name()='VisualElements']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='DisplayName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Logo']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Description']
AppObject.Aliased
AppObject.EntryPoint
gamecoreproxyapp.exe
%windir%\system32\gamecoreproxyapp.exe
eraproxyapp.exe
%windir%\system32\eraproxyapp.exe
%windir%\syswow64\aghost.exe
wwahost.exe
onecore\admin\appmodel\Common\ProgID.hpp
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\usertoken.cpp
*.sccd
onecore\admin\appmodel\osim\src\deh\appx\common\customcapabilities.cpp
AppxMetadata\CodeIntegrity.cat
AppxSignature.p7x
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\admin\appmodel\osim\src\deh\appx\common\dehrequest.cpp
bad allocation
onecore\admin\appmodel\osim\src\deh\appx\common\ConstantStringMap.hpp
ContentType
Software\Classes\MIME\Database\Content Type
AppXBackupContentType
Extension
application/force-download
application/unknown
application/octet-stream
onecore\admin\appmodel\osim\src\deh\appx\contenttype\contenttypehelper.cpp
application/x-msdownload
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and @ContentType='
%s%s%s
Software
Software\Classes
ApplicationName
ApplicationDescription
Windows.AppointmentsProvider.AddAppointment
Windows.AppointmentsProvider.ReplaceAppointment
Windows.AppointmentsProvider.RemoveAppointment
Windows.AppointmentsProvider.ShowTimeFrame
windows.appointmentsProvider
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Capabilities
*[local-name()='VisualElements']
*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='Protocol']
*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType' and not(.='*')]
FileAssociations
URLAssociations
RegisteredApplications
onecore\admin\appmodel\osim\src\deh\appx\sud\setuserdefaulthelper.cpp
shell
.html
https
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
*[local-name()='ShareTarget']/*[local-name()='DataFormat']
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
SupportedDataFormats
onecore\admin\appmodel\osim\src\deh\uex\share\sharehelper.cpp
SupportedFileTypes
Shell IDList Array
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolextensionhandler.cpp
Always
accountpictureprovider
Optional
application.reference
application.manifest
batfile
chm.file
cerfile
comfile
cmdfile
dllfile
cplfile
exefile
drvfile
explorer.assocactionid.closesession
explorer.assocactionid.burnselection
explorer.assocactionid.zipselection
explorer.assocactionid.erasedisc
explorer.burnselection
explorer.assocprotocol.search-ms
explorer.erasedisc
explorer.closesession
explorer.zipselection
hlpfile
fonfile
inffile
htafile
internetshortcut
insfile
lnkfile
jsefile
ms-accountpictureprovider
microsoft.powershellscript.1
ms-appx
ms-appdata
ms-autoplay
ms-appx-web
msi.package
ms-windows-search
ocxfile
msi.patch
regfile
piffile
scriptletfile
scrfile
shcmdfile
shbfile
shsfile
ttffile
sysfile
vbsfile
vbefile
wsffile
windows.gadget
wshfile
wsfile
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolhelper.cpp
windows.
URL Protocol
Software\Microsoft\Windows\Shell\Associations\UrlAssociations
*[local-name()='Protocol']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='Protocol']/*[local-name()='Logo']
*[local-name()='Protocol']/*[local-name()='DisplayName']
ReturnResults
@*[local-name()='Parameters']
*[local-name()='Protocol']
unknown
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypehelper.cpp
classic
Software\Microsoft\Windows\CurrentVersion\Explorer\KindMap\
.accountpicture-ms
machine
.appref-ms
.application
.gadget
FullDetails
windows.appExecutionAlias
PreviewDetails
OpenWithProgids
AllowSilentDefaultTakeOver
EditFlags
TypeOverlay
InfoTip
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecTopic']
@*[local-name()='DdeExecApplication']
@*[local-name()='Default']
@*[local-name()='DdeExecCommand']
Property
Clsid
*[local-name()='FileTypeAssociation']/*[local-name()='OleClass']
*[local-name()='AppExecutionAlias']/*[local-name()='ExecutionAlias']
@*[local-name()='Category']
*[local-name()='FileTypeAssociation']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='FileTypeAssociation']/*[local-name()='KindMap']/*[local-name()='Kind']
Value
*[local-name()='FileTypeAssociation']/*[local-name()='PropertyLists']/*[local-name()='PropertyList']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedVerbs']/*[local-name()='Verb']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
AlwaysUnsafe
*[local-name()='FileTypeAssociation']/*[local-name()='EditFlags']
OpenIsSafe
*[local-name()='FileTypeAssociation']/*[local-name()='InfoTip']
desktop5:ThumbnailTypeOverlay
ResourceId
*[local-name()='FileTypeAssociation']/*[local-name()='Logo']
*[local-name()='FileTypeAssociation']/*[local-name()='DisplayName']
@*[local-name()='Scope']
@*[local-name()='CompatMode']
*[local-name()='FileTypeAssociation']/*[local-name()='ProgId']
desktop2:AllowSilentDefaultTakeOver
*[local-name()='FileTypeAssociation']
PerceivedType
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypeextensionhandler.cpp
RaiseFailFastException
WilError_03
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
onecore\admin\appmodel\osim\src\deh\appx\fileexplorercontextmenus\fileexplorercontextmenus.cpp
*[local-name()='FirewallRules']
IPProtocol
LocalPortMin
*[local-name()='FirewallRules']/*[local-name()='Rule']
Direction
RemotePortMax
Profile
LocalPortMax
RemotePortMin
private
public
{78E1CD88-49E3-476E-B926-580E596AD309}
domain
ICMPv4
ICMPv6
domainAndPrivate
OSPFIGP
onecore\admin\appmodel\osim\src\deh\appx\firewallrules\firewallruleshelper.cpp
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MsixAppCompatSupport.hpp
CompatMode
modern
onecore\admin\appmodel\osim\src\deh\appx\lookaside\lookasidehelper.cpp
ValueName
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.classicAppCompatKeys']/*[local-name()='ClassicAppCompatKeys']/*[local-name()='ClassicAppCompatKey']
ValueType
Microsoft.classicAppCompat_8wekyb3d8bbwe
onecore\admin\appmodel\OSIM\src\deh\appx\Common\EnumStringMapping.hpp
AssemblyVersion
PublicKey
*[local-name()='PrimaryInteropAssemblies']
AssemblyName
FolderPath
Version
MachineType
TargetClrVersion
*[local-name()='PrimaryInteropAssemblies']/*[local-name()='Redirect']
GAC_64\
GAC_32\
onecore\admin\appmodel\osim\src\deh\appx\pia\piahelper.cpp
GAC_MSIL\
Policy.
\assembly\
\Microsoft.NET\assembly\
.config
LastError=%d, source=%s, dest=%s
v4.0_
onecore\admin\appmodel\OSIM\src\deh\appx\Common\ConstantStringMap.hpp
Deletefile Failed with 0x%X
PIAHelper
*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
onecore\admin\appmodel\osim\src\deh\uex\apppicker\apppickerhelper.cpp
S-1-5-80-410965207-2550896871-1717734767-2321332215-3755966139
Software\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\Notifications\Alarm
AlarmCapable
ancestor::*[local-name()='Application']/*[local-name()='VisualElements']/*[local-name()='LockScreen']
onecore\admin\appmodel\osim\src\deh\alarm\alarmextensionhandler.cpp
UiOrder
NCBEnabled
O:%sD:P(A;;FA;;;%s)(A;;GR;;;%s)(A;;FA;;;BA)
%s\%s
onecore\admin\appmodel\osim\src\deh\autoplay\autoplayextensionhandler.cpp
Windows.AutoPlayDevice
Windows.AutoPlayHandler
Windows.AutoPlayContent
DefaultIcon
Shell
DeviceEvent
ActionDisplayName
HWEventHandler
DropTargetHandler
ProviderDisplayName
ContentEvent
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and @Name='removableStorage']
ancestor::*[local-name()='Extension']
ancestor::*[local-name()='Extension']/*[local-name()='Logo']
InitCmdLine
Software\Microsoft\Windows\CurrentVersion\Explorer\AutoPlayHandlers\EventHandlers
Software\Microsoft\Windows\CurrentVersion\Explorer\AutoPlayHandlers\Handlers
ancestor::*[local-name()='InvokeAction']/*[local-name()='DefaultIcon']
ancestor::*[local-name()='InvokeAction']
InvokeProgID
Provider
Action
DropTarget
DesktopAppX
Immersive
InvokeVerb
ExtensionID
Windows.AutoPlayDesktopAppX.Device
Windows.AutoPlayDesktopAppX.Content
CLSID
./*[local-name()='Content']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayHandler']/*[local-name()='AutoPlayHandler']/*[local-name()='InvokeAction']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayDevice']/*[local-name()='AutoPlayDevice']/*[local-name()='LaunchAction']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.autoPlayContent']/*[local-name()='AutoPlayContent']/*[local-name()='LaunchAction']
Content
onecore\admin\appmodel\osim\src\deh\autoplay\autoplayhelper.cpp
./*[local-name()='Device']
Microsoft Enhanced RSA and AES Cryptographic Provider
Device
Windows.Device
DesktopAppXDevice
DesktopAppXContent
{BFEC0C93-0B7D-4F2C-B09C-AFFFC4BDAE78}
onecore\admin\appmodel\osim\src\deh\uex\usertileprovider\usertileproviderhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\integrity\integritydeh.cpp
onecore\admin\appmodel\osim\src\deh\indexeddb\indexeddb.cpp
PerPackageIndexedDBEnabled
SOFTWARE\Microsoft\Windows\CurrentVersion\AppHost\IndexedDB\
Aonecore\admin\appmodel\osim\src\deh\dsm\dsmextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\microsoftaccountclient\signoutextensionhandler.cpp
Windows.Internal.Security.WebAuthentication.AuthenticationManager
onecore\admin\appmodel\osim\src\deh\searchindexer\searchindexerextensionhandler.cpp
CheckOnStartup
D:(A;;GRGX;;;SY)(A;;GRGX;;;BA)(A;;GRGX;;;BU)(A;;GA;;;S-1-5-80-117416528-2204451360-1913602512-1355018040-1234992034)
SOFTWARE\Microsoft\Windows Search\UninstalledStoreApps
AppDeployment.Test.SearchSettingsMigration.Main_8wekyb3d8bbwe
IsAADCloudSearchEnabled
IsMSACloudSearchEnabled
IsDeviceSearchHistoryEnabled
Configuration
Microsoft.Windows.Cortana_cw5n1h2txyewy
SafeSearchMode
Software\Microsoft\Windows\CurrentVersion\SearchSettings
S-1-15-3-1024-1086922356-207614091-3724853071-841836187-4018695103-34218837-3164163255-155871754
CloudSearchEnabledForAAD
CloudSearchEnabledForMSA
DeviceSearchHistoryEnabled
CloudSearchEnabled
onecore\admin\appmodel\osim\src\deh\searchsettingsmigration\searchsettingsmigrationextensionhandler.cpp
Windows.Management.Core.ApplicationDataManager
Description
Application
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.mailProvider']
onecore\admin\appmodel\osim\src\deh\mmga\mmgahelper.cpp
MmgaServer.exe
-simple
ExtendedMapiLibrary
MAPI Server Host
*[local-name()='MailProvider']
SimpleMapiLibrary
Scope
SOFTWARE\Clients\Mail\PackagedMail
DLLPathEx
mmgaclient.dll
InprocRegistration
DLLPath
Simple
PackagedMail
ClsidSimple
SOFTWARE\Clients\Mail
SOFTWARE\Clients\Mail\PackagedMail
ClsidExtended
Install
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging']/*[local-name()='TypesSupported']/*[local-name()='TypeSupported']
EVENTLOG_AUDIT_FAILURE
AppName
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging' and @AppName]
TypesSupported
onecore\admin\appmodel\osim\src\deh\eventlog\eventloghelper.cpp
SYSTEM\CurrentControlSet\Services\EventLog\Application\
EventMessageFile
EventLogHelper
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.desktopEventLogging']/*[local-name()='DesktopEventLogging']/*[local-name()='EventMessageFiles']/*[local-name()='File']
%ProgramData%\Microsoft\Windows\PackagedEventProviders\
EVENTLOG_INFORMATION_TYPE
EVENTLOG_WARNING_TYPE
EVENTLOG_AUDIT_SUCCESS
EVENTLOG_ERROR_TYPE
Uninstall
*[local-name()='AppPrinter']
onecore\admin\appmodel\osim\src\deh\appx\appprinter\appprinterhelper.cpp
DisplayName
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts
*[local-name()='SharedFonts']
onecore\admin\appmodel\osim\src\deh\sharedfonts\sharedfontshandler.cpp
*[local-name()='Font']
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\custominstallextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\custominstallextensionhelper.cpp
Wait For Custom Install Worker Process failed!
'Sonecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
onecore\private\base\inc\appmodel\staterepository\dal/ResourcePriority.hpp
onecore\admin\appmodel\osim\src\deh\appx\custominstall\dehlib\installactionhelper.cpp
CustomInstallWork Flags are INVALID
CustomInstallActionType is INVALID
onecore\admin\appmodel\osim\src\deh\appx\custominstall\installaction.cpp
onecore\internal\sdk\inc\wil\opensource\wil\result.h
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PackagedServiceDEHRemoveRequestActivity
PackagedServiceDEHRevertRequestActivity
PackagedServiceDEHCommitRequestActivity
PackagedServiceDEHEvaluateRequestActivity
No package found
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedserviceextensionhandler.cpp
NT AUTHORITY\NetworkService
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedserviceextensionhelper.cpp
NT AUTHORITY\LocalService
networkEndpoint
ipAddressAvailability
groupPolicy
firewallPortEvent
domainJoin
deviceInterfaceArrival
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedservicetriggerdata.cpp
onecore\admin\appmodel\osim\src\deh\appx\packagedservices\packagedservicetriggerdataitems.cpp
System\CurrentControlSet\Control\BackupRestore\FilesNotToSnapshot
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.internal.shadowCopyExclude']
*[local-name()='FilesToExclude']
*[local-name()='FileToExclude']
onecore\admin\appmodel\osim\src\deh\appx\shadowcopyexclude\shadowcopyexcludehelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\approvedshellextension\approvedshellextensionhelper.cpp
Software\Microsoft\Windows\CurrentVersion\Shell Extensions\Approved
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.approvedShellExtension']
*[local-name()='ApprovedShellExtension']
*[local-name()='LocalizedString']
*[local-name()='InfoTip']
onecore\admin\appmodel\osim\src\deh\appx\controlpanelregistration\controlpanelregistrationhelper.cpp
SOFTWARE\Classes\CLSID\
LocalizedString
System.ApplicationName
System.ControlPanel.Category
System.Software.TasksFileUrl
onecore\admin\appmodel\OSIM\src\deh\WinRT\Collector\RegistryCompatibilityTypes.hpp
SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\Namespace\
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.controlPanelItem']
*[local-name()='ControlPanelItem']
*[local-name()='DefaultIcon']
SystemApplicationName
SystemControlPanelCategory
SystemSoftwareTasksFileUrl
unordered_map/set too long
invalid hash bucket count
generic
bad cast
system
remove
space
create_directories
invalid stoi argument
map/set too long
stoi argument out of range
Arguments
ExcludeFromShowInNewInstall
PinToStartMenu
AumId
*[local-name()='AppMigrations']/*[local-name()='AppMigration']
Programs
onecore\admin\appmodel\osim\src\deh\shortcuts\shortcuthelper.cpp
Common Programs
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.shortcut']/*[local-name()='Shortcut']
(\$\((.+?)\)|\[\{(.+?)\}\])[/\\]+(.+)
vector<bool> too long
cntrl
cntrl
digit
digit
graph
graph
alnum
alnum
alpha
alpha
blank
blank
upper
upper
xdigit
xdigit
lower
lower
print
print
punct
punct
space
Funknown error
F()$^.*+?[]|\-{},:=!
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.applicationRegistration']/*[local-name()='ApplicationRegistration']
*[local-name()='ProgId']
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.fileTypeAssociation']/*[local-name()='FileTypeAssociation']
onecore\admin\appmodel\osim\src\deh\applicationregistration\applicationregistrationhelper.cpp
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.protocol']/*[local-name()='Protocol']
SOFTWARE\RegisteredApplications
stoll argument out of range
invalid stoll argument
stoull argument out of range
invalid stoull argument
onecore\private\com\inc\deployment\RegistrationStoreApiTypes.hpp
HKEY_CURRENT_USER
onecore\admin\appmodel\osim\src\deh\appx\registrycompatkeys\registrycompatkeyshelper.cpp
*[local-name()='ClassicAppCompatKey']
*[local-name()='ClassicAppCompatKeys']
REG_EXPAND_SZ
REG_SZ
HKEY_LOCAL_MACHINE
REG_MULTI_SZ
REG_QWORD
REG_DWORD
REG_BINARY
FileType
*[local-name()='SystemFileAssociation']
TileInfo
PreviewTitle
QuickTip
ExtendedTileInfo
Classes
SystemFileAssociations
onecore\admin\appmodel\osim\src\deh\appx\systemfileassociation\systemfileassociationhelper.cpp
*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.systemFileAssociation']
SOFTWARE
onecore\admin\appmodel\osim\src\deh\appx\scopecompatenforcer\scopecompatenforcerhandler.cpp
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='CompatMode' and .='classic']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='CompatMode' and .='classic']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
Microsoft.classicAppCompatElevated_8wekyb3d8bbwe
onecore\admin\appmodel\osim\src\deh\xbox\gamebar\gamebarextensionhandler.cpp
//*[local-name()='Extension' and @Category='windows.appExtension']/*[local-name()='AppExtension' and @Name='microsoft.gameBarUIExtension']
Windows.GameBarUIExtension
stringOrResourceReference:%ls
resourceReferenceHandler->IsFullyQualifiedResourceReference(stringOrResourceReference, &isReference)
OSIntegration::DEH::MrtResourceHelperForStagedPackage::ResolveStringReference
m_mrtRsourceManager->GetReference(IID_PPV_ARGS(&resourceReferenceHandler))
OSIntegration::DEH::MrtResourceHelperForIncomingPackage::Initialize
m_mrtHelper.Initialize(package->GetPackageRoot(), package->GetPackageMoniker(), package->GetIsInbox(), resourcesRedirected)
resourceReferenceHandler->GetStringForContext(nullptr , stringOrResourceReference, &allocatedResult, &found)
Common::Deployment::Configuration::AreMrtResourcesRedirected(package->GetIsMsixvc(), &resourcesRedirected)
CoCreateInstance(__uuidof(MrtResourceManager), nullptr, CLSCTX_INPROC_SERVER, IID_PPV_ARGS(&localResourceManager))
localResourceManager->Initialize()
!m_initialized
OSIntegration::DEH::MrtResourceHelperForStagedPackage::Initialize
onecore\admin\appmodel\osim\src\deh\winrt\collector\CollectorMrtResourceManager.hpp
OSIntegration::DEH::MrtResourceHelperForIncomingPackage::ResolveStringReference
m_mrtHelper.GetLocalizedStringResource(stringOrResourceReference, resolvedStringBuffer)
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityShared.hpp
registryCompatibilityManager->WritePackageEntries(incomingPackage->GetPackageMoniker(), std::move(m_machineEntries), std::move(m_userEntries))
OSIntegration::DEH::RegistryCompatibilityCollector::PendingRemove
resourcesManager->GetRegistryCompatibilityManager(&registryCompatibilityManager)
OSIntegration::DEH::RegistryCompatibilityCollector::PendingWrite
OSIntegration::DEH::RegistryCompatibilityCollector::SetIsAdditiveMode
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), Scope::Machine, nullptr , m_machineEntries)
registryCompatibilityManager->RemovePackageEntries(outgoingPackage->GetPackageMoniker(), deploymentOperation)
CreateRegistryCompatibilityManager(true , nullptr , &registryCompatibilityManager)
!oldPosition->first.EqualsCaseSensitive(first)
OSIntegration::DEH::RegistryCompatibility::EntryTree::AddEntry
OSIntegration::DEH::RegistryCompatibilityCollector::AddKey
onecore\admin\appmodel\osim\src\deh\winrt\collector\registrycompatibilitycollector.cpp
OSIntegration::DEH::RegistryCompatibility::EntryTree::ExtractEntry
OSIntegration.DEH.RegistryCompatibilityCollector
resourceManager.Initialize(incomingPackage)
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetPathsAndEntriesForChangedPackages
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetUserSid
Tools::GetUserSID(m_userToken, &m_userSid)
registryCompatibilityManager->RemoveActualKey(GetScope(), outgoingPackageEntryPath)
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::RemoveKeysForOutgoingPackage
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), GetScope(), &resourceManager, incomingPackageEntries)
registryCompatibilityManager->TryReadPackageEntries(outgoingPackageFullName.value().c_str(), GetScope(), nullptr , outgoingPackageEntries)
OSIntegration::DEH::RegistryCompatibilityCollector::GetEntryTree
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWrite
registryCompatibilityManager->TryReadPackageEntries(incomingPackage->GetPackageMoniker(), Scope::User, nullptr , m_userEntries)
E_UNEXPECTED
PendingWriteChanges(registryCompatibilityManager.get(), outgoingPackage->GetMachineDatabase(), nullptr , outgoingPackageContext.PackageFullName)
m_userToken == nullptr
PendingWriteChanges(registryCompatibilityManager.get(), incomingPackage->GetMachineDatabase(), incomingPackage, outgoingPackageContext.PackageFullName)
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingRemove
CreateRegistryCompatibilityCollector
CreateRegistryCompatibilityCollectorForUserOrSystemRegister
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges
localCollector
invalid map<K, T> key
TryGetPackageFamilySystemRegisterTimestampForPackage(machineDatabase, packageName.c_str(), timestamp, isIncomingPackage )
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges::<lambda_c23cade4e9199fbe1e22663acc05e50e>::operator ()
iterator == writerInfos.end()
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::CalculateLastWriterEntries
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::PendingWriteChanges::<lambda_ef8daf212004ce5bf57bd51bdaac63b5>::operator ()
registryCompatibilityManager->ReadPackageEntry(packageName.c_str(), GetScope(), path, &mrtManager, key)
TryGetPackageFamilyUserRegisterTimestampForPackage(machineDatabase, GetUserSid(), packageName.c_str(), timestamp, isIncomingPackage )
mrtManager.Initialize()
registryCompatibilityManager->GetEntryPathAndPackageNamePairsRelevantToPath(GetScope(), pathToEvaluate, pairsRelevantToPath)
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::WriteKeysForLastWriterEntries
OSIntegration::DEH::RegistryCompatibilityCollectorForUserOrSystemRegister::GetRelevantEntriesFromRegisteredPackagesWithTimestamps
registryCompatibilityManager->AddOrReplaceActualKey(GetScope(), pathAndPackageNamePair.first, pathAndPackageNamePair.second.c_str(), std::move(keyContent))
F!oldPosition->first.EqualsCaseSensitive(subkeyName)
OSIntegration::DEH::RegistryCompatibility::Key::GetOrCreateSubkey
OSIntegration::DEH::RegistryCompatibility::Key::AddOrMergeSubkey
bad variant access
ERROR_NOT_FOUND
!emplaceResult.second
OSIntegration::DEH::RegistryCompatibility::Key::AddSubkey
OSIntegration::DEH::RegistryCompatibility::GenericValueData::GenericValueData
contentsCopy
m_text.find(L'\\') != std::wstring::npos
OSIntegration::DEH::RegistryCompatibility::Name<1,256,0>::Name
m_text.length() < minLength
m_text.length() > maxLength
OSIntegration::DEH::RegistryCompatibility::KeyPath::KeyPath
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityTypes.hpp
currentBegin == currentEnd
(currentEnd - currentBegin) > MaxKeyNameLength
m_text.length() == 0
currentBegin == m_text.length()
(m_text.length() - currentBegin) > MaxKeyNameLength
m_text.length() > UNICODE_STRING_MAX_CHARS
mrtManager->ResolveStringReference(referenceString, resolvedString)
OSIntegration::DEH::RegistryCompatibility::ResolveResources
OSIntegration::DEH::RegistryCompatibility::GetTokenUserStringSid
ConvertSidToStringSid(tokenUser->User.Sid, &stringSid)
OSIntegration::DEH::RegistryCompatibility::IsKeyEmpty
GetTokenInformation(token, TokenUser, tokenUser, sizeof(buffer), &lengthIgnored)
User\
string.Set(static_cast<const WCHAR*>(data), (dataSize / sizeof(WCHAR)) - 1)
\Registry\
Machine\
OSIntegration::DEH::RegistryCompatibility::TryOpenKey
RegCreateKeyEx(ancestor, subkeyPath, 0, nullptr, 0, samDesired | KEY_WOW64_64KEY, nullptr, &handle, disposition)
RegOpenKeyEx(ancestor, subkeyPath, 0, samDesired | KEY_WOW64_64KEY, &handle)
OSIntegration::DEH::RegistryCompatibility::OpenKey
OSIntegration::DEH::RegistryCompatibility::GetKeyName
RegQueryInfoKey(handle, nullptr, nullptr, nullptr, &subkeyCount, nullptr, nullptr, &valueCount, nullptr, nullptr, nullptr, nullptr)
OSIntegration::DEH::RegistryCompatibility::CreateKey
NtQueryKey(handle, KeyBasicInformation, keyBasicInformation, keyBasicInformationSize, &keyBasicInformationSize)
key.HasValue(entryTagValueName)
OSIntegration::DEH::RegistryCompatibility::EntryTree::MakeFromKeyContent
OSIntegration::DEH::RegistryCompatibility::DeleteTree
OSIntegration::DEH::RegistryCompatibility::DeleteValue
hrDeleteExisting
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::Commit
OSIntegration.DEH.RegistryCompatibilityManager
OSIntegration::DEH::RegistryCompatibility::TryReadValue
OSIntegration::DEH::RegistryCompatibility::ReadKeyValuesWithIgnoredValueName
OSIntegration::DEH::RegistryCompatibility::MakeValueData
OSIntegration::DEH::RegistryCompatibility::WriteValue
OSIntegration::DEH::RegistryCompatibility::DeleteKey
OSIntegration::DEH::RegistryCompatibility::ReadKeyContentWithIgnoredValueName
NtSetValueKey(handle, &nameUnicodeString, 0, type, data.pBlobData, data.cbSize)
AddToPurgeList(m_previousOwnerPackageFullName.c_str(), ResourceScopePerPackage, resourcePath.c_str())
DeleteTreeWithExtremePrejudice(m_path, isPackageRemove)
hrRemove
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::DeleteTreeWithExtremePrejudice
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::WriteContent
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::Commit
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::DeleteExistingKey
IsKnownInvalidDeletePath(m_path)
WriteContent(root, m_newContent.value())
DeleteTreeWithExtremePrejudice(m_path, false)
onecore\admin\appmodel\osim\src\deh\winrt\collector\registrycompatibilitymanager.cpp
FixAncestors(root, m_path, m_oldPath, (m_location == KeyLocation::Managed) && !m_newContent.has_value())
WriteContent(root, m_oldContent.value())
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::GetPredefinedKeyForScope
OSIntegration::DEH::RegistryCompatibilityManager::WriteKeyAction::Revert
FixAncestors(root, m_oldPath.value(), m_path)
OSIntegration::DEH::RegistryCompatibilityManager::GetEntryPathAndPackageNamePairsRelevantToPath
m_isMachineRegister
OSIntegration::DEH::RegistryCompatibilityManager::WritePackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::RemovePackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::RemoveActualKey
hrCommit
OSIntegration::DEH::RegistryCompatibilityManager::AddOrReplaceActualKey
scope != GetScope()
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::Revert
FixAncestors(root, m_oldKeyPath.value(), m_keyPath)
FixAncestors(root, m_keyPath, m_oldKeyPath, (m_location == KeyLocation::Managed) && !m_newData.has_value())
DeleteValueNoThrow(root)
OSIntegration::DEH::RegistryCompatibilityManager::ReadPackageEntry
!m_isMachineRegister
OSIntegration::DEH::RegistryCompatibilityManager::WriteValueAction::DeleteValueNoThrow
OSIntegration::DEH::RegistryCompatibilityManager::TryReadPackageEntries
OSIntegration::DEH::RegistryCompatibilityManager::IsKnownInvalidDeletePath
OSIntegration::DEH::RegistryCompatibilityManager::GetPathOfNearestExistingAncestorBeforeCommit
SYSTEM
!InitOnceExecuteOnce(&s_initOnceKnownInvalidDeletePaths, [](PINIT_ONCE, PVOID, PVOID*) { try { static constexpr PCWSTR PathsWithWowNodes[] = { L"SOFTWARE", LR"(SOFTWARE\Classes)", }; static constexpr PCWSTR WowNodeStrings[] = { WOW6432NODE_WSTR, WOWAMD64NODE_WSTR, WOWARMNODE_WSTR, WOWARM64NODE_WSTR }; static constexpr PCWSTR PathsWithoutWowNodes[] = { L"SYSTEM", }; for (auto baseInvalidPath : PathsWithWowNodes) { s_knownInvalidDeletePaths.push_back(baseInvalidPath); for (auto wowNodeString : WowNodeStrings) { std::wstring invalidPath(baseInvalidPath); invalidPath += wowNodeString; s_knownInvalidDeletePaths.push_back(std::move(invalidPath)); } } for (auto invalidPath : PathsWithoutWowNodes) { s_knownInvalidDeletePaths.push_back(invalidPath); } return TRUE; } catch (...) { s_knownInvalidDeletePaths.clear(); return FALSE; } }, nullptr, nullptr)
OSIntegration::DEH::RegistryCompatibilityManager::OpenRootKey
RegOpenCurrentUser(samDesired | KEY_WOW64_64KEY, &handle)
OSIntegration::DEH::RegistryCompatibilityManager::FixAncestors
RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"", 0, samDesired | KEY_WOW64_64KEY, &handle)
OSIntegration::DEH::RegistryCompatibilityManager::GetKeyNameForScope
SOFTWARE\Classes
OSIntegration::DEH::RegistryCompatibilityManager::CommitChanges
OSIntegration::DEH::RegistryCompatibilityManager::RevertChanges
\WowAA32Node
\WowAA64Node
\WOW6432Node
\Wow6464Node
UInt32Add(collectedCharacterCount, GetStringLengthIncludingTerminator(string), &collectedCharacterCount)
StringCchCopy(collectedCharacters + collectedCharacterOffset, collectedCharacterCount - collectedCharacterOffset, GetStringPointer(string))
GetStringLength(string) == 0
UInt32Add(collectedCharacterOffset, sourceLength, &collectedCharacterOffset)
OSIntegration::DEH::RegistryCompatibility::VisitKeys
localManager
CreateRegistryCompatibilityManager
WindowsCreateString(firstNullTerminator, 1, GetAddressOf())
WindowsPreallocateStringBuffer(collectedCharacterCount, &collectedCharacters, &multiStringBuffer)
OSIntegration::DEH::RegistryCompatibility::Details::MultiString::MultiString
OSIntegration::DEH::RegistryCompatibility::Name<0,16383,1>::Name
OSIntegration::DEH::RegistryCompatibility::Key::ExtractValue
MsixRegistryCompatibility.WrittenBy
OSIntegration::DEH::RegistryCompatibility::Key::ExtractSubkey
invalid unordered_map<K, T> key
OSIntegration::DEH::RegistryCompatibility::Details::ToCommonBaseImpl<class OSIntegration::DEH::RegistryCompatibility::ValueData,class OSIntegration::DEH::RegistryCompatibility::Details::VariantWithCommonBase<class OSIntegration::DEH::RegistryCompatibility::ValueData,class OSIntegration::DEH::RegistryCompatibility::RegBinaryValueData,class OSIntegration::DEH::RegistryCompatibility::Details::IntegralTypeValueData<4,unsigned int>,class OSIntegration::DEH::RegistryCompatibility::Details::StringTypeValueData<2>,class OSIntegration::DEH::RegistryCompatibility::RegMultiSzValueData,class OSIntegration::DEH::RegistryCompatibility::Details::IntegralTypeValueData<11,unsigned __int64>,class OSIntegration::DEH::RegistryCompatibility::Details::StringTypeValueData<1>,class OSIntegration::DEH::RegistryCompatibility::GenericValueData> >::ToCommonBase
status
result
MsixRegistryCompatibility.OverwrittenBy
Machine
MsixRegistryCompatibility.EntryPath.
MsixRegistryCompatibility.Entry
Package
SOFTWARE\Microsoft\MsixRegistryCompatibility
Overwritten
Index
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;IU)(A;;0xB;;;BA)(A;;0xB;;;BU)
S:(ML;;NX;;;LW)
(A;;0xB;;;%s)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;BA)(A;;0xB;;;BU)
O:PSG:BAD:(A;;0xB;;;BU)(A;;0xB;;;AC)
OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties
onecore\admin\appmodel\osim\src\deh\errorreporting\errorreportingextensionhandler.cpp
RuntimeExceptionHelperModule
Software\Microsoft\Windows\Windows Error Reporting\RuntimeExceptionHelperModules
remove_all
create_directory
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingextensionhandler.cpp
EventManifests
onecore\internal\com\inc\combase\ComGuid.hpp
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingPathHelpers.hpp
EvtOpenChannelConfig(%ls)
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingWinevtHelpers.hpp
onecore\admin\appmodel\OSIM\src\deh\EventTracing\EventTracingConflictResolution.hpp
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingconflictresolution.cpp
(unpackaged)
Ignoring failure from EvtOpenPublisherMetadata(%ls)
EvtOpenPublisherMetadata(%ls)
Logging
ImportChannel
Channel
Channels
Keywords
Level
MaxSize
Retention
MinBuffers
FileMax
BufferSize
ControlGuid
MessageFile
ResourceFile
Publishing
AutoBackup
Enabled
Access
Isolation
queryPerformanceCounter
systemTime
custom
system
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingextensions.cpp
publishing
SidType
ClockType
Latency
MaxBuffers
debug
analytic
operational
admin
maxSize
retention
autoBackup
logging
bufferSize
controlGuid
keywords
level
events
instrumentation
instrumentationManifest
version="1.0" encoding="UTF-16"
importChannel
channel
channels
provider
helpLink
symbol
Admin
enabled
access
isolation
latency
maxBuffers
minBuffers
fileMax
http://schemas.microsoft.com/win/2004/08/events
sidType
clockType
System
Debug
Analytic
Operational
SystemTime
Custom
#text
onecore\admin\appmodel\osim\src\deh\eventtracing\srdictionarytoxmldomelement.cpp
wevtutil.exe
/messageFilePath:
/resourceFilePath:
uninstall-manifest
install-manifest
/unicode:true
/parameterFilePath:
onecore\admin\appmodel\osim\src\deh\eventtracing\eventtracingregistration.cpp
onecore\admin\appmodel\osim\src\deh\appx\mutabledirectory\MutableDirectoryHandler.hpp
\MutableBackup
\MutablePackageRoot
\LocalCache
\Local\Microsoft\WritablePackageRoot
onecore\admin\appmodel\osim\src\deh\appx\mutabledirectory\mutabledirectoryhandler.cpp
Target
reset
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.userMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectory']
Invalid incoming package manifest
Invalid outgoing package manifest
RemoveContextMenuShellExRegistry failed for outgoing package
WriteContextMenuShellExRegistry failed for incoming package
onecore\admin\appmodel\osim\src\deh\appx\contextmenushellexhandler\contextmenushellexhandler.cpp
*[local-name()='FileExplorerClassicContextMenuHandler']
*[local-name()='FileExplorerClassicDragDropContextMenuHandler']
onecore\admin\appmodel\osim\src\deh\appx\contextmenushellexhandler\contextmenushellexhelper.cpp
*[local-name()='ExtensionHandler']
shellex\ContextMenuHandlers
shellex\DragDropHandlers
CoCreateCLSIDOOP
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
[pre-sqlite3_step] #%u Database %p: Statement %p %s
sqlite3_step
<null>
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
<no-error-message>
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
StateRepository.log
Checkpoint
onecore\base\appmodel\StateRepository\DataAccessLayer\Database.hpp
:memory:
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
StateRepositoryStatus
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
%AppRepository%\StateRepository-User-%UserSid%.srd
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM ApplicationUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageDependency)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRHistory)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM SharedPackageContainer)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
TargetDeviceFamily
(Inbox) Package rows w/no PackageUser references
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin<>2;
(Non-Inbox) Package rows w/no PackageUser references
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 1, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin=2;
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
Package rows w/no PackageUser references
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
Package
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
SourceBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE u.UserSid=?1 AND fta.ContentType=?2 AND p.PackageFullName<>?3 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkID=0 OR pu._WorkId=?4) AND (a._WorkID=0 OR a._WorkId=?4) AND (ae._WorkID=0 OR ae._WorkId=?4) AND (fta._WorkID=0 OR fta._WorkId=?4) ORDER BY pu.InstallTime DESC;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE u.UserSid=?1 AND fta.ContentType=?2 AND p.PackageFullName<>?3 AND p._WorkId=0 AND pu._WorkID=0 AND a._WorkID=0 AND ae._WorkID=0 AND fta._WorkId=0 ORDER BY pu.InstallTime DESC;
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=?3 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
PackageFamily
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
Enterprise
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
PackageUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
SELECT _UserID FROM User WHERE UserSid=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
PackageExternalLocation
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
ExeServerRegistration
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
%s.%s%s
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND _WorkId=0) AND hr._WorkId=0 AND pe._WorkId=0 AND dg._WorkId=0;
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND (_WorkId=0 OR _WorkId=?4)) AND (hr._WorkId=0 OR hr._WorkId=?4) AND (pe._WorkId=0 OR pe._WorkId=?4) AND (dg._WorkId=0 OR dg._WorkId=?4);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime-custom.cpp
PackageExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
Activation
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
HostRuntime
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
MEMORY
temp_store
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
[sqlite3_close] #%u Database %p: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> ROLLBACK;
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> COMMIT;
ATTACH DATABASE '%s' AS '%s';
DETACH DATABASE '%s';
IsInAutoCommitMode() called but !db.IsOpen()
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
PRAGMA %s=%I64d;
locking_mode
synchronous
PRAGMA %s;
PRAGMA %s=%s;
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
journal_mode
journal_size_limit
ANALYZE;
(database)
cache_size
GetChanges() called but !db.IsOpen()
GetTotalChanges() called but !db.IsOpen()
GetLastInsertRowID() called but !db.IsOpen()
PERSIST
NORMAL
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
cannot start a transaction within a transaction
DELETE
TRUNCATE
PRAGMA optimize;
sroptions
workid
startswith
endswith
execution_flags
is_triggers_enabled
is_srjournal_enabled
changeid_next_value
EXCLUSIVE
EXTRA
Hasher.Update(integer) failed
hash_base32() doesn't support double (%d)
Hasher.Update(text) failed
Unknown SQLite datatype %d
EndsWith(string,*suffix*) error: Invalid type (%d)
Compress(x[,level]) error: Invalid type for level (%d)
Compress(x[,level]) error: Invalid level (%d)
Hasher.Start() failed
changeid_next_value() failed
StartsWith(*string*,prefix) error: Invalid type (%d)
StartsWith(string,*prefix*) error: Invalid type (%d)
EndsWith(*string*,suffix) error: Invalid type (%d)
compress
uncompress
hash_base32
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
sqlite3_exec
[pre-sqlite3_prepare] #%u Database %p : SQL %s
sqlite3_prepare_v2
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
Hasher.GetDigestAsBase32(text) failed
Log(*error*,message) error: Invalid type for error (%d)
Log(error,*message*) error: Invalid type for message (%d)
UpdateStatistics
Analyze
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
CustomInstallWork
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
SELECT EXISTS(SELECT 1 FROM CustomInstallWork WHERE _CustomInstallWorkID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM CustomInstallWork WHERE _CustomInstallWorkID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
INSERT INTO CustomInstallWork (_Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
UPDATE CustomInstallWork SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, Flags=?, Status=?, File=?, Arguments=?, _Dictionary=? WHERE _CustomInstallWorkID=? AND _Revision=? AND _WorkId=0;
UPDATE CustomInstallWork SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, Flags=?, Status=?, File=?, Arguments=?, _Dictionary=? WHERE _CustomInstallWorkID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
DELETE FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND _WorkId=0;
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _CustomInstallWorkID, _Revision, _WorkId, User, Package, Name, "Index", Flags, Status, File, Arguments, _Dictionary FROM CustomInstallWork WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
Cpu:%d%s Mem:%d%s Io:%d%s
Cpu:%d%s Mem:%d%s Io:%d%s
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)SELECT COUNT(*), GROUP_CONCAT(t.PackageUserID) FROM BundleInfo AS t WHERE t.PackageType=8   AND NOT EXISTS(        SELECT 1 FROM Package AS p         INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID         WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8       );
UPDATE PackageUser SET DeploymentState=1 WHERE DeploymentState=6 AND Package IN (     SELECT _PackageID FROM Package      WHERE PackageOrigin =2);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=? LIMIT 1);
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
SELECT COUNT(*), GROUP_CONCAT(pu.rowid) FROM PackageUser AS pu INNER JOIN Package AS p on p._PackageID=pu.Package WHERE p.PackageOrigin=2 AND pu.DeploymentState=6;
PackageUser rows for Inbox packages cannot be DeploymentState=Paused
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
MachineDatabasePageSize
RepairGhostMinimumAgeForDeletion
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseOptions
DownlevelMachineDatabase
CheckpointInterval
DownlevelMachineDatabaseCacheSize
DatabaseStatisticsUpdateInterval
Policy.Aggressive.ConnectionMinCount
DatabaseCorruptionFirstDetectedWhen
MachineDatabaseJournalSizeLimit
DownlevelMachineDatabaseCheckpointThreshold
MaintenanceMaxClockDelta
Policy.Normal.StatementMinCount
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Aggressive.GCInterval
PackageRepositoryRoot
WaitForRequestsInUseTimeout
%AppRepository%
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseCacheSize
UserDatabaseStatisticsLastUpdated
DatabaseCorruptionLastReported
Deployment
DownlevelMachineDatabaseFileChunkSize
BusyMaxTimeout
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Policy.Aggressive.ConnectionMaxAge
AccessControlFlags
ServiceIdleTimeout
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
DownlevelMachineDatabaseOptions
CheckpointMaxClockDelta
MachineDatabaseFileChunkSize
MachineDatabaseOptions
DeploymentDatabaseStatisticsLastUpdated
DeploymentDatabase
DeploymentDatabaseCheckpointThreshold
DownlevelMachineDatabasePageSize
DownlevelMachineDatabaseJournalSizeLimit
DatabaseCorruptionFirstDetectedUptime
MachineDatabaseAutoCheckpoint
Options
BusyDelayBetweenRetries
Policy.Aggressive.StatementMinCount
Policy.Aggressive.ConnectionMaxCount
DeploymentDatabasePageSize
Policy.Normal.StatementMaxCount
ServiceWaitHintInterval
MachineDatabaseCheckpointThreshold
Policy.Aggressive.StatementMaxAge
DownlevelMachineDatabaseStatisticsLastUpdated
MachineDatabaseStatisticsLastUpdated
DeploymentDatabaseFileChunkSize
GCChangelogsInterval
Policy.Aggressive.StatementMaxCount
DatabaseStatisticsUpdateMaxClockDelta
GCTimeToLiveExpiredInterval
MachineDatabase
DatabaseStatisticsUpdateMaintenanceTaskInterval
Policy.Normal.ConnectionMaxAge
BusyTimeout
MaintenanceInterval
DownlevelMachineDatabaseAutoCheckpoint
MachineDatabaseCacheSize
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
CreateSetting: Subkey=%ls
OpenSetting: Subkey=%ls
ReadSetting: Name=%ls
WriteSetting: Name=%ls
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
Required configuration data not found: %ws
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
<Error 0x%X moving command line>
<No commandline present>
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
GetTempPath2W
<Error 0x%X converting the user's SID to a string>
<Error allocating memory>
<Error 0x%X in QueryFullProcessImageNameW>
<Error 0x%X in NtQueryInformationProcess>
<None>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X getting the user's SID from the process' token>
<Unknown>
<Error 0x%X in OpenProcessToken>
onecore\private\base\inc\AppModel\Common\FileInUse.hpp
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
Filename:%s, SQL:%s, TxCallerId:%hs %ls
OpenProcess() failed on %u of %u for %hs
automatic index on PackageIdByAll(_PackageID)
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
Warning
Information
Verbose
Profile
Trace
Critical
Error
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.FirstBusySQL
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
ExpandedSQL=%hs
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.BusyCount
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
Machine
Deployment
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
DependencyGraph
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DependentPackage
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SupplierPackage
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
AppxExtension
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
ApplicationUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
ApplicationIdentity
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
Application
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
PackageLocation
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
PackagePolicy
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
WowDependencyGraph
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AppInstaller)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AutoUpdatePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageDependency)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
BundlePackage
Bundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
Dependency
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
MrtPackage
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
MrtSharedPri
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
NamedDependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackageProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
Resource
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
XboxPackage
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PublisherCacheFolder
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
ApplicationExtension
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
AppUriHandler
AppUriHandlerGroup
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Extension
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
Clear
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory.cpp
SRHistory
PackageIdentity
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
Partition %d not supported by GC()
CheckAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
FixAllCascadingInDeploymentPartition
CheckAllCascadingInMachinePartition
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
INSERT OR IGNORE INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
ApplicationContentUriRule
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
ApplicationProperty
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DefaultTile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
MrtApplication
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
PostCheckAllCascadingInMachinePartition
PostFixAllCascadingInMachinePartition
UPDATE Sequence SET LastValue=? WHERE Id=?;
SELECT LastValue FROM Sequence WHERE Id=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
BundleResource
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
OptionalBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
MainBundle
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
AppExecutionAlias
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
AppExtension
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
AppExtensionHost
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppService
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
ApplicationBackgroundTask
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
FileTypeAssociation
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Protocol
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM ApplicationUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AppInstaller WHERE (PackageFamily = 0) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AppInstallerUri)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AutoUpdatePackage)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
DELETE FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
AppInstaller
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
MigratorPatch
MrtUserPri
MrtDefaultTile
DynamicAppUriHandler
DeploymentHistory
EndOfLifePackage
DynamicAppUriHandlerGroup
ConnectedSetPackageFamily
ConnectedSet
ContentGroupFile
ContentGroup
AppInstallerUri
AppExecutionAliasUser
AutoUpdatePackage
AppxManifest
PrimaryTileUserChangelog
PrimaryTileUser
ProvisionedPackageDeleted
ProvisionedPackage
PackageSuperceded
PackageSourceUri
PrimaryTile
PackageUserStatus
PackageFamilyUser
PackageFamilyPolicy
PackageMachineStatus
PackageFamilyUserResource
OptionalBundleResource
OptionalBundlePackage
PackageDependency
PackageAppInstaller
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
SharedPackageContainerPackageFamily
SecondaryTileUserChangelog
SecondaryTileUser
SharedPackageContainer
SRJournal
ProvisionedPackageExclude
SecondaryTile
SRJournalArchive
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagedependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT _PackageFamilyUserID, _Revision, PackageFamily, User, WhenInstalled, _Dictionary FROM PackageFamilyUser WHERE User=? AND PackageFamily=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainer.cpp
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
INSERT INTO PackageUserStatus (_Revision, PackageIdentity, User, Status, _Dictionary) VALUES(?,?,?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainerpackagefamily.cpp
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE (_WorkId=0 OR _WorkId=?);
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
DELETE FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,compress(?),?);
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri.cpp
DELETE FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage.cpp
DELETE FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
Flags
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus-custom.cpp
SELECT pus.Status FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=?;
DELETE FROM PackageUserStatus AS pus WHERE User IN ( SELECT _UserID FROM User WHERE UserSid=?) AND PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?);
UPDATE PackageUserStatus SET Status=?3 WHERE PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?2) AND User IN (SELECT _UserID FROM User WHERE UserSid=?1);
SELECT EXISTS(SELECT 1 FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=? LIMIT 1);
DELETE FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
SELECT COUNT(*), GROUP_CONCAT(pus.rowid) FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
PackageRow was not initialized with lazy init info. Cannot query external location info.
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\printscan\print\lib\appprinterinstallationlib\appprinterinstaller\appprinterinstaller.cpp
,XcvMonitor AppMon
need dictionary
incorrect header check
incorrect data check
invalid window size
unknown compression method
file error
stream end
incompatible version
data error
stream error
buffer error
insufficient memory
invalid bit length repeat
too many length or distance symbols
invalid stored block lengths
invalid block type
incomplete literal/length tree
oversubscribed literal/length tree
incomplete distance tree
oversubscribed distance tree
incomplete dynamic bit lengths tree
oversubscribed dynamic bit lengths tree
empty distance tree with lengths
invalid distance code
invalid literal/length code
onecore\admin\appmodel\osim\src\deh\baseclasses\mainpackagedeploymentextensionhandler.cpp
CreateRegistryCompatibilityCollector(&registryCompatibilityCollector)
CreateRegistryCompatibilityCollectorForUserOrSystemRegister(userToken, &registryCompatibilityCollectorForUserOrSystemRegister)
CreatePackagedComCatalogCollector(&packagedComCatalogCollector)
CreatePackagedComCatalogCollectorForUserOrSystemRegister(userToken, &packagedComCatalogCollectorForUserOrSystemRegister)
CreateActivationCatalogCollectorForUser(&activationCatalogCollectorForUser)
CreateExtensionCatalogCollector(&extensionCatalogCollector)
OSIntegration::DEH::Collectors::RuntimeClassInitialize
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
CreateActivationCatalogCollector(&activationCatalogCollector)
OSIntegration.DEH.Collectors
RegistryMapFactory< IExeServerRegistration * >::RegistryMap::Make(&_exeServers)
_exeServers->Insert(serverName.Get(), static_cast<IExeServerRegistration*>(server), &replaced)
OSIntegration::DEH::ActivationCatalogCollector::AddServerRegistration
serverName.Initialize(server->get_ServerName())
_outOfProcessActivatableClasses->Insert(acid.Get(), static_cast<IExeServerActivatableClassRegistration*>(activatableClass), &replaced)
server
OSIntegration::DEH::ActivationCatalogCollector::AddOutOfProcessActivatableClassRegistration
RegistryMapFactory< IExeServerActivatableClassRegistration * >::RegistryMap::Make(&_outOfProcessActivatableClasses)
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
acid.Initialize(activatableClass->get_ActivatableClassId())
activatableClass
_exeServers->Lookup(serverName, &registration)
_exeServers->HasKey(serverName, found)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveServerRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveOutOfProcessActivatableClassRegistration
_outOfProcessActivatableClasses->Lookup(activatableClassId, &registration)
_inProcessActivatableClasses->Lookup(activatableClassId, &registration)
_outOfProcessActivatableClasses->HasKey(activatableClassId, found)
_inProcessActivatableClasses->HasKey(activatableClassId, found)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveInProcessActivatableClassRegistration
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite
Unable to stage pending writes to activation catalog.
PendingWriteInterfaces(packageMoniker, registrationStoreContext.Get())
hrPendingWrite
PendingWriteOutOfProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
PendingWriteProxyStubs(packageMoniker, registrationStoreContext.Get())
PendingWriteExeSevers(incomingPackage, registrationStoreContext.Get())
PendingWriteInProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite::<lambda_e8da1d624f5a8bd4a8ff673fff0627a1>::operator ()
registrationStoreContext->CreatePackage(packageMoniker.Get(), packageIsFramework)
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStoreContext))
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IDllServerActivatableClassRegistration* > * keyValuePair ) -> HRESULT { ComPtr< IDllServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); RETURN_IF_FAILED(static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses::<lambda_20cd266dcdfb7323e024d33da7893824>::operator ()
_inProcessActivatableClasses->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses::<lambda_17e64c4b6c9e7cc51bb10fcfe94be8eb>::operator ()
static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)
MyForEach(iterator, [this, incomingPackage, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerRegistration > serverInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&serverInterface)); RETURN_IF_FAILED(static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)); return S_OK; })
keyValuePair->get_Value(&classInterface)
_exeServers->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers::<lambda_1aa3892973072908dcbd7084db467598>::operator ()
static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)
OSIntegration::DEH::ActivationCatalogCollectorForUser::PendingRemove
keyValuePair->get_Value(&serverInterface)
OSIntegration::DEH::ActivationCatalogCollector::PendingRemove
registrationStoreContext->RemoveActivationEntriesForPackage( packageMoniker.Get(), deploymentOperation, outgoingPackage->GetIsFramework())
registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))
_interfaceRegistrations->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces::<lambda_4322a56d354eb0685e0659bd47d7f47b>::operator ()
keyValuePair->get_Value(&itf)
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > proxyStub; Windows::Internal::String clsid; RETURN_IF_FAILED(keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&proxyStub)); RETURN_IF_FAILED(registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))); return S_OK; })
keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())
_proxyStubRegistrations->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs
keyValuePair->get_Value(&proxyStub)
registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))
keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs::<lambda_e82a56ad4bd550ceabcd0284a54fe13c>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerActivatableClassRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); OutOfProcessActivatableClassRegistration_Impl *activatableClass = static_cast< OutOfProcessActivatableClassRegistration_Impl* >(classInterface.Get()); RETURN_IF_FAILED(activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)
_outOfProcessActivatableClasses->First(&iterator)
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Create
ERROR_BAD_ARGUMENTS
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration(activatableClassId, &found, &retrievedOutOfProcClassRegistration)
HRESULT_FROM_WIN32(160L)
APPX_E_INVALID_MANIFEST
collectors->GetActivationCatalogCollector()->RetrieveInProcessActivatableClassRegistration(activatableClassId, &found, &retrievedInProcClassRegistration)
((HRESULT)0x80080204L)
MakeAndInitialize<ActivationCatalogCollectorForUser>(collector)
OSIntegration::DEH::CreateActivationCatalogCollectorForUser
MakeAndInitialize<ActivationCatalogCollector>(collector)
OSIntegration::DEH::CreateActivationCatalogCollector
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > itf; Windows::Internal::String iid; RETURN_IF_FAILED(keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&itf)); RETURN_IF_FAILED(registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))); return S_OK; })
collectors->GetActivationCatalogCollector()->AddServerRegistration(serverRegistration.Get())
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &retrievedServerRegistration)
ExeServerRegistration_Impl::Create(serverName, &serverRegistration)
ERROR_INVALID_DATA
OSIntegration::DEH::ExeServerRegistration::Create
collectors->GetActivationCatalogCollector()->AddOutOfProcessActivatableClassRegistration(classRegistration.Get())
HRESULT_FROM_WIN32(13L)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &serverRegistration)
OutOfProcessActivatableClassRegistration_Impl::Create(activatableClassId, serverRegistration.Get(), &classRegistration)
f(item.Get())
iterator->MoveNext(&hasCurrent)
MyForEach
iterator->get_Current(&item)
OSIntegration::DEH::ExeServerRegistration::Retrieve
iterator->get_HasCurrent(&hasCurrent)
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Retrieve
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration( serverName, &found, &serverRegistration)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration( activatableClassId, &found, &outOfProcessRegistration)
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.ActivationCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Object>
]|pIX
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
+ *Px
Windows.Foundation.Collections.IMap`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
OSIntegration::DEH::Internal::CExtensionRegistration::get_ActivatableClassId
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
OSIntegration.DEH.ExtensionRegistration
copy.Initialize(_activatableClassId.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::put_Description
_spAttributesMap->GetView(spAttributesMapView.GetAddressOf())
copy.Initialize(_properties.Description.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Description
OSIntegration::DEH::Internal::CExtensionRegistration::get_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::put_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::put_Icon
copy.Initialize(_properties.DisplayName.Get())
copy.Initialize(_properties.Icon.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Icon
((HRESULT)0x80070057L)
OSIntegration::DEH::Internal::CExtensionRegistration::put_Vendor
copy.Initialize(_properties.Vendor.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Vendor
copy.Initialize(_contractId.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_ContractId
OSIntegration::DEH::Internal::CExtensionRegistration::CheckAttributeNameDoesNotCollide
hrRuntimeClassInitialize
_spAttributesCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::CExtensionRegistration::PendingWriteToStore
extensionCatalogContext->CreateExtensionEntry( _contractId.Get(), packageMoniker, _activatableClassId.Get(), _properties)
_spPropertyValueFactory->CreateUInt32(value, &spPropertyValue)
_spAttributesMap->GetView(_properties.CustomProperties.MapView.ReleaseAndGetAddressOf())
_spPropertyValueFactory->CreateString(value, &spPropertyValue)
_spAttributesCollisionMap->Remove(keyName)
OSIntegration::DEH::Internal::CExtensionRegistration::AddAttribute
_spAttributesCollisionMap->Insert(keyName, keyName, &fReplaced)
OSIntegration::DEH::Internal::CExtensionRegistration::get_Attributes
((HRESULT)0x8007000EL)
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite
ForEachExtensionRegistration(extensionRegistrationMap.Get(), [&](Internal::CExtensionRegistration* extensionRegistration) { StringReference packageMoniker(incomingPackage->GetPackageMoniker()); RETURN_HR(extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())); })
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite::<lambda_876117454afcc4e850e10f8e1c8f984f>::operator ()
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&extensionCatalogContext))
extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())
OSIntegration::DEH::ExtensionCatalogCollector::RetrieveExtensionRegistration
E_OUTOFMEMORY
hrLookup
contractIdCopy.Set(contractId.Get())
hrInsert
OSIntegration::DEH::ExtensionCatalogCollector::RuntimeClassInitialize
OSIntegration::DEH::ExtensionCatalogCollector::CreateExtensionRegistration
spKeyValuePair->get_Value(&spExtensionRegistration)
lambda(spExtensionRegistration.Get())
spIterator->get_HasCurrent(&bHasCurrent)
spIterator->get_Current(spKeyValuePair.GetAddressOf())
pIterable->First(&spIterator)
OSIntegration::DEH::ForEachExtensionRegistration
collectors->GetExtensionCatalogCollector()->RetrieveExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
OSIntegration::DEH::ExtensionRegistration::Retrieve
collectors->GetExtensionCatalogCollector()->CreateExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
OSIntegration::DEH::ExtensionRegistration::Create
MakeAndInitialize<ExtensionCatalogCollector>(collector)
OSIntegration::DEH::CreateExtensionCatalogCollector
OSIntegration::DEH::ExtensionCatalogCollector::PendingRemove
extensionCatalogContext->RemoveExtensionEntriesForPackage(packageMoniker.Get(), deploymentOperation)
spIterator->MoveNext(&bHasCurrent)
OSIntegration.DEH.ExtensionCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
eOSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Destroy
WindowsDeleteString(initializedElement->contractId)
WindowsDeleteString(initializedElement->activatableClassId)
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
hrDuplicateString
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Construct
WindowsDuplicateString(source.contractId, &uninitializedElement->contractId)
WindowsDeleteString(uninitializedElement->contractId)
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
machineDatabase == nullptr
OSIntegration::DEH::TryGetPackageFamilySystemRegisterTimestampForPackage
PackageFamilyNameFromFullName(packageFullName, &packageFamilyNameLength, packageFamilyName)
PackageFamily::TryGetByPackageFamilyName(database, packageFamilyName, packageFamily, packageFamilyFound)
OSIntegration::DEH::TryGetPackageAndPackageFamilyPrimaryKeysForPackage
onecore\admin\appmodel\osim\src\deh\winrt\collector\getpackagefamilytimestamp.cpp
Package::TryGetByPackageFullName(database, packageFullName, package, packageFound)
PackageFamilyUser::TryGetByUserAndPackageFamily(*machineDatabase, user.Get_PrimaryKey(), packageFamilyKey, packageFamilyUser, packageFamilyUserFound)
PackageUser::TryGetByUserAndPackage(*machineDatabase, user.Get_PrimaryKey(), packageKey, packageUser, packageUserFound)
User::TryGetByUserSid(*machineDatabase, userSid, user, userFound)
TryGetPackageAndPackageFamilyPrimaryKeysForPackage(*machineDatabase, packageFullName, allowUnregisteredPackage, packageKey, packageFound, packageFamilyKey, packageFamilyFound)
TryGetPackageFamilySystemRegisterTimestampForPackage(machineDatabase, packageFullName, optionalTimestamp, allowUnregisteredPackage)
OSIntegration::DEH::TryGetPackageFamilyUserRegisterTimestampForPackage
TryGetPackageAndPackageFamilyPrimaryKeysForPackage(*machineDatabase, packageFullName, allowUnregisteredPackage, packageKey, packageFound, packageFamilyKey, packageFamilyFound, &packageIsSystemRegistered)
OSIntegration::DEH::GetPackageFamilySystemRegisterTimestampForPackage
(HashMap<CLSID, ComProxyStubRegistration*>::Make(&_proxyStubs))
(HashMap<IID, ComInterfaceRegistration*>::Make(&_interfaces))
OSIntegration::DEH::PackagedComCatalogCollector::RuntimeClassInitialize
(HashMap<CLSID, Internal::ComClassRegistrationCombinedProperties*>::Make(&_classes))
OSIntegration::DEH::ComTreatAsClassRegistration::CreateCompatibilityEntries
(HashMap<UINT32, IComServerRegistration*>::Make(&_servers))
OSIntegration::DEH::ComTreatAsClassRegistration::PendingWriteRegistration
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), Key(clsidKey))
OSIntegration::DEH::ComTreatAsClassRegistration::SetHasMachineScope
registrationStore->CreateComTreatAsClassEntry(packageMoniker, _id, _properties)
SetRegistrationProperty(_properties.AutoConvertTo, autoConvertTo)
OSIntegration::DEH::ComTreatAsClassRegistration::SetAutoConvertTo
OSIntegration::DEH::ComProgIdRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComTreatAsClassRegistration::SetDisplayName
versionNumberString.Set(versionNumber)
OSIntegration::DEH::PackagedComCatalogCollector::CreateTypeLibRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInterfaceRegistration
_interfaces->Insert(interfaceId, spRegistration.Get(), &replaced)
_proxyStubs->Insert(proxyStubClassId, spRegistration.Get(), &replaced)
replaced
spRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateProxyStubRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateSurrogateServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateServiceServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateExeServerRegistration
_servers->Insert(serverId, serverRegistration.Get(), &replaced)
(HashMap<CLSID, ComTreatAsClassRegistration*>::Make(&_treatAsClasses))
serverRegistration
RegistryMapFactory<ComTypeLibRegistration*>::RegistryMap::Make(&_typeLibs)
RegistryMapFactory<ComProgIdRegistration*>::RegistryMap::Make(&_progIds)
OSIntegration::DEH::PackagedComCatalogCollector::PendingWrite
PendingWriteForEachRegistration( _classes.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::CreateManagedInprocServerClassRegistration
PendingWriteForEachRegistration( _servers.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocHandlerClassRegistration
MakeAndInitialize<ComManagedInprocServerClassRegistration>(&classRegistration, _classes.Get(), classId)
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocServerClassRegistration
MakeAndInitialize<ComInprocHandlerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
_treatAsClasses->Insert(classId, spRegistration.Get(), &replaced)
MakeAndInitialize<ComInprocServerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
_progIds->Insert(progId, spRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateTreatAsClassRegistration
progIdString.Set(progId)
OSIntegration::DEH::PackagedComCatalogCollector::CreateProgIdRegistration
WindowsConcatString( Wrappers::HStringReference(typeLibIdString).Get(), versionNumber, typeLibKey.GetAddressOf())
_typeLibs->Insert(typeLibKey.Get(), spRegistration.Get(), &replaced)
packagedComContext->GetComClassEntriesForPackage(packageMoniker.Get(), &classesHandle)
packagedComContext->TryGetComClassIdForPackageByIndex(classesHandle, classIndex, &hasEntryAtIndex, &clsid)
registrationStoreContext.query_to(&packagedComContext)
hrReadEntry
hasAnyClasses
RoGetRegistrationStoreContext(Windows::Foundation::RegistrationScope_PerUser, nullptr, 0, IID_PPV_ARGS(&registrationStoreContext))
OSIntegration::DEH::PackagedComCatalogCollector::SetIsAdditiveMode
GetHasAnyClasses(&hasAnyClasses)
spRegistrationStore->TryGetComPackageInstallOrder(packageMoniker.Get(), false , installOrder)
_serverCount > 0
PendingWriteForEachRegistration( _treatAsClasses.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::PendingRemove
PendingWriteForEachRegistration( _typeLibs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _progIds.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _proxyStubs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _interfaces.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyTypeLibRegistrationsForScope
registrationStore->TryGetComTypeLibIdForPackageByIndex(typeLibsHandle, typeLibIndex, &hasTypeLibAtIndex, &typeLibId)
spRegistrationStore->RemoveComPackageInstallOrderEntry( packageMoniker.Get(), IsUserRegister(), deploymentOperation)
registrationStore->GetComTypeLibsForPackage(packageFullName, &typeLibsHandle)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingRemove
spRegistrationStore->TryGetComPackageInstallOrder( packageMoniker.Get(), IsUserRegister(), outgoingPackageInstallOrder)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingWrite
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&spRegistrationStore))
OSIntegration::DEH::PackagedComCatalogCollector::GetHasAnyClasses
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStore))
registryCompatibilityCollectorTestHooks->SetIsAdditiveMode(incomingPackage)
_classes->First(&iterator)
_classes->Insert(clsid, classProperties.Get(), &replaced)
registryCompatibilityCollector.query_to(&registryCompatibilityCollectorTestHooks)
packagedComContext->ReadComClassEntry(packageMoniker.Get(), clsid, properties)
classProperties
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetIncomingPackageInstallOrder
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetMaxInstallOrder
registrationStore->CreateComPackageInstallOrderEntry( packageFullName, IsUserRegister(), m_incomingPackageProperties)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::GetMaxInstallOrder
registrationStore->CreateComPackageInstallOrderEntry( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), m_maxInstallOrderProperties)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasComRegistrationsForCurrentScope
registrationStore->TryGetComPackageInstallOrder( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), maxInstallOrder)
registrationStore->ReadComTypeLibEntry(packageFullName, typeLibId, versionId.get(), properties)
registrationStore->CheckComPackageExists(packageFullName, &packageHasComRegistrations)
registrationStore->GetComTypeLib(packageFullName, typeLibId, &typeLibHandle)
registrationStore->TryGetComTypeLibVersionIdByIndex(typeLibHandle, versionIndex, &hasVersionAtIndex, &versionId)
classRegistration->SetExeServerPath(_properties.Executable.Value.Get(), _properties.IsSystemExecutable.GetValueOrDefault(false), _properties.SystemExecutableArchitecture.GetValueOrDefault(IMAGE_FILE_MACHINE_UNKNOWN))
classRegistration->SetExeServerArguments(_properties.Arguments.Value.Get())
classRegistration->SetAppId(_appId.Value)
classRegistration->SetApplicationDisplayName( _properties.ApplicationDisplayName.Value.Get())
OSIntegration::DEH::ComServerRegistration::CreateClassRegistration
MakeAndInitialize<ClassRegistrationType>(&classRegistration, _classes.get(), classId, _id)
property.Present && (property.Value != value)
SetRegistrationProperty(_appId, classId)
property.Present
SetRegistrationProperty(property.Value, value)
MakeAndInitialize<PackagedComCatalogCollectorForUserOrSystemRegister>(collector, userToken)
OSIntegration::DEH::CreatePackagedComCatalogCollectorForUserOrSystemRegister
MakeAndInitialize<PackagedComCatalogCollector>(collector)
OSIntegration::DEH::CreatePackagedComCatalogCollector
(registrationStore->*Traits::readEntry)(packageFullName, EntryIdRaiiTraits::UnwrapRaiiType(entryId), properties, nullptr, nullptr)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyRegistrationsOfTypeForScope
(registrationStore->*Traits::tryGetEntryIdForPackageByIndex)(entriesHandle, index, &hasEntryAtIndex, &entryId)
spPackagedComRegistration->PendingWriteRegistration( packageMoniker.Get(), incomingPackage, resourcesManager, spRegistrationStore.Get())
(registrationStore->*Traits::getEntriesForPackage)(packageFullName, &entriesHandle)
registrationScope->SetHasMachineScope(true)
spRegistration.As(&spPackagedComRegistration)
OSIntegration::DEH::PackagedComCatalogCollector::PendingWriteForEachRegistration
pair->get_Value(&spRegistration)
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
I*VwZ
9Y8IL
.wil::err_failfast_policy::HResult
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IVector`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
B7Xzz
UInt32Add(lengthIncludingNullTerminator, 1, &lengthIncludingNullTerminator)
UInt32Add(collectedCharacterCount, lengthIncludingNullTerminator, &collectedCharacterCount)
!current.IsValid()
SetRegistrationPropertyAllowMultipleIfConsistent
wil::make_hstring_from_buffer_nothrow(wistd::move(multiStringBuffer), GetAddressOf())
MultiString::InitializeFromStringArray
StringCchCopy(collectedCharacters + collectedCharaterOffset, collectedCharacterCount - collectedCharaterOffset, sourceCharacters)
UInt32Add(collectedCharaterOffset, sourceLength + 1, &collectedCharaterOffset)
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComTypeLibRegistration>
SetRegistrationProperty
onecore\private\com\inc\deployment\RegistrationStore.hpp
StringHasEmbeddedNull(value)
#wil::make_unique_string_nothrow
!source && (length == static_cast<size_t>(-1))
Assembly
{00020424-0000-0000-C000-000000000046}
Class
RuntimeVersion
LocalService
LaunchPermission
Interactive User
RunAs
AsynchronousInterface
ServiceParameters
SynchronousInterface
ProxyStubClsid32
win32
Version
FLAGS
win64
SOFTWARE\Classes
HELPDIR
mscoree.dll
ole32.dll
Neutral
Insertable
Implemented Categories
ServerExecutable
LocalServer32
ProgID
MiscStatus
ToolBoxBitmap32
TreatAs
VersionIndependentProgID
Programmable
Control
DllSurrogate
CurVer
AutoConvertTo
TypeLib
Conversion
AuxUserType
ReadWritable
Readable
DataFormats
GetSet
DefaultFile
InprocHandler32
DefaultIcon
ThreadingModel
InprocServer32
Apartment
CLSID
AppID
heapBuffer
Com::Catalog::Win32Registry::Details::GetStringValue
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%x", value)
Uint32HexString::Uint32HexString
onecore\admin\appmodel\OSIM\src\deh\WinRT\Inc\Uint32String.hpp
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%u", value)
Uint32String::Uint32String
Com::Catalog::Win32Registry::GetInprocServer32Properties
::RegOpenKeyExW(clsidKey.get(), Constants::InprocServer32, 0 , KEY_READ, &inprocServer32Key)
::RegOpenKeyExW(clsidTopLevelKey.get(), GuidString(clsid), 0 , samDesired, key)
OpenClsidKey(whichHive, clsid, KEY_READ, &clsidKey)
Com::Catalog::Win32Registry::OpenClsidKey
::RegOpenKeyExW(classesRootKey.get(), Constants::CLSID, 0 , KEY_READ, &clsidTopLevelKey)
Com::Catalog::Win32Registry::OpenClassesRootKey
OpenClassesRootKey(whichHive, KEY_READ, &classesRootKey)
::RegOpenKeyExW(GetHiveKey(whichHive), GetClassesRootPathRelativeToHiveKey(whichHive), 0 , samDesired, key)
*value
onecore\private\com\inc\combase\ComRegistryCatalogFunctions.hpp
getValueResult
OSIntegration::DEH::Internal::GetSystemFileAbsolutePath
PathAllocCombine(systemDirectoryCharacters, relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
Failed call to GetSystemDirectory/GetSystemWow64Directory2. imageFileMachine=%u
systemDirectoryLength == 0
PathAllocCombine(incomingPackage->GetPackageRoot(), relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
OSIntegration::DEH::Internal::GetPackagedFileAbsolutePath
Interface
TypeLib
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
AppID
Details::GetStringValueExpanded(inprocServer32Key.get(), L"", dllPath)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DisplayName, displayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDisplayName
SetRegistrationProperty(_properties.ServerId, serverId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetServerId
OSIntegration::DEH::Internal::GetVirtualizationManagerDllFilename
MaxInstallOrder
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\"", executableAbsolutePath)
GetInprocServer32Properties(WhichHive::LocalMachine, __uuidof(PackagedInprocClassVirtualizationManager), &g_virtualizationManagerDllPath)
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\" %ls", executableAbsolutePath, arguments)
"%ls"
commandLine
"%ls" %ls
SizeTAdd(commandLineLength, 1, &commandLineLength)
SizeTAdd(commandLineLength, wcslen(arguments), &commandLineLength)
SizeTAdd(commandLineLength, 2, &commandLineLength)
OSIntegration::DEH::Internal::ConstructCommandLine
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddImplementedCategory
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_implementedCategories)
_properties.InsertableObject.Present
CreatePropertyValueFactoryIfNecessary()
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInsertableObject
AddImplementedCategory(CATID_Insertable)
SetRegistrationProperty(_properties.EnableOleDefaultHandler, true)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.InsertableObject, true)
_properties.EnableOleDefaultHandler.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOleDefaultHandler
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.VersionIndependentProgId, versionIndependentProgId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetVersionIndependentProgId
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ProgId, progId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetProgId
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ShortDisplayName, shortDisplayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetShortDisplayName
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.ConversionReadWritable, readWritable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadWritable
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ConversionReadable, readable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadable
_dataFormats->IndexOf(dataFormat, &indexIgnored, &found)
_dataFormats->Append(dataFormat)
Vector<HSTRING>::Make(&_dataFormats)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddDataFormat
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultFormatName, defaultFormatName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultFormatName
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultIcon, defaultIcon)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultIcon
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.AutoConvertTo, autoConvertTo)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAutoConvertTo
_propertyValueFactory->CreateUInt32(0, &categoryPropValue)
_implementedCategories->Insert(Wrappers::HStringReference(categoryKey).Get(), categoryPropValue.Get(), &replacedIgnored)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddMiscStatusAspect
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_miscStatusAspects)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.MiscStatusDefault, miscStatusDefault)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetMiscStatusDefault
_propertyValueFactory->CreateString(verb, &verbPropValue)
_verbs->Insert(verbId, verbPropValue.Get(), &replacedIgnored)
existingVerbPropValue->GetString(existingVerb.GetAddressOf())
verb != existingVerb
_verbs->HasKey(verbId, &alreadyHasKey)
_verbs->Lookup(verbId, &existingVerbPropValue)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddVerb
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_verbs)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLibWithVersion
SetRegistrationProperty(_properties.TypeLibVersionNumber, typeLibVersionNumber)
SetRegistrationProperty(_properties.TypeLibId, typeLibId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLib
SetRegistrationProperty(_properties.OutofprocClassHasMachineScope, true)
SetRegistrationProperty(_properties.InprocServerDllPath_x86, path)
_properties.OutofprocClassHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOutofprocClassHasMachineScope
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.Threading, static_cast<ThreadingModel>(threadingModel))
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetThreadingModel
SetRegistrationProperty(_properties.DllPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDllPath
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ToolboxBitmap32, toolboxBitmap32)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetToolboxBitmap32
_propertyValueFactory->CreateString(miscStatus, &miscStatusPropValue)
_miscStatusAspects->Insert(aspect, miscStatusPropValue.Get(), &replacedIgnored)
existingMiscStatusPropValue->GetString(existingMiscStatus.GetAddressOf())
miscStatus != existingMiscStatus
_miscStatusAspects->HasKey(aspect, &alreadyHasKey)
_miscStatusAspects->Lookup(aspect, &existingMiscStatusPropValue)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocServer
SetRegistrationProperty(_properties.EnableVirtualizationForInprocServer, true)
SetRegistrationProperty(_properties.InprocServerHasMachineScope, true)
_properties.EnableVirtualizationForInprocServer.Present
_properties.InprocServerHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetIsSystemInprocServerDll
SetRegistrationProperty(_properties.IsSystemInprocServerDll, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm64
_properties.IsSystemInprocServerDll.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm
SetRegistrationProperty(_properties.InprocServerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x64
SetRegistrationProperty(_properties.InprocServerDllPath_arm, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x86
SetRegistrationProperty(_properties.InprocServerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddUint32CustomAttribute
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_customAttributes)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocHandler
SetRegistrationProperty(_properties.EnableVirtualizationForInprocHandler, true)
SetRegistrationProperty(_properties.InprocHandlerHasMachineScope, true)
_properties.EnableVirtualizationForInprocHandler.Present
_properties.InprocHandlerHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerHasMachineScope
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm64
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm
SetRegistrationProperty(_properties.InprocHandlerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x64
SetRegistrationProperty(_properties.InprocHandlerDllPath_x86, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x86
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerPath
SetRegistrationProperty(_exeServerArguments, arguments)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetApplicationDisplayName
SetRegistrationProperty(_exeServerPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAppId
SetRegistrationProperty(_applicationDisplayName, applicationName)
_propertyValueFactory->CreateString(value, &propValue)
SetRegistrationProperty(_appId, appId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringCustomAttribute
existingPropValue->GetString(existingValue.GetAddressOf())
_propertyValueFactory->CreateUInt32(value, &propValue)
_customAttributes->Insert(name, propValue.Get(), &replacedIgnored)
existingPropValue->GetUInt32(&existingValue)
value != existingValue
_customAttributes->HasKey(name, &alreadyHasKey)
_customAttributes->Lookup(name, &existingPropValue)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetCalculatedRegistrationProperties
_implementedCategories->GetView(&implementedCategoriesView)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreatePropertyValueFactoryIfNecessary
CalculateSurrogateDllPath(incomingPackage)
CreateCompatibilityEntries(incomingPackage)
GetActivationFactory( Wrappers::HStringReference(RuntimeClass_Windows_Foundation_PropertyValue).Get(), &_propertyValueFactory)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::PendingWriteRegistration
registrationStore->CreateComClassEntry(packageMoniker, _id, _properties)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocHandlerHasMachineScope, true)
SetCalculatedRegistrationProperties(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetHasMachineScope
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocServerHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringValueForInprocServer32CompatibilityKey
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.OutofprocClassHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerArguments
!_additionalValuesForInprocServer32.try_emplace( ValueName(WindowsGetStringRawBuffer(name, nullptr)), RegSzValueData(value)).second
ConstructCommandLine(_exeServerAbsolutePath.get(), _exeServerArguments.Value.GetRawBuffer(nullptr), _exeServerCommandLine)
GetPackagedFileAbsolutePath(incomingPackage, _properties.DllPath.Value.GetRawBuffer(nullptr), _surrogateDllAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
CoGetModuleArchitecture(_exeServerAbsolutePath.get(), reinterpret_cast<DWORD*>(&_executableArchitecture))
GetSystemFileAbsolutePath(_executableArchitecture, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateBinaryCompatibilityPropertiesIfNecessary
CalculateBinaryCompatibilityPropertiesIfNecessary(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateSurrogateDllPath
_customAttributes->GetView(&customAttributesView)
_miscStatusAspects->GetView(&miscStatusAspectsView)
_verbs->GetView(&verbsView)
SetRegistrationProperty(_properties.DataFormats, _dataFormats.Get())
_properties.MiscStatusAspects.MapView.CopyTo( IID_PPV_ARGS(&miscStatusAspectsIterable))
miscStatusAspectKeyValuePair->get_Key(&miscStatusAspect)
verbKeyValuePair->get_Value(&verbInspectable)
verbPropertyValue->GetString(&verb)
_properties.Verbs.MapView.CopyTo(IID_PPV_ARGS(&verbsIterable))
verbKeyValuePair->get_Key(&verbId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateClsidKeyTemplateFromSharedProperties
implementedCategoryKeyValuePair->get_Key(&implementedCategory)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateCompatibilityEntries
_properties.ImplementedCategories.MapView.CopyTo(IID_PPV_ARGS(&implementedCategoriesIterable))
GetPackagedFileAbsolutePath(incomingPackage, _properties.ToolboxBitmap32.Value.GetRawBuffer(nullptr), _toolboxBitmap32AbsolutePath)
registryCompatibilityCollector->AddKey( (isMachineScope ? Scope::Machine : Scope::User), GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocHandlerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocHandlerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, _properties.DefaultIcon.Value.GetRawBuffer(nullptr), _defaultIconAbsolutePath)
CoGetModuleArchitecture(_surrogateDllAbsolutePath.get(), reinterpret_cast<DWORD*>(&_surrogateDllArchitecture))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocServerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocServerAbsolutePaths.*(architecture.PerArchitectureDllPath))
OSIntegration::DEH::ComSurrogateClassRegistration::RuntimeClassInitialize
_combinedProperties->SetOutofprocClassIsSurrogate(true)
_combinedProperties->SetServerId(serverId)
ComOutofprocClassRegistration::RuntimeClassInitialize(classes, id, serverId)
ComClassRegistration::RuntimeClassInitialize(classes, id)
OSIntegration::DEH::ComOutofprocClassRegistration::RuntimeClassInitialize
_combinedProperties
classes->Insert(id, _combinedProperties.Get(), &replaced)
OSIntegration::DEH::ComClassRegistration::RuntimeClassInitialize
classes->Lookup(id, &_combinedProperties)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocHandler32Subkey
classes->HasKey(id, &internalRegistrationExists)
GetVirtualizationManagerDllFilename(&virtualizationManagerDllFilename)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocServer32Subkey
miscStatusAspectKeyValuePair->get_Value( &miscStatusAspectFlagsInspectable)
miscStatusAspectFlagsPropertyValue->GetString( &miscStatusAspectFlagsString)
SetRegistrationProperty(_properties.ApplicationId, applicationId)
OSIntegration::DEH::ComServerRegistration::SetApplicationId
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetImplementationClass
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( implementationClassAttributeName.Get(), implementationClass)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( runtimeVersionAttributeName.Get(), runtimeVersion)
AddStringCustomAttribute(implementationClassAttributeName.Get(), implementationClass)
AddStringCustomAttribute(runtimeVersionAttributeName.Get(), runtimeVersion)
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetRuntimeVersion
AddStringCustomAttribute(assemblyAttributeName.Get(), assembly)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( assemblyAttributeName.Get(), assembly)
_combinedProperties->SetInprocServerDllPath_arm64(mscoreeDll.Get())
_combinedProperties->SetIsSystemInprocServerDll(true)
_combinedProperties->SetInprocServerDllPath_x64(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_arm(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_x86(mscoreeDll.Get())
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetAssembly
OSIntegration::DEH::ComServerRegistration::SetSystemExecutableArchitecture
SetRegistrationProperty(_properties.Arguments, arguments)
OSIntegration::DEH::ComServerRegistration::SetServiceName
SetRegistrationProperty(_properties.SystemExecutableArchitecture, architecture)
SetRegistrationProperty(_properties.IsSystemExecutable, isSystemExecutable != FALSE)
SetRegistrationProperty(_properties.ServiceName, serviceName)
SetRegistrationProperty(_properties.Executable, executable)
OSIntegration::DEH::ComServerRegistration::SetExecutable
OSIntegration::DEH::ComServerRegistration::PendingWriteRegistration
registrationStore->CreateComServerEntry(packageMoniker, _id, _properties)
SetRegistrationProperty( _properties.LaunchAndActivationPermission, launchAndActivationPermission)
OSIntegration::DEH::ComServerRegistration::SetLaunchAndActivationPermission
SetRegistrationProperty(_properties.DisplayName, displayName)
OSIntegration::DEH::ComServerRegistration::SetDisplayName
SetRegistrationProperty(_properties.ApplicationDisplayName, applicationDisplayName)
OSIntegration::DEH::ComServerRegistration::SetApplicationDisplayName
ComServerRegistration::SetSystemExecutableArchitecture(architecture)
OSIntegration::DEH::ComExeServerRegistration::SetSystemExecutableArchitecture
ComServerRegistration::SetExecutable(executable, isSystemExecutable)
OSIntegration::DEH::ComExeServerRegistration::SetExecutable
ComServerRegistration::CreateClassRegistration<ComExeClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComExeServerRegistration::CreateClassRegistration
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
registryCompatibilityCollector->AddKey( (_hasMachineScope ? Scope::Machine : Scope::User), Internal::GetAppIdKeyPath(_appId.Value), std::move(appIdKey))
Internal::GetSystemFileAbsolutePath( _properties.SystemExecutableArchitecture.Value, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
OSIntegration::DEH::ComServerRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComServerRegistration::SetCalculatedRegistrationProperties
SetRegistrationProperty( _properties.ExecutionPackageFamily, executionPackageFamily)
OSIntegration::DEH::ComServerRegistration::SetSurrogateAppId
incomingPackage->GetMainPackageFamilyMoniker(executionPackageFamily)
OSIntegration::DEH::ComServerRegistration::SetArguments
SetRegistrationProperty(_properties.SurrogateAppId, appId)
_properties.UseUniversalMarshaler.Present
OSIntegration::DEH::ComInterfaceRegistration::SetUniversalMarshaler
OSIntegration::DEH::ComSurrogateServerRegistration::SetAppId
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateSystemExecutableArchitecture
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateExecutable
ComServerRegistration::SetSurrogateAppId(appId)
OSIntegration::DEH::ComSurrogateServerRegistration::CreateClassRegistration
ComServerRegistration::CreateClassRegistration<ComSurrogateClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComServiceServerRegistration::SetArguments
ComServerRegistration::SetSurrogateAppId(classId)
ComServerRegistration::SetServiceName(serviceName)
OSIntegration::DEH::ComServiceServerRegistration::SetServiceName
ComServerRegistration::CreateClassRegistration<ComServiceClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComServiceServerRegistration::CreateClassRegistration
ComServerRegistration::SetArguments(arguments)
OSIntegration::DEH::ComExeServerRegistration::SetArguments
OSIntegration::DEH::ComProxyStubRegistration::SetDisplayName
OSIntegration::DEH::ComProxyStubRegistration::SetPath
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetInterfaceKeyPathForArchitecture(_id, architecture), Key(interfaceKey))
OSIntegration::DEH::ComInterfaceRegistration::CreateCompatibilityEntries
registrationStore->CreateComInterfaceEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::ComInterfaceRegistration::PendingWriteRegistration
SetRegistrationProperty(_properties.HasMachineScope, (hasMachineScope != FALSE))
OSIntegration::DEH::ComInterfaceRegistration::SetHasMachineScope
SetRegistrationProperty(_properties.ProxyStubCLSID, proxyStubClsid)
OSIntegration::DEH::ComInterfaceRegistration::SetProxyStubClsidWithSupportedArchitectures
OSIntegration::DEH::ComInterfaceRegistration::SetAsynchronousInterface
OSIntegration::DEH::ComInterfaceRegistration::SetTypeLib
OSIntegration::DEH::ComInterfaceRegistration::SetSynchronousInterface
SetRegistrationProperty(_properties.AsynchronousInterface, asynchronousInterface)
SetRegistrationProperty(_properties.UseUniversalMarshaler, true)
SetRegistrationProperty(_properties.SynchronousInterface, synchronousInterface)
OSIntegration::DEH::ComProxyStubRegistration::PendingCopyFiles
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, GetDllPathForArchitecture(architecture).Get())
PendingCopyFiles(packageMoniker, packageRoot.Get(), incomingPackage->GetSignatureOrigin(), fileManager.Get())
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, _properties.DllPath.Value.Get())
OSIntegration::DEH::ComProxyStubRegistration::PendingWriteRegistration
resourcesManager->GetFileManager(&fileManager)
OSIntegration::DEH::ComProxyStubRegistration::SetHasMachineScope
registrationStore->CreateComProxyStubEntry(packageMoniker, _id, _properties)
SetRegistrationProperty(_properties.DllPath_arm64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm64
SetRegistrationProperty(_properties.DllPath_arm, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm
SetRegistrationProperty(_properties.DllPath_x64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x64
SetRegistrationProperty(_properties.DllPath_x86, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x86
OSIntegration::DEH::ComTypeLibRegistration::SetHasMachineScope
registrationStore->CreateComTypeLibEntry( packageMoniker, _id, _versionNumber.Get(), _properties)
SetRegistrationProperty(_properties.Win64Path, win64Path)
OSIntegration::DEH::ComTypeLibRegistration::SetWin64Path
SetRegistrationProperty(_properties.Win32Path, win32Path)
OSIntegration::DEH::ComTypeLibRegistration::SetWin32Path
OSIntegration::DEH::ComTypeLibRegistration::SetHelpDirectory
OSIntegration::DEH::ComTypeLibRegistration::SetDisplayName
OSIntegration::DEH::ComTypeLibRegistration::SetFlags
SetRegistrationProperty(_properties.HelpDirectory, helpDirectory)
OSIntegration::DEH::ComTypeLibRegistration::SetLocaleId
SetRegistrationProperty(_properties.Flags, flags)
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
SetRegistrationProperty(_properties.LocaleId, localeId)
Internal::GetPackagedFileAbsolutePath(incomingPackage, GetDllPathForArchitecture(architecture).GetRawBuffer(nullptr), dllAbsolutePath)
OSIntegration::DEH::ComProxyStubRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComProgIdRegistration::PendingWriteRegistration
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetProgIdKeyPath(_id.GetRawBuffer(nullptr)), std::move(progIdKey))
OSIntegration::DEH::ComProgIdRegistration::SetHasMachineScope
registrationStore->CreateComProgIdEntry(packageMoniker, _id.Get(), _properties)
SetRegistrationProperty(_displayName, displayName)
OSIntegration::DEH::ComProgIdRegistration::SetDisplayName
SetRegistrationProperty(_properties.CLSID, clsid)
OSIntegration::DEH::ComProgIdRegistration::SetClsidWithIsInsertableObject
SetRegistrationProperty(_properties.CurrentVersion, currentVersion)
OSIntegration::DEH::ComProgIdRegistration::SetCurrentVersion
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.HelpDirectory.Value.GetRawBuffer(nullptr), absolutePath)
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetTypeLibVersionKeyPath(_id, _versionNumber.GetRawBuffer(nullptr)), std::move(typeLibVersionKey))
OSIntegration::DEH::ComTypeLibRegistration::CreateCompatibilityEntries
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win64Path.Value.GetRawBuffer(nullptr), absolutePath)
OSIntegration::DEH::ComTypeLibRegistration::PendingWriteRegistration
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win32Path.Value.GetRawBuffer(nullptr), absolutePath)
registration
OSIntegration::DEH::Internal::AddDwordAttribute
propertyValueFactory->CreateUInt32(value, &propValue)
attributes->Insert(keyName.Get(), propValue.Get(), &replaced)
nameCollisionMap->Remove(keyName)
nameCollisionMap->Insert(keyName, keyName, &replaced)
propertyValueFactory->CreateString(value, &propValue)
onecore\admin\appmodel\osim\src\deh\winrt\collector\activatableclassregistration.cpp
OSIntegration::DEH::Internal::AddStringAttribute
nameCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::CheckAttributeNameDoesNotCollide
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::get_ServerRegistration
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::PendingWriteToStore
registration->_properties.Server.Value.Set(exeServer->get_ServerName().Get())
_server.CopyTo(server)
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::Create
static_cast<ExeServerRegistration_Impl*>(exeServer)->AddActivatableClass(activatableClassId)
_attributes->GetView(&(_properties.CustomAttributes.MapView))
registrationStoreContext->CreateActivatableClassEntry( packageMoniker, _activatableClassId.Get(), _properties)
SetRegistrationProperty(_properties.IsPackageRelativePath, isPackageRelativePath)
registration->Initialize(activatableClassId)
copy.Initialize(_properties.AppUserModelId.Value.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_AppUserModelId
copy.Initialize(_properties.CommandLine.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_CommandLine
copy.Initialize(_properties.ExePath.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ExePath
copy.Initialize(_serverName.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ServerName
AttributesMap::Make(&registration->_attributes)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &registration->_propertyValueFactory)
Windows::Foundation::Collections::Internal::Vector<HSTRING>::Make(&classNames)
NameCollisionMap::Make(&registration->_nameCollisionMap)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::Create
registration->_serverName.Set(serverName.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_TrustLevel
SetRegistrationProperty(_properties.RuntimeBehavior, runtimeBehavior)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExplicitPsmActivationType
SetRegistrationProperty(_properties.TrustLevel, trustLevel)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_AppUserModelId
SetRegistrationProperty(_properties.ExplicitPsmActivationType, explicitPsmActivationType)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_IsPackageRelativePath
hrput_AppUserModelId
hrSetCommandLine
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_CommandLine
hrSetExePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExePath
_classNames->Append(className.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::AddActivatableClass
copy.Initialize(_permissions.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_Permissions
securityDescriptorString.Concat(packageDaclString, &securityDescriptorString)
securityDescriptorString.Concat(saclString, &securityDescriptorString)
packageDacl
StringCchPrintfW(packageDacl, length, comDACLFormat, packageSidString.GetChars())
securityDescriptorString.Initialize(permissions)
packageSidString.SetValueFromString(packageSid.GetRawBuffer(nullptr))
securityDescriptorString.Initialize(defaultAAAPermissionsBase)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::CalculateServerPermissions
_properties.ActivatableClasses.InitializeFromStringArray(_classNames.Get())
registrationStoreContext->CreateServerEntry( packageMoniker.Get(), _serverName.Get(), _properties)
CalculateServerPermissions(strPackageSid)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_HostRuntimeId
E_NOTIMPL
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_RuntimeBehavior
SetRegistrationProperty(_properties.HostRuntimeId, hostRuntimeId.Get())
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_ActivatableClassId
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_Attributes
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::Initialize
_attributes->GetView(attributes)
AttributesMap::Make(&_attributes)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &_propertyValueFactory)
NameCollisionMap::Make(&_nameCollisionMap)
SetRegistrationProperty(_properties.Permissions, securityDescriptorString.Get())
_activatableClassId.Set(activatableClassId.Get())
0x%08lx
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\common\registrykey.cpp
onecore\base\appmodel\common\sidhelper.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\pathhelpers.cpp
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
AppxRoot
Software\Policies\Microsoft\Windows\Appx
AppxPurgeList
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
AppxPolicies
AppxPackageVolumes
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
AppxMiniRepository
GetPersistedRegistryLocationW
onecore\base\appmodel\common\stateseparation.cpp
RtlIsStateSeparationEnabled
Packages
onecore\base\appmodel\common\impersonationcontext.cpp
0123456789abcdefghjkmnpqrstvwxyz
onecore\base\appmodel\common\base32encoding.cpp
HashDigestLength
SHA256
ObjectLength
onecore\base\appmodel\common\cryptoprovider.cpp
onecore\base\appmodel\common\bytebuffer.cpp
0123456789ABCDEFonecore\base\appmodel\common\guid.cpp
0123456789abcdef\
\\?\UNC\
BCryptDestroyHash
Bcrypt.dll
BCryptHashData
BCryptFinishHash
BCryptGetProperty
BCryptCreateHash
BCryptOpenAlgorithmProvider
BCryptCloseAlgorithmProvider
onecore\base\appmodel\package\packagesid.cpp
%s %I64d %s %s
onecore\admin\appmodel\packagerepository\staterepository\repositorypropertybag.cpp
onecore\admin\appmodel\packagerepository\staterepository\repository.cpp
PackageRepository.edb
Failed to update State Repository Cache
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
onecore\admin\appmodel\Common\StateRepository.hpp
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
Windows.Internal.StateRepository.Management.RepositoryManager
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
This should never occur
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
ServerCore
Server-Gui-Shell
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
Unknown error
TEMP.xml
_1.0.0.0_neutral_neutral_nopublisherid
onecore\admin\appmodel\common\utilities.cpp
UpdateActions
@ModifiedItems
@AddedItems
@DeletedItems
onecore\admin\appmodel\common\volumemanager.cpp
SisPath
AppxMetadata\AppxBundleManifest.xml
MediaId
MountPoint
onecore\admin\appmodel\common\shellrefresh.cpp
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel
rundll32.exe AppXDeploymentExtensions.OneCore.dll,ShellRefresh
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel\ShellRefresh
%s\%d
onecore\admin\appmodel\common\packageinfo.cpp
onecore\admin\appmodel\common\PackageID.inl
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\statepaths.cpp
%s\WpSystem\%s\AppData\Local\Packages
AppData
%s%s%s%s
\Packages
\Local
onecore\admin\appmodel\common\metadata.cpp
microsoft.system.package.metadata
onecore\admin\appmodel\common\accesshelpers.cpp
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
PackageSid
@*[local-name()='%ls']
onecore\admin\appmodel\common\xmltools.cpp
>`Path: %ws
Not found reason: %d
onecore\admin\appmodel\common\manifestreader.cpp
ManifestCacheOptions
onecore\admin\appmodel\common\ManifestCache.hpp
onecore\admin\appmodel\common\packageid.cpp
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\packagefullnameutilities.cpp
x86a64
arm64
PackageFullName: %ws
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
LogFileInUse Telemetry failed: No valid tag.
FileInUse
onecore\admin\appmodel\common\appxdeletefile.cpp
onecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\directoryacls.cpp
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;GA;;;%s)(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))(A;OICI;FR;;;%s)(A;CI;FX;;;%s)(A;OICI;0x010116;;;%s)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x1200a9;;;BA)(A;CI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;LS)(A;OICI;0x1200a9;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x120089;;;BA)(A;CI;0x120089;;;BA)(A;OICI;0x120089;;;BA)(A;OICI;0x120089;;;LS)(A;OICI;0x120089;;;NS)(A;OICI;FA;;;SY)
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(A;OICI;FR;;;BU)
(A;OICI;0x1200A9;;;AC)
(A;OICI;0x1200A9;;;S-1-15-2-2)
(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;%s)
(A;OICI;0x120089;;;%s)(A;OICI;0x120089;;;%s)
(A;OICI;0x1200A9;;;%s)
(A;OICI;0x120089;;;%s)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;RC)
(A;OICI;GR;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FR;;;RC)
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI
(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
D:PAI
(A;OICI;0x1200A9;;;BU)
(A;OICI;0x120089;;;BU)
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI
%s\resources.pri
onecore\admin\appmodel\common\mrthelper.cpp
resources.pri
file://
onecore\admin\appmodel\common\privilege.cpp
, status=0x
PackageStatus
onecore\admin\appmodel\common\packagestatus.cpp
Failed to read status (PackageStatusAri-OFF) for 
Failed to sync status (PackageStatusAri-OFF) for 
Failed to read status (PackageStatus-OFF) for 
Failed to sync status (PackageStatus-OFF) for 
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)
onecore\admin\appmodel\common\xpath.cpp
P:\WindowsApps
PackageRepositoryRoot
onecore\admin\appmodel\common\configuration.cpp
\SharedLimitedTime\
ConditionalACE
RedirectMrtResources
MACHINE\
onecore\admin\appmodel\common\removeregistrytree.cpp
USERS\
$BINDFLT.WRITTEN.IN.SILO
MutablePackageDirectoryStateHandler
onecore\admin\appmodel\common\mutabledirectoryhelper.cpp
windows.mutablePackageDirectories
Program Files\ModifiableWindowsApps
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
, could not get user sid
, user SID: 
Logging data because access was denied for file: 
: could not get SDDL
: SDDL is 
: could not check access
: user has no access
: user has access 0x
<error>
: owner is 
: could not get security descriptor
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
onecore\admin\appmodel\common\logfileinformation.cpp
LogIfAccessDenied
onecore\admin\appmodel\common\sessionutilities.cpp
onecore\admin\appmodel\common\hardlinkdirectorytree.cpp
onecore\admin\appmodel\common\stagingpaths.cpp
\Deleted
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
LocalExperiencePackage
PerPackageFamilyEntries
PerPackageEntries
PerSystemEntries
DirtyPackages
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
onecore\admin\appmodel\osim\src\extensionmanager\extensionmanagerproviders.cpp
MicrosoftTelemetryAssertTriggeredUM
ntdll.dll
onecore\admin\appmodel\sharedpackagecontainer\lib\sharedpackagecontainer.acls.cpp
AppXDeploymentServer
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
SetDeploymentError
GetDeploymentError
TdhFormatProperty
tdh.dll
api-ms-win-eventing-tdh-l1-1-0.dll
com8.
com7.
com6.
com5.
com4.
com3.
com2.
com1.
onecore\base\appmodel\runtime\src\monikerinternal.cpp
.xn--
lpt9.
lpt8.
lpt7.
lpt6.
lpt5.
lpt4.
lpt3.
lpt2.
lpt1.
com9.
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
PackageRootFolder
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
FullTrust
CapabilityCount
CapabilitySids
%s!%s
UniformResourceLocatorW
fileExtensions
dataPackageFormats
activationCount
targetId
IconReference
Title
packageId
appId
Software\Microsoft\Windows\CurrentVersion\Explorer\SharingMFU
WebLink
Rich Text Format
HTML Format
StorageItems
tLJNk
wcifs Outer Instance
\WcifsPort
wcifs
\\.\FltMgr
../../*[local-name()='VisualElements']
useMinimum
useLess
useHalf
default
onecore\admin\appmodel\osim\src\deh\appx\common\progidregistryhelper.cpp
MigrateToCentennialAsDefault
onecore\internal\shell\inc\UserChoiceCore.h
ApplicationIcon
ApplicationCompany
FriendlyTypeName
/@*[local-name()="DesiredView"]
Square44x44Logo
Square30x30Logo
SmallLogo
SetDefault-Mismatch: Association=%ls, ProgId=%ls, U=%ls, T1=%02d:%02d:%02d:%02d:%02d:%02d, T2=%02d:%02d:%02d:%02d:%02d:%02d
SetDefault-Info: Association=%ls, ProgId=%ls, U=%ls, T=%02d:%02d:%02d:%02d:%02d:%02d, H=%ls
SetDefault: Association=%ls, ProgId=%ls
UserChoice
ProgId
SetDefault-Modern: Association=%ls, ProgId=%ls
useMore
Windows.Internal.ApplicationDefaults.AppDefaultHelpers
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
*[local-name()='HostRuntime']
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
windows.comServer
windows.comInterface
windows.activatableClass
onecore\admin\appmodel\packagerepository\common\extensions.cpp
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
@*[local-name()='CurrentDirectoryPath']
Unknown RuntimeBehavior
Unknown TrustLevel
onecore\admin\appmodel\packagerepository\common\tools.cpp
onecore\base\appmodel\common\stringset.cpp
Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\%s
onecore\shell\lib\userchoicehelpers\userchoicecore.cpp
User Choice set via Windows User Experience {D18B6DD5-6124-4341-9318-804003BAFA0B}
%08x%08x
Software\Microsoft\Windows\Shell\Associations\UrlAssociations\%s
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
*[local-name()='%s']
text()
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
Failure
HResult
LineNumber
Message
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
CUSTOM_CAPABILITY_CHECK
IsRetailUnlocked
ShouldValidateSignature
DidCatalogCheckFailed
DeveloperModeRequired
CapabilityNotSupported
SigCheck
capabilityCheck
sigcheckPassed
packageMoniker
PartA_PrivTags
Source setting does not exist!
source
Migrated successfully setting.
source
value
target
PackagedServiceDEHRevertRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
PackagedServiceDEHRevertRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
PackagedServiceDEHRevertRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
PackagedServiceDEHEvaluateRequestActivity
PartA_PrivTags
wilActivity
threadId
PackagedServiceDEHCommitRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
PackagedServiceDEHRemoveRequestActivity
PartA_PrivTags
wilActivity
threadId
PackagedServiceDEHEvaluateRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityStoppedAutomatically
PackagedServiceDEHEvaluateRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
PackagedServiceDEHRevertRequestActivity
PartA_PrivTags
wilActivity
threadId
PackagedServiceDEHRemoveRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PartA_PrivTags
wilActivity
threadId
PackagedServiceDEHEvaluateRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
PackagedServiceDEHRemoveRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
PackagedServiceDEHRemoveRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
PackagedServiceDEHPostOsUpgradeEvaluateRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
PackagedServiceDEHRevertRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
PackagedServiceDEHCommitRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
PackagedServiceDEHCommitRequestActivity
PartA_PrivTags
wilActivity
threadId
PackagedServiceDEHCommitRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
PackagedServiceDEHEvaluateRequestActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
PackagedServiceDEHCommitRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
PackagedServiceDEHRemoveRequestActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
PackagedServices_DiffentVersionInstallWhenServiceExists
Repository.SetOptions.SetCacheSize
ErrorCode
Filename
PartA_PrivTags
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityStoppedAutomatically
Analyze
PartA_PrivTags
wilActivity
threadId
Checkpoint
PartA_PrivTags
wilActivity
threadId
UpdateStatistics
PartA_PrivTags
wilActivity
threadId
StateRepository.ResourcePriority.Inadequate
ErrorCode
DatabasePtr
Partition
WorkId
CpuPriority
IoPriority
MemoryPriority
TransactionCallerID
PartA_PrivTags
StateRepository.Database.Statistics
Database
StatementCache.Count
StatementCache.Hits
StatementCache.Misses
StatementCache.Lifespan
CacheUsed
CacheHit
CacheMiss
CacheWrite
CacheSpill
SchemaUsed
StatementUsed
LookasideUsed
LookasideUsedPeak
LookasideHitPeak
LookasideMissSizePeak
LookasideMissFullPeak
DatabasePtr
Partition
WorkId
PartA_PrivTags
Analyze
PartA_PrivTags
wilActivity
hresult
threadId
Analyze
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
UpdateStatistics
PartA_PrivTags
wilActivity
hresult
threadId
UpdateStatistics
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Checkpoint
PartA_PrivTags
wilActivity
hresult
threadId
Checkpoint
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Database.Checkpoint
Filename
CheckpointMode
SizeInPages
NumberOfPagesCheckpointed
PartA_PrivTags
StateRepository.FailFastBusySnapshot
ErrorCode
StatementCount
BusyCount
DatabasePtr
FirstBusySQL
ProcessingSQL
PartA_PrivTags
DatabaseCorruption.Detected
ErrorCode
Action
Partition
Filename
Elapsed
FirstReportedUptime
FirstReportedWhen
PartA_PrivTags
StateRepository.FailFastBusySnapshot.StatementInProgress
ErrorCode
Index
DatabasePtr
StatementPtr
ExpandedSQL
PartA_PrivTags
SQLite.AutoIndexWarning
ErrorCode
Message
PartA_PrivTags
StateRepository.DatabaseCache.Statistics
Cache.Count
Cache.Hits
Cache.Misses
DatabaseCache.Lifespan
MemoryUsed
MemoryUsedPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
PageCacheOverflow
PageCacheOverflowPeak
ScratchUsed
ScratchUsedPeak
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
MallocSizePeak
MallocCount
MallocCountPeak
PartA_PrivTags
Clear
PartA_PrivTags
wilActivity
threadId
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
Clear
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Clear
PartA_PrivTags
wilActivity
hresult
threadId
ActivityFailure
PartA_PrivTags
wilActivity
hresult
threadId
currentContextName
currentContextMessage
ActivityFailure
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
DatabaseCache.Get
DatabaseConnection
PartA_PrivTags
DatabaseCache.Add
DatabaseConnection
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PartA_PrivTags
wilActivity
threadId
Partition
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PartA_PrivTags
wilActivity
hresult
threadId
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PostFixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ChangeAppPrinterPort
PrinterName
PortName
HResult
InstallAppMonPrinter
PrinterName
DriverName
PortName
HResult
UninstallAppMonPrinter
PrinterName
DriverName
PortName
HResult
PackagedCom_SetMaxInstallOrder
MaxInstallOrder
PackagedCom_SetIncomingPackageInstallOrder
IncomingPackage
IncomingPackageInstallOrder
PackagedCom_GetMaxInstallOrder
MaxInstallOrder
Repository initialize
readOnly
workId
GetNonExactManifestReader
PackageFullName
SimilarPackageFullName
ManifestReaderFound
ProcessInformation
packageFullName
imageName
commandLine
userSid
sessionId
processId
FileInUse
PartA_PrivTags
wilActivity
hresult
threadId
FileInUse
PartA_PrivTags
wilActivity
threadId
filename
FileInUse
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
GetSessionUserSidQueryTokenFailed
::GetLastError()
RemovePIIfromPath
GetAppXLogMessageFromDataFailure
result
ActivityStoppedAutomatically
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
hresult
threadId
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
threadId
MigrateToCentennialAsDefault
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
extOrProtocol
progId
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
hresult
threadId
extOrProtocol
progId
MigrateToCentennialAsDefault
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Microsoft.Windows.AppXDeploymentExtensions
Microsoft.Windows.Security.CustomCapability
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.StateRepository.Service
Microsoft.Windows.Print.AppMon
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.Shell.CentennialDefaultAssoc
RSDSV
AppxDeploymentExtensions.Desktop.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.tls$
.tls$ZZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
2 2"y
"Z&f*6(
">&6(
"L&6(
"L&6(
,J"0.00
04206N8"<
H4J2L
@ <"2$
P&8(0*<,2.
B<D6F
H,J6Hn$\H,J6H
T,VXX
*&6TU
6*$^L^$@X*
N H"0$.&.*
<"D$^&r$."<(>*^,r*.(<.>0^2r0..<4=
8x6.4J:
>r<.:)
 f"" 
 `&B*0,
"&B*0,T&0.`
"&B*0,b&0.N
08286
<J>b@NBLD0F
6|2(H
@R<R:4N8R
XJZb\N^L`0b
Bh(jt
FlBpTl"rT
(lBpTl"rL
\RXRV
08@HPX`h
GetNamedSecurityInfoW
SetNamedSecurityInfoW
SetEntriesInAclW
SetSecurityInfo
InstallPrinterDriverFromPackageW
ClosePrinter
SaferCloseLevel
SaferCreateLevel
SaferComputeTokenFromLevel
UMgrQueryUserContext
UMgrQueryUserToken
SHGetKnownFolderPath
SHChangeNotify
EvtGetPublisherMetadataProperty
EvtClose
EvtGetObjectArraySize
EvtOpenSession
EvtOpenPublisherEnum
EvtOpenChannelConfig
EvtGetObjectArrayProperty
EvtGetChannelConfigProperty
EvtNextPublisherId
EvtOpenPublisherMetadata
GetVolumeMediaId
GetAppxDataRootPath
CloseState
OpenStateExplicit
GetSystemAppDataKey
GetSystemMetadataPathForPackage
GetPackageFullNameFromToken
GetPackageStatus
UpdatePackageStatus
GetPackageStatusForUserSid
PackageFamilyNameFromFullName
GetStagedPackagePathByFullName2
GetApplicationUserModelIdFromToken
VerifyPackageFullName
PackageNameAndPublisherIdFromFamilyName
RemoveLookaside
RemoveLookasidePackage
AddLookaside
GetRegistryPathDetokenizer
MsgWaitForMultipleObjects
PeekMessageW
TranslateMessage
DispatchMessageW
FWDeleteFirewallRule
FWQueryFirewallRules
FWAddFirewallRule
FWOpenPolicyStore
FWFreeFirewallRulesByHandle
FWClosePolicyStore
DeleteUpdatedPackageKey
IsDeveloperModeEnabled
QueryApplicationCapabilities
SCCDFreeParsedElements
SCCDParseFile
SCCDValidateCatalogFile
SCCDValidateAppxFile
TreeResetNamedSecurityInfoW
GetSecurityInfo
WTSQueryUserToken
WTSEnumerateSessionsW
WTSFreeMemory
BiChangeApplicationStateForPackageName
QueryActiveSession
QueryUserToken
OpenPrinterW
GetPrinterW
SetPrinterW
DeletePrinter
EnumPrintersW
AddPrinterW
XcvDataW
EnumPortsW
UMgrEnumerateSessionUsers
UMgrFreeSessionUsers
PackageSidFromFamilyName
AppxDeploymentExtensions.dll
LoadCategoryNameTable
LoadExtensionRegistrationTable
CreateRegistryCompatibilityCollector
CreateRegistryCompatibilityCollectorForUserOrSystemRegister
CreateRegistryCompatibilityManager
ShellRefresh
?_Xbad_alloc@std@@YAXXZ
msvcp_win.dll
_initterm
_initterm_e
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
_o____lc_codepage_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__stricmp
_o__wcsicmp
_o__wcsnicmp
_o__wcstoui64
_o__wtoi
_o_calloc
_o_ceilf
_o_free
_o_malloc
_o_memcpy_s
_o_realloc
_o_terminate
_o_wcscpy_s
_o_wcsncat_s
_o_wcsncpy_s
_o_wcstok_s
_o_wcstol
_o_wcstoll
_o_wcstoul
_o_wcstoull
__C_specific_handler
__current_exception
__current_exception_context
memset
__CxxFrameHandler3
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
PackageRepositoryFree
AppXSetTrustLabelOnPackage
AppxDeploymentServer.dll
sqlite3_clear_bindings
sqlite3_bind_null
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_text16
sqlite3_bind_blob
sqlite3_column_int
sqlite3_errcode
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_bytes
sqlite3_column_text16
sqlite3_column_blob
sqlite3_column_type
sqlite3_stmt_busy
sqlite3_sql
sqlite3_db_handle
sqlite3_log
sqlite3_finalize
sqlite3_errmsg
sqlite3_reset
sqlite3_step
sqlite3_next_stmt
sqlite3_get_autocommit
sqlite3_close
sqlite3_open_v2
sqlite3_extended_errcode
sqlite3_file_control
sqlite3_extended_result_codes
sqlite3_db_config
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_changes
sqlite3_total_changes
sqlite3_last_insert_rowid
sqlite3_db_filename
sqlite3_busy_timeout
sqlite3_db_status
sqlite3_create_function_v2
sqlite3_user_data
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_error_code
sqlite3_result_int64
sqlite3_result_int
sqlite3_value_type
sqlite3_value_text16
sqlite3_value_int
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_malloc
sqlite3_result_blob
sqlite3_free
sqlite3_value_int64
sqlite3_result_text16
sqlite3_value_text
sqlite3_prepare_v2
sqlite3_exec
sqlite3_config
sqlite3_trace
sqlite3_profile
sqlite3_snprintf
sqlite3_expanded_sql
sqlite3_status
StateRepository.Core.dll
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
HeapAlloc
GetProcAddress
CreateMutexExW
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
IsDebuggerPresent
EventWriteTransfer
WindowsDeleteString
RegCloseKey
EventSetInformation
EventRegister
EventUnregister
InitOnceBeginInitialize
InitOnceComplete
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
IsProcessorFeaturePresent
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
GetTickCount64
RegOpenCurrentUser
RegOpenKeyExW
RegQueryValueExW
CreateEventW
RegDeleteKeyW
CompareStringOrdinal
GetLengthSid
CopySid
EqualSid
CoCreateInstance
CoTaskMemFree
GetFileAttributesW
SetThreadToken
GetCurrentThread
OpenThreadToken
CreateWellKnownSid
RtlFreeSid
LocalFree
CompareStringW
GetSystemDirectoryW
CompareStringEx
PathCchAppend
RtlInitUnicodeString
RtlExpandEnvironmentStrings_U
DeleteFileW
CoCreateGuid
StringFromGUID2
WindowsCompareStringOrdinal
WindowsGetStringLen
WindowsCreateString
GetTokenInformation
InterlockedPopEntrySList
InterlockedPushEntrySList
OpenProcessToken
FindClose
NtQuerySystemInformation
RtlGetDeviceFamilyInfoEnum
FindFirstFileW
FindNextFileW
CoTaskMemAlloc
RegCopyTreeW
RegEnumKeyExW
SHCreateThreadWithHandle
RaiseException
PathFindExtensionW
IIDFromString
RegDeleteValueW
WindowsCreateStringReference
GetModuleFileNameA
GetModuleHandleExW
DebugBreak
FindFirstFileNameW
PathFindFileNameW
CreateHardLinkW
PathIsPrefixW
FindNextFileNameW
CopyFileExW
ConvertStringSecurityDescriptorToSecurityDescriptorW
ConvertSidToStringSidW
RegSetValueExW
RegCreateKeyExW
CryptDestroyHash
CryptReleaseContext
CryptAcquireContextW
CryptCreateHash
CryptHashData
CryptGetHashParam
Sleep
RtlPublishWnfStateData
RoActivateInstance
CreateTimerQueueTimer
CoDisableCallCancellation
CoSetProxyBlanket
CoCancelCall
DeleteTimerQueueTimer
RegSetKeyValueW
CoEnableCallCancellation
BuildTrusteeWithSidW
RoGetActivationFactory
ConvertStringSidToSidW
GetSecurityDescriptorDacl
RegGetValueW
RegDeleteTreeW
GetSystemInfo
RegQueryInfoKeyW
ExpandEnvironmentStringsW
RemoveDirectoryW
CreateEnvironmentBlock
CreateProcessAsUserW
GetExitCodeProcess
NtSetInformationThread
DestroyEnvironmentBlock
EventActivityIdControl
ChangeServiceConfig2A
OpenServiceW
InitializeSecurityDescriptor
ControlService
SetServiceObjectSecurity
DeleteService
SetEvent
NotifyServiceStatusChangeW
ChangeServiceConfig2W
OpenSCManagerW
CloseServiceHandle
CreateServiceW
SetSecurityDescriptorDacl
ReadFile
CreateFileW
GetFileSize
RtlEqualUnicodeString
RtlUpcaseUnicodeChar
WindowsGetStringRawBuffer
WindowsDeleteStringBuffer
WindowsDuplicateString
WindowsPromoteStringBuffer
WindowsPreallocateStringBuffer
RoOriginateError
FreeSid
NtQueryKey
NtQueryValueKey
NtEnumerateValueKey
NtSetValueKey
RegDeleteKeyExW
InitOnceExecuteOnce
CoGetClassObject
UuidFromStringW
CreateProcessW
CreateDirectoryW
SetFileAttributesW
RtlDeriveCapabilitySidsFromName
MoveFileW
RtlValidSid
RtlLengthSid
QueryUnbiasedInterruptTime
LocalAlloc
WideCharToMultiByte
MoveFileExW
RtlFreeHeap
RtlIsMultiUsersInSessionSku
GetFileInformationByHandleEx
GlobalMemoryStatusEx
NtQueryInformationThread
LsaLookupGetDomainInfo
LsaLookupFreeMemory
LsaLookupClose
LsaLookupOpenLocalPolicy
MultiByteToWideChar
NtQueryInformationFile
RtlNtStatusToDosErrorNoTeb
QueryFullProcessImageNameW
NtQueryInformationProcess
LookupAccountSidW
ProcessIdToSessionId
LoadLibraryExW
GetTempPathW
GetLocalTime
RtlCaptureStackBackTrace
WriteFile
OpenProcess
WerRegisterCustomMetadata
FreeLibrary
RtlAllocateHeap
IsValidSid
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
OLEAUT32.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
ntdll.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-shcore-thread-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-security-trustee-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
USERENV.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
RPCRT4.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
combase.dll
RtlWow64IsWowGuestMachineSupported
RtlIsMultiSessionSku
RtlConvertSidToUnicodeString
RtlFreeUnicodeString
NtQueryInformationToken
RtlCopySid
RtlDetermineDosPathNameType_U
RtlCompareUnicodeString
RtlReleaseSRWLockShared
RtlAcquireSRWLockShared
RtlReleaseSRWLockExclusive
RtlAcquireSRWLockExclusive
RtlEnumerateGenericTableWithoutSplayingAvl
RtlInsertElementGenericTableAvl
RtlInitializeGenericTableAvl
RtlDeleteElementGenericTableAvl
RtlLookupElementGenericTableAvl
RtlDowncaseUnicodeString
RtlInitializeCriticalSection
RtlDeleteCriticalSection
RtlEnterCriticalSection
RtlLeaveCriticalSection
RtlReportException
RtlAllocateAndInitializeSid
RtlInitUnicodeStringEx
RtlpEnsureBufferSize
RtlNtPathNameToDosPathName
RtlAddAce
NtAccessCheck
NtQueryEaFile
NtCreateFile
RtlDosPathNameToNtPathName_U_WithStatus
NtSetInformationVirtualMemory
NtFsControlFile
RtlDosPathNameToRelativeNtPathName_U_WithStatus
NtOpenFile
RtlReleaseRelativeName
NtClose
NtSetInformationFile
CoGetModuleArchitecture
api-ms-win-core-com-private-l1-1-0.dll
BfSetupFilterEx
BfRemoveMappingEx
BINDFLTAPI.dll
AppXDeploymentClient.dll
?_Xlength_error@std@@YAXPEBD@Z
??Bios_base@std@@QEBA_NXZ
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
??1?$basic_istream@GU?$char_traits@G@std@@@std@@UEAA@XZ
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?_Xout_of_range@std@@YAXPEBD@Z
?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA_N_N@Z
?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAPEAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
?snextc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?sgetc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?sbumpc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGXZ
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG0@Z
?eback@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?setg@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
_Wcscoll
??1_Lockit@std@@QEAA@XZ
??0_Lockit@std@@QEAA@H@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
?id@?$collate@G@std@@2V0locale@2@A
?_Xinvalid_argument@std@@YAXPEBD@Z
?_Xregex_error@std@@YAXW4error_type@regex_constants@1@@Z
?_Winerror_map@std@@YAHH@Z
?id@?$ctype@G@std@@2V0locale@2@A
?_Syserror_map@std@@YAPEBDH@Z
_Wcsxfrm
?c_str@?$_Yarn@D@std@@QEBAPEBDXZ
?_Getcat@?$ctype@G@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?tolower@?$ctype@G@std@@QEBAPEBGPEAGPEBG@Z
?tolower@?$ctype@G@std@@QEBAGG@Z
?is@?$ctype@G@std@@QEBA_NFG@Z
??1facet@locale@std@@MEAA@XZ
??0facet@locale@std@@IEAA@_K@Z
?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ
?_Incref@facet@locale@std@@UEAAXXZ
??Bid@locale@std@@QEAA_KXZ
?_Getcoll@_Locinfo@std@@QEBA?AU_Collvec@@XZ
??1_Locinfo@std@@QEAA@XZ
??0_Locinfo@std@@QEAA@PEBD@Z
wcsncmp
memmove_s
strchr
wcschr
wcsrchr
PackageRepositoryAllocate
AppXApplyTrustLabelToFolder
ApiSetQueryApiSetPresence
WindowsIsStringEmpty
WindowsStringHasEmbeddedNull
InitializeSRWLock
CoGetApartmentType
RoTransformError
PathAllocCombine
GetSystemWow64Directory2W
WindowsConcatString
RegGetKeySecurity
GetSecurityDescriptorOwner
ImpersonateLoggedOnUser
RevertToSelf
PathCchSkipRoot
PathAllocCanonicalize
PathCchRemoveBackslash
IsWellKnownSid
GetSidSubAuthority
GetSidSubAuthorityCount
CopyFileW
UuidCreate
UuidToStringW
SHCreateMemStream
GetFileSizeEx
PathCchCombine
RpcStringFreeW
GetVolumePathNameW
GetVolumeNameForVolumeMountPointW
GetWindowsDirectoryW
DeviceIoControl
DuplicateTokenEx
GetFileAttributesExW
CreateSymbolicLinkW
GetAce
AddAccessAllowedAceEx
InitializeAcl
DeleteAce
AllocateAndInitializeSid
SetFileInformationByHandle
PathFileExistsW
GetTempFileNameW
ImpersonateSelf
ConvertSecurityDescriptorToStringSecurityDescriptorW
AdjustTokenPrivileges
AccTreeResetNamedSecurityInfo
PathCchRemoveFileSpec
FindFirstFileExW
CreateFileMappingW
MapViewOfFile
UnmapViewOfFile
FileTimeToSystemTime
GetFileSecurityW
AccessCheck
GetModuleHandleExA
TdhGetEventMapInformation
TdhGetEventInformation
TdhEnumerateProviderFieldInformation
TlsAlloc
TlsGetValue
TlsSetValue
RoOriginateErrorW
GetVersionExW
EtwEventRegister
EtwEventWrite
EtwEventUnregister
CoTaskMemRealloc
CreateStreamOnHGlobal
PropVariantClear
GlobalFree
GlobalAlloc
FilterSendMessage
RtlNtStatusToDosError
FilterConnectCommunicationPort
NtAdjustPrivilegesToken
RtlDosPathNameToNtPathName_U
NtDelayExecution
NtOpenThreadToken
NtQueryObject
RtlImpersonateSelf
NtDeviceIoControlFile
NtWaitForSingleObject
ResolveDelayLoadedAPI
DelayLoadFailureHook
FormatMessageA
GetAclInformation
AddAce
SHSetValueW
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
profapi.dll
NTMARTA.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-eventing-tdh-l1-1-0.dll
FLTLIB.DLL
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
api-ms-win-shcore-registry-l1-1-0.dll
PSCreateMemoryPropertyStore
PropVariantToStringVectorAlloc
PROPSYS.dll
SystemTimeToFileTime
CharLowerBuffW
InitializeCriticalSectionAndSpinCount
api-ms-win-core-string-l2-1-0.dll
strcmp
wcscmp
_local_unwind
memcmp
memcpy
memmove
.?AVexception@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVbad_optional_access@std@@
.?AVbad_array_new_length@std@@
.?AVinvalid_argument@std@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVbad_cast@std@@
.?AVfilesystem_error@filesystem@std@@
.?AV_System_error@std@@
.?AVbad_variant_access@std@@
.?AVout_of_range@std@@
.?AVrange_error@std@@
.?AVtype_info@@
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
AppX Deployment Extensions Desktop DLL
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
AppXDeploymentExtensions.desktop.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
AppXDeploymentExtensions.desktop.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Restricted
MAPSL
VMAPD
BMAP<
VMAP4
VMAPL
VMAP|
VMAPD
VMAP<
VMAPD
VMAP$
VMAP,
VMAPd
ApplicabilityStateEnumMap
AppxPackageOriginEnumMap
AppxSignatureOriginEnumMap
ArchitectureEnumMap
DependencyPackageApplicabilityStateMap
DeploymentOperationEnumMap
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentStateHandlerEnumMap
DeviceAccessVetoReasonMap
OSIMListTypeEnumMap
OptionalPackageSubtype
PlatformPolicyBlockReasonMap
PreRegisterOptionsBitMap
TargetPlatformEnumMap
EventData
ErrorCode
ErrorCode
TEMP 
EventData
String1
String2
String1
String2
TEMP8
EventData
ErrorCode
UInt32Value
ErrorCode
UInt32Value
TEMP$
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
EventData
ErrorCode
String1
String2
String3
ErrorCode
String1
String2
String3
EventData
ErrorCode
String1
String2
Bool1
ErrorCode
String1
String2
Bool1
TEMPt
[S'rA9
EventData
String
Bool1
Bool2
String
Bool1
Bool2
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
TEMPP
EventData
TEMPp
EventData
ExtensionsCategoryNames
PackageName
ExtensionsCategoryNames
PackageName
EventData
PackageName
PackageName
TEMP<
EventData
ErrorCode
ErrorMessage
ErrorCode
ErrorMessage
EventData
ErrorCode
ErrorCode
a7l6y+
EventData
ErrorCode
ErrorMessage
CategoryName
ErrorCode
ErrorMessage
CategoryName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMP0
EventData
DehName
RunAsSystem
DehName
RunAsSystem
EventData
PackageName
CategoryName
KeyName
PackageName
CategoryName
KeyName
EventData
PackageName
PackageName
EventData
ExtensionName
ExtensionName
TEMPh
EventData
FileName
Column
ErrorCode
PackageName
FileName
Column
ErrorCode
PackageName
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
FileName
Column
ErrorCode
PackageName
ErrorText
TEMPX
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
TEMP$
EventData
PackageName
ErrorCode
ErrorText
ExtendedData
PackageName
ErrorCode
ErrorText
ExtendedData
TEMP8
EventData
UniqueKey
PackageName
UniqueKey
PackageName
EventData
Category
PackageName
ErrorText
ErrorCode
Category
PackageName
ErrorText
ErrorCode
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
EventData
ErrorCode
PackageName
ActivatableClassIdentifier
ErrorCode
PackageName
ActivatableClassIdentifier
TEMPt
EventData
ErrorCode
ActivatableClassIdentifier
ErrorCode
ActivatableClassIdentifier
EventData
ErrorCode
ActivatableClassIdentifier
ContractID
ErrorCode
ActivatableClassIdentifier
ContractID
TEMPX
EventData
ErrorCode
InterfaceIdentifier
ErrorCode
InterfaceIdentifier
TEMP@
EventData
ErrorCode
AttributeName
ErrorCode
AttributeName
TEMP 
EventData
ErrorCode
CLSID
ErrorCode
CLSID
EventData
ErrorCode
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
OutgoingPackageName
IncomingPackageName
OutgoingPackageName
EventData
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
EventData
OutgoingPackageName
OutgoingPackageName
TEMPX
EventData
OutgoingPackageName
ErrorCode
OutgoingPackageName
ErrorCode
EventData
ErrorCode
ErrorCode
+dZrp>N
EventData
ErrorContext
ErrorContext
TEMPP
EventData
ErrorContext1
ErrorContext2
ErrorContext1
ErrorContext2
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMPh
EventData
Filename
Column
ErrorCode
PackageName
Filename
Column
ErrorCode
PackageName
EventData
Filename
Column
ErrorCode
PackageName
ImagePath
Filename
Column
ErrorCode
PackageName
ImagePath
TEMPD
EventData
PackageFullName
Settings
PackageFullName
Settings
t+=D{
EventData
PackageFullName
PackageFullName
t+=D{
EventData
PackageFullName
PackageFullName
TEMP<
EventData
PackageFullName
Result
PackageFullName
Result
EventData
PackageFullName
PeriodicUpdateRecurrence
PackageFullName
PeriodicUpdateRecurrence
TEMP<
EventData
DeploymentOperation
PackageFullName
ErrorCode
DeploymentOperation
PackageFullName
ErrorCode
TEMP@
EventData
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
TEMP<
EventData
SummaryError
ErrorCode
SummaryError
ErrorCode
TEMP(
EventData
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPP
EventData
TEMP\
EventData
DeploymentOperation
PackageFullName
UserSid
CallingProcess
DeploymentOperation
PackageFullName
UserSid
CallingProcess
N6Eh0
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPT
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPp
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
ErrorCode
ErrorCode
EventData
ApplicationUserModelId
ApplicationUserModelId
TEMPd
EventData
ApplicationUserModelId
ErrorCode
ApplicationUserModelId
ErrorCode
TEMPD
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
PackageFullName
StatusToClear
StatusToSet
CallOrigin
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
EventData
PackageFullName
BiApplicationStateTransition
ErrorCode
PackageFullName
BiApplicationStateTransition
ErrorCode
EventData
PackageFullName
Context
ErrorCode
PackageFullName
Context
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
DeploymentState
NextDeploymentState
ErrorCode
DeploymentState
NextDeploymentState
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
HRESULT
HRESULT
TEMP,
EventData
Architecture
Architecture
EventData
PackageUri
PackageUri
EventData
reason
package
reason
package
TEMPT
EventData
PackageFullName
PolicyReason
PackageFullName
PolicyReason
EventData
DeploymentOperation
PackageFullName
Summary
DeploymentOperation
PackageFullName
Summary
EventData
OrphanedAppDataVolume
MitigatedAppDataVolume
OrphanedAppDataVolume
MitigatedAppDataVolume
EventData
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
ls:\9
EventData
packageFullName
userSid
hresult
packageFullName
userSid
hresult
t+=D{
EventData
PackageFullName
PackageFullName
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPP
EventData
PackageFullName
CheckResult
PackageFullName
CheckResult
TEMP`
EventData
PackageFullName
SignatureOrigin
PackageFullName
SignatureOrigin
TEMPX
EventData
PackageFullName
PackageOrigin
PackageFullName
PackageOrigin
EventData
filename
Error
filename
Error
EventData
ReturnVal
ReturnVal
EventData
filename
filename
FB&_W
EventData
Error
PackageMoniker
SettingName
SettingValue
Index
Error
PackageMoniker
SettingName
SettingValue
Index
TEMP(
EventData
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
EventData
DependentPackageName
SupplierPackageName
Reason
DependentPackageName
SupplierPackageName
Reason
TEMP4
EventData
Error
PackageMoniker
Error
PackageMoniker
EventData
PackageFullName
IsInstalled
Options
PackageFullName
IsInstalled
Options
TEMP$
EventData
PackageFullName
Flags
HResult
CallingProcess
PackageFullName
Flags
HResult
CallingProcess
EventData
HResult
Options
CallingProcess
HResult
Options
CallingProcess
EventData
HResult
HResult
TEMP\
EventData
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
EventData
PackageFamilyName
PackageFamilyName
EventData
PackageFamilyNameOne
PackageFamilyNameTwo
PackageFamilyNameOne
PackageFamilyNameTwo
EventData
PackageMoniker
PackageMoniker
TEMPl
EventData
DeploymentOperation
PackageMoniker
DeploymentOperation
PackageMoniker
EventData
PackageName
PackageVersion
PackageVersion2
PackageName
PackageVersion
PackageVersion2
EventData
PackageVersion
PackageVersion
TEMP4
EventData
PackageName
XapState
PackageName
XapState
TEMP(
EventData
UserSid
ErrorCode
UserSid
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP0
EventData
TileStore
ErrorCode
TileStore
ErrorCode
EventData
AppId
AppId
TEMP\
EventData
PackageMoniker
PackageMoniker2
PackageMoniker
PackageMoniker2
EventData
PackageMoniker
PackageMoniker2
PackageMoniker3
PackageMoniker
PackageMoniker2
PackageMoniker3
EventData
PackageName
PackageName
TEMPX
EventData
PackageName
DeploymentOptions
PackageName
DeploymentOptions
EventData
PackageName
DeploymentOptions
Publisher
PackageName
DeploymentOptions
Publisher
TEMPt
EventData
IntegrityLevel
CallerPackageFullName
IntegrityLevel
CallerPackageFullName
EventData
PackageName
StageForInPlace
ApplyInPlace
PackageName
StageForInPlace
ApplyInPlace
TEMPH
EventData
PackageName
PublisherName
PackageName
PublisherName
EventData
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
EventData
PackageName
PackageArchitecture
MachineArchitecture
PackageName
PackageArchitecture
MachineArchitecture
TEMPL
EventData
PackageFullName
MountPoint
PackageFullName
MountPoint
TEMP`
EventData
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
EventData
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
TEMP\
EventData
DeploymentPath
FileSystemType
DeploymentPath
FileSystemType
EventData
ErrorCode
ErrorCode
EventData
PackageMoniker
FileName
ErrorCode
PackageMoniker
FileName
ErrorCode
TEMP,
EventData
FileName
ErrorCode
FileName
ErrorCode
EventData
FileName
FileName
EventData
RequestCount
RequestCount
EventData
FileName
Count
MaxCount
FileName
Count
MaxCount
XbVS>
EventData
PackageFullName
ApplicabilityState
PackageFullName
ApplicabilityState
EventData
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
TEMPT
EventData
DeploymentOperation
Argument
DeploymentOperation
Argument
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
TEMP 
EventData
PathOne
PathTwo
PathOne
PathTwo
EventData
PackageNameOne
PackageNameTwo
PackageNameOne
PackageNameTwo
TEMP$
EventData
PackageName
PackageName
._Q%N
EventData
PackageName
MediaID
PackageName
MediaID
EventData
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
EventData
TEMPD
EventData
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
TEMP|
EventData
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
EventData
PackageFullName
Bundle
AppDataVolume
PackageFullName
Bundle
AppDataVolume
TEMPH
EventData
RegistryKeyName
ErrorCode
RegistryKeyName
ErrorCode
EventData
RegistryKeyName
ValueName
ErrorCode
RegistryKeyName
ValueName
ErrorCode
cW*q.
EventData
PackageFullNames
PackageFullNames
t+=D{
EventData
PackageFullName
PackageFullName
EventData
RegistryKeyName
RegistrySubKeyName
ErrorCode
RegistryKeyName
RegistrySubKeyName
ErrorCode
EventData
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
InstallPackageList
EndOfLifePackageList
InstallPackageList
EndOfLifePackageList
EventData
UserSid
UserSid
EventData
UserSid
MainPackageFullName
ErrorCode
UserSid
MainPackageFullName
ErrorCode
TEMPH
EventData
UserSid
PackageFamilyName
UserSid
PackageFamilyName
TEMP$
EventData
Error
PackageFamilyName
FoundState
ErrorCode
Error
PackageFamilyName
FoundState
ErrorCode
TEMPt
p*X3A
EventData
PackageFamilyName
SettingSyncEnabled
PackageFamilyName
SettingSyncEnabled
TEMP@
EventData
PackageName
BinaryCount
PackageName
BinaryCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPP
EventData
PackageName
CapabilityCount
PackageName
CapabilityCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
ApplicationCount
ErrorCode
PackageName
ApplicationCount
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
Location
PackageName
ErrorCode
Location
PackageName
TEMP8
EventData
Column
Package
Column
Package
0RP\M
EventData
Column
Package
Column
Package
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
y<FQ1
EventData
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPD
EventData
PackageUri
PackageFolder
PackageUri
PackageFolder
EventData
PackageUri
PackageUri
TEMP,
EventData
FilePath
ErrorCode
FilePath
ErrorCode
TEMP4
EventData
FilePath
ErrorCount
FilePath
ErrorCount
EventData
ErrorCount
ErrorCount
TEMPD
EventData
DeploymentOperation
PackageName
ErrorCode
LineNumber
DeploymentOperation
PackageName
ErrorCode
LineNumber
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
ErrorCode
F<}lf-#X
EventData
ErrorCode
VolumeID
MediaID
ErrorCode
VolumeID
MediaID
TEMP@
EventData
PackageName
UserSid
ErrorCode
AppDataErrorOperation
PackageName
UserSid
ErrorCode
AppDataErrorOperation
EventData
PackageTableRowKey
UserSid
ErrorCode
PackageTableRowKey
UserSid
ErrorCode
EventData
SourceFilePath
LinkDestinationPath
ErrorCode
SourceFilePath
LinkDestinationPath
ErrorCode
TEMP,
[IzZG
EventData
FilePath
FileSize
FilePath
FileSize
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
EventData
PackageUri
PackageFolder
PackageFolderOld
PackageUri
PackageFolder
PackageFolderOld
EventData
PackageMonikerOld
PackageMonikerNew
ErrorCode
PackageMonikerOld
PackageMonikerNew
ErrorCode
G6?lYi
EventData
FileName
Offset
FileName
Offset
EventData
ReturnValue
ReturnValue
EventData
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
TEMPH
EventData
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
,Zndrz
EventData
SourceFolderPath
DestinationFolderPath
ErrorCode
SourceFolderPath
DestinationFolderPath
ErrorCode
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
HV@k>
EventData
ManifestPath
ErrorCode
ErrorString
ManifestPath
ErrorCode
ErrorString
TEMPx
EventData
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
EventData
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
EventData
PackageMoniker
Writesize
Filesize
PackageMoniker
Writesize
Filesize
TEMPD
EventData
PackageMoniker
ErrorCode
PackageMoniker
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
0RP\M
EventData
Column
Package
Column
Package
EventData
Column
ErrorCode
Package
ErrorCodeDescription
Column
ErrorCode
Package
ErrorCodeDescription
TEMPT
EventData
PackageFullName
ResourceName
PackageFullName
ResourceName
EventData
PackageFullName
ResourceName
ErrorCode
PackageFullName
ResourceName
ErrorCode
TEMPT
EventData
ErrorCode
MediaID
UserSid
Package
ErrorCode
MediaID
UserSid
Package
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
EventData
PackageFullName
Architecture
ErrorCode
PackageFullName
Architecture
ErrorCode
EventData
PackageFullName
Architecture
Count
PackageFullName
Architecture
Count
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
PackageFullName
FullFilePath
ErrorCode
PackageFullName
FullFilePath
ErrorCode
TEMPD
EventData
PackageFullName
ExitCode
PackageFullName
ExitCode
TEMPH
^lBaaAV
EventData
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPL
EventData
PackageFullName
waitResult
PackageFullName
waitResult
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
SessionKey
#StreamingDataSourcePrefetchCanceled
SessionKey
StreamingDataSourcePrefetchCanceled
TEMP 
EventData
CLSID
ErrorCode
CLSID
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP4
EventData
FolderPath
ErrorCode
FolderPath
ErrorCode
EventData
PackageFullName
Action
ErrorCode
PackageFullName
Action
ErrorCode
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
t+=D{
EventData
PackageFullName
PackageFullName
TEMPh
EventData
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
TEMP8
EventData
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
TEMPL
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
TEMP(
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
t+=D{
EventData
PackageFullName
PackageFullName
EventData
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
TEMPL
EventData
packageFullName
returnCode
packageFullName
returnCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
ErrorText
PackageName
ErrorCode
ErrorText
TEMP@
EventData
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
Section
ProcessId
FileName
ErrorCode
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
TEMPp
EventData
FileName
ErrorCode
HeaderAddr
ProcessId
FileName
ErrorCode
HeaderAddr
ProcessId
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
TEMP<
EventData
FileName
ExceptionCode
FileName
ExceptionCode
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
TEMPT
h5!wE
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
TEMPh
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
R]^F=
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
TEMP@
W3^+`x
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
PackageName
ErrorCode
FileName
Column
Element
Attribute
EventData
PackageFamilyName
PackageFamilyName
TEMPP
EventData
PackageFamilyName
ErrorCode
PackageFamilyName
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP@
EventData
ServiceStatus
ErrorCode
ServiceStatus
ErrorCode
TEMP8
EventData
PackageFullName
Flags
PackageFullName
Flags
EventData
PackageFullName
Flags
ErrorCode
PackageFullName
Flags
ErrorCode
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPX
EventData
PackageFullName
NumberOfFiles
PackageFullName
NumberOfFiles
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
TEMP<
EventData
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
t+=D{
EventData
PackageFullName
PackageFullName
TEMPD
EventData
PackageFullName
FilePath
PackageFullName
FilePath
TEMP,
EventData
PriPaths
ErrorCode
PriPaths
ErrorCode
TEMP|
EventData
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
EventData
HostingModel
HostingModel
EventData
AppId
AppExtensionName
Error
AppId
AppExtensionName
Error
TEMP|
EventData
FileName
Error
FileName
Error
TEMP8
EventData
PackageFullName
Error
PackageFullName
Error
EventData
FileName
Column
ErrorCode
PackageName
PathName
FileName
Column
ErrorCode
PackageName
PathName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
FilePath
Message
PackageName
FilePath
Message
EventData
PackageName
FilePath
ErrorCode
Message
PackageName
FilePath
ErrorCode
Message
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
EventData
ErrorCode
ForMove
ErrorCode
ForMove
EventData
ErrorCode
ErrorCode
EventData
TEMP$
EventData
ErrorCode
Source Path
Destination Path
Flags
ErrorCode
Source Path
Destination Path
Flags
TEMP4
EventData
PackageFullname
PackageFullname
EventData
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
TEMPP
,p<DR
EventData
PackageFullname
errorString
PackageFullname
errorString
EventData
SearchString
HresultCode
ErrorCode
Index
SearchString
HresultCode
ErrorCode
Index
TEMPt
EventData
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
EventData
PackageFullName
HostRuntimePackageFullName
ErrorCode
PackageFullName
HostRuntimePackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
DeploymentOperation
Package
OriginalUser
DeploymentOperation
Package
OriginalUser
TEMP<
EventData
DeploymentOperation
Package
OriginalUser
ErrorCode
DeploymentOperation
Package
OriginalUser
ErrorCode
TEMP<
EventData
PackageSID
PackageFullName
Capabilities
ErrorCode
PackageSID
PackageFullName
Capabilities
ErrorCode
^m&5t
EventData
PackageFullName
EventlogDllFamilyPath
Operation
PackageFullName
EventlogDllFamilyPath
Operation
TEMP$
EventData
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
TEMPP
EventData
PackageName
ProviderGuid
ProviderName
OtherPackageName
PackageName
ProviderGuid
ProviderName
OtherPackageName
EventData
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
TEMPh
EventData
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
PRVAd
Microsoft-Windows-AppXDeployment-Server
OPCOx
win:Info
win:Start
win:Stop
win:Error
win:Warning
win:Informational
win:Verbose
TASKH$
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.ContainerDeploymentStateHandler
AppXDeployment.Task.Server.Deployment.MutablePackageDirectoryStateHandler
AppXDeployment.Task.Server.VolumeRequestManager
APPXDEPLOYMENTSERVER_KEYWORD
VISUALELEMENTS_EXTENSION_KEYWORD
OSIM_KEYWORD
STATE_DEH_KEYWORD
AUTOPLAY_DEH_KEYWORD
COLLECTOREXTENSION_DEH_KEYWORD
PACKAGED_COM_DEH_KEYWORD
FILETYPE_DEH_KEYWORD
TRUST_DEH_KEYWORD
LICENSING_DEH_KEYWORD
DATAPACKAGEHOST_DEH_KEYWORD
CERTIFICATES_DEH_KEYWORD
APPX_BASE_DEH_KEYWORD
PROTOCOL_DEH_KEYWORD
MOCOM_HELPER_KEYWORD
RUNTIME_DEH_KEYWORD
BACKGROUND_TASKS_DEH_KEYWORD
DOWNLOAD_DEH_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
MRT_DEH_KEYWORD
DSM_DEH_KEYWORD
APPMODEL_RUNTIME_DMR_KEYWORD
RESTRICTED_LAUNCH_DEH_KEYWORD
DEVICEACCESS_DEH_KEYWORD
INDEXEDDB_DEH_KEYWORD
MSAC_SIGNOUT_DEH_KEYWORD
SEARCHINDEXER_EXTENSION_KEYWORD
APPSYNC_DEH_KEYWORD
APPLYDATA_DEH_KEYWORD
ALARM_DEH_KEYWORD
GEOLOCATION_DEH_KEYWORD
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
UPDATE_MIGRATION_TASK_DEH_KEYWORD
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
APPSERVICE_DEH_KEYWORD
USERDATAACCESS_EXTENSION_KEYWORD
DIALPROTOCOL_DEH_KEYWORD
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
PHONECALLORIGIN_DEH_KEYWORD
WMIPROVIDER_EXTENSION_KEYWORD
LXP_DEH_KEYWORD
SERVER_EXTENSION_KEYWORD
ms:ReservedKeyword44
ms:Telemetry
ms:Measures
ms:CriticalData
win:ResponseTime
EVNTT
WEVT_TEMPLATE
en-US
