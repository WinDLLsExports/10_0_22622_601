!This program cannot be run in DOS mode.
WRich
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
@USWH
fA9|B
fA9|B
L$xE3
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
L$0H3
L$`H3
D$0E3
L$PH3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
fA94@u
fA94@u
fA94@u
A_A^_^]
@USVWATAVAWH
f94Bu
f94Bu
f94Bu
fA94@u
fA94@u
A_A^A\_^[]
L$pH3
\$ UH
@USWH
f9<Bu
f9<Ju
t$ UH
D$(E3
L$`H3
D$pE3
D$hE3
D$XE3
D$`E3
\$ UVWATAVH
f94Bu
fA94@u
fA94@u
A^A\_^]
L$pH3
D$`E3
L$ E3
L$pH3
L$XE3
D$(E3
@USWH
f9<Bu
f9<Bu
f9<Bu
f9<Ju
L$ E3
@USVWH
f94Bu
f94Ju
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
\$ WH
@SVWH
SVWAVH
8A^_^[
WAVAWH
\$8H;
A_A^_
p:_0#
q0R^G'
\$ UH
M H1E
 H3E H3E
ntelA
ineID
H SVWH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
WAVAWH
0A_A^_
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
x ATAVAWH
A_A^A\
@USVWATAUAVAWH
A_A^A]A\_^[]
t5fA9(t/I
|$ UH
VWAVH
D$0E3
ug@89t`H
^ H9;t
L$0H9;t
|$ UATAUAVAWH
u.@8}
F8@88t
A_A^A]A\]
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
D$8E3
D$(E3
D$@E3
VWAVH
 A^_^
USVWAVAWH
A_A^_^[]
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
@8=QH(
@A_A^A]A\_^]
L$ SWH
L$XH+
s WAVAWH
@A_A^_
UVWAVAWH
~0H+~(H
0A_A^_^]
\$ WH
L$0L;L$8t*A
t$ WAVAWH
\$PfD
@u;L9;u$E3
0A_A^_
p WAVAWH
 A_A^_
\$0H;\$8t
\$ UVWATAUAVAWH
|$XH!|$0A
\$@L+
d$8H+
A_A^A]A\_^]
t$ WH
WAVAWH
T$0L+
A_A^_
|$ UATAUAVAWH
A_A^A]A\]
UVWAVAWH
H!t$XA
D$H!D$@
A_A^_^]
SVWAVAWH
`A_A^_^[
L$ USVWATAVAWH
A_A^A\_^[]
x AVH
rHfD97w
C9fD97u,
x AVH
H9;s!
VWAVH
t$$fD
D$0D9r
@A^_^
L$ SVWH
UVWAVAWH
 A_A^_^]
UWAVH
HcT$ HcL$$H
t$ WH
{ ATAVAWH
 A_A^A\
UVWAVAWH
L$HH3
PA_A^_^]
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PM;
A_A^]
p8V~{/q
@USVWATAUAVAWH
u3H;z
H!]o8_ u
A_A^A]A\_^[]
p8V~{/q
pRXt8
p8V~{/q
pRXt8
p8V~{/q
pRXt8
pRXt8
p8V~{/q
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
q@Q4K
t$ WH
H;YPr
H;YPr
p WATAUAVAWH
A_A^A]A\_
UVWAVAWH
PA_A^_^]
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
C(!C8H
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UVWAVAWH
PA_A^_^]
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UVWAVAWH
PA_A^_^]
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
C(!C8H!C@H
UWAVH
UWAVH
C(!C8H!C@H
VWAVH
 A^_^
UVWAVAWH
PA_A^_^]
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
VWATAVAWH
0A_A^A\_^
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
UATAUH
H9MPv
H9MPu
A]A\]
|$ UATAUAVAWH
m8L;}
D$ E3
A_A^A]A\]
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
qy\2F
q1]Rz?L
H;KPsX
USVWAVH
pA^_^[]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
p@Q4K
qRXt8
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
py\2F
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9y`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
H9{`v2H;{Pr
H;{`r
VWAVH
D$@8D$P
 A^_^
pRXt8
pRXt8
p8V~{/q
p8V~{/q
pRXt8
p8V~{/q
pRXt8
p8V~{/q
p8V~{/q
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv
H;{Pr
H9{Pv@3
H;KPs
H;KPr
q8V~{/q
UVWATAUAVAWH
|$ E3
A_A^A]A\_^]
q8V~{/q
q8V~{/q
D$(E3
D$PE3
L$PH3
L$ UVWH
fA9<Hu
fA9<Iu
f9<Ju
fA9<Cu
L$`H3
R$fA;Z*
fA9Z*v#A
\$ UVW
D$PE3
x AVH
L$hE3
x AVH
L$hE3
D$HE3
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
q@Q4K
UVWATAUAVAWH
pjSt=
fA9?u
A_A^A]A\_^]
WAVAWH
D$ E3
0A_A^_
SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
WAVAWH
0A_A^_
WAVAWH
D$0E3
@A_A^_
x AVH
t$0E3
VWAVH
 A^_^
WAVAWH
 A_A^_
WAVAWH
0A_A^_
p AWH
UVWATAUAVAWH
tMf9;tHH
0A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
\$ UVWATAUAVAWH
D$ ARI8A
RESPH
RESAD
GLOBD
O8D;i
RESAA;
:RDDLuMA9B
D$ RDDL
:DEPG
D;\$8
:JHN8
D$ JHN8
:PKMPu
D$ PKMP
RESPA;
:SECUuGA9B
D$ SECUE
:TPLTt
D$ TPLT
:APPS
GhD;x
:ALTPu.A9B
D$ ALTP
D$ RDDL
D$ DEPG
D$ DEPGD
D$ GLOB
\$(D+
D$ GLOB
D$ PKMP
D$ SECUD
T$VfD
D$ TPLT
D$ APPS
D$ APPS
D$ ALTP
D$ RESP
A_A^A]A\_^]
@USVWATAUAVAWH
D8l$0u+M
fE9.u
pjSt=
D8l$1
pjSt=
H;D$h
A_A^A]A\_^[]
USVWATAUAVAWH
A_A^A]A\_^[]
x AVH
UAVAWH
A_A^]
UWAVH
x ATAVAWH
@A_A^A\
VWAVH
@USVWAVAWH
D8|$0
pjSt=
A_A^_^[]
v4H;y
H9y v4H;y r
H;{ r
UVWATAUAVAWH
A_A^A]A\_^]
uAH;_
D$ fD
L$@H3
L$@H3
UVWATAUAVAWH
A_A^A]A\_^]
USVWAVH
pA^_^[]
USVATAUAVAWH
A_A^A]A\^[]
USVATAUAVAWH
A_A^A]A\^[]
@USVWAVAWH
D8|$0
pjSt=
A_A^_^[]
` UAVAWH
D$HE3
D$ ARI8I
A_A^]
|$0E3
@8|$lt
H9|$Xv0H
H;D$Xr
UVWAVAWH
A_A^_^]
h UAVAWH
A_A^]
x AVH
WAVAWH
A_A^_
UWATAVAWH
D$ E3
A_A^A\_]
@USVWATAUAWH
D8l$ 
x|D9m
A_A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
APPSI
0A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
DEPGI
UVWAVAWH
L$`H3
pA_A^_^]
WAVAWH
H9~hu
H9~pv)H;nXr
H;npr
H9~8vZH;~8r
H;n8r
@A_A^_
D$@E3
H!X L
UVWAVAWH
pA_A^_^]
L$ UATAUAVAWH
8E@u]H
8E`t%
A_A^A]A\]
UVWAVAWH
PA_A^_^]
UWAVH
x AVH
ALTPH
x AVH
t%f9_
t-f9_
t4f9_
t;f9_
tBf9_
tH9_ t.
t$ WAVAWH
0A_A^_
t$ WAVAWH
0A_A^_
WATAUAVAWH
t3f9s
t)f9s
t0f9s
t5f9s
 A_A^A]A\_
x AVH
GLOB8V
t$ WAVAWH
H;{ saH
0A_A^_
x AVH
p AWH
t$ WAVAWH
0A_A^_
x AVH
RDDLH
x AVH
UVWATAUAVAWH
ARI83
0A_A^A]A\_^]
x AVH
t$ WAVAWH
fE9<Hu
fD9<Ju
fD9<Ju
fD9<zu
 A_A^_
VWATAVAWH
 A_A^A\_^
WAVAWH
 A_A^_
WAVAWH
 A_A^_
f9<Ju
{ AVH
x AVH
SUVWATAUAVAWH
A_A^A]A\_^][
9ARI8u
9RESPt
9RESAu.9Q
L$ UH
L$pH3
fA9<Hu
fA9<Ku
f9<Ku
fA9<Bu
fA9<Hu
fA9<Iu
fA9<Cu
UATAUAVAWH
fE9,Bu
fE9,Au
fD9,Fu
fE9,Cu
fD9,Cu
fE9,Fu
fE9,Gu
fD9,Gu
fE9,Lu
A_A^A]A\]
L$pH3
t$ WH
f9,Yu
x AVH
|$ UH
|$ UH
f94Cu
x ATAVAWH
A_A^A\
@SUVWATAVAW
A_A^A\_^][
x AVH
x ATAVAWH
A_A^A\
VWAWH
`A__^
q@Q4K
@USVWATAUAVAWH
D$ E3
D9}HwEH
xA_A^A]A\_^[]
VWATAVAWH
A_A^A\_^
|$ AVH
D$ E3
L$XH3
|$ UAVAWH
pbTT$
A_A^]
\$ UVWH
t$ WH
UVWATAUAVAWH
`A_A^A]A\_^]
USVAVH
HA^^[]
H9q`u
\$ UVWAVAWH
@A_A^_^]
USVWAVH
@A^_^[]
L$PH3
D$`E3
L$`H3
WAVAWH
 A_A^_
VWAVH
T$`!\$`
D$` t
9(vCE3
@A^_^
H9sXt
t$ WH
t$ WATAVH
D$pI;
A^A\_
L$`H3
q@Q4K
t$ WH
D#D$0D
3D$8%
3D$8%x
@USWH
|$ UH
@USWH
t$ WH
L$ WH
9\$@L
t$ WH
VWAVH
 A^_^
f9<Bu
VWAVH
@A^_^
WAVAWH
 A_A^_
x AUAVAWH
 A_A^A]
x ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
x AUAVAWH
 A_A^A]
\$ WH
L$pH3
@USWH
L$PH3
@SVWATAUAVAWH
L;T$pr
D$hI;
'L9l$xu
 A_A^A]A\_^[
@USVWATAUAVAWH
A_A^A]A\_^[]
@SUVAVAWH
 A_A^^][
t7f9Q
t1fD9Q
|6fD9Q
u)fD9Q
t"f9Q
t$ WH
@SVWH
CT$0L
L$PH3
@SUVWAVH
fD94Au
t$ E3
L$`H3
pA^_^][
UVWAVAWH
wOH9W
A_A^_^]
L$XH3
@USVWH
x_^[]
UVWATAUAVAWH
`A_A^A]A\_^]
@SVWH
D$ H+D$8u
D$(H+D$@u
D$0H+D$HH
L$PH3
(D$0f
D$09D$ t
D$ E3
wRH9Q
q@Q4K
@USVWATAUAVAWH
L9a(u
D8g4u
D9eHt
D9ePt
D8g6tZA
D8g6D
HA_A^A]A\_^[]
[H9)t
USVAVH
(A^^[]
t$ WH
9)v4H
VWATAVAWH
D$0t,M
A_A^A\_^
VWAVH
 A^_^
9O4t;
p WAVAWH
 A_A^_
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
x AVH
9*v4H
L$@9L$ t
q@Q4K
WAVAWH
 A_A^_
UVATAVAWH
A_A^A\^]
UVWATAUAVAWH
A_A^A]A\_^]
SUVWAVH
0A^_^][
G$8G#u+3
x UAVAWH
A_A^]
t$ UWATAVAWH
A_A^A\_]
@8o#u
v[H;K
@8o#t|
l$ E3
@8o#ui@8o$tc
H9ohv(H
H;Ohr
H;Ohr
9l$`A
x UATAUAVAWH
f(L9v8
D;|$`
D$0A;
D$0L!D$8I
D$0E;
D$0L!D$8H
A_A^A]A\]
` UAVAWH
A_A^]
h VWAVH
xI;o(r
 A^_^
t$ WH
D#D$0D
3D$8%
3D$8%x
UVWAVAWH
M98t7E8x
A_A^_^]
UAVAWH
@A_A^]
UVWATAUAVAWH
A9_0t0H
D$xA;
tpE9w0t9A
0A_A^A]A\_^]
@SUVWH
D$0L;
@USVWAVH
H!}8H
E8H!}@H
H!}8H
 A^_^[]
qB^Xh
qB^Xh
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
9s(v'H
0A_A^A]A\_^]
x AVH
L$PH3
UWAVH
w(;w(v
PA^_]
t$ WH
UWAVH
@USVWAVH
A^_^[]
x UATAUAVAWH
@8t$0t
I;~8sTH
A_A^A]A\]
UVWAVAWH
A_A^_^]
UVWAVAWH
0A_A^_^]
:C$uWH
WAVAWH
u,!]0H
@A_A^_
L$ WH
8C#u'3
UVWAVAWH
D;v(r
@A_A^_^]
A,9A(
BX9A4t
D$`E3
L$`H3
fA9<Hu
fA9<Au
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
WAVAWH
fD9<Ou
D9;}OH
A_A^_
p)P47
q@Q4K
q(X|S
qBR:&
pBR:&
@8s t
fB94@u
L$0H;
q@Q4K
UWAVH
\$ UVWAVAWH
A_A^_^]
x AVH
D$8H;
t$ WAVAWH
0A_A^_
WAVAWH
0A_A^_
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USVWAVAWH
pBQ:$
A_A^_^[]
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
\$ UVWATAUAVAWH
D9|$PuSH
D9|$P
D9|$HtID8|$XtBD;
D8t$0t
A_A^A]A\_^]
@USVWAVAWH
HA_A^_^[]
@USVWAVAWH
XA_A^_^[]
@USVWAVH
A^_^[]
t$ UWATAVAWH
D8d$Pt
A_A^A\_]
VWAVH
PA^_^
VWAVH
PA^_^
x UATAUAVAWH
D9l$8
L9l$x
D9l$8
A_A^A]A\]
q@Q4K
t$ WH
D$ E3
WAVAWH
fD94Gu
@A_A^_
\$ UVWAVAWH
|$ E3
D$ E3
fD9<Fu
A_A^_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
UAVAWH
A_A^]
@USVWAVH
A^_^[]
@USVWATAVAWH
F D9 
F0D9 
F8D8 
F0D9 A
0A_A^A\_^[]
q@Q4K
USVWH
@USVWAVAWH
A_A^_^[]
@USWH
@USVWAVH
PA^_^[]
|$ AVH
t$@I!
UVWATAUAVAWH
l$8E3
A_A^A]A\_^]
x UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
@USVWAVH
A^_^[]
@USWH
@USVWATAUAVAWH
D9mHt
]PD9mHt
]PD9mHt
hA_A^A]A\_^[]
\$ UVWH
H;{Pr
q8V~{/q
@USVWH
H;{PsJH
H;{Pr
H_^[]
L$ UVWH
fA9<Hu
f9<Ju
fA9<Au
fA9<Hu
fA9<Ku
fA9<Ju
fA9<Iu
f9<Cu
L$ UH
q@Q4K
q@Q4K
UWAVH
t$ WAVAWH
 A_A^_
x AVH
UATAUH
H9MPv
H9MPu
A]A\]
qy\2F
qy\2F
WAVAWH
 A_A^_
py\2F
H9{`v2H;{Pr
H;{`r
@USVWAVH
9]@u69]Hu1H
]0:]@
 A^_^[]
H9{Pv
H;{Pr
H9sPvg3
H;{Ps
H;{Pr
H;{Pr
x AVH
|$ UH
UWAVH
D$8E3
\$0E3
D$8E3
\$0E3
\$@E3
D$8E3
L$0E3
@USVWH
H_^[]
\$ WH
D$ E3
UVWATAVH
0A^A\_^]
\$ UVWH
UVWAVAWH
fE9<Fu
PA_A^_^]
\$ UVWH
|$ UH
@USVWH
H_^[]
\$ WH
\$ UVWH
\$ UVWH
|$ UH
p"Y~/
q@Q4K
q"Y~/
q"Y~/
UVWATAUAVAWH
A_A^A]A\_^]
VR4/]
x AVH
VR4/]
qj[8T
x AVH
VR4/]
pj[8T
pj[8T
VR4/]
qBQ6]/
t$ WH
VR4/]
VR4/]
@USVWAUAVAWH
A_A^A]_^[]
WATAUAVAWH
tSH;_
xXH;_
 A_A^A]A\_
x AVH
VWAVH
@USVWAVH
A^_^[]
@USVWATAVAWH
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
|$ UAVAWH
@A_A^]
UWATAVAWH
D8egtbM
A_A^A\_]
WATAUAVAWH
8A9}Hu<A8
A_A^A]A\_
|$ UAVAWH
@A_A^]
uvI!S
VWAVH
Cl tSH
 A^_^
UWAWH
UVWAVAWH
L$xH3
A_A^_^]
UVWATAUAVAWH
$I9G@
D8mGt,H
$H9\$@
A_A^A]A\_^]
\$ UVWAVAWH
t$8E3
A_A^_^]
@USVWATAUAVAWH
d$ E3
 tZHcE
l$ E3
 tZHcE
A_A^A]A\_^[]
|$ UAVAWH
VR4/]
pj[8T
pj[8T
pj[8T
pBQ6]/
A_A^]
fA9<Hu
fA9<Iu
fA9<Cu
L$pH3
@USWH
u6;](s1H
@USWH
q@Q4K
~D$(fA
L$hH3
@8uou+H
t$ E3
|$ UH
\$ UVWAVAWH
u&D8x
pA_A^_^]
\$ WH
\$ UVWH
|$ UH
UVWATAUAVAWH
D9t$ 
t$4A+
\$8A+
A_A^A]A\_^]
UVWAVAWH
5D9|$HtJH
D9|$P
D9|$PtT
D9|$PtHH
A_A^_^]
H!|$ 3
UAVAWH
0A_A^]
@USVWATAUAVAWH
A_A^A]A\_^[]
p@Q4K
@USWH
T$0t#H
L$HH3
8PPu#
q@Q4K
@USWH
UATAUAVAWH
}0D;t$P
9upu"E3
D$X9t$XH
A_A^A]A\]
UWAVH
@A^_]
\$(8YPu!
UWAVH
u=@8yMt7@8yNu1H
L$ UH
UWAVH
WAVAWH
@A_A^_
@USVWATAUAVAWH
D$ fD
9t$8|
@85_Z 
t(@85$Z 
9t$@t
9t$@t
x UAVAWH
A_A^]
D8D$0u.D8D$8t
!D8D$@t
D8D$HA
UVWAVAWH
0A_A^_^]
t$ UWAVH
D$0!|$@L
t<H9}
@USVWAVH
`A^_^[]
|$ UATAUAVAWH
A_A^A]A\]
piYZX
@USVWH
@USVWATAUAVAWH
D$pE3
A_A^A]A\_^[]
D$(E3
@ !H0H
@8!HHH
@P!H`f
L$0E3
|$ UATAUAVAWH
"HcE0
}X;u0
D9mPt
D9+u0
D9+tK
A_A^A]A\]
|$ UAVAWH
"HcE 
A_A^]
fB9<@u
p AWH
WATAUAVAWH
w\I;H
 A_A^A]A\_
t$ UWAVH
L$ E3
0A^_]
UAVAWH
Hu2fD9
A_A^]
UWAVH
|$ UATAUAVAWH
t=D9+t8L
t%E9(t M
tQD9*tLH
A_A^A]A\]
VWATAVAWH
fD9$Au
0A_A^A\_^
VWAVH
USVWH
USVWH
USVWH
USVWH
USVWH
USVWH
USVWH
UWATAVAWH
@A_A^A\_]
WAVAWH
A_A^_
UATAUAVAWH
uP;uH
A_A^A]A\]
\$ WH
L$XH3
\$ UVWAVAWH
A_A^_^]
f94Cu
f94Cu
UWAWH
D$8 tK
x AVH
UVWATAUAVAWH
fD97tYf
?/tSL
t.L9g
A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
H9Fhs
 A_A^A]A\_
WATAUAVAWH
H9Ghs
 A_A^A]A\_
qP[\=
H!C(H
H99t$H
x AVH
@USVWH
H!]@H
(_^[]
@USWATAVAWH
D9uou7H
D9uot
D9uwt7
D9uwu
D9uot'L
D9uot4D8ugt.L
D9uot'L
A_A^A\_[]
@USVWAVH
L9u8u
@A^_^[]
\$ UVWH
H9uwu"
@8ugu
9uotRH
@8uot
VWAVH
 A^_^
t$ WH
UVWAVAWH
@8u0t
@A_A^_^]
UWAVH
\$ E3
USVWATAVAWH
PA_A^A\_^[]
UVWAVAWH
PA_A^_^]
USVWATAVAWH
PA_A^A\_^[]
9D$Pt
VWAVH
s[H;_
 A^_^
UVWATAUAVAWH
D9e@t
D9eXt4H
nD9e@tDH
A_A^A]A\_^]
UWAVH
UWAVH
UVWAVAWH
A_A^_^]
D$(E3
@USVWAVAWH
8A_A^_^[]
@USVWAVAWH
8A_A^_^[]
@USVWAVAWH
8A_A^_^[]
@SVWH
D$PE3
D$8E3
UVWATAUAVAWH
t$ E3
fA94Fu
A_A^A]A\_^]
WAVAWH
A_A^_
D$XE3
t$PE3
x UATAUAVAWH
D8ewt#D9eOA
D8eot#H
A_A^A]A\]
t$ WAVAWH
Et$@H
9\$Pv[H
;\$Pr
L$`H3
A_A^_
t$ WH
@USWH
UWAVH
@USWH
UVWATAUAVAWH
xKI;w
@8|$0
@8|$1u
A_A^A]A\_^]
L$XH3
UWAUAVAWH
A_A^A]_]
USVWATAUAVAWH
A_A^A]A\_^[]
VWAVH
tAfD92t;M
D$(E3
x ATAVAWH
A_A^A\
x ATAVAWH
A_A^A\
@USVWAVH
A^_^[]
UATAUAVAWH
xyI;v
A_A^A]A\]
VWATAVAWH
 A_A^A\_^
L$8H3
@SVWATAUAVAWH
D8l$`u
l$aD8l$d
D$cE3
D$cD9|$tt
D$h8T$du
D;|$ls
t$fE3
9D$pv3A
D;|$pr
D$eE3
A_A^A]A\_^[
L$ UH
@USVWAWH
]HH!]@D
D$ E3
0A__^[]
L$@H3
UWAVH
PA^_]
|$ UH
T$ E3
t$ UWAVH
@USVWH
JH@8r(u
@8qau
T$ E3
q@Q4K
VWAVH
0A^_^
L$@H3
L$HH3
L$@H3
UVWAVAWH
PA_A^_^]
x AVH
fD94Zu
L$PH3
D$`E3
L$`H3
L$pH3
:H99tCH
` AUAVAWH
0A_A^A]
UVWATAUAVAWH
7M9f(
7M9f0
L9`8u$
`A_A^A]A\_^]
VWAVH
@A^_^
VWAUAVAWH
0A_A^A]_^
|$ UATAUAVAWH
vXI9<
A_A^A]A\]
VWATAVAWH
 A_A^A\_^
WAVAWH
A_A^_
t$ WH
9qPvsH
VWATAUAVH
0A^A]A\_^
VWAUAVAWH
tz;oPsuH
TH9_Ht@H
 A_A^A]_^
UAVAWH
A_A^]
UVWATAUAVAWH
 A_A^A]A\_^]
USVWH
@USWH
@SUVWH
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
D$8E3
d$0E3
D$8E3
d$0E3
d$@E3
A_A^A]A\]
|$ UAVAWH
pASTJ
0A_A^]
UWAVH
|$ UAVAWH
A_A^]
UVWAVAWH
pA_A^_^]
t7fA99t1M
t$ UWAVH
L9t$P
D$8E3
t$0E3
D8s<ta
p WAVAWH
C !C0!C8
0A_A^_
UAVAWH
A_A^]
` UAVAWH
c<D8c<t#
A_A^]
WATAUAVAWH
@A_A^A]A\_
UWATAVAWH
WHL+G@I
A_A^A\_]
|$ UH
L$PE3
t$ WH
!T$@A
x AVH
UVWAVAWH
A_A^_^]
UWATAVAWH
xBL9eHt<A
_HD8e@t
D9#t(
E9&u$D9#u"H
cD9#v+L
E9&v+L
A_A^A\_]
q@Q4K
q@Q4K
UWAVH
t$ WAVAWH
 A_A^_
x AVH
UATAUH
H9MPv
H9MPu
A]A\]
qy\2F
qy\2F
@USWH
WAVAWH
 A_A^_
py\2F
H9{`v2H;{Pr
H;{`r
@SVWH
@USWH
H9{Pv
H;{Pr
UWAVH
!t$@H
pCZry
@USVWATAVAWH
F(D8 
F(D8 
pA_A^A\_^[]
\$ WH
WAVAWH
fD94Bu
@A_A^_
@UVWAVAWH
L9}oufD
t*D9}gu$H
A_A^_^]
@USVWH
D$ E3
\$ UVWH
q8V~{/q
\$ E3
\$ UVWATAUAVAWH
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
|$ E3
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
|$ E3
D8|$ht2H
|$ E3
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
D8|$ht2H
A_A^A]A\_^]
L$HH3
USVWAVH
A^_^[]
USVWAVH
A^_^[]
USVWAVH
A^_^[]
UWATAVAWH
D8e@t
A_A^A\_]
UVWAVAWH
D8}8t
A_A^_^]
USVWAVH
A^_^[]
USVWAVH
A^_^[]
t$ WH
@USWH
!t$@H
pCZry
|$ UH
x AVH
WAVAWH
 A_A^_
x AVH
t_H9{
u#H!x
WATAUAVAWH
H9/sDH
 A_A^A]A\_
x AVH
uPH9i
\$XE3
\$PE3
$9\$`tIH
9\$`u
|$ AVH
fD94Au
L9t$Xu
L$XE3
\$ UVWH
t$X@8
t$ E3
t$ E3
t$ E3
D$ E3
x AVH
9.tkf
9+teL
t$ UWATAVAWH
A_A^A\_]
D$@H;
q8V~{/q
@USVWATAVAWH
PA_A^A\_^[]
CT$(H
L$HH3
@USVWAVAWH
A_A^_^[]
WATAUAVAWH
LD9&v9H
A_A^A]A\_
@USVWATAUAVAWH
D9egt8H
E9&uQH
D9egu)E3
fD9$Au
D9egt$L9e
D9egt$L9e
A_A^A]A\_^[]
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
9uPt/H
9uPtBH
A_A^A]A\_^]
@USVWAVAWH
hA_A^_^[]
D$@H;
WAVAWH
D9|$0
D9|$0
A_A^_
8\$PtLH
CT$0H
q8V~{/q
@USVWATAUAVAWH
l$ E3
D9(vVH;
l$ E3
HA_A^A]A\_^[]
UVWAVAWH
|$ E3
PA_A^_^]
x AVH
paPt,
USVWH
h_^[]
p AWH
WAVAWH
 A_A^_
p AWH
WAVAWH
 A_A^_
UWAVH
PA^_]
p AWH
WAVAWH
 A_A^_
q@Q4K
@USVWAWH
0A__^[]
|$ AVH
VWATAVAWH
 A_A^A\_^
v>H;O
R0G6$
R0G6$
t$ WH
VWAVH
 A^_^
L$8H9
L$@H3
UWATAVAWH
A_A^A\_]
\$<;A
|$ UH
p WAVAWH
H!l$@
 A_A^_
UVWATAUAVAWH
 A_A^A]A\_^]
UAVAWH
fB9<Bu
A_A^]
@USWH
|$ UH
UWAVH
"HcE 
@A^_]
WAVAWH
0A_A^_
WAVAWH
@A_A^_
UVWAVAWH
|$ fD
D$(H;
D$(H;
A_A^_^]
D$ L;
x ATAVAWH
fD9#t
 A_A^A\
VWATAVAWH
fE9$@u
L$hH+
0A_A^A\_^
t$ UWAVH
t$PD8
L9t$x
L9t$x
@SVWH
CL$@L+
CL$@E3
H9\$PH
B\$PH
CT$@L
CL$@L
UWAUAVAWH
A_A^A]_]
UAVAWH
D8|$0
D8|$1ujL
A_A^]
x UATAUAVAWH
D9l$@
D$8D9l$@D
D9l$@tE
fF9,zu
A_A^A]A\]
UWAVH
@A^_]
t$ UWAVH
\$ UVWATAUAVAWH
@8|$0tK@
@8|$0
@8|$0tO@
@8|$0
A_A^A]A\_^]
f99toM
UWATAVAWH
D8e`u@D
D8e`t
A_A^A\_]
UVWAVAWH
fG9<Hu
fD9<Qu
D8}wt
A_A^_^]
q8V~{/q
@USVWATAVAWH
pA_A^A\_^[]
UVWATAUAVAWH
L$xE3
0A_A^A]A\_^]
q@Q4K
WAVAWH
H;~0s\H
H;~0s
 A_A^_
UVWAVAWH
 A_A^_^]
x AVH
H;_Ps_H
H;_Ps
H9Y0vbH;Y0r
H;_0r
H;_0r
p WAVAWH
t$@@2
@8|$@t4I
 A_A^_
L$8H3
@USWH
@USVWAVAWH
A_A^_^[]
WAVAWH
 A_A^_
98v*H
q@Q4K
UAVAWH
A_A^]
x UAVAWH
A_A^]
@USVWATAUAVAWH
D;|$h
D;t$l
D$ E3
A_A^A]A\_^[]
UVWATAUAVAWH
D9uXtHD
D8uXt
`A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
A_A^A]A\]
@SUVWAVH
A^_^][
USVWATAUAVAWH
D$XH!\$`H!\$hH!\$p
A_A^A]A\_^[]
D$HE3
Q L;J
q@Q4K
\$ VWAVH
vFH;J
 A^_^
p@Q4K
x AVH
t%fE91t
t$ WH
D#D$0D
3D$8%
3D$8%x
t4E9B
L$ WH
L$ WH
p WAVAWH
 A_A^_
{ ATAVAWH
fD9#t
0A_A^A\
VWAVH
D$ E3
0A^_^
q@Q4K
qKPV!
t$ WH
x AVH
t$ WH
WAVAWH
fE9<xu
L9|$Pu
0A_A^_
L$xE3
VWAVH
0A^_^
WAVAWH
fE9<xu
L9|$Pu
0A_A^_
@USVWAVH
 A^_^[]
t$ WH
|$ UATAUAVAWH
A_A^A]A\]
@USVWAVAWH
H!}@H
vHD+p
H9^0tGH
(A_A^_^[]
H;Q0s
UVWATAUAVAWH
fA94|u
fA94|u
fC9<tu
A_A^A]A\_^]
x AVH
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
WAVAWH
 A_A^_
ATAVAWH
fE9$xu
L9d$0u
@A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
 A_A^_^]
UVWAVAWH
MHH9O(t*H
0A_A^_^]
UWATAVAWH
A_A^A\_]
qjSt=
VWAVH
 A^_^
UVWATAUAVAWH
 A_A^A]A\_^]
pjSt=
f94Au
L$PH3
f9<Qu
A(A;@
A(A;@
@SVWH
VWAVH
 A^_^
x AVH
H;S(v
` UAVAWH
A_A^]
VWAVH
@USVWATAVAWH
;D8d$`tUH
prTzz
D8d$B
pKPV!
p[]T?
D8d$A
E H+E
E(H+E
D8d$A
D8d$@t9H
D8d$@t*H
D8d$@t)H
A_A^A\_^[]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
D8eXtCD8eH
D8eHt{I
pA_A^A]A\_^]
UATAUAVAWH
tCD8m
A_A^A]A\]
\$ UVWAVAWH
A_A^_^]
UWATAVAWH
D8e0t7H
A_A^A\_]
UVWATAUAVAWH
`A_A^A]A\_^]
t$ UWAVH
UAVAWH
A_A^]
\$ UVWAVAWH
A_A^_^]
UAVAWH
A_A^]
\$ UVWAVAWH
A_A^_^]
t$ UWATAUAVH
p[Z~v
D8t$@t8H
L$xE3
D8t$A
D8t$Bt
A^A]A\_]
UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
`A_A^_^]
pcXV/
UVWATAUAVAWH
H91tH
H91ucH
A_A^A]A\_^]
t$ UWATAVAWH
pKPV!
A_A^A\_]
UVWAVAWH
prRPf/
A_A^_^]
UWAVH
\$ UVWAVAWH
A_A^_^]
UWATAVAWH
D8e0t7H
A_A^A\_]
\$ UVWAVAWH
A_A^_^]
@USVWATAUH
A]A\_^[]
t$ UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
D8l$@t\D
D8l$@t\D
pBZVZ
D8l$@t+H
D8l$@t*H
D8l$@
L$pE3
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
VWAVH
L$HE3
 A^_^
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
L$0E3
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
@USVWAVH
@A^_^[]
UWATAVAWH
fD9$Pu
fE9$Nu
A_A^A\_]
UATAUAVAWH
fA94Lu
fA94@u
f94Cu
f94Wu
A_A^A]A\]
UWATAVAWH
fD9$Pu
fE9$Nu
A_A^A\_]
UVWATAUAVAWH
pA_A^A]A\_^]
UAVAWH
A_A^]
qC\r4
A(A;@
\$ UVWH
t$ WH
@USVWAVH
A^_^[]
UWAVH
\$ WH
q8V~{/q
t$ UH
\$ WH
t$ WH
t$hH9q
WATAUAVAWH
D8l$x
D$hfD
(D$Pf
(L$`f
A_A^A]A\_
L$hH3
L$hH3
t$ WH
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
@USVWAVH
@A^_^[]
{ AVH
q@Q4K
t$ WH
t$@H+
D$Xf90u
D$`HcH
UVWATAUAVAWH
D8mXtR3
0A_A^A]A\_^]
UVWATAUAVAWH
D97v\
tXE84$u#
)E87D
 A_A^A]A\_^]
|$ ATAVAWH
q0E9&t
pHT<m
p{W\$
L9d$xt 3
\$xH+
A_A^A\
UVWAVAWH
@A_A^_^]
@USWH
D$ E3
t$ WATAUAVAWH
T$0E3
l$PD8i(
D$ E3
H+|$8I;
|$@I;
D$8H;
D$hD8o
D8k(t#L
A_A^A]A\_
@SVWAVH
9D$@t?H
hA^_^[
WAVAWH
@A_A^_
ATAVAWH
 A_A^A\
D8A#u
A"D8A#t
Ap$"<
H;GhH
BGhH+
VWAVH
 A^_^
98v-H
98v-H
98v-H
98v.H
q@Q4K
UVWAVAWH
H9D$ 
A_A^_^]
|$ AVH
H9{0uAH
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
@A_A^_^]
UVWATAUAVAWH
L9|$0
D9|$<t,H
D9|$P
A_A^A]A\_^]
@USVWAVAWH
L93t2H
A_A^_^[]
x AUAVAWH
~D$(f
A_A^A]
T$HE3
WATAVH
@A^A\_
x UATAUAVAWH
D$pE3
H+\$x
H;\$ps
H;\$p
A_A^A]A\]
x AVH
fD94Zu
trfD92tlH
UWATAVAWH
fD9!u
fD9$Au
fD9"u
fE9 u
fE9$@u
fD9!u
fD9$Cu
fE9$Ou
fD9$~u
A_A^A\_]
L$(E3
D$ E3
UVWATAUAVAWH
fA9\M
fD9<~u
`A_A^A]A\_^]
t$P9T$0A
x ATAVAWH
fD9#t
 A_A^A\
WAVAWH
f9,^u
 A_A^_
x AVH
t$ WH
@USWH
UWAVH
 A^_]
x AVH
D$0u 
t<Lc@
L$`H3
WAVAWH
 A_A^_
{ AVH
UWAVH
 A^_]
WAVAWH
 A_A^_
{ AVH
x AVH
x ATAVAWH
fD9$xu
 A_A^A\
t$ WH
x AVH
UVWATAUAVAWH
psVV%
pz\:(
A_A^A]A\_^]
W2a')
_^6&a
@USVWATAUAVAWH
SRD1t
A_A^A]A\_^[]
L$@H3
@USVWATAUAVH
A^A]A\_^[]
x AVH
{ AVH
UWAVH
UWAVH
UWAVH
0A^_]
UATAVH
0A^A\]
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
t$ WH
T$0E3
UWAVH
 A^_]
VWAVH
0A^_^
UAVAWH
@A_A^]
WAVAWH
 A_A^_
{ AVH
UWAVH
UVWAVAWH
@A_A^_^]
x AVH
x AVH
VWAVH
 A^_^
|$ UAVAWH
0A_A^]
|$ UAVAWH
0A_A^]
` UAVAWH
@A_A^]
VWAVH
@A^_^
UWAVH
PA^_]
@USVWAVH
0A^_^[]
UWAVH
 A^_]
USVWAVH
A^_^[]
x AVH
{ AVH
UWAVH
` UAVAWH
@A_A^]
VWAVH
0A^_^
UWAVH
@A^_]
UWAVH
UWAVH
UAVAWH
A_A^]
\$ UVW
D$pE3
x AVH
t$ WH
L$`H3
L$TE3
H9{8v
H;{8r
D$`Hcy
L$`H3
\$ WH
WAVAWH
A_A^_
L$8H3
L$`H3
L$ WH
L$HH;
@USVWAVH
H+CXH
A^_^[]
H WATAUAVAWH
A_A^A]A\_
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
D$`Hcy
L$`H3
L$ SVWH
=;\$8t5
Y;\$8tQ
3;\$8t+
@USWH
@USWH
@USWH
t$ WH
` UAVAWH
!D$x!D$p!D$tL
A_A^]
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
l$ VWATAVAWH
A_A^A\_^
f9,Nu
f9,Pu
VWATAVAWH
@A_A^A\_^
t$ WH
f9,Hu
f9,Vu
VWAVH
 A^_^
UVWATAUAVAWH
l$PE3
H;\$Ps
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
x AVH
fD94Zu
trfD92tlH
WAVAWH
 A_A^_
{ AVH
UWAVH
UWAVH
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
L$@H3
8SRD1t
|$ UATAUAVAWH
fD9,qu
fD9,_u
0A_A^A]A\]
UAVAWH
@A_A^]
WAVAWH
0A_A^_
fD9|]
UWAVH
 A^_]
L$ SH
UWATAVAWH
H!]0L
A_A^A\_]
D$x0u
D$H0u
|$ UH
UAVAWH
@A_A^]
UWAVH
0A^_]
x AVH
UVWATAVH
A^A\_^]
UVWATAUAVAWH
D9>v[H
pA_A^A]A\_^]
L$8H3
@USVWATAUAVAWH
A_A^A]A\_^[]
L$pH3
UVWATAUAVAWH
|$ D+
t$ D+
|$ D+
A_A^A]A\_^]
USVWATAUAVAWH
mwt3H
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
T$ E3
\$ E3
D$`E3
L$`H3
UATAUAVAWH
fE9$Ju
fE9$Ku
fD9$Ku
fD9$Ou
fD9$Nu
fE9$Nu
fE9$Gu
A_A^A]A\]
L$ UH
@USVWH
` UAVAWH
A_A^]
x AVH
x AVH
t$ WH
t$ WH
t$ WH
UWAVH
x AVH
UWAVH
 A^_]
UWAVH
 A^_]
UVWATAVH
PA^A\_^]
UATAVH
A^A\]
` UAVAWH
@A_A^]
UWAVH
` UAVAWH
@A_A^]
VWAVH
@A^_^
UWAVH
PA^_]
@USVWAVH
0A^_^[]
UWAVH
 A^_]
@USVWAVAWH
A_A^_^[]
@USVWAVAWH
A_A^_^[]
x AVH
{ AVH
UWAVH
 A^_]
UWAVH
 A^_]
x AVH
{ AVH
VWAVH
@A^_^
L+C0L;
tOH;{
UVWAVAWH
PA_A^_^]
C H;>r
@USWH
@USVWH
_^[]H
@USWH
|$ UATAUAVAWH
D8q8uyH
D8s8u_H
pRU>'
A_A^A]A\]
UWATAVAWH
}Pt}H
 A_A^A\_]
D$ SRD1H
t$ UWAVH
L$0E3
L$@E3
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@USWH
@USWH
@USWH
@USWH
@USWH
UVWAVAWH
@A_A^_^]
UATAUAVAWH
A_A^A]A\]
|$ UAVAWH
0A_A^]
UVWAVAWH
A_A^_^]
t$ WH
@SVWH
@SVWH
@USWH
@USWH
VWAVH
H;\$Xs7M
 A^_^
@SVWH
UWAWH
E8H!}8H
 @8}(t?L
@A__]
VWAVH
0A^_^
UWAVH
VWAVH
@A^_^
UWAVH
PA^_]
VWAVH
0A^_^
UWAVH
@A^_]
VWAVH
@A^_^
UWAVH
PA^_]
UVWATAVH
`A^A\_^]
UATAVH
A^A\]
UVWATAVH
`A^A\_^]
UATAVH
A^A\]
` UAVAWH
@A_A^]
UWAVH
x ATAVAWH
fD9'u
 A_A^A\
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
L$hH3
f9,Au
WATAUAVAWH
H9T$x
 A_A^A]A\_
tZf97tUH
HcK(A
GNHcK(A
x ATAVAWH
D#CtA
C`#St
D#CtD
 A_A^A\
WATAUAVAWH
C`#St
D#CtA
 A_A^A]A\_
x AVH
WATAUAVAWH
F(D9h,u
D#GtD
 A_A^A]A\_
G()p(H
\$ UVWATAUAVAWD
L$PI#
\$XD;
A_A^A]A\_^]
ATAVAWH
 A_A^A\
WATAUAVAWH
~VHcS(A
HcK(H
~VHcS(A
HcK(H
 A_A^A]A\_
~\IcR(A
IcJ(H
~1LcA(H
HcI(H
HcQ(H
WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
T$xHc
A_A^A]A\_^][
McC(A
IcK(f
l$ VWATAUAVAW
\$8Lc
Hc\$@E
l$PA_A^A]A\_^
L$ H3
r}6Ic
|$(A^
x ATAVAWH
 A_A^A\
x ATAUAVAWD
~ZIcQ(A
IcI(H
IcQ(fA
IcI(H
~XIcQ(A
IcI(H
~]IcQ(A
IcI(H
~ZIcQ(A
IcI(H
~TIcQ(A
IcI(H
~ZIcQ(A
IcI(H
~WIcQ(A
IcI(H
|$@A_A^A]A\
USVWATAUAVAWH
]PL;iPs
L;oHu$H
O@H9OPt
MHL;oHu!H
]PL;oPs
oXL9oPt4A
xA_A^A]A\_^[]
x ATAVAWH
~@H9FXu
 A_A^A\
UVWATAUAVAWH
L$ Ic
D$HA;
T$@A*
A_A^A]A\_^]
WAVAWH
D$@E3
A_A^_
WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
\$`L;APs
\$`E3
G@H9GP
\$`L;GPs
\$`L;
G@H9GPt
\$`L;
GXL9GPt
0A_A^A]A\_
SUVWATAUAVAWH
l$pL;OPs
G,A_A^A]A\_^][
x AVH
K H;O
W H;S
G L;C
x AVH
|$ AVH
x ATH
tV8_HuQH
tV8_IuQH
tY8_JuTH
L$ WH
L$ WH
t$ WH
t$ WH
pBR:&
L$PH3
UVWAUAVH
pA^A]_^]
UVWAUAVH
pz\:(
pA^A]_^]
qKPV!
t$ WH
qKPV!
@USWATAUAVAWH
A_A^A]A\_[]
t$ WH
t$ WH
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
H;Q0s
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
p AWH
WAVAWH
t99K u
 A_A^_
@SVWH
@SVWH
qB^Xh
t$ WAVAWH
 A_A^_
t$ WAVAWH
0A_A^_
]8H9^@t5H
]8H9^@t5H
UVWATAUAVAWH
PA_A^A]A\_^]
USVWATAVAWH
`A_A^A\_^[]
WAVAWH
tO9_HtJH
 A_A^_
VWAVH
0A^_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
0A_A^A]A\_
@SVWH
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
H;S(v
q)P47
pBR:&
L$XH3
WAVAWH
0A_A^_
VWAVH
L$HE3
 A^_^
USVWAUAVAWH
H!]PL
0A_A^A]_^[]
UVWAVAWH
)t$PL
(t$PH
`A_A^_^]
L$0E3
VWATAVAWH
A_A^A\_^
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
|$ UH
pBR:&
pZ\tW
qZ\tW
\$ UVWH
\$ UVWH
L$ WH
L$ WH
L$ WH
L$ WH
t$ WH
t$ WH
|$ UAVAWH
pBR:&
p(X|S
A_A^]
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
t$ WH
UWAVH
@A^_]
UVWAVAWH
}HI!8H
D$ tk
`A_A^_^]
UAVAWH
@A_A^]
UWATAVAWH
D$ tk
A_A^A\_]
t$ WH
t$ WH
t$ WH
t$ WH
UVWAVAWH
@A_A^_^]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWAVAWH
H!}@H
vHD+p
H9^0tGH
(A_A^_^[]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
@SVWH
@SVWH
@SVWH
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
qjSt=
qPR<M
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
qPR<M
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
qPR<M
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
q)P47
pBR:&
p(X|S
L$XH3
q)P47
pBR:&
p(X|S
L$XH3
L$PH3
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
D$hH;
D$hH;
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
pjSt=
0A^_^
VWAVH
0A^_^
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
\$ UVWH
\$ UVWH
\$ UVWH
L$8L+
L$8L+
\$8E3
\$8E3
\$8E3
\$8E3
L$8L+
\$8E3
\$8E3
L$8L+
\$8E3
L$8L+
\$8E3
\$8E3
L$8L+
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
\$8E3
L$8L+
\$8E3
W H+W
W H+W
\$ VWAVH
PA^_^
\$ VWAVH
PA^_^
\$ VWAVH
PA^_^
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
L$ WH
C H!C(H
VWAVH
0A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
@A^_^
\$ UVWAVAWH
A_A^_^]
@USVWATAVAWH
D8d$0
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
\$ UVWAVAWH
H!D$(H!D$ L
A_A^_^]
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
WAVAWH
pBR:&
A_A^_
VWAVH
0A^_^
WAVAWH
 A_A^_
VWATAVAWH
A_A^A\_^
x AVH
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WAVAWH
 A_A^_
x AVH
x ATH
H+L$(H
WATAUAVAWH
D$8E3
A_A^A]A\_
UVWAVAWH
PA_A^_^]
UVWAVAWH
PA_A^_^]
t$ WAVAWH
@A_A^_
t$ WAVAWH
@A_A^_
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
0A^_^
{ AVH
pHT^I
t$ WH
L$PH3
t$ UWATAVAWH
pz\:(
A_A^A\_]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
\$ VWAVH
UATAUAVAWH
M9.ubI
pjSt=
pz\:(
A_A^A]A\]
UATAUAVAWH
M9.ubI
pjSt=
A_A^A]A\]
t$ WAVAWH
D92u&H
D92u&H
D8t8@thD8
uVHc^$H
D8t9@tYHc^
0A_A^_
UVWATAUAVAWH
D8l8@
D8l8@u
D8l8@u
A_A^A]A\_^]
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
t$ WH
qKPV!
qKPV!
qKPV!
qKPV!
VWAVH
f9,Au
fB9,Ju
0A^_^
t$ WH
UVWAVAWH
D8~Xu
D8~htiH
D8~xteH
A_A^_^]
t$ WATAUAVAWH
t$8L;
D8d8@A
D8d8@t
A_A^A]A\_
t$ WATAUAVAWH
\$pI;
A_A^A]A\_
VWAVH
D8wxt
VWATAVAWH
HcF D8d8H
A_A^A\_^
t$ WATAVH
d$0D8
A^A\_
t$ WATAUAVAWH
\$8I;
D8g|t
A_A^A]A\_
VWAWH
SUVWH
8_^][
\$ UVWAVAWH
A_A^_^]
\$ UVWAVAWH
A_A^_^]
q[Z~v
@SUVWAVH
D$PH!|$@H
`A^_^][
t$ UWAWH
UVWAVAWH
@A_A^_^]
L$PH3
@SUVWAVH
D$PH!|$@H
`A^_^][
SUVWH
8_^][
SUVWH
8_^][
@SUVWAVH
D$PH!|$@H
`A^_^][
@USVWAVAWH
A_A^_^[]
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
@USVWAVH
 A^_^[]
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
@USVWATAVAWH
H!}HH
~HD+x
4$L9w@t5M
H9^0tGH
0A_A^A\_^[]
t$ WH
D#D$0D
3D$8%
3D$8%x
@USWH
0Ic@ I
HcG H
D$ E3
@USWH
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D9}H|
@A_A^A]A\_^]
VWAVH
L$`H3
pA^_^
L$PE3
L$`E3
t09q u
L$XH3
UWAVH
@SVWH
\$ UH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
VWAVH
;t$@t
 A^_^
l$ VWAVH
H+D$ u
H+D$(H
L$0H3
@A^_^
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
]8H9^@t5H
UWAVH
UVWATAUAVAWH
PA_A^A]A\_^]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
8\$`uI
8\$`t
L$`H;
L$`H3
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
qqTt>
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
VWAUAVAWH
;l$Pt
 A_A^A]_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
qqTt>
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
l$ VWAUAVAWH
H+D$(u
H+D$0H
L$8H3
A_A^A]_^
qqTt>
VWAVH
0A^_^
)t$0I
(t$0H
)t$0I
(t$0H
)t$0I
(t$0H
)t$0I
(t$0H
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
H;S(v
x AVH
H;S(v
D$ E3
\$ UVWATAUAVAWH
pAXxi
A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
q)P47
@USVWATAUAVH
pBR:&
A^A]A\_^[]
q)P47
UVWAVAWH
pBR:&
pA_A^_^]
x AVH
@SVWH
pBR:&
L$`H3
x AVH
pHW>8
p(Q6k7(
@SUVWAVH
L$`H3
pA^_^][
x AVH
UVWAVAWH
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
H!]H!]@H
H!]@L
@A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
UVWAVAWH
`A_A^_^]
L$ WH
@USVWAVAWH
XA_A^_^[]
UWATAVAWH
0A_A^A\_]
L$pH3
uRH9K
H+D$0u
H+D$8H
t$ UWAVH
0A^_]
T$ E3
qrRPf/
qcU24.0
pcU24.0
qBZVZ
U^='Y
L$PH3
VWAVH
0A^_^
U^='Y
UVWAVAWH
D8|$@t
pBR:&
D8|$@
A_A^_^]
l$ VWAVH
L$XH3
qcXV/
qrTzz
L$PH3
q[]T?
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
L$ VWAVH
H!\$HH
 A^_^
t$ WAVAWH
 A_A^_
VWAVH
 A^_^
vb'vb'v
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
UVWATAUAVAWH
@A_A^A]A\_^]
\$0H;
L#u0M
\$0H;
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
\$ UVWH
91v3H
VWATAVAWH
D$0t,M
A_A^A\_^
UATAUAVAWH
A_A^A]A\]
` UAVAWH
@A_A^]
@USVWAVH
pA^_^[]
9O4t;
x AVH
92v3H
SUVWAVH
0A^_^][
x AVH
\$ UVWATAUAVAWH
d$ E3
U,L9m0u L
L9m0u
M(L9u0u
M(L9u0u
M(L9u0u
D$hE3
T$HE3
L9u0t
L$@L;
L$@L9u0
L$@L;
D$PM;
D$PL;
D$PI;
T$xD;U
D$PL;
D$PD;L$xt
L$HE3
T$H9D$x
L9uhtXH
L9uhu
\$PE3
D$@L9u
H9D$X
t$xE3
D$x;Ex
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
` AUAVAWH
D;t$`
@A_A^A]
@USVWAVH
A^_^[]
h VWAVH
xQ;o(r
 A^_^
UVWATAUAVAWH
E9e0t0H
D$xA;
E9u0tKA
0A_A^A]A\_^]
@USVWAVH
H!}8H
E8H!}@H
H!}8H
 A^_^[]
UVWATAUAVAWH
9w0u+A
9w(v*H
@A_A^A]A\_^]
VWAVH
 A^_^
w(;w(v
t$ WH
VWAVH
(t$@L
WAVAWH
},!]0H
@A_A^_
t$ UWAVH
H!] H
E H!](H
H!] H
E H!](H
0A^_]
UWAVH
UVWATAUAVAWH
pz\:(
}PD8u
pA_A^A]A\_^]
UVWATAUAVAWH
pA_A^A]A\_^]
t$ UWATAVAWH
fE9<~u
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
pC^4_
WAVAWH
pC^4_
@A_A^_
qB^Xh
qC^4_
UVWAVAWH
`A_A^_^]
qC^4_
UVWAVAWH
`A_A^_^]
\$ UVWATAUAVAWH
pBR:&
A_A^A]A\_^]
WAVAWH
0A_A^_
WAVAWH
0A_A^_
q:_:C
9\$Ht
9\$Ht
9\$Ht
9\$Ht
qBQ:$
x AVH
x AVH
t<H!x
VWAVH
 A^_^
x AVH
x AVH
L$ E3
{ AVH
WAVAWH
0A_A^_
D$(E3
D$ E3
D$(E3
D$ E3
D$ E3
VWAUAVAWH
0A_A^A]_^
WAVAWH
@A_A^_
t$ E3
D$ E3
@SVWH
\$ WH
f94Cu
f94Su
UWATAVAWH
D8e@u
D$ E3
A_A^A\_]
UAVAWH
@A_A^]
UWATAVAWH
|$ E3
A_A^A\_]
L$ UH
t$ WH
D$@E3
D$ E3
L$@H3
L$PH3
x AVH
x AVH
@SVWH
L$HH3
p AWH
@SUVWATAUAVAWH
A_A^A]A\_^][
f94Su
WAVAWH
 A_A^_
t$ WH
WATAUAVAWH
 A_A^A]A\_
UVWATAVH
fD94Qu
EHfD;0tlA
fD;0u
 A^A\_^]
UVWAVAWH
0A_A^_^]
WATAWH
\$8D8d$pu
D8d$xt
D8d$pt
D8d$xt
@A_A\_
x ATAVAWH
fE9$Pu
@A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
$0< u
L$0H3
\$ E3
8\$ u
L$PH3
L$XH3
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
L$hH3
pA_A^A]A\_^]
@SUVWAVAWH
A_A^_^][
|$XH;{
WAVAWH
0A_A^_
t$ UWAVH
fD94Au
0A^_]
f9<Au
f9<Fu
f9<Fu
D$@E3
WATAUAVAWH
 A_A^A]A\_
p AWH
x UATAUAVAWH
sUI;_
t5I;_
L$PI9
D$PI9
D$HI9
A_A^A]A\]
UWAVH
D$ E3
L9v u
L9v(u
L9v0u
L9v8u
|$ UH
x UAVAWH
A_A^]
L$HH3
L$HH3
qiYVH
x UAVAWH
A_A^]
USVWATAUAVAWH
A_A^A]A\_^[]
q`W|1/
UWAVH
pbTT$
qbTT$
UWAVH
UWAVH
qIRtK
x AVH
Z2b/8
VWAVH
 A^_^
WAVAWH
 A_A^_
VWAVH
 A^_^
VWAVH
 A^_^
qsQ~K6
VWAVH
 A^_^
|$ UAVAWH
A_A^]
p WAVAWH
0A_A^_
x AVH
x AVH
x UAVAWH
YD8}gu
A_A^]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
p AWH
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
x AVH
UVWATAUAVAWH
A_A^A]A\_^]
qSY:w
UWAVH
UWAVH
{ AVH
x AVH
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
x AVH
UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
A_A^_^]
UWAVH
L$HH3
@USVWATAVAWH
D8|$0
pjSt=
pjSt=
pjSt=
pjSt=
pjSt=
A_A^A\_^[]
fB9,Fu
UATAUAVAWH
t$ E3
A_A^A]A\]
` UAVAWH
D8d$@t
D8d$@tS
fD9$Cu
A_A^]
@USVWATAUAVAWH
D9|$@t
D9|$@t
D9|$@t
D9|$@t
D9|$@t
9|$@t
9|$@t
9|$@t
9|$@t
9|$@t
f9<Au
D9t$@t
D9t$@t
9|$@t
A_A^A]A\_^[]
UVWAVAWH
`A_A^_^]
UWAVH
PA^_]
t$ UWAWH
f94Qu
 A__]
H!\$83
H!\$0H!\$(H!\$ 3
C !C0H
C8!CHH
CP!C`f
\$X!D$PL
|$ UATAUAVAWH
fD9,Vu
xID9m0u
A_A^A]A\]
t$ WH
L$0H3
L$@H3
t$ UWATAUAWH
fD9$Gu
D9d$Hv%H
A_A]A\_]
UWAVH
UWAVH
0A^_]
UWAVH
0A^_]
UVWATAUAVAWH
A_A^A]A\_^]
UAVAWH
A_A^]
\$ WH
\$ WH
qiZR46
qiZR46
H UAVAWH
A_A^]
@USVWAVH
A^_^[]
x AVH
H;s r
H9{ v
H;{ r
WAVAWH
0A_A^_
L$@H3
L$@H3
L$@H3
L$@H3
UVWAVAWH
@A_A^_^]
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
t$ WH
L$XE3
x UATAUAVAWH
A_A^A]A\]
|$8A;
|$8L;
L$pH;
L9t$pu0A
L9t$pu"
|$`E;
L9t$pu
|$`A;
L$pH;
\$hL9t$pu
|$`E;
L9t$p
L9t$pu=A
|$`E;
L$pH;
|$`E;
L9t$pu
|$`A;
|$`L;
D$pH;
\$hL9t$pu
|$`E;
3L$8A
T$XE3
L$PH;L$P
D$PH;
L$PH;
L9t$pu
T$0I;
T$0L9t$pu
T$0I;
L$@A;
D$HI;
E94$t
;\$P|
D+D$8D
L$8A3
D$8D3
D$8D3
T$XE3
D$PI;
D$PH;D$P
D$PH;E
D9t$8t@H
L$09E tnH
L9u8u
T$0E3
(D$ H
(D$ H
L$ WH
L$ UVATAVAWH
`A_A^A\^]
H92t1L
H UATAVH
A^A\]
\$ E3
USVWAUAVAWH
<L9t$`tA
A_A^A]_^[]
UWAWH
t$ E3
UWAUAVAWH
D8}XtMD8}
A_A^A]_]
D$pE3
UWATAVAWH
A_A^A\_]
@USVWAVAWH
A_A^_^[]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
#\$pA
A_A^A]A\_
UATAUAVAWH
D8eWtV
A_A^A]A\]
UVWATAUAVAWH
fD9,qu
H9Y,r
fE9,Hu
P(9Q(t*
A_A^A]A\_^]
VWATAVAWH
H9)t0H
D$P@@
 A_A^A\_^
WAVAWH
0A_A^_
L$ UH
L$ UH
x AVH
@USVWATAVAWH
A_A^A\_^[]
x UAVAWH
A_A^]
USVWATAVAWH
A_A^A\_^[]
UVWATAUAVAWH
d$hE3
A_A^A]A\_^]
UVWAVAWH
D$0!\$(H!\$ 
PA_A^_^]
L$HH3
@USWH
@USWH
|$8E3
VWAVH
0A^_^
VWAVH
@A^_^
\$ UVWATAUAVAWH
A_A^A]A\_^]
|$ UH
L$ E3
L$ E3
\$ UVWAVAWH
A_A^_^]
UATAUAVAWH
D$ E3
A_A^A]A\]
UVWAVAWH
A_A^_^]
!t$`H
UVWAVAWH
A_A^_^]
l$ VWATAVAWH
fD9dt.t
A_A^A\_^
t$ UWAVH
fD91u1H
D$ E3
@USVATAUAVAWH
A_A^A]A\^[]
L$@H3
` UAUAVH
A^A]]
WAVAWH
A_A^_
UWATAVAWH
d$ E3
A_A^A\_]
UVWATAUAVAWH
d$ E3
L9eXu3H
MXfD;a
D8 udL
`A_A^A]A\_^]
d$ E3
t$ UWATAVAWH
fD9$xu
fG9$^u
D$lfE
\$nfA
A_A^A\_]
|$ E3
|$ UH
UVWAVAWH
PA_A^_^]
ATAVAWH
fD9$zu
L9d$ u
0A_A^A\
s WAVAWH
@A_A^_
VWAVH
 A^_^
|$ UAVAWH
A_A^]
H UAVAWH
@A_A^]
UWAVH
0A^_]
UWAVH
0A^_]
UWAVH
 A^_]
VWAVH
0A^_^
x ATAVAWH
fE9<Fu
A_A^A\
UAVAWH
A_A^]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
@8l$Xu
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
L$PE3
D8t$0u
A_A^_^]
@USWH
D$ H!D$(
@USVWATAVAWH
A_A^A\_^[]
UVWATAUAVAWH
piZR46
A_A^A]A\_^]
VWAVH
 A^_^
t$ H;\$0s=I
UWAVH
;] sDH
PA^_]
@USWH
UWAVH
@A^_]
k VWAVH
H!t$(E3
!t$ 3
H!t$ E3
WAVAWH
 A_A^_
t$ WATAUAVAWH
fF9,yu
A_A^A]A\_
L$XH3
x AVH
@USVWATAVAWH
A_A^A\_^[]
UAVAWH
A_A^]
@USWH
@USWH
` AUAVAWH
@A_A^A]
USVWATAUAVAWH
y&D9O
L$ E3
A_A^A]A\_^[]
UVWATAUAVAWH
@8}Pt
@A_A^A]A\_^]
t$ WH
|$ UAVAWH
A_A^]
WAVAWH
 A_A^_
L$8H3
@USWATAUAVAWH
pA_A^A]A\_[]
\$ UVWAVAWH
pA_A^_^]
t$ WH
f9,Au
f9,Wu
f9,Au
f9,Wu
f9,Yu
L$HH3
f9<Cu
f9<Cu
f9<Cu
x UATAUAVAWH
A_A^A]A\]
x ATAVAWH
fD9'u
fD9$Gu
fD9$Wu
A_A^A\
L$ USWATAUAVAWH
fA9>u
pA_A^A]A\_[]
|$ UH
t$ UWATAUAWH
A_A]A\_]
f94Au
f94Bu
fB94Ku
f94Ku
f94Ku
x AVH
fD97u
t0H;s
UWATAUAVH
fE9,$
A^A]A\_]
t$ WH
VWAVH
xD8t$xtn
tQfD93tKH;
fD94Cu
@A^_^
UVWATAUAVAWH
t2H;n
0A_A^A]A\_^]
y uDL
USVWAVH
0A^_^[]
VWAVH
@A^_^
WAVAWH
fE9<Au
 A_A^_
uGH98uBH
WAVAWH
D9~hv@A
0A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
fD9,Au
UVWATAUAVAWH
t$8fD
wVA97s
d$0fD
`A_A^A]A\_^]
pxZ0!
@USVWATAUAVAWH
D$8E3
D$@fA
A_A^A]A\_^[]
UWATAVAWH
D9aLu
D$ E3
A_A^A\_]
UVWATAUAVAWH
D8y$t
L$xE3
D$(E3
@A_A^A]A\_^]
\$0ue
T$@E3
t$ WATAUAVAWH
D9|$p
fD9<nu
f9,~u
0A_A^A]A\_
L$ USVWAVH
`A^_^[]
9s@|+3
x AVH
 Hcy@H
9y<tjH
f9,Au
\$ WH
x ATAVAWH
0A_A^A\
UAVAWH
A_A^]
@USVWAVH
A^_^[]
L$ SVWAVH
(A^_^[
x AVH
UVWATAUAVAWH
A9<$sEA
D$`@8l$ht
 A_A^A]A\_^]
f9<Au
f9<Au
f9<Au
@USVWATAVAWH
D$ E3
A_A^A\_^[]
WAVAWH
L$(E3
@A_A^_
fB9,[u
\$ UVWH
UWATAVAWH
}`D9y u6H
D9}PuGH
<B\uZH
A_A^A\_]
@USVWAVH
A^_^[]
UWATAVAWH
xuL9d3Ht/D
A_A^A\_]
UVWAUAVH
`A^A]_^]
UVWATAUAVAWH
pA_A^A]A\_^]
USVWATAUAVAWH
HA_A^A]A\_^[]
UVWATAWH
A_A\_^]
UWAUAVAWH
A_A^A]_]
UWAVH
UVWATAUAVAWH
D$HA+
L;t$Hw
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
\$ WH
fB9<Hu
WAVAWH
0A_A^_
UVWAVAWH
A_A^_^]
{ AVH
t$ WH
s WAVAWH
L$HH3
A_A^_
H!E'H
D$ E3
UWAVH
UVWAVAWH
|$ E3
|$ E3
pA_A^_^]
VWAUAVAWH
u(I;^
u(H;^
@A_A^A]_^
UVWAVAWH
`A_A^_^]
t$ UWAVH
t$ WH
L$HH3
|$ UAVAWH
A_A^]
|$ UH
t$ WH
L$@H3
t$ WAVAWH
A_A^_
|$ UAVAWH
D$ E3
A_A^]
L$@H3
L$@H3
L$pE3
D$ E3
UVWATAUAVAWH
@8l$pt
0A_A^A]A\_^]
@USVWH
|$ UH
x UATAUAVAWH
fE9$Nu
A_A^A]A\]
UWAVH
@USVATAUAVAWH
A_A^A]A\^[]
WAVAWH
0A_A^_
UVWAVAWH
A_A^_^]
x ATAVAWH
@A_A^A\
VWAVH
L$XE3
0A^_^
t$ WAVAWH
@A_A^_
x AVH
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
@SUVWATAVAWH
A_A^A\_^][
t$ WH
fB94Hu
f94Su
L$PH3
L$@H3
L$@H3
L$@H3
UAVAWH
A_A^]
USVWATAUAVAWH
fB94{u
A_A^A]A\_^[]
UVWATAUAVAWH
D8t$QttL
L$PE3
A_A^A]A\_^]
\$ UVWH
L$XH3
UWATAVAWH
A_A^A\_]
x AVH
@SUWAVAWH
PA_A^_][
[ UVWH
L$XH3
\$ UVWH
L$XH3
L$@H3
@USVWATAUAVAWH
D8d$P
ID$XH
MD$XH
D$ E3
D8d$Pu.
ID$XH
It$XH
A_A^A]A\_^[]
\$ UVWH
L$PH3
L$HH3
UVWATAUAVAWH
m@A8M
pA_A^A]A\_^]
t$ WAVAWH
D$Pu3H
0A_A^_
x ATAVAWH
fD9'u
^D9d$@M
GD$HI
A_A^A\
t$ WAVAWH
fD9?u
ID$`H
@A_A^_
@USVWATAVAWH
D9d$@L
A_A^A\_^[]
UVWATAUAVAWH
D$XL!t$hL
T$`E3
L$8A+
L$PH;L$P
D$PH;
L$PH;
D$0I;
D$0I;
D$8A;
+D$8A;
T$HM;
T$HL;
+D$8H
l$@D;E
D$0E3
D+D$pD
L$pD3
D$pD3
T$PH;
H;D$Pw
9D$8t;H
D$PE3
D$@E3
(L9u8u
\$@E3
A_A^A]A\_^]
L$@H3
WATAUAVAWH
0A_A^A]A\_
t$ WH
t$ WH
H VWATAUAVH
6;n(t
A^A]A\_^
L$(E3
t$ WH
fB94Hu
f9,Zu
L$`H3
UAVAWH
@A_A^]
D$PE3
p AWH
t$ WH
D$ E3
VWAVH
0A^_^
\$ UVWAVAWH
~9|$0t
;PKCXt
A_A^_^]
L$HH3
x AVH
WAVAWH
\$ E3
\$ E3
H9D$@
A_A^_
L$HH3
L$`H3
t$ UWAVH
*tiD;
UVWATAUAVAWH
L$hH3
pA_A^A]A\_^]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
L$ VWAVH
0A^_^
UVWATAUAVAWH
D9|$0u%
D9|$0t
D9|$0t
\$pD9|$0tWH
D9|$0
D9|$0
D9|$0t H
D9|$0t#H
D9|$0t
D8|$4t
D9|$0tSH
D9|$0
D9|$0
D9|$0t H
D9|$0t H
A_A^A]A\_^]
UATAUAVAWH
D;t$H
f94Su
t$ E3
A_A^A]A\]
t$ UWATAVAWH
D9d$0uQH
A_A^A\_]
UVWATAUAVAWH
D;t$0
D9l$4
A_A^A]A\_^]
H9D$Xu(3
x ATAVAWH
 A_A^A\
@USVWAVH
A^_^[]
x ATH
|$(A\
D$\D+
L$`H3
L$`H3
SUVWATAUAVAWH
QZ^&A
8A_A^A]A\_^][
D$03D$8
D$43D$<
Ng0D+
`[@D+
i|,D+
`[@D+
UWAWH
tUD!E0H
D$8L!D$0
D!D$ E3
U8H!E8I
VWAVH
@A^_^
UVWATAUAVAWH
@A_A^A]A\_^]
UWAUAVAWH
0A_A^A]_]
VWATAVAWH
\$`fA
l$(E3
0A_A^A\_^
UWAVH
D$(E3
UAVAWH
fD9<Au
A_A^]
t$ UWATAVAWH
H!}@E3
D$ E3
0A_A^A\_]
t$ UAVAWH
A_A^]
UVWAVAWH
A_A^_^]
@USVWAVAWH
A_A^_^[]
@USVWATAVAWH
A_A^A\_^[]
t$ WAVAWH
0A_A^_
UVWATAUAVAWH
fG9,qu
pKY|[
A_A^A]A\_^]
UWAVH
fD94Qu
UWAVH
0A^_]
@SUVWAVH
t$0H97s
A^_^][
t$ WH
f92u#H
\$ UVWH
f92u,H
@USWH
@SUVWH
@USVWAVH
p![XT?
0A^_^[]
UVWATAUAVAWH
fD9,Xu
HcD$@
Hc\$@
L$P;L$@
D$ E3
LcL$@L
D$ E3
A_A^A]A\_^]
UVWAVAWH
0A_A^_^]
x AVH
x AVH
api-ms-win-core-synch-l1-2-0.dll
kernel32.dll
SleepConditionVariableCS
WakeAllConditionVariable
Windows.Networking.Vpn.dll
ext-ms-win-resources-deployment-l1-1-0.dll
ext-ms-win-com-ole32-l1-1-0
ext-ms-win-com-ole32-l1-1-1
ext-ms-win-com-ole32-l1-1-2
ext-ms-win-com-ole32-l1-1-3
ext-ms-win-com-ole32-l1-1-4
ext-ms-win-com-ole32-l1-1-5
ext-ms-win-com-ole32-l1-3-0
ext-ms-win-com-ole32-l1-4-0
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-winsta-l1-1-0
ext-ms-win-session-winsta-l1-1-1
ext-ms-win-session-winsta-l1-1-2
ext-ms-win-session-winsta-l1-1-3
ext-ms-win-session-winsta-l1-1-4
ext-ms-win-session-winsta-l1-1-5
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-1
CRYPT32.dll
ext-ms-win-session-usermgr-l1-1-0.dll
api-ms-win-ntuser-ie-message-l1-1-0.dll
ext-ms-win-appmodel-appexecutionalias-l1-1-0.dll
ext-ms-win-appmodel-appexecutionalias-l1-1-1.dll
ext-ms-onecore-appmodel-staterepository-cache-l1-1-0.dll
ext-ms-onecore-appmodel-staterepository-internal-l1-1-3.dll
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-storage-sense-l1-2-2
ext-ms-win-storage-sense-l1-2-3
ext-ms-win-storage-sense-l1-2-4
ext-ms-win-storage-sense-l1-2-5
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-3
ext-ms-win-shell-shell32-l1-5-0
ext-ms-win-shell-shell32-l1-2-0.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-0.dll
api-ms-win-appmodel-identity-l1-2-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-internal-l1-1-3.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-core-biptcltapi-l1-1-7.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
CLIPC.dll
Bcp47Langs.dll
bcp47mrm.dll
AppXAllUserStore.dll
ext-ms-win-security-capauthz-l1-1-0.dll
ext-ms-win-security-capauthz-l1-1-1.dll
capauthz.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
AppXDeploymentClient.dll
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-desktopappx-l1-1-7
ext-ms-win-desktopappx-l1-2-0
ext-ms-win-desktopappx-l1-2-1
ext-ms-win-desktopappx-l1-1-6.dll
ext-ms-win-desktopappx-l1-1-0.dll
ext-ms-win-desktopappx-l1-1-4.dll
FirewallAPI.dll
cldapi.dll
ext-ms-win-appmodel-registrycompatibility-l1-1-0
ext-ms-win-appmodel-registrycompatibility-l1-1-0.dll
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win-ci-management-l1-1-2.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-resources-languageoverlay-l1-1-4
ext-ms-win-resources-languageoverlay-l1-1-5
ext-ms-win-resources-languageoverlay-l1-1-6
ext-ms-win-resources-languageoverlay-l1-1-7
ext-ms-win-resources-languageoverlay-l1-1-1.dll
ext-ms-win-security-efswrt-l1-1-2.dll
ext-ms-win-security-efswrt-l1-1-0
ext-ms-win-security-efswrt-l1-1-1
ext-ms-win-security-efswrt-l1-1-2
ext-ms-win-security-efswrt-l1-1-3
ext-ms-win-security-efswrt-l1-1-4
ext-ms-win-com-ole32-l1-1-1.dll
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
UserDataPlatformHelperUtil.dll
OSIntegration.DEH.ComInterfaceRegistration
Windows.Foundation.DllServerActivatableClassRegistration
OSIntegration.DEH.ComExeServerRegistration
Windows.Internal.CapabilityAccess.Management.CapabilityProvisioning
OSIntegration.DEH.ComServiceClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
X~zjgr
OSIntegration.DEH.ComInprocServerClassDllRegistration
Windows.Foundation.PropertyValue
Windows.Foundation.ExeServerActivatableClassRegistration
OSIntegration.DEH.ComProxyStubRegistration
OSIntegration.DEH.ComServiceServerRegistration
OSIntegration.DEH.PackagedComCatalogCollectorForUserOrSystemRegister
Unknown exception
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
lstd::exception: %hs
ntdll.dll
onecore\internal\sdk\inc\wil\opensource/wil/resource.h
arm64
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil/Staging.h
WilStaging_02
false
*[local-name()='BackgroundTasks']/*[local-name()='Task']
Executable
CustomSurrogateExecutable
Alias
*[local-name()='ApplicationContentUriRules']/*[local-name()='Rule']
C++/WinRT version:2.0.220110.5
AppObject.Aliased
AppObject.EntryPoint
DisplayName
DefaultIcon
Windows.BackgroundTasks
ancestor::*[local-name()='Application']
ServiceName
Capabilities
ResourceId
Clsid
ClipCallServerImportLicenses
PkgFullName
ResourcesConfig
CachedMergedResourcesPriFileName
SharedMergedResourcesPriFileName
ManifestLanguagesList
MergedResourcesIndex
Software\Microsoft\Windows\CurrentVersion\Mrt
UseSystemMetadataPath
-MergedResources-
AppxManifest.xml
resources.pri
Resources.????????.pri
*[local-name()='VisualElements']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='ProgId' and @Clsid='%ls' and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='ProgId' and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='TreatAsClass' and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']//*[local-name()='Class' and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comInterface']/*[local-name()='ComInterface']/*[local-name()='TypeLib' and @Id='%ls']/*[local-name()='Version' and @VersionNumber='%ls']
//*[local-name()='Extension' and @Category='windows.comInterface']/*[local-name()='ComInterface']/*[local-name()='Interface' and @Id='%ls' and @%ls='%ls' and @ProxyStubClsid='%ls']
//*[local-name()='Extension' and @Category='windows.comInterface']/*[local-name()='ComInterface']/*[local-name()='ProxyStub' and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='ExeServer' or local-name()='SurrogateServer' or local-name()='ServiceServer']/*[(local-name()='Class' or local-name()='ClassReference' or local-name()='InProcessServerClassReference') and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='InProcessServer']/*[(local-name()='Class' or local-name()='ClassReference') and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='InProcessHandler']/*[(local-name()='Class' or local-name()='ClassReference') and @Id='%ls']
//*[local-name()='Extension' and @Category='windows.comServer']/*[local-name()='ComServer']/*[local-name()='ManagedInProcessServer']/*[(local-name()='Class' or local-name()='ClassReference') and @Id='%ls']
ComServer
ComInterface
Category
windows.comServer
windows.comInterface
Class
ClassReference
ExeServer
SurrogateServer
ServiceServer
TreatAsClass
ProgId
InProcessServer
InProcessHandler
ManagedInProcessServer
ProxyStub
Interface
TypeLib
LaunchAndActivationPermission
Arguments
SystemSurrogate
AppId
InProcessServerClassReference
InProcessServerDll
InProcessHandlerDll
Assembly
RuntimeVersion
VersionIndependentProgId
AutoConvertTo
InsertableObject
ShortDisplayName
ImplementedCategories
Conversion
DataFormats
MiscStatus
Verbs
ToolboxBitmap32
EnableOleDefaultHandler
ThreadingModel
Virtualization
ImplementationClass
Readable
ReadWritable
FormatName
StandardFormat
DefaultFormatName
DefaultStandardFormat
AspectFlag
MediumFlag
Direction
OleMiscFlag
AppendMenuFlag
OleVerbFlag
ResourceIndex
TreatAs
CurrentVersion
UseUniversalMarshaler
ProxyStubClsid
SynchronousInterface
AsynchronousInterface
ProxyStubDll
ProcessorArchitecture
VersionNumber
LocaleId
LibraryFlag
HelpDirectory
Win32Path
Win64Path
enabled
disabled
MainSTA
Neutral
Content
Thumbnail
DocPrint
GetAndSet
PreviewHost
prevhost.exe
*[local-name()='WebAccountProvider']
*[local-name()='WebAccountProvider']/*[local-name()='AdditionalUrls']/*[local-name()='Url']
BackgroundEntryPoint
AdditionalUrls
BackgroundTaskHost
BackgroundTaskHost.exe
Windows.Security.Authentication.Web.Core.BackgroundGetTokenTask.ClassId
Windows.WebAccountProvider
EntryPoint
Entry Point for extension WebAccountProvider is not supported.
WebAccountProvider extension does not support multiple applciations per package.
icon.png
Local\SM0:%lu:%lu:%hs
OSIntegration.DEH.ComManagedInprocServerClassRegistration
OSIntegration.DEH.ComExeClassRegistration
m'w8Z
Windows.Foundation.ExeServerRegistration
Windows.Foundation.Collections.PropertySet
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.PackagedComCatalogCollector
;~ rB
Windows.FullTrustApplication
machine
mediumIL
windows
console
appContainer
windowsApp
Windows.PartialTrustApplication
packagedClassicApp
win32App
modern
classic
appSilo
AppxSignature.p7x
InstalledLocationVirtualization
LoaderSearchPathOverride
LoaderSearchPathEntry
windows.publisherCacheFolders
windows.loopbackAccessRules
windows.loaderSearchPathOverride
windows.hostRuntime
windows.installedLocationVirtualization
include
exclude
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @StartPage] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @StartPage]
AppListEntry
StartPage
EntryPoint
Executable
Square150x150Logo
Language
Description
UriTemplate
Match
RuntimeType
DisplayName
Category
OSIntegration.DEH.ComInprocHandlerClassDllRegistration
onecore\admin\appmodel\osim\src\extensiondll\onecore\registration.cpp
windows.unsignedEnforcer
windows.preCompilationExtension
windows.packageAndMachineCompliance
windows.applyDataExtension
windows.stateExtension
windows.loopbackAccessRules
windows.MRT
windows.visualElements
windows.activatableClass.inProcessServer
windows.activatableClass.outOfProcessServer
windows.activatableClass.proxyStub
windows.activatableClass.downloadUpload
windows.activatableClass.backgroundPlaybackClass
Windows.Search
windows.search
Windows.ShareTarget
windows.shareTarget
Windows.File
windows.fileTypeAssociation
windows.protocol
Windows.FileOpenPicker
*[local-name()='FileOpenPicker']
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileOpenPickerHelper.hpp
windows.fileOpenPicker
Windows.FileSavePicker
*[local-name()='FileSavePicker']
onecore\admin\appmodel\OSIM\src\deh\uex\apppicker\fileSavePickerHelper.hpp
windows.fileSavePicker
Windows.CachedFileUpdater
windows.cachedFileUpdater
Windows.AppUriHandler
windows.appUriHandler
FriendlyTypeName
URL Protocol
Action Protocol
./*[local-name()='AppointmentsProvider']/*[local-name()='AppointmentsProviderLaunchActions']/*[local-name()='LaunchAction']
addAppointment
removeAppointment
replaceAppointment
showAppointmentDetails
Windows.AppointmentsProvider.ShowAppointmentDetails
showTimeFrame
./*[local-name()='AppointmentsProvider']/*[local-name()='AppointmentsProviderLaunchActions']
Windows.AppointmentsProvider.AddAppointment
Windows.AppointmentsProvider.RemoveAppointment
Windows.AppointmentsProvider.ReplaceAppointment
Windows.AppointmentsProvider.ShowTimeFrame
onecore\admin\appmodel\Common\ProgID.hpp
windows.appointmentsProvider
windows.backgroundTasks
windows.webAccountProvider
Windows.UserDataAccountsProvider
windows.userDataAccountsProvider
windows.preInstalledConfigTask
onecore\admin\appmodel\OSIM\src\deh\uex\UpdateMigrationTask\UpdateMigrationTaskHandler.hpp
Windows.UpdateTask
windows.updateTask
Windows.AppService
windows.appService
windows.DefaultBackgroundTasks
Windows.AppointmentDataProvider
windows.appointmentDataProvider
Windows.ContactDataProvider
windows.contactDataProvider
Windows.EmailDataProvider
windows.emailDataProvider
Windows.UserDataTaskDataProvider
windows.userDataTaskDataProvider
Windows.BarcodeScannerProvider
windows.barcodeScannerProvider
Windows.BarcodeScannerPreviewProvider
windows.barcodeScannerPreviewProvider
Windows.PosPaymentConnector
windows.posPaymentConnector
Windows.Internal.FilePickerExperience
windows.internal.filePickerExperience
Windows.DialProtocol
windows.dialProtocol
windows.internal.componentUI
Windows.LockScreenComponent
windows.lockScreenComponent
Windows.PersonalAssistant.Launch
%s:%s
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHelper.hpp
Software\Microsoft\Windows\CurrentVersion\Explorer\AppContract
%s\%s\%s
Windows.Protocol
windows.personalAssistantLaunch
Windows.PrintWorkflowBackgroundTask
windows.printWorkflowBackgroundTask
Windows.PrintWorkflowForegroundTask
windows.printWorkflowForegroundTask
Windows.PrintSupportExtension
windows.printSupportExtension
Windows.PrintSupportJobUI
windows.printSupportJobUI
Windows.PrintSupportSettingsUI
windows.printSupportSettingsUI
Windows.PrintSupportWorkflow
windows.printSupportWorkflow
Windows.RestrictedLaunch
windows.restrictedLaunch
windows.wcosAdapterApp
onecore\admin\appmodel\OSIM\src\deh\appx\StartupTask\StartupTaskHelper.hpp
Windows.StartupTask
windows.startupTask
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MoCOMHelper.hpp
Windows.PhoneCallActivation
onecore\admin\appmodel\OSIM\src\deh\uex\inc\BaseHandler.hpp
windows.phoneCallActivation
onecore\admin\appmodel\OSIM\src\deh\appx\AppExecutionAlias\AppExecutionAliasExtensionHandler.hpp
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='AppExecutionAlias']/*[local-name()='ExecutionAlias' and @Alias]
DEFAULT_DATA
windows.appExecutionAlias
windows.activatableClass.collector
MoCOM
windows.uiAccess
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHelpers.hpp
onecore\admin\appmodel\OSIM\src\deh\BaseClasses\BaseHandlers.hpp
windows.certificates
windows.runTime
windows.repositoryExtension
windows.licensing
windows.geolocation
windows.userDataAccess
windows.localExperiencePack
windows.capability
windows.stateExtension.remove
windows.repositoryExtension.remove
windows.cloudFiles
windows.firewall
onecore\admin\appmodel\osim\src\extensiondll\onecore\dllmain.cpp
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\private\base\inc\appmodel\staterepository\dal\Statement.hpp
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
<String too big>
light
onecore\private\base\inc\appmodel\runtime\Sections_MrtResources.hpp
onecore\private\base\inc\appmodel\runtime\Sections_Applications.hpp
onecore\private\base\inc\appmodel\runtime\Sections_DependencyGraph.hpp
onecore\private\base\inc\appmodel\runtime\Sections_PackageMutablePaths.hpp
onecore\private\base\inc\appmodel\runtime\DependencyMiniRepositoryWriter.inl
onecore\admin\appmodel\osim\src\deh\appx\runtime\AriPackage.hpp
machine
c:\windows\system32
onecore\internal\sdk\inc\wil\opensource\wil\token_helpers.h
<Unknown>
<Error 0x%X in OpenProcessToken>
<None>
<Error 0x%X in GetPackageFullName>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X converting the user's SID to a string>
<Error allocating memory>
<Error 0x%X in QueryFullProcessImageNameW>
OSIM.Request[]
onecore\admin\appmodel\osim\src\deh\appx\runtime\runtimeextensionhandler.cpp
Updating DMR file for package %ws failed
Set package status to %u failed for package %ws
@FolderPath
ImportRedirectionTable
#text
UTF-8
ActiveCodePage
WindowsDisplayLanguage
LanguagePreference
<null>
<Error 0x%X in GetApplicationUserModelId>
Packages
FullTrust
appLicensing
\DosDevices\
appLicensing
onecore\admin\appmodel\osim\src\deh\appx\runtime\aristring.cpp
onecore\admin\appmodel\osim\src\deh\appx\runtime\aripackage.cpp
PackageState
onecore\admin\appmodel\osim\src\deh\appx\state\state.cpp
IsUserProfileEnabledForRoaming
GetUserSid
OpenStateExplicit %ws
SetDataProtectionLevel %ws.
GetSystemAppDataRootKeyAndSubkey
Package %ws.
Initialize %ws user %ws
Package %ws
SetDataProtectionLevel
IsEncrypted %ws
GetSystemStateRootFolderPath
RevertInstall
No DPL support for level %u on encrypted non-system drive.
Unable to revert protection level %u applied after a failed updated
PersistPackageBackupEligibility
GetDeploymentOptions
UpdateStateLocations %u %ws %ws
RegOpenKeyEx %ws
HandleRemoveForRoamingProfile %u %u
RegDeleteValue %ws
UnregisteredForProfileRoaming
Initialize %ws %ws
GetPackageFamilyReferenceCount
PersistPackageBackupEligibility %ws
DestroyAllAndUnregisterRoaming
UpdateStateLocations %u
HandleLockedAppDataIfNeeded %ws
ClearNonPortableData %ws %u %u %u
GetDeploymentOptions %ws %u %u
After %d retries for %ws, hr=0x%0x
CreateStateLocations up to %d times for %ws
RemoveStateLocations
CreateStateLocations %ws %u
ConvertSidToString
GetTokenInformationNoThrow
new %u
GetStateRootFolder
GetSystemAppDataKey
GetStateRootFolder %u
GetPackageTable %ws publisher %ws
GetSystemAppDataKey %u
FilterOnNamePublisherId %ws publisher %ws
GetVisibilityTable %ws publisher %ws
GetTokenInformationNoThrow %ws publisher %ws threshold %u count %u
GetNext %ws publisher %ws threshold %u count %u
STATE_LEFT_FROM_LAST_UNINSTALL
TryGetVisibility %ws publisher %ws threshold %u count %u
RegSetKeyValueW %ws
RegSetKeyValueW %ws eligible %u
BACKUP_ELIGIBILITY
IsDPLSupportedOnPlatform %ws.
CdplIsSupported
GetXMLDOMFromPackage %ls
CdplIsAppDataProtectionSupported %ls %llu.
GetUserSidFromToken
DetermineDataProtectionLevel %ls
ConvertSidToString %p
SetForUser %ws %u
OpenStateExplicitForUserSid %p %ws
CleanupStateName %ws %ws
GetSecureSystemAppDataFolder %ws
RemoveRegistrationForUser failed in DirectoryExists for package %ws
GetSecureSystemAppDataFolder %ws %u
RegOpenKeyEx
RemoveRegistrationForUser failed in RemoveDirectoryTree for package %ws
RegGetValue
WnfStateName
DropImpersonation %ws %ws
NtDeleteWnfStateName %llu
DeleteStateNameForUser %ws %ws
GetPersistedRegKeyPath
RegQueryInfoKey
RegDeleteKeyW  %ws %ws
GetProfileType
RegDeleteTreeW
EnableAppAttach
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel
Initialize %ws %ws %ws %u %u
RegGetValueW %ws %ws
ClearNonPortableData
bad array new length
string too long
onecore\admin\appmodel\osim\src\deh\appx\applydata\applydata.cpp
Staging
StringCchPrintf %u %ws
%s\Staging
GetDeletedFolderPath
IsPackageUnregisteredForRoaming %ws
GetThreadImpersonationToken
Package %ws %ws %ws
%s\Deleted
OpenStateExplicit
\Staging
MoveAppData %ws
StringCchPrintf %u root %ws
Package %ws %ws
RemoveCryptnetFolderIfExists
MoveContentsOfFolderForDeletion %ws delete %ws
FindFirstFile %ws
StringCchPrintf %u staging %ws
CreateFullFileName %ws file %ws root %ws
CreateFullFileName %ws file %ws
AddPackageDataAccessHelper %ws %ws
MoveFileEx %ws %ws
SetCentennialMetadataForFolder %ws %ws
LocalCache
Package %ws root %ws user %ws hasCentennial %u
FindNextFile
StringCchPrintf %ws
\AC\Microsoft\CryptnetUrlCache
CreateDirectory
RemoveDirectoryTree %ws
CreateFullFileName %ws %ws from
StringCchPrintf
Remove %ws %ws %ws
CreateFullFileName %ws %ws to
MoveFileEx %ws src %ws dest %ws file %ws
Deleted
SystemAppData
OpenCurrentUserLocalSettings
DropImpersonation
StringCchCopy
Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
StringCchCat %ws
StringCchCat
generic
system
exists
create_directories
C:\Users
B53BCA78D37B4C7
onecore\admin\appmodel\osim\src\deh\appx\applydata\restoreappdata.cpp
AppData\Local\Packages
OneDrive\Pictures\Saved Pictures\AppData
invalid string position
unknown error
onecore\admin\appmodel\osim\src\deh\appx\precompilation\precompilationhandler.cpp
OSMaxVersionTested
DisableByteCodeCache
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\wwahost.exe
RaiseFailFastException
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
RtlNtStatusToDosErrorNoTeb
WilFailureNotifyWatchers
MsixvcSignature.p7
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVector`1<String>
musicLibrary
picturesLibrary
gamingContainerResources
videosLibrary
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='DeviceCapability' and @Name='%s']
onecore\admin\appmodel\osim\src\deh\appx\capabilityauthorization\capabilityauthorizationhandler.cpp
C:\Windows\DefaultApp\AppXSignature.p7x
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and namespace-uri()='http://schemas.microsoft.com/appx/2013/xbox/manifest']
constrainedImpersonation
activateAsUser
eraApplication
multiPlaneOverlay
resourceConfiguration
extendedVideoPlayback
/m:Package/m:Applications/m:Application/m:Extensions/mx:Extension/mx:XboxSystemResources
privateNetworkClientServer
extendedExecutionUnconstrained
developmentModeNetwork
internetClient
windowManagementSystem
systemRegistrar
confirmAppClose
Fcollector->PendingWrite(incomingPackage, resourcesManager, outgoingPackageContext)
OSIntegration::DEH::Internal::PendingWriteForEachCollector::<lambda_b901801f51e7691c3d46806b7ec24347>::operator ()
OSIntegration::DEH::Internal::PendingWriteForEachCollector
collector->PendingRemove(outgoingPackage, deploymentOperation, resourcesManager, outgoingPackageContext)
onecore\admin\appmodel\osim\src\deh\winrt\collector\CollectorPendingWriteRemove.hpp
ForEachCollector(whichPhase, incomingPackage, [&](ICollector *collector) { RETURN_IF_FAILED(collector->PendingWrite(incomingPackage, resourcesManager, outgoingPackageContext)); return S_OK; })
OSIntegration::DEH::Internal::PendingRemoveForEachCollector
_package->GetMainPackageFamilyMonikerForActivation(&localMainPackageFamilyMoniker)
OSIntegration::DEH::Internal::PendingRemoveForEachCollector::<lambda_52373a5a6ce9ae04767844ec7c46e179>::operator ()
ForEachCollector(whichPhase, outgoingPackage, [&](ICollector *collector) { RETURN_IF_FAILED(collector->PendingRemove(outgoingPackage, deploymentOperation, resourcesManager, outgoingPackageContext)); return S_OK; })
mainPackageFamilyMoniker.Set( localMainPackageFamilyMoniker->chars, localMainPackageFamilyMoniker->length)
_Initialize(userToken)
OSIntegration::DEH::Internal::CollectorPackageInformation::GetMainPackageFamilyMoniker
onecore\admin\appmodel\osim\src\deh\winrt\collector\collector.cpp
OSIntegration::DEH::CollectorExtensionHandler::EvaluateInstall
hrEvaluateUpdate
OSIntegration::DEH::CollectorExtensionHandler::Initialize
hrEvaluateInstall
OSIntegration::DEH::CollectorExtensionHandler::CommitChanges
hrCommitChanges
OSIntegration::DEH::CollectorExtensionHandler::EvaluateUpdate
impersonateSelf.Impersonate()
EvaluateRequest(dehRequest, result)
OSIntegration::DEH::CollectorExtensionHandler::PostOsUpgradeEvaluateRequest
hrInitialize
OSIntegration::DEH::CollectorExtensionHandler::_Initialize
CreateResourcesManager(m_whichPhase, false, userToken, &m_resourcesManager)
OSIntegration::DEH::CollectorExtensionHandler::_Initialize::<lambda_837be2f99b6d2cb2d136c68ac7ed7528>::operator ()
incomingPackage->GetCollectors()->GetExtensionCatalogCollector()->ValidateEntries( &incoming)
OSIntegration::DEH::CollectorExtensionHandler::_EvaluateInstall
PendingWriteForEachCollector(m_whichPhase, &incoming, m_resourcesManager.Get(), outgoingPackageContext)
OSIntegration::DEH::CollectorExtensionHandler::_EvaluateInstall::<lambda_b52e210a22ab7b8b161a176e70b14097>::operator ()
OSIntegration::DEH::CollectorExtensionHandler::_EvaluateUpdate
PendingRemoveForEachCollector(m_whichPhase, &outgoing, RegistrationStoreContext::RemoveDeploymentOperationType::Update, m_resourcesManager.Get(), outgoingPackageContext)
OSIntegration::DEH::CollectorExtensionHandler::_EvaluateUpdate::<lambda_16125b7edc42d8d624750f918530231c>::operator ()
ForEachCollectorInArray(GetCollectorsForUserRegister(package), lambda)
ForEachCollectorInArray(GetCollectorsForOneTimeRegister(package), lambda)
ForEachCollectorInArray(GetCollectorsForMachineRegister(package), lambda)
OSIntegration::DEH::Internal::ForEachCollector
Invalid phase for Collectors
E_UNEXPECTED
ForEachCollectorInArray(GetCollectorsForSystemRegister(package), lambda)
ForEachCollectorInArray(GetCollectorsForSingletonRegister(package), lambda)
*instance
OSIntegration::DEH::CreateCollectorExtensionHandlerForPhase
collector->QueryInterface(&winrtCollector)
OSIntegration::DEH::Internal::ForEachCollectorInArray
lambda(winrtCollector.get())
O:PSG:BAD:(A;;0xB;;;BU)(A;;0xB;;;AC)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;IU)(A;;0xB;;;BA)(A;;0xB;;;BU)
S:(ML;;NX;;;LW)
(A;;0xB;;;%s)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;BA)(A;;0xB;;;BU)
OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties
incomingPackage
_incomingPackage
(incomingExtensionElements == nullptr) || (countIncomingElements == 0) || (result == nullptr)
onecore\admin\appmodel\osim\src\deh\winrt\activationdeh\activatableclass.cpp
OSIntegration::DEH::ActivatableClassExtensionHandler::EvaluateInstall::<lambda_4e9d60747ea44daa15215bee16e87803>::operator ()
(incomingPackage == nullptr) || ((incomingExtensionElements == nullptr) && (countIncomingElements > 0)) || (outgoingPackage == nullptr) || ((outgoingExtensionElements == nullptr) && (countOutgoingElements > 0)) || (result == nullptr)
OSIntegration::DEH::ActivatableClassExtensionHandler::EvaluateInstall
_incomingPackage->ParseAndSubmitProxyStubs()
_incomingPackage->ParseAndSubmitRegistrations()
OSIntegration::DEH::CreateWinRTActivatableClassHandler
OSIntegration::DEH::ActivatableClassExtensionHandler::EvaluateUpdate
OSIntegration::DEH::ActivatableClassExtensionHandler::EvaluateUpdate::<lambda_fbdbd48b95876bcc84d1f777e43d405b>::operator ()
@*[local-name()='RuntimeBehavior']
@*[local-name()='TrustLevel']
*[local-name()='Path']
OutOfProcessServer
*[local-name()='Interface']
*[local-name()='ActivatableClass']
*[local-name()='Instancing']
*[local-name()='Arguments']
ServerName
ActivatableClassId
ancestor::*[local-name()='Application'][1]
*[local-name()='ActivatableClassAttribute']
@*[local-name()='IdentityType']
InterfaceId
ClassId
Value
activateAsActivator
multipleInstances
singleInstance
@*[local-name()='RunFullTrust']
integer
string
activateAsPackage
OSIntegration::DEH::Internal::ActivatableClassHelper::Initialize
_packageElements
OSIntegration::DEH::Internal::ActivatableClassHelper::Create
helper->Initialize(packageToParse, extensionElements, countExtensionElements)
strPackageMoniker.Initialize(packageToParse->GetPackageMoniker())
onecore\admin\appmodel\osim\src\deh\winrt\activationdeh\activatableclasshelper.cpp
nodes->get_length(&listLength)
_packageElements[i]->get_childNodes(&nodes)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitRegistrations
_sourcePackage->QuirkIsEnabled(QUIRK_REX_ActivationDEHErrorOverwrite, &ignoreErrorsForCompatibility)
RetrieveValue(dllPathQuery, root, dllPath)
hrParse
node->get_baseName(bstrNodeName.AddressOf())
nodes->get_item(nodeIndex, &node)
Common::Xml::GetXMLElementsFromQuery( ActivatableClassConstants::classesXPath, element.Get(), classes.ReleaseAndGetAddressOf())
root.As(&element)
CalculateAbsolutePathIfNecessary(dllPath, &isPackageRelativePath)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitInProcessServer
ClrHost.exe
ClrHost.dll
classes->get_item(nodeIndex, &node)
classes->get_length(&listLength)
Common::Deployment::GetSystemBinaryForArchitecture( this->_sourcePackage->GetPackageArchitecture(), pszPath, packageIsWin8X, pathStringBuffer)
OSIntegration::DEH::Internal::ActivatableClassHelper::CalculateAbsolutePathIfNecessary
Tools::IsPackageDesktopWin8X(this->_sourcePackage, packageIsWin8X)
aghostsvcs.dll
GetAttributeValueStringFromElement( applicationElement.Get(), Internal::ActivatableClassConstants::idAttribute, idBuffer, &idAttributeFound)
GetXMLElementFromQuery( Internal::ActivatableClassConstants::ancestorApplicationXPath, element.Get(), &applicationElement)
parentExtension.As(&parentExtensionElement)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitOutOfProcessServer
GetAttributeValueStringFromQuery( ActivatableClassConstants::identityTypeAttributeXPath, element.Get(), identityTypeBuffer, &identityTypeAttributeFound)
appUserModelId.Initialize(appUserModelIdBuffer.GetChars())
_sourcePackage->GenerateAppUserModelId(idBuffer.GetChars(), &appUserModelIdBuffer)
APPX_E_INVALID_MANIFEST
_sourcePackage->GenerateAppUserModelId( AAP_SERVER_REGISTRATION_SHAREDUSAGE_PRAID, &appUserModelIdBuffer)
ppleae38af2e007f4358a809ac99a64a67c1
appUserModelId.Initialize(L"")
MapEnumString(ActivatableClassConstants::identityTypeMap, ARRAYSIZE(ActivatableClassConstants::identityTypeMap), Windows::Internal::StringReference(identityTypeBuffer.GetChars()), reinterpret_cast<DWORD*>(&identityType))
RetrieveAttribute(serverNameQuery, root, serverName)
GetAttributeValueStringFromQuery( ActivatableClassConstants::runtimeBehaviorAttributeXPath, parentExtensionElement.Get(), runtimeBehaviorAsString, &runtimeBehaviorFound)
GetAttributeValueStringFromQuery( ActivatableClassConstants::trustLevelAttributeXPath, parentExtensionElement.Get(), trustLevelAsString, &trustLevelFound)
GetAttributeValueBooleanFromQuery( ActivatableClassConstants::runFullTrustAttributeXPath, element.Get(), runFullTrustAttribute, &runFullTrustAttributeFound)
CalculateAbsolutePathIfNecessary(exePath, &isPackageRelativePath)
RetrieveValue(exePathQuery, root, exePath)
temp.Concat(arguments, &commandLine)
temp.Concat(space, &temp)
temp.Concat(quote, &temp)
quote.Concat(exePath, &temp)
MapEnumString(ActivatableClassConstants::instancingMap, ARRAYSIZE(ActivatableClassConstants::instancingMap), instancingString, reinterpret_cast<DWORD*>(&instancing))
RetrieveValue(instancingQuery, root, instancingString)
commandLine.Initialize(L"")
hrRetrieveValue != E_POINTER
server->put_IsPackageRelativePath(isPackageRelativePath)
!server->put_CommandLine(commandLine)
!server->put_ExePath(exePath)
ExeServerRegistration::Create(serverName, _sourcePackage->GetCollectors(), &server)
server->put_ExplicitPsmActivationType(PsmActNotBackground)
!server->put_AppUserModelId(appUserModelId)
!server->put_Instancing(instancing)
!server->put_IdentityType(identityType)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseProxyStub::<lambda_bb2cb60d87cd064dea9f3c4d843a3f94>::operator ()
RetrieveAttribute(iidQuery, node, strIid)
server->put_RuntimeBehavior(runtimeBehavior)
server->put_TrustLevel(trustLevel)
RetrieveAttribute(interfaceNameQuery, node, interfaceName)
strValidatedIid.Initialize(tempIid.get())
StringFromCLSID(iid, &tempIid)
UuidFromString(const_cast<RPC_WSTR>(strIid.GetRawBuffer(nullptr)), &iid)
UuidFromString(const_cast<RPC_WSTR>(strCLSID.GetRawBuffer(nullptr)), &clsid)
RetrieveAttribute(clsidQuery, root, strCLSID)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseProxyStub
InterfaceRegistration::Create(strValidatedIid, interfaceName, strValidatedCLSID, _sourcePackage->GetCollectors(), &itf)
ProxyStubRegistration::FindOrCreate(strValidatedCLSID, dllPath, true , _sourcePackage->GetCollectors(), &proxyStub)
RetrieveValue( dllPathQuery, root, dllPath)
strValidatedCLSID.Initialize(tempClsid.get())
StringFromCLSID(clsid, &tempClsid)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitProxyStubs
interfaces->get_item(nodeIndex, &node)
interfaces->get_length(&listLength)
Common::Xml::GetXMLElementsFromQuery( ActivatableClassConstants::interfacesXPath, element.Get(), &interfaces)
RetrieveAttribute(threadingModelQuery, root, threadingModelString)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitIAMActivatableClass
RetrieveAttribute(acidQuery, root, acid)
ParseProxyStub(node)
activatableClass->put_IsPackageRelativePath(isPackageRelativePath)
!activatableClass->put_DllPath(dllPath)
InProcessActivatableClassRegistration::Create(acid, _sourcePackage->GetCollectors(), &activatableClass)
MapEnumString(ActivatableClassConstants::threadingMap, ARRAYSIZE(ActivatableClassConstants::threadingMap), threadingModelString, reinterpret_cast<DWORD*>(&threadingModel))
OutOfProcessActivatableClassRegistration::Create(acid, serverName, _sourcePackage->GetCollectors(), &activatableClass)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitOAMActivatableClass
ParseAndSubmitCustomAttributes(root, activatableClass)
!activatableClass->put_ThreadingType(threadingModel)
attributes->get_item(nodeIndex, &node)
attributes->get_length(&listLength)
Common::Xml::GetXMLElementsFromQuery( ActivatableClassConstants::attributeXPath, element.Get(), attributes.ReleaseAndGetAddressOf())
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitCustomAttributes
ParseAndSubmitDwordAttribute(activatableClass, node)
ParseAndSubmitStringAttribute(activatableClass, node)
MapEnumString(ActivatableClassConstants::attributeTypeMap, ARRAYSIZE(ActivatableClassConstants::attributeTypeMap), typeValue, reinterpret_cast<DWORD*>(&type))
RetrieveAttribute(TypeQuery, node, typeValue)
_sourcePackage->GetIsStoreSigned()
activationType == Windows::Foundation::ActivationType_OutOfProcess
OSIntegration::DEH::Internal::ActivatableClassHelper::ValidateActivatableClassRegistrationWithDesktopApplicationPathAttribute::<lambda_2b27b91a28f104481ec37fc78783e5ef>::operator ()
activatableClass->get_ActivationType(&activationType)
RetrieveAttribute(NameQuery, element, name)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitStringAttribute
OSIntegration::DEH::Internal::ActivatableClassHelper::ValidateActivatableClassRegistrationWithDesktopApplicationPathAttribute
hrValidate
!activatableClass->AddAttribute(name, value)
RetrieveAttribute(ValueQuery, element, value)
ValidateActivatableClassRegistrationWithDesktopApplicationPathAttribute(activatableClass)
DesktopApplicationPath
OSIntegration::DEH::Internal::ActivatableClassHelper::RetrieveValue
node.As(&element)
Common::Xml::GetAttributeValueUInt32FromElement( element.Get(), ActivatableClassConstants::attributeValueAttribute, &value)
OSIntegration::DEH::Internal::ActivatableClassHelper::ParseAndSubmitDwordAttribute
result.Initialize(buffer.GetChars())
Common::Xml::GetAttributeValueStringFromElement( element.Get(), attributeName.GetRawBuffer(nullptr), buffer)
OSIntegration::DEH::Internal::ActivatableClassHelper::RetrieveAttribute
Common::Xml::GetValueStringFromQuery( query.GetRawBuffer(nullptr), element.Get(), buffer)
OSIntegration::DEH::Internal::ActivatableClassHelper::MapEnumString
E_INVALIDARG
onecore\admin\appmodel\osim\src\deh\winrt\downloaduploaddeh\downloaduploadclass.cpp
OSIntegration::DEH::DownloadUploadClassExtensionHandler::DoesPackageContainPPLE
OSIntegration::Tools::GetXMLDOMFromPackage(const_cast<OSIntegration::Package*>(package), dom.ReleaseAndGetAddressOf())
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.backgroundTasks']/*[local-name()='BackgroundTasks' and @ServerName]
OSIntegration::DEH::DownloadUploadClassExtensionHandler::ParsePackage::<lambda_a6deffd1a3187ee4f8df40f365eace11>::operator ()
package->GetManifestReader(&manifestReader)
dom->selectSingleNode(xpath, node.ReleaseAndGetAddressOf())
xpath.CopyFromString(xpathBackgroundTasksServerName)
application->GetAppUserModelId(&appUserModelId)
applications->GetCurrent(&application)
manifestReader->GetApplications(&applications)
manifestReader->GetCapabilities(&capabilities)
packageId->GetPackageFamilyName(&packageFamilyName)
manifestReader->GetPackageId(&packageId)
Internal::DownloadUploadClassHelper::SubmitDownloadUploadServerRegistration(package, appIndex, strAppUserModelId)
strAppUserModelId.Initialize(appUserModelId.get())
Internal::DownloadUploadClassHelper::SubmitVpnPluginServerRegistration( package, vpnManifest, appIndex, strAppUserModelId)
strAppUserModelId.Initialize(appUserModelId)
FormatApplicationUserModelId(packageFamilyName.get(), AAP_SERVER_REGISTRATION_SHAREDUSAGE_PRAID, &appUserModelIdLength, appUserModelId)
OSIntegration::DEH::DownloadUploadClassExtensionHandler::Initialize
OSIntegration::DEH::DownloadUploadClassExtensionHandler::ParsePackage
hrParsePackage
Internal::DownloadUploadClassHelper::InstallVpnBackgroundTask( package, appUserModelId.get(), vpnManifest )
OSIntegration::DEH::DownloadUploadClassExtensionHandler::EvaluateInstall
ParsePackage(incomingPackage, result)
OSIntegration::DEH::DownloadUploadClassExtensionHandler::EvaluateInstall::<lambda_543c6fc59d8263856493884f463f1852>::operator ()
(incomingPackage == nullptr) || (result == nullptr)
hrRemove
OSIntegration::DEH::DownloadUploadClassExtensionHandler::EvaluateUpdate
OSIntegration::DEH::DownloadUploadClassExtensionHandler::EvaluateUpdate::<lambda_df788b7996a827bd4015879a6a848ae0>::operator ()
(incomingPackage == nullptr) || (outgoingPackage == nullptr) || (result == nullptr)
BackgroundTransferHost
Windows.Networking.BackgroundTransfer.Internal.BackgroundTransferTask.ClassId
Windows.Networking.BackgroundTransfer.Internal.BackgroundTransferTask
%SystemRoot%\System32\BackgroundTaskHost.exe
BackgroundTransferHost.exe
Windows.Networking.ContentPrefetcher.Internal.ContentPrefetcherTask.ClassId
Windows.Networking.ContentPrefetcher.Internal.ContentPrefetcherTask
Windows.Networking.BackgroundTransfer.Internal.NetworkChangeTask.ClassId
Windows.Networking.BackgroundTransfer.Internal.NetworkChangeTask
%windir%\System32\BackgroundTaskHost.exe
BackgroundVpnTaskHost
Windows.Networking.Vpn.PluginBT.ClassId
StringCchPrintf(serverIndexBuffer, length, L".%d", serverIndex)
serverName.Initialize(DownloadUploadClassConstants::vpnPluginOutOfProcessServerName)
strServerIndex.Initialize(serverIndexBuffer)
onecore\admin\appmodel\osim\src\deh\winrt\downloaduploaddeh\downloaduploadclasshelper.cpp
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitVpnPluginServerRegistration
!server->put_ExePath(exePath) || !server->put_IdentityType(IdentityType_ActivateAsPackage) || !server->put_Instancing(InstancingType_SingleInstance) || !server->put_AppUserModelId(appUserModelId)
exePath.Initialize(DownloadUploadClassConstants::vpnPluginOutOfProcessServerPath)
ExeServerRegistration::Create(fullServerName, package->GetCollectors(), &server)
serverName.Concat(strServerIndex, &fullServerName)
S-1-5-80-410965207-2550896871-1717734767-2321332215-3755966139
OSIntegration::DEH::Internal::DownloadUploadClassHelper::GetBackgroundTaskRegkeySD
szSDDL
SubmitVpnPluginActivatableClass(package, vpnPluginManifest, strServerIndex, fullServerName)
StringCchPrintf(szSDDL, cchSDDL, SDDL_APPLIST_REGKEYS_FORMAT, pszUserSid, pszUserSid, SID_AUDIO_SERVICE, SID_BLUETOOTH_SUPPORT_SERVICE, SID_TIMEBROKER_SERVICE)
O:%sD:P(A;;FA;;;%s)(A;;GR;;;%s)(A;;GR;;;%s)(A;;GR;;;%s)(A;;FA;;;BA)
S-1-5-80-2676549577-1911656217-2625096541-4178041876-1366760775
S-1-5-80-2586557155-168560303-1373426920-983201488-1499765686
Software\Microsoft\Windows\CurrentVersion\Authentication\LogonUI\Notifications\BackgroundCapability
OSIntegration::DEH::Internal::DownloadUploadClassHelper::InstallVpnBackgroundTask
!(wil::verify_bool(ConvertSidToStringSidW(package->GetVisibleUser(), &userSidString)))
ConvertStringSecurityDescriptorToSecurityDescriptor(szSDDL, SDDL_REVISION_1, ppSD, nullptr)
RegCreateKeyEx(HKEY_USERS, capabilitiesKeyPath, 0, NULL, REG_OPTION_NON_VOLATILE, KEY_READ | KEY_WRITE, &sa, &hKey, nullptr)
GetBackgroundTaskRegkeySD(userSidString.get(), &securityDescriptor)
StringCchPrintf(capabilitiesKeyPath, ARRAYSIZE(capabilitiesKeyPath), L"%s\\%s\\%s\\%s", userSidString.get(), BTC_REGKEY, package->GetPackageSidString(), DownloadUploadClassConstants::vpnPluginbackgroundTaskClassId)
%s\%s\%s\%s
VpnClientPluginInstall( vpnPluginManifest->backgroundTaskAcid, package->GetPackageMoniker(), package->GetVisibleUser() )
RegSetValueEx(hKey.get(), BTC_REGVALUE_AUMID, 0, REG_SZ, reinterpret_cast<const BYTE*>(appUserModelId), (DWORD)((wcslen(appUserModelId) + 1)*sizeof(WCHAR)))
AppUserModelId
RegSetValueEx(hKey.get(), BTC_REGVALUE_CAPABILITIES, 0, REG_DWORD, reinterpret_cast<const BYTE*>(&acidCapabilities), sizeof(DWORD))
RegQueryInfoKey(hKeyPackage.get(), nullptr, nullptr, nullptr, &cAcids, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr)
RegOpenKeyEx(HKEY_USERS, capabilitiesKeyPath, 0, KEY_READ | KEY_WRITE, &hKeyPackage)
StringCchPrintf(capabilitiesKeyPath, ARRAYSIZE(capabilitiesKeyPath), L"%s\\%s\\%s", userSidString.get(), BTC_REGKEY, package->GetPackageSidString())
OSIntegration::DEH::Internal::DownloadUploadClassHelper::UninstallVpnBackgroundTask::<lambda_73ab441d1a645673b0ceecb95fc1801e>::operator ()
extensionRegistration
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitBackgroundVpnPluginTasksExtension
contractId.Initialize(DownloadUploadClassConstants::backgroundTasksContractId)
RegDeleteKey(hKeyPackage.get(), DownloadUploadClassConstants::vpnPluginbackgroundTaskClassId)
!(wil::verify_bool(extensionRegistration->put_Icon(iconPath)))
iconPath.Initialize(DownloadUploadClassConstants::extensionIconPath)
!(wil::verify_bool(extensionRegistration->AddAttribute(capabilitiesProperty, capabilities)))
capabilitiesProperty.Initialize(DownloadUploadClassConstants::backgroundTasksPropCapabilities)
backgroundTaskClassId.Concat(serverIndex, &fullBackgroundTaskClassId)
backgroundTaskEntryPoint.Initialize(pVpnManifest->backgroundTaskAcid)
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitVpnPluginActivatableClass
backgroundTaskClassId.Initialize(DownloadUploadClassConstants::vpnPluginbackgroundTaskClassId)
serverName.Initialize(DownloadUploadClassConstants::DownloadUploadServers[index].outOfProcessServerName)
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitDownloadUploadServerRegistration
SubmitBackgroundVpnPluginTasksExtension(package, fullBackgroundTaskClassId)
SubmitActivatableClassRegistration(package, serverName, backgroundTaskEntryPoint, fullBackgroundTaskClassId)
taskClassId.Initialize(classId)
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitBackgroundTasksExtension
SubmitActivatableClass(package, strServerIndex, fullServerName, DownloadUploadClassConstants::DownloadUploadServers[index].classes[classIndex].taskEntryPoint, DownloadUploadClassConstants::DownloadUploadServers[index].classes[classIndex].taskClassId)
exePath.Initialize(DownloadUploadClassConstants::DownloadUploadServers[index].outOfProcessServerPath)
SubmitBackgroundTasksExtension(package, fullTaskClassId)
SubmitActivatableClassRegistration(package, serverName, taskEntryPoint, fullTaskClassId)
taskClassId.Concat(serverIndex, &fullTaskClassId)
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitActivatableClass::<lambda_6d46f88dfe2357219c4b641f735ad4de>::operator ()
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitActivatableClassRegistration
OutOfProcessActivatableClassRegistration::Create(activatableClassId, serverName, package->GetCollectors(), &activatableClass)
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitActivatableClass
hrSubmitActivatableClass
!(wil::verify_bool(activatableClass->AddAttribute(entryPointAttribute, activatableClassEntryPoint)))
OSIntegration::DEH::Internal::DownloadUploadClassHelper::SubmitClassEntryPointRegistration
entryPointAttribute.Initialize(DownloadUploadClassConstants::attributeEntryPoint)
SubmitClassEntryPointRegistration(activatableClass, activatableClassEntryPoint)
!(wil::verify_bool(activatableClass->AddAttribute(aliasedAttribute, 1)))
aliasedAttribute.Initialize(DownloadUploadClassConstants::attributeAliased)
Common::Xml::GetXMLNodeListFromQuery( L"*[local-name()='BackgroundTasks']/*[local-name()='Task']", const_cast<IXMLDOMElement*>(incomingExtensionElements[i]), &taskItems, &taskItemsCount)
OSIntegration::DEH::BackgroundPlaybackClassExtensionHandler::EvaluateUpdate
onecore\admin\appmodel\osim\src\deh\winrt\backgroundplaybackdeh\backgroundplaybackclass.cpp
OSIntegration::DEH::BackgroundPlaybackClassExtensionHandler::EvaluateInstall
Common::Xml::GetAttributeValueStringFromElement( const_cast<IXMLDOMElement*>(incomingExtensionElements[i]), Appx::Packaging::Manifest::AttributeNameWithoutPrefix::EntryPoint, strEntryPoint, &foundEntryPoint)
GetBackgroundTaskType(taskItemNode.Get(), &capability)
taskItems->get_item(idxTask, &taskItemNode)
OSIntegration::DEH::BackgroundPlaybackClassExtensionHandler::ParsePackage::<lambda_d113657dc5878d88941e9f85fa6da867>::operator ()
Multiple audio declarations found.
No entry point found.
((HRESULT)0x80080204L)
Common::Xml::GetAttributeValueStringFromElement( const_cast<IXMLDOMElement*>(incomingExtensionElements[i]), Appx::Packaging::Manifest::AttributeNameWithoutPrefix::StartPage, strEntryPoint, &foundStartPage)
OSIntegration::DEH::BackgroundPlaybackClassExtensionHandler::ParsePackage
Internal::BackgroundPlaybackClassHelper::SubmitBackgroundPlaybackRegistration(package, strEntryPoint.GetChars(), !!foundStartPage)
Windows.Media.BackgroundPlayback.BackgroundPlayer
Windows.Media.BackgroundPlayback.exe
BackgroundPlaybackHost
WWAHost.exe
wwa.BackgroundPlaybackHost
Windows.Media.Playback.MediaPlayer
SubmitOutOfProcessActivatableClassRegistration(package, pwszEntryPoint, isWwaBackgroundAudioTask)
onecore\admin\appmodel\osim\src\deh\winrt\backgroundplaybackdeh\backgroundplaybackclasshelper.cpp
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitBackgroundPlaybackRegistration
SubmitExeServerRegistration(package, isWwaBackgroundAudioTask)
Tools::IsPackageDesktopWin8X(package, packageIsWin8X)
ExeServerRegistration::Create( serverName, package->GetCollectors(), &serverRegistration)
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitExeServerRegistration::<lambda_871efc7a6d82093eb8edbf12856f2f2c>::operator ()
serverName.Initialize( isWwaBackgroundAudioTask ? BackgroundPlaybackClassConstants::wwaBackgroundPlaybackServerName : BackgroundPlaybackClassConstants::outOfProcessBackgroundPlaybackServerName)
appUserModelId.Initialize(pwszAUMID.get())
GenerateAppUserModelId( package->GetPackageFamilyMoniker(), BackgroundPlaybackClassConstants::outOfProcessSharedServerAUMID, &pwszAUMID)
serverPath.Initialize(exeServerPath.GetChars())
Common::Deployment::GetSystemBinaryForArchitecture( packageArchitecture, exeFileName, packageIsWin8X, exeServerPath)
hrSubmitExeServerRegistration
!serverRegistration->put_ExePath(serverPath) || !serverRegistration->put_IdentityType(IdentityType_ActivateAsPackage) || !serverRegistration->put_Instancing(InstancingType_SingleInstance) || !serverRegistration->put_AppUserModelId(appUserModelId) || !serverRegistration->AddAttribute(sharedUsageName, sharedUsageValue)
sharedUsageValue.Initialize(AAP_SERVER_REGISTRATION_SHAREDUSAGE_PROPERTYVALUE)
sharedUsageName.Initialize(AAP_SERVER_REGISTRATION_SHAREDUSAGE_PROPERTYNAME)
hrSubmitClassEntryPointRegistration
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitClassEntryPointRegistration::<lambda_33c7bbac01262acbf9d450063ecfface>::operator ()
entryPointAttribute.Initialize(L"AppObject.EntryPoint")
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitExeServerRegistration
classId.Initialize(BackgroundPlaybackClassConstants::outOfProcessMediaPlayerClassId)
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitOutOfProcessActivatableClassRegistration::<lambda_bc2f3d7e4fea003b575fe8683c4e639f>::operator ()
classId.Initialize(BackgroundPlaybackClassConstants::outOfProcessBackgroundPlayerClassId)
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitClassEntryPointRegistration
hrSubmitOutOfProcessActivatableClassRegistration
SubmitClassEntryPointRegistration(activatableClass, entryPoint)
entryPoint.Initialize(pwszEntryPoint)
OutOfProcessActivatableClassRegistration::Create( classId, serverName, package->GetCollectors(), &activatableClass)
OSIntegration::DEH::Internal::BackgroundPlaybackClassHelper::SubmitOutOfProcessActivatableClassRegistration
Usage
Shared
onecore\admin\appmodel\OSIM\src\deh\appx\Common\AppContainerImpersonate.hpp
*[local-name()='Certificates']
ExclusiveTrust
HardwareOnly
AutoSelect
Software\Microsoft\SystemCertificates
*[local-name()='Certificate']
*[local-name()='TrustFlags']
*[local-name()='SelectionCriteria']
StoreName
TrustFlags
SelectionFlags
onecore\admin\appmodel\osim\src\deh\certificates\certificates.cpp
onecore\admin\appmodel\osim\src\deh\uex\preinstalledconfigtask\preinstalledconfigtaskhandler.cpp
shellExperience
Windows.PreInstalledConfigTask
onecore\admin\appmodel\osim\src\deh\uex\preinstalledconfigtask\preinstalledconfigtaskhelper.cpp
@*[local-name()='SupportsMultipleInstances']
RetryRemaining
TaskEntryPoint
Software\Microsoft\Windows NT\CurrentVersion\BackgroundModel\PreInstallTasks\RequireReschedule
Windows.ApplicationModel.Core.DefaultInProcBackgroundTask
ResourceGroup
descendant-or-self::*/attribute::ServerName
backgroundTaskHost.exe
onecore\admin\appmodel\osim\src\deh\uex\updatemigrationtask\updatemigrationtaskhelper.cpp
onecore\admin\appmodel\osim\src\deh\winrt\restrictedlaunchdeh\restrictedlaunchhelper.cpp
onecore\admin\appmodel\Common\Utilities.hpp
MRT Deh
onecore\admin\appmodel\osim\src\deh\gdx\mrthandler.cpp
Unknown File
All merge file indices are taken
Linked user-specific merged PRI file
Trying to copy shared PRI to user specific PRI
Merge failure for user-specific merged PRI file
Trying to merge to user-specific merged PRI file
Created shared merged PRI file
Merge failure for shared merged PRI file
Trying to move shared PRI to user specific PRI
Unable to link shared merged PRI file to user-specific path
Current shared merged PRI file ignored
Shared merged file still in use
Couldn't open shared merged PRI file to check link count
Couldn't get link count from shared merged PRI file
No user-specific merged files found
Merged to user-specific merged PRI file
No shared merged files found
Current user-specific merged PRI file ignored
Permissions Failure
Unable to delete file - added to purge list
Geofence.dat
onecore\admin\appmodel\osim\src\deh\geolocation\geolocationextensionhandler.cpp
\Microsoft\Windows\LfSvc\Geofence
Psm.ActivationType
.wwa.bt
onecore\admin\appmodel\osim\src\deh\appx\appservice\appservicehelper.cpp
SupportsRemoteSystems
*[local-name()='AppService']
onecore\admin\appmodel\osim\src\deh\appx\appservice\AppServiceHelper.hpp
self::*[@Category='windows.appService' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\appx\appointmentdataprovider\appointmentdataproviderhelper.cpp
self::*[@Category='windows.appointmentDataProvider' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\appx\contactdataprovider\contactdataproviderhelper.cpp
self::*[@Category='windows.contactDataProvider' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\appx\emaildataprovider\emaildataproviderhelper.cpp
self::*[@Category='windows.emailDataProvider' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\appx\userdatataskdataprovider\userdatataskdataproviderhelper.cpp
self::*[@Category='windows.userDataTaskDataProvider' and @Executable='wwahost.exe']
self::*[@Category='windows.barcodeScannerProvider' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\appx\posbarcodescannerprovider\posbarcodescannerproviderhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\pospaymentconnector\pospaymentconnectorhelper.cpp
self::*[@Category='windows.posPaymentConnector' and @Executable='wwahost.exe']
onecore\admin\appmodel\osim\src\deh\webaccountprovider\webaccountproviderhelper.cpp
.WebAccountProvider
Windows.Internal.Security.Authentication.Web.WamProviderRegistration
onecore\admin\appmodel\osim\src\deh\dialprotocol\dialprotocolhelper.cpp
AppName
*[local-name()='DialProtocol']
onecore\admin\appmodel\osim\src\deh\userdataaccess\userdataaccessextensionhandler.cpp
Software\Microsoft\UserData\UninstallTimes
./*[local-name()='VisualElements']
%windir%\system32
Microsoft.UI.Xaml.CBS_8wekyb3d8bbwe
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
*[local-name()='Extensions']/*[local-name()='Extension' and @StartPage]
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
onecore\admin\appmodel\osim\src\deh\appx\appxminirepository\appxminirepositoryhandler.cpp
Update package status to %u failed for package %ws.
onecore\internal\base\inc\appmodel\appxminirepository\AppXMiniRepository.h
onecore\admin\appmodel\osim\src\deh\appx\common\shellrefresh.cpp
CheckPoint.VPN_cw5n1h2txyewy
f5.vpn.client_cw5n1h2txyewy
Windows.PrintDialog_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
OOBEApp_cw5n1h2txyewy
SettingsApp_cw5n1h2txyewy
BrowserChoice_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
DefaultApp_cw5n1h2txyewy
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
FileManager_cw5n1h2txyewy
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
Microsoft.MoCamera_cw5n1h2txyewy
SonicWALL.MobileConnect_cw5n1h2txyewy
windows.devicesflow_cw5n1h2txyewy
windows.immersivecontrolpanel_cw5n1h2txyewy
Windows.MiracastView_cw5n1h2txyewy
Windows.MtcUvc_cw5n1h2txyewy
Files
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
: does not have a resources.pri file or could not create a resource manager
Xbox.KinectTuner_cw5n1h2txyewy
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
\resources.pri
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='OSPackageDependency']
Microsoft.GameOS
vector too long
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
neutral
Resources
onecore\admin\appmodel\osim\src\deh\appx\common\xmltools.cpp
<Error message string not found>
onecore\admin\appmodel\osim\src\deh\appx\common\deploymentextension.cpp
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
ContractId
AppUserModelID
PackageRelativeExecutable
DesktopAppXActivateOptions
DesiredInitialViewState
PackageFamilyName
topic
ifexec
{4ED3A719-CEA8-4BD9-910D-E252F997AFC2}
{BFEC0C93-0B7D-4F2C-B09C-AFFFC4BDAE78}
{A56A841F-E974-45C1-8001-7E3F8A085917}
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
\LaunchWinApp.exe" "%1"
PackageId
command
DelegateExecute
Parameters
MultiSelectModel
Extended
ddeexec
application
$(Package)
[{Package}]
invalid string_view position
onecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
list too long
Package
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\mocomhelper.cpp
Windows.Launch
onecore\admin\appmodel\osim\src\deh\appx\common\MoCOMHelper.hpp
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
./@*[local-name()="DesiredView"]
@*[local-name()='HostId']
VailProxy
./*[local-name()='AppService']
uap4:SupportsMultipleInstances
./*[local-name()='BackgroundTasks']
@*[local-name()='Subsystem']
SupportsMultipleInstances
Subsystem
NavigateTo
ExeHost
Windows.FullTrustApplication
AppObject.RuntimeType
Windows.PartialTrustApplication
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='DisplayName']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Logo']
../..
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Description']
eraproxyapp.exe
%windir%\system32\eraproxyapp.exe
gamecoreproxyapp.exe
%windir%\system32\gamecoreproxyapp.exe
%windir%\syswow64\aghost.exe
wwahost.exe
../../*[local-name()='VisualElements']
Description
Application
ApplicationName
ApplicationCompany
ApplicationIcon
ApplicationDescription
SmallLogo
Square30x30Logo
Square44x44Logo
/@*[local-name()="DesiredView"]
Software\Classes
Shell
useLess
useMinimum
useMore
onecore\admin\appmodel\osim\src\deh\appx\common\ConstantStringMap.hpp
SetDefault-Modern: Association=%ls, ProgId=%ls
UserChoice
SetDefault: Association=%ls, ProgId=%ls
https
.html
onecore\internal\shell\inc\UserChoiceCore.h
MigrateToCentennialAsDefault
onecore\admin\appmodel\osim\src\deh\appx\common\progidregistryhelper.cpp
default
useHalf
SetDefault-Info: Association=%ls, ProgId=%ls, U=%ls, T=%02d:%02d:%02d:%02d:%02d:%02d, H=%ls
SetDefault-Mismatch: Association=%ls, ProgId=%ls, U=%ls, T1=%02d:%02d:%02d:%02d:%02d:%02d, T2=%02d:%02d:%02d:%02d:%02d:%02d
onecore\internal\sdk\inc\wil\opensource/wil/result.h
Windows.Internal.ApplicationDefaults.AppDefaultHelpers
./*[local-name()='ServiceId']
@shell32.dll,-%d
onecore\admin\appmodel\osim\src\deh\appx\common\actionhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\dehrequest.cpp
bad allocation
*.sccd
onecore\admin\appmodel\osim\src\deh\appx\common\customcapabilities.cpp
AppxMetadata\CodeIntegrity.cat
AppxSignature.p7x
onecore\admin\appmodel\osim\src\deh\appx\common\usertoken.cpp
PublisherDisplayName
onecore\admin\appmodel\osim\src\deh\visualelements\visualelementsextensionhandler.cpp
./m2:VisualElements
./m:VisualElements
NoUIEntryPoints-DesignMode
./m3:VisualElements
NoUIEntryPoints-DesignModeV2
Design Mode
onecore\admin\appmodel\osim\src\deh\visualelements\visualelementshelper.cpp
runFullTrust
Design Mode V2
./*[local-name()='SplashScreen']
BackgroundColor
Image
Orientation
Preference
./*[local-name()='InitialRotationPreference']/*[local-name()='Rotation']
onecore\admin\appmodel\osim\src\deh\visualelements\splashscreeninstall.cpp
Portrait
Landscape
PortraitFlipped
LandscapeFlipped
SplashScreen
*[local-name()='DefaultTile']/*[local-name()='TileUpdate']
halfHour
twelveHours
sixHours
%s\%s
daily
SOFTWARE\Microsoft\Windows\CurrentVersion\PushNotifications\Applications
Recurrence
ApplicationType
PackageMoniker
onecore\admin\appmodel\osim\src\deh\visualelements\notificationsapplication.cpp
RegistrationType
https://
http://
Uonecore\admin\appmodel\osim\src\deh\uex\share\sharemobilecore.cpp
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='ShareTarget']/*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
SupportedDataFormats
*[local-name()='ShareTarget']/*[local-name()='DataFormat']
onecore\admin\appmodel\osim\src\deh\uex\share\sharehelper.cpp
SupportedFileTypes
Shell IDList Array
BackgroundTasksHandlerDEHUnitialize
onecore\admin\appmodel\osim\src\deh\uex\backgroundtasks\backgroundtaskshandler.cpp
@Qm6t
onecore\admin\appmodel\osim\src\deh\uex\backgroundtasks\backgroundtaskshelper.cpp
O:%sD:P(A;OICI;FA;;;%s)(A;OICI;GR;;;%s)(A;OICI;GR;;;%s)(A;OICI;GR;;;%s)(A;OICI;FA;;;BA)
Startup
self::*[@Category='windows.backgroundTasks' and @Executable='wwahost.exe']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.backgroundTasks']/*[local-name()='BackgroundTasks']/*[local-name()='Task' and (@Type='pushNotification' or @Type='controlChannel')]
onecore\admin\appmodel\osim\src\deh\uex\backgroundtasks\backgroundtasksutilities.cpp
SeRestorePrivilege
SeTakeOwnershipPrivilege
USERS\%s
USERS\%s\%s
onecore\admin\appmodel\osim\src\deh\uex\defaultbackgroundtasks\defaultbackgroundtasksclass.cpp
DefaultBackgroundTasksDEHUnitialize
WilError_03
onecore\admin\appmodel\osim\src\deh\uex\defaultbackgroundtasks\defaultbackgroundtasksclasshelper.cpp
Windows.Internal.ServiceWorker.ServiceWorkerBackgroundTask
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolextensionhandlermobilecore.cpp
cmdfile
comfile
cerfile
chm.file
drvfile
exefile
cplfile
dllfile
Optional
accountpictureprovider
Always
batfile
application.manifest
application.reference
fonfile
hlpfile
explorer.zipselection
insfile
internetshortcut
htafile
inffile
explorer.assocactionid.erasedisc
explorer.assocactionid.zipselection
explorer.assocactionid.burnselection
explorer.assocactionid.closesession
explorer.closesession
explorer.erasedisc
explorer.assocprotocol.search-ms
explorer.burnselection
msi.patch
ocxfile
ms-windows-search
msi.package
scrfile
scriptletfile
piffile
regfile
microsoft.powershellscript.1
ms-accountpictureprovider
jsefile
lnkfile
ms-appx-web
ms-autoplay
ms-appdata
ms-appx
wsfile
wshfile
windows.gadget
wsffile
windows.
onecore\admin\appmodel\osim\src\deh\appx\protocol\protocolhelper.cpp
shsfile
shbfile
shcmdfile
vbefile
vbsfile
sysfile
ttffile
Software\Microsoft\Windows\Shell\Associations\UrlAssociations
*[local-name()='Protocol']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='Protocol']/*[local-name()='DisplayName']
*[local-name()='Protocol']/*[local-name()='Logo']
ReturnResults
*[local-name()='Protocol']
@*[local-name()='Parameters']
unknown
.appref-ms
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypehelper.cpp
.accountpicture-ms
.application
Software\Microsoft\Windows\CurrentVersion\Explorer\KindMap\
classic
.gadget
FullDetails
PreviewDetails
OpenWithProgids
AllowSilentDefaultTakeOver
InfoTip
EditFlags
TypeOverlay
@*[local-name()='DdeExecCommand']
@*[local-name()='Default']
@*[local-name()='DdeExecTopic']
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecApplication']
*[local-name()='FileTypeAssociation']/*[local-name()='OleClass']
Property
@*[local-name()='Category']
*[local-name()='AppExecutionAlias']/*[local-name()='ExecutionAlias']
*[local-name()='FileTypeAssociation']/*[local-name()='KindMap']/*[local-name()='Kind']
*[local-name()='FileTypeAssociation']/*[local-name()='PropertyLists']/*[local-name()='PropertyList']
*[local-name()='FileTypeAssociation']/*[local-name()='MigrationProgIds']/*[local-name()='MigrationProgId']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedVerbs']/*[local-name()='Verb']
OpenIsSafe
desktop5:ThumbnailTypeOverlay
AlwaysUnsafe
*[local-name()='FileTypeAssociation']/*[local-name()='EditFlags']
*[local-name()='FileTypeAssociation']/*[local-name()='DisplayName']
*[local-name()='FileTypeAssociation']/*[local-name()='InfoTip']
*[local-name()='FileTypeAssociation']/*[local-name()='Logo']
*[local-name()='FileTypeAssociation']/*[local-name()='ProgId']
desktop2:AllowSilentDefaultTakeOver
@*[local-name()='Scope']
@*[local-name()='CompatMode']
*[local-name()='FileTypeAssociation']
PerceivedType
onecore\admin\appmodel\osim\src\deh\appx\filetype\filetypeextensionhandlermobilecore.cpp
ContentType
onecore\admin\appmodel\osim\src\deh\uex\apppicker\mobilecorecachedfileupdater.cpp
onecore\admin\appmodel\osim\src\deh\uex\apppicker\mobilecorefilesavepicker.cpp
konecore\admin\appmodel\osim\src\deh\uex\apppicker\apppickerhelper.cpp
*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
*[local-name()='SupportedFileTypes']/*[local-name()='SupportsAnyFileType']
onecore\admin\appmodel\osim\src\deh\uex\apppicker\mobilecorefileopenpicker.cpp
onecore\admin\appmodel\osim\src\deh\licensing\licensing.cpp
clipc.dll
EtwEventEnabled
EtwEventWrite
EtwEventRegister
EtwEventUnregister
onecore\admin\appmodel\osim\src\deh\appx\appuri\appurihelper.cpp
HostNames
*[local-name()='AppUriHandler']/*[local-name()='Host']
*[local-name()='AppUriHandler']/@*[local-name()='Name']
incomingExtensionElements == nullptr && countIncomingElements > 0
(incomingExtensionElements == nullptr && countIncomingElements > 0) || (outgoingExtensionElements == nullptr && countOutgoingElements > 0)
ParseExtensions(const_cast<IXMLDOMElement**>(incomingExtensionElements), countIncomingElements)
onecore\admin\appmodel\osim\src\deh\winrt\componentuideh\componentuiextensionhandler.cpp
OSIntegration::DEH::ComponentUIExtensionHandler::EvaluateInstall
OSIntegration::DEH::ComponentUIExtensionHandler::ParseExtensions
MoCOMHelper::CreateHelper( m_sourcePackage->GetUserToken(), extensionElements[extensionIndex], &contractId, const_cast<OSIntegration::Package*>(m_sourcePackage), &mocomHelper)
Windows.ComponentUI
OSIntegration::DEH::ComponentUIExtensionHandler::EvaluateUpdate
OSIntegration::DEH::CreateComponentUIExtensionHandler
mocomHelper->Evaluate(m_sourcePackage)
OSIntegration::Tools::MoCOMHelper::CreateHelper
instance->ParseApplicationExtension( currentPackage, extensionToProcess, categoryName )
instance
extensionToProcess == NULL || currentPackage == NULL || helper == NULL
onecore\private\base\inc\appmodel\staterepository\dal\ResourcePriority.hpp
onecore\private\base\inc\appmodel\staterepository\dal\Database.hpp
onecore\internal\sdk\inc\wil\opensource\wil\win32_helpers.h
%localappdata%\Microsoft\WindowsApps
Backup
Software\Microsoft\Windows\CurrentVersion\App Paths
ancestor::*[local-name()='Extension']
AppPaths
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='AppExecutionAlias']/*[local-name()='ExecutionAlias' and @Alias='
Windows.CommandLineLaunch
\SystemUWPLauncher.exe
Failed to delete alias file for package %ws.
onecore\admin\appmodel\osim\src\deh\appx\appexecutionalias\appexecutionaliashelper.cpp
Latest
Software\Microsoft\LanguageOverlay
LanguageOverlayKeyName
OverlayPackages
DeferredCleanup
DestagedTimestamp
PriMergeChecksum
LanguageExperiencePackExtensionHandler
Moniker
localExperienceInternal
localExperienceCumulativeInternal
onecore\admin\appmodel\osim\src\deh\lxp\languageexperiencepackextensionhandler.cpp
*[local-name()='LocalExperiencePack']
@Category
onecore\admin\appmodel\osim\src\deh\appx\loopbackaccess\loopbackaccessrulesextensionhandler.cpp
@Direction
Error 0x%X in ConvertCapabilitiesToString
NetworkIsolationCreateDeleteContainerLoopbackRules
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.loopbackAccessRules']
./*[local-name()='Rule' and @Direction='out']
NetworkIsolationCreateAppContainerLoopbackRules
./*[local-name()='LoopbackAccessRules']
@PackageFamilyName
./*[local-name()='Rule' and @Direction='in']
onecore\admin\appmodel\osim\src\deh\appx\unsignedenforcer\unsignedenforcerextensionhandler.cpp
Microsoft.unsignedPackageManagement_8wekyb3d8bbwe
onecore\admin\appmodel\osim\src\deh\appx\uiaccess\uiaccesscapabilityhandler.cpp
/*[local-name()="Package"]/*[local-name()="Capabilities"]/*[local-name()="Capability" and @Name="uiAccess"]
onecore\admin\appmodel\osim\src\deh\cloudfiles\cloudfilesextensionhandler.cpp
Cloud Files Uninstall
QGB6u
dStringCchPrintf(m_string, ARRAYSIZE(m_string), L"%u", value)
onecore\admin\appmodel\OSIM\src\deh\WinRT\Inc\Uint32String.hpp
Uint32String::Uint32String
ParseCompatModeString(attributeValue.GetChars(), compatMode)
OSIntegration::DEH::MsixAppCompatSupport::GetExtensionCompatMode
Scope
OSIntegration::DEH::MsixAppCompatSupport::ParseScopeString
MapEnumString(Details::g_scopeMap, string, scope)
Common::Xml::GetAttributeValueStringByLocalName(extensionElement, L"CompatMode", attributeValue, &attributeFound)
CompatMode
MapEnumString(Details::g_compatModeMap, string, compatMode)
onecore\admin\appmodel\OSIM\src\deh\appx\Common\MsixAppCompatSupport.hpp
OSIntegration::DEH::MsixAppCompatSupport::ParseCompatModeString
modern
OSIntegration::DEH::PackagedComExtensionHandler::PostOsUpgradeEvaluateRequest
OSIntegration::DEH::PackagedComExtensionHandler::EvaluateUpdate
OSIntegration::DEH::PackagedComExtensionHandler::ParseExtensions
extensionElements[extensionIndex]->get_firstChild(&node)
EnforceCompatModeRestrictionsOnIncomingPackage(incomingPackage, incomingExtensionElements, countIncomingElements)
progIdHelperList.As(&_progIdHelperList)
OSIntegration::DEH::PackagedComExtensionHandler::EvaluateUpdate::<lambda_c3ddeec9764f5205bbab724f85a8f9e1>::operator ()
OSIntegration::DEH::PackagedComExtensionHandler::EvaluateInstall
onecore\admin\appmodel\osim\src\deh\winrt\packagedcomdeh\packagedcomextensionhandler.cpp
OSIntegration::DEH::PackagedComExtensionHandler::EvaluateInstall::<lambda_73a21d113e1872671eb087cab5f05c39>::operator ()
(HashMap<HSTRING, IInspectable*>::Make(&progIdHelperList))
OSIntegration::DEH::MsixAppCompatSupport::GetExtensionScope
Common::Xml::GetAttributeValueStringByLocalName(extensionElement, L"Scope", attributeValue, &attributeFound)
ParseScopeString(attributeValue.GetChars(), scope)
ParseExeServer(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
comServerElement->get_baseName(bstrNodeName.AddressOf())
ParseServiceServer(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
ParseSurrogateServer(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
comServerNodes->get_length(&listLength)
OSIntegration::DEH::PackagedComExtensionHandler::ParseComServer
node.As(&comServerElement)
comServerNodes->get_item(nodeIndex, &node)
ParseComServer(extension.Get(), (compatMode == MsixAppCompatSupport::CompatMode::Classic), (scope == MsixAppCompatSupport::Scope::Machine))
extension->get_baseName(bstrNodeName.AddressOf())
root->get_childNodes(&comServerNodes)
ParseComInterface(extension.Get(), (compatMode == MsixAppCompatSupport::CompatMode::Classic), (scope == MsixAppCompatSupport::Scope::Machine))
ParseAndRetrieveAttribute(extensionElements[extensionIndex], Internal::PackagedComConstants::categoryAttribute, category.GetAddressOf())
node.As(&extension)
MsixAppCompatSupport::GetExtensionScope(extensionElements[extensionIndex], &scope)
MsixAppCompatSupport::GetExtensionCompatMode(extensionElements[extensionIndex], &compatMode)
ParseTypeLib(comInterfaceElement.Get(), hasRegistryCompatibility, hasMachineScope)
ParseInterface(comInterfaceElement.Get(), hasRegistryCompatibility, hasMachineScope)
OSIntegration::DEH::PackagedComExtensionHandler::ParseServer
ParseAndRetrieveApplicationIdAndDisplayName( root, applicationId.GetAddressOf(), applicationDisplayName.GetAddressOf())
node.As(&comInterfaceElement)
comInterfaceNodes->get_item(nodeIndex, &node)
ParseProxyStub(comInterfaceElement.Get(), hasRegistryCompatibility, hasMachineScope)
comInterfaceElement->get_baseName(bstrNodeName.AddressOf())
root->get_childNodes(&comInterfaceNodes)
ParseManagedInProcessServer(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
comInterfaceNodes->get_length(&listLength)
OSIntegration::DEH::PackagedComExtensionHandler::ParseComInterface
ParseProgId(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
ParseTreatAsClass(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
ParseInProcessHandler(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
ParseInProcessServer(comServerElement.Get(), hasRegistryCompatibility, hasMachineScope)
exeServer->SetArguments(arguments.get())
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::argumentsAttribute, &arguments, &argumentsFound)
registryCompatibility->SetHasRegistryCompatibility(true)
exeServer.query_to(&registryCompatibility)
ParseServer(root, server.get())
exeServer.query_to(&server)
exeServer->SetExecutable(executable.get(), FALSE)
ParseAndRetrievePath(root, Internal::PackagedComConstants::executableAttribute, &executable)
serverReg->SetLaunchAndActivationPermission(launchAndActivationPermission.Get())
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::launchAndActivationPermissionsAttribute, launchAndActivationPermission.GetAddressOf(), &launchAndActivationPermissionFound)
OSIntegration::DEH::PackagedComExtensionHandler::ParseExeServer
_collector->CreateExeServerRegistration(&exeServer)
serverReg->SetApplicationDisplayName(applicationDisplayName.Get())
serverReg->SetApplicationId(applicationId.Get())
serverReg->SetDisplayName(displayName.Get())
ParseAndRetrieveLocalizableAttribute( root, Internal::PackagedComConstants::displayNameAttribute, displayName.GetAddressOf(), &displayNameFound)
surrogateServer->SetCustomSurrogateExecutable(systemSurrogateExecutable.get(), TRUE)
MapEnumStringToHstringValue(Internal::PackagedComConstants::systemSurrogateMap, ARRAYSIZE(Internal::PackagedComConstants::systemSurrogateMap), wil::str_raw_ptr(systemSurrogateEnumString), &systemSurrogateExecutable)
surrogateServer->SetCustomSurrogateSystemExecutableArchitecture( calculatedClassArchitecture)
TryGetArchitectureOfSurrogateClass(classElement.get(), &calculatedClassArchitecture)
ParseAndRetrievePath(root, Internal::PackagedComConstants::customSurrogateExecutableAttribute, &customSurrogateExecutable, &customSurrogateExecutableFound)
surrogateServer.query_to(&server)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::systemSurrogateAttribute, &systemSurrogateEnumString, &systemSurrogateFound)
surrogateServer->SetCustomSurrogateExecutable(customSurrogateExecutable.get(), FALSE)
ParseExeClass(classElement.get(), exeServer.get(), hasRegistryCompatibility, hasMachineScope)
nodeClass.query_to(&classElement)
OSIntegration::DEH::PackagedComExtensionHandler::ParseSurrogateServer
_collector->CreateSurrogateServerRegistration(&surrogateServer)
scope->SetHasMachineScope(true)
exeServer.query_to(&scope)
classes->get_item(classIndex, &nodeClass)
root->get_childNodes(&classes)
serviceServer.query_to(&server)
OSIntegration::DEH::PackagedComExtensionHandler::ParseServiceServer
serviceServer->SetServiceName(serviceName.get())
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::serviceNameAttribute, &serviceName)
PathAllocCombine(_sourcePackage->GetPackageRoot(), wil::str_raw_ptr(relativePath), PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
!pathFound
_collector->CreateServiceServerRegistration(&serviceServer)
CoGetModuleArchitecture(absolutePath.get(), architecture)
classElement->get_baseName(&elementName)
ParseSurrogateClass(classElement.get(), surrogateServer.get(), hasRegistryCompatibility, hasMachineScope)
ParseAndRetrievePath(classElement, Internal::PackagedComConstants::pathAttribute, &relativePath, &pathFound)
OSIntegration::DEH::PackagedComExtensionHandler::TryGetArchitectureOfSurrogateClass
surrogateServer->SetAppId(appId)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::appIdAttribute, &appId, &appIdFound)
surrogateServer.query_to(&scope)
surrogateServer.query_to(&registryCompatibility)
ParseInProcessHandlerClass(classElement.get(), dllPaths, hasRegistryCompatibility, hasMachineScope)
OSIntegration::DEH::PackagedComExtensionHandler::ParseInProcessHandler
OSIntegration::DEH::PackagedComExtensionHandler::ParseManagedInProcessServer
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::assemblyAttribute, &assembly)
node.query_to(&classElement)
classes->get_item(classIndex, &node)
ParsePerArchitectureDllPaths(root, Internal::PackagedComConstants::inProcessHandlerDllElement, dllPaths)
ParseInProcessServerClass(classElement.get(), dllPaths, hasRegistryCompatibility, hasMachineScope)
_collector->ImplicitlyMarkRegistrationsWithMachineScope()
ParseServiceClass(classElement.get(), serviceServer.get(), hasRegistryCompatibility, hasMachineScope)
OSIntegration::DEH::PackagedComExtensionHandler::ParseInProcessServer
ParsePerArchitectureDllPaths(root, Internal::PackagedComConstants::inProcessServerDllElement, dllPaths)
serviceServer->SetArguments(arguments.get())
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::argumentsAttribute, &arguments, &argumentsFound)
serviceServer.query_to(&scope)
serviceServer.query_to(&registryCompatibility)
OSIntegration::DEH::PackagedComExtensionHandler::ParseServiceClass
exeClass.query_to(&scope)
serviceClass.query_to(&classReg)
server->CreateClassRegistration(id, &serviceClass)
exeClass.query_to(&outofprocClass)
ParseClassProperties(elementWithClassProperties.get(), classReg.get())
exeClass.query_to(&registryCompatibility)
ParseOutofprocClassProperties(root, outofprocClass.get())
root->get_baseName(&elementName)
server->CreateClassRegistration(id, &exeClass)
exeClass.query_to(&classReg)
FindReferencedClassElementForClassReference(root, &elementWithClassProperties)
ParseManagedInProcessServerClass(classElement.get(), assembly.get(), runtimeVersion.get(), hasRegistryCompatibility, hasMachineScope)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::runtimeVersionAttribute, &runtimeVersion)
OSIntegration::DEH::PackagedComExtensionHandler::ParseExeClass
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::idAttribute, &id)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::threadingModelAttribute, &threadingModelString, &threadingModelFound)
surrogateClass.query_to(&scope)
MapEnumString(Internal::PackagedComConstants::threadingMap, ARRAYSIZE(Internal::PackagedComConstants::threadingMap), wil::str_raw_ptr(threadingModelString), reinterpret_cast<DWORD*>(threadingModel))
OSIntegration::DEH::PackagedComExtensionHandler::ParseThreadingModelAttribute
ParseThreadingModelAttribute(root, &threadingModel)
surrogateClass->SetPath(path.get())
surrogateClass.query_to(&registryCompatibility)
surrogateClass->SetThreadingModel(threadingModel)
surrogateClass.query_to(&classReg)
server->CreateClassRegistration(id, &surrogateClass)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::pathAttribute, &path)
surrogateClass.query_to(&outofprocClass)
serviceClass.query_to(&registryCompatibility)
serviceClass.query_to(&outofprocClass)
OSIntegration::DEH::PackagedComExtensionHandler::ParseSurrogateClass
serviceClass.query_to(&scope)
inprocServerClassDllRegistration.query_to(&registryCompatibility)
ParseInprocServerClassProperties(root, inprocServerClassRegistration.get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseInProcessHandlerClass
inprocServerClassDllRegistration.query_to(&scope)
inprocServerClassDllRegistration.query_to(&inprocClassDllRegistration)
ParseInprocClassProperties(root, inprocClassRegistration.get())
inprocServerClassDllRegistration.query_to(&inprocServerClassRegistration)
SetInprocClassDllProperties(inprocClassDllRegistration.get(), dllPaths)
inprocServerClassDllRegistration.query_to(&classRegistration)
_collector->CreateInprocServerClassRegistration(id, &inprocServerClassDllRegistration)
inprocServerClassDllRegistration.query_to(&inprocClassRegistration)
ParseClassProperties(elementWithClassProperties.get(), classRegistration.get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseOutofprocClassProperties
ParseAndRetrieveBool(root, Internal::PackagedComConstants::enableOleDefaultHandlerAttribute, &enableOleDefaultHandler, &enableOleDefaultHandlerFound)
OSIntegration::DEH::PackagedComExtensionHandler::ParseInProcessServerClass
registration->SetOleDefaultHandler(enableOleDefaultHandler)
managedInprocServerClassRegistration->SetRuntimeVersion(runtimeVersion)
managedInprocServerClassRegistration->SetAssembly(assembly)
managedInprocServerClassRegistration.query_to(&registryCompatibility)
managedInprocServerClassRegistration->SetImplementationClass(implementationClass.get())
managedInprocServerClassRegistration.query_to(&inprocClassRegistration)
managedInprocServerClassRegistration.query_to(&classRegistration)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::implementationClassAttribute, &implementationClass)
managedInprocServerClassRegistration.query_to(&inprocServerClassRegistration)
inprocHandlerClassRegistration.query_to(&scope)
inprocHandlerClassRegistration.query_to(&registryCompatibility)
_collector->CreateManagedInprocServerClassRegistration(id, &managedInprocServerClassRegistration)
OSIntegration::DEH::PackagedComExtensionHandler::ParseManagedInProcessServerClass
inprocHandlerClassRegistration.query_to(&classRegistration)
_collector->CreateInprocHandlerClassRegistration(id, &inprocHandlerClassRegistration)
inprocHandlerClassRegistration.query_to(&inprocClassDllRegistration)
inprocHandlerClassRegistration.query_to(&inprocClassRegistration)
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::progIdAttribute, progId.GetAddressOf(), &progIdFound)
classReg->SetDisplayName(displayName.Get())
classReg->SetProgId(progId.Get())
VerifyClassProgId(root, progId.GetRawBuffer(nullptr))
OSIntegration::DEH::PackagedComExtensionHandler::ParseInprocServerClassProperties
registration->SetDllPath_arm64(dllPaths.Path_arm64.get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseClassProperties
registration->SetThreadingModel(threadingModel)
OSIntegration::DEH::PackagedComExtensionHandler::SetInprocClassDllProperties
registration->SetDllPath_x86(dllPaths.Path_x86.get())
registration->SetDllPath_arm(dllPaths.Path_arm.get())
registration->SetDllPath_x64(dllPaths.Path_x64.get())
ParseAndRetrieveBool(root, Internal::PackagedComConstants::virtualizationAttribute, &virtualizationEnabled, &virtualizationFound)
managedInprocServerClassRegistration.query_to(&scope)
registration->SetEnableVirtualization(virtualizationEnabled)
OSIntegration::DEH::PackagedComExtensionHandler::ParseInprocClassProperties
classChilds->get_item(nodeIndex, &node)
classChilds->get_length(&listLength)
classElement->get_baseName(bstrNodeName.AddressOf())
node.As(&classElement)
ParseAndRetrieveLocalizableAttribute( root, Internal::PackagedComConstants::shortDisplayNameAttribute, shortDisplayName.GetAddressOf(), &shortDisplayNameFound)
classReg->SetInsertableObject(insertableObject)
root->get_childNodes(&classChilds)
classReg->SetShortDisplayName(shortDisplayName.Get())
ParseAndRetrieveGuid( root, Internal::PackagedComConstants::idAttribute, &helperId)
ParseAndRetrieveGuid( root, Internal::PackagedComConstants::autoConvertToAttribute, &autoConvertTo, &autoConvertToFound)
ParseAndRetrieveBool( root, Internal::PackagedComConstants::insertableObjectAttribute, &insertableObject, &insertableObjectFound)
classReg->SetAutoConvertTo(autoConvertTo)
_progIdHelperList->Clear()
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::versionIndependentProgIdAttribute, versionIndependentProgId.GetAddressOf(), &versionIndependentProgIdFound)
classReg->SetVersionIndependentProgId(versionIndependentProgId.Get())
VerifyVersionIndependentProgId( root, versionIndependentProgId.Get())
toolboxBitmapValue->Append(path.Get())
Vector<HSTRING>::Make(&toolboxBitmapValue)
toolboxBitmapValue->Append(resourceId.Get())
ParseAndRetrieveAttribute( classElement.Get(), Internal::PackagedComConstants::resourceIdAttribute, resourceId.GetAddressOf(), &resourceIdFound)
defaultIconValues->Append(resourceIndex.Get())
ParseAndRetrieveAttribute( classElement.Get(), Internal::PackagedComConstants::resourceIndexAttribute, resourceIndex.GetAddressOf(), &resourceIndexFound)
classReg->SetDefaultIcon(defaultIcon.Get())
GetCommaSeparatedValue(defaultIconValues.Get(), defaultIcon.GetAddressOf())
Vector<HSTRING>::Make(&defaultIconValues)
ParseVerbs(classElement.Get(), classReg)
defaultIconValues->Append(path.Get())
ParseAndRetrievePath( classElement.Get(), Internal::PackagedComConstants::pathAttribute, path.GetAddressOf())
ParseConversion(classElement.Get(), classReg)
ParseImplementedCategories(classElement.Get(), classReg)
ParseMiscStatus(classElement.Get(), classReg)
ParseDataFormats(classElement.Get(), classReg)
ParseAndRetrieveLocalizableAttribute(root, Internal::PackagedComConstants::displayNameAttribute, &displayName, &displayNameFound)
treatAs->SetTreatAsWithSupportedArchitectures(treatAsGuid, supportedArchitectures)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::autoConvertToAttribute, &autoConvertToGuid, &autoConvertToFound)
treatAs->SetDisplayName(displayName.get())
ParseAndRetrieveGuid( root, Internal::PackagedComConstants::treatAsAttribute, &treatAsGuid)
_collector->CreateTreatAsClassRegistration(idGuid, &treatAs)
GetArchitecturesSupportedForActivationByClsid(root, wil::str_raw_ptr(terminalClsid), &supportedArchitectures)
VerifyTreatAsChain(root, &terminalClsid)
classReg->SetTypeLib(typeLibId)
classReg->SetTypeLibWithVersion(typeLibId, typeLibVersionNumber.Get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseTreatAsClass
ParseAndRetrieveGuid( root, Internal::PackagedComConstants::idAttribute, &idGuid)
classReg->SetToolboxBitmap32(toolboxBitmap.Get())
GetCommaSeparatedValue(toolboxBitmapValue.Get(), toolboxBitmap.GetAddressOf())
ParseAndRetrieveAttribute( classElement.Get(), Internal::PackagedComConstants::versionNumberAttribute, typeLibVersionNumber.GetAddressOf(), &typeLibVersionNumberFound)
ParseAndRetrieveGuid( classElement.Get(), Internal::PackagedComConstants::idAttribute, &typeLibId, &typeLibIdFound)
progId->SetCurrentVersion(currentVersion.get())
FollowProgIdChain(root, currentVersion.get())
progId.query_to(&scope)
progId.query_to(&registryCompatibility)
progId->SetClsidWithIsInsertableObject(clsid, isInsertableObject)
GetClsidIsInsertableObject(root, wil::str_raw_ptr(clsidString), &isInsertableObject)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::currentVersionAttribute, &currentVersion, &currentVersionFound)
GetClsidDisplayNameOrShortName(root, wil::str_raw_ptr(clsidString), &displayName, &displayNameFound)
_collector->CreateProgIdRegistration(id.get(), &progId)
OSIntegration::DEH::PackagedComExtensionHandler::ParseProgId
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::clsidAttribute, &clsidString)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::clsidAttribute, &clsid, &clsidFound)
treatAs.query_to(&registryCompatibility)
treatAs->SetAutoConvertTo(autoConvertToGuid)
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::idAttribute, &id)
treatAs.query_to(&scope)
childNodes->get_length(&listLength)
OSIntegration::DEH::PackagedComExtensionHandler::ParsePerArchitectureDllPaths
node.query_to(&dllElement)
childNodes->get_item(nodeIndex, &node)
proxyStub.query_to(&registryCompatibility)
proxyStub->SetPath_arm64(dllPaths.Path_arm64.get())
root->get_childNodes(&childNodes)
proxyStub.query_to(&scope)
proxyStub->SetPath_x86(dllPaths.Path_x86.get())
ParsePerArchitectureDllPaths(root, Internal::PackagedComConstants::proxyStubDllElement, dllPaths, true)
proxyStub->SetPath_arm(dllPaths.Path_arm.get())
proxyStub->SetPath_x64(dllPaths.Path_x64.get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseProxyStub
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::idAttribute, &idGuid)
proxyStub->SetDisplayName(displayName.get())
_collector->CreateProxyStubRegistration(idGuid, &proxyStub)
_collector->CreateInterfaceRegistration(idGuid, &interfaceReg)
OSIntegration::DEH::PackagedComExtensionHandler::ParseInterface
interfaceReg->SetUniversalMarshaler(useUniversalMarshaler)
ParseAndRetrieveBool(root, Internal::PackagedComConstants::useUniversalMarshalerAttribute, &useUniversalMarshaler, &useUniversalMarshalerFound)
CoGetModuleArchitecture( absolutePathUnspecifiedArchitecture.get(), &moduleArchitecture)
PathAllocCombine(_sourcePackage->GetPackageRoot(), wil::str_raw_ptr(relativePathUnspecifiedArchitecture), PATHCCH_ALLOW_LONG_PATHS, &absolutePathUnspecifiedArchitecture)
OSIntegration::DEH::PackagedComExtensionHandler::GetSupportedArchitecturesBasedOnDllPaths
!hasAnyPerArchitecturePaths && !pathFound
dllPaths.Path_arm
dllPaths.Path_x64
ParseAndRetrievePath(root, Internal::PackagedComConstants::pathAttribute, &relativePathUnspecifiedArchitecture, &pathFound)
dllPaths.Path_arm64
ParseAndRetrieveAttribute(dllElement.get(), Internal::PackagedComConstants::processorArchitectureAttribute, architecture.GetAddressOf())
dllElement->get_baseName(&elementName)
dllPaths.Path_x86
ParseAndRetrievePath(dllElement.get(), Internal::PackagedComConstants::pathAttribute, &pathForArchitecture)
ParseAndRetrieveGuid(typeLib.get(), Internal::PackagedComConstants::idAttribute, &typeLibIdGuid)
node.query_to(&typeLib)
VerifyInterfaceTypeLib(typeLib.get(), wil::str_raw_ptr(versionNumber))
ParseAndRetrieveAttribute(typeLib.get(), Internal::PackagedComConstants::versionNumberAttribute, &versionNumber, &versionNumberFound)
interfaceReg->SetSynchronousInterface(synchronousInterfaceGuid)
VerifyInterface(root, false )
root->get_firstChild(&node)
root->hasChildNodes(&hasTypeLibElement)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::synchronousInterfaceAttribute, &synchronousInterfaceGuid, &synchronousFound)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::asynchronousInterfaceAttribute, &asynchronousInterfaceGuid, &asynchronousFound)
interfaceReg->SetAsynchronousInterface(asynchronousInterfaceGuid)
VerifyInterface(root, true )
ParseAndRetrieveAttribute(root, Internal::PackagedComConstants::proxyStubClsidAttribute, &proxyStubClsidString)
ParseAndRetrieveGuid(root, Internal::PackagedComConstants::proxyStubClsidAttribute, &proxyStubClsid, &proxyStubFound)
interfaceReg->SetProxyStubClsidWithSupportedArchitectures(proxyStubClsid, supportedArchitectures)
GetProxyStubSupportedArchitectures(root, wil::str_raw_ptr(proxyStubClsidString), &supportedArchitectures)
E_FAIL
((HRESULT)0x80004005L)
ParseAndRetrieveAttribute(version.get(), Internal::PackagedComConstants::libraryFlagAttribute, &libraryFlag, &libraryFlagFound)
typeLib->SetLocaleId(locale)
ParseAndRetrieveAttribute(version.get(), Internal::PackagedComConstants::versionNumberAttribute, &versionNumber)
node.query_to(&version)
ParseAndRetrieveAttribute(version.get(), Internal::PackagedComConstants::localeIdAttribute, &localeId, &localeIdFound)
_collector->CreateTypeLibRegistration(idGuid, versionNumber.get(), &typeLib)
OSIntegration::DEH::PackagedComExtensionHandler::ParseTypeLib
root->get_childNodes(&versionNodes)
versionNodes->get_item(nodeIndex, &node)
versionNodes->get_length(&listLength)
interfaceReg->SetTypeLib(typeLibIdGuid, nullptr)
interfaceReg->SetTypeLib(typeLibIdGuid, versionNumber.get())
interfaceReg.query_to(&scope)
interfaceReg.query_to(&registryCompatibility)
::WindowsConcatString(temp.get(), resourceId.get(), &path)
::WindowsConcatString(path.get(), separator.Get(), &temp)
typeLib->SetWin64Path(path.get())
typeLib->SetWin32Path(path.get())
winElement->get_baseName(&bstrNodeName)
versionNode.query_to(&winElement)
ParseAndRetrieveAttribute(winElement.get(), Internal::PackagedComConstants::resourceIdAttribute, &resourceId, &resourceIdFound)
ParseAndRetrievePath(winElement.get(), Internal::PackagedComConstants::pathAttribute, &path)
version->get_childNodes(&winNodes)
typeLib->SetDisplayName(displayName.get())
winNodes->get_item(winIndex, &versionNode)
winNodes->get_length(&winLength)
ParseAndRetrievePath(version.get(), Internal::PackagedComConstants::helpDirectoryAttribute, &helpDirectory, &helpDirectoryFound)
typeLib->SetFlags(flags)
ParseAndRetrieveLocalizableAttribute(version.get(), Internal::PackagedComConstants::displayNameAttribute, &displayName, &displayNameFound)
typeLib->SetHelpDirectory(helpDirectory.get())
conversionNodes->get_item(nodeIndex, &node)
Vector<HSTRING>::Make(&conversionValues)
ParseConversionFormats(conversionFormat.Get(), conversionValues.Get())
node.As(&conversionFormat)
root->get_childNodes(&conversionNodes)
classReg->AddImplementedCategory(implementedCategoryId)
conversionNodes->get_length(&listLength)
OSIntegration::DEH::PackagedComExtensionHandler::ParseConversion
implementedCategories->get_item(nodeIndex, &node)
implementedCategories->get_length(&listLength)
ParseAndRetrieveGuid( implementedCategory.Get(), Internal::PackagedComConstants::idAttribute, &implementedCategoryId)
node.As(&implementedCategory)
typeLib.query_to(&scope)
typeLib.query_to(&registryCompatibility)
OSIntegration::DEH::PackagedComExtensionHandler::ParseImplementedCategories
root->get_childNodes(&implementedCategories)
OSIntegration::DEH::PackagedComExtensionHandler::ParseDataFormats
(HashMap<HSTRING, IInspectable*>::Make(&dataFormatUnique))
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::defaultStandardFormatAttribute, defaulStandardFormat.GetAddressOf(), &defaulStandardFormatFound)
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::defaultFormatNameAttribute, defaultFormatName.GetAddressOf(), &defaultFormatNameFound)
ParseAndRetrieveAttribute( format.Get(), Internal::PackagedComConstants::standardFormatAttribute, standardFormat.GetAddressOf(), &standardFormatFound)
ParseAndRetrieveAttribute( format.Get(), Internal::PackagedComConstants::formatNameAttribute, formatName.GetAddressOf(), &formatNameFound)
formatsValues->Append(standardFormat.Get())
formatsValues->Append(formatName.Get())
formatsNodes->get_length(&listLength)
OSIntegration::DEH::PackagedComExtensionHandler::ParseConversionFormats
node.As(&format)
formatsNodes->get_item(nodeIndex, &node)
classReg->SetConversionReadable(conversion.Get())
GetCommaSeparatedValue(conversionValues.Get(), conversion.GetAddressOf())
root->get_childNodes(&formatsNodes)
classReg->SetConversionReadWritable(conversion.Get())
ParseAndRetrieveAttribute( dataFormatElement.Get(), Internal::PackagedComConstants::mediumFlagAttribute, mediumFlag.GetAddressOf())
dataFormatValues->Append(aspectFlag.Get())
ParseAndRetrieveAttribute( dataFormatElement.Get(), Internal::PackagedComConstants::directionAttribute, direction.GetAddressOf())
dataFormatValues->Append(mediumFlag.Get())
dataFormatValues->Append(formatName.Get())
ParseAndRetrieveAttribute( dataFormatElement.Get(), Internal::PackagedComConstants::standardFormatAttribute, standardFormat.GetAddressOf(), &standardFormatFound)
ParseAndRetrieveAttribute( dataFormatElement.Get(), Internal::PackagedComConstants::aspectFlagAttribute, aspectFlag.GetAddressOf())
dataFormatValues->Append(standardFormat.Get())
Vector<HSTRING>::Make(&dataFormatValues)
dataFormats->get_item(nodeIndex, &node)
ParseAndRetrieveAttribute( dataFormatElement.Get(), Internal::PackagedComConstants::formatNameAttribute, formatName.GetAddressOf(), &formatNameFound)
node.As(&dataFormatElement)
classReg->SetDefaultFormatName(defaulStandardFormat.Get())
classReg->SetDefaultFormatName(defaultFormatName.Get())
dataFormats->get_length(&listLength)
root->get_childNodes(&dataFormats)
ParseAndRetrieveAttribute( verbElement.Get(), Internal::PackagedComConstants::appendMenuFlagAttribute, appendMenuFlag.GetAddressOf())
verbValues->Append(displayName.Get())
ParseAndRetrieveAttribute( verbElement.Get(), Internal::PackagedComConstants::oleVerbFlagAttribute, oleVerbFlag.GetAddressOf())
verbValues->Append(appendMenuFlag.Get())
node.As(&verbElement)
Vector<HSTRING>::Make(&verbValues)
ParseAndRetrieveLocalizableAttribute( verbElement.Get(), Internal::PackagedComConstants::displayNameAttribute, displayName.GetAddressOf())
ParseAndRetrieveAttribute( verbElement.Get(), Internal::PackagedComConstants::idAttribute, id.GetAddressOf())
OSIntegration::DEH::PackagedComExtensionHandler::ParseVerbs
root->get_childNodes(&verbs)
verbs->get_item(nodeIndex, &node)
verbs->get_length(&listLength)
dataFormatValues->Append(directionValue.Get())
MapEnumStringToHstringValue( Internal::PackagedComConstants::directionMap, ARRAYSIZE(Internal::PackagedComConstants::directionMap), direction.GetRawBuffer(nullptr), directionValue.GetAddressOf())
classReg->AddDataFormat(dataFormat.Get())
GetCommaSeparatedValue(dataFormatValues.Get(), dataFormat.GetAddressOf())
classReg->AddMiscStatusAspect(aspectTypeValue.Get(), aspectOleMiscFlag.Get())
ParseAndRetrieveAttribute( aspect.Get(), Internal::PackagedComConstants::oleMiscFlagAttribute, aspectOleMiscFlag.GetAddressOf())
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrieveAttribute
GetAttributeValueStringFromElement(element, attribute, buffer, &attributeFound)
node.As(&aspect)
aspects->get_item(nodeIndex, &node)
MapEnumStringToHstringValue( Internal::PackagedComConstants::aspectMap, ARRAYSIZE(Internal::PackagedComConstants::aspectMap), aspectType.GetRawBuffer(nullptr), aspectTypeValue.GetAddressOf())
ParseAndRetrieveAttribute( aspect.Get(), Internal::PackagedComConstants::typeAttribute, aspectType.GetAddressOf())
classReg->SetMiscStatusDefault(oleMiscFlag.Get())
OSIntegration::DEH::PackagedComExtensionHandler::ParseMiscStatus
aspects->get_length(&listLength)
root->get_childNodes(&aspects)
GetCommaSeparatedValue(verbValues.Get(), verb.GetAddressOf())
verbValues->Append(oleVerbFlag.Get())
ParseAndRetrieveAttribute( root, Internal::PackagedComConstants::oleMiscFlagAttribute, oleMiscFlag.GetAddressOf())
classReg->AddVerb(id.Get(), verb.Get())
tempRelativePath.Set(buffer.GetChars(), buffer.GetLength())
buffer.GetChars() == nullptr
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrieveApplicationIdAndDisplayName
GetXMLElementFromQuery( Internal::PackagedComConstants::ancestorApplicationXPath, element, &applicationElement)
IIDFromString(buffer.GetChars(), guid)
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrievePath
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrieveBool
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrieveLocalizableAttribute
Tools::GetLocalizedStringAttributeValueStringFromElement( _sourcePackage, node, attribute, &buffer, &attributeFound)
OSIntegration::DEH::PackagedComExtensionHandler::ParseAndRetrieveGuid
GetAttributeValueGuidStringFromElement(element, attribute, buffer, &attributeFound)
valueFound
::WindowsCreateString(buffer.GetChars(), buffer.GetLength(), result)
wil::make_hstring_from_buffer_nothrow(wistd::move(stringBuffer), result)
ForEachString(strings, [&](HSTRING current) -> HRESULT { UINT32 sourceLength = 0; LPCWSTR sourceCharacters = WindowsGetStringRawBuffer(current, &sourceLength); while (sourceLength--) { *(collectedCharacters++) = *(sourceCharacters++); } valuesCopiedCount++; if (valuesCopiedCount < valuesCount) { *(collectedCharacters++) = ','; } return S_OK; })
OSIntegration::DEH::PackagedComExtensionHandler::VerifyClassProgId
ParseAndRetrieveAttribute( element, Internal::PackagedComConstants::idAttribute, classId.GetAddressOf())
OSIntegration::DEH::PackagedComExtensionHandler::GetCommaSeparatedValue
strings->get_Size(&valuesCount)
WindowsPreallocateStringBuffer(valuesCharacterCount + valuesCount - 1, &collectedCharacters, &stringBuffer)
ForEachString(strings, [&](HSTRING current) -> HRESULT { return UInt32Add(valuesCharacterCount, WindowsGetStringLen(current), &valuesCharacterCount); })
OSIntegration::DEH::PackagedComExtensionHandler::MapEnumStringToHstringValue
MapEnumString(map, mapLength, enumString, &enumValue)
::WindowsCreateString(enumValue, static_cast<UINT32>(wcslen(enumValue)), stringEnumValueAsHstring)
::WindowsCreateString(temp, static_cast<UINT32>(wcslen(temp)), dwordEnumValueAsHstring)
Tools::GetLocalizedStringAttributeValueStringFromQuery( _sourcePackage, Internal::PackagedComConstants::applicationVisualElementsChildXPath, applicationElement.Get(), Internal::PackagedComConstants::displayNameAttribute, &displayNameBuffer, &displayNameAttributeFound)
GetAttributeValueStringFromElement( applicationElement.Get(), Internal::PackagedComConstants::idAttribute, idBuffer, &idAttributeFound)
tempApplicationDisplayName.Set( displayNameBuffer.GetChars(), displayNameBuffer.GetLength())
tempApplicationId.Set( idBuffer.GetChars(), idBuffer.GetLength())
ParseAndRetrieveAttribute( element, attributeHelper, interfaceToBeVerified.GetAddressOf())
OSIntegration::DEH::PackagedComExtensionHandler::VerifyInterface
StringCchPrintf( xpath.get(), cchxpath, Internal::PackagedComConstants::interfaceFormat, interfaceToBeVerified.GetRawBuffer(nullptr), formatHelper, interfaceId.GetRawBuffer(nullptr), proxyStub.GetRawBuffer(nullptr))
ParseAndRetrieveAttribute( element, Internal::PackagedComConstants::proxyStubClsidAttribute, proxyStub.GetAddressOf())
GetXMLElementFromQuery(xpath.get(), element, &proxyStubObtained)
StringCchPrintf(xpath.get(), cchxpath, Internal::PackagedComConstants::proxyStubWithIdFormat, proxyStubClsid)
ParseAndRetrieveAttribute( element, Internal::PackagedComConstants::idAttribute, interfaceId.GetAddressOf())
GetSupportedArchitecturesBasedOnDllPaths(proxyStubObtained.get(), Internal::PackagedComConstants::proxyStubDllElement, supportedArchitectures)
StringCchPrintf( xpath.get(), cchxpath, Internal::PackagedComConstants::typeLibWithVersionNumberFormat, typeLibId.GetRawBuffer(nullptr), versionNumber)
OSIntegration::DEH::PackagedComExtensionHandler::VerifyInterfaceTypeLib
OSIntegration::DEH::PackagedComExtensionHandler::GetProxyStubSupportedArchitectures
GetXMLElementFromQuery(xpath.get(), element, &typeLib)
StringCchPrintf( xpath.get(), cchxpath, Internal::PackagedComConstants::progIdWithClsidAndIdFormat, classId.GetRawBuffer(nullptr), classProgId)
xpath
ParseAndRetrieveAttribute( element, Internal::PackagedComConstants::idAttribute, typeLibId.GetAddressOf())
GetXMLElementFromQuery(xpath.get(), element, &progId)
GetXMLElementFromQuery(xpath.get(), previousProgId, &progId)
StringCchPrintf( xpath.get(), cchxpath, Internal::PackagedComConstants::progIdWithIdFormat, ::WindowsGetStringRawBuffer(currentVersion, nullptr))
ParseAndRetrieveAttribute( progId.Get(), Internal::PackagedComConstants::currentVersionAttribute, currentVersionProgId.GetAddressOf(), &currentVersionFound)
ParseAndRetrieveAttribute( progId.Get(), Internal::PackagedComConstants::clsidAttribute, clsidProgId.GetAddressOf(), &clsidFound)
ParseAndRetrieveAttribute( classElementToCompare.Get(), Internal::PackagedComConstants::versionIndependentProgIdAttribute, versionIndependentProgIdToCompare.GetAddressOf(), &versionIndependentProgIdToCompareFound)
FindReferencedClassElementById(progId, progIdClsid.GetRawBuffer(nullptr), &classElementToCompare)
OSIntegration::DEH::PackagedComExtensionHandler::FollowProgIdChain
_progIdHelperList->Insert(currentVersion, nullptr, &replaced)
VerifyVersionIndependentProgIdHelper( progId.Get(), currentVersion.Get(), classId.Get(), versionIndependentProgId)
_progIdHelperList->Insert(versionIndependentProgId, nullptr, &replaced)
OSIntegration::DEH::PackagedComExtensionHandler::VerifyVersionIndependentProgIdHelper
FollowProgIdChain( progId, currentVersion, progIdClsid.GetAddressOf())
OSIntegration::DEH::PackagedComExtensionHandler::VerifyVersionIndependentProgId
GetXMLElementFromQuery(xpath.get(), element, &interfaceObtained)
ParseAndRetrieveAttribute( progId.Get(), Internal::PackagedComConstants::currentVersionAttribute, currentVersion.GetAddressOf(), &currentVersionFound)
StringCchPrintf( xpath.get(), cchxpath, Internal::PackagedComConstants::progIdWithIdFormat, ::WindowsGetStringRawBuffer(versionIndependentProgId, nullptr))
OSIntegration::DEH::PackagedComExtensionHandler::FindReferencedClassElementForClassReference
ParseAndRetrieveAttribute(classReferenceElement, Internal::PackagedComConstants::idAttribute, &id)
treatAsClassXPath
FindReferencedClassElementById(classReferenceElement, wil::str_raw_ptr(id), referencedClassElement)
OSIntegration::DEH::PackagedComExtensionHandler::FindReferencedClassElementById
classXPath
GetXMLElementFromQuery(classXPath.get(), referencingElement, referencedClassElement)
StringCchPrintf(classXPath.get(), cchClassXPath, Internal::PackagedComConstants::classWithIdFormat, clsid)
treatAsList->Insert(currentTreatAsValue.Get(), nullptr, &replaced)
(HashMap<HSTRING, IInspectable*>::Make(&treatAsList))
nextTreatAsClassElement
FindTreatAsClassElementById(currentTreatAsClassElement.get(), currentTreatAsValue.GetRawBuffer(nullptr), &nextTreatAsClassElement)
OSIntegration::DEH::PackagedComExtensionHandler::VerifyTreatAsChain
ParseAndRetrieveAttribute( currentTreatAsClassElement.get(), Internal::PackagedComConstants::treatAsAttribute, currentTreatAsValue.GetAddressOf())
WindowsDuplicateString(currentTreatAsValue.Get(), terminalClsid)
FindReferencedClassElementById(treatAsClassElement, currentTreatAsValue.GetRawBuffer(nullptr), &nextClassElement)
GetSupportedArchitecturesBasedOnDllPaths(inProcessServerElement.get(), Internal::PackagedComConstants::inProcessServerDllElement, &supportedArchitecturesForInprocServer)
inProcessServerNode.query_to(&inProcessServerElement)
StringCchPrintf(managedInProcessServerClassXPath.get(), cchManagedInProcessServerClassXPath, Internal::PackagedComConstants::managedInProcessServerClassWithIdFormat, clsid)
managedInProcessServerClassXPath
GetXMLElementFromQuery(inProcessServerClassXPath.get(), root, &inProcessServerClassElement)
StringCchPrintf(inProcessServerClassXPath.get(), cchInProcessServerClassXPath, Internal::PackagedComConstants::inProcessServerClassWithIdFormat, clsid)
!inProcessServerNode
inProcessServerClassElement->get_parentNode(&inProcessServerNode)
StringCchPrintf(outofprocClassXPath.get(), cchOutofprocClassXPath, Internal::PackagedComConstants::outofprocClassWithIdFormat, clsid)
OSIntegration::DEH::PackagedComExtensionHandler::GetArchitecturesSupportedForActivationByClsid
inProcessServerClassXPath
GetXMLElementFromQuery(outofprocClassXPath.get(), root, &outofprocClassElement)
StringCchPrintf(treatAsClassXPath.get(), cchTreatAsClassXPath, Internal::PackagedComConstants::treatAsClassWithIdFormat, clsid)
OSIntegration::DEH::PackagedComExtensionHandler::FindTreatAsClassElementById
outofprocClassXPath
GetXMLElementFromQuery(treatAsClassXPath.get(), root, treatAsClassElement)
FindTerminalClassElement(root, clsid, &terminalClassElement)
VerifyTreatAsChain(initialTreatAsElement.get(), nullptr , terminalClassElement)
ParseAndRetrieveBool(terminalClassElement.get(), Internal::PackagedComConstants::insertableObjectAttribute, &insertableObject, &insertableObjectFound)
OSIntegration::DEH::PackagedComExtensionHandler::GetClsidIsInsertableObject
FindReferencedClassElementById(root, clsid, terminalClassElement)
(supportedArchitecturesForInprocServer == SupportedArchitectureFlags{}) && (supportedArchitecturesForInprocHandler == SupportedArchitectureFlags{})
FindTreatAsClassElementById(root, clsid, &initialTreatAsElement)
OSIntegration::DEH::PackagedComExtensionHandler::FindTerminalClassElement
!inProcessHandlerNode
inProcessHandlerClassElement->get_parentNode(&inProcessHandlerNode)
GetSupportedArchitecturesBasedOnDllPaths(inProcessHandlerElement.get(), Internal::PackagedComConstants::inProcessHandlerDllElement, &supportedArchitecturesForInprocHandler)
inProcessHandlerNode.query_to(&inProcessHandlerElement)
inProcessHandlerClassXPath
GetXMLElementFromQuery(managedInProcessServerClassXPath.get(), root, &managedInProcessServerClassElement)
GetXMLElementFromQuery(inProcessHandlerClassXPath.get(), root, &inProcessHandlerClassElement)
StringCchPrintf(inProcessHandlerClassXPath.get(), cchInProcessHandlerClassXPath, Internal::PackagedComConstants::inProcessHandlerClassWithIdFormat, clsid)
OSIntegration::DEH::CreatePackagedComExtensionHandler
OSIntegration::DEH::PackagedComExtensionHandler::EnforceCompatModeRestrictionsOnIncomingPackage
ParseAndRetrieveLocalizableAttribute(terminalClassElement.get(), Internal::PackagedComConstants::displayNameAttribute, displayName, displayNameFound)
OSIntegration::DEH::PackagedComExtensionHandler::GetClsidDisplayNameOrShortName
MsixAppCompatSupport::GetExtensionCompatMode( const_cast<IXMLDOMElement*>(incomingExtensionElements[extensionIndex]), &compatMode)
ParseAndRetrieveLocalizableAttribute(terminalClassElement.get(), Internal::PackagedComConstants::shortDisplayNameAttribute, displayName, displayNameFound)
operation(spItem.Get())
spIterator->get_Current(spItem.GetAddressOf())
spIterator->MoveNext(&bHasCurrent)
OSIntegration::DEH::PackagedComExtensionHandler::ForEachString
pVector->QueryInterface(IID_PPV_ARGS(&spIterable))
spIterator->get_HasCurrent(&bHasCurrent)
spIterable->First(&spIterator)
onecore\admin\appmodel\OSIM\src\deh\appx\Common\EnumStringMapping.hpp
OSIntegration::DEH::MapEnumString
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
]|pIX
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
Windows.Foundation.Collections.IMapView`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, Object>
wil::make_unique_string_nothrow
!source && (length == static_cast<size_t>(-1))
WCOSAdapterApp.App
Windows.WCOSAdapterApp
%windir%\system32\windowscoreadapterapp.exe
onecore\admin\appmodel\osim\src\deh\wcosadapterapp\wcosadapterappextensionhandler.cpp
onecore\admin\appmodel\osim\src\deh\uex\printsupportextension\printsupportextensionhelper.cpp
SYSTEM\CurrentControlSet\Control\Print\PSA\ExtensionAumids\
onecore\admin\appmodel\osim\src\deh\uex\printsupportworkflow\printsupportworkflowhelper.cpp
onecore\admin\appmodel\osim\src\deh\appx\callcontrol\callcontrolhelper.cpp
g:%I64u
https://insiderportal.microsoft.com/api/
MBI_SSL
1.3.6.1.4.1.311.10.3.70
1.3.6.1.4.1.311.76.3.1
1.3.6.1.4.1.311.10.3.6
InternalDevUnlock
SOFTWARE\Microsoft\SecurityManager
MicrosoftWindows.
cw5n1h2txyewy
%Y-%m-%dT%H:%M:%SZ
onecore\admin\appmodel\osim\src\deh\appx\packagemachinecompliance\packagemachinecompliance.cpp
Microsoft Enhanced RSA and AES Cryptographic Provider
Expiration
UserSid
Authorization
DeviceID
Microsoft\Windows\X509Enrollment\FS.token
FSRing
SOFTWARE\Microsoft\WindowsSelfHost\Applicability
Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest
Windows.Security.Authentication.OnlineId.OnlineIdSystemAuthenticator
onecore\internal\sdk\inc\wil\opensource\wil\winrt.h
bad cast
Microsoft.Windows.Search_cw5n1h2txyewy
Microsoft.Windows.Cortana_cw5n1h2txyewy
kinectFace
kinectVision
kinectAudio
kinectGamechat
microphone
webcam
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability' and @Name='%s']
onecore\admin\appmodel\osim\src\deh\appx\firewall\firewallhandler.cpp
MicrosoftWindows.UndockedDevKit_cw5n1h2txyewy
MicrosoftWindows.Client_cw5n1h2txyewy
MicrosoftWindows.Client.Internal_cw5n1h2txyewy
MicrosoftWindows.Client.Core_cw5n1h2txyewy
MicrosoftWindows.Client.CBS_cw5n1h2txyewy
Microsoft.Windows.StartMenuExperienceHost_cw5n1h2txyewy
Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy
microsoft.windows.fontdrvhost
S-1-15-3-3845273463-1331427702-1186551195-1148109977
S-1-15-3-787448254-1207972858-3558633622-1059886964
contentRestrictions
kinectRequired
kinectExpressions
bluetooth
audio
timer
systemEvent
startup
rfcommConnection
pushNotification
phoneCall
mediaProcessing
location
general
gattCharacteristicNotification
deviceUse
deviceServicing
deviceConnectionChange
controlChannel
chatMessageNotification
onecoreuap\base\background\bi\backgroundtaskdehhelper\backgroundtaskdehhelper.cpp
vpnClient
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
<null>
sqlite3_step
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
<no-error-message>
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
ExeServerRegistration
%s.%s%s
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
StateRepository.log
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
Checkpoint
onecore\base\appmodel\StateRepository\DataAccessLayer\Database.hpp
:memory:
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
StateRepositoryStatus
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
%AppRepository%\StateRepository-User-%UserSid%.srd
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
%AppRepository%\StateRepository-Machine.srd
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule-custom.cpp
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0 ORDER BY "Index";
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY "Index";
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
ApplicationContentUriRule
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
Application
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application-custom.cpp
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0  AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
onecore\base\appmodel\StateRepository\DataAccessLayer\MultiUser.hpp
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
Package
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
Activation
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
ApplicationProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND Name=? AND _WorkId=0;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
PackageExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
Dependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DependentPackage
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
PackageFamily
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AppInstaller)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AutoUpdatePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageDependency)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3);
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
Package rows w/no PackageUser references
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 1, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin=2;
(Inbox) Package rows w/no PackageUser references
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin<>2;
(Non-Inbox) Package rows w/no PackageUser references
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
TargetDeviceFamily
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
SourceBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
SELECT SupportedUsers FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT SupportedUsers FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?2) 
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN AppExecutionAlias AS aea ON aea.Extension=ae._ApplicationExtensionID LEFT JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId LEFT JOIN AppExecutionAliasUser AS aeau ON aeau.ApplicationIdentity=ai._ApplicationIdentityID AND aeau.Alias=aea.Alias WHERE u.UserSid=?1 AND aea.Alias=?2 AND p.PackageFullName<>?3 AND IFNULL(aeau.Status, 0)<>2 AND p._WorkId=0 AND pu._WorkID=0 AND a._WorkID=0 AND ae._WorkID=0 AND aea._WorkId=0 ORDER BY IFNULL(aeau.Status, 0) DESC, pu.InstallTime;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID INNER JOIN AppExecutionAlias AS aea ON aea.Extension=ae._ApplicationExtensionID LEFT JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId LEFT JOIN AppExecutionAliasUser AS aeau ON aeau.ApplicationIdentity=ai._ApplicationIdentityID AND aeau.Alias=aea.Alias WHERE u.UserSid=?1 AND aea.Alias=?2 AND p.PackageFullName<>?3 AND IFNULL(aeau.Status, 0)<>2 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkID=0 OR pu._WorkId=?4) AND (a._WorkID=0 OR a._WorkId=?4) AND (ae._WorkID=0 OR ae._WorkId=?4) AND (aea._WorkID=0 OR aea._WorkId=?4) ORDER BY IFNULL(aeau.Status, 0) DESC, pu.InstallTime;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND p._WorkId=0 
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=?3 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=0 AND p._WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
Enterprise
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) INNER JOIN Package AS p ON p._PackageID=dg.DependentPackage WHERE dg.User=?1 AND p.PackageFullName=?2 AND dg._WorkId=0 AND pel._WorkId=0 AND p._WorkId=0 LIMIT 1);
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) INNER JOIN Package AS p ON p._PackageID=dg.DependentPackage WHERE dg.User=?1 AND p.PackageFullName=?2 AND (dg._WorkId=0 OR dg._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
DependencyGraph
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SupplierPackage
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
SELECT _UserID FROM User WHERE UserSid=?;
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM ApplicationUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageDependency)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRHistory)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM SharedPackageContainer)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
SELECT EXISTS(SELECT 1 FROM User WHERE UserSid=? LIMIT 1);
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource-custom.cpp
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE Package=? AND _WorkId=0 ORDER BY "Index";
SELECT _ResourceID, _Revision, _WorkId, Package, "Index", Language, _Dictionary FROM Resource WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY "Index";
Resource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
PackageUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
PackageExternalLocation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime-custom.cpp
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND _WorkId=0) AND hr._WorkId=0 AND pe._WorkId=0 AND dg._WorkId=0;
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND (_WorkId=0 OR _WorkId=?4)) AND (hr._WorkId=0 OR hr._WorkId=?4) AND (pe._WorkId=0 OR pe._WorkId=?4) AND (dg._WorkId=0 OR dg._WorkId=?4);
HostRuntime
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
[sqlite3_close] #%u Database %p: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
MEMORY
temp_store
ATTACH DATABASE '%s' AS '%s';
DETACH DATABASE '%s';
IsInAutoCommitMode() called but !db.IsOpen()
PRAGMA %s=%s;
PRAGMA %s=%I64d;
GetChanges() called but !db.IsOpen()
GetTotalChanges() called but !db.IsOpen()
GetLastInsertRowID() called but !db.IsOpen()
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> COMMIT;
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> ROLLBACK;
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
journal_mode
journal_size_limit
locking_mode
synchronous
PRAGMA %s;
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
cannot start a transaction within a transaction
DELETE
TRUNCATE
PERSIST
NORMAL
EXCLUSIVE
EXTRA
cache_size
ANALYZE;
(database)
PRAGMA optimize;
EndsWith(*string*,suffix) error: Invalid type (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
Compress(x[,level]) error: Invalid type for level (%d)
Compress(x[,level]) error: Invalid level (%d)
Hasher.Start() failed
Hasher.Update(integer) failed
hash_base32() doesn't support double (%d)
Hasher.Update(text) failed
Unknown SQLite datatype %d
Hasher.GetDigestAsBase32(text) failed
Log(*error*,message) error: Invalid type for error (%d)
Log(error,*message*) error: Invalid type for message (%d)
[pre-sqlite3_prepare] #%u Database %p : SQL %s
sqlite3_prepare_v2
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
changeid_next_value
execution_flags
is_triggers_enabled
is_srjournal_enabled
sroptions
workid
startswith
endswith
compress
uncompress
hash_base32
gchangeid_next_value() failed
StartsWith(*string*,prefix) error: Invalid type (%d)
StartsWith(string,*prefix*) error: Invalid type (%d)
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
sqlite3_exec
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
Analyze
UpdateStatistics
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
ApplicationExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM ApplicationUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
ApplicationIdentity
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
SELECT _ApplicationIdentityID, _Revision, ApplicationUserModelId, _Dictionary FROM ApplicationIdentity WHERE ApplicationUserModelId=?;
AppExecutionAliasUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT _AppExecutionAliasUserID, _Revision, User, ApplicationIdentity, Alias, Status, _Dictionary FROM AppExecutionAliasUser WHERE ApplicationIdentity=? AND User=? AND Alias=?;
INSERT INTO AppExecutionAliasUser (_Revision, User, ApplicationIdentity, Alias, Status, _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE aea.Alias=?2 AND pu.User=?1 AND (aea._WorkId=0 OR aea._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID LEFT JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId LEFT JOIN AppExecutionAliasUser AS aeau ON aeau.ApplicationIdentity=ai._ApplicationIdentityID AND aeau.Alias=aea.Alias WHERE aea.Alias=?2 AND pu.User=?1 AND IFNULL(aeau.Status, 0)<>2 AND aea._WorkId=0 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 ORDER BY IFNULL(aeau.Status, 0), pu.InstallTime;
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID LEFT JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId LEFT JOIN AppExecutionAliasUser AS aeau ON aeau.ApplicationIdentity=ai._ApplicationIdentityID AND aeau.Alias=aea.Alias WHERE aea.Alias=?2 AND pu.User=?1 AND IFNULL(aeau.Status, 0)<>2 AND (aea._WorkId=0 OR aea._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) ORDER BY IFNULL(aeau.Status, 0), pu.InstallTime;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias-custom.cpp
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE aea.Alias=?2 AND pu.User=?1 AND aea._WorkId=0 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT _AppExecutionAliasID, _Revision, _WorkId, Alias, Extension, Flags, _Dictionary FROM AppExecutionAlias WHERE Alias=? AND Extension=? AND _WorkId=0;
SELECT _AppExecutionAliasID, _Revision, _WorkId, Alias, Extension, Flags, _Dictionary FROM AppExecutionAlias WHERE Alias=? AND Extension=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
AppExecutionAlias
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Extension
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
Cpu:%d%s Mem:%d%s Io:%d%s
Cpu:%d%s Mem:%d%s Io:%d%s
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND a.ApplicationUserModelId=?3 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND a.ApplicationUserModelId=?3 AND (ae._WorkId=0 OR ae._WorkId=?4) AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryreader.cpp
RepairGhostMinimumAgeForDeletion
MachineDatabasePageSize
DownlevelMachineDatabaseCheckpointThreshold
MaintenanceMaxClockDelta
Policy.Normal.StatementMinCount
DatabaseStatisticsUpdateInterval
Policy.Aggressive.ConnectionMinCount
DatabaseCorruptionFirstDetectedWhen
WaitForRequestsInUseTimeout
Policy.Normal.ConnectionMaxCount
UserDatabaseStatisticsLastUpdated
MachineDatabaseJournalSizeLimit
DownlevelMachineDatabase
CheckpointInterval
DownlevelMachineDatabaseCacheSize
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseOptions
Policy.Normal.ConnectionMinCount
Policy.Aggressive.GCInterval
PackageRepositoryRoot
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Deployment
DatabaseCorruptionLastReported
MachineDatabaseOptions
MachineDatabaseFileChunkSize
%AppRepository%
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseCacheSize
Policy.Aggressive.ConnectionMaxAge
Machine
AccessControlFlags
DownlevelMachineDatabaseFileChunkSize
BusyMaxTimeout
DeploymentDatabaseStatisticsLastUpdated
Policy.Aggressive.StatementMaxAge
DownlevelMachineDatabaseStatisticsLastUpdated
MachineDatabaseStatisticsLastUpdated
Policy.Normal.StatementMaxCount
ServiceWaitHintInterval
Policy.Normal.StatementMaxAge
DownlevelMachineDatabaseOptions
CheckpointMaxClockDelta
ServiceIdleTimeout
Policy.Normal.GCInterval
DownlevelMachineDatabaseJournalSizeLimit
DatabaseCorruptionFirstDetectedUptime
DeploymentDatabase
DeploymentDatabaseCheckpointThreshold
DownlevelMachineDatabasePageSize
MachineDatabase
Policy.Aggressive.StatementMaxCount
DatabaseStatisticsUpdateMaxClockDelta
DeploymentDatabaseFileChunkSize
GCChangelogsInterval
DownlevelMachineDatabaseAutoCheckpoint
MachineDatabaseCacheSize
BusyTimeout
MaintenanceInterval
MachineDatabaseCheckpointThreshold
Policy.Aggressive.StatementMinCount
Policy.Aggressive.ConnectionMaxCount
DeploymentDatabasePageSize
MachineDatabaseAutoCheckpoint
Options
BusyDelayBetweenRetries
DatabaseStatisticsUpdateMaintenanceTaskInterval
Policy.Normal.ConnectionMaxAge
GCTimeToLiveExpiredInterval
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
Required configuration data not found: %ws
CreateSetting: Subkey=%ls
OpenSetting: Subkey=%ls
ReadSetting: Name=%ls
WriteSetting: Name=%ls
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\private\base\inc\AppModel\Common\FileInUse.hpp
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
Filename:%s, SQL:%s, TxCallerId:%hs %ls
OpenProcess() failed on %u of %u for %hs
automatic index on PackageIdByAll(_PackageID)
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.FirstBusySQL
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
ExpandedSQL=%hs
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X moving command line>
<No commandline present>
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
GetTempPath2W
Profile
Trace
Critical
Error
Warning
Information
Verbose
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
Deployment
Machine
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DefaultTile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
MrtApplication
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
PublisherCacheFolder
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
AppxExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
ApplicationUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
PackageLocation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
PackagePolicy
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
WowDependencyGraph
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
CustomInstallWork
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
BundlePackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
Bundle
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
MrtPackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
MrtSharedPri
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
NamedDependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackageProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
XboxPackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)SELECT COUNT(*), GROUP_CONCAT(t.PackageUserID) FROM BundleInfo AS t WHERE t.PackageType=8   AND NOT EXISTS(        SELECT 1 FROM Package AS p         INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID         WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8       );
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
SELECT COUNT(*), GROUP_CONCAT(pu.rowid) FROM PackageUser AS pu INNER JOIN Package AS p on p._PackageID=pu.Package WHERE p.PackageOrigin=2 AND pu.DeploymentState=6;
PackageUser rows for Inbox packages cannot be DeploymentState=Paused
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
UPDATE PackageUser SET DeploymentState=1 WHERE DeploymentState=6 AND Package IN (     SELECT _PackageID FROM Package      WHERE PackageOrigin =2);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
AppExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppExtensionHost
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppService
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppUriHandlerGroup
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
ApplicationBackgroundTask
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
FileTypeAssociation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Protocol
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppUriHandler
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryserialization.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
Clear
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
SRHistory
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
PackageIdentity
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
Partition %d not supported by GC()
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
CheckAllCascadingInDeploymentPartition
CheckAllCascadingInMachinePartition
MrtDefaultTile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
INSERT OR IGNORE INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
PostFixAllCascadingInMachinePartition
PostCheckAllCascadingInMachinePartition
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
SELECT LastValue FROM Sequence WHERE Id=?;
UPDATE Sequence SET LastValue=? WHERE Id=?;
BundleResource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
OptionalBundle
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
MainBundle
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
AppInstaller
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AppInstaller WHERE (PackageFamily = 0) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AppInstallerUri)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AutoUpdatePackage)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
PackageAppInstaller
PackageDependency
PackageFamilyPolicy
PackageFamilyUser
PackageFamilyUserResource
PackageMachineStatus
PackageSourceUri
PackageSuperceded
PackageUserStatus
PrimaryTile
PrimaryTileUser
PrimaryTileUserChangelog
ProvisionedPackage
ProvisionedPackageDeleted
ProvisionedPackageExclude
SRJournal
AppInstallerUri
AppxManifest
AutoUpdatePackage
ConnectedSet
ConnectedSetPackageFamily
ContentGroup
ContentGroupFile
DeploymentHistory
DynamicAppUriHandler
DynamicAppUriHandlerGroup
EndOfLifePackage
MigratorPatch
MrtUserPri
OptionalBundlePackage
OptionalBundleResource
SRJournalArchive
SecondaryTile
SecondaryTileUser
SecondaryTileUserChangelog
SharedPackageContainer
SharedPackageContainerPackageFamily
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagedependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainer.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
INSERT INTO PackageUserStatus (_Revision, PackageIdentity, User, Status, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainerpackagefamily.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
DELETE FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
DELETE FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,compress(?),?);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage.cpp
DELETE FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\StateRepository\Cache\Inc\SRCache-Key.hpp
onecore\base\appmodel\StateRepository\Cache\Inc\SRCache-Context.hpp
onecore\base\appmodel\StateRepository\Cache\Inc\SRCache-Entity-Package.hpp
Package\Data\
PackageFullName
Flags
Flags2
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SELECT COUNT(*), GROUP_CONCAT(pus.rowid) FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus-custom.cpp
DELETE FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
DELETE FROM PackageUserStatus AS pus WHERE User IN ( SELECT _UserID FROM User WHERE UserSid=?) AND PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?);
SELECT EXISTS(SELECT 1 FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=? LIMIT 1);
SELECT pus.Status FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=?;
UPDATE PackageUserStatus SET Status=?3 WHERE PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?2) AND User IN (SELECT _UserID FROM User WHERE UserSid=?1);
onecore\base\appmodel\StateRepository\Cache\Inc\SRCache-Manager.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\trust\trustlabelacehelpers.cpp
onecore\base\appmodel\trust\trustlabelhelpersbase.cpp
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
PackageRow was not initialized with lazy init info. Cannot query external location info.
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
invalid window size
unknown compression method
need dictionary
incorrect header check
incorrect data check
file error
stream end
data error
stream error
buffer error
insufficient memory
incompatible version
invalid stored block lengths
invalid block type
invalid bit length repeat
too many length or distance symbols
incomplete dynamic bit lengths tree
oversubscribed dynamic bit lengths tree
incomplete literal/length tree
oversubscribed literal/length tree
incomplete distance tree
oversubscribed distance tree
empty distance tree with lengths
invalid distance code
invalid literal/length code
onecore\admin\appmodel\osim\src\deh\baseclasses\mainpackagedeploymentextensionhandler.cpp
OSIntegration::DEH::Collectors::RuntimeClassInitialize
CreateActivationCatalogCollector(&activationCatalogCollector)
CreateActivationCatalogCollectorForUser(&activationCatalogCollectorForUser)
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
CreatePackagedComCatalogCollector(&packagedComCatalogCollector)
CreateExtensionCatalogCollector(&extensionCatalogCollector)
CreateRegistryCompatibilityCollector(&registryCompatibilityCollector)
CreatePackagedComCatalogCollectorForUserOrSystemRegister(userToken, &packagedComCatalogCollectorForUserOrSystemRegister)
CreateRegistryCompatibilityCollectorForUserOrSystemRegister(userToken, &registryCompatibilityCollectorForUserOrSystemRegister)
OSIntegration.DEH.Collectors
RoGetRegistrationStoreContext( m_whichPhase == WhichPhaseForDEH::OneTime ? RegistrationScope_InboxApp : RegistrationScope_PerUser, m_userToken, registrationStoreFlags, IID_PPV_ARGS(&m_registrationStoreContext))
OSIntegration.DEH.ResourcesManager
onecore\admin\appmodel\osim\src\deh\winrt\collector\resourcesmanager.cpp
OSIntegration::DEH::ResourcesManager::GetRegistrationStoreContext
CreateFileManager(&m_fileManager)
m_registrationStoreContext.copy_to(iid, ppv)
OSIntegration::DEH::ResourcesManager::GetFileManager
OSIntegration::DEH::ResourcesManager::GetRegistryCompatibilityManager
!IsCreateRegistryCompatibilityManagerPresent()
CreateRegistryCompatibilityManager(m_whichPhase == WhichPhaseForDEH::Machine, ((m_whichPhase == WhichPhaseForDEH::Machine) ? nullptr : m_userToken), &m_registryCompatibilityManager)
OSIntegration::DEH::ResourcesManager::CommitChanges
hrCommitChangesHelper
localManager
OSIntegration::DEH::ResourcesManager::CommitChangesHelper
OSIntegration::DEH::CreateResourcesManager
copy.Initialize(_activatableClassId.Get())
OSIntegration.DEH.ExtensionRegistration
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
OSIntegration::DEH::Internal::CExtensionRegistration::get_ActivatableClassId
OSIntegration::DEH::Internal::CExtensionRegistration::get_ContractId
copy.Initialize(_contractId.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Vendor
copy.Initialize(_properties.Vendor.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::put_Vendor
((HRESULT)0x80070057L)
OSIntegration::DEH::Internal::CExtensionRegistration::get_Icon
copy.Initialize(_properties.Icon.Get())
extensionCatalogContext->CreateExtensionEntry( _contractId.Get(), packageMoniker, _activatableClassId.Get(), _properties)
OSIntegration::DEH::Internal::CExtensionRegistration::PendingWriteToStore
_spAttributesCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::CExtensionRegistration::Validate
hrRuntimeClassInitialize
OSIntegration::DEH::Internal::CExtensionRegistration::CheckAttributeNameDoesNotCollide
OSIntegration::DEH::ExtensionCatalogCollector::CreateExtensionRegistration
OSIntegration::DEH::ExtensionCatalogCollector::RuntimeClassInitialize
hrInsert
contractIdCopy.Set(contractId.Get())
hrLookup
E_OUTOFMEMORY
extensionRegistration->Validate(incomingPackage)
OSIntegration::DEH::ExtensionCatalogCollector::RetrieveExtensionRegistration
ForEachExtensionRegistration(extensionRegistrationMap.Get(), [&](Internal::CExtensionRegistration* extensionRegistration) { RETURN_HR(extensionRegistration->Validate(incomingPackage)); })
OSIntegration::DEH::ExtensionCatalogCollector::ValidateEntries::<lambda_cf1897f0d0874031a501518ae599977a>::operator ()
copy.Initialize(_properties.DisplayName.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::put_Icon
OSIntegration::DEH::Internal::CExtensionRegistration::put_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::get_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::get_Description
copy.Initialize(_properties.Description.Get())
_spAttributesMap->GetView(spAttributesMapView.GetAddressOf())
OSIntegration::DEH::Internal::CExtensionRegistration::put_Description
((HRESULT)0x8007000EL)
OSIntegration::DEH::Internal::CExtensionRegistration::get_Attributes
_spAttributesCollisionMap->Insert(keyName, keyName, &fReplaced)
OSIntegration::DEH::Internal::CExtensionRegistration::AddAttribute
_spAttributesCollisionMap->Remove(keyName)
_spPropertyValueFactory->CreateString(value, &spPropertyValue)
_spAttributesMap->GetView(_properties.CustomProperties.MapView.ReleaseAndGetAddressOf())
_spPropertyValueFactory->CreateUInt32(value, &spPropertyValue)
pIterable->First(&spIterator)
spIterator->get_Current(spKeyValuePair.GetAddressOf())
OSIntegration::DEH::ForEachExtensionRegistration
lambda(spExtensionRegistration.Get())
spKeyValuePair->get_Value(&spExtensionRegistration)
extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())
OSIntegration::DEH::ExtensionCatalogCollector::ValidateEntries
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&extensionCatalogContext))
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite::<lambda_876117454afcc4e850e10f8e1c8f984f>::operator ()
ForEachExtensionRegistration(extensionRegistrationMap.Get(), [&](Internal::CExtensionRegistration* extensionRegistration) { StringReference packageMoniker(incomingPackage->GetPackageMoniker()); RETURN_HR(extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())); })
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite
extensionCatalogContext->RemoveExtensionEntriesForPackage(packageMoniker.Get(), deploymentOperation)
OSIntegration::DEH::ExtensionCatalogCollector::PendingRemove
OSIntegration::DEH::CreateExtensionCatalogCollector
MakeAndInitialize<ExtensionCatalogCollector>(collector)
OSIntegration::DEH::ExtensionRegistration::Create
collectors->GetExtensionCatalogCollector()->CreateExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
OSIntegration::DEH::ExtensionRegistration::Retrieve
collectors->GetExtensionCatalogCollector()->RetrieveExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
OSIntegration.DEH.ExtensionCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
WindowsDeleteString(initializedElement->contractId)
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Destroy
WindowsDeleteString(initializedElement->activatableClassId)
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
WindowsDeleteString(uninitializedElement->contractId)
WindowsDuplicateString(source.contractId, &uninitializedElement->contractId)
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Construct
hrDuplicateString
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
OSIntegration::DEH::ActivationCatalogCollector::AddInProcessActivatableClassRegistration
activatableClass
acid.Initialize(activatableClass->get_ActivatableClassId())
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
_inProcessActivatableClasses->Insert(acid.Get(), static_cast<IDllServerActivatableClassRegistration*>(activatableClass), &replaced)
RegistryMapFactory< IDllServerActivatableClassRegistration * >::RegistryMap::Make(&_inProcessActivatableClasses)
RegistryMapFactory< IExeServerActivatableClassRegistration * >::RegistryMap::Make(&_outOfProcessActivatableClasses)
OSIntegration::DEH::ActivationCatalogCollector::AddOutOfProcessActivatableClassRegistration
server
_outOfProcessActivatableClasses->Insert(acid.Get(), static_cast<IExeServerActivatableClassRegistration*>(activatableClass), &replaced)
serverName.Initialize(server->get_ServerName())
OSIntegration::DEH::ActivationCatalogCollector::AddServerRegistration
_exeServers->Insert(serverName.Get(), static_cast<IExeServerRegistration*>(server), &replaced)
RegistryMapFactory< IExeServerRegistration * >::RegistryMap::Make(&_exeServers)
_proxyStubRegistrations->Lookup(clsid.Get(), &inspectable)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveProxyStubRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveInterfaceRegistration
_interfaceRegistrations->HasKey(iid.Get(), found)
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStoreContext))
registrationStoreContext->CreatePackage(packageMoniker.Get(), packageIsFramework)
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite::<lambda_e8da1d624f5a8bd4a8ff673fff0627a1>::operator ()
PendingWriteInProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
PendingWriteExeSevers(incomingPackage, registrationStoreContext.Get())
PendingWriteProxyStubs(packageMoniker, registrationStoreContext.Get())
PendingWriteOutOfProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
hrPendingWrite
PendingWriteInterfaces(packageMoniker, registrationStoreContext.Get())
Unable to stage pending writes to activation catalog.
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite
OSIntegration::DEH::ActivationCatalogCollector::AddProxyStubRegistration
RegistryMapFactory< IInspectable* >::RegistryMap::Make(&_proxyStubRegistrations)
RegistryMapFactory< IInspectable* >::RegistryMap::Make(&_interfaceRegistrations)
_proxyStubRegistrations->Insert(clsid.Get(), proxyStub, &replaced)
_interfaceRegistrations->Insert(iid.Get(), itf, &replaced)
OSIntegration::DEH::ActivationCatalogCollector::AddInterfaceRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveInProcessActivatableClassRegistration
_inProcessActivatableClasses->HasKey(activatableClassId, found)
_outOfProcessActivatableClasses->HasKey(activatableClassId, found)
_inProcessActivatableClasses->Lookup(activatableClassId, &registration)
_outOfProcessActivatableClasses->Lookup(activatableClassId, &registration)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveOutOfProcessActivatableClassRegistration
OSIntegration::DEH::ActivationCatalogCollector::RetrieveServerRegistration
_exeServers->HasKey(serverName, found)
_proxyStubRegistrations->HasKey(clsid.Get(), found)
_exeServers->Lookup(serverName, &registration)
_outOfProcessActivatableClasses->First(&iterator)
activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerActivatableClassRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); OutOfProcessActivatableClassRegistration_Impl *activatableClass = static_cast< OutOfProcessActivatableClassRegistration_Impl* >(classInterface.Get()); RETURN_IF_FAILED(activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs::<lambda_e82a56ad4bd550ceabcd0284a54fe13c>::operator ()
keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())
registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))
keyValuePair->get_Value(&proxyStub)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs
_proxyStubRegistrations->First(&iterator)
keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > proxyStub; Windows::Internal::String clsid; RETURN_IF_FAILED(keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&proxyStub)); RETURN_IF_FAILED(registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))); return S_OK; })
keyValuePair->get_Value(&itf)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces::<lambda_4322a56d354eb0685e0659bd47d7f47b>::operator ()
_interfaceRegistrations->First(&iterator)
registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))
registrationStoreContext->RemoveActivationEntriesForPackage( packageMoniker.Get(), deploymentOperation, outgoingPackage->GetIsFramework())
OSIntegration::DEH::ActivationCatalogCollector::PendingRemove
keyValuePair->get_Value(&serverInterface)
OSIntegration::DEH::ActivationCatalogCollectorForUser::PendingRemove
static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers::<lambda_1aa3892973072908dcbd7084db467598>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers
_exeServers->First(&iterator)
keyValuePair->get_Value(&classInterface)
MyForEach(iterator, [this, incomingPackage, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerRegistration > serverInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&serverInterface)); RETURN_IF_FAILED(static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)); return S_OK; })
static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses::<lambda_17e64c4b6c9e7cc51bb10fcfe94be8eb>::operator ()
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses
_inProcessActivatableClasses->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses::<lambda_20cd266dcdfb7323e024d33da7893824>::operator ()
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IDllServerActivatableClassRegistration* > * keyValuePair ) -> HRESULT { ComPtr< IDllServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); RETURN_IF_FAILED(static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
HRESULT_FROM_WIN32(13L)
collectors->GetActivationCatalogCollector()->AddOutOfProcessActivatableClassRegistration(classRegistration.Get())
OSIntegration::DEH::ExeServerRegistration::Create
ERROR_INVALID_DATA
ExeServerRegistration_Impl::Create(serverName, &serverRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &retrievedServerRegistration)
collectors->GetActivationCatalogCollector()->RetrieveProxyStubRegistration(clsid, &found, &registration)
collectors->GetActivationCatalogCollector()->AddServerRegistration(serverRegistration.Get())
ProxyStubRegistration_Impl::Create(dllPath, isPackageRelativePath, &registrationImpl)
OSIntegration::DEH::ProxyStubRegistration::FindOrCreate
collectors->GetActivationCatalogCollector()->RetrieveInterfaceRegistration(iid, &found, nullptr)
collectors->GetActivationCatalogCollector()->AddProxyStubRegistration( clsid, registrationImpl.Get())
InterfaceRegistration_Impl::Create(name, clsid, &registrationImpl)
OSIntegration::DEH::InterfaceRegistration::Create
collectors->GetActivationCatalogCollector()->AddInterfaceRegistration(iid, registrationImpl.Get())
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > itf; Windows::Internal::String iid; RETURN_IF_FAILED(keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&itf)); RETURN_IF_FAILED(registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))); return S_OK; })
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces
OSIntegration::DEH::CreateActivationCatalogCollector
MakeAndInitialize<ActivationCatalogCollector>(collector)
OSIntegration::DEH::CreateActivationCatalogCollectorForUser
MakeAndInitialize<ActivationCatalogCollectorForUser>(collector)
collectors->GetActivationCatalogCollector()->RetrieveInProcessActivatableClassRegistration(activatableClassId, &found, &retrievedInProcClassRegistration)
OSIntegration::DEH::InProcessActivatableClassRegistration::Create
HRESULT_FROM_WIN32(160L)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration(activatableClassId, &found, &retrievedOutOfProcClassRegistration)
InProcessActivatableClassRegistration_Impl::Create(activatableClassId, &classRegistration)
ERROR_BAD_ARGUMENTS
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Create
collectors->GetActivationCatalogCollector()->AddInProcessActivatableClassRegistration(classRegistration.Get())
OutOfProcessActivatableClassRegistration_Impl::Create(activatableClassId, serverRegistration.Get(), &classRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &serverRegistration)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration( activatableClassId, &found, &outOfProcessRegistration)
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration( serverName, &found, &serverRegistration)
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Retrieve
OSIntegration::DEH::ExeServerRegistration::Retrieve
MyForEach
iterator->get_HasCurrent(&hasCurrent)
f(item.Get())
iterator->get_Current(&item)
iterator->MoveNext(&hasCurrent)
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.ActivationCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IDllServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IDllServerActivatableClassRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IDllServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IDllServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IDllServerActivatableClassRegistration>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerRegistration>
StringFromGUID2(guid, m_string, ARRAYSIZE(m_string)) != ARRAYSIZE(m_string)
onecore\internal\com\inc\combase\ComGuid.hpp
GuidString::GuidString
OpenClsidKey(whichHive, clsid, KEY_READ, &clsidKey)
::RegOpenKeyExW(clsidTopLevelKey.get(), GuidString(clsid), 0 , samDesired, key)
::RegOpenKeyExW(clsidKey.get(), Constants::InprocServer32, 0 , KEY_READ, &inprocServer32Key)
Com::Catalog::Win32Registry::GetInprocServer32Properties
Details::GetStringValueExpanded(inprocServer32Key.get(), L"", dllPath)
\WOW6432Node
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
\WowAA32Node
\Wow6464Node
CLSID
\WowAA64Node
Uint32HexString::Uint32HexString
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%x", value)
Com::Catalog::Win32Registry::Details::GetStringValue
heapBuffer
getValueResult
onecore\private\com\inc\combase\ComRegistryCatalogFunctions.hpp
*value
::RegOpenKeyExW(GetHiveKey(whichHive), GetClassesRootPathRelativeToHiveKey(whichHive), 0 , samDesired, key)
OpenClassesRootKey(whichHive, KEY_READ, &classesRootKey)
Com::Catalog::Win32Registry::OpenClassesRootKey
::RegOpenKeyExW(classesRootKey.get(), Constants::CLSID, 0 , KEY_READ, &clsidTopLevelKey)
Com::Catalog::Win32Registry::OpenClsidKey
OSIntegration::DEH::Internal::GetVirtualizationManagerDllFilename
GetInprocServer32Properties(WhichHive::LocalMachine, __uuidof(PackagedInprocClassVirtualizationManager), &g_virtualizationManagerDllPath)
SetRegistrationProperty(_properties.ServerId, serverId)
MaxInstallOrder
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DisplayName, displayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetServerId
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ShortDisplayName, shortDisplayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDisplayName
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ProgId, progId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetShortDisplayName
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.VersionIndependentProgId, versionIndependentProgId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetProgId
_properties.EnableOleDefaultHandler.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetVersionIndependentProgId
SetRegistrationProperty(_properties.EnableOleDefaultHandler, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOleDefaultHandler
PathAllocCombine(incomingPackage->GetPackageRoot(), relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
AppID
Failed call to GetSystemDirectory/GetSystemWow64Directory2. imageFileMachine=%u
OSIntegration::DEH::Internal::GetPackagedFileAbsolutePath
OSIntegration::DEH::Internal::GetSystemFileAbsolutePath
systemDirectoryLength == 0
SizeTAdd(commandLineLength, 2, &commandLineLength)
PathAllocCombine(systemDirectoryCharacters, relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
SizeTAdd(commandLineLength, 1, &commandLineLength)
OSIntegration::DEH::Internal::ConstructCommandLine
commandLine
SizeTAdd(commandLineLength, wcslen(arguments), &commandLineLength)
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\" %ls", executableAbsolutePath, arguments)
"%ls" %ls
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\"", executableAbsolutePath)
"%ls"
_dataFormats->IndexOf(dataFormat, &indexIgnored, &found)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddDataFormat
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ConversionReadable, readable)
_dataFormats->Append(dataFormat)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.ConversionReadWritable, readWritable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadable
SetRegistrationProperty(_properties.TypeLibId, typeLibId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadWritable
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLibWithVersion
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLib
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddVerb
SetRegistrationProperty(_properties.TypeLibVersionNumber, typeLibVersionNumber)
_verbs->HasKey(verbId, &alreadyHasKey)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_verbs)
existingVerbPropValue->GetString(existingVerb.GetAddressOf())
_verbs->Lookup(verbId, &existingVerbPropValue)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInsertableObject
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.InsertableObject, true)
_properties.InsertableObject.Present
AddImplementedCategory(CATID_Insertable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddImplementedCategory
CreatePropertyValueFactoryIfNecessary()
_propertyValueFactory->CreateUInt32(0, &categoryPropValue)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_implementedCategories)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.AutoConvertTo, autoConvertTo)
_implementedCategories->Insert(Wrappers::HStringReference(categoryKey).Get(), categoryPropValue.Get(), &replacedIgnored)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultIcon, defaultIcon)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAutoConvertTo
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultFormatName, defaultFormatName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultIcon
Vector<HSTRING>::Make(&_dataFormats)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultFormatName
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.Threading, static_cast<ThreadingModel>(threadingModel))
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDllPath
_properties.OutofprocClassHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetThreadingModel
SetRegistrationProperty(_properties.OutofprocClassHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOutofprocClassHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x86
SetRegistrationProperty(_properties.InprocServerDllPath_x86, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x64
SetRegistrationProperty(_properties.InprocServerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm
SetRegistrationProperty(_properties.InprocServerDllPath_arm, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm64
SetRegistrationProperty(_properties.InprocServerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetIsSystemInprocServerDll
_properties.IsSystemInprocServerDll.Present
_propertyValueFactory->CreateString(verb, &verbPropValue)
verb != existingVerb
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.MiscStatusDefault, miscStatusDefault)
_verbs->Insert(verbId, verbPropValue.Get(), &replacedIgnored)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddMiscStatusAspect
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetMiscStatusDefault
_miscStatusAspects->HasKey(aspect, &alreadyHasKey)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_miscStatusAspects)
existingMiscStatusPropValue->GetString(existingMiscStatus.GetAddressOf())
_miscStatusAspects->Lookup(aspect, &existingMiscStatusPropValue)
_propertyValueFactory->CreateString(miscStatus, &miscStatusPropValue)
miscStatus != existingMiscStatus
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ToolboxBitmap32, toolboxBitmap32)
_miscStatusAspects->Insert(aspect, miscStatusPropValue.Get(), &replacedIgnored)
SetRegistrationProperty(_properties.DllPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetToolboxBitmap32
SetRegistrationProperty(_properties.InprocHandlerHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocHandler
_properties.EnableVirtualizationForInprocHandler.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddUint32CustomAttribute
SetRegistrationProperty(_properties.EnableVirtualizationForInprocHandler, true)
_customAttributes->HasKey(name, &alreadyHasKey)
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_customAttributes)
existingPropValue->GetUInt32(&existingValue)
_customAttributes->Lookup(name, &existingPropValue)
_propertyValueFactory->CreateUInt32(value, &propValue)
value != existingValue
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringCustomAttribute
_customAttributes->Insert(name, propValue.Get(), &replacedIgnored)
_propertyValueFactory->CreateString(value, &propValue)
existingPropValue->GetString(existingValue.GetAddressOf())
_properties.InprocServerHasMachineScope.Present
SetRegistrationProperty(_properties.IsSystemInprocServerDll, true)
SetRegistrationProperty(_properties.InprocServerHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerHasMachineScope
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocServer
_properties.EnableVirtualizationForInprocServer.Present
SetRegistrationProperty(_properties.InprocHandlerDllPath_x86, path)
SetRegistrationProperty(_properties.EnableVirtualizationForInprocServer, true)
SetRegistrationProperty(_properties.InprocHandlerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x86
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x64
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm
_properties.InprocHandlerHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm64
CreateCompatibilityEntries(incomingPackage)
registrationStore->CreateComClassEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreatePropertyValueFactoryIfNecessary
GetActivationFactory( Wrappers::HStringReference(RuntimeClass_Windows_Foundation_PropertyValue).Get(), &_propertyValueFactory)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetCalculatedRegistrationProperties
CalculateSurrogateDllPath(incomingPackage)
_implementedCategories->GetView(&implementedCategoriesView)
_verbs->GetView(&verbsView)
SetRegistrationProperty(_properties.DataFormats, _dataFormats.Get())
_miscStatusAspects->GetView(&miscStatusAspectsView)
_customAttributes->GetView(&customAttributesView)
CalculateBinaryCompatibilityPropertiesIfNecessary(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAppId
SetRegistrationProperty(_appId, appId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetApplicationDisplayName
SetRegistrationProperty(_applicationDisplayName, applicationName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerPath
SetRegistrationProperty(_exeServerPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerArguments
SetRegistrationProperty(_exeServerArguments, arguments)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringValueForInprocServer32CompatibilityKey
!_additionalValuesForInprocServer32.try_emplace( ValueName(WindowsGetStringRawBuffer(name, nullptr)), RegSzValueData(value)).second
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetHasMachineScope
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.OutofprocClassHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocHandlerHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocServerHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::PendingWriteRegistration
SetCalculatedRegistrationProperties(incomingPackage)
_properties.Verbs.MapView.CopyTo(IID_PPV_ARGS(&verbsIterable))
implementedCategoryKeyValuePair->get_Key(&implementedCategory)
verbKeyValuePair->get_Value(&verbInspectable)
verbKeyValuePair->get_Key(&verbId)
_properties.MiscStatusAspects.MapView.CopyTo( IID_PPV_ARGS(&miscStatusAspectsIterable))
verbPropertyValue->GetString(&verb)
miscStatusAspectKeyValuePair->get_Value( &miscStatusAspectFlagsInspectable)
miscStatusAspectKeyValuePair->get_Key(&miscStatusAspect)
GetVirtualizationManagerDllFilename(&virtualizationManagerDllFilename)
miscStatusAspectFlagsPropertyValue->GetString( &miscStatusAspectFlagsString)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocHandler32Subkey
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocServer32Subkey
OSIntegration::DEH::ComClassRegistration::RuntimeClassInitialize
classes->HasKey(id, &internalRegistrationExists)
_combinedProperties
classes->Lookup(id, &_combinedProperties)
GetSystemFileAbsolutePath(_executableArchitecture, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateSurrogateDllPath
GetPackagedFileAbsolutePath(incomingPackage, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateBinaryCompatibilityPropertiesIfNecessary
ConstructCommandLine(_exeServerAbsolutePath.get(), _exeServerArguments.Value.GetRawBuffer(nullptr), _exeServerCommandLine)
CoGetModuleArchitecture(_exeServerAbsolutePath.get(), reinterpret_cast<DWORD*>(&_executableArchitecture))
CoGetModuleArchitecture(_surrogateDllAbsolutePath.get(), reinterpret_cast<DWORD*>(&_surrogateDllArchitecture))
GetPackagedFileAbsolutePath(incomingPackage, _properties.DllPath.Value.GetRawBuffer(nullptr), _surrogateDllAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, GetInprocHandlerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocHandlerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocServerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocServerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, _properties.ToolboxBitmap32.Value.GetRawBuffer(nullptr), _toolboxBitmap32AbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _properties.DefaultIcon.Value.GetRawBuffer(nullptr), _defaultIconAbsolutePath)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateCompatibilityEntries
registryCompatibilityCollector->AddKey( (isMachineScope ? Scope::Machine : Scope::User), GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateClsidKeyTemplateFromSharedProperties
_properties.ImplementedCategories.MapView.CopyTo(IID_PPV_ARGS(&implementedCategoriesIterable))
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( runtimeVersionAttributeName.Get(), runtimeVersion)
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetRuntimeVersion
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetImplementationClass
AddStringCustomAttribute(implementationClassAttributeName.Get(), implementationClass)
SetRegistrationProperty(_properties.ApplicationId, applicationId)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( implementationClassAttributeName.Get(), implementationClass)
SetRegistrationProperty(_properties.ApplicationDisplayName, applicationDisplayName)
OSIntegration::DEH::ComServerRegistration::SetApplicationId
SetRegistrationProperty(_properties.DisplayName, displayName)
OSIntegration::DEH::ComServerRegistration::SetApplicationDisplayName
SetRegistrationProperty( _properties.LaunchAndActivationPermission, launchAndActivationPermission)
OSIntegration::DEH::ComServerRegistration::SetDisplayName
OSIntegration::DEH::ComServerRegistration::PendingWriteRegistration
OSIntegration::DEH::ComServerRegistration::SetLaunchAndActivationPermission
SetRegistrationProperty(_properties.Executable, executable)
registrationStore->CreateComServerEntry(packageMoniker, _id, _properties)
ComClassRegistration::RuntimeClassInitialize(classes, id)
classes->Insert(id, _combinedProperties.Get(), &replaced)
_combinedProperties->SetServerId(serverId)
OSIntegration::DEH::ComOutofprocClassRegistration::RuntimeClassInitialize
OSIntegration::DEH::ComSurrogateClassRegistration::RuntimeClassInitialize
ComOutofprocClassRegistration::RuntimeClassInitialize(classes, id, serverId)
_combinedProperties->SetInprocServerDllPath_x86(mscoreeDll.Get())
_combinedProperties->SetOutofprocClassIsSurrogate(true)
_combinedProperties->SetInprocServerDllPath_x64(mscoreeDll.Get())
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetAssembly
_combinedProperties->SetInprocServerDllPath_arm64(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_arm(mscoreeDll.Get())
AddStringCustomAttribute(assemblyAttributeName.Get(), assembly)
_combinedProperties->SetIsSystemInprocServerDll(true)
AddStringCustomAttribute(runtimeVersionAttributeName.Get(), runtimeVersion)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( assemblyAttributeName.Get(), assembly)
ComServerRegistration::CreateClassRegistration<ComExeClassRegistration>(classId, &classRegistration)
registryCompatibilityCollector->AddKey( (_hasMachineScope ? Scope::Machine : Scope::User), Internal::GetAppIdKeyPath(_appId.Value), std::move(appIdKey))
ComServerRegistration::SetExecutable(executable, isSystemExecutable)
OSIntegration::DEH::ComExeServerRegistration::CreateClassRegistration
ComServerRegistration::SetSystemExecutableArchitecture(architecture)
OSIntegration::DEH::ComExeServerRegistration::SetExecutable
ComServerRegistration::SetArguments(arguments)
OSIntegration::DEH::ComExeServerRegistration::SetSystemExecutableArchitecture
ComServerRegistration::CreateClassRegistration<ComServiceClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComExeServerRegistration::SetArguments
ComServerRegistration::SetServiceName(serviceName)
OSIntegration::DEH::ComServiceServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComServiceServerRegistration::SetArguments
OSIntegration::DEH::ComServiceServerRegistration::SetServiceName
OSIntegration::DEH::ComSurrogateServerRegistration::CreateClassRegistration
ComServerRegistration::SetSurrogateAppId(classId)
SetRegistrationProperty(_properties.IsSystemExecutable, isSystemExecutable != FALSE)
OSIntegration::DEH::ComServerRegistration::SetExecutable
OSIntegration::DEH::ComServerRegistration::SetServiceName
SetRegistrationProperty(_properties.ServiceName, serviceName)
OSIntegration::DEH::ComServerRegistration::SetSystemExecutableArchitecture
SetRegistrationProperty(_properties.SystemExecutableArchitecture, architecture)
OSIntegration::DEH::ComServerRegistration::SetArguments
SetRegistrationProperty(_properties.Arguments, arguments)
OSIntegration::DEH::ComServerRegistration::SetSurrogateAppId
SetRegistrationProperty(_properties.SurrogateAppId, appId)
OSIntegration::DEH::ComServerRegistration::SetCalculatedRegistrationProperties
incomingPackage->GetMainPackageFamilyMoniker(executionPackageFamily)
Internal::GetSystemFileAbsolutePath( _properties.SystemExecutableArchitecture.Value, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
SetRegistrationProperty( _properties.ExecutionPackageFamily, executionPackageFamily)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
OSIntegration::DEH::ComServerRegistration::CreateCompatibilityEntries
registrationStore->CreateComInterfaceEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::ComInterfaceRegistration::SetHasMachineScope
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetInterfaceKeyPathForArchitecture(_id, architecture), Key(interfaceKey))
OSIntegration::DEH::ComInterfaceRegistration::PendingWriteRegistration
OSIntegration::DEH::ComProxyStubRegistration::SetDisplayName
OSIntegration::DEH::ComInterfaceRegistration::CreateCompatibilityEntries
SetRegistrationProperty(_properties.DllPath_x86, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath
SetRegistrationProperty(_properties.DllPath_x64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x86
SetRegistrationProperty(_properties.DllPath_arm, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x64
SetRegistrationProperty(_properties.DllPath_arm64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm
OSIntegration::DEH::ComProxyStubRegistration::SetHasMachineScope
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm64
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateExecutable
ComServerRegistration::CreateClassRegistration<ComSurrogateClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComSurrogateServerRegistration::SetAppId
ComServerRegistration::SetSurrogateAppId(appId)
_properties.UseUniversalMarshaler.Present
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateSystemExecutableArchitecture
SetRegistrationProperty(_properties.UseUniversalMarshaler, true)
OSIntegration::DEH::ComInterfaceRegistration::SetUniversalMarshaler
OSIntegration::DEH::ComInterfaceRegistration::SetSynchronousInterface
SetRegistrationProperty(_properties.SynchronousInterface, synchronousInterface)
OSIntegration::DEH::ComInterfaceRegistration::SetAsynchronousInterface
SetRegistrationProperty(_properties.AsynchronousInterface, asynchronousInterface)
SetRegistrationProperty(_properties.ProxyStubCLSID, proxyStubClsid)
OSIntegration::DEH::ComInterfaceRegistration::SetTypeLib
SetRegistrationProperty(_properties.HasMachineScope, (hasMachineScope != FALSE))
OSIntegration::DEH::ComInterfaceRegistration::SetProxyStubClsidWithSupportedArchitectures
SetRegistrationProperty(_properties.Win32Path, win32Path)
OSIntegration::DEH::ComTypeLibRegistration::SetDisplayName
SetRegistrationProperty(_properties.Win64Path, win64Path)
OSIntegration::DEH::ComTypeLibRegistration::SetWin32Path
OSIntegration::DEH::ComTypeLibRegistration::SetHasMachineScope
OSIntegration::DEH::ComTypeLibRegistration::SetWin64Path
OSIntegration::DEH::ComTypeLibRegistration::PendingWriteRegistration
registrationStore->CreateComTypeLibEntry( packageMoniker, _id, _versionNumber.Get(), _properties)
OSIntegration::DEH::ComTypeLibRegistration::CreateCompatibilityEntries
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win32Path.Value.GetRawBuffer(nullptr), absolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.HelpDirectory.Value.GetRawBuffer(nullptr), absolutePath)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win64Path.Value.GetRawBuffer(nullptr), absolutePath)
SetRegistrationProperty(_properties.CurrentVersion, currentVersion)
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetTypeLibVersionKeyPath(_id, _versionNumber.GetRawBuffer(nullptr)), std::move(typeLibVersionKey))
SetRegistrationProperty(_properties.CLSID, clsid)
OSIntegration::DEH::ComProgIdRegistration::SetCurrentVersion
OSIntegration::DEH::ComProxyStubRegistration::PendingWriteRegistration
registrationStore->CreateComProxyStubEntry(packageMoniker, _id, _properties)
PendingCopyFiles(packageMoniker, packageRoot.Get(), incomingPackage->GetSignatureOrigin(), fileManager.Get())
resourcesManager->GetFileManager(&fileManager)
OSIntegration::DEH::ComProxyStubRegistration::PendingCopyFiles
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, _properties.DllPath.Value.Get())
Internal::GetPackagedFileAbsolutePath(incomingPackage, GetDllPathForArchitecture(architecture).GetRawBuffer(nullptr), dllAbsolutePath)
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, GetDllPathForArchitecture(architecture).Get())
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
OSIntegration::DEH::ComProxyStubRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComTypeLibRegistration::SetLocaleId
SetRegistrationProperty(_properties.LocaleId, localeId)
OSIntegration::DEH::ComTypeLibRegistration::SetFlags
SetRegistrationProperty(_properties.Flags, flags)
OSIntegration::DEH::ComTypeLibRegistration::SetHelpDirectory
SetRegistrationProperty(_properties.HelpDirectory, helpDirectory)
OSIntegration::DEH::ComTreatAsClassRegistration::CreateCompatibilityEntries
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), Key(clsidKey))
OSIntegration::DEH::PackagedComCatalogCollector::RuntimeClassInitialize
(HashMap<UINT32, IComServerRegistration*>::Make(&_servers))
(HashMap<CLSID, ComProxyStubRegistration*>::Make(&_proxyStubs))
(HashMap<CLSID, Internal::ComClassRegistrationCombinedProperties*>::Make(&_classes))
RegistryMapFactory<ComTypeLibRegistration*>::RegistryMap::Make(&_typeLibs)
(HashMap<IID, ComInterfaceRegistration*>::Make(&_interfaces))
(HashMap<CLSID, ComTreatAsClassRegistration*>::Make(&_treatAsClasses))
RegistryMapFactory<ComProgIdRegistration*>::RegistryMap::Make(&_progIds)
OSIntegration::DEH::PackagedComCatalogCollector::CreateExeServerRegistration
serverRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateSurrogateServerRegistration
_servers->Insert(serverId, serverRegistration.Get(), &replaced)
spRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateServiceServerRegistration
SetRegistrationProperty(_displayName, displayName)
OSIntegration::DEH::ComProgIdRegistration::SetClsidWithIsInsertableObject
OSIntegration::DEH::ComProgIdRegistration::SetHasMachineScope
OSIntegration::DEH::ComProgIdRegistration::SetDisplayName
OSIntegration::DEH::ComProgIdRegistration::PendingWriteRegistration
registrationStore->CreateComProgIdEntry(packageMoniker, _id.Get(), _properties)
OSIntegration::DEH::ComProgIdRegistration::CreateCompatibilityEntries
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetProgIdKeyPath(_id.GetRawBuffer(nullptr)), std::move(progIdKey))
SetRegistrationProperty(_properties.AutoConvertTo, autoConvertTo)
OSIntegration::DEH::ComTreatAsClassRegistration::SetDisplayName
OSIntegration::DEH::ComTreatAsClassRegistration::SetAutoConvertTo
OSIntegration::DEH::ComTreatAsClassRegistration::SetHasMachineScope
OSIntegration::DEH::ComTreatAsClassRegistration::PendingWriteRegistration
registrationStore->CreateComTreatAsClassEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocHandlerClassRegistration
MakeAndInitialize<ComInprocHandlerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
OSIntegration::DEH::PackagedComCatalogCollector::CreateManagedInprocServerClassRegistration
MakeAndInitialize<ComManagedInprocServerClassRegistration>(&classRegistration, _classes.Get(), classId)
OSIntegration::DEH::PackagedComCatalogCollector::PendingWrite
PendingWriteForEachRegistration( _servers.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _proxyStubs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _classes.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _typeLibs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _interfaces.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _treatAsClasses.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _progIds.Get(), incomingPackage, resourcesManager)
spRegistrationStore->TryGetComPackageInstallOrder(packageMoniker.Get(), false , installOrder)
OSIntegration::DEH::PackagedComCatalogCollector::PendingRemove
OSIntegration::DEH::PackagedComCatalogCollector::SetIsAdditiveMode
_serverCount > 0
_proxyStubs->Insert(proxyStubClassId, spRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateProxyStubRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInterfaceRegistration
replaced
versionNumberString.Set(versionNumber)
_interfaces->Insert(interfaceId, spRegistration.Get(), &replaced)
WindowsConcatString( Wrappers::HStringReference(typeLibIdString).Get(), versionNumber, typeLibKey.GetAddressOf())
OSIntegration::DEH::PackagedComCatalogCollector::CreateTypeLibRegistration
progIdString.Set(progId)
_typeLibs->Insert(typeLibKey.Get(), spRegistration.Get(), &replaced)
_progIds->Insert(progId, spRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateProgIdRegistration
_treatAsClasses->Insert(classId, spRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateTreatAsClassRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocServerClassRegistration
MakeAndInitialize<ComInprocServerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingRemove
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&spRegistrationStore))
spRegistrationStore->RemoveComPackageInstallOrderEntry( packageMoniker.Get(), IsUserRegister(), deploymentOperation)
spRegistrationStore->TryGetComPackageInstallOrder( packageMoniker.Get(), IsUserRegister(), outgoingPackageInstallOrder)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyTypeLibRegistrationsForScope
registrationStore->GetComTypeLibsForPackage(packageFullName, &typeLibsHandle)
registrationStore->GetComTypeLib(packageFullName, typeLibId, &typeLibHandle)
registrationStore->TryGetComTypeLibIdForPackageByIndex(typeLibsHandle, typeLibIndex, &hasTypeLibAtIndex, &typeLibId)
registrationStore->ReadComTypeLibEntry(packageFullName, typeLibId, versionId.get(), properties)
registrationStore->TryGetComTypeLibVersionIdByIndex(typeLibHandle, versionIndex, &hasVersionAtIndex, &versionId)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasComRegistrationsForCurrentScope
registrationStore->CheckComPackageExists(packageFullName, &packageHasComRegistrations)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::GetMaxInstallOrder
registrationStore->TryGetComPackageInstallOrder( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), maxInstallOrder)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetMaxInstallOrder
registrationStore->CreateComPackageInstallOrderEntry( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), m_maxInstallOrderProperties)
hasAnyClasses
GetHasAnyClasses(&hasAnyClasses)
registrationStoreContext.query_to(&packagedComContext)
RoGetRegistrationStoreContext(Windows::Foundation::RegistrationScope_PerUser, nullptr, 0, IID_PPV_ARGS(&registrationStoreContext))
packagedComContext->GetComClassEntriesForPackage(packageMoniker.Get(), &classesHandle)
hrReadEntry
packagedComContext->ReadComClassEntry(packageMoniker.Get(), clsid, properties)
packagedComContext->TryGetComClassIdForPackageByIndex(classesHandle, classIndex, &hasEntryAtIndex, &clsid)
_classes->Insert(clsid, classProperties.Get(), &replaced)
classProperties
registryCompatibilityCollectorTestHooks->SetIsAdditiveMode(incomingPackage)
registryCompatibilityCollector.query_to(&registryCompatibilityCollectorTestHooks)
OSIntegration::DEH::PackagedComCatalogCollector::GetHasAnyClasses
_classes->First(&iterator)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingWrite
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStore))
SetRegistrationProperty(_appId, classId)
property.Present && (property.Value != value)
MakeAndInitialize<ClassRegistrationType>(&classRegistration, _classes.get(), classId, _id)
OSIntegration::DEH::ComServerRegistration::CreateClassRegistration
classRegistration->SetApplicationDisplayName( _properties.ApplicationDisplayName.Value.Get())
classRegistration->SetAppId(_appId.Value)
classRegistration->SetExeServerArguments(_properties.Arguments.Value.Get())
classRegistration->SetExeServerPath(_properties.Executable.Value.Get(), _properties.IsSystemExecutable.GetValueOrDefault(false), _properties.SystemExecutableArchitecture.GetValueOrDefault(IMAGE_FILE_MACHINE_UNKNOWN))
pair->get_Value(&spRegistration)
OSIntegration::DEH::PackagedComCatalogCollector::PendingWriteForEachRegistration
spRegistration.As(&spPackagedComRegistration)
registrationScope->SetHasMachineScope(true)
spPackagedComRegistration->PendingWriteRegistration( packageMoniker.Get(), incomingPackage, resourcesManager, spRegistrationStore.Get())
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetIncomingPackageInstallOrder
registrationStore->CreateComPackageInstallOrderEntry( packageFullName, IsUserRegister(), m_incomingPackageProperties)
MakeAndInitialize<PackagedComCatalogCollector>(collector)
MakeAndInitialize<PackagedComCatalogCollectorForUserOrSystemRegister>(collector, userToken)
OSIntegration::DEH::CreatePackagedComCatalogCollector
OSIntegration::DEH::CreatePackagedComCatalogCollectorForUserOrSystemRegister
SetRegistrationProperty(property.Value, value)
property.Present
(registrationStore->*Traits::getEntriesForPackage)(packageFullName, &entriesHandle)
(registrationStore->*Traits::tryGetEntryIdForPackageByIndex)(entriesHandle, index, &hasEntryAtIndex, &entryId)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyRegistrationsOfTypeForScope
(registrationStore->*Traits::readEntry)(packageFullName, EntryIdRaiiTraits::UnwrapRaiiType(entryId), properties, nullptr, nullptr)
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
I*VwZ
9Y8IL
wil::err_failfast_policy::HResult
!string
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
B7Xzz
H!current.IsValid()
UInt32Add(lengthIncludingNullTerminator, 1, &lengthIncludingNullTerminator)
WindowsPreallocateStringBuffer(collectedCharacterCount, &collectedCharacters, &multiStringBuffer)
UInt32Add(collectedCharacterCount, lengthIncludingNullTerminator, &collectedCharacterCount)
WindowsCreateString(firstNullTerminator, 1, GetAddressOf())
UInt32Add(collectedCharaterOffset, sourceLength + 1, &collectedCharaterOffset)
wil::make_hstring_from_buffer_nothrow(wistd::move(multiStringBuffer), GetAddressOf())
StringCchCopy(collectedCharacters + collectedCharaterOffset, collectedCharacterCount - collectedCharaterOffset, sourceCharacters)
MultiString::InitializeFromStringArray
SetRegistrationPropertyAllowMultipleIfConsistent
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
onecore\private\com\inc\deployment\RegistrationStore.hpp
StringHasEmbeddedNull(value)
SetRegistrationProperty
MultiStringIterator::operator ==
_pastTheEnd
MultiStringIterator::operator ++
_current == nullptr
onecore\private\com\inc\deployment\RegistrationStoreApiTypes.hpp
other._current == nullptr
MultiStringIterator::operator *
OSIntegration::DEH::RegistryCompatibility::Name<0,16383,1>::Name
LocalService
LaunchPermission
Interactive User
RunAs
Programmable
Control
DllSurrogate
CurVer
ToolBoxBitmap32
TreatAs
VersionIndependentProgID
ServerExecutable
LocalServer32
ProgID
MiscStatus
Assembly
{00020424-0000-0000-C000-000000000046}
Class
RuntimeVersion
SOFTWARE\Classes
HELPDIR
mscoree.dll
ole32.dll
win32
Version
FLAGS
win64
AsynchronousInterface
ServiceParameters
SynchronousInterface
ProxyStubClsid32
AutoConvertTo
TypeLib
Conversion
AuxUserType
CLSID
AppID
Neutral
Insertable
Implemented Categories
ThreadingModel
InprocServer32
Apartment
GetSet
DefaultFile
InprocHandler32
DefaultIcon
ReadWritable
Readable
DataFormats
!emplaceResult.second
OSIntegration::DEH::RegistryCompatibility::Key::AddSubkey
unordered_map/set too long
!pointer
OSIntegration::DEH::RegistryCompatibility::Details::GetStringPointer
UInt32Add(lengthWithoutTerminator, 1, &lengthIncludingTerminator)
OSIntegration::DEH::RegistryCompatibility::Details::GetStringLengthIncludingTerminator
OSIntegration::DEH::RegistryCompatibility::Details::GetStringByteCountIncludingTerminator
UInt32Mult(lengthIncludingTerminator, sizeof(WCHAR), &byteCountIncludingTerminator)
invalid hash bucket count
!m_values.try_emplace(std::move(valueName), std::move(valueData)).second
OSIntegration::DEH::RegistryCompatibility::Key::AddValue
OSIntegration::DEH::RegistryCompatibility::GenericValueData::GenericValueData
SizeTToDWord(rawSize, &size)
OSIntegration::DEH::RegistryCompatibility::Details::CastValueDataSize
contentsCopy
OSIntegration::DEH::RegistryCompatibility::RegBinaryValueData::RegBinaryValueData
m_text.find(L'\\') != std::wstring::npos
OSIntegration::DEH::RegistryCompatibility::Name<1,256,0>::Name
m_text.length() < minLength
m_text.length() > maxLength
m_text.length() == 0
m_text.length() > UNICODE_STRING_MAX_CHARS
currentBegin == currentEnd
(currentEnd - currentBegin) > MaxKeyNameLength
currentBegin == m_text.length()
(m_text.length() - currentBegin) > MaxKeyNameLength
SizeTToUInt32(actualLength, &reportedLength)
OSIntegration::DEH::RegistryCompatibility::Details::GetStringLength
OSIntegration::DEH::RegistryCompatibility::KeyPath::KeyPath
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityTypes.hpp
WindowsDuplicateString( destinationOrDelete, &pUninitialized->DestinationOrDelete)
OSIntegration::DEH::Internal::InitializeFileOperationInfo
OSIntegration.DEH.FileManager
FileOperationInfoVector::Make(&_incomingPackageFileOperations)
onecore\admin\appmodel\osim\src\deh\winrt\collector\filemanager.cpp
WindowsDuplicateString( sourceOrBackup, &pUninitialized->SourceOrBackup)
IdempotentSetString(_incomingPackageMoniker, incomingPackageMoniker)
OSIntegration::DEH::FileManager::CopyFileToManagedDirectory
OSIntegration::DEH::FileManager::RuntimeClassInitialize
FileOperationInfoVector::Make(&_outgoingPackageFileOperations)
CopyFileEx( pSourceAbsolutePath, pDestinationAbsolutePath, nullptr, nullptr, nullptr, COPY_FILE_ALLOW_DECRYPTED_DESTINATION)
!fileHandle
PathCchRemoveFileSpec(destinationDirectoryPath, destinationPathLength)
CreateDirectoryTree(destinationDirectoryPath)
OSIntegration::DEH::FileManager::CopyFiles
hrCurrent
integrityResult
pCopyOperations->get_Size(&size)
OSIntegration::DEH::FileManager::CreateManagedDirectories::<lambda_c11df9236caa9d9f68526d2c6bbf0787>::operator ()
hrCreateDirectory
hrCopyFiles
ConvertStringSecurityDescriptorToSecurityDescriptor( WindowsGetStringRawBuffer(securityDescriptorString, nullptr), SDDL_REVISION_1, reinterpret_cast<PSECURITY_DESCRIPTOR*>(&binarySecurityDescriptor), nullptr)
CreateManagedDirectories(managedDirectories, packageMoniker, bestEffort)
OSIntegration::DEH::FileManager::CreateDirectoriesAndCopyFiles
ForEachManagedDirectory( managedDirectories, packageMoniker, bestEffort, [](HSTRING directoryToCreate, HSTRING securityDescriptorString) { AutoPtrLocal<BYTE> binarySecurityDescriptor; RETURN_IF_WIN32_BOOL_FALSE(ConvertStringSecurityDescriptorToSecurityDescriptor( WindowsGetStringRawBuffer(securityDescriptorString, nullptr), SDDL_REVISION_1, reinterpret_cast<PSECURITY_DESCRIPTOR*>(&binarySecurityDescriptor), nullptr)); SECURITY_ATTRIBUTES securityAttributes = { sizeof(SECURITY_ATTRIBUTES), binarySecurityDescriptor }; if (!CreateDirectory( WindowsGetStringRawBuffer(directoryToCreate, nullptr), &securityAttributes)) { const HRESULT hrCreateDirectory = HRESULT_FROM_WIN32(GetLastError()); if (hrCreateDirectory != HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS)) { RETURN_HR(hrCreateDirectory); } } return S_OK; })
OSIntegration::DEH::FileManager::CreateManagedDirectories
PathAllocCombine( WindowsGetStringRawBuffer(incomingPackageRoot, nullptr), WindowsGetStringRawBuffer(relativeFilePath, nullptr), PATHCCH_ALLOW_LONG_PATHS, &sourceAbsolutePath)
GetManagedDirectoryPath( destinationDirectory, incomingPackageMoniker, destinationDirectoryPath.GetAddressOf())
IdempotentSetString(_incomingPackageRoot, incomingPackageRoot)
!(wil::verify_bool((__noop(destinationDirectory < ManagedDirectory::NumDirectories), ((destinationDirectory < ManagedDirectory::NumDirectories) ? 1 : 0))))
IdempotentSetString(_outgoingPackageMoniker, outgoingPackageMoniker)
OSIntegration::DEH::FileManager::DeleteManagedDirectory
PathAllocCombine( destinationDirectoryPath.GetRawBuffer(nullptr), WindowsGetStringRawBuffer(relativeFilePath, nullptr), PATHCCH_ALLOW_LONG_PATHS, &destinationAbsolutePath)
InitializeFileOperationInfo( HStringReference(destinationAbsolutePath).Get(), HStringReference(sourceAbsolutePath).Get(), &fileOperationInfo)
OSIntegration::DEH::FileManager::CommitChanges
hrDeleteDirectories
IdempotentSetString(_outgoingPackageRoot, outgoingPackageRoot)
!(wil::verify_bool((__noop(directoryToDelete < ManagedDirectory::NumDirectories), ((directoryToDelete < ManagedDirectory::NumDirectories) ? 1 : 0))))
destinationDirectoryPath.CopyFromString(pDestinationAbsolutePath)
OSIntegration::DEH::FileManager::CopyFileHelper
OSIntegration::DEH::FileManager::CommitChangesHelper
CreateDirectoriesAndCopyFiles( _incomingPackageManagedDirectories, _incomingPackageFileOperations.Get(), _incomingPackageMoniker.Get(), _incomingSignatureOrigin, false )
OSIntegration::DEH::FileManager::IdempotentSetString
string.Set(value)
D:(A;CIOI;GRGX;;;BU)(A;CIOI;GRGX;;;AC)(A;CIOI;GRGWSD;;;SY)
securityDescriptor.CopyTo(pDirectorySecurityDescriptor)
OSIntegration::DEH::CreateFileManager
OSIntegration::DEH::FileManager::ForEachManagedDirectory
!(wil::verify_bool((__noop(string == value), ((string == value) ? 1 : 0))))
MakeAndInitialize<FileManager>(ppFileManager)
hrForEach
OSIntegration::DEH::FileManager::DeleteContext::DeleteRelativePath
OSIntegration::DEH::FileManager::DeleteContext::DeleteFileAbsolutePath
CopyFiles(pCopyOperations, signatureOrigin, bestEffort)
hrPathAllocCombine
error
OSIntegration::DEH::FileManager::DeleteDirectoriesRecursive::<lambda_6476aca0b996a4f9e9c4ef9eeced6215>::operator ()
hrInitializeFileOperationInfo
hrAppend
OSIntegration::DEH::FileManager::GetManagedDirectoryPath
!(wil::verify_bool((__noop(bestEffort || (packageRoot != nullptr && pDeleteOperations != nullptr)), ((bestEffort || (packageRoot != nullptr && pDeleteOperations != nullptr)) ? 1 : 0))))
OSIntegration::DEH::FileManager::DeleteDirectoriesRecursive
PathAllocCombine( systemMetadataPath, L"PackagedCom", PATHCCH_ALLOW_LONG_PATHS, &managedDirectoryPath)
HStringReference(managedDirectoryPath).CopyTo(pDirectoryPath)
GetSystemMetadataPathForPackage( WindowsGetStringRawBuffer(packageMoniker, nullptr), &systemMetadataPathLength, systemMetadataPath)
PackagedCom
Windows.Foundation.Collections.IIterator`1<OSIntegration.DEH.Internal.FileOperationInfo>
Windows.Foundation.Collections.IVector`1<OSIntegration.DEH.Internal.FileOperationInfo>
Windows.Foundation.Collections.IVectorView`1<OSIntegration.DEH.Internal.FileOperationInfo>
%%Ip)Q
nameCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::CheckAttributeNameDoesNotCollide
nameCollisionMap->Insert(keyName, keyName, &replaced)
propertyValueFactory->CreateString(value, &propValue)
onecore\admin\appmodel\osim\src\deh\winrt\collector\activatableclassregistration.cpp
OSIntegration::DEH::Internal::AddStringAttribute
registration->_properties.Server.Value.Set(exeServer->get_ServerName().Get())
_server.CopyTo(server)
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::Create
static_cast<ExeServerRegistration_Impl*>(exeServer)->AddActivatableClass(activatableClassId)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::Create
registration->_serverName.Set(serverName.Get())
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::get_ServerRegistration
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::PendingWriteToStore
AttributesMap::Make(&registration->_attributes)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &registration->_propertyValueFactory)
Windows::Foundation::Collections::Internal::Vector<HSTRING>::Make(&classNames)
NameCollisionMap::Make(&registration->_nameCollisionMap)
copy.Initialize(_properties.ExePath.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ExePath
copy.Initialize(_serverName.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ServerName
OSIntegration::DEH::Internal::AddDwordAttribute
propertyValueFactory->CreateUInt32(value, &propValue)
attributes->Insert(keyName.Get(), propValue.Get(), &replaced)
nameCollisionMap->Remove(keyName)
registration->Initialize(activatableClassId)
hrput_DLLPath
registration
OSIntegration::DEH::Internal::InProcessActivatableClassRegistration_Impl::Create
OSIntegration::DEH::Internal::InProcessActivatableClassRegistration_Impl::put_IsPackageRelativePath
copy.Initialize(_properties.DllPath.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::InProcessActivatableClassRegistration_Impl::put_DllPath
SetRegistrationProperty(_properties.IsPackageRelativePath, isPackageRelativePath)
_attributes->GetView(&(_properties.CustomAttributes.MapView))
registrationStoreContext->CreateActivatableClassEntry( packageMoniker, _activatableClassId.Get(), _properties)
OSIntegration::DEH::Internal::InProcessActivatableClassRegistration_Impl::get_DllPath
OSIntegration::DEH::Internal::InProcessActivatableClassRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExplicitPsmActivationType
SetRegistrationProperty(_properties.TrustLevel, trustLevel)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_AppUserModelId
SetRegistrationProperty(_properties.ExplicitPsmActivationType, explicitPsmActivationType)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_RuntimeBehavior
SetRegistrationProperty(_properties.HostRuntimeId, hostRuntimeId.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_TrustLevel
SetRegistrationProperty(_properties.RuntimeBehavior, runtimeBehavior)
CalculateServerPermissions(strPackageSid)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_HostRuntimeId
E_NOTIMPL
securityDescriptorString.Initialize(defaultAAAPermissionsBase)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::CalculateServerPermissions
_properties.ActivatableClasses.InitializeFromStringArray(_classNames.Get())
registrationStoreContext->CreateServerEntry( packageMoniker.Get(), _serverName.Get(), _properties)
copy.Initialize(_properties.AppUserModelId.Value.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_AppUserModelId
copy.Initialize(_properties.CommandLine.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_CommandLine
copy.Initialize(_permissions.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_Permissions
hrSetExePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExePath
_classNames->Append(className.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::AddActivatableClass
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_IsPackageRelativePath
hrput_AppUserModelId
hrSetCommandLine
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_CommandLine
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_ActivatableClassId
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_Attributes
packageDacl
StringCchPrintfW(packageDacl, length, comDACLFormat, packageSidString.GetChars())
securityDescriptorString.Initialize(permissions)
packageSidString.SetValueFromString(packageSid.GetRawBuffer(nullptr))
SetRegistrationProperty(_properties.Permissions, securityDescriptorString.Get())
_activatableClassId.Set(activatableClassId.Get())
securityDescriptorString.Concat(packageDaclString, &securityDescriptorString)
securityDescriptorString.Concat(saclString, &securityDescriptorString)
AttributesMap::Make(&_attributes)
GetActivationFactory((Windows::Internal::String&)propertyValueId, &_propertyValueFactory)
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::InProcessActivatableClassRegistration>::Initialize
NameCollisionMap::Make(&_nameCollisionMap)
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::InProcessActivatableClassRegistration>::get_Attributes
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::Initialize
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::InProcessActivatableClassRegistration>::get_ActivatableClassId
_attributes->GetView(attributes)
registration->InterfaceName.Set(name.Get())
registration->ProxyStubCLSID.Set(clsid.Get())
OSIntegration::DEH::Internal::InterfaceRegistration_Impl::Create
onecore\admin\appmodel\osim\src\deh\winrt\collector\proxystubregistration.cpp
registration->Description.Set(L"Proxy Stub Server")
registration->DllPath.Unexpanded.Set(dllPath.Get())
OSIntegration::DEH::Internal::ProxyStubRegistration_Impl::Create
Proxy Stub Server
SetRegistrationProperty(registration->IsPackageRelativePath, isPackageRelativePath)
onecore\base\appmodel\common\widestring.cpp
0x%08lx
onecore\base\appmodel\common\registrykey.cpp
Software\Classes\Local Settings
onecore\base\appmodel\common\sid.cpp
AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
AppxByteCodeQueue
Software\Microsoft\Windows\CurrentVersion\Appx\ByteCodeQueue
AppxMiniRepository
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
AppxPolicies
Software\Policies\Microsoft\Windows\Appx
AppxPackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
AppModelDeploymentNotifications
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Deployment
GetPersistedRegistryLocationW
AppxRoot
Software\Microsoft\Windows\CurrentVersion\Appx
AppxPurgeList
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
AppxStateChange
Software\Microsoft\Windows\CurrentVersion\AppModel\StateChange
onecore\base\appmodel\common\stateseparation.cpp
RtlIsStateSeparationEnabled
onecore\base\appmodel\common\sidhelper.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\impersonationcontext.cpp
onecore\base\appmodel\common\pathhelpers.cpp
onecore\base\appmodel\common\bytebuffer.cpp
onecore\base\appmodel\common\autostring.cpp
SHA256
ObjectLength
onecore\base\appmodel\common\cryptoprovider.cpp
HashDigestLength
onecore\base\appmodel\common\base32encoding.cpp
0123456789abcdefghjkmnpqrstvwxyz
\\?\UNC\
0123456789ABCDEFBCryptOpenAlgorithmProvider
BCryptCloseAlgorithmProvider
BCryptHashData
BCryptFinishHash
BCryptGetProperty
BCryptCreateHash
BCryptDestroyHash
Bcrypt.dll
onecore\base\appmodel\package\packagesid.cpp
%s %I64d %s %s
onecore\admin\appmodel\packagerepository\staterepository\repositorypropertybag.cpp
onecore\admin\appmodel\packagerepository\staterepository\repository.cpp
PackageRepository.edb
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
Failed to update State Repository Cache
onecore\admin\appmodel\Common\StateRepository.hpp
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
Windows.Internal.StateRepository.Management.RepositoryManager
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
This should never occur
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
Server-Gui-Shell
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
ServerCore
onecore\admin\appmodel\common\utilities.cpp
get_nodeValue
always
getNamedItem
applicationManaged
afterFirstUnlock
whileUnlocked
reset
@DeletedItems
UpdateActions
@AddedItems
@ModifiedItems
Unknown error
TEMP.xml
_1.0.0.0_neutral_neutral_nopublisherid
Framework
selectSingleNode
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.dataProtection']/*[local-name()='DataProtection']
make_bstr_nothrow xpath
UserDataAvailability
make_bstr_nothrow AttributeName
get_attributes
aTonecore\admin\appmodel\common\volumemanager.cpp
MediaId
AppxMetadata\AppxBundleManifest.xml
MountPoint
SisPath
onecore\admin\appmodel\common\optionalpackagehelper.cpp
Unexpected: optional package %ws has %llu main packages and is in a related set
Failed to sync status (PackageStatus-OFF) for 
, status=0x
PackageList
RemediationReason
Failed to read status (PackageStatus-OFF) for 
Failed to sync status (PackageStatusAri-OFF) for 
Failed to read status (PackageStatusAri-OFF) for 
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
PackageStatus
onecore\admin\appmodel\common\packagestatus.cpp
onecore\admin\appmodel\common\encryption.cpp
LogFileInUse Telemetry failed: No valid tag.
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
EfsOpenFileRawInternal
.appx_
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
FileInUse
SetupPhase
onecore\admin\appmodel\common\alluserstoresetupphase.cpp
Config
onecore\admin\appmodel\common\directorypaths.cpp
\Packages
\Local
onecore\admin\appmodel\common\statepaths.cpp
CreateDirectoryIfNecessary %ws
StringCchCat APPDATA
%s\WpSystem
EncryptPackagesFolder %ws %u
StringCchCat APPDATA_LOCAL
StringCchCat LOCAL
EnableFileOrFolderEncryption %ws %u
IsPackageUnregisteredForRoaming: bad packageFamilyName
Already encrypted %ws can't do DPL
GetGenericKeyEncryptionHeader
RegOpenCurrentUser %ws
RegGetValueW %ws
%s\WpSystem\%s\AppData\Local\Packages
AppData
%s%s%s%s
\LocalState
\RoamingState
\AppData
\LocalCache
Path: %ls
\Settings
\TempState
StatePaths
Path: %ls -> %ls
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
PackageSidToPackageCapabilitySid %ls %ls %p
onecore\admin\appmodel\common\accesshelpers.cpp
Impersonate %ls %ls
GetAccess %ls
ConvertSidToString %ls %ls %p
Failed applying DACL from ApplyPackageDataAccessACLs %ls %ls %ls %d %d
ApplyPackageDataAccessACLs %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL taken ownership %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL %ls %ls %ls %d %d
GetNamedSecurityInfo %ls returned null dacl.
PackageSidToPackageCapabilitySid %ls %p
GetNamedSecurityInfo %ls
DACL of %ls missing package*SIDs ? %u
DACL of %ls has duplicated package*SIDs ? %u
GetAce %ls %u %u
DeleteAce %ls %u %u %u 0x%0x
AddAccessAllowedAceEx %ls %u %p
SetNamedSecurityInfo %ls %u
PackageSid
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\xmltools.cpp
@*[local-name()='%ls']
onecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\packageid.cpp
onecore\admin\appmodel\common\metadata.cpp
microsoft.system.package.metadata
onecore\admin\appmodel\common\shellrefresh.cpp
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel\ShellRefresh
%s\%d
onecore\admin\appmodel\common\fspolicy.cpp
onecore\admin\appmodel\common\manifestreader.cpp
Path: %ws
onecore\admin\appmodel\common\ManifestCache.hpp
Not found reason: %d
ManifestCacheOptions
Session:%d!clsid:%s
onecore\admin\appmodel\common\sessionutilities.cpp
BindToObject %ul %ls
\SharedLimitedTime\
RedirectMrtResources
onecore\admin\appmodel\common\configuration.cpp
PackageRepositoryRoot
P:\WindowsApps
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)
onecore\admin\appmodel\common\xpath.cpp
onecore\admin\appmodel\common\signaturetools.cpp
onecore\admin\appmodel\common\prefetchfile.cpp
x86a64
onecore\admin\appmodel\common\packageprocess.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\common\alluserstorepaths.cpp
Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\
Software\
Microsoft.zMicrosoftEdge_8wekyb3d8bbwe
Microsoft.MicrosoftEdge_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeBeta_8wekyb3d8bbwe
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\directoryacls.cpp
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;;FRFX;;;BU)(A;;FRFX;;;AU)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;%s)
D:AI(A;OICI;GA;;;%s)
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
S:PAI
S:PAI(ML;OICI;NW;;;LW)
D:AI(A;OICI;GA;;;%s)(A;OICI;FA;;;%s)
D:AI(A;OICI;GA;;;%s)(A;OICI;FA;;;%s)
onecore\admin\appmodel\common\takeownership.cpp
onecore\admin\appmodel\common\hardlinkingacls.cpp
: user has access 0x
: user has no access
<error>
: could not get SDDL
Logging data because access was denied for file: 
: could not check access
: SDDL is 
LogIfAccessDenied
\WpSystem\
, user SID: 
, could not get user sid
Owner: N/A
Owner: %ls %u
\Users\
GetSecurityDescriptorOwner
onecore\admin\appmodel\common\logfileinformation.cpp
: could not get security descriptor
: owner is 
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
New %u
AccessCheck
SDDL: %ls
No token handle
FileSystemEntryExists %ls succeeded %u
GetFileSecurity %u
Access: %u mask 0x%0x
FileSystemEntryExists %ls
PathCchRemoveFileSpec
SetValueFromString %ls
StripExtendedPathPrefixIfNecessary %ls
LocalExperiencePackage
PerPackageFamilyEntries
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
PerSystemEntries
PerPackageEntries
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
DirtyPackages
onecore\admin\appmodel\osim\src\extensionmanager\extensionmanagerproviders.cpp
SetDeploymentError
AppXDeploymentServer
GetDeploymentError
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
tdh.dll
TdhFormatProperty
api-ms-win-eventing-tdh-l1-1-0.dll
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Entity-Package.hpp
Package\Index\PackageFullName\
\%s.pckgdep
onecore\base\appmodel\runtime\src\dependencyminirepository.cpp
com3.
com4.
com1.
com2.
com7.
com8.
com5.
com6.
lpt2.
lpt3.
com9.
lpt1.
lpt6.
lpt7.
lpt4.
lpt5.
lpt8.
lpt9.
.xn--
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
 onecore\base\appmodel\runtime\src\systemmetadatainternal.cpp
\Packages\
\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
PackageRootFolder
USERS\
CapabilitySids
CapabilityCount
Applications
DefaultStartPage
PackageID
ApplicationContentUris
ApplicationLogo
SupportedUsers
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
OSMinVersion
DevelopmentMode
lpacAppExperience
%s!%s
HTML Format
UniformResourceLocatorW
StorageItems
WebLink
Rich Text Format
FrameworkPackage
appOSVersion
%s_32
%s_64
onecore\admin\appmodel\precompilation\bytecodequeuemanager\bytecodequeuemanager.cpp
DeleteFile %ls
CheckDirectoryExistenceAndLogIfNeeded %ls %u
GetUserTokenAndCheckDirectoryExistence %ls %u
onecore\admin\appmodel\statecreation\lib\statecreation.cpp
DirectoryExists %ls 0x%0x
FamilyMonikerStringToSid %ls
ConvertSidToString %ls
OpenStateExplicitForUserSidString %ls
GetSchemaContext %ls
GetPublisherFolders %ls
CommitPublisherTree %ls
SetPackageFullName
FetchDataFromPolicyCache %ls
Package %ls
SetPublisherFolders %ls
SetPackageFullName %ls
GetAddPublisherArray
GetStateSettingsFolderPath
GetByPackageFullName %ls
FindByPackageAndCategory
GetSystemStateRoot %ls
GetPublisherRoot %ls
GetPublisher %ls
GetSystemAppDataKey %ls
Package %ls %ls %ls
PackageFamilyNameFromFullName
DropImpersonation %ls
OpenDatabaseFromCache
CommitStateDirectoryStructure
CreateAppContainerIfNecessary
GetStateRepositoryPackageInformation
CommitStateRegistryStructure
CommitPublisherTree
SetPublisherFolders
GetSchemaContext
GetPublisherFolders
RegCreateKeyEx
ApplySystemAppDataBaseKeyACLs
CreatePublisherSubFolder Folder[%u] %ls of %zu
RegOpenCurrentUserLocalSettings
RegOpenKeyEx PSR
Schemas
ApplyRegistrySubKeyACLs
CreateWellKnownSid %u
ConvertSidToString %u
RegOpenKeyEx SCHEMAS
LocalAlloc
CreateFromSddlTemplateStringWithTrusteeSidParseToken %ls
GetSecurityDescriptorDacl %ls
GetAce %ls %u
User %ls 0x%0x
ArrayAddString %ls
PackageNameAndPublisherIdFromFamilyName %ls
windows.publisherCacheFolders
FindByPackageExtension
GetPublisherRootFolder %u
SetValue %ls
SetValueFromString %ls %ls
GetPublisherRootFolder
ApplyRegistryACLs %u
CreateSchemaContext
VerifyIfSystemAppDataKeyAlreadyExists
CreateStructured
CreatePublisherRoot %zu
Failed to get handle for folder %ls
SetStateSchema
RemovePublisherFolder Folder[%u]%ls of %u
CreateUnstructured
VerifyIfStateLockExists %u
CreateStateLockRegistration %u
RegisterStateChangeNotification
StateRoot
CreateStateLockRegistration
DestroyAllExcept
GetStateFolderPath %ls persist %u
AppStateSubFolder
CheckDirectoryExistenceWithRepair %ls %u
GetHasCentennial %ls user %ls package %ls
GetTarget %ls persist %u
MountedAppStateFolderTarget
CheckDirectoryExistenceWithRepair %ls %u %u
IsMounted %ls persist %u
CheckStateLeftFromPreviousUninstall %u
VerifyIfStateRootsAlreadyExist %u
SetSecurityInfo %ls
LockTheStateLock %u
CreateUnstructuredStateSubFolder LOCALCACHE
VerifyIfSystemAppDataFolderAlreadyExists %u
CreateUnstructuredStateSubFolder TEMP
CreateUnstructuredStateSubFolder ROAMING
VerifyIfSecureSystemAppDataFolderAlreadyExists
CreateSecureSystemAppDataFolder
CreateSystemAppDataFolder %u
GetHasCentennial
VerifyIfStateChangeNotificationExists
RegisterStateChangeNotification %u
VerifyIfAppDataFolderAlreadyExists %u
CreateAppDataFolder %u
GetAppDataFolderPath
AppDataFolder
GetSecureSystemAppDataFolderPath
SecureSystemAppData
StringCchPrintf LOCAL %u
%s\LocalState
%s\TempState
%s\RoamingState
StringCchPrintf ROAMING %u
%s\LocalCache
StringCchPrintf LOCALCACHE %u
StringCchPrintf TEMP %u
ReplacePackageSidWithPackageCapabilitySid %ls %p %u %u
GetStateSettingsFolderPath %ls
ReplacePackageSidWithPackageCapabilitySid %ls %p %u
SetFolderDataProtectionLevelIfNeeded %ls.
IsMounted %ls
GetTarget %ls
SettingsFolder
CheckDirectoryExistenceWithRepair %ls%u
RecursivelyProtectSubFoldersToLevel %ls level %u
CreateACFolderIfNecessary %ls user %ls package %ls %u
MountedSettingsFolderTarget
Target path %ls not found.
FixAppHiveIfNeeded
GetSystemAppDataFolderPath
CreateSystemStateRootFolderIfNecessary %ls user %ls %ls
CreateStateMountedFolders %ls user %ls package %ls
GetPackagesRootLocationFromStateRoot
CreateDirectoryW %ls %ls
CreatePackagesFolderForVolume %u
CreateDirectoryW %ls
StringCchCopyN %zu systemStateRoot %ls
CreateUnstructuredStateSubFolder %d root %ls
CreateDirectoryTree %ls
StringCchCopyN %zu root %ls
CreateSystemAppDataFolder Root %ls
GetHasCentennial Root %ls
CreateFolderAndSetAcl %ls
CreateACFolderIfNecessary %ls
CreateAppHive %ls user %ls package %ls
CreateAppDataFolder %ls user %ls package %ls
CreateSecureSystemAppDataFolder Root %ls
CreateStateMountedFolders Root %ls user %ls package %ls hasCentennial %u
GetHivePath %u
GetHivePath %u size %u
%s\Settings
StringCchPrintf %ls %u
GetSystemAppDataFolder
GetSystemAppDataFolder %u
%s\AC
StringCchPrintf %u
StringCchPrintf %ls size %u
StringCchLength %ls
GetSecureSystemAppDataFolder
%s\AppData
GetVolumeFromSubpath
CreateWPSystemAndSIDFolders
PathCchCombine %ls subDir %ls size %zu
MoveFile %ls %ls
FileExists %ls
SecureSystemAppDataRetry
CheckDirectoryExistenceAndLogIfNeeded %ls
CreateDirectoryTree %ls, post-fix
Path: %ls subDir %ls
Path: %ls subDir %ls isFullTrust %u runAsSystem %u
Size %u publisherRoot %ls
SubDir %ls
Failed in VerifyIfSecureSystemAppDataFolderAlreadyExists()
StateCreation
Path: %ls hasCentennial %u isFullTrust %u runAsSystem %u user %ls
Container %ls user %ls
SetFolderDataProtectionLevelIfNeeded %u %ls.
ACFolder
Persist %u
Persist %u folder %ls
Locality %u path %ls
Locality %u size %u path %ls
Folder %ls.
Locality %u
Locality %u size %u copiedSize %u fromPath %ls toPath %ls
GetUserProfileFolderPath
Locality %u size %u copiedSize %u path %ls
\settings.dat
StringCchPrintf %ls %llu
CreateFromSddlLiteralString %ls 
StringCchPrintf %ls %zu
IsErrorFatal 0x%0x %ls
Ingoring error for CdplProtectFileToLevelWithResult(%ls)
Ignoring unsupported protection level %u for %ls.
Path %ls level %u.
Level %u for %ls.
RecursivelyProtectSubFoldersToLevel %ls level %u %u
Trying to DPL-protect encrypted %ls?
CdplProtectFileToLevelWithResult %ls level %u protectResult %u %u
CaptureErroPathInCallBack %ls 0x%0x
Helium\Cache
Ignoring protection level %u for %ls.
SetFolderDataProtectionToLevel %ls level %u %u.
RemoveDirectoryTree %ls
RemoveEmptyCentennialStateFolders %ls
Helium
PathCchRemoveFileSpec %ls %u
ApplyExceptions %u
AcquisitionInfo
Path %ls
Key %ls index %u
Subkey %ls
SubDir %ls user %ls
Value %ls
Subkey %ls path %ls
LocalStateFolder
Folder %ls user %ls package %ls publisher %ls
SubDir %ls user %ls package %ls publisher %ls
GetUserTokenAndCheckDirectoryExistence %ls %ls %ls %ls %ls
Folder %ls isFullTrust %u hasCentennial %u
RemoveDirectoryTreeExcept %ls
Folder %ls user %ls package %ls publisher %ls isFullTrust %u
Folder %ls
GetSettingValue %ls %u
CreateStateContainer %ls
WalkDirectoryTree %ls %u
\Settings\roaming.lock
WriteStateContainerValue %ls %ls %u
GetSettingName %ls %u
CreateStateSubcontainer
WriteStateContainerValue %ls (empty) %u
Sanity limit reached %ls!
UnregisterStateChangeNotification %ls %u
Setting %ls %ls %u
(null)
Failed to create full file name for folder search path %ls
Failed to get file attributes from handle for folder %ls
Failed to get file final path for folder %ls
RemoveSecureAppDataFolder %ls
Failed to get file handle for folder %ls
Failed to get file handle for file %ls
Failed to create full file name for file %ls
*.dat*
Failed to create full file name for folder %ls
Failed to get file hardlink information for file %ls
File hardlink identified in files %ls
Failed to compare file paths %ls, %ls
File redirection identified in files %ls and %ls
WalkDirectoryTree %ls %u %u
WalkDirectoryTree %ls path %ls %u
Failed to set file delete disposition for file %ls
Failed to set file delete disposition for folder %ls
Managed.App.Settings
D:PAI(A;;FA;;;SY)(A;;FA;;;BA)
D:(A;CROICI;GA;;;%s)
D:(A;OICI;KA;;;CO)(A;OICI;KA;;;SY)(A;OICI;KA;;;%ls)(A;OICI;KA;;;BA)
D:(A;;CC;;;%ls)
D:(A;;GA;;;SY)(A;;GA;;;%ls)(A;;GA;;;%ls)
onecore\private\base\inc\appmodel\statemanager\statelock.hpp
BuildFilename
RtlAllocateHeap %u
GetStateSettingsFolder
LogFileInfoAlongPath %ls 0x%0x
BuildFilename returned empty lock file path
onecore\admin\appmodel\statecreation\lib\statecreationhelpers.cpp
\roaming.lock
DirectoryExists %ls
AppXDeleteFile
GetAccess
StateLock
GetEffectiveToken %ls
LogFileInfoAlongPath %ls %p 0x%0x
IdentifyUserNameInPath %ls
P3>,RNtQuerySystemInformation
ntdll.dll
MicrosoftTelemetryAssertTriggeredUM
NumBucketLimitReached
NumAllocationFailures
NumLargeEventFailures
SummaryCount
MaxEntriesStored
TotalEntriesFlushed
MaxEntriesFlushed
MinEntriesFlushed
NumFlushes
%PROGRAMDATA%
Software\Microsoft\Windows\Shell\Associations\UrlAssociations\%s
Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\%s
onecore\shell\lib\userchoicehelpers\userchoicecore.cpp
User Choice set via Windows User Experience {D18B6DD5-6124-4341-9318-804003BAFA0B}
%08x%08x
onecore\base\appmodel\statemanager\apiset\lib\statespace.cpp
RtlStringCchCatW %ws size %u
RtlStringCchCopyW
GetStateRootSubfolderPath SETTINGS
GetSubfolderPath %ws size %u
GetStateRootPath %ws size %u
RtlStringCchCopyW %ws size %u
RtlStringCchCatW PREFIX %u
\AC\#!
RtlStringCchCatW PROFILE
Allocate
GetStateRootPathInternal
RtlStringCchCatW RAC %u
path %ws %u %u
GetUserProfileFolderPath %u
AddRestrictedAppContainerPathIfNeccessary
RtlStringCchCatW Family
onecore\base\appmodel\StateManager\ApiSet\Inc\StateHeap.hpp
onecore\printscan\appxpackaging\lib\crypto\src\signaturecheckhelper.cpp
66666
@66\[
@66\[
UserDataServiceOneCore\Server
UserDataSvc
onecore\admin\appmodel\osim\src\deh\appx\common\capabilities.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
windows.activatableClass
onecore\admin\appmodel\packagerepository\common\extensions.cpp
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
*[local-name()='HostRuntime']
@*[local-name()='CurrentDirectoryPath']
Unknown RuntimeBehavior
Unknown TrustLevel
onecore\admin\appmodel\packagerepository\common\tools.cpp
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
PublisherFolders
StateSchema
\Schemas
onecore\base\appmodel\common\stateschema.cpp
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
%USERPROFILE%
Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
onecore\base\appmodel\common\userprofile.cpp
Local AppData
ProfileImagePath
MACHINE\
onecore\admin\appmodel\common\removeregistrytree.cpp
%s\resources.pri
onecore\admin\appmodel\common\mrthelper.cpp
file://
onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
GetStringValue %ws
SetValueFromString %u %ws
EnumValue %u
Sanity limit is hit
CreateSubKey %ws 0x%0x
OpenSubKey
Software\Microsoft\Windows\CurrentVersion\Appmodel
PolicyCache
PolicyCache %ws
CreateSubKey 0x%0x
OpenRootKey
onecoreuap\base\appmodel\statemanager\helpers\policycache.cpp
settingName is empty
*[local-name()='%s']
text()
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
Failure
HResult
LineNumber
Message
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ApplyData::ExtensionHandler::EvaluateInstall: No op for Attached App.
ApplyData::ExtensionHandler::EvaluateInstall
isSettingSyncEnabledCOM
ActivityStoppedAutomatically
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
threadId
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
hresult
threadId
MigrateToCentennialAsDefault
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MigrateToCentennialAsDefault
PartA_PrivTags
wilActivity
hresult
threadId
extOrProtocol
progId
MigrateToCentennialAsDefault
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
extOrProtocol
progId
CUSTOM_CAPABILITY_CHECK
IsRetailUnlocked
ShouldValidateSignature
DidCatalogCheckFailed
DeveloperModeRequired
CapabilityNotSupported
SigCheck
capabilityCheck
sigcheckPassed
packageMoniker
PartA_PrivTags
PersistToStore
PartA_PrivTags
PackageMoniker
AppUserModelId
Settings
IsUpdate
PersistToRegistry
FeatureVariantUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
variantKind
variant
addend
FeatureError
featureId
featureVersion
featureBaseVersion
featureStage
lineNumber
module
process
originFile
originLineNumber
originModule
originName
message
callerModule
callerReturnAddressOffset
originCallerModule
originCallerReturnAddressOffset
FeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
EnabledFeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
PackageFullName
packageFullName7
UserSid
userSid
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
BackgroundTasksHandlerDEHUnitialize
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
BackgroundTasksHandlerDEHUnitialize
PartA_PrivTags
wilActivity
threadId
notifyBamSvc
currentOperation
BackgroundTasksHandlerDEHUnitialize
PartA_PrivTags
wilActivity
hresult
threadId
DefaultBackgroundTasksDEHUnitialize
PartA_PrivTags
wilActivity
threadId
notifyBamSvc
currentOperation
DefaultBackgroundTasksDEHUnitialize
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
DefaultBackgroundTasksDEHUnitialize
PartA_PrivTags
wilActivity
hresult
threadId
error
count
qpackageName
packageVersion
hresult
census
count
qpackageName
packageVersion
PackageState
valid
experimentId
token
PartA_PrivTags
Repository.SetOptions.SetCacheSize
ErrorCode
Filename
PartA_PrivTags
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
Analyze
PartA_PrivTags
wilActivity
threadId
UpdateStatistics
PartA_PrivTags
wilActivity
threadId
Checkpoint
PartA_PrivTags
wilActivity
threadId
StateRepository.ResourcePriority.Inadequate
ErrorCode
DatabasePtr
Partition
WorkId
CpuPriority
IoPriority
MemoryPriority
TransactionCallerID
PartA_PrivTags
Analyze
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Analyze
PartA_PrivTags
wilActivity
hresult
threadId
StateRepository.Database.Statistics
Database
StatementCache.Count
StatementCache.Hits
StatementCache.Misses
StatementCache.Lifespan
CacheUsed
CacheHit
CacheMiss
CacheWrite
CacheSpill
SchemaUsed
StatementUsed
LookasideUsed
LookasideUsedPeak
LookasideHitPeak
LookasideMissSizePeak
LookasideMissFullPeak
DatabasePtr
Partition
WorkId
PartA_PrivTags
UpdateStatistics
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
UpdateStatistics
PartA_PrivTags
wilActivity
hresult
threadId
Database.Checkpoint
Filename
CheckpointMode
SizeInPages
NumberOfPagesCheckpointed
PartA_PrivTags
Checkpoint
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Checkpoint
PartA_PrivTags
wilActivity
hresult
threadId
StateRepository.FailFastBusySnapshot.StatementInProgress
ErrorCode
Index
DatabasePtr
StatementPtr
ExpandedSQL
PartA_PrivTags
StateRepository.FailFastBusySnapshot
ErrorCode
StatementCount
BusyCount
DatabasePtr
FirstBusySQL
ProcessingSQL
PartA_PrivTags
DatabaseCorruption.Detected
ErrorCode
Action
Partition
Filename
Elapsed
FirstReportedUptime
FirstReportedWhen
PartA_PrivTags
SQLite.AutoIndexWarning
ErrorCode
Message
PartA_PrivTags
StateRepository.DatabaseCache.Statistics
Cache.Count
Cache.Hits
Cache.Misses
DatabaseCache.Lifespan
MemoryUsed
MemoryUsedPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
PageCacheOverflow
PageCacheOverflowPeak
ScratchUsed
ScratchUsedPeak
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
MallocSizePeak
MallocCount
MallocCountPeak
PartA_PrivTags
Clear
PartA_PrivTags
wilActivity
threadId
Clear
PartA_PrivTags
wilActivity
hresult
threadId
Clear
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
DatabaseCache.Get
DatabaseConnection
PartA_PrivTags
DatabaseCache.Add
DatabaseConnection
PartA_PrivTags
ActivityFailure
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityFailure
PartA_PrivTags
wilActivity
hresult
threadId
currentContextName
currentContextMessage
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PartA_PrivTags
wilActivity
threadId
Partition
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PartA_PrivTags
wilActivity
hresult
threadId
PostFixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PackagedCom_SetMaxInstallOrder
MaxInstallOrder
PackagedCom_GetMaxInstallOrder
MaxInstallOrder
PackagedCom_SetIncomingPackageInstallOrder
IncomingPackage
IncomingPackageInstallOrder
Repository initialize
readOnly
workId
GetNonExactManifestReader
PackageFullName
SimilarPackageFullName
ManifestReaderFound
PackageStatusUpdateBad_ModifiedPackage
packageFullName
currentStatus
desiredStatus
statusToClear
statusToSet
callOrigin
PackageStatus_DependencyPackageIssue
packageFullName
SetPackageStatusModifiedReason
packageFullName
offlineSoftwareHive
modifiedReason
ProcessInformation
packageFullName
imageName
commandLine
userSid
sessionId
processId
FileInUse
PartA_PrivTags
wilActivity
threadId
filename
FileInUse
PartA_PrivTags
wilActivity
hresult
threadId
FileInUse
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
EfsOpenFileRawFailedAttemptingRetryForWrite
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
EfsOpenFileRawFailedAttemptingRetry
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
EfsOpenFileRawFailed
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
AppliedACLs
GetSessionUserSidQueryTokenFailed
::GetLastError()
GetAppXLogMessageFromDataFailure
result
RemovePIIfromPath
TlgAggregateSummary
PartA_PrivTags
UtcAggParams
Period
MaxEvents
Provider
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
Microsoft.Windows.AppXDeploymentExtensions
Microsoft-Windows-AppModel-State
Microsoft.Windows.Networking.ModernApps.LoopbackAccess
Microsoft.Windows.TlgAggregateInternal
Microsoft.Windows.Shell.CentennialDefaultAssoc
Microsoft.Windows.Security.CustomCapability
Microsoft.Windows.Notifications.Deployment
Microsoft.Windows.Wil.FeatureLogging
Microsoft.Windows.BackgroundAccessManager
Microsoft.Windows.PackageExperiment
Microsoft.Windows.StateRepository.Service
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.ApplicationModel.DesktopAppx
AppxDeploymentExtensions.OneCore.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.tls$
.tls$ZZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
" ,"($"&p0r
&^$P 
24oi'
2 2"y
f"H$h&d(E
&j*v&
 f"" 
 `&B*0,
"&B*0,T&0.`
"&B*0,b&0.N
08286
<J>b@NBLD0F
6|2(H
@R<R:4N8R
XJZb\N^L`0b
Bh(jt
FlBpTl"rT
(lBpTl"rL
\RXRV
08@HPX
08@HPX`h
08@HPXb
08@HP&
VpnClientPluginManifestFind
VpnClientPluginInstall
VpnClientPluginUninstall
MergeRelatedPriFiles
GetCanonicalMergedPriFileNameForPackages
QueryActiveSession
CertDeleteCertificateFromStore
CertFreeCertificateContext
CertAddCertificateContextToStore
CertEnumCertificatesInStore
CryptQueryObject
CertCloseStore
CertFindCertificateInStore
CertOpenStore
CertGetEnhancedKeyUsage
UMgrQueryUserContext
MsgWaitForMultipleObjects
PeekMessageW
TranslateMessage
DispatchMessageW
GetAppExecutionAliasApplicationUserModelIdEx
GetAppExecutionAliasPackageFamilyNameEx
CreateAppExecutionAliasEx2
GetAppExecutionAliasApplicationType
PersistAppExecutionAliasToFileHandleEx
GetAppExecutionAliasExecutableEx
OpenAppExecutionAliasForUserEx
CloseAppExecutionAliasEx
SRCache_Free
SRCache_AllocStringBuffer
SRCacheContext_EnumerateData
SRCacheContext_Close
SRCacheContext_Open
SRCacheContext_GetField_UInt32
SRCacheManager_Close
SRCacheManager_Open
SRDictionaryToPropertySet
SHGetKnownFolderPath
SHChangeNotify
GetVolumeMediaId
GetAppxDataRootPath
AppContainerDeriveSidFromMoniker
AppXGetPackageCapabilities
AppXFreeMemory
GetPackageStatus
GetEffectivePackageStatusForUser
GetPackageStatusForUserSid
GetPackageStatusForUser
GetPackageFullNameFromToken
CouldMultiUserAppsBehaviorBePossibleForPackage
GetSystemMetadataPathForPackage
UpdatePackageStatus
IncrementPackageStatusVersion
CloseState
GetStateRootFolder
GetSecureSystemAppDataFolder
OpenStateExplicit
GetSystemAppDataKey
OpenStateExplicitForUserSid
OpenStateExplicitForUserSidString
GetStateFolder
BiPtActivateInBackgroundEx
GetPackageFullName
FormatApplicationUserModelId
GetApplicationUserModelId
PackageFamilyNameFromId
PackageFamilyNameFromFullName
ParseApplicationUserModelId
GetApplicationUserModelIdFromToken
VerifyPackageFullName
PackageNameAndPublisherIdFromFamilyName
GetStagedPackageOrigin
ClipCallServer
ClipClose
ClipOpen
GetApplicationManifestLanguages
ClearApplicationManifestLanguages
SetApplicationManifestLanguages
Bcp47IsValid
IsNonInboxAllUserPackage
IsPackageInUpgradeKey
IsInboxPackage
DidAppSurviveOSUpgradeForUser
IsPackageOnPreinstalledVolume
DeleteUpdatedPackageKey
QueryApplicationCapabilities
QueryApplicationCapabilitiesEx
ProvisionApplicationCapabilitiesEx
DeprovisionApplicationCapabilities
SCCDFreeParsedElements
SCCDParseFile
SCCDValidateCatalogFile
SCCDValidateAppxFile
BiChangeApplicationStateForPackageName
IsSideloadingEnabled
IsDeveloperModeEnabled
MigrateWritablePackageRootData
SetDesktopAppXMetadataForFolder
CreateDesktopAppXLocalCacheStructure
CloseStateLock
GetPublisherRootFolder
UnregisterStateChangeNotification
CheckIfStateChangeNotificationExists
CreateStateLock
AcquireStateLock
ReleaseStateLock
GetHivePath
GetSystemAppDataFolder
RegisterStateChangeNotification
RegisterStateLock
UnregisterStateLock
CreateStateContainer
CreateStateSubcontainer
WriteStateContainerValue
CloseStateContainer
NetworkIsolationDeleteAppContainerLoopbackRules
NetworkIsolationCreateAppContainerLoopbackRules
NetworkIsolationCreateAppContainer
NetworkIsolationDeleteAppContainer
CfUnregisterSyncRoot
CreateRegistryCompatibilityCollector
CreateRegistryCompatibilityCollectorForUserOrSystemRegister
CreateRegistryCompatibilityManager
ManageCI_ParseSbcpToken
ManageCI_QueryString
ManageCI_FreeSbcpHandle
AddLanguageToMachineLanguageList
InvalidateLanguageResourceCaches
RemoveLanguageFromMachineLanguageList
CdplIsAppDataProtectionSupported
CdplIsSupported
CdplProtectFileToLevelWithResult
MkParseDisplayName
CreateBindCtx
QueryUserToken
WTSQueryUserToken
WTSEnumerateSessionsW
WTSFreeMemory
CryptMsgGetParam
CertGetSubjectCertificateFromStore
CryptMsgClose
FreeTransientObjectSecurityDescriptor
QueryTransientObjectSecurityDescriptor
UMgrEnumerateSessionUsers
UMgrQueryUserToken
UMgrFreeSessionUsers
TreeResetNamedSecurityInfoW
EvtOpenChannelConfig
EvtGetChannelConfigProperty
EvtClose
PackageSidFromFamilyName
StartAndWaitForServiceForUser
IsCommsSystemService
GetUserTokenFromContext
AppxDeploymentExtensions.dll
LoadCategoryNameTable
LoadExtensionRegistrationTable
ShellRefresh
?_Xbad_alloc@std@@YAXXZ
msvcp_win.dll
_initterm
_initterm_e
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
_o____lc_codepage_func
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vswprintf
_o___stdio_common_vswscanf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__stricmp
_o__ui64tow_s
_o__wcsicmp
_o__wcsnicmp
_o__wcstoui64
_o__wtoi
_o_ceilf
_o_free
_o_malloc
_o_memcpy_s
_o_realloc
_o_terminate
_o_wcscat_s
_o_wcscpy_s
_o_wcstok_s
__C_specific_handler
__current_exception
__current_exception_context
memset
__CxxFrameHandler3
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
SHSetValueW
SHCORE.dll
PackageRepositoryFree
RequestPackageOperationImplementation
GetSessionIdsOwnedByUser
AppxDeploymentServer.dll
sqlite3_clear_bindings
sqlite3_bind_null
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_text16
sqlite3_bind_blob
sqlite3_column_int
sqlite3_errcode
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_bytes
sqlite3_column_text16
sqlite3_column_blob
sqlite3_column_type
sqlite3_stmt_busy
sqlite3_sql
sqlite3_db_handle
sqlite3_log
sqlite3_finalize
sqlite3_errmsg
sqlite3_reset
sqlite3_step
sqlite3_next_stmt
sqlite3_get_autocommit
sqlite3_close
sqlite3_open_v2
sqlite3_extended_errcode
sqlite3_file_control
sqlite3_extended_result_codes
sqlite3_db_config
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_changes
sqlite3_total_changes
sqlite3_last_insert_rowid
sqlite3_db_filename
sqlite3_busy_timeout
sqlite3_db_status
sqlite3_create_function_v2
sqlite3_user_data
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_error_code
sqlite3_result_int64
sqlite3_result_int
sqlite3_value_type
sqlite3_value_text16
sqlite3_value_int
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_malloc
sqlite3_result_blob
sqlite3_free
sqlite3_value_int64
sqlite3_result_text16
sqlite3_value_text
sqlite3_prepare_v2
sqlite3_exec
sqlite3_config
sqlite3_trace
sqlite3_profile
sqlite3_snprintf
sqlite3_expanded_sql
sqlite3_status
StateRepository.Core.dll
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
HeapAlloc
GetProcAddress
CreateMutexExW
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
IsDebuggerPresent
EventWriteTransfer
WindowsDeleteString
RegCloseKey
RtlDeleteElementGenericTableAvl
RtlEnumerateGenericTableWithoutSplayingAvl
RtlInsertElementGenericTableAvl
RtlLookupElementGenericTableAvl
LCMapStringEx
RtlCompareUnicodeString
RtlInitUnicodeString
RtlInitializeGenericTableAvl
EventSetInformation
EventRegister
EventUnregister
InitOnceBeginInitialize
InitOnceComplete
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
IsProcessorFeaturePresent
InitializeCriticalSectionAndSpinCount
SetEvent
ResetEvent
CreateEventW
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
GetTokenInformation
ZwFlushBuffersFileEx
RtlNtStatusToDosErrorNoTeb
LookupAccountSidW
OpenThreadToken
RtlAllocateHeap
WriteFile
NtCreateSection
GetLengthSid
CompareStringOrdinal
WindowsCreateStringReference
CoTaskMemFree
SetThreadToken
OpenProcessToken
ZwSetEaFile
CreateFileW
GetFileAttributesW
OpenProcess
SetFileAttributesW
ProcessIdToSessionId
Sleep
RtlLengthSid
CopySid
CreateWellKnownSid
NtClose
GetCurrentThread
DeleteFileW
RtlFreeSid
RtlDeriveCapabilitySidsFromName
RaiseException
NtQueryInformationFile
WindowsGetStringRawBuffer
EqualSid
RtlFreeHeap
LocalFree
ZwOpenFile
NtUnmapViewOfSection
QueryFullProcessImageNameW
EtwEventUnregister
EtwEventWrite
EtwEventRegister
ZwClose
NtMapViewOfSection
RegDeleteValueW
NtDeleteWnfStateName
RegGetValueW
RegOpenKeyExW
RegDeleteTreeW
GetProfileType
RegDeleteKeyW
RegQueryInfoKeyW
RegOpenCurrentUser
RegSetKeyValueW
CreateDirectoryW
FindFirstFileW
WindowsCreateString
CoTaskMemAlloc
FindNextFileW
FindClose
RoActivateInstance
CoTaskMemRealloc
MoveFileExW
GetUserNameW
GetSystemInfo
RtlIsMultiSessionSku
GetModuleFileNameA
InitializeSRWLock
GetModuleHandleExW
CoGetApartmentType
RoTransformError
CoCreateInstance
ConvertSidToStringSidW
RoGetActivationFactory
LocalAlloc
WindowsDuplicateString
AllocateAndInitializeSid
RoOriginateError
CLSIDFromString
DebugBreak
WindowsIsStringEmpty
CompareStringW
WindowsConcatString
UuidFromStringW
StringFromCLSID
ConvertStringSecurityDescriptorToSecurityDescriptorW
RegCreateKeyExW
RegSetValueExW
ImpersonateLoggedOnUser
ImpersonateSelf
NtCreateLowBoxToken
RevertToSelf
QueueUserWorkItem
RegDeleteKeyExW
AddAccessAllowedAceEx
SetSecurityInfo
InitializeAcl
CreateHardLinkW
AddAce
GetFileInformationByHandle
GetFileAttributesExW
GetAce
CopyFileW
GetAclInformation
GetSecurityDescriptorDacl
MoveFileW
CoSetProxyBlanket
RtlPublishWnfStateData
WindowsGetStringLen
I_RpcExceptionFilter
RtlGetDeviceFamilyInfoEnum
SetNamedSecurityInfoW
RtlGetDaclSecurityDescriptor
RtlExpandEnvironmentStrings_U
GetTickCount64
RegQueryValueExW
QuirkIsEnabledForPackage2
GetSystemDirectoryW
CompareStringEx
PathCchAppend
CoCreateGuid
StringFromGUID2
RegNotifyChangeKeyValue
InterlockedPopEntrySList
InterlockedPushEntrySList
WindowsCompareStringOrdinal
GetSecurityInfo
DeleteAce
FileTimeToSystemTime
EventActivityIdControl
NtQuerySystemInformation
PathCchCombine
PathIsFileSpecW
PathFindFileNameW
LookupPrivilegeValueW
AdjustTokenPrivileges
ConvertStringSidToSidW
FreeSid
PathFindExtensionW
IIDFromString
FreeLibrary
LoadLibraryExW
RemoveDirectoryW
GetPersistedRegistryLocationW
RtlIsStateSeparationEnabled
NtSetInformationThread
PathCchRemoveFileSpec
UuidToStringW
RpcStringFreeW
UuidCreate
GetSidSubAuthority
GetSidSubAuthorityCount
WindowsPromoteStringBuffer
WindowsDeleteStringBuffer
WindowsPreallocateStringBuffer
PathAllocCombine
CoGetModuleArchitecture
ReadFile
CryptReleaseContext
GetFileSizeEx
CreateEventExW
CryptGetHashParam
CoWaitForMultipleHandles
CoCreateFreeThreadedMarshaler
CryptDestroyHash
CryptHashData
CryptCreateHash
SystemTimeToFileTime
CryptAcquireContextW
RtlValidSid
QueryUnbiasedInterruptTime
WideCharToMultiByte
RtlIsMultiUsersInSessionSku
GetFileInformationByHandleEx
GlobalMemoryStatusEx
NtQueryInformationThread
LsaLookupGetDomainInfo
LsaLookupFreeMemory
LsaLookupClose
LsaLookupOpenLocalPolicy
MultiByteToWideChar
NtQueryInformationProcess
GetTempPathW
GetLocalTime
RtlCaptureStackBackTrace
WerRegisterCustomMetadata
IsValidSid
GetProcessInformation
RtlAllocateAndInitializeSid
SetSecurityAccessMask
RtlCreateAcl
RtlAddProcessTrustLabelAce
RtlCreateSecurityDescriptor
RtlSetSaclSecurityDescriptor
NtSetSecurityObject
ApiSetQueryApiSetPresence
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
OLEAUT32.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
ntdll.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
USERENV.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-sysinfo-l2-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
RPCRT4.dll
profapi.dll
api-ms-win-core-threadpool-legacy-l1-1-0.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-stateseparation-helpers-l1-1-0.dll
api-ms-win-core-com-private-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-processthreads-l1-1-3.dll
api-ms-win-core-apiquery-l1-1-0.dll
combase.dll
ResourceManagerQueueGetCurrentDepth
ResourceManagerQueueReset
GetInternalReferenceBlobForManifestValue
ResourceManagerQueueGetMrtCachePathForPackage
MrmCoreR.dll
NetworkIsolationSetupAppContainerBinaries
api-ms-win-net-isolation-l1-1-0.dll
RtlEqualUnicodeString
RtlUpcaseUnicodeChar
RtlWow64IsWowGuestMachineSupported
NtQueryInformationToken
RtlCopySid
RtlConvertSidToUnicodeString
RtlFreeUnicodeString
RtlReleaseSRWLockShared
RtlAcquireSRWLockShared
RtlReleaseSRWLockExclusive
RtlAcquireSRWLockExclusive
RtlDetermineDosPathNameType_U
RtlDowncaseUnicodeString
RtlInitializeCriticalSection
RtlDeleteCriticalSection
RtlEnterCriticalSection
RtlLeaveCriticalSection
RtlReportException
RtlDosPathNameToNtPathName_U_WithStatus
NtCreateFile
NtFsControlFile
NtAccessCheck
NtSetInformationVirtualMemory
RtlAddAce
WindowsStringHasEmbeddedNull
GetSystemWow64Directory2W
CopyFileExW
RegGetKeySecurity
RegSetKeySecurity
GetSecurityDescriptorOwner
RegEnumKeyExW
RegEnumValueW
IsWellKnownSid
PathCchSkipRoot
PathAllocCanonicalize
PathCchRemoveBackslash
SHCreateMemStream
GetFinalPathNameByHandleW
GetVolumeNameForVolumeMountPointW
GetWindowsDirectoryW
DeviceIoControl
CreateSymbolicLinkW
GetNamedSecurityInfoW
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
SetSecurityDescriptorOwner
SetSecurityDescriptorGroup
MakeSelfRelativeSD
CreateFileMappingW
MapViewOfFile
UnmapViewOfFile
SetFileInformationByHandle
K32EnumProcesses
RegLoadAppKeyW
FindFirstFileExW
ConvertSecurityDescriptorToStringSecurityDescriptorW
SetEntriesInAclW
GetFileSecurityW
AccessCheck
TdhGetEventMapInformation
TdhGetEventInformation
TdhEnumerateProviderFieldInformation
TlsAlloc
TlsGetValue
TlsSetValue
RoOriginateErrorW
GetVersionExW
SetSecurityDescriptorControl
RtlGetAce
DestroyPrivateObjectSecurity
CreatePrivateObjectSecurityEx
RegEnumKeyW
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-eventing-tdh-l1-1-0.dll
?_Xlength_error@std@@YAXPEBD@Z
?_Xout_of_range@std@@YAXPEBD@Z
?_Winerror_map@std@@YAHH@Z
?_Syserror_map@std@@YAPEBDH@Z
?fail@ios_base@std@@QEBA_NXZ
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?_Ipfx@?$basic_istream@GU?$char_traits@G@std@@@std@@QEAA_N_N@Z
?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAPEAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG0@Z
?eback@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?setg@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??1_Lockit@std@@QEAA@XZ
??0_Lockit@std@@QEAA@H@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?id@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@2V0locale@2@A
?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z
?_Getcat@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?fill@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAGG@Z
?get@?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@QEBA?AV?$istreambuf_iterator@GU?$char_traits@G@std@@@2@V32@0AEAVios_base@2@AEAHPEAUtm@@PEBG4@Z
?pbase@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
??0?$basic_iostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@H@Z
??1?$basic_iostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?setf@ios_base@std@@QEAAHHH@Z
??Bid@locale@std@@QEAA_KXZ
memmove_s
wcschr
wcsstr
wcsrchr
PackageRepositoryAllocate
GetModuleHandleExA
TryAcquireSRWLockExclusive
CharLowerBuffW
ResolveDelayLoadedAPI
DelayLoadFailureHook
FormatMessageA
NdrClientCall2
RpcBindingCreateW
RpcBindingBind
RpcExceptionFilter
RpcBindingFree
api-ms-win-core-string-l2-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
RtlExpandEnvironmentStrings
AccTreeResetNamedSecurityInfo
NTMARTA.dll
strcmp
wcscmp
memcmp
memcpy
memmove
.?AVResultException@wil@@
.?AVexception@std@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVruntime_error@std@@
.?AVsystem_error@std@@
.?AVfilesystem_error@filesystem@std@@
.?AV_System_error@std@@
.?AVbad_cast@std@@
.?AVtype_info@@
<tock
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
AppX Deployment Extensions OneCore DLL
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
AppXDeploymentExtensions.onecore.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
AppXDeploymentExtensions.onecore.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Restricted
MAPSL
VMAPD
BMAP<
VMAP4
VMAPL
VMAP|
VMAPD
VMAP<
VMAPD
VMAP$
VMAP,
VMAPd
ApplicabilityStateEnumMap
AppxPackageOriginEnumMap
AppxSignatureOriginEnumMap
ArchitectureEnumMap
DependencyPackageApplicabilityStateMap
DeploymentOperationEnumMap
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentStateHandlerEnumMap
DeviceAccessVetoReasonMap
OSIMListTypeEnumMap
OptionalPackageSubtype
PlatformPolicyBlockReasonMap
PreRegisterOptionsBitMap
TargetPlatformEnumMap
EventData
ErrorCode
ErrorCode
TEMP 
EventData
String1
String2
String1
String2
TEMP8
EventData
ErrorCode
UInt32Value
ErrorCode
UInt32Value
TEMP$
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
EventData
ErrorCode
String1
String2
String3
ErrorCode
String1
String2
String3
EventData
ErrorCode
String1
String2
Bool1
ErrorCode
String1
String2
Bool1
TEMPt
[S'rA9
EventData
String
Bool1
Bool2
String
Bool1
Bool2
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
TEMPP
EventData
TEMPp
EventData
ExtensionsCategoryNames
PackageName
ExtensionsCategoryNames
PackageName
EventData
PackageName
PackageName
TEMP<
EventData
ErrorCode
ErrorMessage
ErrorCode
ErrorMessage
EventData
ErrorCode
ErrorCode
a7l6y+
EventData
ErrorCode
ErrorMessage
CategoryName
ErrorCode
ErrorMessage
CategoryName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMP0
EventData
DehName
RunAsSystem
DehName
RunAsSystem
EventData
PackageName
CategoryName
KeyName
PackageName
CategoryName
KeyName
EventData
PackageName
PackageName
EventData
ExtensionName
ExtensionName
TEMPh
EventData
FileName
Column
ErrorCode
PackageName
FileName
Column
ErrorCode
PackageName
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
FileName
Column
ErrorCode
PackageName
ErrorText
TEMPX
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
TEMP$
EventData
PackageName
ErrorCode
ErrorText
ExtendedData
PackageName
ErrorCode
ErrorText
ExtendedData
TEMP8
EventData
UniqueKey
PackageName
UniqueKey
PackageName
EventData
Category
PackageName
ErrorText
ErrorCode
Category
PackageName
ErrorText
ErrorCode
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
EventData
ErrorCode
PackageName
ActivatableClassIdentifier
ErrorCode
PackageName
ActivatableClassIdentifier
TEMPt
EventData
ErrorCode
ActivatableClassIdentifier
ErrorCode
ActivatableClassIdentifier
EventData
ErrorCode
ActivatableClassIdentifier
ContractID
ErrorCode
ActivatableClassIdentifier
ContractID
TEMPX
EventData
ErrorCode
InterfaceIdentifier
ErrorCode
InterfaceIdentifier
TEMP@
EventData
ErrorCode
AttributeName
ErrorCode
AttributeName
TEMP 
EventData
ErrorCode
CLSID
ErrorCode
CLSID
EventData
ErrorCode
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
OutgoingPackageName
IncomingPackageName
OutgoingPackageName
EventData
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
EventData
OutgoingPackageName
OutgoingPackageName
TEMPX
EventData
OutgoingPackageName
ErrorCode
OutgoingPackageName
ErrorCode
EventData
ErrorCode
ErrorCode
+dZrp>N
EventData
ErrorContext
ErrorContext
TEMPP
EventData
ErrorContext1
ErrorContext2
ErrorContext1
ErrorContext2
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMPh
EventData
Filename
Column
ErrorCode
PackageName
Filename
Column
ErrorCode
PackageName
EventData
Filename
Column
ErrorCode
PackageName
ImagePath
Filename
Column
ErrorCode
PackageName
ImagePath
TEMPD
EventData
PackageFullName
Settings
PackageFullName
Settings
t+=D{
EventData
PackageFullName
PackageFullName
t+=D{
EventData
PackageFullName
PackageFullName
TEMP<
EventData
PackageFullName
Result
PackageFullName
Result
EventData
PackageFullName
PeriodicUpdateRecurrence
PackageFullName
PeriodicUpdateRecurrence
TEMP<
EventData
DeploymentOperation
PackageFullName
ErrorCode
DeploymentOperation
PackageFullName
ErrorCode
TEMP@
EventData
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
TEMP<
EventData
SummaryError
ErrorCode
SummaryError
ErrorCode
TEMP(
EventData
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPP
EventData
TEMP\
EventData
DeploymentOperation
PackageFullName
UserSid
CallingProcess
DeploymentOperation
PackageFullName
UserSid
CallingProcess
N6Eh0
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPT
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPp
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
ErrorCode
ErrorCode
EventData
ApplicationUserModelId
ApplicationUserModelId
TEMPd
EventData
ApplicationUserModelId
ErrorCode
ApplicationUserModelId
ErrorCode
TEMPD
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
PackageFullName
StatusToClear
StatusToSet
CallOrigin
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
EventData
PackageFullName
BiApplicationStateTransition
ErrorCode
PackageFullName
BiApplicationStateTransition
ErrorCode
EventData
PackageFullName
Context
ErrorCode
PackageFullName
Context
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
DeploymentState
NextDeploymentState
ErrorCode
DeploymentState
NextDeploymentState
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
HRESULT
HRESULT
TEMP,
EventData
Architecture
Architecture
EventData
PackageUri
PackageUri
EventData
reason
package
reason
package
TEMPT
EventData
PackageFullName
PolicyReason
PackageFullName
PolicyReason
EventData
DeploymentOperation
PackageFullName
Summary
DeploymentOperation
PackageFullName
Summary
EventData
OrphanedAppDataVolume
MitigatedAppDataVolume
OrphanedAppDataVolume
MitigatedAppDataVolume
EventData
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
ls:\9
EventData
packageFullName
userSid
hresult
packageFullName
userSid
hresult
t+=D{
EventData
PackageFullName
PackageFullName
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPP
EventData
PackageFullName
CheckResult
PackageFullName
CheckResult
TEMP`
EventData
PackageFullName
SignatureOrigin
PackageFullName
SignatureOrigin
TEMPX
EventData
PackageFullName
PackageOrigin
PackageFullName
PackageOrigin
EventData
filename
Error
filename
Error
EventData
ReturnVal
ReturnVal
EventData
filename
filename
FB&_W
EventData
Error
PackageMoniker
SettingName
SettingValue
Index
Error
PackageMoniker
SettingName
SettingValue
Index
TEMP(
EventData
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
EventData
DependentPackageName
SupplierPackageName
Reason
DependentPackageName
SupplierPackageName
Reason
TEMP4
EventData
Error
PackageMoniker
Error
PackageMoniker
EventData
PackageFullName
IsInstalled
Options
PackageFullName
IsInstalled
Options
TEMP$
EventData
PackageFullName
Flags
HResult
CallingProcess
PackageFullName
Flags
HResult
CallingProcess
EventData
HResult
Options
CallingProcess
HResult
Options
CallingProcess
EventData
HResult
HResult
TEMP\
EventData
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
EventData
PackageFamilyName
PackageFamilyName
EventData
PackageFamilyNameOne
PackageFamilyNameTwo
PackageFamilyNameOne
PackageFamilyNameTwo
EventData
PackageMoniker
PackageMoniker
TEMPl
EventData
DeploymentOperation
PackageMoniker
DeploymentOperation
PackageMoniker
EventData
PackageName
PackageVersion
PackageVersion2
PackageName
PackageVersion
PackageVersion2
EventData
PackageVersion
PackageVersion
TEMP4
EventData
PackageName
XapState
PackageName
XapState
TEMP(
EventData
UserSid
ErrorCode
UserSid
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP0
EventData
TileStore
ErrorCode
TileStore
ErrorCode
EventData
AppId
AppId
TEMP\
EventData
PackageMoniker
PackageMoniker2
PackageMoniker
PackageMoniker2
EventData
PackageMoniker
PackageMoniker2
PackageMoniker3
PackageMoniker
PackageMoniker2
PackageMoniker3
EventData
PackageName
PackageName
TEMPX
EventData
PackageName
DeploymentOptions
PackageName
DeploymentOptions
EventData
PackageName
DeploymentOptions
Publisher
PackageName
DeploymentOptions
Publisher
TEMPt
EventData
IntegrityLevel
CallerPackageFullName
IntegrityLevel
CallerPackageFullName
EventData
PackageName
StageForInPlace
ApplyInPlace
PackageName
StageForInPlace
ApplyInPlace
TEMPH
EventData
PackageName
PublisherName
PackageName
PublisherName
EventData
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
EventData
PackageName
PackageArchitecture
MachineArchitecture
PackageName
PackageArchitecture
MachineArchitecture
TEMPL
EventData
PackageFullName
MountPoint
PackageFullName
MountPoint
TEMP`
EventData
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
EventData
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
TEMP\
EventData
DeploymentPath
FileSystemType
DeploymentPath
FileSystemType
EventData
ErrorCode
ErrorCode
EventData
PackageMoniker
FileName
ErrorCode
PackageMoniker
FileName
ErrorCode
TEMP,
EventData
FileName
ErrorCode
FileName
ErrorCode
EventData
FileName
FileName
EventData
RequestCount
RequestCount
EventData
FileName
Count
MaxCount
FileName
Count
MaxCount
XbVS>
EventData
PackageFullName
ApplicabilityState
PackageFullName
ApplicabilityState
EventData
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
TEMPT
EventData
DeploymentOperation
Argument
DeploymentOperation
Argument
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
TEMP 
EventData
PathOne
PathTwo
PathOne
PathTwo
EventData
PackageNameOne
PackageNameTwo
PackageNameOne
PackageNameTwo
TEMP$
EventData
PackageName
PackageName
._Q%N
EventData
PackageName
MediaID
PackageName
MediaID
EventData
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
EventData
TEMPD
EventData
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
TEMP|
EventData
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
EventData
PackageFullName
Bundle
AppDataVolume
PackageFullName
Bundle
AppDataVolume
TEMPH
EventData
RegistryKeyName
ErrorCode
RegistryKeyName
ErrorCode
EventData
RegistryKeyName
ValueName
ErrorCode
RegistryKeyName
ValueName
ErrorCode
cW*q.
EventData
PackageFullNames
PackageFullNames
t+=D{
EventData
PackageFullName
PackageFullName
EventData
RegistryKeyName
RegistrySubKeyName
ErrorCode
RegistryKeyName
RegistrySubKeyName
ErrorCode
EventData
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
InstallPackageList
EndOfLifePackageList
InstallPackageList
EndOfLifePackageList
EventData
UserSid
UserSid
EventData
UserSid
MainPackageFullName
ErrorCode
UserSid
MainPackageFullName
ErrorCode
TEMPH
EventData
UserSid
PackageFamilyName
UserSid
PackageFamilyName
TEMP$
EventData
Error
PackageFamilyName
FoundState
ErrorCode
Error
PackageFamilyName
FoundState
ErrorCode
TEMPt
p*X3A
EventData
PackageFamilyName
SettingSyncEnabled
PackageFamilyName
SettingSyncEnabled
TEMP@
EventData
PackageName
BinaryCount
PackageName
BinaryCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPP
EventData
PackageName
CapabilityCount
PackageName
CapabilityCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
ApplicationCount
ErrorCode
PackageName
ApplicationCount
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
Location
PackageName
ErrorCode
Location
PackageName
TEMP8
EventData
Column
Package
Column
Package
0RP\M
EventData
Column
Package
Column
Package
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
y<FQ1
EventData
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPD
EventData
PackageUri
PackageFolder
PackageUri
PackageFolder
EventData
PackageUri
PackageUri
TEMP,
EventData
FilePath
ErrorCode
FilePath
ErrorCode
TEMP4
EventData
FilePath
ErrorCount
FilePath
ErrorCount
EventData
ErrorCount
ErrorCount
TEMPD
EventData
DeploymentOperation
PackageName
ErrorCode
LineNumber
DeploymentOperation
PackageName
ErrorCode
LineNumber
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
ErrorCode
F<}lf-#X
EventData
ErrorCode
VolumeID
MediaID
ErrorCode
VolumeID
MediaID
TEMP@
EventData
PackageName
UserSid
ErrorCode
AppDataErrorOperation
PackageName
UserSid
ErrorCode
AppDataErrorOperation
EventData
PackageTableRowKey
UserSid
ErrorCode
PackageTableRowKey
UserSid
ErrorCode
EventData
SourceFilePath
LinkDestinationPath
ErrorCode
SourceFilePath
LinkDestinationPath
ErrorCode
TEMP,
[IzZG
EventData
FilePath
FileSize
FilePath
FileSize
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
EventData
PackageUri
PackageFolder
PackageFolderOld
PackageUri
PackageFolder
PackageFolderOld
EventData
PackageMonikerOld
PackageMonikerNew
ErrorCode
PackageMonikerOld
PackageMonikerNew
ErrorCode
G6?lYi
EventData
FileName
Offset
FileName
Offset
EventData
ReturnValue
ReturnValue
EventData
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
TEMPH
EventData
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
,Zndrz
EventData
SourceFolderPath
DestinationFolderPath
ErrorCode
SourceFolderPath
DestinationFolderPath
ErrorCode
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
HV@k>
EventData
ManifestPath
ErrorCode
ErrorString
ManifestPath
ErrorCode
ErrorString
TEMPx
EventData
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
EventData
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
EventData
PackageMoniker
Writesize
Filesize
PackageMoniker
Writesize
Filesize
TEMPD
EventData
PackageMoniker
ErrorCode
PackageMoniker
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
0RP\M
EventData
Column
Package
Column
Package
EventData
Column
ErrorCode
Package
ErrorCodeDescription
Column
ErrorCode
Package
ErrorCodeDescription
TEMPT
EventData
PackageFullName
ResourceName
PackageFullName
ResourceName
EventData
PackageFullName
ResourceName
ErrorCode
PackageFullName
ResourceName
ErrorCode
TEMPT
EventData
ErrorCode
MediaID
UserSid
Package
ErrorCode
MediaID
UserSid
Package
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
EventData
PackageFullName
Architecture
ErrorCode
PackageFullName
Architecture
ErrorCode
EventData
PackageFullName
Architecture
Count
PackageFullName
Architecture
Count
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
PackageFullName
FullFilePath
ErrorCode
PackageFullName
FullFilePath
ErrorCode
TEMPD
EventData
PackageFullName
ExitCode
PackageFullName
ExitCode
TEMPH
^lBaaAV
EventData
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPL
EventData
PackageFullName
waitResult
PackageFullName
waitResult
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
SessionKey
#StreamingDataSourcePrefetchCanceled
SessionKey
StreamingDataSourcePrefetchCanceled
TEMP 
EventData
CLSID
ErrorCode
CLSID
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP4
EventData
FolderPath
ErrorCode
FolderPath
ErrorCode
EventData
PackageFullName
Action
ErrorCode
PackageFullName
Action
ErrorCode
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
t+=D{
EventData
PackageFullName
PackageFullName
TEMPh
EventData
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
TEMP8
EventData
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
TEMPL
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
TEMP(
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
t+=D{
EventData
PackageFullName
PackageFullName
EventData
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
TEMPL
EventData
packageFullName
returnCode
packageFullName
returnCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
ErrorText
PackageName
ErrorCode
ErrorText
TEMP@
EventData
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
Section
ProcessId
FileName
ErrorCode
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
TEMPp
EventData
FileName
ErrorCode
HeaderAddr
ProcessId
FileName
ErrorCode
HeaderAddr
ProcessId
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
TEMP<
EventData
FileName
ExceptionCode
FileName
ExceptionCode
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
TEMPT
h5!wE
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
TEMPh
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
R]^F=
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
TEMP@
W3^+`x
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
PackageName
ErrorCode
FileName
Column
Element
Attribute
EventData
PackageFamilyName
PackageFamilyName
TEMPP
EventData
PackageFamilyName
ErrorCode
PackageFamilyName
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP@
EventData
ServiceStatus
ErrorCode
ServiceStatus
ErrorCode
TEMP8
EventData
PackageFullName
Flags
PackageFullName
Flags
EventData
PackageFullName
Flags
ErrorCode
PackageFullName
Flags
ErrorCode
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPX
EventData
PackageFullName
NumberOfFiles
PackageFullName
NumberOfFiles
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
TEMP<
EventData
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
t+=D{
EventData
PackageFullName
PackageFullName
TEMPD
EventData
PackageFullName
FilePath
PackageFullName
FilePath
TEMP,
EventData
PriPaths
ErrorCode
PriPaths
ErrorCode
TEMP|
EventData
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
EventData
HostingModel
HostingModel
EventData
AppId
AppExtensionName
Error
AppId
AppExtensionName
Error
TEMP|
EventData
FileName
Error
FileName
Error
TEMP8
EventData
PackageFullName
Error
PackageFullName
Error
EventData
FileName
Column
ErrorCode
PackageName
PathName
FileName
Column
ErrorCode
PackageName
PathName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
FilePath
Message
PackageName
FilePath
Message
EventData
PackageName
FilePath
ErrorCode
Message
PackageName
FilePath
ErrorCode
Message
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
EventData
ErrorCode
ForMove
ErrorCode
ForMove
EventData
ErrorCode
ErrorCode
EventData
TEMP$
EventData
ErrorCode
Source Path
Destination Path
Flags
ErrorCode
Source Path
Destination Path
Flags
TEMP4
EventData
PackageFullname
PackageFullname
EventData
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
TEMPP
,p<DR
EventData
PackageFullname
errorString
PackageFullname
errorString
EventData
SearchString
HresultCode
ErrorCode
Index
SearchString
HresultCode
ErrorCode
Index
TEMPt
EventData
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
EventData
PackageFullName
HostRuntimePackageFullName
ErrorCode
PackageFullName
HostRuntimePackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
DeploymentOperation
Package
OriginalUser
DeploymentOperation
Package
OriginalUser
TEMP<
EventData
DeploymentOperation
Package
OriginalUser
ErrorCode
DeploymentOperation
Package
OriginalUser
ErrorCode
TEMP<
EventData
PackageSID
PackageFullName
Capabilities
ErrorCode
PackageSID
PackageFullName
Capabilities
ErrorCode
^m&5t
EventData
PackageFullName
EventlogDllFamilyPath
Operation
PackageFullName
EventlogDllFamilyPath
Operation
TEMP$
EventData
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
TEMPP
EventData
PackageName
ProviderGuid
ProviderName
OtherPackageName
PackageName
ProviderGuid
ProviderName
OtherPackageName
EventData
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
TEMPh
EventData
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
PRVAd
Microsoft-Windows-AppXDeployment-Server
OPCOx
win:Info
win:Start
win:Stop
win:Error
win:Warning
win:Informational
win:Verbose
TASKH$
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.ContainerDeploymentStateHandler
AppXDeployment.Task.Server.Deployment.MutablePackageDirectoryStateHandler
AppXDeployment.Task.Server.VolumeRequestManager
APPXDEPLOYMENTSERVER_KEYWORD
VISUALELEMENTS_EXTENSION_KEYWORD
OSIM_KEYWORD
STATE_DEH_KEYWORD
AUTOPLAY_DEH_KEYWORD
COLLECTOREXTENSION_DEH_KEYWORD
PACKAGED_COM_DEH_KEYWORD
FILETYPE_DEH_KEYWORD
TRUST_DEH_KEYWORD
LICENSING_DEH_KEYWORD
DATAPACKAGEHOST_DEH_KEYWORD
CERTIFICATES_DEH_KEYWORD
APPX_BASE_DEH_KEYWORD
PROTOCOL_DEH_KEYWORD
MOCOM_HELPER_KEYWORD
RUNTIME_DEH_KEYWORD
BACKGROUND_TASKS_DEH_KEYWORD
DOWNLOAD_DEH_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
MRT_DEH_KEYWORD
DSM_DEH_KEYWORD
APPMODEL_RUNTIME_DMR_KEYWORD
RESTRICTED_LAUNCH_DEH_KEYWORD
DEVICEACCESS_DEH_KEYWORD
INDEXEDDB_DEH_KEYWORD
MSAC_SIGNOUT_DEH_KEYWORD
SEARCHINDEXER_EXTENSION_KEYWORD
APPSYNC_DEH_KEYWORD
APPLYDATA_DEH_KEYWORD
ALARM_DEH_KEYWORD
GEOLOCATION_DEH_KEYWORD
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
UPDATE_MIGRATION_TASK_DEH_KEYWORD
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
APPSERVICE_DEH_KEYWORD
USERDATAACCESS_EXTENSION_KEYWORD
DIALPROTOCOL_DEH_KEYWORD
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
PHONECALLORIGIN_DEH_KEYWORD
WMIPROVIDER_EXTENSION_KEYWORD
LXP_DEH_KEYWORD
SERVER_EXTENSION_KEYWORD
ms:ReservedKeyword44
ms:Telemetry
ms:Measures
ms:CriticalData
win:ResponseTime
EVNTT
WEVT_TEMPLATE
en-US
