!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$`H3
L$XE3
D$(E3
L$pH3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
L$0H3
D$`E3
L$pH3
|$ UH
D$(E3
D$`E3
L$pH3
D$(E3
D$(E3
L$pH3
L$pH3
D$pE3
D$XE3
D$(E3
L$XE3
D$(E3
T$hE3
D$(E3
D$(E3
T$hE3
T$hE3
D$(E3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
fA94@u
fA94@u
fA94@u
A_A^_^]
\$ UH
D$(E3
D$pE3
T$XE3
L$XE3
D$(E3
D$(E3
D$(E3
|$ UH
D$(E3
D$(E3
L$XE3
D$(E3
@USWH
f9<Bu
f9<Bu
f9<Bu
f9<Ju
@USVWH
f94Bu
f94Ju
@USVWH
f94Bu
f94Bu
f94Ju
L$ E3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
fA94@u
A_A^_^]
@USVWATAVAWH
f9<Bu
f9<Bu
f9<Bu
f9<Bu
f9<Bu
A_A^A\_^[]
D$XE3
L$pH3
D$pE3
L$pH3
\$ WH
f9<Bu
f9<Ju
D$(E3
D$pE3
T$XE3
D$(E3
D$(E3
D$(E3
t$ UH
D$pE3
D$(E3
\$ UVWAVAWH
f9<Bu
f9<Bu
f9<Bu
A_A^_^]
D$(E3
D$pE3
D$hE3
\$ UVWATAVH
f94Bu
fA94@u
fA94@u
A^A\_^]
D$`E3
D$pE3
\$ WH
f9<Bu
f9<Ju
D$(E3
@USVWH
f94Bu
f94Ju
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
\$ WH
@SVWH
SVWAVH
8A^_^[
WAVAWH
\$8H;
A_A^_
p:_0#
WAVAWH
0A_A^_
L$ SUVWH
8_^][
\$ UH
M H1E
 H3E H3E
ntelA
ineID
H SVWH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
WAVAWH
fD9<Ou
D9;}OH
A_A^_
x AVH
@USVWATAUAVAWH
9\$8|
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAUAVAWH
t(@8=
@8=,VV
A_A^A]A\_^[]
t:fA9(t4H
fA9,@u
p AWH
x AVH
UVWAVAWH
H!\$8H
H!\$@I
A_A^_^]
UVWAVAWH
H!\$8H
H!\$@I
H!_(H!_0H!_8H!_@M
A_A^_^]
UVWAVAWH
L$0E3
L$0fD
A_A^_^]
L$ UVWATAUAVAWH
pA_A^A]A\_^]
97tKA
A8]8t
x AVH
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
90tBH
\$ VWAVH
D$0H;
u%H!\$8H
D$@E3
VWAVH
0A^_^
L$ SWH
L$XH+
WAVAWH
}0H+}(H
0A_A^_
t$ WAVAWH
{8D8{@uXL9?u$E3
0A_A^_
VWATAVAWH
 A_A^A\_^
UWATAVAWH
A_A^A\_]
VWAVH
 A^_^
WATAUAVAWH
T$0L+
A_A^A]A\_
L$ UVWATAUAVAWH
C D8U@u
A_A^A]A\_^]
UVWATAUAVAWH
T$dfD
D$hfE
D+D$x
D+D$xD
A_A^A]A\_^]
t$ WH
t$ WH
SVWAVAWH
`A_A^_^[
UVWATAUAVAWH
}HL9M@t
L97sKI
 A_A^A]A\_^]
WAVAWH
rHfD9?w
C9fD9?u,
 A_A^_
t$ WATAUAVAWH
f9<Au
f9<Au
fD94Ou
tG9)u
|$(H;
|$0H;
|$8H;
|$HH;
|$pH;
t$XE3
t4E88t/H
E8<0u
 A_A^A]A\_
x AVH
uPH9i
L$ SVWH
L$ SVWAVH
8A^_^[
t$ WAVAWH
0A_A^_
VWATAVAWH
 A_A^A\_^
x UAVAWH
T$0H+
HcL$ HcD$$H
A_A^]
qrPv`
D$49L$8t
9L$Dt
WAVAWH
fD96u)L
 A_A^_
x AVH
WAVAWH
 A_A^_
9E ugH
x AVH
UVWAVAWH
L$HH3
PA_A^_^]
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PL;
A_A^]
L$(E3
@SUVWATAVAW
A_A^A\_^][
t$ WH
D#L$0D
3D$8%x
USVWATAUAVAWH
A_A^A]A\_^[]
@USVWH
\$(D#
@8u(t
x_^[]
pIT2 
D$P98t
L$`H;
L$`H3
x UATAUAVAWH
L9p(w
L9p(v
L9w(v5H
H;w(s
L9whvHH
H;whs
L9p(v;I
H;H(r
H;H(r
L9phvfI
H;Hhr0I
H;Hhr
L9p(A
L9p(vuI
H;H(r0I
H;H(r
L9phvtI
H;Hhr2I
H;Hhr
H;XHr
L$ E3
H;XHr
L9pHvBH;XHr
H;XHr
A_A^A]A\]
USVWATAUAVAWH
D8q!t
H9XHvFA
H;XHr
H;XHr
L$ E3
L$ E3
L$ E3
D$xE3
d$`L9d$X
L$ E3
D$xE3
H;XHr
H;XHr
A_A^A]A\_^[]
@USVWATAUAVAWH
HA_A^A]A\_^[]
L$ UVWATAUAVAWH
L$8E3
T$0@8
A_A^A]A\_^]
t$ WH
H;K@H
UVWATAUAVAWH
9]PtX
PA_A^A]A\_^]
@USVWATAUAVAWH
HA_A^A]A\_^[]
\$PtWH
t#f9(t
\$Pt:H
t#f9(t
D$(E3
D$PE3
L$PH3
L$ UH
L$`H3
H UATAUAVAWH
t$ E3
t$ E3
A_A^A]A\]
qZ]|@.
x AVH
@USVWAUAVAWH
L9npw
A_A^A]_^[]
f9<Au
f94Au
x AVH
L$hE3
x AVH
L$hE3
WAVAWH
 A_A^_
USVWATAUAVAWH
A_A^A]A\_^[]
D$ E3
|$0E3
UATAUAVAWH
A_A^A]A\]
UWATAVAWH
A_A^A\_]
UVWAUAVH
H9\$H
H9\$0t
H;D$HsN
A^A]_^]
x UAVAWH
D8}_u
A_A^]
UWATAUAVH
A^A]A\_]
VWAVH
|$ E3
@A^_^
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
 A^_^
t$ WH
EX9G$tV
VWAVH
 A^_^
t$ UWATAVAWH
A_A^A\_]
UATAUAVAWH
A_A^A]A\]
UWAUAVAWH
A_A^A]_]
x AVH
9N4t^
VWAVH
D;u(r
 A^_^
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
D8d$8t2L
A_A^A]A\_^]
p WAVAWH
 A_A^_
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
p WATAUAVAWH
d$pA!4$I
L$`D;
 A_A^A]A\_
UVWATAUAVAWH
~(D8n8tCI
D$X9F4tj
D9/v,
0A_A^A]A\_^]
p AWH
9N4tlA
UVWATAUAVAWH
!t$p!
!0H!t$ I
A9}0t3H
|$xD;
0A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
pA_A^A]A\_^]
UAVAWH
A_A^]
DD$HL
UVWAVAWH
L$ E3
@A_A^_^]
UVWAVAWH
A_A^_^]
USVWATAUAVAWH
@8|$@
A_A^A]A\_^[]
UAVAWH
A_A^]
UWATAVAWH
D8egtxI
A_A^A\_]
qB^Xh
qB^Xh
p AWH
9O4t?A
UVWATAUAVAWH
D9v(v53
D;v(r
0A_A^A]A\_^]
UVWATAUAVAWH
M@H9M
0A_A^A]A\_^]
t$ WAVAWH
~(D;~(v
0A_A^_
x UAVAWH
A_A^]
x UATAUAVAWH
A_A^A]A\]
EX9G4t6
UVWATAUAVAWH
D8mPt2L
D8l$8u"A
A_A^A]A\_^]
x AVH
UVWATAUAVAWH
pA_A^A]A\_^]
UWATAVAWH
A_A^A\_]
\$ UVWATAUAVAWH
D$xE3
D9t$8
D$@!D$PH
D;t$8
A_A^A]A\_^]
UVWATAUAVAWH
HcM@H
D9mXtJ
pA_A^A]A\_^]
x AVH
UVWATAUAVAWH
pA_A^A]A\_^]
H9_pv-H;_pr
H;_pr
@USVWATAUAVAWH
}<L9}X
fD9<Cu
kEH<A
D9}Pt
D8}Ht
D9}PtED8}Ht?A
XA_A^A]A\_^[]
H9_Pv-H;_Pr
H;_Pr
UWAVH
UWATAVAWH
A_A^A\_]
UVWAVAWH
|$ E3
A_A^_^]
UVWATAUAVAWH
D8d$0
D8d$@
D8d$0u
A_A^A]A\_^]
VWAVH
D;v(r
9V(s%A
@A^_^
x AVH
VWATAVAWH
0A_A^A\_^
UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
E'!E/H
E;H!E?f
D$ E3
\$ UVWATAUAVAWH
D9|$@t
D9l$@
D8l$0uvH
D9l$@t
D9l$@
D9l$@t
A_A^A]A\_^]
UWATAUAWH
H9M0v#D
H;E0r
A_A]A\_]
UVWATAUAVAWH
@8t$pt6L
L$HE3
A_A^A]A\_^]
@USVWATAUAVAWH
D8eXt0H
|$ E3
D8d$0
D8d$0u
A_A^A]A\_^[]
UVWAVAWH
E;~(r
@A_A^_^]
D$\Hi
L$@H;
H;D$@s
L$@H3
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
UWATAVAWH
G(H9C0w
A_A^A\_]
x ATAVAWH
t$8H;
A_A^A\
UVWATAUAVAWH
8\$Ht:H
A_A^A]A\_^]
@8t$0
UVWAVAWH
H!]P!]0A
@A_A^_^]
9O4t^
A,9A(
BX9A4t
9O4t>
D$`E3
L$`H3
fA9<Hu
fA9<Iu
fA9<Cu
L$pH3
q"VZt.
D$TE3
@SUVWAV
D$PE3
A^_^][
t$ UWATAVAWH
t3H!]
A_A^A\_]
p WATAUAVAWH
A_A^A]A\_
p"VZt.
VWAVH
H!t$@H
 A^_^
t$ UWAVH
H!\$83
H!\$0H!\$(H!\$ 3
H!\$8
H!\$0
H!\$(H!\$ 
UWATAVAWH
L$ E3
L$ E3
A_A^A\_]
x UATAUAVAWH
A_A^A]A\]
|$ UH
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
fE9,Hu
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
USVWATAUAVAWH
D8u8t7L
L$HE3
A,H9C,
L$8HcQl
C,H9B,
L$ E3
L$8H;
A_A^A]A\_^[]
D$`E3
L$`H3
UVWATAUAVAWH
L$@E3
d$pM9eHw
A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
p WAVAWH
|$HL9
|$HL9
 A_A^_
UVWATAUAVAWH
D8|$xt3L
\$HH9
 u:H9
A_A^A]A\_^]
UVWATAUAVAWH
0A_A^A]A\_^]
WAVAWH
@A_A^_
UAVAWH
A_A^]
UVWATAUAVAWH
Egu<H
A_A^A]A\_^]
@USVWATAUAVAWH
fD9<Fu
|$ E3
A_A^A]A\_^[]
@USVWATAUAVAWH
D$PD8
D8t$@u)
d$PM9
D8t$@u
t$XM9t$(w
D8t$@t`
s8L9q
D8t$Au
D8t$@
D8t$@t;
D8t$B
D8t$A
uxD9u
A_A^A]A\_^[]
VWAVH
0A^_^
VWAVH
0A^_^
UVWAVAWH
@A_A^_^]
x AVH
UAVAWH
D8}8u5
@A_A^]
UWATAVAWH
A_A^A\_]
L$PH3
L$PH3
@USVWATAUAVAWH
A_A^A]A\_^[]
WAVAWH
 A_A^_
8Y8ul
qKU</
UVWATAUAVAWH
A_A^A]A\_^]
t$ UWATAVAWH
D$`H;
A_A^A\_]
UWATAVAWH
M9!ttH
x8D8eHu
A_A^A\_]
x UATAUAVAWH
fE9!u
A_A^A]A\]
x AVH
@USVWAVAWH
hA_A^_^[]
WAVAWH
0A_A^_
UAVAWH
A_A^]
h UAVAWH
vKL;u
A_A^]
x UATAUAVAWH
H98u&H;
A_A^A]A\]
UAVAWH
D$ E3
A_A^]
UATAUAVAWH
D$ E3
A_A^A]A\]
k UAVAWH
A_A^]
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
D$pE3
D$xE3
A_A^A]A\_^]
{ UATAUAVAWH
A_A^A]A\]
x AVH
UATAUAVAWH
trH;~
A_A^A]A\]
L$ UVWATAUAVAWH
|$ E3
`A_A^A]A\_^]
L$ UWATAVAWH
D$ E3
D$ E3
A_A^A\_]
L$ UVWATAUAVAWH
D$ E3
D$ E3
d$ E3
d$ E3
}8}&H
d$ E3
d$ E3
d$ E3
d$ E3
pA_A^A]A\_^]
UWATAVAWH
D9d$ 
D9d$ 
D9d$ t
A_A^A\_]
t$ WH
UVWAVAWH
t$ E3
`A_A^_^]
h UAVAWH
D$ E3
A_A^]
x UATAUAVAWH
D$ E3
D$ E3
D$ E3
A_A^A]A\]
USVWAVH
D$ E3
`A^_^[]
x AVH
WAVAWH
0A_A^_
UVWATAUAVAWH
D9l$0t
D9l$0
D9l$0t
D9l$0t
D9l$0t
A_A^A]A\_^]
fD94xu
t$0E3
UWAUAVAWH
A_A^A]_]
L$ UH
tGfA98tAI
@ !H0H
@8!HHH
@P!H`f
C !C0H
C8!CHH
CP!C`f
t;f9.t6H
t"H9i
x AVH
VWATAVAWH
@A_A^A\_^
UWATAVAWH
A_A^A\_]
UWATAVAWH
fD9't
fD97t
fD9#t
fD93t
A_A^A\_]
t$ WAVAWH
@A_A^_
UATAUAVAWH
L9/uuH
A_A^A]A\]
pIT2 
pIT2 
UVWATAUAVAWH
D9l$H
|$XD9l$Hv>A
D;|$Hr
D9l$P
D9l$Pt
;|$Lr
D9l$H
A_A^A]A\_^]
VWATAVAWH
fA9(@
A_A^A\_^
WAVAWH
t$fD98t
fD9?t
t$fD98t
fD9?t
 A_A^_
f9<Au
l$ VWATAVAWH
@8l$@@
A_A^A\_^
t$ WAVAWH
A_A^_
x AVH
x ATAVAWH
fD9#t
 A_A^A\
WAVAWH
H;w`r
 A_A^_
L$@H3
L$@H3
WAVAWH
H9i`vHH
H;o`r
 A_A^_H
x UATAUAVAWH
D8d$B
D$(E3
D8d$@
L$HD8d$Ct1D
D8d$@
D8d$Aty3
A_A^A]A\]
|$ AVH
L$0L;
USVWATAUAVAWH
XA_A^A]A\_^[]
x AVH
fD94Yu
UATAUAVAWH
L9{(w
A_A^A]A\]
UVWATAUAVAWH
iHH;u
PA_A^A]A\_^]
x AVH
H;~`r
SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
0A_A^A]A\_^]
t$ UWAUAVAWH
A_A^A]_]
USVWATAUAVAWH
\$HLc
|$`M9
\$HI;
T$HI;
T$PM;
ucH9\$X
D$`I;
\$HI;
A_A^A]A\_^[]
x UAVAWH
H!\$8H
A_A^]
\$ UVWATAUAVAWH
,$I9t$
M9.v4I
A_A^A]A\_^]
D$0E3
UVWATAUAVAWH
D$ E3
D$ E3
A_A^A]A\_^]
UVWATAUAVAWH
I;w`r
A_A^A]A\_^]
k VWATAVAWH
L$XH3
A_A^A\_^
UATAUAVAWH
H;^`r
A_A^A]A\]
x UATAUAVAWH
|$ E3
A_A^A]A\]
Gt$@H
@SUVWATAUAVAWH
L$hH3
xA_A^A]A\_^][
@USVWATAUAVAWH
L$hE3
D!|$<3
|$4!|$PI
|$<H;N`
@8|$0
@8|$8u
|$<;|$@
D$ E3
@8t$2t]A84$uW
A_A^A]A\_^[]
L$HA;
x ATAVAWH
H;~`sy
 A_A^A\
UVWATAUAVAWH
EXL9~`H
u'H9^`u4H9
H9^`u
A_A^A]A\_^]
D$ H9D$(
l$ VWAVH
H;N`s[
L$0E3
L$PH3
UVWAVAWH
@A_A^_^]
UVWATAUAVAWH
D$HL;(r
L$hH;
A_A^A]A\_^]
UVWATAUAVAWH
@8|$0
D8l$0u
D8l$0t
A_A^A]A\_^]
x UAVAWH
uYL9w`uS
t$ E3
u L9w`u
A_A^]
x AVH
@_^]H
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
WAVAWH
 A_A^_
@USVWATAVAWH
D$(E3
A_A^A\_^[]
D$@E3
\$8H+
L$pH3
UVWAVAWH
L$@E3
D$0H9
D$8E3
L$@E3
D$0H9
D$8E3
L$`H3
pA_A^_^]
UVWATAUAVAWH
L;~`r
A_A^A]A\_^]
@8=l*R
L$@H3
D$`E3
L$`H3
L$0E3
L$PH3
|$ UH
f94yu
L$ E3
x AVH
?RSST
@SUVWAVH
L$8H3
@A^_^][
\$ UVWATAUAVAWH
D9d$0
D9d$0t
fD9e 
fD9$Hu
H9D$Hs
D9d$0t
D9d$0
9t$0t
A_A^A]A\_^]
UVWATAUAVAWH
L$ E3
9ARI8u$A
ARI8u
8TOC8uR9V
8RSLCt
~$RSSTt
fD9K,I
L$`E3
D$ E3
A_A^A]A\_^]
9RSLC
y$RSTS
H;D$@u 3
9RSST
x AVH
6H9;t
UVWATAUAVAWH
L9w(t
fD9$Bu
0A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
F(H9X
v7H;X
F(H;X
VWAVH
H!x L
PA^_^
t$ WAVAWH
@A_A^_
x AVH
x AVH
UVWATAUAVAWH
ARI8A
0A_A^A]A\_^]
WAVAWH
0A_A^_
WAVAWH
fD9<Zu
 A_A^_
UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
9t$`t
9t$`t
9t$`t
L$ E3
9t$`t
A_A^A]A\]
t$ UWATAVAWH
D8 t1H
A_A^A\_]
t$ UWATAVAWH
H!|$8L
L$@H!|$0L
H!|$(3
H!|$ H
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
L$PH3
D$@E3
O89)t
x AVH
|$ AVH
x UATAUAVAWH
D$XL;
D$XL;
D9|$@t
D9|$@t
A_A^A]A\]
t$ WH
UWAVH
PA^_]
UVWATAUAVAWH
@A_A^A]A\_^]
VWAVH
0A^_^
USVWAVH
EwD80
A^_^[]
L$HH3
@SUVWATAVAWH
 A_A^A\_^][
8\$0t/H
t$ UWAVH
t$ WH
L$@E3
l$ E3
L$@E3
l$ E3
L$@E3
L$(E3
L$@E3
l$ E3
L$`H3
UVWAVAWH
PA_A^_^]
x AVH
|$ AVH
UWATAVAWH
A_A^A\_]
x AVH
l$ VWAVH
L$@H3
x UAVAWH
D9|$Ht
D9|$Ht
D9|$Ht
D9|$ht
D9|$ht
|$(E3
D9|$h
D9|$ht
D9|$ht
D9|$Ht
A_A^]
UVWATAUAVAWH
@A_A^A]A\_^]
t$ UWATAVAWH
d$ E3
A_A^A\_]
VWAVH
 A^_^
@USVWATAUAVAWH
HA_A^A]A\_^[]
VWATAVAWH
 A_A^A\_^
\$ UVWATAUAVAWH
fD9,Au
`A_A^A]A\_^]
L$`H3
q#RRP
t$ UWAVH
H!} H
 A^_]
t$ UWAVH
H!} H
 A^_]
t$ WH
D#L$0D
3D$8%x
qIT2 
VWATAVAWH
D$ !D$0H
L$ E3
A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
H9}gu
WATAUAVAWH
0A_A^A]A\_
UAVAWH
A_A^]
qSRVK7-
@ !H0H
@8!HHH
@P!H`f
UVWATAUAVAWH
L$ E3
PA_A^A]A\_^]
UVWAVAWH
A_A^_^]
@ !H0H
@8!HHH
@P!H`f
USVWATAUAVAWH
M9p(w
fM9p(w
D9t$0
D9t$0
D9t$0t
A_A^A]A\_^[]
USVWATAVAWH
D8t$Pt7L
D9t$0
D9t$0t
A_A^A\_^[]
t$ WH
x UATAVH
A^A\]
H USVWAVH
A^_^[]
UAVAWH
D$pE3
D9|$p
L$ E3
L9|$`t
A_A^]
UVWATAUAVAWH
E9.u9H
<F:t)A
fD9)t#f
H9W t
A_A^A]A\_^]
t$ UWATAVAWH
E D8d$0H
ED$@H
A_A^A\_]
UVWATAVH
D$(E3
D$(E3
D$(E3
D$(E3
A^A\_^]
t$ WATAVH
D$XE3
0A^A\_
x AVH
H98uIH
v2I;H
@USWH
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
D8mHujD8
xPD9mPtJH
`A_A^A]A\_^]
|$ UH
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
 A^_^
l$ VWATAVAWH
uCL9c
fD9$Au
 A_A^A\_^
x AVH
(t$`L
(|$PI
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
L$(E3
A_A^_^]
WAVAWH
@A_A^_
)t$0t%
(t$0H
)t$0H
(t$0H
(t$0H
VWATAVAWH
A_A^A\_^
WAVAWH
 A_A^_
L$ UVWATAUAVAWH
\$ E3
@A_A^A]A\_^]
@SUVWATAVAWH
H!t$pH
0A_A^A\_^][
x UATAUAVAWH
fB94Gu
D$ E3
D8|$@H
D9|$Pt
D9|$Pt
D9|$Pt
D9|$Pt
A_A^A]A\]
x UATAUAVAWH
t)fD90t#f
t)fD90t#f
\$@L90
T$pM9
\$PI;
D$D"=
t$ E3
t$ E3
t$ E3
t$ E3
t$ E3
D9pxu
D8t$H
t$ E3
t$@A8
T$DD;
\$DA8
\$DA8
@8t$I
L$PI;
\$DA8
L$PI;
D$ E3
D$ E3
l$ E3
@8t$J
l$ E3
l$ E3
l$ E3
l$ E3
l$ E3
l$ E3
l$ E3
l$ E3
l$D9uht
t(f90t#f
t(f90t#f
@8t$Kt
A_A^A]A\]
t$ WH
C8!CHH
CP!C`f
x AVH
UVWATAUAVAWH
fD9)t#f
fD9(t
A_A^A]A\_^]
WAVAWH
fD9<zu
 A_A^_
UVWATAUAVAWH
H!8!x
0A_A^A]A\_^]
p WAVAWH
L$PE3
0A_A^_
t$ WH
C !C0H
C8!CHH
t$ WH
C !C0H
C8!CHH
CP!C`f
UVWATAUAVAWH
 A_A^A]A\_^]
pIT2 
WATAUAVAWH
fD9,hu
fD9,Hu
fD9,Hu
 A_A^A]A\_
x UATAUAVAWH
L$@E3
D9g u
A_A^A]A\]
D$ E3
@USVWAVH
A^_^[]
UVWATAUAVAWH
0A_A^A]A\_^]
WAVAWH
 A_A^_
p AWH
WAVAWH
0A_A^_
UVWATAUAVAWH
T$pE3
fE9TE
A_A^A]A\_^]
fA9<Iu
f9<Ju
fA9<Cu
UVWATAUAVAWH
L$PE3
A_A^A]A\_^]
L$ UH
fA94Hu
fA94Iu
f94Ou
fA94Ku
f94Cu
l$ VWAVH
 A^_^
x AVH
D9t$P
L$ E3
WAVAWH
0A_A^_
USVWATAUAVAWH
hA_A^A]A\_^[]
WAVAWH
 A_A^_
UVWATAUAVAWH
qlt%H
ylt&H
`A_A^A]A\_^]
USVWATAUAVAWH
qlt'H
ilt(H
A_A^A]A\_^[]
UVWATAUAVAWH
9}@t!H
PA_A^A]A\_^]
\$ UVWATAUAVAWH
tffD9 t`
L$ E3
A_A^A]A\_^]
H9y8v=H;{
I;~8r
t$ UWATAVAWH
A_A^A\_]
v.L;A
UVWAVAWH
`A_A^_^]
UVWATAUAVAWH
H9wPu
H9wXu
f90uC
0A_A^A]A\_^]
t$ UWATAVAWH
D9|$H
fD9<Au
L$8L;
A_A^A\_]
|$ UATAUAVAWH
L$ E3
A_A^A]A\]
UWATAVAWH
L$ E3
@A_A^A\_]
UATAUAVAWH
D8uHL
A_A^A]A\]
t$ UWAVH
 A^_]
UVWATAUAVAWH
fD9,Cu
A_A^A]A\_^]
q0R^G'
x AVH
L$XH3
x ATAVAWH
0A_A^A\
UWATAVAWH
A_A^A\_]
x UAVAWH
T$0E3
D$XL9v8
fD91t
fD93t
A_A^]
D$(E3
x AVH
USVWH
X_^[]
qxZ0!
H!E83
WAVAWH
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
t#L9{
t#L9{
A_A^_
R$fA;Z*
fA9Z*v$A
q0R^G'
WAVAWH
fD9<Gt
L9|$0t
A_A^_
\$ UVWAVAWH
zPL9y(w
L9x(w
L9y(w
@A_A^_^]
H;{(r
H;{(r
UVWATAUAVAWH
L$ E3
`A_A^A]A\_^]
UVWATAUAVAWH
E89A(u
pA_A^A]A\_^]
@89G(usI;H
UATAUAVAWH
A_A^A]A\]
@USVWAVH
A^_^[]
t$ UWAVH
UVWAVAWH
PA_A^_^]
@USVWATAVAWH
L$ E3
A_A^A\_^[]
@USVWATAUAVAWH
xA_A^A]A\_^[]
UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
@USVWATAUAVAWH
\$XE3
t$ E3
L$ E3
L$ E3
A_A^A]A\_^[]
@USVWATAUAVAWH
L$ E3
D$`E3
D9d$`
D9d$p
A_A^A]A\_^[]
UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
@USVWATAUAVAWH
98v"H
\$ E3
98v"H
\$ E3
t<D8d$pt0I
t<D8d$pt0I
D8d$PtUD
D8d$p
D$Q9\$xA
D$RD9l$xA
D8d$PtUD
D8d$p
D8d$p
D8d$T
D8d$Qu2
98v"H
\$ E3
D8d$Rt
D8d$Ut6
98v"H
\$ E3
D8d$St0
98v"H
\$ E3
98v"H
\$ E3
98v"H
\$ E3
.D8d$St.
98v"H
\$ E3
t<D8d$pt0I
A_A^A]A\_^[]
@USVWATAUAVAWH
L$ E3
D8d$A
8\$Au
|$ E3
E9'tsH
D8d$@
|$ E3
|$ E3
|$ E3
|$ E3
@8|$XtK
|$ E3
D8t$Yt@
|$ E3
D8t$Z
|$ E3
9~u\fD9q
L$ E3
?D8t$B
D8t$Bt
D8t$[
D8t$@t
D8t$Ct3
|$ E3
|$ E3
D$CD8t$\t
D8t$]u
u D9u
D8t$@t\
"D8t$^uBH
|$ E3
|$ E3
tBD9u
|$ E3
A_A^A]A\_^[]
UATAUAVAWH
A_A^A]A\]
H UATAUAVAWH
L$ E3
A_A^A]A\]
@USVWATAUAVAWH
@8|$PtO
L$ E3
D8l$P
D8l$Pu3E
D8l$Pu/E
L$ E3
A_A^A]A\_^[]
UVWATAUAVAWH
L$ E3
D8m@tE
@A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
L$ UVWATAUAVAWH
D8}_uD
L$ E3
A_A^A]A\_^]
UVWATAUAVAWH
L9eXu
D9e@u]H
A_A^A]A\_^]
x AVH
UAVAWH
x@D8}
A_A^]
|$ UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
UVWAVAWH
 A_A^_^]
L$ UVWATAUAVAWH
L$ E3
@A_A^A]A\_^]
@USVWATAUAVAWH
t1D8}
t1D8}
t1D8}
t0D8}
t1D8}
t1D8}
t0D8}
A_A^A]A\_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAVAWH
t<D8|$xt/3
A_A^A]A\_^[]
UATAUAVAWH
L$ E3
L$ E3
A_A^A]A\]
x ATAVAWH
0A_A^A\
x UATAUAVAWH
A_A^A]A\]
D$ E3
UATAUAVAWH
D$ E3
D8mHu=
L$ E3
A_A^A]A\]
L$hE3
UATAUAVAWH
A_A^A]A\]
x AVH
|$ UATAUAVAWH
A_A^A]A\]
t$ WATAUAVAWH
A_A^A]A\_
L$ UVWAVAWH
pA_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
UVWATAUAVAWH
D8l$0t^L
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
q1S:>
UVWATAUAVAWH
0A_A^A]A\_^]
q;S>D.X
UVWATAUAVAWH
gD8mou}H
A_A^A]A\_^]
f9T$(u6@
f9T$(t
UWATAVAWH
@A_A^A\_]
UVWAVAWH
D$HH!D$HH!D$P2
A_A^_^]
UAVAWH
A_A^]
UATAUAVAWH
I9~`t
I;N`r
I;N`r
A_A^A]A\]
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
L$@H3
\$ UVWATAUAVAWH
L$0E3
L$@E3
0A_A^A]A\_^]
@USVWATAUAVAWH
H9p(w
9t$0t
9t$0t
H;xHr
A_A^A]A\_^[]
H;xHr
H;xHs
H;{Hr
H;xHs
H9XHvYH
H;XHr
H;XHr
H;XHr
t$ UWAVH
L$ E3
UWATAVAWH
0A_A^A\_]
UVWATAUAVAWH
D9l$8t
D8l$0t=H
D9l$8t
D9l$8t
D8l$1u8
L$ E3
D8l$0
D$ E3
D9l$8t
D9l$8t
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
x UAVAWH
A_A^]
x UAVAWH
A_A^]
UWAVH
E'H!E7!E?
i@8}wt
|$ UATAUAVAWH
A_A^A]A\]
fD9$Au
L$@L9d$Ht
L$@L9d$Ht
L$@L9d$Ht
L$@L9d$Ht
L$@L9d$Ht
L$@L9d$Ht
L$@L9d$Ht
\$ UVWATAUAVAWH
L$ E3
\$ E3
t$hE3
L$8E3
\$ E3
A_A^A]A\_^]
VWAVH
0A^_^
f9,^u
|$ UH
uX!UhH
@8uhtd@
x UATAUAVAWH
M9nxw
A_A^A]A\]
UVWATAUAVAWH
H;X(r
A_A^A]A\_^]
x UATAUAVAWH
t3D8d$Xt#A
D8d$Xt#I
D8d$Xt
D8d$X
L$8E3
D8d$X
t.D8d$Xt
A_A^A]A\]
@USVWAVH
A^_^[]
x UATAUAVAWH
t1D8}
t0@8u
L$ E3
t-@8u
A_A^A]A\]
tc@8u
t(@8u
WAVAWH
H91ub
 A_A^_
USVWATAUAWH
`A_A]A\_^[]
UWAVH
|$ UATAUAVAWH
A_A^A]A\]
UWAVH
\$ UVWH
UWAVH
E7!E7f
USVWATAUAVAWH
L$8E3
D8l$0tV
D$8D9
D8l$0u
L$@E3
D$xE3
D$`H;
A_A^A]A\_^[]
UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
@USVWATAUAVAWH
9t$@t
L$ E3
A_A^A]A\_^[]
VWAVH
@A^_^
VWATAVAWH
\$pL9{
0A_A^A\_^
VWAVH
L$ E3
0A^_^
x AVL
|$(A^
UWATAVAWH
A_A^A\_]
L$PH3
USVWATAUAVAWH
fB94xu
A_A^A]A\_^[]
L$@9L$ t
L$PH3
t$ WAVAWH
0A_A^_
UVWAVAWH
PA_A^_^]
UVWATAUAVAWH
D8l$8tK
D8l$8u
L$HE3
A_A^A]A\_^]
[tx6=
|$ UATAUAVAWH
F8,>u
A_A^A]A\]
D8,>u
UWAVH
G8H9E
)L$PL
t$ WH
EX9G$tV
VWAVH
 A^_^
@USVWAVAWH
A_A^_^[]
9N4tN
WAVAWH
D;}(r
 A_A^_
L$ UH
@USVWAVH
PA^_^[]
p WAVAWH
 A_A^_
p WATAUAVAWH
d$pA!,$I
D$`D;
 A_A^A]A\_
p WATAUAVAWH
d$pA!,$I
D$`D;
 A_A^A]A\_
UVWATAUAVAWH
~(D8n8t@H
l$pE3
EX9F4tZ
0A_A^A]A\_^]
p AWH
9N4t\A
UVWATAUAVAWH
!t$pE3
]HH!t$`H
A9u0t H
ttA9u0t9A
D$hE;
D$hA;
 A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
UWAVH
D$8E3
UVWATAUAVAWH
A_A^A]A\_^]
p AWH
9O4t?A
UVWATAUAVAWH
A9~0u
A9~(v)I
E;~(r
0A_A^A]A\_^]
WAVAWH
tpfD9:t
 A_A^_
p WAVAWH
o(;o(v
@A_A^_
UVWATAUAVAWH
l$PH;
D8t$8
E84$t8L
A_A^A]A\_^]
@USVWATAUAVAWH
fD9(t
fE9)t
t$fD9(t
fD9(t
t$fD9(t
fD9(t
fD9+t
fD9/t
t$fD9(t
t$fD9(t
fD9+t
t$fD9
fD9;t
fD9<Bu
fD9<pu
t$fD9 t
t$fD9 t
fD9$Bu
fD9$Bu
fE9$Bu
fE9$Gu
t$fD9 t
t$fD9 t
D$`E3
fD9?t
fE9<@u
fD9<Hu
fD9<ru
A_A^A]A\_^[]
l$ WH
@USVWATAUAVAWH
D8|$@u
A_A^A]A\_^[]
@USWH
WAVAWH
 A_A^_
x AVH
D$0E3
L$@H3
@USVWATAVAWH
A_A^A\_^[]
VWATAVAWH
D;~(r
9V(s%A
0A_A^A\_^
q;S>D.X
x AVH
VWATAVAWH
0A_A^A\_^
@USVWH
_^[]H
t$ UWAVH
UVWATAUAVAWH
D8d$Pt2L
A_A^A]A\_^]
t$ UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
D9t$ht
D9t$ht
D9t$h
D;exA
L$HE3
D9|$h
D9|$ht
A_A^A]A\_^]
x UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
l$`E3
A_A^A]A\_^]
\$ UVWATAUAVAWH
L$xE3
D8l$0
D8l$0
A_A^A]A\_^]
UVWATAUAVAWH
uLL9ePu
L9ePu
MHH9uPu
H9uPu
T$D!u 3
D$DD9D$D|
D$PH;
L$PH;L$Pr}H
D$PH;
L$PH;
T$PL;
D$hH;
D$DA;
+D$D;
l$X;U`
!0H!p
D$DD9L$D|
D1D$DD
!D$DL
D$DM;
L$pM;
U8;T$DH
|$HE3
D$pH!E
L!d$hH
T$XE3
D!d$D
D$D9T$D|
D$`H;
L$`H;L$`
D$`H;
L$`H;
D!E 3
D$DD9L$D|
!D$DL
D$DM;
L$pM;
;T$DH
D$xH!D$p
L!d$HH
D!l$DE
D$DD9D$D|
l$h;U8
D$DD9L$D|
D$PI;
L$xM;
A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
L$ E3
D$ E3
L$ E3
A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
USVWAUAVAWH
\$hH!\$`H
l$pE3
u`D;uX
A_A^A]_^[]
UVWAVAWH
A_A^_^]
{ AWH
L$@H3
UVWAVAWH
H!|$x
D;}(r
H!t$x
0A_A^_^]
VWAVH
fD94Zu
q;S>D.X
x UATAUAVAWH
D8d$It
umD8d$Ht0
t$pD8d$H
A_A^A]A\]
q;S>D.X
@USVWAVH
L$ E3
D$ E3
A^_^[]
L$@E3
UWATAVAWH
fD9$Ou
fE9$Fu
D9c u
A_A^A\_]
L$ USVWATAUAVAWH
L9i8u%H
D$`H;
tAfD9*t;H
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D9l$pt
D$`E3
t$fD98t
D9|$pt
D9|$pt
D9|$pt
D9|$pt
9t$pt
D9|$pt
D9|$pt
D9~@t
D9|$pt
D9|$pt
D9|$pt
D9|$pt
D9|$pt
D9|$pt
D9|$pt
D9|$pt
A_A^A]A\_^[]
D$ E3
@USVWAVH
A^_^[]
x AVH
UWATAVAWH
d$XD8d$0
A_A^A\_]
UATAUAVAWH
A_A^A]A\]
` UAVAWH
A_A^]
t$ WH
UWAVH
0A^_]
9O4tN
fA9<Ku
f9<Ju
fA9<Bu
UAVAWH
A_A^]
t$ WH
` UAVAWH
D$(E3
L$(E3
L9d$HtCH
A_A^]
s AWH
H;~`r
L$PH3
@8t$0t
L$`H3
` AWH
D$HE3
L$HH3
t$ UWATAVAWH
)D$0H
)L$@f
fD9>t
A_A^A\_]
)D$PH
t$ WH
L$@E3
VWAVH
0A^_^
\$ UVWATAUAVAWH
A_A^A]A\_^]
UWATAUAWH
D8d$0
9D$4u_
A_A]A\_]
VWAVH
h VWAVH
@USVWATAUAVAWH
A_A^A]A\_^[]
UWATAVAWH
fE9$Gu
A_A^A\_]
@USVWAVAWH
XA_A^_^[]
|$ UATAUAVAWH
fD9,Au
fD9,Au
fE9,Fu
A_A^A]A\]
VWAVH
@USVWAVAWH
A_A^_^[]
@USVWATAUAVH
A^A]A\_^[]
@SUVWAVH
T$xH!\$xI
0A^_^][
x UATAUAVAWH
D9hlt)H;
A_A^A]A\]
|$ UATAUAVAWH
L$ E3
L$ E3
A_A^A]A\]
t$ UWATAVAWH
qD8e0tMH
A_A^A\_]
t$ UWATAVAWH
D8e0tHH
A_A^A\_]
UVWATAUAVAWH
D$HE3
D8|$@
|$hE3
A_A^A]A\_^]
@USVWAVAWH
L$PE3
A_A^_^[]
x UATAUAVAWH
fE9,Fu
A_A^A]A\]
@USVWATAUAVAWH
D$ E3
9t$8|
@85zHK
t(@85?HK
WAVAWH
 A_A^_
fA94Qu
fA9,Qu
L$HH3
WATAUAVAWH
I;_(r
A_A^A]A\_
D$(E3
L$0E3
t+H;_0r
x AVH
t0H;_
x AVH
x UATAUAVAWH
L$PE3
D$XH;
H9\$@
A9^@vdH
9\$Lt
H+L$hH;
D$XH;E
t$8E3
A_A^A]A\]
UAVAWH
fF9<Au
fD9<Xu
fD98t1f
A_A^]
UWAVH
L$0@8|$ 
u/9t$@u)H
@USVWATAUAVAWH
L;`(r
D9l$0vA
D$XE3
L9l$Xw
l$pD9m
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
D8egu
D8egt
A_A^A\_]
UWAVH
@USVWATAVAWH
D9ewu
ID8egu"3
d$ E3
A_A^A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
D9l$h
D9l$ht
D9l$h
L$ E3
A_A^A]A\_^]
@USVWATAVAWH
L$`L+
A_A^A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
L$ UVWATAUAVAWH
pA_A^A]A\_^]
\$0;\$`u
L$(E3
@USVWATAUAVAWH
D9|$0t
D9|$0tGH
;D9|$0t
D9|$0t
DD8}guwH
A_A^A]A\_^[]
ATAVAWH
fD9 t
tifD9&tcH
fD9 t
tffE9!t`H
fD9 t
tyfD9"tsH
fD9 t
 A_A^A\
qZ]|@.
x AVH
x ATAVAWH
0A_A^A\
q!W4$?u
UVWAVAWH
@A_A^_^]
USVWAVH
`A^_^[]
WAVAWH
H98uWH
 A_A^_
L$hH3
L$hH3
x AVH
@USVWATAUAVAWH
A_A^A]A\_^[]
fD9,Au
whL9.
|$hE3
|$hI9
UVWATAUAVAWH
I91tNA8q
A9vpu
D$ E3
L$@H3
PA_A^A]A\_^]
I9^`v,I
I;^`r
x AVH
tKH;~
UWAVH
0A^_]
x ATAVAWH
0A_A^A\
t$ UWAVH
H9x`v,H
H;{`r
@USVWATAUAVAWH
H;^0s
f9<Au
f9<Bu
fA9<@u
fA9<Gu
D$(E3
H;^0r
A_A^A]A\_^[]
UVWAVAWH
@A_A^_^]
t$ WH
t$ WH
USVWATAUAVAWH
t4H;_
eoL9egu
A_A^A]A\_^[]
x AVH
H9_PtO8_ht5H
H9_`v,H
H;w`r
UVWATAUAVAWH
@A_A^A]A\_^]
x UAVAWH
A_A^]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
L$pH3
@SVWH
x AWH
L$PH3
VWATAVAWH
 A_A^A\_^
@SUVWAVH
sG@84
@8t$Pt=
L$XH3
`A^_^][
@UATAUAVAWH
D3EPA
epA_A^A]A\]
@UATAUAVAWH
D3EHD
D3] D3
epA_A^A]A\]
@UATAUAVAWH
e`A_A^A]A\]
@UATAUAVAWH
D3] D
epA_A^A]A\]
@UATAUAVAWH
D3] D
epA_A^A]A\]
f9<Pu
D$@E3
VWAVH
L95LlJ
L)53lJ
 A^_^
p AWH
%H!y H
q:_0#
p:_0#
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
9s@|+3
WAVAWH
fE9<Au
 A_A^_
uHH9A
WAVAWH
D9~hv@A
0A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
fD9,Au
UVWATAUAVAWH
t$8fD
wVA97s
d$0fD
`A_A^A]A\_^]
VWAVH
pxZ0!
 A^_^
@USVWATAUAVAWH
D$4E3
fD9:t
D8|$Pt
A_A^A]A\_^[]
UWATAVAWH
D9aLu
D$ E3
A_A^A\_]
UVWATAUAVAWH
D8a$t
L$xE3
L$hE3
L$hE3
|$ E3
0A_A^A]A\_^]
T$@E3
t$ WATAUAVAWH
fB9tu
fD9t}
0A_A^A]A\_
L$ USVWAVH
L$(E3
A^_^[]
 u-fF
x AVH
 Hcy@H
9y<tjH
f9,Au
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
L$hH3
pA_A^A]A\_^]
x AVH
x AVH
WATAUAVAWH
0A_A^A]A\_
x AVH
@SVWH
L$PL+
L$HH3
L$@H3
L$)D+
L$HH3
L$XH3
L$1D+
L$`H3
WAVAWH
 A_A^_
SUVWATAUAVAWH
8A_A^A]A\_^][
f94Au
<@\t=fB
<@/t5L
t[f9+tV
<@\t/
D$ H;
<P/u(
9-uBH
L$0H3
t$ WH
D$@E3
D$ E3
WAVAWH
fD98t
 A_A^_
D$PIc
|$ E3
@8|$ u
L$PH3
x AVH
L$ VWAVH
t$XE3
t$PE3
{ AVH
WAVAWH
0A_A^_
D$(E3
D$ E3
D$(E3
D$ E3
VWAUAVAWH
L$(E3
0A_A^A]_^
WAVAWH
H !X M
0A_A^_
|$ E3
D$ E3
f94Cu
f94Ku
t$ WH
UWAUAVAWH
}@!}HI
D$ E3
A_A^A]_]
UAVAWH
@A_A^]
UATAUAVAWH
@8}@t<H
A_A^A]A\]
@SUVWATAUAVAWH
fA9T>
fD9DO
A_A^A]A\_^][
x AVH
@SVWH
\$ WH
UWATAVAWH
fD9$Bu
A_A^A\_]
UWATAVAWH
fD9$Au
A_A^A\_]
L$XH3
t$ WH
gfffA
L$8H3
@SVWH
L$PH3
WAVAWH
 A_A^_
UVWAVAWH
0A_A^_^]
WATAUAVAWH
fD9 t
r#fD9
 A_A^A]A\_
x ATAVAWH
fE9$Pu
@A_A^A\
UVWATAUAVAWH
T$0D9E
D9D$0
<A\t%H
A_A^A]A\_^]
$0< u
t$ UWAVH
H!|$8H!|$0H!|$(H!|$ 3
x ATAVAWH
A_A^A\
x AVH
UWATAVAWH
}`D9y uSH
D9}PudH
<B\u|H
A_A^A\_]
@USVWAVH
A^_^[]
UWAUAVAWH
D$(E3
D$(E3
A_A^A]_]
UVWAVAWH
:\tkA
`A_A^_^]
UVWATAUAVAWH
pA_A^A]A\_^]
USVWATAUAVAWH
HA_A^A]A\_^[]
9D$Xt
UWAUAVAWH
A_A^A]_]
UAVAWH
A_A^]
UVWATAUAVAWH
D$8A+
D$8L;
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ UWAVH
UVWAVAWH
t$HfE;~
D8;u H
`A_A^_^]
D$ E3
L$XE3
tDH!\$0D
l$ VWAVH
D$ f9(t
t$ WH
UAVAWH
D857nI
fD94Au
0A_A^]
UAVAWH
D85PlI
fD94Au
0A_A^]
f9<Au
` UAVAWH
fD94Ou
fE94Gu
A_A^]
H9{0v#H
H;{0r
x AVH
|$ UATAUAVAWH
L9e0t)I
 A_A^A]A\]
x UATAUAVAWH
D$HI9
L$PI9
D$HI9
D$PI9
D$HI9
L$PI9
D8d$0H
A_A^A]A\]
x UAVAWH
A_A^]
UWATAVAWH
A_A^A\_]
L$HH3
@SUVWAV
D$PE3
qiYVH
x UAVAWH
A_A^]
USVWATAUAVAWH
A_A^A]A\_^[]
q`W|1/
UWAVH
pbTT$
qbTT$
UWAVH
UWAVH
qIRtK
x AVH
Z2b/8
VWAVH
 A^_^
WAVAWH
 A_A^_
VWAVH
 A^_^
VWAVH
 A^_^
qsQ~K6
UWAVH
VWAVH
 A^_^
|$ UAVAWH
A_A^]
UWATAVAWH
0A_A^A\_]
x AVH
` UAVAWH
A_A^]
x UAVAWH
D8}gu
D8}gu
A_A^]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
p AWH
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
` UAVAWH
A_A^]
x UATAUAVAWH
A_A^A]A\]
UWAVH
qSY:w
UWAVH
UWAVH
{ AVH
` UAVAWH
A_A^]
q#Qz&
qrU8q
UWAVH
UAVAWH
A_A^]
VWAVH
 A^_^
` UAVAWH
A_A^]
UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
x UATAUAVAWH
A_A^A]A\]
UWAVH
E'H!E7!E?H
x UATAUAVAWH
FD8}gt
A_A^A]A\]
UVWATAUAVAWH
fD9T]
fD9T]
fD9T]
fD9T]
fD9T]
fD9T]
fE9T]
@A_A^A]A\_^]
tFf9}
UVAVH
UVWATAUAVAWH
D9d$0u1H
|$HD9d$0tQI
t$HD9d$0t`I
t$HD9d$0tsI
9L$0t
8L$8t
A_A^A]A\_^]
UVWATAUAVAWH
D9d$0u1H
|$HD9d$0tQI
t$HD9d$0t`I
t$HD9d$0tsI
9L$0t
8L$8t
A_A^A]A\_^]
@USVWATAUAVAWH
9D$`t.
9L$`t!A
L$pL;M8t
A_A^A]A\_^[]
x AVH
UATAUAVAWH
f94Cu
t$ E3
D;t$H
A_A^A]A\]
UVWATAUAVAWH
D9t$d
D;t$`
D;|$d
A_A^A]A\_^]
UVWATAUAVAWH
D9l$P
D9l$@
D9l$@
D9l$@t A
D9l$@
D9l$@t
l$ E3
D;t$P
A_A^A]A\_^]
UVWATAUAVAWH
D9l$@
D9l$D
D;t$@
A_A^A]A\_^]
UVWATAUAVAWH
D9l$@
D9l$D
D;t$@
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
D9l$@
D9l$D
D;t$@
A_A^A]A\_^]
UVWATAUAVAWH
D9t$`t
D9t$`t
A_A^A]A\_^]
t$ UWATAVAWH
D9d$@uVH
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
D9l$@
D9l$D
D;t$@
A_A^A]A\_^]
\$ UVWATAUAVAWH
D9d$`u
D9d$`
d$ E3
D;l$`
A_A^A]A\_^]
UATAUAVAWH
D$ E3
A_A^A]A\]
@USVWATAUAVAWH
9|$@t
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UATAUAVAWH
9SRD1H
|$(E3
|$ E3
tVD9x
A_A^A]A\]
x ATAVAWH
D$pE3
fD9$^u
fG9$wu
 A_A^A\
WATAUAVAWH
fC9L}
 A_A^A]A\_
@USVWAVAWH
A_A^_^[]
@SUVWAVH
H!\$0!\$(
L$ E3
A^_^][
\$ UVWAVAWH
v2H;_
D$ E3
A_A^_^]
t$ UWAVH
L$ E3
9\$Xv
UVWATAUAVAWH
A_A^A]A\_^]
w!t=+
w!t=+
x UATAUAVAWH
\$pE3
fE9'L
D8|$pt#L
A_A^A]A\]
t$ UWATAVAWH
A_A^A\_]
c UAVAWH
A_A^]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
t$ UWAVH
@USVWATAVAWH
pSP^x
A_A^A\_^[]
t$ UWAUAVAWH
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
\$0I;
A_A^A]_]
x AVH
fD91t(f
t$ UWATAVAWH
D9'vI
A_A^A\_]
t$ WH
@SVWH
WATAUAVAWH
u`H;_
0A_A^A]A\_
UWATAVAWH
D8d$1
D8d$0
D8d$0uf
L$ E3
A_A^A\_]
UWAVH
UWAVH
0A^_]
UWAVH
0A^_]
USVWATAUAVAWH
t1D8e
A_A^A]A\_^[]
t-D8e
t,D8e
EoI9E
UATAUAVAWH
L9t$0t
A_A^A]A\]
@USVWATAVAWH
D8d$1
D8d$0
F@I9G8
fD9$Au
fD9$Bu
D8d$0
A_A^A\_^[]
UWATAVAWH
L$ E3
A_A^A\_]
L$ UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
F8H9EHt%L
A_A^_^]
UVWAVAWH
A_A^_^]
@USVWATAVAWH
L$ E3
L$`H9]
8\$At
A_A^A\_^[]
UWATAVAWH
v1H;s
D$ E3
vgI;w
D$ E3
tiH;{
t2H;{
A_A^A\_]
UWAUAVAWH
D$ E3
A_A^A]_]
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
\$ UVWATAUAVAWH
D$XE3
A_A^A]A\_^]
l$tE3
UWAVH
@A^_]
t$ WH
UWAVH
t$ E3
D$ E3
UWAWH
WAVAWH
v@8t$0uUH
@A_A^_
@SUVWATAUAVAWH
!\$0H
A_A^A]A\_^][
UWAVH
8fD97u
PA^_]
` UAVAWH
fF9$Nu
fD9$Gu
fF9$Wu
A_A^]
|$ UH
UAVAWH
fD9<Ju
fD9<Ju
fD9<Gu
A_A^]
@SVWH
|$ UATAUAVAWH
fD9,Fu
D9m0u?H
A_A^A]A\]
WATAUAVAWH
D$ E3
A_A^A]A\_
\$ UVWH
L$0H3
UVWATAUAVAWH
fD94Vu
A_A^A]A\_^]
|$ UH
@USWH
|$ UH
|$ UH
t$ WAVAWH
@A_A^_
|$ UH
|$ UH
@USWH
UVWAVAWH
|$ E3
fE9<@u
fD9<Ju
A_A^_^]
fD94Ju
fD94Ju
fD94Au
fA9<Hu
f9<Ju
fA9<Au
|$ UH
9\$@u
8\$0t
` UAVAWH
A_A^]
UAVAWH
fD9<Vu
A_A^]
@USWH
UWATAUAVH
]H;]@u
A^A]A\_]
VWATAVAWH
A_A^A\_^
VWAVH
@A^_^
USVWAVH
pA^_^[]
VWAVH
prU8q
@A^_^
L$HH3
H!\$03
!\$(E3
L$hH3
f9,Nu
UATAUAVAWH
|$ E3
\$ E3
A_A^A]A\]
` UAVAWH
D8d$@tP
\$AD8d$@u
\$AD8d$@u
fD9$Gu
A_A^]
@USVWATAUAVAWH
fD9$Au
A_A^A]A\_^[]
@USVWAVH
A^_^[]
UAVAWH
A_A^]
UVWATAUAVAWH
L9eXu*H
`A_A^A]A\_^]
|$8f9+t`
VWAVH
t$ E3
0A^_^
UVWAVAWH
0A_A^_^]
|$ UAVAWH
@A_A^]
t$ WH
T$ fA
\$ UVWH
L$`H3
|$ UH
@USVWAVH
D$ E3
@A^_^[]
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
0A^_^
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
|$ UH
UWAVH
PA^_]
t$ UWAWH
f94Qu
E(f;0
 A__]
\$ UVWAVAWH
A_A^_^]
|$ UH
H!\$0
!\$(H
x ATAVAWH
 A_A^A\
t$ UH
p*SZp
ATAVAWH
fD9$zu
L9d$ u'H
0A_A^A\
WAVAWH
@A_A^_
ATAVAWH
fD9$zu
L9d$ u'H
0A_A^A\
s WAVAWH
@A_A^_
UWAVH
UWAVH
0A^_]
UWAVH
0A^_]
UAVAWH
0A_A^]
UWAVH
 A^_]
f94Au
\$ WH
qiZR46
qiZR46
L$HH3
L$HH3
[ UVWH
L$HH3
UAVAWH
A_A^]
\$ UVWAVAWH
A_A^_^]
@SUVWH
L$HH3
X_^][
@SUVWH
L$XH3
h_^][
@SUVWH
L$XH3
h_^][
x AVH
H;s r
H9{ v5H
H;{ r
WAVAWH
0A_A^_
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
UVWAVAWH
@A_A^_^]
t$ WH
D#L$0D
3D$8%x
VWAVH
H!|$ H
0A^_^
UAVAWH
@A_A^]
VWAVH
L$hE3
@A^_^
UWAVH
@A^_]
oz51&
[SzLF'
IpdhtQ[^
rIJ@b
-<Ro[
@H7,e
I`1yw?~;#
)Pkf$
V:9]K
0,9eE*[
%i1$P
5#LaS?z_
,d- 1
Tj-Abu_}5
S:-HDV
i42{"x
s8_]2
Rx*YP
X%6\y@
xt+n<
B2_1mh
a8|%Y
.q#%6
z #_ZH
UZaR.`
[=/Rs
D;EAp
gxZR=
j;k@^>
W)Mx_
VFS3O
mta$B
|b\q*
(z=E}L)42
lT`fa
U(m,J&
l_OxC
`rO6GqD
3v`tXi
p@}0p75
B[*Ba%v
:=vqE,Z
qRkA%
56gx$
;o$n|
u+#TL
5Iz)/
e|wUq9q
M<I/s"i
(fehL
d{Lz<>
ZjAZy
~!i(R
]aSM2
iXD9f7d
E(r"<_
 I{X}
F;69>
gnOP?
6{vTS
jaOm2
>8;r7j</
T$0E3
t$ UWAVH
L$ UVATAVAWH
`A_A^A\^]
H92t1L
@USVWAVH
t$ E3
A^_^[]
UWAUAVAWH
A_A^A]_]
[ UVWH
\$ E3
L$XH3
[ UVWH
\$ E3
L$XH3
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
fD9$Cu
fD9$Nu
`A_A^A]A\_^]
@SUVWH
l$ E3
L$XH3
h_^][
UWAUAVAWH
D8}XtWD8}
A_A^A]_]
|$ UATAUAVAWH
A_A^A]A\]
UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
#\$pA
A_A^A]A\_
UVWATAUAVAWH
fD9,Fu
9|$HtWH
9|$Ht
D8l$0t%A
D9t$8tlH
D9l$8
D9l$8t
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
t08\$8t"H
H9\$0v
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
8\$8t
H9\$0
H;|$0r
H9\$0
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
H9\$0
H;|$0r
H9\$0
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
A_A^A]A\]
UVWATAUAVAWH
fF94xu
H9q,r
fE94Hu
P(9Q(t*
A_A^A]A\_^]
VWATAVAWH
H9)t0H
D$P@@
 A_A^A\_^
UATAUAVAWH
A_A^A]A\]
L$ UH
L$ UH
L$ UH
L$ UH
@USVWATAVAWH
pxU>w&i
A_A^A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
h VWAVH
D8t$Xu
fD90t
0A^_^
USVWATAUAVAWH
H!|$0
L9t$0tjI
D9t$@
D9t$@t
D9t$@t
A_A^A]A\_^[]
t$ UWATAVAWH
L9a u$H
L$@E3
D8d$H
A_A^A\_]
9D$ t
@SVWH
f93trH
@8t$Hu
UVWAVAWH
D8|$!
xaD8|$ 
A_A^_^]
UWAVH
D9t$0t
D9t$0t
H9D$hu
D9t$0t
D9t$0t
\$ UVWAVAWH
x*D8|$0
A_A^_^]
UVWATAVH
PA^A\_^]
t$ UWAVH
D9t$Ht
D$(E3
H9L$xu
L$(E3
D9t$Ht
D9t$Ht
l$ VWAVH
 A^_^
UVWATAUAVAWH
t$fD9(t
fD9/t
D9l$@t
l$ E3
D9l$@t
tQfD9(tKf
8/t9f
8\t3H
D9l$@t
fD9/t
D9l$@t
A_A^A]A\_^]
f94Au
x UAVAWH
{T t{L
A_A^]
t$ E3
VWAVH
 A^_^
@USVWATAUAVAWH
9t$@t
9t$@t
9t$@t
A_A^A]A\_^[]
@USVWATAUAVAWH
D9l$@t
D9l$@t
D9l$@t
D9l$@t
A_A^A]A\_^[]
UATAUAVAWH
D$pE3
D8l$0uKH
|$ E3
A_A^A]A\]
UWAVH
0A^_]
UWAVH
UVWAVAWH
L$pE3
f9/tHH
pB[\x
pB[\x
0A_A^_^]
UVWATAUAVAWH
L;l$h
D$ E3
A_A^A]A\_^]
UWATAVAWH
fF9$Bu
A_A^A\_]
t$ WH
@USVWAVH
D$ E3
p"V^:'-
PA^_^[]
UWAVH
D$ E3
@USVWATAVAWH
D8d$ u
|$PD8d$ 
D8d$ 
A_A^A\_^[]
t$ WATAUAVAWH
t$`I9n
D$`I;n
 A_A^A]A\_
UWAVH
x UATAVH
toH!|$0H!|$8
D$@!|$P!|$TH!|$XH!|$`H!|$hf
A^A\]
` UAVAWH
A_A^]
G !G0H
G8!GHH
GP!G`f
fB9<Bu
fB9<Bu
WAVAWH
fD9<zu
 A_A^_
fB9<Bu
fB9<Bu
fB9<Bu
VWAVH
 A^_^
fF94Bu
fB9,Bu
fB9<Bu
fB9<Bu
t$ WH
t5@8hiu/H
D9L$ r
x AVH
D$ H!D$(
VWAWH
 A__^
VWAVH
 A^_^
UWAVH
USVWATAUAVAWH
piZR46
A_A^A]A\_^[]
WAVAWH
 A_A^_
H9|$0vNL
t$ H;|$0r
H;|$0r
@USVWAVH
D9u8v{L
`A^_^[]
|$ UH
tk@85
9u v?
UWAVH
@A^_]
UWAVH
9] v/A
PA^_]
UVWAVAWH
fF9<Hu
fE9<Ru
A_A^_^]
|$ E3
l$ VWAVH
SUVWAVH
D8t$xu
@A^_^][
WAVAWH
 A_A^_
UVWATAUAVAWH
fB94au
t7@8t$ t+3
A_A^A]A\_^]
VWAVH
0A^_^
f9,^u
t$ UWAVH
pQZ0}
p(Wx.
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
T$hE3
t$fD9(t
A_A^A]A\_^]
x UAVAWH
A_A^]
@USWATAUAVAWH
pA_A^A]A\_[]
VWAVH
\$ UVWAVAWH
pA_A^_^]
USVWATAUAVAWH
xA_A^A]A\_^[]
UVWATAUAVAWH
D$0E3
fD9$pu
fD9$Yu
fD9$xu
fE9$_u
fD9$hu
L$HH3
PA_A^A]A\_^]
t$ UWATAVAWH
fD9<Fu
fD9<Fu
fD90t
fD9<Fu
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
fD9#u
fD9#t
fD9#t
fD9$Cu
fD9$Su
fD9$Cu
A_A^A]A\_
L$ UVWATAUAVAWH
fA9>u
A_A^A]A\_^]
UWAVH
t$ UWATAUAWH
A_A]A\_]
WATAUAVAWH
fD9,Au
fD9,Bu
fD9l]
fD9lE
fD9lM
 A_A^A]A\_
@USWH
D$ E3
@USVWAVH
A^_^[]
UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
h UAVAWH
A_A^]
t#f90t
x ATAVAWH
d$ E3
t$fD9 t
fD9't
A_A^A\
UATAUAVAWH
l$ E3
A_A^A]A\]
D8.u*
t$fD9(t
fD9+t
|$ UATAUAVAWH
A_A^A]A\]
|$ UAVAWH
A_A^]
t$ UWAVH
@8)u8H
l$ E3
x AVH
UATAUAVAWH
l$@fD
l$`fD
A_A^A]A\]
UVWATAUAVAWH
t$fD9(t
l$ E3
L9mXu3H
MXfD;i
D8(ubL
`A_A^A]A\_^]
l$ E3
@USWH
D$(E3
VWAVH
\$@D83u5
 A^_^
|$ UAVAWH
@A_A^]
@USVWATAVAWH
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
@USVWATAUAVAWH
L$PE3
D8l$0u
A_A^A]A\_^[]
|$ UATAUAVAWH
t$fD9(t
fD9+t
t$fD9(t
fD9+t
0A_A^A]A\]
UVWAVAWH
D$ E3
`A_A^_^]
<A\t:
UVWATAUAVAWH
fG9,qu
pKY|[
D9l$p
A_A^A]A\_^]
fD94Au
9{Xv/@8
UWAVH
0A^_]
k VWAVH
H!t$(E3
!t$ 3
H!t$ E3
UVWATAUAVAWH
@A_A^A]A\_^]
VWAVH
L$xE3
D;H$t(H
H9h(v
X(I;H
T$0E3
UVWATAUAVAWH
`A_A^A]A\_^]
@USVWATAVAWH
fE9$Fu
fD9$Ou
A_A^A\_^[]
x ATAVAWH
fD9#t
 A_A^A\
VWATAVAWH
fE9$@u
 A_A^A\_^
x AVH
H89L$PukH
t$ UWAVH
fD94Au
x UAVAWH
D8}_u
D8}_uJH
D8}_t@H
D8}_u
A_A^]
@USVWAVH
D$(E3
@A^_^[]
` UAVAWH
A_A^]
|$ UAVAWH
@A_A^]
` UAVAWH
A_A^]
t$ UWAVH
@A^_]
UAVAWH
A_A^]
D8L$`
L$XH3
UWATAVAWH
{D8}@u+D
@A_A^A\_]
x UAVAWH
A_A^]
x AVH
|$ UH
UAVAWH
A_A^]
WATAUAVAWH
0A_A^A]A\_
WAVAWH
fE90t
0A_A^_
UVWATAUAVAWH
fD94Qu
fD90t
A_A^A]A\_^]
@USVWATAUAVAWH
l$ E3
D8l$`
A_A^A]A\_^[]
l$ E3
D!D$ D
L$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
L$PE3
D8l$Xt0L
K L9I
A_A^A]A\_^]
x AVH
VWAVH
 A^_^
UVWAVAWH
fD9<Wu
fD9<Fu
fD9<Ou
@A_A^_^]
UAVAWH
fF9<Iu
fD9<Au
A_A^]
x AVH
fD94Au
fD94Au
fD94Zu
fD94_u
UVWATAUAVAWH
M`D9a$u
A_A^A]A\_^]
f9<Yu
f9<Au
@USVWATAUAVAWH
D9l$H
D9l$Ht
D9l$H
A_A^A]A\_^[]
` UAVAWH
L$ E3
A_A^]
UVWATAUAVAWH
t$ E3
A_A^A]A\_^]
t$ UWATAVAWH
L$8E3
D9d$@
D8d$0
L$8E3
D8d$1t
D8d$0tPI
L$8E3
D9d$@t
A_A^A\_]
L$ USVWAUAVAWH
D$ E3
A_A^A]_^[]
h UAVAWH
A_A^]
@USVWAUAVAWH
A_A^A]_^[]
UVAUAVAWH
L$ E3
A_A^A]^]
{ UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
L$0E3
d$8D8a
fD9$Qu
fD9$Qu
fD9$Ou
fE9$Nu
fE9$Gu
D9f u
A_A^A]A\]
|$ UAVAWH
A_A^]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
UVWAVAWH
A_A^_^]
|$ UATAUAVAWH
A_A^A]A\]
WAVAWH
fD9<Ou
D9;}OH
A_A^_
@SUVWAV
D$8E3
@SVWATAUAVAWH
0A_A^A]A\_^[
x AVH
x ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
t$ UWAVH
fD9TH
8/tDH
CT$ H
L$@H3
t$ WH
(D$@f
f94Au
t$ WAVAWH
CT$HE3
CT$HI
L$hH3
A_A^_
L$pH3
D$(E3
@SVWATAUAVAWH
D9l$0t
D9l$0t
D9l$0t
D9l$0t
D9l$0t
D9l$0t
D9l$0t
A_A^A]A\_^[
\$ VWAVH
CD$PE3
` AUAVAWH
D9|$Xt
D9|$Xt
D9|$Xt
D$(E3
D9|$Xt
9t$Xt
D9l$Xt
D8d$@
@D8d$@u
D9d$Xt
D9|$Xt
A_A^A]
@SVWAVAWH
D9|$(t
D9|$(t
D9|$(t
D9|$(t
D9|$(t
D9|$(t
D9|$(t
D9|$(t
L$`H3
pA_A^_^[
VWAUAVAWH
CT$xI
D9|$(t
A_A^A]_^
WAVAWH
 A_A^_
` UAVAWH
D8g(t
D8g*t
A_A^]
|$ E3
UAVAWH
A_A^]
UAVAWH
A_A^]
UVWATAUAVAWH
L9Mxu&L9M
`A_A^A]A\_^]
USVWATAUAVAWH
\$ D8
D$pE3
A_A^A]A\_^[]
UVWATAUAVAWH
y*D9O
L$ E3
fD96t
A_A^A]A\_^]
UVWATAUAVAWH
fE;D$
D8EPt
D8E`t
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UAVAWH
|$ E3
A_A^]
|$ E3
fD9;t
VWAVH
u~f;i
l$HsqL
 A^_^
|$ UH
x UATAUAVAWH
l$ E3
\$XD8+uh
A_A^A]A\]
UWATAVAWH
d$ E3
uDD8c
A_A^A\_]
UVWAVAWH
fE98t
0A_A^_^]
WAVAWH
fD98t
fD98t
0A_A^_
\$ UVWATAUAVAWH
fD98t
A_A^A]A\_^]
t2H;H
t$ E3
L$ E3
t$ E3
L$ E3
UATAUAVAWH
t$ E3
\$ E3
t$ E3
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
D$ E3
A_A^A]A\]
t$ UWAVH
t$ UWAVH
t$ E3
@A^_]
!t$`H
\$ UVWH
UVWATAUAVAWH
fD98t
|$PE3
A_A^A]A\_^]
t$ WH
L$HH3
<K\t%
\$ UVWATAUAVAWH
A_A^A]A\_^]
f94Hu
fD94Au
@USVWAVAWH
D$PE3
A_A^_^[]
\$ UVWH
WATAUAVAWH
A_A^A]A\_
UVWAVAWH
`A_A^_^]
UVWAVAWH
D8}0u
0A_A^_^]
UAVAWH
@A_A^]
|$ UATAUAVAWH
A_A^A]A\]
\$ UVWATAUAVAWH
T$hE3
t$fD9(t
A_A^A]A\_^]
UAVAWH
A_A^]
@USWH
D$ E3
@USVWAVH
A^_^[]
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
pA_A^A]A\_^]
UVWATAUAVAWH
fD9$~u
@A_A^A]A\_^]
@USVWATAUAVAWH
D8;tvH
D$xH9\$pu
{D8|$Pt
A_A^A]A\_^[]
UVWATAUAVAWH
fB94Ku
D8}`u]L
`A_A^A]A\_^]
@USVWATAUAVAWH
D$XE3
D9l$4
UP+T$@A
A_A^A]A\_^[]
D8d$0
L$8H3
UWAVH
L$`E3
|$Xf9t$`t
D$(@@!
UWAVH
D$8E3
D$0E3
f9,Au
UWAVH
USVWATAVAWH
A_A^A\_^[]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
D$ E3
D$ E3
A_A^A]A\_
UVWATAUAVAWH
|$hE3
A_A^A]A\_^]
@SUVWAVH
D$0E3
L$pH3
A^_^][
D$ E3
x ATAVAWH
\$@E3
l$8E3
A_A^A\
L$ E3
\$(H;
\$(H;
UWATAVAWH
D$0!|$(H!|$ 
A_A^A\_]
L$HH3
D$ E3
|$ AVH
UWAVH
t$D8v
M8uID
@A^_]
|$ UH
|$ UH
UWAVH
@A^_]
qRP8^
@USWH
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
SVWATAUAVAWH
0A_A^A]A\_^[
UVWATAUAVAWH
@A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
x ATAVAWH
@A_A^A\
x AUAVAWH
A_A^A]
VWAVH
@A^_^
H;{ H
x AVH
H;~ H
x AVH
WAVAWH
@A_A^_
UVWAVAWH
L97u+E
A_A^_^]
qkV\C
WAVAWH
|$ E3
\$ E3
A_A^_
UVWATAUAVAWH
t/D8E
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
\$ UVWAVAWH
A_A^_^]
@USVATAUAVAWH
D8d$0
D8d$0t"
D9d$Xt
L9d$8
H;D$ht)H
L9d$8t
D8d$0u
D$ E3
A_A^A]A\^[]
WATAUAVAWH
A_A^A]A\_
UVWAVAWH
L$`H3
pA_A^_^]
pjSt=
UVWAVAWH
pjSt=
`A_A^_^]
pjSt=
UVWATAUAVAWH
t$PE3
D8d$1
D8d$0
L$4E3
D8t$0L
\$XE3
D8d$1
A_A^A]A\_^]
\$ UVWATAUAVAWH
|$8D!|$pL
D$ E3
D9d$8
D$8L;
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWAUAVAWH
t$@E3
D$(H;
A_A^A]_^[]
|$ UATAUAVAWH
L$ E3
A_A^A]A\]
@SVWH
@SVWH
@SVWH
UVWATAUAVAWH
L$@E3
D8l$0
|$HL+
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
x UATAUAVAWH
A_A^A]A\]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
L$XE3
D8d$0
D$`H+D$XH
t@D8d$2t9L
D9d$Ht
H;D$pt'H
A_A^A]A\_^]
\$ UVWATAUAVAWH
D9d$ht
D9d$ht
D9d$ht
|$ E3
A_A^A]A\_^]
` AUAVAWH
L9l$x
H#T$pH
l$@E3
D9l$@
H#L$pH
L)|$xu
$D8h@t
\$ E3
\$ E3
A_A^A]
WAVAWH
 A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
x ATAVAWH
 A_A^A\
D$HE3
L$0E3
SUVWATAUAVAWH
L9t$x
L9t$xu
T$pL#r0M
(A_A^A]A\_^][
SUVWATAUAVAWH
H;|$ t$L;
L#z0M
8A_A^A]A\_^][
UVWATAUAVAWH
H9D$(t1H;
@A_A^A]A\_^]
x AVH
H;W I
H!\$83
H!\$0H!\$(H!\$ 3
x AVH
t$ UWATH
!t$@H
D$(H!t$ 3
L$ E3
L$0E3
L$PH3
UATAVH
D!t$@H
D$(L!t$ 3
L$ E3
A^A\]
UVWATAUAVAWH
D$(E3
A_A^A]A\_^]
UWAWH
` UAVAWH
A_A^]
p#RRP
pIT2 
L$(E3
\$ UVWH
|$ UH
G(9C(t
G,H9C,u=
Gl9Clt;
UVWATAUAVAWH
u$A9Olu
xX8MgtSH
x-8Mgt(
G,I9E,
A_A^A]A\_^]
UVWAVAWH
D$`E3
A_A^_^]
UVWATAUAVAWH
D9o(t$H
F,H9G,H
A_A^A]A\_^]
UWAVH
x UAVAWH
A_A^]
UWATAVAWH
C,H9G,H
A_A^A\_]
WAVAWH
A_A^_
UVWATAUAVAWH
@8|$@
@8|$@
t;@8|$pt/H
@8|$pt
@8|$p
t<@8|$pt0H
A_A^A]A\_^]
t<@8|$pt0H
@8|$pt
@8|$p
@8|$p
t<@8|$pt0H
D$0E3
t$ UWAVH
@USVWATAVAWH
vhH;^
A_A^A\_^[]
UVWATAUAVAWH
ND8}`tFE
A_A^A]A\_^]
` UAVAWH
A_A^]
@USVWAVH
A^_^[]
\$ UVWATAUAVAWH
D$l u
uQD8u
A_A^A]A\_^]
@USVWAUAVAWH
A_A^A]_^[]
@8}wt
pIT2 
UVWATAUAVAWH
pIT2 
)L$`H
A_A^A]A\_^]
x AVH
USVWATAUAVAWH
pIT2 
9uHt*I
pIT2 
XA_A^A]A\_^[]
UVWATAUAVAWH
 A_A^A]A\_^]
\$ UVWAVAWH
A_A^_^]
UVWATAUAVAWH
x!D8uHu
0A_A^A]A\_^]
UWAVH
VWATAVAWH
L$xE3
0A_A^A\_^
UVWATAUAVAWH
D8l$0
D8l$0
p#RRP
A_A^A]A\_^]
x AVH
@l t%H;
UVWATAUAVAWH
pIT2 
D8d$@u
F(H9C,s
D8d$Qu
D8d$@t
B,H9F,
D8d$@
\$HD8d$Q
A_A^A]A\_^]
UVWATAUAVAWH
I;7u{H
|$Ht H
tKH;3r
A_A^A]A\_^]
UVWATAUAVAWH
T$(E3
D$0H;
@A_A^A]A\_^]
VWAVH
 A^_^
WATAUAVAWH
;|$`r
0A_A^A]A\_
x AVH
t$ UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
EgH;]
EgH;]
t.H;]
A_A^A]A\_^]
UVWATAUAVAWH
t<D8d$Xt0H
D8d$Xt
D8d$X
t<D8d$Xt0H
D$pE3
A_A^A]A\_^]
USVWATAUAVAWH
|$HL;
L$ E3
L$ E3
@8|$@
twI;}
L$ E3
D$ E3
L$ E3
L$ E3
L$ E3
L$ E3
A_A^A]A\_^[]
USVWATAUAVAWH
xA_A^A]A\_^[]
D8uHt
UVWATAUAVAWH
pIT2 
0A_A^A]A\_^]
L$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
ux@8uxt@E
A_A^A]A\_^]
UVWATAUAVAWH
D8eHt
N8H;_
pA_A^A]A\_^]
VWATAVAWH
A_A^A\_^
` UAVAWH
@A_A^]
UVWATAUAVAWH
D$PH9H,rKI
pIT2 
L$PH9
uLI;_
HHI;_
A_A^A]A\_^]
@USVWATAVAWH
@A_A^A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
MXH!}
H!uXA
@8u@thI
@8u@u
PA_A^A]A\_^]
@USVWAVH
PA^_^[]
UVWATAUAVAWH
D8d$ht
D8d$0thI
L9t$`v
L;t$`r
A_A^A]A\_^]
D8d$ht
D8d$ht
D8d$ht
D8d$ht
D8d$ht
D8d$ht
D8d$ht
WAVAWH
@A_A^_
|$ UATAUAVAWH
0A_A^A]A\]
x AVH
UVWATAUAVAWH
A_A^A]A\_^]
D$ E3
VWAVH
 A^_^
UWAVH
L$pH3
fA9<Hu
fA9<Iu
fA9<Cu
L$HE3
x UATAUAVAWH
pIT2 
|$0E3
L$ E3
D9d$X
D9|$X
D9|$Xt
e@L9`
D8l$x
D8mxt
D9l$h
D9l$ht
L9l$@t-H
xFL9l$8t-H
H;u I
D$ E3
A_A^A]A\]
|$ UAVAWH
H;D$8t
A_A^]
WAVAWH
0A_A^_
t$ UWATAVAWH
D9d$0t
D9d$0t
A_A^A\_]
UVWATAUAVAWH
pIT2 
`A_A^A]A\_^]
t$ WH
@80t(H
x UAVAWH
x0D8}wu
A_A^]
UVWATAUAVAWH
D8t$@
D$PE3
A_A^A]A\_^]
@USVWAVAWH
A_A^_^[]
p WAVAWH
0A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
@USVATAUAVAWH
pbTT$
B(9A8u
A_A^A]A\^[]
@USVWATAVAWH
A_A^A\_^[]
UWAVH
H,H9K,
@A^_]
|$ UAVAWH
fE9<Hu
A_A^]
WAVAWH
0A_A^_
UATAUAVAWH
l$ E3
A_A^A]A\]
UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
WAVAWH
@A_A^_
x UAVAWH
A_A^]
x UAVAWH
fF9<Bu
t$ E3
t$ E3
A_A^]
t$ WAVAWH
 A_A^_
@USVWATAUAVAWH
D8d$@u#H
C L9e(
} I;x
D8d$@t?H;
D8&uY
A_A^A]A\_^[]
x UAVAWH
@8}_t
A_A^]
x AVH
UATAUAVAWH
A_A^A]A\]
x UAVAWH
A_A^]
t$ WH
D$HE3
t$ UWAVH
|$ UATAUAVAWH
A_A^A]A\]
|$ UAVAWH
@A_A^]
UWAVH
H UATAUAVAWH
A_A^A]A\]
WAVAWH
L$0E3
@A_A^_
UVWAVAWH
A_A^_^]
x AVH
pIT2 
L$ UVWATAUAVAWH
pSRVK7-
 A_A^A]A\_^]
UWAVH
fA94Hu
fA94Iu
fA94Ku
f94Cu
WATAUAVAWH
H;{ r
H;{ r
@H;{ r
H;{ r
 A_A^A]A\_
x AVH
UWATAVAWH
A_A^A\_]
uoH9A
UWATAVAWH
L$ E3
H90u+H
A_A^A\_]
EH9{@u'
p AWH
D$ H;
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
L$@H3
H9{(v#H
H;{(r
H9{(v#H
H;{(r
UVWAVAWH
A_A^_^]
t$ UWAVH
qiZR46
H9{(v#H
H;{(r
p#RRP
UWAVH
L$PH3
|$ AVH
p#RRP
L$PH3
|$ AVH
pIT2 
p#RRP
L$XH3
WAVAWH
p#RRP
L$XH3
A_A^_
UATAVH
pIT2 
A^A\]
L$PH3
|$ UAVAWH
p#RRP
A_A^]
L$`H3
x UATAUAVAWH
D9d$Pu#H
D8d$8
@8|$9
L$pE3
D9d$Xt
A_A^A]A\]
9\$Xt
9|$Xt(H
@USVWAVH
A^_^[]
UWAVH
p#RRP
t8D8u
t8D8u
t8D8u
fD9<Wu
pIT2 
pIT2 
t$ WAUAVH
p#RRP
p#RRP
pIT2 
p#RRP
pIT2 
pIT2 
 A^A]_
t$ WH
D#L$0D
3D$8%x
t$ WH
D#L$0D
3D$8%x
pIT2 
p#RRP
p#RRP
L$XH3
VWAVH
p#RRP
L$HH3
UVWATAUAVAWH
pIT2 
pIT2 
pIT2 
u#L9m
pIT2 
A_A^A]A\_^]
USVWATAUAVAWH
p#RRP
MHH9Q,
xA_A^A]A\_^[]
p#RRP
p#RRP
UWAWH
UWATAUAVH
pIT2 
pIT2 
t$ E3
pIT2 
A^A]A\_]
p#RRP
WATAUAVAWH
I;}0r
p#RRP
A_A^A]A\_
L$XH3
x ATAVAWH
p#RRP
 A_A^A\
|$ AVH
p#RRP
USVWATAUAVAWH
p#RRP
prPv`
HA_A^A]A\_^[]
p#RRP
|$ UATAUAVAWH
p#RRP
p#RRP
p#RRP
p#RRP
p#RRP
p#RRP
p#RRP
p#RRP
0A_A^A]A\]
p#RRP
{ AVH
L$XH3
L$PH3
L$@H3
L$@H3
L$@H3
L$XH3
L$@H3
L$PH3
pIT2 
p#RRP
p#RRP
p#RRP
p#RRP
\$ UVWATAUAVAWH
|$(D#
@8u@uvM
D8m@tML
D8m@t"
D8mH@
@A_A^A]A\_^]
UAVAWH
pIT2 
p#RRP
t8D8}
t8D8}
pIT2 
L$ E3
A_A^]
d$ UH
p#RRP
VWAVH
p#RRP
l$ VWAVH
UATAUAVAWH
A_A^A]A\]
@SVWH
@SVWH
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
UVATAVAWH
H!\$8L
L$@H!\$0L
D$`H!\$(3
H!\$ H
H!\$8L
D$`H!\$0A
H!\$(A
H!\$ H
A_A^A\^]
UVWAVAWH
A_A^_^]
UWATAVAWH
D8ehuM
D8ept
A_A^A\_]
UVWATAUAVAWH
D9t$0
D$ E3
A_A^A]A\_^]
WAVAWH
@A_A^_
\$ UVWATAUAVAWH
D8l$0
D8l$0u#H
D8l$0u^H
D8l$0
A_A^A]A\_^]
pIT2 
@USVWATAUAVAWH
t$fD90t
fD93t
fD90t
fD90t
D$ E3
pIT2 
A_A^A]A\_^[]
!m8bn
@USVWAUAVAWH
@A_A^A]_^[]
D$`E3
L$`H3
UVWATAUAVAWH
p#RRP
L$ E3
L$ E3
tIL9k
tCL9k
L$ E3
L$ E3
`A_A^A]A\_^]
t$ WH
3D$8%x
UVWATAUAVAWH
E@H;]
EPH;]
M@H;]
PA_A^A]A\_^]
x UATAUAVAWH
vGH;]
A_A^A]A\]
UVWATAUAVAWH
D8d$0
D8d$0
A_A^A]A\_^]
VWAVH
pIT2 
D$PE3
D$PE3
0A^_^
UVWATAUAVAWH
A_A^A]A\_^]
pIT2 
v4H;{
D$ E3
D8|$@
D9|$`
L$PH;{
L$HH;{
L$HH;{
L$XH;{
L$XH;{
D8|$@tR
L$XH;{
L$XH;{
L9|$p
T$`H;
UWAVH
E'H!E7!E?
q@8}w
UWAVH
E'H!E7!E?
q@8}w
@USVWATAUAVAWH
pRP8^
pIT2 
pIT2 
pIT2 
pIT2 
pIT2 
pIT2 
D8ugt'
A_A^A]A\_^[]
UVWATAUAVAWH
D$hE3
L9l$X
l$PD9w8
pIT2 
pIT2 
A_A^A]A\_^]
pIT2 
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
90vFH
`A_A^A]A\_^]
UVWAVAWH
PA_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
@USVWAVH
L$(E3
A^_^[]
UVWATAUAVAWH
8]@t8
@8u@t+E3
PA_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
)t$ I
(t$ H
L$@H3
H9{8v#H
H;{8r
|$ UATAUAVAWH
A_A^A]A\]
@SVWH
f9,Au
UATAUAVAWH
pbTT$
A_A^A]A\]
UVWATAVH
A^A\_^]
UWATAVAWH
A_A^A\_]
VWATAVAWH
F8A!FHI
0A_A^A\_^
|$ UAVAWH
^@D8}(
 A_A^]
UWAVH
D$ E3
@A^_]
@USVWAVH
J,H;N
PA^_^[]
x UATAUAVAWH
<B\t~
<B\t~
Bl!tBI
L$ E3
pSRVK7-
@l t?D8}
A_A^A]A\]
@USVWAVH
|$t uFH
A^_^[]
x UATAUAVAWH
ET@GN@
T$ E3
D8d$8
p`W|1/
psQ~K6
A_A^A]A\]
@USVWAVAWH
A_A^_^[]
UVWATAUAVAWH
L$ E3
D$@D8
L$ E3
T$ E3
L$ E3
L$ E3
d$HE2
D$@D8
L$ E3
A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
\$;8]hu
8\$<u
A_A^A]A\_^]
x UATAUAVAWH
L$PD8
A_A^A]A\]
UVWATAUAVAWH
pbTT$
Q(A9U8u
D;ylu
A,I9E
A_A^A]A\_^]
|$ UAVAWH
pIT2 
pIT2 
pIT2 
A_A^]
UVWATAUAVAWH
d$ E3
D8l$0u
A_A^A]A\_^]
UVWATAUAVAWH
D9|$`
D$xfD
D8|$Ht
D;d$`
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAVAWH
D9d$P
d$ E3
A_A^A\_^[]
@USVWATAVAWH
D8d$0
A_A^A\_^[]
UVWATAUAVAWH
D8d$8t3H
D9d$P
D9d$P
A_A^A]A\_^]
@USVWAVAWH
hA_A^_^[]
|$ UATAUAVAWH
p"V^:'-
A_A^A]A\]
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
D9t$H
D;|$H
A_A^A]A\_^]
WAVAWH
0A_A^_
x UATAUAVAWH
A_A^A]A\]
@USVWATAUAVAWH
pIT2 
HcA$H
pIT2 
D8m^uPI
D8m_t5I
pSRVK7-
pIT2 
pIT2 
D8m`u
t=D8mat7H
D8mctNH
D8mdu
pIT2 
pIT2 
D8mut
D8mtt
D8mst
D8mrt
D8mnt
@8ujt
@8uitVH
@8uht
@8u8u
@8uft>H
@8ugt2H
@8}8u
psQ~K6
pIT2 
pIT2 
pIT2 
pIT2 
pIT2 
pIT2 
u/A8}
A_A^A]A\_^[]
UVWATAUAVAWH
D9t$P
t$ E3
L$@E3
A_A^A]A\_^]
UVWAVAWH
pI]p%?
A_A^_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
L$ E3
\$ UVWATAUAVAWH
pIT2 
T$ E3
A_A^A]A\_^]
VWAVH
 A^_^
USVWAVAWH
(A_A^_^[]
L$8H3
UVWAVAWH
D9}0u*H
p"V^:'-
`A_A^_^]
t$ UWAVH
t$ UWAVH
\$XD9t$H
L$8H3
UVWATAUAVAWH
D9d$H
D9d$H
D9d$H
D9d$X
D9d$X
A_A^A]A\_^]
|$ UATAUAVAWH
pIT2 
A_A^A]A\]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
VWAVH
L$ E3
PA^_^
\$ UVWAVAWH
psQ~K6
A_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
)L$pH
A_A^A]A\_^]
@USVWAVH
@A^_^[]
\$ UVWATAUAVAWH
x(D8m@t+E
x+D8m@t.M
D$ E3
x+D8m@t.M
H;M@sg
0A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
x UATAUAVAWH
A_A^A]A\]
UWATAVAWH
7@8uou
A_A^A\_]
t$ WH
pIT2 
WAVAWH
0A_A^_
@USVWAUAVAWH
A_A^A]_^[]
t$ UWATAVAWH
A_A^A\_]
L$`H3
D$`E3
L$`H3
L$ UH
L$ UH
fA94Hu
fA94Iu
f94Ku
fA94Ku
f94Gu
UVWATAUAVAWH
|$ E3
L$(E3
|$ E3
|$ E3
A_A^A]A\_^]
UWAVH
*9\$8v"H
x AVH
p#RRP
pIT2 
@USVWAVH
 A^_^[]
UATAUAVAWH
H!}hE3
H!}0E3
D$XE3
D!T$pH
D!U(A
t$PE3
t$8H;
L$PA;
|$8H;|$8H
T$@I;
D$HA;
T$@L;
D$HA;
L$`+D$HL
l$xD;E
H9D$8t\
D$`E3
D!E(A
YD!D$pE3
D!E(E3
L$8D3
L$HD3
d$hI;
!D$pE3
D$PM;
L$xI;
D$pI;
T$P9D$H
D!}(3
L!l$@D!m
L!l$hH!
T$pE3
L$`H;L$`
D$`H;
L$`H;
T$hI;
L$PE;
T$hL;
l$xD;D$Pt
D$0H9E
D!D$pA
YD!E8E3
D!D$pE3
D$HE3
!D$H3
L$@M;
D$HI;
L$@ti
T$@9D$P
A_A^A]A\]
L$hH3
USVWATAUAVAWH
A_A^A]A\_^[]
UWATAVAWH
\u#fE
D8e0u
\t+fA
:t#fE
\u,fD
D8`it
A_A^A\_]
t$ UWATAVAWH
fD9$Gu
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
xFD8ew
A_A^A]A\_^]
D$PE3
UVWATAUAVAWH
A_A^A]A\_^]
t$ UWATAVAWH
0A_A^A\_]
t$ WAVAWH
0A_A^_
UVWATAUAVAWH
pIT2 
D8d$Qu
D$ E3
pIT2 
pIT2 
pIT2 
pIT2 
D$ E3
E8fPt
pIT2 
D8d$Pt
pIT2 
D8d$Pt
A_A^A]A\_^]
UVWAVAWH
D8uHt7
@A_A^_^]
WAVAWH
 A_A^_
|$ UATAUAVAWH
A_A^A]A\]
x AVH
x AVH
UVWATAUAVAWH
pIT2 
pIT2 
D$ E3
D$ E3
pIT2 
@8t$@t
pIT2 
@8t$@t
@8t$Aus@
A_A^A]A\_^]
USVWATAUAVAWH
HA_A^A]A\_^[]
USVWATAUAVAWH
L$HE3
D8|$Pt0L
t+s/I
pIT2 
A_A^A]A\_^[]
t$ WH
D#L$0D
3D$8%x
UWAVH
@A^_]
@USVWATAVAWH
A_A^A\_^[]
x AVH
x AVH
pIT2 
L$@H3
L$@H3
L$XH3
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAVAWH
A_A^A\_^[]
pIT2 
UATAUAVAWH
l$ E3
E8,$uCH
A_A^A]A\]
t$ UWAVH
pIT2 
\$ UVWATAUAVAWH
p#RRP
pIT2 
p#RRP
D$ E3
pIT2 
pIT2 
pIT2 
pA_A^A]A\_^]
|$ UAUAWH
A_A]]
t2H;s
WAVAWH
@A_A^_
@8ugt#H
VWAVH
p#RRP
 A^_^
VWAVH
p#RRP
 A^_^
UVWAVAWH
A_A^_^]
@SUVWAUAVAWH
PA_A^A]_^][
UVWATAUAVAWH
pIT2 
D98t E
pIT2 
UD8l$@
D8l$A
D8l$@
L$HE3
D8l$@
D8hiA
fD9,Pu
A_A^A]A\_^]
@USVWATAVAWH
`A_A^A\_^[]
t$ UWATAVAWH
D9d$P
D8d$0u
A_A^A\_]
x AUAVAWH
 A_A^A]
x AUAVAWH
 A_A^A]
(t$`I
x ATAVAWH
@A_A^A\
qiZR46
VWATH
 A\_^
t$ WH
pIT2 
L$@E3
p WAVAWH
 A_A^_
@USVWAVH
0A^_^[]
@USVWAVH
prU8q
0A^_^[]
@USVWAUAVAWH
@8|$`u1H
t$@@8{
(D$@f
t$Pt7I
A_A^A]_^[]
x5H;_
SUVWATAUAVAWH
H9qpu
pIT2 
pIT2 
D$HL;
pIT2 
pIT2 
XA_A^A]A\_^][
@SVWATAUAVAWH
p#RRP
pIT2 
@8t$P
H9t$p
A_A^A]A\_^[
UVWATAUAVAWH
p#RRP
pIT2 
@A_A^A]A\_^]
@SVWAVH
p#RRP
8A^_^[
SUVWATAUAVAWH
p#RRP
D$0H;
XA_A^A]A\_^][
p WATAUAVAWH
0A_A^A]A\_
@USVWATAUAVAWH
pIT2 
pIT2 
p#RRP
D$XL9
D$XD8
D8l$Pu
D$XL9
D8l$Q
D$XD8
pIT2 
D$XE3
M9$$A
D8l$RtdH
D$XD8
A_A^A]A\_^[]
x UAVAWH
D9|$0t
D9|$0t
D9|$0t
A_A^]
UVWATAUAVAWH
9t$0t
9t$0t'H
A_A^A]A\_^]
x UATAUAVAWH
tJH;^pr
L$ E3
tII;^
L$ E3
A_A^A]A\]
p#RRP
\$HI;
D$hL;
H9Npv0H
H;Nps
L$8E3
p#RRP
|$ UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
t$ WH
t$ WH
D$0!D$@H
L$hE3
@USVWATAUAVAWH
v;H;w
D$ E3
D$hH;w
A_A^A]A\_^[]
VWAVH
0A^_^
@USVWAVH
A^_^[]
UVWAVAWH
 A_A^_^]
t$ WATAUAVAWH
L$hE3
0A_A^A]A\_
L$ UVWATAUAVAWH
PA_A^A]A\_^]
x UATAUAVAWH
pIT2 
L$8E3
D$0L;
A_A^A]A\]
UATAUAVAWH
L9ipu
A_A^A]A\]
@SVWATAUAVAWH
f94Au
(D$`f
A_A^A]A\_^[
UVWATAUAVAWH
L$ E3
L$ E3
PA_A^A]A\_^]
u)A8q
WATAUAVAWH
uuE8N
 A_A^A]A\_
d$PI;
fA9<Hu
fA9<Iu
fA9<Cu
90tKH
90uFH
x UATAUAVAWH
A_A^A]A\]
UWATAUAVH
A^A]A\_]
x UATAUAVAWH
pIT2 
pIT2 
L9o0u'H
L9o0w
H;w0r
uIH;w0r
H;w0r
H;w0r
`hH;w0r
H;w0r
D9l$xunE
A_A^A]A\]
UVWATAUAVAWH
p#RRP
p#RRP
L9kPv"
A_A^A]A\_^]
H UATAUAVAWH
|$ E3
A_A^A]A\]
t$ UH
x UATAUAVAWH
L;oPr
L;wPr
A_A^A]A\]
L$0E3
\$@D9D$8L
uBD9R
u-D9R
u'D9J
L$ E3
@SVWH
@USVWAVH
A^_^[]
USVWATAUAVAWH
pIT2 
hA_A^A]A\_^[]
x UAVAWH
A_A^]
x AVH
pIT2 
pIT2 
UVWAVAWH
D8|$0t
D9|$Pt
D9|$Pt
A_A^_^]
x AVH
@USVWATAVAWH
A_A^A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
t$ WH
\$ E3
L$PH3
\$ UVWATAVH
pIT2 
pIT2 
A^A\_^]
x UATAUAVAWH
'D8d$0t
L9c(A
t>H;x
p#RRP
p#RRP
A_A^A]A\]
UWATAVAWH
pIT2 
A_A^A\_]
UVWAVAWH
@A_A^_^]
VWAVH
9D$Ht
 A^_^
UVWATAUAVAWH
p#RRP
A_A^A]A\_^]
x UATAUAVAWH
p#RRP
L9l$`
H;|$`r
H;|$`r
H;|$`
L9l$@
H;|$@r
H;|$@r
L$ E3
H;|$@
A_A^A]A\]
UATAUAVAWH
fD9$Gu
D$(E3
A_A^A]A\]
@USVWATAVAWH
`A_A^A\_^[]
L$ E3
\$ UVWATAUAVAWH
\$8I;
D8|$0
D8|$0tS
L;v(rUI
t+L;v(r
)L;v(r
|$ E3
A_A^A]A\_^]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
x UATAUAVAWH
pIT2 
pIT2 
A_A^A]A\]
UVWAVAWH
L$8E3
L9|$8
A_A^_^]
D8|$0@
D$ E3
D9|$T
\$ UVWATAUAVAWH
pIT2 
pIT2 
pIT2 
|$ E3
pIT2 
pIT2 
A_A^A]A\_^]
x UATAUAVAWH
D9|$`t
D9|$Pt
L$ E3
D9|$Pt
D9|$Pt
A_A^A]A\]
UWATAVAWH
A_A^A\_]
|$ UH
VWAVH
@A^_^
H9{(v#H
H;{(r
VWATAVAWH
0A_A^A\_^
H9Y(vzH;_(r
H;_(r
L$ E3
L$ E3
UVWATAUAVAWH
D8|$PttE8
D8|$Q
pIT2 
A_A^A]A\_^]
t$ UWAVH
x UATAUAVAWH
D8d$0A
D8d$XtFI
D9d$`
t$@H;
d$ E3
D9d$`t
D9d$`t
pIT2 
L$ E3
D8d$2
D8d$3
D8d$4
A_A^A]A\]
x UATAUAVAWH
x+D8m
A_A^A]A\]
|$ UH
@USVWH
@USVWATAUAVAWH
L9}ot)H
A_A^A]A\_^[]
L9}ot,H
USVWATAUAVAWH
hA_A^A]A\_^[]
UAVAWH
pIT2 
@A_A^]
UWAVH
 A^_]
UWATAVAWH
t^9p$tYH
A_A^A\_]
UWATAUAVH
A^A]A\_]
H9{@v#H
H;{@r
t$ UWATAVAWH
pIT2 
x1D8e0t
t0D8e
t,D8e
t,D8e
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
t0D8e
t,D8e
A_A^A]A\]
@USVWATAVAWH
D8d$0
D8d$0u
A_A^A\_^[]
UVWATAUAVAWH
D9e@u
pA_A^A]A\_^]
|$ UATAUAVAWH
pIT2 
A_A^A]A\]
UAVAWH
A_A^]
` UAVAWH
t1D8e
t1D8e
t0D8e
A_A^]
UVWATAUAVAWH
A_A^A]A\_^]
UAVAWH
A_A^]
\$ UVWATAUAVAWH
pIT2 
D8l$Xt#I
\$@L;
D9mPtFD
pIT2 
D9mPuxH
t-D8l$Xt
D8l$X
D8l$X
t-D8l$Xt
t-D8l$Xt
A_A^A]A\_^]
t$ UWAVH
WAVAWH
pIT2 
 A_A^_
\$ UVWATAUAVAWH
D8d$1
piYVH
D8d$0
D8d$1u%L
L9d$8t
D8d$0
D$pH#
D$pH#
D8d$0
L9d$8t
A_A^A]A\_^]
t$ UWAVH
x UATAUAVAWH
p#RRP
A_A^A]A\]
WAVAWH
@A_A^_
UVWATAUAVAWH
M9}(v6I
I;}(s
A_A^A]A\_^]
t$ UWATAVAWH
D8d$0t
D9d$8
D9d$8t
A_A^A\_]
UVWATAUAVAWH
D9d$Xt"L
A_A^A]A\_^]
@USVWATAUAVAWH
D$PE3
A_A^A]A\_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
D8t$@t+I
D9t$H
D$AM9
t$ E3
|$ E3
9|$Ht
A_A^A]A\_^]
|$ UATAUAVAWH
pIT2 
 t|L9
pIT2 
pIT2 
A_A^A]A\]
@USVWATAUAVAWH
8L$QH
D8t$@
D8t$At=H
fD94Au
fG94Su
fD94Wu
<G\uoH
<C\u:L
D8t$@
A_A^A]A\_^[]
pIT2 
x UATAUAVAWH
D$@E3
|$HM9e(v7I
I;](s
A_A^A]A\]
UVWATAUAVAWH
D8l$0t
D9l$8
D8l$0
D9l$8t
D8l$0tU
D9l$8t
A_A^A]A\_^]
|$ UAVAWH
A_A^]
UWAVH
x=D8t$0u
x UATAUAVAWH
L$ E3
H9D$`u
L$ E3
A_A^A]A\]
UVWAVAWH
A_A^_^]
x UATAUAVAWH
L$0E3
d$8D8a
fD9$Pu
fD9$Pu
fD9$Pu
fD9$Gu
fE9$Fu
fE9$Ou
D9f u
A_A^A]A\]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@SVWH
UVWATAUAVAWH
t}I;_
A_A^A]A\_^]
UVWATAUAVAWH
8D$0u$H
O D8d$1t
;L$`t
t$pE3
D8d$0
A_A^A]A\_^]
WATAUAVAWH
t`fE9
0A_A^A]A\_
t,fA98t&
UAVAWH
A_A^]
UVWATAUAVAWH
pIT2 
pIT2 
pIT2 
0A_A^A]A\_^]
VWATAVAWH
pIT2 
pIT2 
0A_A^A\_^
|$ UATAVH
A^A\]
x ATAVAWH
pIT2 
pIT2 
0A_A^A\
UWAVH
D$(E3
0A^_]
UVWATAUAVAWH
pIT2 
A_A^A]A\_^]
SUVWATAUAVAWH
pIT2 
HA_A^A]A\_^][
|$ UH
L$ E3
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
pIT2 
pIT2 
0A_A^_
UATAUAVAWH
D$(E3
A_A^A]A\]
x AVH
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
UUUUUUU
A_A^A]A\_
H;{ H
UVWATAUAVAWH
pIT2 
0A_A^A]A\_^]
x ATAVAWH
pIT2 
0A_A^A\
|$ AVH
D$0L!t$8L!t$@A
D$8L!t$H
|$ UATAVH
pIT2 
A^A\]
WAVAWH
0A_A^_
pIT2 
pIT2 
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
 A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
SUVWATAUAVAWH
L9t$x
L9t$xu
T$pL#r0M
(A_A^A]A\_^][
t$ UWAUAVAWH
A_A^A]_]
t$ E3
UWAVH
)L$@L
T$8H;
UWAVH
,D8ug
D8ugt 
D$HH!D$PH
D$`H!D$h
D$pH!E
USVWATAUAVAWH
D8l$0
d$hE3
D8l$0
D9i@v
A_A^A]A\_^[]
\$ UVWATAUAVAWH
G8H9D$xv
A_A^A]A\_^]
L$ VWAVH
 A^_^
UVWATAUAVAWH
D8t$0
L$ E3
D8t$0tYD
D8t$0u.
d$0E3
D8|$0tfH
ExH9D$ht[L
A_A^A]A\_^]
UWAVH
@USVWAVH
A^_^[]
|$ UAVAWH
fD9<~u
A_A^]
UWAVH
UVWAVAWH
D$`E3
D8{Pu3
A_A^_^]
UWATAVAWH
|$ E3
|$ E3
A_A^A\_]
t$ UWATAVAWH
pIT2 
A_A^A\_]
@USVWATAVAWH
8\$@u
8\$@u
pIT2 
pIT2 
8\$Bt
x_8\$Au
8\$@t
A_A^A\_^[]
UVWAVAWH
pIT2 
D8}wu
A_A^_^]
T$ E3
UWATAUAVH
D8t$0
A^A]A\_]
l$ E3
|$ UH
UWAVH
|$ UAVAWH
A_A^]
@USVWATAVAWH
D8d$0
D8d$1
|$ E3
xaD9d$@t
D8d$0
uLD9d$@t
D9d$@t(H
A_A^A\_^[]
\$ UVW
SVWATAUAVAWH
 A_A^A]A\_^[
L$@H3
L$@H3
UVWAVAWH
E\$`L
A_A^_^]
VWATAVAWH
p#RRP
 A_A^A\_^
{ UATAUAVAWH
H9P }
A I9E
A_A^A]A\]
x UATAUAVAWH
D$HE3
\$PL9
D8d$@
H;\$XtAL
D8d$@
H;\$XtAL
H;\$XtAL
|$HH;
D$(E3
D$(E3
A_A^A]A\]
x UATAUAVAWH
p#RRP
pIT2 
pIT2 
D$(E3
D$(E3
A_A^A]A\]
d$ AUAVAWH
D$xE3
D$(E3
p#RRP
T$XH;T$`tGL
pIT2 
p#RRP
T$XH;T$`tGL
A_A^A]
SVWAVH
|$xI;
|$xI;
HA^_^[
UVWAVAWH
A_A^_^]
f9<Bu
L$8H9;t
t$ WH
UVWAVAWH
pA_A^_^]
p WATAUAVAWH
pIT2 
pIT2 
0A_A^A]A\_
p#RRP
@USVWATAVAWH
L9;t?H
pjSt=
pjSt=
pjSt=
L9|$xv)I
H;D$xr
A_A^A\_^[]
SVWATAUAVAWH
D$(H+
T$HI;
PA_A^A]A\_^[
L$ I;
T$HI;
H VWATAVAWH
A_A^A\_^
UAVAWH
A_A^]
@SVWATAUAVAWH
l$(I;
|$(E3
pA_A^A]A\_^[
VWAVH
D$(H+D$ H
@A^_^
|$ ATAVAWH
0A_A^A\
@USVWATAUAVAWH
D8d$0
|$@L;
A_A^A]A\_^[]
\$ UVWH
@8t$0
H9D$x
x AUAVAWH
\$(H;
\$(8P
\$(8P
\$(8P
(D$ L
@A_A^A]
UVWATAUAVAWH
A_A^A]A\_^]
|$ ATAVAWH
p#RRP
pIT2 
A_A^A\
` UAVAWH
fD9$Ou
\$ UVW
@SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
yxxxxxxxH
\$xMi
HiL$ 
0A_A^A]A\_^[
WATAUAVAWH
l$xM;
A_A^A]A\_
UVWATAUAVAWH
twI;^
A_A^A]A\_^]
)L$PH
)L$PH
|$ AVH
x UATAUAVAWH
L9l$ t
A_A^A]A\]
l$ VWAVH
0A^_^
VWAVH
@A^_^
UVWATAUAVAWH
D8ugu.H
A_A^A]A\_^]
p AWH
UVWAVAWH
pA_A^_^]
SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
t$ WATAUAVAWH
0A_A^A]A\_
t$ WATAUAVAWH
0A_A^A]A\_
x ATAVAWH
 A_A^A\
t$ WATAUAVAWH
T$PH;
L$PH;
L$PH;
L$PH;
 A_A^A]A\_
USVWATAUAVAWH
XA_A^A]A\_^[]
L$0H;
L$0H;
x UATAUAVAWH
A_A^A]A\]
USVWATAUAVAWH
d$lH!\$`H
EwH9D$P
D$ E3
D$0H;
D$0H;
|$0H;
A_A^A]A\_^[]
WAVAWH
L$ E3
L$ E3
A_A^_
WAVAWH
 A_A^_
t$ WH
@USVWH
@USVWAVH
D9t$ht
pRP8^
D9t$lt
A^_^[]
UWAVH
 A^_]
@USVWAVH
A^_^[]
UVWAVAWH
A_A^_^]
UWAVH
 A^_]
UWAVH
0A^_]
\$ UVWATAUAVAWH
D9l$Pt
D9l$Pt
D9l$Pt
D9l$Pt
A_A^A]A\_^]
t$ UWAVH
D8t$ 
D9t$8t
UVWATAUAVAWH
|$`D9
t$xD9
|$`D9
|$`D9
|$`D9
t$xD9
A_A^A]A\_^]
\$ UVWATAUAVAWH
D9l$P
D9l$P
upD9l$P
}XD9l$P
e@D9l$P
H9T$x
pz\:(
A_A^A]A\_^]
@USVWATAUAVAWH
pz\:(
pjSt=
A_A^A]A\_^[]
@USVWATAUAVAWH
@8t$8
t$ E3
f94Au
A_A^A]A\_^[]
t$ WAVAWH
 A_A^_
VWATAVAWH
9|$ht
0A_A^A\_^
SVWATAUAVAWH
 A_A^A]A\_^[
x ATAVAWH
A_A^A\
VAVAWH
@A_A^^
L9|$ht"H
L$XL9}
t$ WH
L$`H3
t$ UWAVH
@USWH
 H;|$Hu
@USVWATAVAWH
L$8E3
D8d$0urL
A_A^A\_^[]
\$HD8d$0
D8d$0
UWATAVAWH
A_A^A\_]
UATAUAVAWH
A_A^A]A\]
t$ UWAVH
D8t$0u9H
L$ UWATAVAWH
0A_A^A\_]
@USVWATAUAVAWH
!\$hH
L$x;t$`r
;|$hr
A_A^A]A\_^[]
UVWATAUAVAWH
pIT2 
pkV\C
pA_A^A]A\_^]
UAVAWH
A_A^]
UWAVH
@A^_]
x UAVAWH
L$ E3
L$ E3
A_A^]
x AVH
x AVH
@USVWAVH
D$(E3
PA^_^[]
qKQ:r
x AVH
x AVH
t$ WH
UVAVH
`A^^]
UVWATAUAVAWH
H!}XH
PA_A^A]A\_^]
t$ WH
UAVAWH
D9|$@t
D9|$@t
D9|$@t
D9|$@t
A_A^]
|$ UH
UVWATAUAVAWH
pA_A^A]A\_^]
|$ UH
t$ UWAVH
0A^_]
UWATAVAWH
\$ E3
A_A^A\_]
q`Rrr
L$ E3
qPV2f
@USVWATAUAVAWH
A_A^A]A\_^[]
|$ UATAVH
A^A\]
UAVAWH
D9}8u-H
D8}8I
A_A^]
@USVWAVH
PA^_^[]
l$ VWATAVAWH
 A_A^A\_^
UWAUAVAWH
A_A^A]_]
x ATAVAWH
0A_A^A\
SUVWATAUAVAWH
H9{8vb
D$0L;k8r
L;k8r
HA_A^A]A\_^][
t$ WH
\$0;\$4u'D
WAVAWH
trH;^
0A_A^_
x UATAUAVAWH
L$hE3
L9l$Ht
\$@I;
D9l$4
fD9,Au
D8l$0
fD8l$0
9D8l$1
D9l$4
D9l$4
D8l$1
D9l$4
D9l$4
D9l$4
A_A^A]A\]
D8l$8u+H
x UATAUAVAWH
L9t$Ht
\$8I;
hD8t$0
5D8t$0
D9t$@
A_A^A]A\]
UWAVH
0A^_]
UVWATAUAVAWH
`A_A^A]A\_^]
UAVAWH
A_A^]
UVWATAUAVAWH
8\tFA
PA_A^A]A\_^]
UATAUAVAWH
@8}Ht
0A_A^A]A\]
L$`H3
|$ UATAUAVAWH
D8e8t
t$fD9 t
fD9#t
A_A^A]A\]
L$ E3
L$ UVWATAUAVAWH
D9}gt
t1D8}
t1D8}
A_A^A]A\_^]
t$ WH
@USVWATAVAWH
L9'u4I
fD9$Fu
fE9$Fu
fE9$Iu
A_A^A\_^[]
UATAUAVAWH
H9Egr
A_A^A]A\]
L$ UVWATAUAVAWH
L9/u4H
fE9,Gu
A_A^A]A\_^]
UVWAVAWH
D8}0A
t$ E3
A_A^_^]
@USVWAVH
@A^_^[]
UVWATAUAVAWH
l$8H!]
D!t$PE3
L!d$HL
L$pE3
D!l$PM
l$@D3
L$PA+
D$@E3
L$@H;L$@
D$@H;
L$@H;
T$@M;
L$HM;
D$PA;
L$p+D$PA;
L$HI;
L$0tV
9D$Pt?H
L9m0u
L9m0u
A_A^A]A\_^]
|$ UH
E/!E/
EG!EGf
|$ UH
D$8E3
UVWATAUAVAWH
mpI!]
H!]pH
H!]pH
I;v8r
I;v8r
H;E`w
I9v8vc
I;v8r
I;v8r
@A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
fG9,tu
A_A^A]A\_^]
\$ UVWATAUAVAWH
9\$Ht
L$pE3
9\$Ht
|$ E3
9\$Ht
9\$Ht
89\$Ht
9\$Ht
A_A^A]A\_^]
VWAVH
PA^_^
@USVH
@USWH
\$ UVWATAUAVAWH
D9d$Pt
<@\t'
eg@8|$@
L$ E3
ZL9|$H
L$ E3
L!|$HH
|$`E3
D9l$P
D9l$P
D9l$Pt
A_A^A]A\_^]
x UATAUAVAWH
l$xL!d$@D!e
L!d$H3
D!\$pD!]
D$`H;
L$`H;L$`r
D$`H;
L$`H;L$`rFH
D$`H;
L$`H;L$`r H
T$HL;
T$HL;
T$HI;
D$pA;
T$HL;
D$pA;
+D$pA;
D$HD;E
L$hD;
!D$pL
D$@M;
D$pI;
L$@M;
T$@9E
H9uHt=L
A94$H
H9uHu
D!T$pD!U
D$XH;
L$XH;L$XrFH
D$XH;
L$XH;L$Xr
L$HH;
L$HL;
L$HM;
L$HM;
D$H;U0
L$hD;
D!M8D
D$`I;
\$@M;
T$@9E
A_A^A]A\]
` UAUAVH
A;F@uiD
A^A]]
@USVWATAUAVAWH
\$ E3
H9D$`
D8l$@ul
t$ E3
A_A^A]A\_^[]
x UAVAWH
A_A^]
\$ UVWATAUAVAWH
D9|$@t
D9|$@t
A_A^A]A\_^]
@USVWATAVAWH
A_A^A\_^[]
\$ UVWH
UAVAWH
D$ E3
A_A^]
x AVH
<G_th
D$ f9(u$H
@USVWAVH
A^_^[]
L$ SVWAVH
8A^_^[
|$ ATAVAWH
0A_A^A\
t$ WATAUAVAWH
 A_A^A]A\_
H9u(uHH
UWATAVAWH
A_A^A\_]
WAVAWH
0A_A^_
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
PA_A^A]A\_^]
WAVAWH
 A_A^_
:gMd`u=
t$ WH
WAVAWH
@A_A^_
L$ UWAUAVAWH
A_A^A]_]
H UATAUAVAWH
A_A^A]A\]
UWAUAVAWH
A_A^A]_]
p AWH
<C\tK
t$ UWAVH
L$ E3
UVWATAUAVAWH
D8mwu
pcT<L
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
pcT<L
H9{Ht
A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
x ATAVAWH
CL9CHwMI
@A_A^A\
x ATAVAWH
@A_A^A\
x AVH
tHH;_
UVWATAUAVAWH
F0I9F8u)
D9l$|t
A_A^A]A\_^]
UVWAVAWH
D8|$0tQ
A_A^_^]
tTM;A
tTM;A
UVWATAUAVAWH
T$8E3
E8I+E0H
9L$|t!
t<I;^
A0H9A8u
A_A^A]A\_^]
UVWATAUAVAWH
D$PL;
D8d$0
D$PH;
D$PE3
A_A^A]A\_^]
@USWH
8] t(L
L$hH3
UWAVH
L$0E3
t$ WATAUAVAWH
D8aiA
0A_A^A]A\_
UATAUAVAWH
,D8ehu&D
D8e`t%H
A_A^A]A\]
d$ E3
D8aiu
d$ E3
UVWATAUAVAWH
\$hA9^ t
~0A9^ t
A_A^A]A\_^]
x ATAVAWH
 A_A^A\
VWAVH
L$PH3
@SVWATAUAVAWH
A_A^A]A\_^[
UVWATAUAVAWH
0A_A^A]A\_^]
t$ WH
t#f9(t
L$xH3
VWATAVAWH
A_A^A\_^
L$PH3
H9i@t
T$ H;W
USVWATAUAVAWH
@8yi@
t<@8|$`
usL;}
A_A^A]A\_^[]
x UATAUAVAWH
D$xE3
D$@E3
A_A^A]A\]
fB94Cu
t$ UWAVH
t$ E3
@USVWAVAWH
xA_A^_^[]
M8;MH
x ATAVAWH
A_A^A\
@USVWAVH
A^_^[]
x ATAVAWH
 A_A^A\
pZS6\
pZS6\
H9{hv#H
H;{hr
|$ UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
@tDD8
D8`iu
@tDD8
`A_A^A]A\_^]
VWATAVAWH
 A_A^A\_^
qKQ:r
UWATAVAWH
tSH;C
A_A^A\_]H
UVWATAUAVAWH
H;Whr
A_A^A]A\_^]
UATAUAVAWH
L9ohv*D
H;Ghr
A_A^A]A\]
{ AVH
pITzf
UVWATAUAVAWH
t#f90t
t#f90t
PA_A^A]A\_^]
UATAVH
A^A\]
UVWATAUAVAWH
D$ E3
L$ E3
L$ E3
L$ E3
t$fD9 t
fD9(t
t$fD9 t
fD9(t
t$fD9 t
fD9(t
t$fD9 t
fD9(t
A_A^A]A\_^]
WAVAWH
fD9<Vu
 A_A^_
x AVH
D$0E3
UWATAVAWH
A_A^A\_]
VWATAVAWH
@A_A^A\_^
q*Xv\
x AVH
q`Rrr
\$ UVWATAUAVAWH
t<D8t$ht0A
D8t$ht
t<D8t$ht0I
D8t$ht0I
D8t$At
D9t$pv.
D8t$h
9|$pv.
t<@8|$ht0H
9t$pv.
@8t$h
D9t$pv.
D8t$h
D9t$pv.
D8t$h
D9t$pv.
D8t$h
D9t$pv.
t<D8t$ht0I
D9t$pv.
t=D8t$ht0I
A_A^A]A\_^]
t$ WH
t'H!D$(H
WAVAWH
@A_A^_
qITzf
x UATAUAVAWH
:\t&H
A_A^A]A\]
d$ UAVAWH
t$ E3
pITzf
A_A^]
UWATAVAWH
pITzf
A_A^A\_]
@USVWH
t$HH9
f94Au
D$(E3
p8[\p
q8[\p
` UAVAWH
A_A^]
p WAVAWH
 A_A^_
psWVk
pxQTp
q!QV0&8
qPV2f
L$PH3
t$ WH
x UATAUAVAWH
L$ E3
E_H9M
A_A^A]A\]
UVWAVAWH
0A_A^_^]
|$ UATAUAVAWH
D8`iu{
d$ E3
A_A^A]A\]
x UATAUAVAWH
D8hiA
pKQ:r
A_A^A]A\]
UWATAVAWH
pKQ:r
A_A^A\_]
p!QV0&8
VWAVH
0A^_^
\$ UVWATAUAVAWH
D$hE8
D$hE8
D9phu
D$hE8
D$hE8
p*Xv\
@8t$P
A_A^A]A\_^]
UWATAVAWH
fD9$Ou
fE9$Nu
fE9$Gu
D9f u
A_A^A\_]
|$ UAVAWH
A_A^]
@USVWAVH
A^_^[]
UWATAVAWH
D9g`v{H
pKQ:r
A_A^A\_]
UWATAVAWH
D9c`w
p;_za>q
pKQ:r
A_A^A\_]
q;_za>q
p!QV0&8
WAVAWH
 A_A^_
L$ UH
VWATAVAWH
 A_A^A\_^
UVWATAUAVAWH
D8{St:
D8{St<D9e
L$ E3
D8{Tt+H
D8{Ut
v#D8e
D9eXt
y!D8cRu
pA_A^A]A\_^]
x AVH
G@H9D$ t
E0H9E
UWATAVAWH
fD9<Hu
|$ E3
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
|$ UATAUAVAWH
fD9$Hu
p[V2F
D8e8t"I
p[V2F
pPV2f
A_A^A]A\]
qjS8S
pjS8S
UATAUAVAWH
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
F(H9G(
F(H9G(u
F09G0t
UWATAVAWH
p*Xv\
p*Xv\
p*Xv\
A_A^A\_]
UVWATAUAVAWH
L$ E3
L$ E3
L$ E3
A_A^A]A\_^]
@USVWATAUAVAWH
D8|$`
A_A^A]A\_^[]
WATAUAVAWH
y@H9A8u
A_A^A]A\_
UVWAVAWH
 A_A^_^]
UVWAVAWH
0A_A^_^]
@USVWATAVAWH
`A_A^A\_^[]
@USVWATAUAVAWH
|$ E3
ZZ^&Q
8T$qt(I
|$q@8}
fC9<Fu
f9<Bu
|$p8\$q
@8|$q
D$ E3
D93v,
D93v,
D93v,
D$ E3
A_A^A]A\_^[]
USVWATAUAVAWH
A89B8
A89B8
p*Xv\
p*Xv\
D$ E3
D$ E3
A_A^A]A\_^[]
UVWATAUAVAWH
D$`E3
A_A^A]A\_^]
p*Xv\
p WAVAWH
|$@H9
t$xH9
 A_A^_
qZS6\
q8[\p
|$ UAVAWH
A_A^]
D$ E3
\$ UVWAUAVH
l$ E3
l$ E3
l$ E3
l$ E3
l$ E3
A^A]_^]
q!QV0&8
@USVWAUAVH
l$ E3
l$ E3
l$ E3
l$ E3
A^A]_^[]
UVAVH
PA^^]
x UATAUAVAWH
tgL;w
D8o tBI
A_A^A]A\]
t$ UWATAVAWH
|$0E3
|$(E3
A_A^A\_]
UVWAVAWH
|$ E3
A_A^_^]
x UATAUAVAWH
w D9e
A_A^A]A\]
UVWATAUAVAWH
L$ E3
ND8eWtn
u"D8eGt
D$ E3
A_A^A]A\_^]
UWATAUAWH
A_A]A\_]
UATAUAVAWH
A_A^A]A\]
L$@H3
UAVAWH
fD9<Cu
A_A^]
UVWATAUAVAWH
L$pE3
D8|$`
D8|$`
L9|$h
8D$`uuH
A_A^A]A\_^]
fA9<Hu
fA9<Iu
f9<Ju
f9<Cu
UVWAVAWH
p[V2F
E@D8}0t6H
p[V2F
p[V2F
p[V2F
D8}0t
p[V2F
p[V2F
@A_A^_^]
q[V2F
t$ WAVAWH
fD9<Hu
p[V2F
p[V2F
0A_A^_
qjWr:
UATAUAVAWH
H;{0smH
L9k0v9
H;{0r
tmL;s8r
A_A^A]A\]
\$ UVWAVAWH
 A_A^_^]
@SUVWAVH
I|$pH
0A^_^][
t$ WH
UVWATAUAVAWH
`A_A^A]A\_^]
H9{0v&H
H;{0r
UVWATAUAVAWH
d$ E3
A_A^A]A\_^]
x UAVAWH
uHL9y
A_A^]
@USVWATAVAWH
 A_A^A\_^[]
t$ WATAUAVAWH
A_A^A]A\_
@SVWH
m4H+L$(H
L$@H3
UWATAVAWH
fD9<Hu
O(D8y
fD9<Xu
A_A^A\_]
h VWAVH
 A^_^
WATAUAVAWH
uMfD9n
A_A^A]A\_
VWATAVAWH
A_A^A\_^
\$ E3
qZS6\
@USVWAVH
pA^_^[]
@USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
0A_A^_^]
UVWATAUAVAWH
@A_A^A]A\_^]
q8[\p
q!QV0&8
UVWAVAWH
PA_A^_^]
UWAWH
D$ E3
PA__]
UWATAVAWH
G H9G
D8>t,H
G H9G
H;G u
G H9G
A_A^A\_]
UAVAWH
A_A^]
UWATAVAWH
L9eHu
EHH9E
A_A^A\_]
USVWATAUAVAWH
XA_A^A]A\_^[]
UWATAVAWH
D9}_t
D9}_tC
p`Rrr
A_A^A\_]
@USVWAVH
0A^_^[]
UWAVH
qZS06
@USVWATAUAVAWH
H;Nhr
H;Nhr
H;VhsZH;Nhr
A_A^A]A\_^[]
H9{Xv#H
H;{Xr
SUVWATAUAVAWH
\$0E3
d$@E3
XA_A^A]A\_^][
VWATAVAWH
E8 udI
0A_A^A\_^
UVWATAUAVAWH
I9}hu%
PA_A^A]A\_^]
|$ UAVAWH
A_A^]
s WAVAWH
fD9?u*H
9|$`t
F L98
M9>t+H
.L98u5H
@A_A^_
x AVH
t$ E3
D$ E3
UWAVH
VWAVH
0A^_^
@USVWAVH
t$ E3
`A^_^[]
UWATAVAWH
d$ E3
d$ E3
A_A^A\_]
x AVH
t$fD90t
x AVH
t$fD90t
WATAUAVAWH
u(I;^
u(H;n
A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
D$ E3
L$XH3
UVWAVAWH
t$fD99t
A_A^_^]
t$ WH
|$ UAVAWH
A_A^]
UWATH
t$ WH
|$ UAUAVH
A^A]]
VWATAVAWH
t$fD9 t
d$ E3
A_A^A\_^
UWATAVAWH
t$fD9 t
D$ E3
t$fD9 t
A_A^A\_]
L$XH3
UWAVH
|$ UH
L$pE3
D$ E3
UVWATAUAVAWH
@8l$pt
0A_A^A]A\_^]
@USVWAVAWH
fD9>u"H
D$(E3
A_A^_^[]
|$ UH
x UATAUAVAWH
fE9,Ou
A_A^A]A\]
@UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
0A_A^_
UVWAVAWH
A_A^_^]
x ATAVAWH
@A_A^A\
VWAVH
L$XE3
0A^_^
x ATAVAWH
fD9!t
@A_A^A\
x AVH
x ATAVAWH
@A_A^A\
UAVAWH
A_A^]
@SUVWAVH
A^_^][
f94Ju
f94Cu
L$PH3
L$@H3
|$ UH
USVWATAUAVAWH
t$fD9 t
fF9<cu
A_A^A]A\_^[]
x UAVAWH
D$0E3
t$fD99t
t$fD98t
A_A^]
fD9?t
UVWATAUAVAWH
@8t$Q
D8t$Qt6D
D8t$P
fD90t
L$PE3
D8t$Pt
A_A^A]A\_^]
@USVWAVH
A^_^[]
x UATAUAVAWH
D$LE3
fE9&t fA
fE9&t fA
fE9&t fA
fE9&t fA
D$DE3
A_A^A]A\]
t$fD90t
t$fD9
t$fD9
t$fD90t
t$fD90t
fD9 t
fE9&t fA
x AVH
@SUWAVAWH
PA_A^_][
SUVWAVH
t$fD91t
OD87t
L$XH3
`A^_^][
\$ UVWAVAWH
t$fD99t
`A_A^_^]
L$XH3
@USVWATAUAVAWH
fD9)t
D8l$P
ID$XH
MD$XH
8L$PtQ
D$ E3
t$fD9(t
ID$XH
It$XH
t#f91t
A_A^A]A\_^[]
@SUVWAVH
t$fD91t
OD87t
L$PH3
`A^_^][
UVWATAUAVAWH
fE;l$
`A_A^A]A\_^]
x ATAVAWH
fD9#u
fD9 t
fD9#t
D9d$@M
fD9#t
A_A^A\
t$ WAVAWH
fD9;u
fD98t
ID$`H
fD9;t
@A_A^_
\$ UVWATAUAVAWH
D$@u2H
9\$XM
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
@USVWAUAVH
fF9,Cu
A^A]_^[]
x AWH
fD9?u
tXH;s
D9|$0H
EL$8E
UWAUAVAWH
D$(E3
A_A^A]_]
UWAVH
D8u0t
@A^_]
USVWATAUAVAWH
D8mot
D$ E3
A_A^A]A\_^[]
t$ WAVAWH
@A_A^_
t$ WH
UATAUAVAWH
tAfD9+t.I;
fD9,Cu
A_A^A]A\]
L$HH3
L$HH3
UVWATAUAVAWH
`A_A^A]A\_^]
UATAUAVAWH
EP!8H
tI!|$ L
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
@8u(u49u
UVWATAUAVAWH
f9<Au
A_A^A]A\_^]
x UATAUAVAWH
D8nit
A_A^A]A\]
@USVWATAVAWH
A_A^A\_^[]
|$8E3
UVWATAUAVAWH
t2H;n
0A_A^A]A\_^]
\$ UVWAVAWH
D8|$ 
)L$`L
D8|$ t
A_A^_^]
UVWAVAWH
A_A^_^]
UWAVH
fA94Iu
f94Ju
fA94Hu
f94Cu
UVWAVAWH
|$ E3
|$ E3
A_A^_^]
x UATAUAVAWH
L$XD8|$@
D8|$@tCH
|$ E3
|$ E3
|$ E3
A_A^A]A\]
@USVWAWH
A__^[]
L$ UWAVH
@A^_]
` UAVAWH
A_A^]
t#f90t
UVWATAUAVAWH
D;eHsK
@A_A^A]A\_^]
t$ UWAVH
L$ E3
UVWATAUAVAWH
fE9<@u
rkfA9L@
t0D8}
t,D8}
A_A^A]A\_^]
UATAUAVAWH
fD90t
A_A^A]A\]
K VWATAVAWH
A_A^A\_^
H UATAUAVAWH
d$ E3
D$ E3
d$ E3
D8uxu
D8t$HtQ
d$ E3
A_A^A]A\]
@SVWH
@USVWAVH
D$ E3
A^_^[]
VWAVH
UVWATAUAVAWH
JD9e@t
fE9$F
D8eXu
D$ E3
`A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
WAVAWH
A8v)t H
@A_A^_
|$ UAVAWH
fD98t
fD9<^u
A_A^]
UVWATAUAVAWH
L!d$pH
T$HE3
D!](A
L$@H;L$@r
D$@H;
L$@H;
T$@M;
L$pM;
L$hD;
D$P!E
D$PM;
L$0tU
L9m@t>H
L9m@u
A_A^A]A\_^]
~%nxK*
)u$m-
hdq5|
j?My 
I@.AUA
gn/;'
SV67j]
sV_~B6
]X$PU :f
GFd8L
/$v5'
:f]B\;P
m*djW
?:GY5?k
-RO(!
*6%WoN
8YU1d
4;^|H
@G{6)
!z<o\6&X
7R>wY`
4WRJ7
4 "1Y
Gn)/*Z
J!qYa
i"n-8
! P66
CD?_BTL
uEnkT0
l|aH8
zY#9z
qnDEQ
[]jGtU4
0x6*@Ek
&DI5;ew
$0_nH|N
G0E_b
!jD4#
54@f<P
Rli!]u
Fh9sc
4l}^fF
sB_[i
!}Ur`
@aJ/G
uh"KV
Q~8/i
"@)TP(
bc<P1Yl
+ ,=?
MK@v?
m8)|js{j>
Fb(T1
o9[*`
ctE.^%
sf>Go
F!<g+Jq
\V$}v
B!s5(
_}Az^>
i45)0
wKAuz
:lag@
h|3"!
]@jT F
_C}on
ouwFE
^Ddpr
L4Ev#
*b]Y%
%Pris
h)6c=
j;37Z
}%}Rf
]u2P@
zMs&+
Z*3bxMZ
T*\<9
yX-vj
G&3BT
Ak*srH
UWATAVAWH
D$ D8e
fD9$Fu
A_A^A\_]
,d(no]qb
S`k-G
e0"%G
drz""$
oOu_-
tK0%w
F_V.2n
B9!;R
%nP{5,
66xor
i_g]")n>
v=^o!R
ws6,'
#CQG_
dZ6nF
2w{L}K
qg3yB
h$o/\
;!~X3
pFC1)$
k!u=S
XzH%C
(mC"1
f_kBM
HiuAUqB
-";W*
Q +bs
D5FHyD
vB@9)
".w3g&
/XQt_>-4
w"#]>
Nl0ZF,
Eonj[v
C2{I<
+(F4v
GB}\PQ
-{+ay
,B>O^
p-x+D
tX[qR
AmfKD
;7%?V
jO'^B
1zq<w
:/}A2<A
=[4HJ
kq(KZ
)=('HwZ
))=}g
ir]tf:%t
(_&dt
|?yiA
IHE"@3
OQAa'G
QKA"vY
]m CJ
>$%U_
0;\X~
Nz/SN
@7-v#r
s}QQ>H
=W<-^
$t(tE
jzT<Y,
3^}q!
r,Y='
D'!8P
9Di>a
hLi C
S4R=|P
}TvgS
}21Ydr
eyLEw?
ij-)4
25H!sd<
T%:w7x=
2kcs*
7-=BE
f0o7|
4i[2M-
1\xct
~!SyX
MN.a.
riE'dF
XC:S_
]cj@*a
(9*4}
g2ya4
8+12O
KeopC~B
5t,4@Y
I}vV~
i3VyO
+S[.=r
yCwTF
lr_68
tB675Y_!
njT~U
n|%!X
"Txz2
tqm+r
|$ UH
ATAVAWH
A_A^A\
UVWAVAWH
D$(E3
A_A^_^]
@USVWATAUAVAWH
D9t$P
|$XD9t$T
t$LD;
s!I;w
s#I;u
s!H;w
D;d$P
A_A^A]A\_^[]
{ AVH
UVWATAUAVAWH
H!uXE3
pA_A^A]A\_^]
UVWATAUAVAWH
t8@8u
t<@8t$pt0H
t<@8t$Pt0H
H9t$H
t9@8u
t<@8t$pt0H
t6@8t$Pt*H
H9t$Hv H
H;\$Hr
t9@8u
t<@8t$pt0H
t<@8t$Pt0H
t9@8u
t<@8t$pt0H
@8t$P
H;\$hr
H;\$Hr
H;\$hr
H;\$Hr
H;\$hr
H;\$Hr
t?H;\$hr
H;\$Hr
t;H;\$hr
H;\$Hr
H;\$hr
8H;\$Hr
H;\$H
@8t$Pt&
H9t$Hv
H;\$Hr
t$H@8t$pt'H
H9t$hv
H;\$hr
t$h@8u
H9t$Ht)
7H9t$xt5@8u
H9t$Xt8@8t$pt'H
H9t$hv
H;\$hr
H9t$8
@8t$Pt'H
H9t$Hv
H;\$Hr
t9D8}
t<D8|$pt0H
D8|$P
t9@8}
t<@8|$pt0H
t<@8|$Pt0H
t9D8}
t<D8|$pt0H
t<D8|$Pt0H
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
fA9l@,u
|@*su7
x ATAVAWH
fD9:t%H
sYfD9!H
fD99u
fD9'u
 A_A^A\
L$HH3
8i6Et
lm>'M
,>iB 
@USVWATAVAWH
~  u3L
x08\$@t*A
A_A^A\_^[]
UWAVH
UVWAVAWH
L$ teL
A_A^_^]
@USVWATAVAWH
]PD8g,u$H
udD8g,u^
D8e@u}
D8e@u!H
D$ D8e@
A_A^A\_^[]
\$ UVWAVAWH
D8|$ t>H
A_A^_^]
UVWAVAWH
fD98t
]HD8~,u
D8}@u\D8~*
A_A^_^]
|$ UAVAWH
fD9<Cu
fD9<{u
D8~(t
A_A^]
UWATAVAWH
fD9$C
A_A^A\_]
fD9<Cu
fD9dC
UAVAWH
A_A^]
@USVWAVH
D8uguMH
A^_^[]
x ATAVAWH
Gt fA9
@A_A^A\
UVWATAUAVAWH
t7@8}
t8@8}
@8}Hte3
t8@8}
uXA8|$(u$H
A8|$)t$H
|$ E3
D$ E3
tl@8}HufH
t8@8}
`A_A^A]A\_^]
SVWAVAWH
A_A^_^[
t$ WAVAWH
L$`!\$(H
!\$ L
@A_A^_
@USVWATAUAVAWH
A_A^A]A\_^[]
D$ E3
USVWATAUAVAWH
8\$`H
8\$`u
\$ E3
8\$`uUH
9\$h}d8\$pt
A_A^A]A\_^[]
UAVAWH
A_A^]
UWAVH
L$hH3
UVWAVAWH
PA_A^_^]
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
x1D8d$Ht*A
D!t$dE3
D!l$`E3
L!d$XH
L$xE3
D!l$dH
L$dA+
D$PH;
L$PH;L$Pr~H
D$PH;
L$PH;
L$XM;
D$dA;
+D$dA;
D$@;U
L$dD3
D$PI;
D$`E3
L$@M;
9D$dt?
L9m@t>H
L9m@u
t$ E3
A_A^A]A\_^]
UVWATAUAVAWH
T$XE3
D!]$A
L$8A+
L$`H;L$`
D$`H;
L$`H;
D$8A;
+D$8A;
T$@M;
T$@L;
L$p+D$8H
l$xD;E
\$8D3
D+D$hD
L$hD3
L$8D3
D$hD3
D$8L;
D$0M;
L$xI;
L$0tc
L9u8tZH
L9u8u
L9u8t
A_A^A]A\_^]
@SVWH
UVWATAUAVAWH
D;}Xr
@A_A^A]A\_^]
UAVAWH
A_A^]
WAVAWH
0A_A^_
USVWAVAWH
hA_A^_^[]
[tx6=
UATAUAVAWH
A_A^A]A\]
fA9<Hu
fA9<Iu
fA9<Ju
f9<Cu
q;S>D.X
x AVH
q;S>D.X
q;S>D.X
WAVAWH
A_A^_
L$XH3
q;S>D.X
x AVH
q;S>D.X
t$ WH
q;S>D.X
t$ WH
t$ WH
L$XH3
UVWAVAWH
L$xH3
A_A^_^]
x AVH
x AVH
x AVH
UWAVH
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
x AVH
t$ UWAVH
fD94Gu
\$ UVWAVAWH
A_A^_^]
fD9<Gu
fD9<Fu
q;]0f
L$XH3
q;S>D.X
qqW8?7)
q;S>D.X
x AVH
q;S>D.X
q;S>D.X
q;S>D.X
q;S>D.X
WAVAWH
A_A^_
WAVAWH
A_A^_
\$ UVWH
@USWH
|$(E3
:%|fUu=
H9Q t6H
\$ UVWAVAWH
fD9}0uIH
fD9}0uLH
`A_A^_^]
UAVAWH
p WvA>
A_A^]
h UAVAWH
A_A^]
t$ UWAVH
0A^_]
UWAVH
PA^_]
t$ WH
H9{ t6H
p AWH
p AWH
UVWATAWH
`A_A\_^]
t`H!\$8H
t`H!\$8H
}bwu=
@USVWAVH
`A^_^[]
@USVWAVH
L9u8t5L
pA^_^[]
UVWAVAWH
pA_A^_^]
|$ UH
UWAVH
fD9u0u
UVWAVAWH
 A_A^_^]
UVWAVAWH
 A_A^_^]
p WAVAWH
 A_A^_
|$ UH
UVWAVAWH
PA_A^_^]
t$ WAVAWH
 A_A^_
t$ WH
q)W\j
H!k0H!k8H!k@H!kHH!kPH!k`
UVWATAUAVAWH
D$ E3
`A_A^A]A\_^]
H!k@H!kHH!kPH!kXH!k`H!kp
UVWATAUAVAWH
`A_A^A]A\_^]
|$ AVH
t$ WAVAWH
fD9<Cu
0A_A^_
UVWATAUAVAWH
PA_A^A]A\_^]
VWAVH
f9,Cu
0A^_^
t$ WATAUH
\$XH;_
0A]A\_
d$ UAVAWH
A_A^]
t$ WAVAWH
 A_A^_
L$ UAVAWH
 A_A^]
UVWATAUAVAWH
D!uP3
;PKCXu
PA_A^A]A\_^]
UWAVH
tJ;E@tEH
@A^_]
|$ AVH
q L;p
[ H;X
H9A A
A I;A
A I;A
qsWVk
UWATAVAWH
A_A^A\_]
UVWAVAWH
0A_A^_^]
ZZ^&Q
t$ UWAVH
 A^_]
L$pH3
WAVAWH
L$HI;
0A_A^_
UVWAVAWH
A_A^_^]
L$0H3
H9{Pv#H
H;{Pr
x ATAVAWH
 A_A^A\
UVWATAUAVAWH
pA_A^A]A\_^]
H9sPv
H;sPr
UAVAWH
@A_A^]
UWAVH
x ATAVAWH
 A_A^A\
fD9$Xu
fD9 t
x AVH
fD90t
x AVH
x AVH
h UAVAWH
0A_A^]
UWAUAVAWH
0A_A^A]_]
WAVAWH
@A_A^_
WAVAWH
 A_A^_
{ AVH
L$0E3
UWAVH
h VWAVH
\$PE3
 A^_^
UVWAVAWH
A_A^_^]
USVWAVH
A^_^[]
@USWH
@8ugt
UWAVH
UATAVH
0A^A\]
UWAVH
L$0E3
UWAVH
UWAVH
L$0E3
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
UWAVH
x AVH
UWAVH
x AVH
x AVH
USVWAVH
 A^_^[]
WAVAWH
N D8y
N0D8y
@A_A^_
L$ SVWH
x AVH
t$ WH
L$pH3
UWATH
H97u%H
L$TE3
L$ WH
9H9t$X
H9{8v=H
H;{8r
D$pHcy
L$pH3
\$ WH
WAVAWH
A_A^_
L$8H3
\$ UVWH
t$ WH
UWAUAVAWH
H+SXH
D$(E3
A_A^A]_]
@USWH
H WATAUAVAWH
A_A^A]A\_
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
D$pHcy
L$pH3
L$ SVWH
=;\$8t5
Y;\$8tQ
3;\$8t+
D$ E3
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
UWATAVAWH
A_A^A\_]
UATAUAVAWH
D$pE3
A_A^A]A\]
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
l$ VWATAVAWH
A_A^A\_^
f9,Nu
f9,Pu
VWATAVAWH
@A_A^A\_^
t$ WH
f9,Hu
f9,Vu
` UAVAWH
A_A^]
UVWATAUAVAWH
L!l$pH
|$`H;u
A_A^A]A\_^]
D$XE3
u`H9;u
u`H9;u
WATAVH
@A^A\_
x UATAUAVAWH
H!\$pH
A_A^A]A\]
x AVH
{ AVH
UWAVH
UWAVH
x AVH
{ AVH
UWAVH
WAVAWH
0A_A^_
|$ UAVAWH
 A_A^]
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
x AVH
p AWH
VWAVH
 A^_^
UWAVH
x AVH
UWAVH
 A^_]
` UAVAWH
0A_A^]
VWAVH
0A^_^
VWAVH
 A^_^
{ AVH
UWAVH
UWAWH
@A__]
x AVH
fD94Zu
UVWATAUAVAWH
PA_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
` UAVAWH
@A_A^]
UWAVH
x AVH
UWAVH
 A^_]
UWAVH
x AVH
UWAVH
UWAVH
UWAVH
x AVH
{ AVH
UWAVH
@USVWAVH
A^_^[]
UWAVH
0A^_]
VWAVH
0A^_^
UWAVH
0A^_]
VWAVH
0A^_^
WAVAWH
f9,^u
 A_A^_
L$pH3
L$pH3
UVWAVAWH
L$HH;
A_A^_^]
UVWAVAWH
0A_A^_^]
x AVH
L$`H3
t<Lc@
UWAVH
 A^_]
x AVH
UWAVH
 A^_]
UWAVH
UWAVH
 A^_]
UWAVH
@USVH
x AVH
` UAVAWH
0A_A^]
VWAVH
@A^_^
VWAVH
0A^_^
x AVH
@USVWAVH
0A^_^[]
UWAVH
 A^_]
{ AVH
UWAVH
 A^_]
UWAVH
` UAVAWH
@A_A^]
UWAVH
UWAVH
 A^_]
x AVH
UATAUAVAWH
L9w8t
L9wPH
A_A^A]A\]
` UAVAWH
@A_A^]
x AVH
UWAVH
UWAVH
UVWAVAWH
A_A^_^]
L9|$0t-H
UVWATAWH
A_A\_^]
T$ E3
t$ UWAWH
T$0E3
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
UVWATAWH
A_A\_^]
` UAVAWH
@A_A^]
VWAVH
@A^_^
VWAVH
0A^_^
@USVH
@USVWAVH
0A^_^[]
UWAVH
 A^_]
UWAVH
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
UVWAVAWH
A_A^_^]
t$ UWAVH
UVWATAVH
L$0E3
A^A\_^]
t$ UWAWH
L$0E3
t$ UH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
UWAVH
 A^_]
UWAVH
UWAVH
 A^_]
VWAVH
0A^_^
UWAVH
VWAVH
@A^_^
VWAVH
0A^_^
UWAVH
 A^_]
UVWAVAWH
PA_A^_^]
x AVH
x AVH
VWAVH
 A^_^
|$ UAVAWH
0A_A^]
|$ UAVAWH
0A_A^]
UWAVH
 A^_]
VWAVH
0A^_^
@USVH
UVWAVAWH
PA_A^_^]
UATAUAVAWH
xjD8m
A_A^A]A\]
|$ UAVAWH
0A_A^]
UWAVH
 A^_]
UWAVH
x AVH
fD94Zu
VWATAVAWH
fD9!u
fD9$Au
fD9"u
fE9 u
fE9$@u
fD9!u
fD9$Cu
fD9dM
fD9$Ou
A_A^A\_^
L$(E3
D$ E3
UVWATAUAVAWH
fE9DM
fD9$~u
`A_A^A]A\_^]
x ATAVAWH
fD9!u
fD9"u
fD9${u
A_A^A\
t$ WATAUAVAWH
A_A^A]A\_
l$P9T$0A
UWAWH
@A__]
UATAUAVAWH
M(@8uPt
0A_A^A]A\]
VWAVH
0A^_^
WAVAWH
 A_A^_
{ AVH
UWAVH
UATAVH
A^A\]
t$ UWATAVAWH
p![XT?
D9d$8
D$@L+
A_A^A\_]
UAVAWH
0A_A^]
UVWATAUAVAWH
f9<Xu
HcD$8
Hc\$8
\$p;D$8
D$ E3
LcL$8L
D$ E3
A_A^A]A\_^]
VWAVH
0A^_^
USVWAVH
0A^_^[]
UWAVH
 A^_]
UWAVH
 A^_]
UATAUAVAWH
M(@8uPt
0A_A^A]A\]
VWAVH
0A^_^
WAVAWH
 A_A^_
{ AVH
UWAVH
h UAVAWH
0A_A^]
UWAVH
VWAVH
0A^_^
WAVAWH
 A_A^_
{ AVH
UWAVH
x AVH
{ AVH
UWAVH
UVWATAUAVAWH
i(Lcy H
 A_A^A]A\_^]
UVWATAUAVAWH
ehD8{8uyH
pRU>'
PA_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
fD9,Bu
fD9,Fu
 A_A^A]A\_^]
D$ SRD1E3
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
VWAVH
0A^_^
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
` UAVAWH
@A_A^]
2t$A+
` UAVAWH
@A_A^]
UWAVH
UVWATAUAVAWH
psVV%
pz\:(
f9:t/H
A_A^A]A\_^]
W2a')
_^6&a
@USVWATAUAVAWH
SRD1t
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
UWAVH
UWAVH
VWAVH
0A^_^
UWAVH
 A^_]
VWAVH
0A^_^
UATAVH
D9G,u
A^A\]
UWAVH
UWAVH
UWAVH
UWAVH
VWAVH
0A^_^
` UAVAWH
0A_A^]
x AVH
{ AVH
UWAVH
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
` UAVAWH
0A_A^]
x AVH
{ AVH
UWAVH
` UAVAWH
@A_A^]
VWAVH
0A^_^
|$ UAVAWH
 A_A^]
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
x AVH
UAVAWH
@8u(t
 A_A^]
UATAWH
 @8}8t?L
A_A\]
UWAVH
 A^_]
UWAVH
 A^_]
UWAVH
 A^_]
UATAUAVAWH
.@8uPt
A_A^A]A\]
UVAVH
\$ UVWATAUAVAWH
|$hA;
|$8A;
|$@A;
|$0A;
D$HA;
D$PA;
|$xA;
pYWX6
|$pA;
|$@A;
|$xA;
|$pA;
|$HA;
|$0A;
@8|$0H
S2e.T
A_A^A]A\_^]
@USVWAVH
@A^_^[]
` UAVAWH
A_A^]
x AVH
x AVH
t$ WH
t$ WH
t$ WH
x AVH
UVWATAUAVAWH
fD94qu
fF94Cu
fD94_u
@A_A^A]A\_^]
UAVAWH
@A_A^]
WAVAWH
0A_A^_
fD9|]
UWAVH
 A^_]
UWATAVAWH
H!]0L
A_A^A\_]
D$x0u
D$H0u
|$ UH
UAVAWH
A_A^]
UWAVH
0A^_]
UVWATAVH
PA^A\_^]
UWAUAVAWH
0A_A^A]_]
VWAVH
0A^_^
@USVWAVAWH
A_A^_^[]
@SUVWAVH
A^_^][
t$ UWATAVAWH
A_A^A\_]
L$ VWAVH
 A^_^
L$8H3
@USVWATAUAVAWH
A_A^A]A\_^[]
L$pH3
UVWATAUAVAWH
|$ D+
t$ D+
|$ D+
A_A^A]A\_^]
USVWATAUAVAWH
mwt3H
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
T$ E3
\$ E3
D$`E3
L$`H3
UATAUAVAWH
fE9$Ju
fE9$Ku
fD9$Ku
fD9$Ou
fD9$Nu
fE9$Nu
fE9$Gu
A_A^A]A\]
UAVAWH
D$hE3
A_A^]
VWAVH
0A^_^
@USWH
VWAVH
0A^_^
UATAUAVAWH
.@8uPt
A_A^A]A\]
VWAVH
0A^_^
UWAVH
UWAVH
 A^_]
VWAVH
@A^_^
VWAVH
0A^_^
UWAVH
UWAVH
 A^_]
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
UWAVH
 A^_]
VWAVH
0A^_^
UWAVH
UVWATAVH
`A^A\_^]
UWAUAVAWH
0A_A^A]_]
UVWATAVH
`A^A\_^]
UWAUAVAWH
0A_A^A]_]
VWAVH
0A^_^
UWATAVAWH
D$(E3
D9g8woL
A_A^A\_]
|$ UH
D$0E3
E`H!EhH
WATAUAVAWH
L9s0t
woD8s
D8w@t3H
wrD8w@tMI
 A_A^A]A\_
UVWAVAWH
A_A^_^]
C H;>r
@USWH
@USVWH
_^[]H
D$ E3
@USVWAVH
D$ E3
A^_^[]
@USVWAVAWH
A_A^_^[]
@USVWAVAWH
A_A^_^[]
UWAVH
UWAVH
UWAVH
UWAVH
WAVAWH
fE99t
 A_A^_
VWATAVAWH
 A_A^A\_^
@USVWAVH
A^_^[]
UWAVH
UWAVH
fA9<Pu
f9<Au
t$ WH
UWAVH
UWAVH
fA9<Hu
f9<Bu
t$ WH
t$ WH
t$ WH
UWAVH
UWAVH
UWAVH
t$ WH
t$ WH
t$ WH
UWAVH
UWAVH
UWAVH
t$ WH
UWAVH
UWAVH
t$ UWATAVAWH
A_A^A\_]
L$PH3
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
D8t$0
D8t$1t
xzD8t$0
A_A^A]A\_^]
t$ UWATAVAWH
A_A^A\_]
UWAVH
UVWATAWH
A_A\_^]
t$ WATAVH
A^A\_
\$ UVWATAUAVAWH
)L$pH
(L$pfH
(L$pI
A_A^A]A\_^]
\$ UVWATAUAVAWH
|$PD8l$1
D8l$0
A_A^A]A\_^]
t$ UWATAVAWH
D8d$0u
D8d$0u
A_A^A\_]
x ATAVAWH
 A_A^A\
UATAUAVAWH
A_A^A]A\]
qQ\Tg
@USWH
t$ UWATAUAVH
A^A]A\_]
l$ VWAVH
@USVWAWH
A__^[]
UVWATAVH
A^A\_^]
l$ VWAVH
@USVWAWH
A__^[]
l$ VWAVH
@USVWAWH
A__^[]
@USVWAWH
A__^[]
l$ VWAVH
\$ UVWATAVH
A^A\_^]
@USVWH
_^[]H
x UAVAWH
fD9<Gu
D9{ u
A_A^]
UWAVH
UWATAVAWH
D9c u
A_A^A\_]
@SVWH
VWAVH
UWATAVAWH
fD9$Gu
D9c u
A_A^A\_]
UWATAVAWH
C0E8`
D9c u
A_A^A\_]
@SVWH
@SVWH
@SVWH
VWAVH
VWAVH
UWAVH
@SVWH
UWAVH
VWAVH
UWAVH
UWAVH
VWAVH
UWAVH
VWAVH
D$ E3
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
@USVWAVH
D$ E3
A^_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
@USVWH
(H93u!H
h_^[]
t$ WH
3D$8%
3D$8%x
t$ WH
3D$8%
3D$8%x
H SUVWATAUAVAWH
8A_A^A]A\_^][
UVWAVAWH
D9}8@
D9}8u
`A_A^_^]
UVWATAUAVAWH
f94Hu
`A_A^A]A\_^]
@USVWATAUAVAWH
@8t$XtUH
@8t$@
A_A^A]A\_^[]
UVWATAUAVAWH
f94Hu
PA_A^A]A\_^]
@SVWH
@USVWAVH
D$ E3
A^_^[]
u9H9O
h VWATAVAWH
\$PH9_Ht6H
 A_A^A\_^
x AVH
fD94Hu
UWAVH
PA^_]
@USVWATAVAWH
A_A^A\_^[]
\$ UVWH
UWATAVAWH
BL9eH
A_A^A\_]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAWH
PA_A\_^]
\$ UVWAVAWH
d$(fI
A_A^_^]
UVWAVAWH
`A_A^_^]
UVWATAUAVAWH
l$pfD
A_A^A]A\_^]
L9|$0u
pjSt=
t$ WH
L$PH3
@SVWH
L$8H3
UVWATAUAVAWH
f94Yu
fA94~u
D$ E3
A_A^A]A\_^]
SUVWAWH
D$ E3
@A__^][
UVWAVAWH
0A_A^_^]
UVWAVAWH
fD9<Ju
fD9|U
fD9<Fu
0A_A^_^]
VWAVH
UVWAVAWH
fD94Au
fD9tE
D$xE3
L$xI;
0A_A^_^]
D$(L!L$ H
UWAWH
H!} I
D$(E3
L!L$ 3
WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
VWAVH
PA^_^
\$ UVWAVAWH
t$0E3
A_A^_^]
\$ UVWATAUAVAWH
L!d$0E3
L!d$0H
A_A^A]A\_^]
p WAVAWH
fA9(t
rGfA96s
 A_A^_
WAVAWH
fD9<Yu
 A_A^_
VWAVH
L$hE3
@A^_^
x ATAVAWH
@A_A^A\
WATAUAVAWH
L9l$hu
fE9$Wu
fD9$Fu
L$hI;
l$hL9
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
fD9<Vu
fD9<Gu
L9|$xt eH
UVWATAUAVAWH
A_A^A]A\_^]
VWAVH
L$HE3
L$HE3
 A^_^
D$XHc
L$XH3
T$(E3
HcK(A
GNHcK(A
x ATAVAWH
D#CtA
C`#St
D#CtD
 A_A^A\
WATAUAVAWH
C`#St
D#CtA
 A_A^A]A\_
x AVH
WATAUAVAWH
F(D9h,u
D#GtD
 A_A^A]A\_
G()p(H
\$ UVWATAUAVAWD
L$PI#
\$XD;
A_A^A]A\_^]
ATAVAWH
 A_A^A\
WATAUAVAWH
~VHcS(A
HcK(H
~VHcS(A
HcK(H
 A_A^A]A\_
IcS(fA
IcK(H
IcK(f
~1LcA(H
HcI(H
HcQ(H
UVWATAUAVAWH
L$@H3
PA_A^A]A\_^]
SUVWATAUAVAWH
T$xHc
A_A^A]A\_^][
l$ VWATAUAVAW
\$8Lc
Hc\$@E
l$PA_A^A]A\_^
r}6Ic
|$(A^
x ATAVAWH
 A_A^A\
x ATAUAVAWD
~ZIcQ(A
IcI(H
IcQ(fA
IcI(H
~XIcQ(A
IcI(H
~]IcQ(A
IcI(H
~ZIcQ(A
IcI(H
~TIcQ(A
IcI(H
~ZIcQ(A
IcI(H
~WIcQ(A
IcI(H
|$@A_A^A]A\
USVWATAUAVAWH
]oL;iPs
L;nHu$H
N@H9NPt
MgL;nHu!H
]oL;nPs
nXL9nPt4A
A_A^A]A\_^[]
x ATAVAWH
~@H9FXu
 A_A^A\
UVWATAUAVAWH
;T$@v,
D$PA;
L$DH+
A_A^A]A\_^]
WAVAWH
D$@E3
A_A^_
t$ WATAUAVAWH
\$`L;APs
\$`E3
G@H9GP
\$`L;GPs
\$`L;
G@H9GPt
\$`L;
GXL9GPt
0A_A^A]A\_
SUVWATAUAVAWH
d$pL;OPs
G,A_A^A]A\_^][
UATAUAVAWH
D$ E3
A_A^A]A\]
t$ UWAVH
H;7tHH
f9<Xu
\$ UVWH
|$ UAVAWH
A_A^]
UWAVH
qCZVL74
f;D$ t
f;D$ u
UAVAWH
0A_A^]
|$ UAVAWH
|$ E3
@A_A^]
pCZVL74
Qp{7h
UWAVH
D$(E3
PA^_]
UAVAWH
D$(E3
PA_A^]
UAVAWH
L9|$ t
A_A^]
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
WAVAWH
0A_A^_
|$ AVH
|$ AVH
|$ AVH
UWATAVAWH
L9e0t
A_A^A\_]
@USVWATAVAWH
M94$t2I
0A_A^A\_^[]
\$ WH
H!L$03
D$0H;
S8H;S@t+H
|$ UH
t$ UWAVH
t$ UWAVH
t$ UWAVH
VWAVH
UVWAVAWH
A_A^_^]
UWAVH
t$ WH
t$ WH
t$ UWAVH
qyZza
@SVWH
t$ UWAVH
@SUVWAVH
A^_^][
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
\$ UVWH
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
|$ AVH
(D$ f
|$ AVH
(D$ f
|$ ATAVAWH
@A_A^A\
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
qcU>>
pcU>>
WAVAWH
 A_A^_
H+P0H
H+P0H
(D$ f
p AWH
D$(H;
L$ E3
(D$ f
t$ WAVAWH
@A_A^_
WATAUAVAWH
A_A^A]A\_
UAVAWH
A_A^]
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
|$ AVH
S8H;S@t+H
|$ UH
t$ UWAVH
t$ UWAVH
t$ WH
t$ UWAVH
@USVWAVH
A^_^[]
\$ UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
\$ UVWH
@USVWAVH
A^_^[]
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
VWATAVAWH
 A_A^A\_^
(D$ f
p AWH
D$(H;
qQR8*
UAVAWH
)L$PL
L9|$ t
A_A^]
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
S8H;S@t+H
@USVWAVH
A^_^[]
@SVWH
UWAVH
t$ WH
@SUVWAVH
A^_^][
@SVWH
@SVWH
q1Tvx
@SUVWH
@SVWH
t$ WH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
\$ UVWH
)L$PH
D$p!D$tH!D$xf
@USVWAVH
)L$pH
A^_^[]
UVWAVAWH
)L$pH
A_A^_^]
@USVWATAVAWH
L$8E3
D8d$0u=L
A_A^A\_^[]
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
p AWH
D$(H;
|$ AVH
@SVWH
|$ AVH
UAVAWH
L9|$ t
A_A^]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
S8H;S@t+H
t$ WH
L$(E3
B(H!D$PH!D$HH!D$@H!B0H!B8H!B@H
|$ ATAVAWH
 A_A^A\
\$ UVWH
\$ UVWH
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
(D$ f
p AWH
D$(H;
UAVAWH
A_A^]
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
|$ AVH
|$ AVH
S8H;S@t+H
|$ UH
t$ UWAVH
t$ UWAVH
t$ WH
@USVWAVH
A^_^[]
qHT:)
\$ UVWAVAWH
A_A^_^]
t$ UWAVH
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
\$ UVWH
@USVWAVH
A^_^[]
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
p(S0].U
p AWH
D$(H;
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
|$ AVH
x AVH
S8H;S@t+H
|$ UH
t$ UWAVH
t$ UWAVH
t$ WH
@SVWH
q[[<`6
@SUVWAVH
A^_^][
t$ UWAVH
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
|$ ATAVAWH
 A_A^A\
@SVWH
@SUVWH
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
qAVZn?
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
(D$ f
(D$ f
p AWH
D$(H;
q RZ'
UAVAWH
L9|$ t
A_A^]
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
S8H;S@t+H
|$ UH
@USVWATAVAWH
A_A^A\_^[]
t$ UWAVH
t$ WH
L$ E3
t$ UWAVH
@USVWAVH
A^_^[]
t$ UWAVH
t$ UWAVH
R6n.5
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
\$ UVWH
@USVWAVH
A^_^[]
\$ UVWH
@USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
A_A^_^]
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
(D$ f
p AWH
D$(H;
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
x AVH
S8H;S@t+H
|$ UH
t$ UWAVH
UWAVH
t$ UWAVH
UWAVH
x UAVAWH
A_A^]
UWAVH
UWAVH
x UAVAWH
A_A^]
UWAVH
t$ WH
t$ UWAVH
[vN.x
t$ UWAVH
@SVWH
t$ UWAVH
@SVWH
t$ UWAVH
t$ UWAVH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
qjT\0
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
t$ UWAVH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
@SVWH
@SUVWAVH
A^_^][
@USVWAVH
A^_^[]
UVWAVAWH
A_A^_^]
VWATAVAWH
A_A^A\_^
R\v/P
VWATAVAWH
A_A^A\_^
qS^pA
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
qq]Z4
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
q3VPK
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
qKQr8
qCP>z
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
qATx:
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
q(S0].U
(D$ f
p AWH
D$(H;
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
x AVH
S8H;S@t+H
UWAVH
\$ VWAVH
qSU<1
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
t$ UWAVH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
@SVWH
UWAVH
x UATAUAVAWH
A_A^A]A\]
t$ UWAVH
@SUVWAVH
A^_^][
UWAVH
UWAVH
UWAVH
x UAVAWH
A_A^]
UWAVH
@USVWAVH
A^_^[]
[vN.x
t$ UWAVH
@SVWH
@SUVWAVH
A^_^][
@SUVWAVAWH
A_A^_^][
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
A^_^][
q:PXi
@SUVWAVH
A^_^][
@SVWH
q1Tvx
@SUVWH
t$ UWAVH
@SVWH
@SUVWH
t$ WH
qjT\0
UVWAVAWH
A_A^_^]
@SUVWAVH
A^_^][
@SUVWAVH
A^_^][
UVWAVAWH
A_A^_^]
@USVWATAVAWH
A_A^A\_^[]
R6n.5
UVWAVAWH
A_A^_^]
t$ UWAVH
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
@USVWAVAWH
A_A^_^[]
YR\/\
@USVWAVH
A^_^[]
|$ ATAVAWH
 A_A^A\
@SVWH
@SVWH
@SUVWAVAWH
A_A^_^][
@SUVWAVH
A^_^][
@SVWH
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
UVWAVAWH
A_A^_^]
D$pfA
VWATAVAWH
fE9$~u
A_A^A\_^
D$pfA
R\v/P
VWATAVAWH
fE9$~u
A_A^A\_^
UVWATAUAVAWH
L$@E3
|$HL9l$8t
A_A^A]A\_^]
@USVWATAVAWH
L$8E3
D8d$0u=M
A_A^A\_^[]
@USVWATAVAWH
L$8E3
D8d$0u=L
A_A^A\_^[]
D$pfA
qqVRB
D$pfA
D$pfA
VWATAVAWH
fE9$~u
A_A^A\_^
@USVWAVH
A^_^[]
D$pfA
VWATAVAWH
fE9$~u
A_A^A\_^
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
q3VPK
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
{ AVH
qKQr8
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
q"^T(
qhZ>"6
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
(D$ f
p AWH
D$(H;
q`S\'
RR?7|
UAVAWH
A_A^]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
S8H;S@t+H
qPX:D
L$(E3
B(H!D$PH!D$HH!D$@H!B0H!B8H!B@H
|$ ATAVAWH
 A_A^A\
\$ UVWH
\$ UVWH
|$ UH
|$ UH
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
(D$ f
p AWH
D$(H;
UWAVH
H(H!M
H!H0H!H8H!H@H
PA^_]
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
|$ AVH
|$ AVH
x AVH
S8H;S@t+H
|$ UH
\$ UVWH
t$ UWAVH
t$ WH
@SVWH
@SVWH
@SUVWAVH
A^_^][
UVWAVAWH
A_A^_^]
|$ ATAVAWH
 A_A^A\
@SVWH
@SUVWH
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
qAVZn?
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
[ VWATAVAWH
fE9$~u
`A_A^A\_^
VWATAVAWH
 A_A^A\_^
(D$ f
p AWH
D$(H;
q RZ'
UVWAVAWH
fE9<~u
 A_A^_^]
@USWH
@SVWH
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
s WAVAWH
fD9<su
@A_A^_
l$ VWATAVAWH
00000000I
L$ H3
0A_A^A\_^
VWAUAVAWH
L$xH;
0A_A^A]_^
UWAVH
YRo>M
L9u8t>
YRo>M
UWAVH
L9u8t>
@USVWATAUAVAWH
xA_A^A]A\_^[]
YRo>M
\$ UVWATAUAVAWH
L$PE3
fE9,_u
L9l$Xt
A_A^A]A\_^]
fD9,Xu
L9l$`t
UVWAVAWH
L$ E3
D$0E3
fE9<nu
fD9<hu
A_A^_^]
@SUVWATAUAVAWH
D8T$`u,
9D$xu
D8T$`u
D8T$`u
A_A^A]A\_^][
SVWATAUAVAWH
0A_A^A]A\_^[
C8H;C@t
UATAUAVAWH
fE9,^u
L9.t(I
A_A^A]A\]
|$ ATAVAWH
 A_A^A\
H+Q0H
H+Q0H
|$ AVH
(D$ f
|$ AVH
(D$ f
|$ ATAVAWH
@A_A^A\
x AVH
A8H+A0H
t$ WH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
t$HM;
A_A^_
A8H+A0H
t$ WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
D$(H;
0A_A^A\
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
H(H!L$0H!L$(H!L$ H!H0H!H8H!H@H
S8H;S@t+H
|$ ATAVAWH
 A_A^A\
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
p AWH
D$(H;
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
S8H;S@t+H
|$ ATAVAWH
 A_A^A\
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
@SVWAVH
A(H!D$0H!D$(H!D$ H!A0H!A8H!A@H
HA^_^[
@SVWH
qy]|8
p AWH
D$(H;
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
VWAVH
0A^_^
S8H;S@t+H
t$ E3
|$ ATAVAWH
 A_A^A\
VWATAVAWH
D9d$p
D9d$ 
fD9$wu
@A_A^A\_^
[ VWATAVAWH
D9d$p
D9d$ 
fD9$wu
@A_A^A\_^
qsS|l/
x ATAVAWH
 A_A^A\
A8H+A0H
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
UWAUAVAWH
pA_A^A]_]
A8H+A0H
D$pH;
p AWH
D$(H;
VWAVH
0A^_^
@SVWATAUAVAWH
L$'I;
@A_A^A]A\_^[
fA9<@u
S8H;S@t+H
UVWATAUAVAWH
pA_A^A]A\_^]
;|$@ssH
l$ VWAVH
@A^_^
|$ ATAVAWH
 A_A^A\
VWATAVAWH
fD9$wu
@A_A^A\_^
UVWATAUAVAWH
D$ E3
f9<pu
A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
fA9<tu
A_A^A]A\_^]
x ATAVAWH
 A_A^A\
A8H+A0H
x$8\$@t
x$8\$@t
{ AVH
A8H+A0H
{ AVH
A8H9A0
WAVAWH
@A_A^_
A8H+A0H
D$pH;
WAVAWH
0A_A^_
qyW:e
p AWH
D$(H;
q RZ'
qQZ:8
qrX2}
WAVAWH
 A_A^_
VWAVH
 A^_^
VWATAVAWH
 A_A^A\_^
qjW>e
(D$ f
qIU>E
(D$ f
(D$ f
T$ E3
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
fE9$~u
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
fD9$wu
 A_A^A\_^
t$ WH
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
q3VPK
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
fD9$~u
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
fD9$~u
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
fD9$~u
 A_A^A\_^
[rs6|
VWATAVAWH
 A_A^A\_^
USVWAVAWH
(A_A^_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
@A^_]
L$0E3
L$PH3
D$PE3
3H9>t
p AWH
L$ SVWAVH
(A^_^[
UVWAVAWH
9|$ t
A_A^_^]
s WAVAWH
D$@!\$HI
A_A^_
UAVAWH
D$(E3
A_A^]
p AWH
\$ VWAVH
9D$@u
t$ WH
D$ E3
VWAVH
0A^_^
UWAVH
0A^_]
@USVWAVAWH
:PKCXt3
D$(E3
xA_A^_^[]
UWAVH
t$ WATAUAVAWH
8APPXu
8EAPX
 A_A^A]A\_
UVWAVAWH
@A_A^_^]
\$ UVWAVAWH
~9|$0t
;PKCXt
A_A^_^]
UVWAVAWH
PA_A^_^]
VWATAVAWH
A;.sa
 A_A^A\_^
p AWH
L$pH3
WATAUAVAWH
L9t$@s
A_A^A]A\_
VWAVH
0A^_^
f99te
p AWH
x AVH
\$ UVWAVAWH
tzD9:v
fD98t
fD98u
A_A^_^]
fE99t
fE98u
WATAVH
 A^A\_
UVWATAUAVAWH
|$hE3
D$`D8\$ht
 A_A^A]A\_^]
f9<Au
f9<Au
@USVWATAUAVAWH
D$`L+
D$ E3
A_A^A]A\_^[]
WAVAWH
fB9\M
L$4E3
@A_A^_
@USVWATAUAVAWH
D$ E3
fE9,Fu
A_A^A]A\_^[]
SUVWAVH
fD94Cu
fD94Nu
t$ E3
D$ E3
PA^_^][
D$`E3
L$`H3
D$0E3
L$8H3
UVWATAVH
fD94Qu
EHfD;0tlA
fD;0u
 A^A\_^]
UWAWH
D!E0H
D$@E3
D$8L!D$0
D!D$ H
t$ WAVAWH
\$p!\$`H
D$0H!\$(H!\$ D
@A_A^_
UVWATAUAVAWH
L$xM;
@A_A^A]A\_^]
UWAUAVAWH
 A_A^A]_]
WATAUAVAWH
d$(E3
0A_A^A]A\_
UVWAVAWH
fD90t
pA_A^_^]
WATAUAVAWH
d$ E;
0A_A^A]A\_
WAVAWH
fE9:t
fD9:t
BH9>t
0A_A^_
L$HH3
UVWATAUAVAWH
L$pE3
fE9,$t"fA
fE9,$t"fA
fE9,$t"fA
t$fD9(t
fD9,Nu
fD9,Gu
fD9,Gu
t$fD9(t
t$fD9(t
t#f90t
t$fD9(t
hfE9,$t"fA
A_A^A]A\_^]
cf97t
\$ UVWAVAWH
fD98t
A_A^_^]
|$ UAVAWH
A_A^]
UVWATAUAVAWH
@8}PtS
A_A^A]A\_^]
L$P!E
@USVWATAUAVAWH
t$PD9d$@
t$PD9d$@te
D9d$@t,E
D9d$@t\A
t$PD9d$@t0
A_A^A]A\_^[]
t$ UWAUAVAWH
D9|$@
D;|$@
A_A^A]_]
x AVH
tNH;^
x AVH
x AVH
|$ UH
h UAVAWH
|$ E3
A_A^]
\$@E3
t$ UWATAVAWH
H!}@E3
D$ E3
0A_A^A\_]
t$ UAVAWH
A_A^]
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
t$ WAVAWH
0A_A^_
9t$@t
9t$@t
UWATAVAWH
D$8E3
A_A^A\_]
|$ UATAUAVAWH
tEH9^(t?H
A_A^A]A\]
p WATAUAVAWH
A_A^A]A\_
@USVWAVH
D9u@t
`A^_^[]
|$ UATAUAVAWH
A_A^A]A\]
piYZX
@USVWAVAWH
A_A^_^[]
|$ UATAUAVAWH
G`fD9$Ht)H
fD9$Ht0H
tGM;w
A_A^A]A\]
@USVWATAUAVAWH
D$@E3
A_A^A]A\_^[]
UVWAVAWH
A_A^_^]
C !C0H
C8!CHH
CP!C`f
C !C0H
C8!CHH
CP!C`f
VWAVH
D$`H;
0A^_^
f94Au
@USWH
@USVWATAUAVAWH
L9l$8
D9mwt
o`D;-
MoD9m
A_A^A]A\_^[]
@USVWAVH
0A^_^[]
@USVWATAVAWH
L9}wuYH
D8}guWH
fD98t
fD98t
D8}otrL
A_A^A\_^[]
VWAVH
 A^_^
VWAVH
 A^_^
UVWAVAWH
@A_A^_^]
UWAVH
\$ E3
USVWATAVAWH
D9e@u[H
PA_A^A\_^[]
UVWAVAWH
D9}0u[H
PA_A^_^]
USVWATAVAWH
D9e@u[H
PA_A^A\_^[]
t$ WH
9D$@t
UVWATAVH
]HH!]@L
 A^A\_^]
UWATAVAWH
]HH!]
@A_A^A\_]
fA9(u
USVWAVH
fD91t
fD91t
fD91t
fD91t
pA^_^[]
USVWAVH
fD91t
fD91t
fD91t
fD91t
pA^_^[]
USVWATAUAVAWH
D9}gt
D9}gt,
D9}gu
D9}gu
D9}gt[H
A_A^A]A\_^[]
UVWAVAWH
fD99t
fD99t
pA_A^_^]
|$ UAVAWH
fD99t
fD99t
A_A^]
@USVWAUAVAWH
A_A^A]_^[]
@USVWATAVAWH
0A_A^A\_^[]
@USVWATAVAWH
0A_A^A\_^[]
@USVWATAVAWH
0A_A^A\_^[]
L$ UVWH
fA9<Hu
fA9<Iu
f9<Ju
fA9<Cu
SUWAVAWH
H!X D
D$ E3
0A_A^_][
UVWAVAWH
L$ E3
0A_A^_^]
WAVAWH
Hu3fD9
@A_A^_
x ATAVAWH
fD9 t
fD9$Au
0A_A^A\
@USVWAVH
0A^_^[]
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
|$ UAVAWH
A_A^]
UWAVH
|$ UAVAWH
A_A^]
@USVWAVH
0A^_^[]
USWATAUAVAWH
@A_A^A]A\_[]
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
I9>tBH
0A_A^A]A\_
u,D9R
x AUAVAWH
D8|$p
0A_A^A]
@USVWAVH
0A^_^[]
@USVWAVH
0A^_^[]
@USVWAVH
0A^_^[]
UWATAVAWH
pBR:&
p(X|S
L9c(tmL
L9c0tmL
L9c@tmL
L9cHtmL
A_A^A\_]
UVWAVAWH
@A_A^_^]
UVWAVAWH
@A_A^_^]
qKPV!
VWAVH
UVWAVAWH
D9}@@
@A_A^_^]
UATAUAVAWH
A_A^A]A\]
t$ WH
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tDM
I9~0tVH
t$PI9^8t[H
 A_A^_^]
H;Q0s
H!_@3
p WAVAWH
 A_A^_
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
p AWH
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
VWAVH
 A^_^
x AVH
x-A86t
x AVH
x-A86t
x AVH
x-A86t
t$ WAVAWH
 A_A^_
x AVH
H9W@tKH
H9W@tKH
H9W@tKH
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
VWAVH
 A^_^
VWAVH
 A^_^
qjSt=
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
pjSt=
UVWAVAWH
L$`xeH
 A_A^_^]
UVWAVAWH
L$`xeH
 A_A^_^]
UVWAVAWH
L$`xeH
 A_A^_^]
A(A;@
A(A;@
VWAVH
D$@H;
 A^_^
x AVH
H;S(v
q)P47
@USVWAVH
pBR:&
p(X|S
pA^_^[]
q)P47
@USVWAVH
pBR:&
p(X|S
pA^_^[]
L$PH3
UVWATAUAVAWH
H!t$pL
0A_A^A]A\_^]
D$hH;
D$hH;
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
uSH9K
uSH9K
uSH9K
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
qC\r4
A(A;@
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
x AVH
UVWATAUAVAWH
pBR:&
A_A^A]A\_^]
p AWH
@USVWAUH
A]_^[]
@USVWAUH
pz\:(
A]_^[]
qKPV!
VWAVH
qKPV!
VWAVH
@USWATAUAVAWH
A_A^A]A\_[]
t$ WH
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tDM
I9~0tVH
t$PI9^8t[H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
H;Q0s
H!_@3
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
WAVAWH
t:D9S
 A_A^_
p AWH
t>9K u#I
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
qB^Xh
VWAVH
 A^_^
VWAVH
 A^_^
x AVH
x-A86t
x AVH
x-A86t
x AVH
x-A86t
UVWAVAWH
 A_A^_^]
WAVAWH
0A_A^_
H9W@tKH
H9W@tKH
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWATAUAVAWH
H!EXH
@A_A^A]A\_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
UVWATAUAVAWH
PA_A^A]A\_^]
VWAVH
 A^_^
qjSt=
VWAVH
 A^_^
VWAVH
 A^_^
p WAVAWH
8YMtg@
th9_HtcH
 A_A^_
VWAVH
 A^_^
VWAVH
0A^_^
t$ WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
t$ WATAUAVAWH
0A_A^A]A\_
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
D$@H;
 A^_^
x AVH
H;S(v
q)P47
pBR:&
u,D9R
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
H!t$pL
0A_A^A]A\_^]
p WATAUAVAWH
(t$@I
A_A^A]A\_
USVWAVH
PA^_^[]
uSH9K
uSH9K
uSH9K
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
qZ\tW
L$hH3
WAVAWH
 A_A^_
WAVAWH
 A_A^_
t$ WH
H;wht)H
L$XH3
t$ WH
H;w`t)H
L$XH3
t$ WH
H;wXt)H
L$XH3
t$ WH
H;wPt)H
L$XH3
D$8I;
T$8H;
L$8H=
VWAVH
0A^_^
D$8I;
T$8H;
L$8H=
D$8I;
T$8H;
L$8H=
D$8I;
T$8H;
L$8H=
D$8I;
T$8H;
L$8H=
D$8I;
T$8H;
L$8H=
D$8I;
T$8H;
L$8H=
UVWATAUAVAWH
W H+W
L9|$8
vb'vb'v
I#v0H
PA_A^A]A\_^]
\$ VWAVH
pcU24.0
PA^_^
\$ VWAVH
pcU24.0
PA^_^
\$ VWAVH
pcU24.0
PA^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
@A^_^
\$ UVWAVAWH
t$0E3
A_A^_^]
@USVWATAVAWH
D8d$0
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
@USVWATAVAWH
A_A^A\_^[]
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
VWATAVAWH
pBR:&
D8d$0t
A_A^A\_^
t$ WH
D$ fD
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
vb'vb'v
A_A^A]A\_
VWATAVAWH
A_A^A\_^
L$8L;
W`H+WXH
L$8H;
x AVH
H;~ H
x AVH
H;~ H
t\D8A
{ AVH
pHT^I
t$ WH
L$PH3
t$ UWATAVAWH
A_A^A\_]
pz\:(
fD9<Au
UWATAVAWH
pjSt=
A_A^A\_]
UWATAVAWH
pjSt=
A_A^A\_]
\$ VWAVH
@8|$@
UAVAWH
pjSt=
pz\:(
A_A^]
WATAUAVAWH
L9l$8
vb'vb'v
A_A^A]A\_
UWATAVAWH
pjSt=
A_A^A\_]
VWATAVAWH
D9:u&H
D9:u&H
D8|3@
usHc}
D8|3@toHc}
0A_A^A\_^
UVWATAUAVAWH
D8l8@
D8l8@uhH
D8l;@
D8l8@u
A_A^A]A\_^]
$0ku!
$#Au(
$0ku!
$0ku(
WAVAWH
 A_A^_
qKPV!
VWAVH
qKPV!
VWAVH
VWAVH
f9,Au
fB9,Ju
0A^_^
t$ WH
t$ UWATAVAWH
D8~Xu
D8~xt_H
A_A^A\_]
t$ WATAUAVAWH
t$8L;
D8d8@t
D8t8@A
D8t$P
D8d$`
D8d$p
l$0E3
A_A^A]A\_
VWATAUAWH
A_A]A\_^
t$ WAVAWH
D8{xt
A_A^_
t$ WATAUAVAWH
l$0D8
IcF D8l0H
l$8IcF D8l0Hu
IcF L
A_A^A]A\_
VWATAUAWH
A_A]A\_^
t$ WATAUAVAWH
D8g|t
A_A^A]A\_
VWATAVAWH
D8cPt
A_A^A\_^
l$ VWAVH
0A^_^
\$ UVWAVAWH
A_A^_^]
@SUVWAVH
PA^_^][
\$ UVWAVAWH
T$HE3
|$@D8
D8t8@u
A_A^_^]
@SUVWAVH
PA^_^][
q[Z~v
@SUVWAVH
PA^_^][
UVWAVAWH
T$8E3
A_A^_^]
@SUVWAVH
PA^_^][
@SUVWAVH
0A^_^][
L$PH3
@SUVWAVH
PA^_^][
l$ VWAVH
0A^_^
l$ VWAVH
0A^_^
@SUVWAVH
PA^_^][
@USVWATAUAVAWH
fD9$Au
sD8d$0
A_A^A]A\_^[]
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
UVWAVAWH
~@L9{@tEM
I9~0tVH
t$PI9^8t\H
 A_A^_^]
\$ UVWH
\$ UVWH
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
UVWATAUAVAWH
|$ E3
D;l$x
0A_A^A]A\_^]
t$ UWAVH
L$(E3
t D9Q
L$@E3
t.D9Y u
x AVH
CT$8L
L$XH3
UVWATAUAVAWH
H!t$ I
fD9$Gu
A_A^A]A\_^]
\$ UVWH
@USVH
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
l$ VWAVH
8H!(H
H!l$@
 A^_^
UWAWH
D$ E3
@A__]
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
qB^Xh
VWAVH
 A^_^
VWAVH
0A^_^
x AVH
x-A86t
x AVH
x-A86t
x AVH
x-A86t
l$ VWAVH
x-A86t
0A^_^
l$ VWAVH
x-A86t
0A^_^
l$ VWAVH
x-A86t
0A^_^
l$ VWAVH
x-A86t
0A^_^
VWAVH
;t$@t
 A^_^
l$ VWAVH
H;D$ u
H;D$(t
L$0H3
@A^_^
H9W@tKH
H9W@tKH
H9W@tKH
H9W@tKH
H9W@tKH
H9W@tKH
H9W@tKH
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
I9N(t*H
0A_A^_^]
UVWAVAWH
A_A^_^]
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
UVWATAUAVAWH
H!uX3
@A_A^A]A\_^]
@SUVWATAUAVAWH
L$`H3
xA_A^A]A\_^][
@SUVWATAUAVAWH
L$`H3
xA_A^A]A\_^][
@SUVWATAUAVAWH
L$`H3
xA_A^A]A\_^][
@SUVWATAUAVAWH
L$`H3
xA_A^A]A\_^][
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
qqTt>
l$ VWAVH
@A^_^
l$ VWAVH
@A^_^
t$ WAVAWH
x3D;t$@t
 A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
UVWAVAWH
H;D$(u
H;D$0t
L$8H3
@A_A^_^]
UVWAVAWH
H;D$(u
H;D$0t
L$8H3
@A_A^_^]
qqTt>
UVWAVAWH
H;D$(u
H;D$0t
L$8H3
@A_A^_^]
UVWAVAWH
H;D$(u
H;D$0t
L$8H3
@A_A^_^]
qqTt>
WAVAWH
G H!G(H
 A_A^_
UVWAVAWH
L$`xeH
 A_A^_^]
UVWAVAWH
L$`xeH
 A_A^_^]
VWAVH
(t$ H
0A^_^
VWAVH
(t$ H
0A^_^
VWAVH
(t$ H
0A^_^
VWAVH
(t$ H
0A^_^
x AVH
H;S(v
x AVH
H;S(v
D$ E3
|$ E3
\$ UVWATAUAVAWH
pAXxi
A_A^A]A\_^]
q)P47
UVWATAUAVAWH
pBR:&
A_A^A]A\_^]
q)P47
UVWAVAWH
pBR:&
pA_A^_^]
x AVH
@SVWH
pBR:&
L$`H3
x AVH
pHW>8
p(Q6k7(
@USVWATAUAVAWH
A8~8tII
B8|3(
A_A^A]A\_^[]
l$ VWAVH
0A^_^
:B7Xzu(
$0ku(
:m'w8u(
t$ WATAUAVAWH
H!|$`L
0A_A^A]A\_
UVWATAUAVAWH
H!|$@L
PA_A^A]A\_^]
@USVWAVH
PA^_^[]
WATAUAVAWH
(|$@I
A_A^A]A\_
uRH9K
uSH9K
uSH9K
uSH9K
uSH9K
uSH9K
uSH9K
D$0t~I
H;D$0u
H;D$8tiH
UWAVH
0A^_]
T$ E3
qrRPf/
qcU24.0
qBZVZ
U^='Y
L$PH3
VWAVH
D$PE3
0A^_^
U^='Y
UVWAVAWH
D8|$@
pBR:&
D8|$@
A_A^_^]
l$ VWAVH
L$hH3
qcXV/
qrTzz
9\$Ht4H
H;>t&H
L$PH3
q[]T?
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
t$ WAVAWH
 A_A^_
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAUAVAWH
L#~0M
`A_A^A]A\_^]
SUVWATAUAVAWH
H;|$ t$L;
8A_A^A]A\_^][
SUVWATAUAVAWH
H;|$ t$L;
L#k0M
8A_A^A]A\_^][
x AVH
t$@H#
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
@USVWATAUAVAWH
pz\:(
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
fF9,~u
fF9,su
A_A^A]A\_^]
t$ UWAVH
VWATAVAWH
pC^4_
H;.t&H
@A_A^A\_^
qB^Xh
qC^4_
t$ WH
H;3t_H
L$PH3
\$ UVWATAUAVAWH
pBR:&
A_A^A]A\_^]
WAVAWH
0A_A^_
q:_:C
H;7tYH
H;/tYH
H;/tYH
8Yxt4H
p@Q4K
H98v;H
|$ UATAUAVAWH
A_A^A]A\]
^`H9~pvFH;{
H;~pr
SVWATAUAVAWH
u<H;_
L$pH;
v1H;J
D9p0v
D$hL;8r
D8t$]u
D$hL;8r
D$ E3
D$hL;8r
D$hD8
t$@L;8r
D$hL;8r
D$hL;8r
D$hL;8r
t3L;;r
t3L;;r
E9u8u
t5E9u8A
D$hL;8r
D$hL;8r
D$hL;8r
D$hL;8r
D$hL;8r
M;e`r
D8t$YA
E81u*H
D8t$ZA
D$HD8t$[A
E81u(H
D$HD8t$\A
D9t$H
D9t$H
|$xM;
D$pL94
t.D90A
D81u#H
t#HcK I;M`r
I;}`r
fD94Ju
fD94Bt
fD94Ju
fD94Bt
A_A^A]A\_^[
t$ UWATAVAWH
E9>taL9
A_A^A\_]
UAVAWH
L9y vS;y }N
xJH;y sDH
L9x(v)H;y A
CPL9<
H;{`I
TL9y@vf;y@}a
x]H;y@sWH
A0L9<
L9x(v<H;y@I
CpL9<
L9x(v)H;
A_A^]
WATAUAVAWH
l$ E3
A_A^A]A\_
t$ WAVAWH
M9q v%M;A s
M9q`v!M;A`s
APN94
L9q(weD8
thM9q@v!M;A@s
A0N94
L9q(w5D8
ApN94
L9q(v
0A_A^_
x ATAVAWH
A_A^A\
VWAVH
@A^_^
p1]Rz?L
9\$8v H
;\$8r
@USVWATAVAWH
x/D8e@I
PA_A^A\_^[]
SVWATAUAVAWH
L9l$Xt
T\|>E
L$ E3
L9d$Pt
L9d$`t
L9d$Xt
L9l$Pt
L9l$`t
L9l$Xt
L9l$Pt
L9l$`t
L9l$Xt
L9l$`t
L9l$Xt
A_A^A]A\_^[
|$xH;
|$ UATAUAVAWH
A_A^A]A\]
x UAVAWH
A_A^]
WATAUAVAWH
H;opr
H;opr
H;opr
x?H;s
H;hpr
L9upvtL;upr
L;upr
x<H;s
H;opr
0A_A^A]A\_
WAVAWH
H9kpv+H;kpr
H;{pr
H9kpv
H;kpr
H;{pr
H9kpv,H;kpr
H;{pr
H9kpv0H;kpr
H;{pr
H9npv0H;npr
H;~pr
f9,Au
rRL9TA
uKD9DA
uDfD9LA
f9,Bu
fD9LB
f9,Bu
rNL9TB
uGD9DB
u@fD9LB
f9,Au
fD9LA
CpH;Fp
tVH;~psPH
H;{pr
H;{pr
0A_A^_
x AVH
@USWH
UAVAWH
A_A^]
UVWATAUAVAWH
0A_A^A]A\_^]
UVWAVAWH
V,;V,r
@8~<t
f9<Yu
tl@8|$`u
F,@8~<t
0A_A^_^]
qp^xd
|$ UATAUAVAWH
pp^xd
D8k<t
pp^xd
A_A^A]A\]
UWATAVAWH
A_A^A\_]
{ ATAUAWH
9|$Dt)
D$@A;
H!|$(!|$ E3
H!|$ E3
A_A]A\
;\$xu
UVAVH
x AVH
x ATAVAWH
fD9 t
fD9 t
AI9>t
0A_A^A\
x ATAVAWH
fE9<Fu
A_A^A\
x AVH
x AVH
urlmon.dll
AppXAllUserStore.dll
AppxApplicabilityEngine.dll
EDGEHTML.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
SHCORE.dll
PPTP00
PPTP00
ext-ms-win-sysmain-pfapi-l1-1-0.dll
appxapplicabilityblob.dll
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-storage-sense-l1-2-2
ext-ms-win-storage-sense-l1-2-3
ext-ms-win-storage-sense-l1-2-4
ext-ms-win-storage-sense-l1-2-5
ext-ms-win-storage-sense-l1-1-0.dll
ext-ms-onecore-appmodel-tdlmigration-l1-1-0
ext-ms-onecore-appmodel-tdlmigration-l1-1-1
ext-ms-onecore-appmodel-tdlmigration-l1-1-1.dll
ext-ms-win-advapi32-ntmarta-l1-1-0.dll
ext-ms-win-com-ole32-l1-1-1.dll
ext-ms-win-com-ole32-l1-1-0
ext-ms-win-com-ole32-l1-1-1
ext-ms-win-com-ole32-l1-1-2
ext-ms-win-com-ole32-l1-1-3
ext-ms-win-com-ole32-l1-1-4
ext-ms-win-com-ole32-l1-1-5
ext-ms-win-com-ole32-l1-3-0
ext-ms-win-com-ole32-l1-4-0
ext-ms-win-core-app-package-registration-l1-1-0
ext-ms-win-core-app-package-registration-l1-1-1
ext-ms-win-core-app-package-registration-l1-1-1.dll
ext-ms-win-devmgmt-policy-l1-1-0
ext-ms-win-devmgmt-policy-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-2
ext-ms-win-devmgmt-policy-l1-1-3
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-0
ext-ms-win-ntuser-windowstation-l1-1-1
ext-ms-win-ntuser-windowstation-l1-1-2
ext-ms-win-ole32-bindctx-l1-1-0.dll
ext-ms-win-resources-deployment-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0.dll
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-wer-reporting-l1-1-0
ext-ms-win-wer-reporting-l1-1-1
ext-ms-win-wer-reporting-l1-1-2
ext-ms-win-wer-reporting-l1-1-3
ext-ms-win-wer-reporting-l1-1-0.dll
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-1.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-0
ext-ms-win-appmodel-deploymentvolumes-l1-1-1
ext-ms-win-appmodel-deploymentvolumes-l1-1-1.dll
ext-ms-win-appmodel-deploymentvolumes-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
OLEAUT32.dll
api-ms-win-core-winrt-error-l1-1-1.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
RPCRT4.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-eventing-legacy-l1-1-0.dll
api-ms-win-eventing-controller-l1-1-0.dll
FLTLIB.DLL
api-ms-win-eventing-tdh-l1-1-0.dll
api-ms-win-service-private-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
profapi.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-core-l1-1-1.dll
api-ms-win-security-capability-l1-1-0.dll
bcrypt.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-security-lsalookup-l1-1-0.dll
api-ms-win-appmodel-identity-l1-2-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-4.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
api-ms-win-appmodel-runtime-internal-l1-1-7.dll
api-ms-win-appmodel-runtime-internal-l1-1-0.dll
api-ms-win-appmodel-runtime-internal-l1-1-3.dll
api-ms-win-appmodel-state-l1-2-0.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
api-ms-win-core-biplmapi-l1-1-0.dll
api-ms-win-core-bicltapi-l1-1-6.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-1.dll
ext-ms-win-desktopappx-l1-1-0.dll
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-desktopappx-l1-1-7
ext-ms-win-desktopappx-l1-2-0
ext-ms-win-desktopappx-l1-2-1
ext-ms-win-desktopappx-l1-1-4.dll
CRYPTSP.dll
AppXDeploymentClient.dll
msdelta.dll
MrmCoreR.dll
ext-ms-win-resources-languageoverlay-l1-1-6.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-resources-languageoverlay-l1-1-4
ext-ms-win-resources-languageoverlay-l1-1-5
ext-ms-win-resources-languageoverlay-l1-1-6
ext-ms-win-resources-languageoverlay-l1-1-7
ext-ms-win-resources-languageoverlay-l1-1-0.dll
ext-ms-win-core-storelicensing-l1-1-0
ext-ms-win-core-storelicensing-l1-2-0
ext-ms-win-core-storelicensing-l1-1-0.dll
Wldp.dll
ext-ms-win-security-efswrt-l1-1-0
ext-ms-win-security-efswrt-l1-1-1
ext-ms-win-security-efswrt-l1-1-2
ext-ms-win-security-efswrt-l1-1-3
ext-ms-win-security-efswrt-l1-1-4
ext-ms-win-security-efswrt-l1-1-2.dll
api-ms-win-containers-cmclient-l1-1-0.dll
api-ms-win-containers-cmclient-l1-2-0.dll
api-ms-win-containers-cmclient-l1-5-0.dll
ext-ms-onecore-appmodel-staterepository-cache-l1-1-0.dll
ext-ms-onecore-appmodel-staterepository-cache-l1-1-4.dll
ext-ms-onecore-appmodel-staterepository-cache-l1-1-3.dll
ext-ms-onecore-appmodel-staterepository-internal-l1-1-6.dll
ext-ms-win-containers-policymanagercli-l1-1-0
ext-ms-win-containers-policymanagercli-l1-1-1
ext-ms-win-containers-policymanagercli-l1-1-0.dll
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win32-subsystem-query-l1-1-0.dll
BINDFLTAPI.dll
ext-ms-win-appmodel-appexecutionalias-l1-1-0.dll
ext-ms-win-appmodel-appexecutionalias-l1-1-1.dll
ext-ms-win-appmodel-appexecutionalias-l1-1-4.dll
api-ms-win-shell-shellfolders-l1-1-0.dll
RMCLIENT.dll
ext-ms-win-advapi32-ntmarta-l1-1-0
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-3
ext-ms-win-shell-shell32-l1-5-0
CRYPT32.dll
NTMARTA.dll
api-ms-win-core-com-private-l1-1-0.dll
ext-ms-onecore-appmodel-staterepository-internal-l1-1-3.dll
ext-ms-win-appmodel-registrycompatibility-l1-1-0
ext-ms-win-appmodel-registrycompatibility-l1-1-0.dll
WINTRUST.dll
Unknown exception
bad allocation
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lstd::exception: %hs
ntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
length
C++/WinRT version:2.0.220110.5
winrt::hresult_error: %ls
Microsoft.UI.Xaml.CBS_8wekyb3d8bbwe
Microsoft.WindowsAppRuntime.1.0_8wekyb3d8bbwe
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil/Staging.h
WilStaging_02
false
*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.startupTask']
*[local-name()='BackgroundTasks']/*[local-name()='Task']
Executable
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\PackageManager
PackageManagerState
PackageManagerAction
PauseEvent
RestartEvent
NotificationSemaphores
Local\SM0:%lu:%lu:%hs
Windows.Management.Deployment.PackageManager
Windows.Foundation.Collections.PropertySet
Windows.Foundation.Uri
AppxBlockMap.xml
application/vnd.ms-appx.blockmap+xml
delayedStart
Windows.FullTrustApplication
machine
mediumIL
windows
disabled
console
appContainer
windowsApp
manual
Windows.PartialTrustApplication
packagedClassicApp
win32App
modern
classic
appSilo
AppxMetadata\CodeIntegrity.cat
application/vnd.ms-pkiseccat
AppxSignature.p7x
application/vnd.ms-appx.signature
AppxContentGroupMap.xml
application/vnd.ms-appx.streammap+xml
AppxMetadata\AppxBundleManifest.xml
application/vnd.ms-appx.bundlemanifest+xml
Platform.All
Windows.XboxSRA
OSMaxVersionTested
AllowExecution
Files
Service
Description
PublisherDisplayName
ResourcePackage
DeploymentExtensionHandler
WindowsRuntimeAccess
Framework
DisplayName
OSMinVersion
Windows.Team
Windows.Xbox
Windows.DesktopServer
AppxManifest.xml
application/vnd.ms-appx.manifest+xml
Windows.8828080
@Extents
windows.publisherCacheFolders
windows.localExperiencePack
neutral
windows.appExecutionAlias
m:VisualElements/@SmallLogo | m2:VisualElements/@Square30x30Logo | *[local-name()='VisualElements']/@Square44x44Logo
*[local-name()='VisualElements']/@ForegroundText
windows.fileTypeAssociation
x86a64
*[local-name()='VisualElements']/@DisplayName
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square310x310Logo
windows.appExtension
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Tall150x310Logo
windows.preInstalledConfigTask
@Center
windows.hostRuntime
windows.backgroundTasks
windows.autoPlayHandler
m:VisualElements/@Logo | *[local-name()='VisualElements']/@Square150x150Logo
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShortName
windows.appExtensionHost
windows.protocol
m2:VisualElements/m2:DefaultTile/@Square70x70Logo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Square71x71Logo
include
windows.service
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@BadgeLogo
m:VisualElements/m:DefaultTile/@WideLogo | *[local-name()='VisualElements']/*[local-name()='DefaultTile']/@Wide310x150Logo
square150x150Logo
windows.searchProtocolHandler
windows.deploymentExtensionHandler
xbox.live
arm64
windows.webAccountProvider
windows.searchFilterHandler
wide310x150Logo
windows.updateTask
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/@Path
windows.barcodeScannerProvider
windows.appService
*[local-name()='VisualElements']/*[local-name()='LockScreen']/@Notification
*[local-name()='VisualElements']/@BackgroundColor
windows.appUriHandler
@Tile
http://schemas.microsoft.com/appx/manifest/desktop/windows10/6
Windows.Holographic
http://schemas.microsoft.com/appx/manifest/desktop/windows10/8
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @StartPage] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @StartPage]
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='MixedRealityModel']/*[local-name()='SpatialBoundingBox']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/*[local-name()='ShowNameOnTiles']/*[local-name()='ShowOn']
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/holo:HoloContent
Windows.Core
Windows.7067329
Windows.Mobile
Windows.IoTHeadless
Windows.Desktop
Windows.XboxERA
Windows.Windows8x
ProcessorArchitecture
AppListEntry
StartPage
SmallLogo
Square71x71Logo
EntryPoint
ShortName
Executable
Square150x150Logo
Publisher
ContentType
DefaultSize
BackgroundColor
Match
PublicFolder
Version
Square310x310Logo
Alias
Wide310x150Logo
Image
RuntimeType
ResourceId
Category
ForegroundText
VisualGroup
Windows.Universal
Windows.Server
Windows.IoT
InboxApplications
Staged
EndOfLife
Config
DownlevelInstalled
Applications
Windows.Management.Deployment.Internal.PackageManagerInternal
Windows.Foundation.PropertyValue
@00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
Windows.Internal.StateRepository.Package
onecore\admin\appmodel\packagemanager\server\addparameterprocessor.cpp
Family Names not found in related set: %ws
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
onecore\admin\appmodel\PackageManager\Server\DeploymentRequest.hpp
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
onecore\admin\appmodel\packagemanager\server\addvolumerequest.cpp
*[local-name()='AppInstaller']/*[local-name()='MainPackage']
*[local-name()='AppInstaller']/*[local-name()='MainBundle']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='OptionalPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='RelatedPackages']/*[local-name()='Bundle']
*[local-name()='AppInstaller']/*[local-name()='Dependencies']/*[local-name()='Package']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='OnLaunch']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='AutomaticBackgroundTask']
*[local-name()='AppInstaller']/*[local-name()='UpdateSettings']/*[local-name()='ForceUpdateFromAnyVersion']
*[local-name()='AppInstaller']/*[local-name()='UpdateUris']/*[local-name()='UpdateUri']
*[local-name()='AppInstaller']/*[local-name()='RepairUris']/*[local-name()='RepairUri']
*[local-name()='AppInstaller']/@Uri
*[local-name()='AppInstaller']/@Version
@*[local-name()='HoursBetweenUpdateChecks']
@*[local-name()='ShowPrompt']
@*[local-name()='UpdateBlocksActivation']
onecore\admin\appmodel\packagemanager\server\appinstallerprocessor.cpp
PauseAppInstallerBackgroundUpdate
StartAppInstallerBackgroundUpdate
%systemroot%\System32\AppInstallerBackgroundUpdate.exe
AppInstallerBackgroundUpdate
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVectorView`1<Windows.Foundation.Uri>
Windows.Foundation.Collections.IVector`1<Windows.Foundation.Uri>
onecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
onecore\private\base\inc\appmodel\staterepository\dal/ResourcePriority.hpp
AppInstallerUpdater
onecore\admin\appmodel\Common\Utilities.hpp
Windows.Networking.Connectivity.NetworkInformation
onecore\admin\appmodel\packagemanager\server\appxdownloadprogresshandler.cpp
AddStagingUriAndEstimateFootprintSize() should only be called once per URI
The uri [%ws] is not found in data source cache
gonecore\admin\appmodel\PackageManager\Server\ArgumentHelpers.hpp
onecore\admin\appmodel\packagemanager\server\argumenthelpers.cpp
file:///
Staging PackageSourceUri not found for package %ws in order to stage %ws .
Attempting to add an optional package for a main package that's staged from an unsupported scheme %S
Attempting to add an optional package for a main package that's staged from an unsupported scheme %d.
Optional Package %ws not found in related set for %ws .
?PFun=
x-windowsupdate
AppxManifest.xml
AppxMetadata\AppxBundleManifest.xml
onecore\admin\appmodel\packagemanager\server\commandprocessor.cpp
ApplicationManagement
BlockNonAdminUserInstall
SOFTWARE
9e}IG
onecore\admin\appmodel\packagemanager\server\deletepackagefilesparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\deletevolumerequest.cpp
onecore\admin\appmodel\packagemanager\server\dependentrequesttracker.cpp
Software\Microsoft\Windows\CurrentVersion\Search
onecore\admin\appmodel\packagemanager\server\deploymentnotification.cpp
InstalledPackagedAppsRevision
3'X>onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
Package
S-1-5-18
AppExtension
Version
Count
AllUsers
Aonecore\admin\appmodel\packagemanager\server\deploymentoperationarguments.cpp
onecore\admin\appmodel\packagemanager\server\deploymentoperationparameterprocessor.cpp
\Volume{
ManifestPath %ws
Fail to get package from State Repository for ManifestPath %ws
neutral
onecore\admin\appmodel\PackageManager\Server\RpcMemoryManagement.inl
onecore\admin\appmodel\packagemanager\server\deploymentqueuemanager.cpp
Failed to Expire and Remove Conflicting Lazy Flush Requests on a dequeueable request. Ignored the failure.
not in
empty
not empty
(query only)
shutdown
Failed to convert SID to string
Queued request is cancelled because it is overridden by higher priority request that has opposite effect. Cancelled queued request operation: %d, priority: %d. Overriding higher priority request operation: %d, priority: %d, target user SID: %ws, package full name: %ws
Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
ReRegisterPackages
Repairing registration of package 
 for user 
PackageRepair
onecore\internal\base\inc\appmodel\common\RegistryKey.hpp
RetryCount
NextCleanupTime
onecore\admin\appmodel\Telemetry\DeploymentSession.hpp
MaxConcurrentStageCountForCoServicingPackages
AllPackages
DeploymentState
onecore\admin\appmodel\packagemanager\server\deploymentqueuestore.cpp
Could not set file attributes for %ws.
<String too big>
onecore\admin\appmodel\PackageManager\Server\DeploymentQueueStore.inl
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorereader.cpp
*.rslc
Failed to FindNextFile
QueueStore: ReadRequestsFromFilePath at %ws. Deleting.
onecore\admin\appmodel\PackageManager\Server\DeploymentQueueStoreWriter.inl
onecore\admin\appmodel\packagemanager\server\deploymentqueuestorewriter.cpp
.rslc
onecore\private\base\inc\Appmodel\Runtime\DependencyMiniRepositoryWriter.inl
onecore\admin\appmodel\packagemanager\server\deploymentrequest.cpp
Deployment operation failed.
Recording Current Operation Context for Telemetry logging has failed. But it doesn't block deployment functionality
UnknownUser
All Main Packages
FaultInjection->ReadAllConfigurationsFromRegistry
%ws isn't on allowed list.
SendNotificationBeforeDeploymentOperation
CleanupSpecificVolumeForPackageFamilyIfNeeded
DisableExternalLocation
MRTDataHandlerRemove
DeStage
DeStageUserData
CleanAppxAllUserStore
DataFlush
Commit failed
SendNotificationPostDeploymentOperation
Only Stage and PreRegister Operations can be paused
User-initiated cancels are not paused--instead, they are rolled back
Skipping package pause due to explicit opt-in, rolling back failed transaction
Deployment's currentstate (%d) did progress far enough to pause. Staged state is (%d)
Inbox package %ws not set to Paused as Deployment does not stage these files
Directory %ws doesn't even exist, so the deployment has not progressed enough to pause
Pause feature is off because the configuration reg key is not set.
Package name from manifest path: 
; Package family name: 
Could not find package name in path
; Package: 
, Users: 
; Package folder exists
; Package folder doesn't exist
; Package location unknown
Total estimated footprint size must not be 0
Gap: %I64u ms
Overall time: %I64u ms
Enqueue cost: %I64u ms
Dequeue delay: %I64u ms
Bundle processing cost: %I64u ms
Indexing cost: %I64u ms
Resolve dependency cost: %I64u ms
Check approval cost: %I64u ms
Evaluation cost: %I64u ms
Hardlinking evaluation cost: %I64u ms
Stage required cost: %I64u ms
Flushing and closing files cost: %I64u ms
Machine register cost: %I64u ms
Stage user data cost: %I64u ms
Registration cost: %I64u ms
Repository commit transaction cost: %I64u ms
Data flush cost: %I64u ms
Post DeStage repository commit transaction cost: %I64u ms
Remaining cost: %I64u ms
PackageManagerInternal::DeploymentRequest::CancelRequestAndSubmitReportIfHangDetected
Trying to repair ACLs for %s
Failed to repair ACLs for  package folder %ws
ACLs repaired successfully for %s. Register next time should succeed.
Trying to repair ACLs for package root (junction) in system volume: %s
Failed to repair ACLs for junction %ws
ACLs repaired successfully for junction %s.
RollbackRequest
PauseOnFailure
onecore\internal\sdk\inc\wil\opensource/wil/result.h
onecore\admin\appmodel\packagemanager\server\endoflifelist.cpp
Could not open %ws
AppxProvisioning.xml
onecore\admin\appmodel\packagemanager\server\enumpackagesbypackagevolumekey.cpp
S-1-1-0
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidfilter.cpp
onecore\admin\appmodel\packagemanager\server\enumpackagesbyusersidnamepublisherfilter.cpp
onecore\admin\appmodel\packagemanager\server\enumprovisionedpackagesfilter.cpp
GetAppXError failed with error
onecore\admin\appmodel\packagemanager\server\errorhelpers.cpp
Failed to copy error message from GetAppXError.
GetErrorInfo failed with undocumented error
GetErrorInfo reports there is no error object to return
Failed to get Error Description
Failed to copy error message from GetErrorInfo.
onecore\admin\appmodel\packagemanager\server\faultinjection.cpp
onecore\admin\appmodel\packagemanager\server\generatepreinstalledprifiles.cpp
Software
onecore\admin\appmodel\packagemanager\server\helpers.cpp
aTonecore\admin\appmodel\packagemanager\server\iasyncrequest.cpp
Could not impersonate for IAsyncRequest thread.
onecore\admin\appmodel\packagemanager\server\inventoryhelpers.cpp
onecore\admin\appmodel\PackageManager\Server\IEnumPackagesFilter.hpp
Could not initialize ETW logging.
onecore\admin\appmodel\packagemanager\server\module.cpp
Could not opt-in for telemetry upload.
Could not initialize StateRepository
Could not initialize WNF publisher state name cache
Could not initialize queue store
Could not initialize Deployment Result Manager
Could not initialize deployment request
Could not initialize trust helper
Could not initialize EndOfLifeList
Could not initialize Platform
Could not initialize XUpdateSessionManager
RoOriginateLanguageException
combase.dll
onecore\admin\appmodel\packagemanager\server\moveparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\ondemandregisterparameterprocessor.cpp
MaintainProcessorArchitectureOnUpdate
AppxPolicies
Software\Policies\Microsoft\Windows\Appx
onecore\admin\appmodel\packagemanager\server\packageapplicability.cpp
Specific version applicability called for all users is not supported
Multiple intent package full names not supported.
onecore\admin\appmodel\packagemanager\server\packageinventory.cpp
onecore\private\base\inc\appmodel\staterepository\dal/Statement.hpp
onecore\admin\appmodel\packagemanager\server\packageoperation.cpp
Microsoft.MicrosoftEdgeDevToolsClient_8wekyb3d8bbwe
onecore\admin\appmodel\packagemanager\server\packagestatemachine.cpp
onecore\admin\appmodel\packagemanager\server\prioritypolicy.cpp
onecore\admin\appmodel\packagemanager\server\provisionpackageparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\removeparameterprocessor.cpp
\*.xml
onecore\internal\sdk\inc\wil\opensource\wil\winrt.h
onecore\admin\appmodel\packagemanager\server\repairrequest.cpp
Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
onecore\admin\appmodel\packagemanager\server\resetparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\resetsingleparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\serversidediskusage.cpp
Ignoring failure to get file size for %ws
Resources
microsoft.system.package.metadata
onecore\admin\appmodel\Common\ContainerUserToken.hpp
onecore\admin\appmodel\packagemanager\server\serversiderpc.cpp
Staging PackageSourceUri not found for package %ws.
Failed to reset machine register state in the State Repository database for package %ws
USERS\
_Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
\Microsoft\WindowsApps
>3B>SetContentGroupState
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVector`1<String>
resources.pri
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/%u!
onecore\admin\appmodel\packagemanager\server\service.cpp
ncalrpc
9104db00-b51f-4774-a4bb-f3f68c556cb6
ncacn_hvsocket
Attempt to Enable RPC interface - RpcEpUnregister returned error
Attempt to Enable RPC interface - RpcServerUnregisterIf returned error
Attempt to Enable AppContainer RPC interface - RpcServerUnregisterIf returned error
Attempt to Free Binding Vector - RpcBindingVectorFree returned error
Attempt to Disable RPC interface - RpcEpUnregister returned error
Attempt to Disable AppContainer RPC interface - RpcEpUnregister returned error
Attempt to Disable RPC interface - RpcServerUnregisterIf returned error
Attempt to Disable AppContainer RPC interface - RpcServerUnregisterIf returned error
C:\data\SystemData\ETW
%s\%s.%03d.etl
appxsvc
DeploymentServer
MBhvC
onecore\admin\appmodel\packagemanager\server\setvolumestaterequest.cpp
EnsureACLOnVolumeAppRoot failed
CleanupSisPath failed
Updating mountpoint for package %ws failed. Continuing to next package.
Failed to update package status. Set online = %d.
Getting family name for package %ws failed. Continuing to next package.
Getting UserSidString for package %ws failed Continuing to next package.
SetVolumeStateRequest::UpdateAppDataMountPoints
Moving Application Data for package %ws failed. Continuing to next package.
wcifs
Setting up mutable directory for package %ws failed. Continuing to next package.
Setting mutable package offline for package %ws failed. Continuing to next package.
Setting up user mutable directory for package %ws failed. Continuing to next package.
Setting up user mutable directory for package %ws user %ws failed. Continuing to next package.
\MutablePackageRoot
%s%s%s
Setting user mutable directory offline for package %ws user %ws failed. Continuing to next package.
\LocalCache
.onecore\admin\appmodel\packagemanager\server\sharedpackagecontainerparameterprocessor.cpp
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\SharedPackageContainer
DisableAdminRequirement
string too long
bad array new length
onecore\admin\appmodel\packagemanager\server\specificvolumehelper.cpp
onecore\admin\appmodel\packagemanager\server\stageuserdataparameterprocessor.cpp
onecore\admin\appmodel\packagemanager\server\statelocations.cpp
\SharedLocal
GetProtectionLevelForPackage %ls
CdplIsSupported %ls
GetSystemSisManifestPathFromPackageFullName %ls
GetManifestReaderFromPath %ls
AppXGetOSMaxVersionTested %ls
GetPackageFamilyNameFromFullName %ls
CdplIsAppDataProtectionSupported %ls %llu
DetermineDataProtectionLevel %ls
S:(ML;OICI;NW;;;LW)D:(A;OICI;GA;;;S-1-1-0)(A;OICI;FA;;;%ls)
onecore\admin\appmodel\packagemanager\server\syncvolumerequest.cpp
onecore\admin\appmodel\Common\StateRepository.hpp
_Classes
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages\
PackageStatus
onecore\admin\appmodel\packagemanager\server\temppackagestatus.cpp
, status=0x
Failed to sync status (TempPackageStatus-OFF) for 
Failed to read status (TempPackageStatus-OFF) for 
Windows.Internal.StateRepository.Management.RepositoryManager
onecore\admin\appmodel\packagemanager\server\tilesrequest.cpp
Could not find StateRepository package for package name %ls.
TilesStore
onecore\admin\appmodel\packagemanager\server\tilesstorepreviewtile.cpp
Unsupported package type: %i
Could not find main or optional package for source bundle id %I64d and name %ls.
onecore\admin\appmodel\Common\PackageID.inl
onecore\admin\appmodel\packagemanager\server\volumerequestbase.cpp
onecore\admin\appmodel\packagemanager\server\volumerequestmanager.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatename.cpp
onecore\admin\appmodel\packagemanager\server\wnfpublisherstatenamecache.cpp
onecore\admin\appmodel\packagemanager\server\xupdatesessionmanager.cpp
x-updateagent://%s:%s:%I64u
P:\WindowsApps
onecore\internal\sdk\inc\wil\opensource/wil/result_macros.h
onecore\admin\appmodel\packagemanager\server\xupdatesessionmanagerrpc.cpp
onecore\admin\appmodel\packagemanager\server\mutablemsixvcrequest.cpp
RtlAddGrowableFunctionTable
RtlDeleteGrowableFunctionTable
api-ms-win-core-processthreads-l1-1-3.dll
GetProcessMitigationPolicy
SetThreadInformation
GetThreadInformation
api-ms-win-core-localregistry-l1-1-0.dll
RegGetValueW
AcgApi
Software\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform
api-ms-win-core-com-l1-1-1.dll
CoCreateInstanceFromApp
api-ms-win-core-winrt-l1-1-0.dll
RoGetActivationFactory
api-ms-win-core-winrt-string-l1-1-0.dll
WindowsCreateString
WindowsDeleteString
Windows.Internal.SecurityMitigationsBroker
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
AppXDeploymentServer
GetDeploymentError
SetDeploymentError
api-ms-win-eventing-tdh-l1-1-0.dll
tdh.dll
TdhFormatProperty
onecore\base\appmodel\package\packagesid.cpp
0x%08lx
onecore\base\appmodel\common\widestring.cpp
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\pathhelpers.cpp
0123456789ABCDEFonecore\base\appmodel\common\sidhelper.cpp
onecore\base\appmodel\common\impersonationcontext.cpp
onecore\base\appmodel\common\stringset.cpp
Software\Classes\Local Settings
onecore\base\appmodel\common\registrykey.cpp
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Deployment
AppModelDeploymentNotifications
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\PackageRepository
AppModelPackageRepository
Software\Microsoft\Windows\CurrentVersion\AppModel
AppModelRoot
Software\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore
AppxAllUserStore
Software\Microsoft\Windows\CurrentVersion\Appx\ByteCodeQueue
AppxByteCodeQueue
Software\Microsoft\Windows\CurrentVersion\Appx\NewDeploymentOperation
AppxNewDeploymentOperation
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository
AppxMiniRepository
Software\Microsoft\Windows\CurrentVersion\Appx\PackageSidRef
AppxPackageSidRef
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
AppxPackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
AppxPurgeList
Software\Microsoft\Windows\CurrentVersion\Appx
AppxRoot
Software\Microsoft\Windows\CurrentVersion\AppModel\StagingInfo
AppxStagingInfo
Software\Microsoft\Windows\CurrentVersion\AppModel\StateChange
AppxStateChange
Packages
onecore\base\appmodel\common\stateseparation.cpp
GetPersistedRegistryLocationW
RtlIsStateSeparationEnabled
onecore\base\appmodel\common\sid.cpp
Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders
onecore\base\appmodel\common\userprofile.cpp
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
%USERPROFILE%
AppData
ProfileImagePath
%PROGRAMDATA%
Local AppData
SHA256
onecore\base\appmodel\common\cryptoprovider.cpp
HashDigestLength
ObjectLength
onecore\base\appmodel\common\guid.cpp
0123456789abcdefonecore\base\appmodel\common\bytebuffer.cpp
\\?\UNC\
BCryptCloseAlgorithmProvider
BCryptOpenAlgorithmProvider
BCryptCreateHash
BCryptGetProperty
BCryptFinishHash
BCryptHashData
Bcrypt.dll
BCryptDestroyHash
CheckPoint.VPN_cw5n1h2txyewy
FileManager_cw5n1h2txyewy
f5.vpn.client_cw5n1h2txyewy
Microsoft.MoCamera_cw5n1h2txyewy
JuniperNetworks.JunosPulseVpn_cw5n1h2txyewy
windows.devicesflow_cw5n1h2txyewy
SonicWALL.MobileConnect_cw5n1h2txyewy
Windows.MiracastView_cw5n1h2txyewy
windows.immersivecontrolpanel_cw5n1h2txyewy
Windows.PrintDialog_cw5n1h2txyewy
Windows.MtcUvc_cw5n1h2txyewy
OOBEApp_cw5n1h2txyewy
Windows.PrintDialog3D_cw5n1h2txyewy
BrowserChoice_cw5n1h2txyewy
SettingsApp_cw5n1h2txyewy
DefaultApp_cw5n1h2txyewy
Windows.DockingController_cw5n1h2txyewy
Xbox.KinectTuner_cw5n1h2txyewy
Xbox.DisplayTroubleshooter_cw5n1h2txyewy
Xbox.Oobe_cw5n1h2txyewy
Xbox.NetworkTroubleshooter_cw5n1h2txyewy
Xbox.SystemUpdate_cw5n1h2txyewy
PackageRootFolder
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\Repository\Packages
Applications
CapabilitySids
PackageSid
ApplicationContentUris
CapabilityCount
DefaultStartPage
ApplicationLogo
PackageID
DisplayName
OSMaxVersionTested
FullTrust
DevelopmentMode
OSMinVersion
SupportedUsers
Framework
sidType %u
onecore\base\appmodel\appxminirepository\lib\appxminirepository.cpp
User %ws 0x%0x
User %ws
lpacAppExperience
AppReadiness
AppReadinessDirectory
NotifyObject
Software\Microsoft\Windows\CurrentVersion\AppReadiness
Donecore\admin\appmodel\packagerepository\staterepository\repository.cpp
PackageRepository.edb
Failed to update State Repository Cache
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
Machine
Deployment
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
This should never occur
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
PackageRow was not initialized with lazy init info. Cannot query external location info.
PackageRow was not initialized with lazy init info. Cannot query IsStub info.
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
single
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='SupportedUsers']
multiple
onecore\admin\appmodel\Common\ProgID.hpp
onecore\admin\appmodel\packagerepository\common\extensions.cpp
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
windows.comInterface
windows.activatableClass
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
windows.comServer
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension']
*[local-name()='HostRuntime']
desktop4:Subsystem
*[local-name()='AppExecutionAlias']
ResourceGroup
iot2:Subsystem
uap8:AllowOverride
*[local-name()='ExecutionAlias']
*[local-name()='AppUriHandler']
*[local-name()='AppService']
*[local-name()='Host']
uap7:Name
*[local-name()='DisplayName']
*[local-name()='FileTypeAssociation']
*[local-name()='InfoTip']
*[local-name()='Logo']
OpenIsSafe
*[local-name()='EditFlags']
*[local-name()='SupportedVerbs']/*[local-name()='Verb' and @Id='Open']
AlwaysUnsafe
@*[local-name()='DdeExecApplication']
@*[local-name()='DdeExecCommand']
@*[local-name()='DdeExecIfExec']
@*[local-name()='DdeExecTopic']
*[local-name()='FileTypeAssociation']/*[local-name()='SupportedFileTypes']/*[local-name()='FileType']
InfoTip
ddeexec
EditFlags
topic
application
*[local-name()='Protocol']
ifexec
Always
ReturnResults
*[local-name()='AppExtensionHost']/*[local-name()='Name']
Optional
*[local-name()='Properties']
*[local-name()='AppExtension']
TitleId
*[local-name()='XboxLive']
xbox.live.
ms-xbl-%08x
@*[local-name()='TrustLevel']
@*[local-name()='HostId']
@*[local-name()='RuntimeBehavior']
Unknown TrustLevel
@*[local-name()='SupportsMultipleInstances']
Unknown RuntimeBehavior
@*[local-name()='CompatMode']
@*[local-name()='Subsystem']
@*[local-name()='Parameters']
@*[local-name()='Scope']
@*[local-name()='CurrentDirectoryPath']
VailProxy
onecore\admin\appmodel\packagerepository\common\tools.cpp
Square44x44Logo
ProviderDisplayName
ActionDisplayName
onecore\admin\appmodel\packagerepository\common\localizationdictionary.cpp
DefaultIcon
Software\Microsoft\SQMClient
AppxDeploymentFailureBlue
IsTest
OsimState
FailureHresult
BuildVersion
ExtensionHandler
Microsoft-Windows-AppXDeploymentServer/Operational
EtwEventID
Microsoft-Windows-StateRepository/Operational
Microsoft-Windows-AppXPackaging/Operational
Microsoft-Windows-AppReadiness/Operational
Microsoft-Windows-AppReadiness/Admin
Microsoft-Windows-SettingSync/Operational
Microsoft-Windows-SettingSync/Debug
Microsoft-Windows-WindowsUpdateClient/Operational
Microsoft-Windows-Store/Operational
Application
System
%windir%\Logs\WindowsUpdate\
AppXDeploymentServer.dll
%programdata%\Microsoft\Windows\AppRepository\
%windir%\Temp\
onecore\admin\appmodel\telemetry\deploymentsession.cpp
StateRepository*
%d.%d.%d.%d
WindowsUpdate*
DeploymentTrace*
AppXDeploymentServer version = 
Package full name = 
Component failure code = 0x
Result code = 0x
Deployment Operation = 
ETW Event ID = 
OSIM state = 
Package Manager State = 
IsEvtExportLogPresent = 
Failed component name = 
AppxErrorReport
%s_%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X.%s
0xFFFFFFFFFFFF
{3F471139-ACB7-4A01-B7A7-FF5DA4BA2D43}
{ba44067a-3c4b-459c-a8f6-18f0d3cf0870}
{3C42000F-CC27-48C3-A005-48F6E38B131F}
{fe762fb1-341a-4dd4-b399-be1868b3d918}
{BFF15E13-81BF-45EE-8B16-7CFEAD00DA86}
{F1EF270A-0D32-4352-BA52-DBAB41E1D859}
{D49918CF-9489-4BF1-9D7B-014D864CF71F}
{EB65A492-86C0-406A-BACE-9912D595BD69}
{072665fb-8953-5a85-931d-d06aeab3d109}
{0001376b-930d-50cd-2b29-491ca938cd54}
{5526aed1-f6e5-5896-cbf0-27d9f59b6be7}
{cf7f94b3-08dc-5257-422f-497d7dc86ab3}
{19c13211-dec8-42d5-885a-c4cfa82ea1ed}
{fe0ab4b4-19b6-485b-89bb-60fd931fdd56}
DisableTraceLoggingSession
{aa1b41d3-d193-4660-9b47-dd701ba55841}
DeploymentTrace
onecore\admin\appmodel\telemetry\traceloggingsession.cpp
{NoActivityID}
session\
PPTP00
PPTP00
PPTP00
PPTP00onecore\admin\appmodel\telemetry\sqmhelpers.cpp
svchost.exe
arm64
x86a64
onecore\internal\base\inc\appmodel\package\ProcessorArchitecture.hpp
unknown
%s_%s_%s_%s
onecore\admin\appmodel\common\packagefullnameutilities.cpp
%s_%s_%s
PackageFullName: %ws
onecore\admin\appmodel\common\Utilities.hpp
Unexpected: optional package %ws has %llu main packages and is in a related set
onecore\admin\appmodel\common\optionalpackagehelper.cpp
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\volumemanager.cpp
WindowsApps
UserMutablePackagesOnline
MutablePackagesOnline
DefaultVolumeKey
EnableExternalVolumes
SisPath
MountPoint
MediaId
Flags
NextVolumeIndex
onecore\admin\appmodel\common\configuration.cpp
PackageRepositoryRoot
Projected
Merged
MutablePackageDirectoryEnabled
SharedAppsEnabled
Upgrade
SYSTEM\Setup
Win32alacarteEnabled
VAILCentennialEnabled
PackagedFullTrustEnabled
ConditionalACE
\SharedLimitedTime\
MovedPackages
Mutable
\DeletedAllUserPackages
AuditBoot
DisableMeteredNetworkBackgroundAutoUpdates
System\Setup\Status
AllowPreinstalledRemoval
DisableBackgroundAutoUpdates
RestrictAppToSystemVolume
RedirectMrtResources
AllowDeploymentInSpecialProfiles
RestrictAppDataToSystemVolume
ServerCore
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Server\ServerLevels
SYSTEM\Setup\Upgrade\Appx\Applications
Server-Gui-Shell
NoReRegisterOnUpgrade
antiqueWhite
aliceBlue
aquamarine
beige
azure
black
bisque
blanchedAlmond
brown
blueViolet
cadetBlue
burlyWood
chocolate
chartreuse
cornflowerBlue
coral
crimson
cornsilk
darkBlue
darkGoldenrod
darkCyan
darkGreen
darkGray
darkMagenta
darkKhaki
darkOrange
darkOliveGreen
darkRed
darkOrchid
darkSeaGreen
darkSalmon
darkSlateGray
darkSlateBlue
darkViolet
darkTurquoise
deepSkyBlue
deepPink
dodgerBlue
dimGray
floralWhite
firebrick
fuchsia
forestGreen
ghostWhite
gainsboro
goldenrod
green
honeydew
greenYellow
indianRed
hotPink
ivory
indigo
lavender
khaki
lawnGreen
lavenderBlush
lightBlue
lemonChiffon
lightCyan
lightCoral
lightGreen
lightGoldenrodYellow
lightPink
lightGray
lightSeaGreen
lightSalmon
lightSlateGray
lightSkyBlue
lightYellow
lightSteelBlue
limeGreen
magenta
linen
mediumAquamarine
maroon
mediumOrchid
mediumBlue
mediumSeaGreen
mediumPurple
mediumSpringGreen
mediumSlateBlue
mediumVioletRed
mediumTurquoise
mintCream
midnightBlue
moccasin
mistyRose
navajoWhite
olive
oldLace
orange
oliveDrab
orchid
orangeRed
paleGreen
paleGoldenrod
paleVioletRed
paleTurquoise
peachPuff
papayaWhip
powderBlue
purple
royalBlue
rosyBrown
salmon
saddleBrown
seaGreen
sandyBrown
sienna
seaShell
skyBlue
silver
slateGray
slateBlue
springGreen
steelBlue
thistle
transparent
tomato
violet
turquoise
white
wheat
yellow
whiteSmoke
onecore\admin\appmodel\common\utilities.cpp
yellowGreen
SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\AppModel\FamiliesAllowedForSYSTEM
OSDATA\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\AppModel\FamiliesAllowedForSYSTEM
familiesRootKey.Open failed, %ls
familiesRootKey.EnumKey failed, %ls, %u.
_1.0.0.0_neutral_neutral_nopublisherid
TEMP.xml
Unknown error
%hu.%hu.%hu.%hu
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='DependencyTarget' and text()='true']
dependencyTarget
inProcessMediaExtension
runFullTrust
make_bstr_nothrow xpath
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.dataProtection']/*[local-name()='DataProtection']
selectSingleNode
get_attributes
make_bstr_nothrow AttributeName
UserDataAvailability
getNamedItem
always
get_nodeValue
whileUnlocked
afterFirstUnlock
applicationManaged
%ls isn't on allowed list.
%ls isn't framework.
StoreSvc
msixauth=
7B21B8BB-EE70-40DC-836C-687B6A30B642
x-msix-datasource://
onecore\admin\appmodel\common\randomaccessstreamdatasourceurihelper.cpp
?uri=
@*[local-name()='%ls']
onecore\admin\appmodel\common\xmltools.cpp
>`onecore\internal\sdk\inc\wil\opensource/wil/resource.h
onecore\admin\appmodel\common\packagestatus.cpp
Failed to sync status (PackageStatus-OFF) for 
\Microsoft\Windows\CurrentVersion\AppModel\StateChange\PackageList\
Failed to read status (PackageStatus-OFF) for 
RemediationReason
PackageList
Failed to read status (PackageStatusAri-OFF) for 
Failed to sync status (PackageStatusAri-OFF) for 
<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">            <RegistrationInfo>                <SecurityDescriptor>D:(A;;GA;;;SY)(A;;FRFX;;;LS)(A;;FA;;;BA)</SecurityDescriptor>            </RegistrationInfo>            <Principals>                <Principal id="LocalSystem">                    <UserId>S-1-5-18</UserId>                </Principal>            </Principals>            <Triggers>                <TimeTrigger>                    <Repetition>                        <Interval>PT8H</Interval>                        <StopAtDurationEnd>false</StopAtDurationEnd>                    </Repetition>                    <StartBoundary>2017-01-01T00:00:00Z</StartBoundary>                    <Enabled>true</Enabled>                    <RandomDelay>PT8H</RandomDelay>                </TimeTrigger>            </Triggers>            <Settings>                <MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>                <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries>                <StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>                <AllowHardTerminate>false</AllowHardTerminate>                <StartWhenAvailable>true</StartWhenAvailable>                <RunOnlyIfNetworkAvailable>true</RunOnlyIfNetworkAvailable>                <AllowStartOnDemand>true</AllowStartOnDemand>                <Enabled>true</Enabled>                <Hidden>false</Hidden>                <RunOnlyIfIdle>true</RunOnlyIfIdle>                <WakeToRun>false</WakeToRun>                <Priority>8</Priority>                <UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>            </Settings>            <Actions Context="LocalSystem">                <Exec>                    <Command>%windir%\system32\rundll32.exe</Command>                    <Arguments>%windir%\system32\AppxDeploymentClient.dll,ScheduleAppInstallerBackgroundUpdate</Arguments>                </Exec>            </Actions>        </Task>
onecore\admin\appmodel\common\scheduledtaskhelper.cpp
\Microsoft\Windows\AppxDeploymentClient
onecore\admin\appmodel\common\ManifestCache.hpp
ManifestCacheOptions
onecore\admin\appmodel\common\manifestreader.cpp
Not found reason: %d
Path: %ws
Ponecore\admin\appmodel\common\admincheck.cpp
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)(A;;0x1;;;LS)
O:BAG:BAD:(A;;0x1;;;SY)(A;;0x1;;;BA)
SetupPhase
onecore\admin\appmodel\common\alluserstorepaths.cpp
OSDATA\Software\
Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\
Software\
onecore\admin\appmodel\common\stubpreference.cpp
PreferStub
StubPreference
Unknown DeploymentOperation %d
onecore\admin\appmodel\common\deploymentoperation.cpp
SupportedInternalFSTypes
onecore\admin\appmodel\common\fspolicy.cpp
SupportedExternalFSTypes
FAT32
exFAT
CimFS
onecore\admin\appmodel\common\mergedpricreator.cpp
UseSystemMetadataPath
Software\Microsoft\Windows\CurrentVersion\Mrt
EnumDisplayMonitors
user32.dll
onecore\admin\appmodel\common\packageinfo.cpp
TryGetByPackageFullName %ws
onecore\admin\appmodel\common\sessionutilities.cpp
Session:%d!clsid:%s
BindToObject %ul %ls
Fonecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\appxdeletefile.cpp
onecore\admin\appmodel\common\packageprocess.cpp
onecore\admin\appmodel\common\alluserstoresetupphase.cpp
onecore\admin\appmodel\common\urihelper.cpp
<Unknown>
onecore\private\base\inc\appmodel\common\FileInUse.hpp
<Error 0x%X in OpenProcessToken>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<None>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X in GetPackageFullName>
<Error allocating memory>
<Error 0x%X converting the user's SID to a string>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X in QueryFullProcessImageNameW>
<No commandline present>
<Error 0x%X moving command line>
HardlinkData File: %ws Hardlink: %ws
onecore\admin\appmodel\common\logfileinformation.cpp
: could not get security descriptor
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
: owner is 
: user has access 0x
<error>
: could not check access
: user has no access
: could not get SDDL
: SDDL is 
, user SID: 
Logging data because access was denied for file: 
LogIfAccessDenied
, could not get user sid
\Users\
\WpSystem\
Owner: N/A
GetSecurityDescriptorOwner
Owner: %ls %u
ConvertSidToString
No token handle
SDDL: %ls
AccessCheck
New %u
DropImpersonation
Access: %u mask 0x%0x
FileSystemEntryExists %ls succeeded %u
FileSystemEntryExists %ls
SetValueFromString %ls
GetFileSecurity %u
PathCchRemoveFileSpec
StripExtendedPathPrefixIfNecessary %ls
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
LogFileInUse Telemetry failed: No valid tag.
onecore\admin\appmodel\common\HardlinkingACLs.hpp
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
FileInUse
DACLCurrent: %p
onecore\admin\appmodel\common\accesshelpers.cpp
ConvertSidToString %ls %ls %p
PackageSidToPackageCapabilitySid %ls %ls %p
Impersonate %ls %ls
Failed applying DACL from ApplyPackageDataAccessACLs %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL taken ownership %ls %ls %ls %d %d
GetAccess %ls
ApplyPackageDataAccessACLs %ls %ls %ls %d %d
Failed applying SACL from ApplyPackageDataAccessSACL %ls %ls %ls %d %d
Failed to take ownership of %ws
)(A;OICI;0x1200a9;;;
GetNamedSecurityInfo %ls returned null dacl.
GetNamedSecurityInfo %ls
GetAce %ls %u %u
PackageSidToPackageCapabilitySid %ls %p
DACL of %ls missing package*SIDs ? %u
DeleteAce %ls %u %u %u 0x%0x
AddAccessAllowedAceEx %ls %u %p
DACL of %ls has duplicated package*SIDs ? %u
WalkTreeCallbackForRepairHardlinkFileAcls failed to process file: %ws, isHardLinked: %u
SetNamedSecurityInfo %ls %u
onecore\admin\appmodel\common\mrthelper.cpp
%s\%s
Files
\resources.pri
%s\resources.pri
file://
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\targetplatformutilities.cpp
(Unknown)
onecore\admin\AppModel\EnterpriseModernAppManagement\Inc\MaintainProcessorArchitectureOnUpdate.h
onecore\admin\appmodel\common\applicabilityhelper.cpp
onecore\admin\appmodel\common\metadata.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\common\contentgrouphelpers.cpp
Global\
onecore\admin\appmodel\common\MutableDirectoryHelper.hpp
MutablePackageDirectoryStateHandler
onecore\admin\appmodel\common\mutabledirectoryhelper.cpp
Unexpected mutable package directory should be a full file path
Caller needs to have ensured the target path begins with correct prefix
MutablePackageDirectoryLength is longer than MAX_PATH
windows.userMutablePackageDirectories
windows.mutablePackageDirectories
\MutableBackup
MutablePackageDirectoryRepairProcessing
MutablePackageDirectoryMoveProcessing
Program Files
MutableBackup
$(package.mutableRoot)\
$(package.volumeRoot)\
Program Files\ModifiableWindowsApps
onecore\internal\base\inc\containerpolicymanagerclient.h
The container policy manager APIs are not available.
Failed to get the VAIL container ID for user from Container Policy Manager.
onecore\admin\appmodel\common\container.cpp
C:\Program Files\WindowsApps
Failed to map %ws
Container crashed
vector too long
onecore\internal\sdk\inc\wil\opensource/wil/winrt.h
Software\Microsoft\Windows\CurrentVersion\Appx\PendingContainerInstallList
Windows.Internal.ComposableShell.ProxyApp.ProxyAppService
Windows.Internal.StateRepository.AppInstaller
onecore\admin\appmodel\common\directoryacls.cpp
S:PAI
(A;;0x1200a9;;;RC)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x1200a9;;;BA)(A;CI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;BA)(A;OICI;0x1200a9;;;LS)(A;OICI;0x1200a9;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OI;0x120089;;;BA)(A;CI;0x120089;;;BA)(A;OICI;0x120089;;;BA)(A;OICI;0x120089;;;LS)(A;OICI;0x120089;;;NS)(A;OICI;FA;;;SY)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;GA;;;%s)(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))(A;OICI;FR;;;%s)(A;CI;FX;;;%s)(A;OICI;0x010116;;;%s)
(XA;;0x1200A9;;;BU;(exists WIN://PKG))
(XA;;0x120089;;;BU;(exists WIN://PKG))
(A;;0x120089;;;BU)
(A;;FR;;;BU)
(A;;GA;;;SY)(A;;0x120089;;;S-1-15-2-2)(A;;0x120089;;;LS)(A;;0x120089;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x120089;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
(A;;0x1200A9;;;BU)
PAI(A;;0x120089;;;AC)
(A;;GA;;;SY)(A;;0x1200A9;;;S-1-15-2-2)(A;;0x1200A9;;;LS)(A;;0x1200A9;;;NS)(A;;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;;0x1200A9;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)
PAI(A;;0x1200A9;;;AC)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;%s)
D:PAI(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;;FRFX;;;BU)(A;;FRFX;;;AU)
(A;CI;FX;;;BU)(A;OICI;0x010116;;;BA)
S:PAI
(A;CI;FRFX;;;BU)(XA;;FX;;;BU;(exists WIN://SYSAPPID))
(A;OICI;FRFX;;;BU)
(A;CI;FRFX;;;BA)(XA;;FRFX;;;BU;(exists WIN://SYSAPPID))
(A;OICI;FRFX;;;BA)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;RC)
(A;OICI;GR;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FR;;;RC)
D:PAI(A;OICI;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;GA;;;BA)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;0x120089;;;%s)
O:S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464D:PAI(A;OICI;GA;;;S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464)(A;OICI;GRGX;;;S-1-15-3-1024-3635283841-2530182609-996808640-1887759898-3848208603-3313616867-983405619-2501854204)(A;OICI;GA;;;SY)(A;OICI;FRFX;;;LS)(A;OICI;FRFX;;;NS)(A;OICI;FRFX;;;RC)
(A;OICI;0x120089;;;%s)(A;OICI;0x120089;;;%s)
(A;OICI;0x1200A9;;;%s)
(A;OICI;0x1200A9;;;S-1-15-2-2)
(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;%s)
(A;OICI;FR;;;BU)
(A;OICI;0x1200A9;;;AC)
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPGROUPID Contains "%s"))
(XA;OICI;0x1200A9;;;BU;(WIN://SYSAPPID Contains "%s"))
(XA;OICI;0x120089;;;BU;(WIN://SYSAPPID Contains "%s"))
(A;OICI;0x1200A9;;;BU)
(A;OICI;0x120089;;;BU)
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;GA;;;%s)(A;OICI;FA;;;%s)
D:AI(A;OICI;GA;;;%s)(A;OICI;FA;;;%s)
S:PAI(ML;OICI;NW;;;LW)
S:PAI
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
D:AI(A;OICI;GA;;;%s)
(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)
(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)
D:AI(A;OICI;0x1200A9;;;AC)(A;OICI;0x1200A9;;;S-1-15-2-2)(A;OICI;0x1200A9;;;BU)S:AI
D:AI(A;OICI;0x120089;;;AC)(A;OICI;0x120089;;;S-1-15-2-2)(A;OICI;0x120089;;;BU)S:AI
D:(A;CROICI;GA;;;SY)(A;CROICI;GA;;;%s)(A;CROICI;GA;;;BA)
onecore\admin\appmodel\common\directorypaths.cpp
onecore\admin\appmodel\common\statepaths.cpp
\Local
\Packages
%s\WpSystem\%s\AppData\Local\Packages
%s%s%s%s
\AppData
%s%s\%s
\RoamingState
\LocalState
\TempState
\Settings
StatePaths
Path: %ls
SystemAppData
Path: %ls -> %ls
MutablePackageRoot
Deleted
WritablePackageRoot
%s\WpSystem
\LocalCache\Local\Microsoft
CreateDirectoryIfNecessary %ws
StringCchPrintf
StringCchCat %ws
StringCchCat
StringCchCat APPDATA_LOCAL
StringCchCat APPDATA
EncryptPackagesFolder %ws %u
StringCchCat LOCAL
IsEncrypted %ws
StringCchPrintf %ws %ws
GetGenericKeyEncryptionHeader
Already encrypted %ws can't do DPL
EnableFileOrFolderEncryption %ws %u
Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
onecore\admin\appmodel\common\stagingpaths.cpp
\Deleted
onecore\admin\appmodel\common\deferappdataacquisition.cpp
RoamingDataStatus
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\bundleutilities.cpp
onecore\admin\appmodel\common\centennial.cpp
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="RuntimeBehavior" and .="win32App"]]
onecore\admin\appmodel\common\win32alacarte.cpp
onecore\admin\appmodel\common\xpath.cpp
onecore\admin\appmodel\common\fulltrust.cpp
onecore\admin\appmodel\common\takeownership.cpp
onecore\admin\appmodel\common\HardLinkingACLs.hpp
onecore\admin\appmodel\common\hardlinkingacls.cpp
(XA;;0x1200A9;;;BU;(WIN://SYSAPPGROUPID Contains "
(XA;;0x1200A9;;;BU;(WIN://SYSAPPID Contains "
onecore\admin\appmodel\common\hardlinkdirectorytree.cpp
Microsoft.zMicrosoftEdge_8wekyb3d8bbwe
Microsoft.MicrosoftEdgeBeta_8wekyb3d8bbwe
Microsoft.MicrosoftEdge_8wekyb3d8bbwe
EfsOpenFileRawInternal
onecore\admin\appmodel\common\encryption.cpp
.appx_
onecore\admin\appmodel\applicability\applicabilitybundlemanifestreader.cpp
onecore\admin\appmodel\applicability\ApplicabilityEnumerator.hpp
onecore\admin\appmodel\applicability\applicabilitybundlepackageid.cpp
onecore\admin\appmodel\applicability\applicabilitybundlepackageinfo.cpp
onecore\admin\appmodel\lifetimemanagers\hspackagehandletable.cpp
HS_PACKAGE_HANDLE_ENTRY destructor
HamServicingClosePackageHandle
Cleaning up HS_PACKAGE_HANDLE_TABLE
map/set too long
ServiceLifetimeManager::GetBlockingAumids
onecore\admin\appmodel\lifetimemanagers\servicelifetimemanager.cpp
ServiceLifetimeManager::AllowUninstall
ServiceLifetimeManager::TerminateApplications
@Name
Error in QueryServiceConfig
@StartupType
invalid vector subscript
invalid hash bucket count
unordered_map/set too long
deque<T> too long
SLMTerminateSingleServiceActivity
SLMTerminateServicesInPackageActivity
SLMGetActiveAumidsInPackageActivity
SLMAllowUninstallActivity
SLMTerminateApplicationsActivity
SLMGetBlockingAumidsActivity
onecore\admin\appmodel\lifetimemanagers\plmutil.cpp
Ignoring error from BiPackageChangeState
onecore\admin\appmodel\osim\src\host\appxosimextensiondlls.cpp
%I64x
Failed loading module at path %ws
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\UndockedDeploymentExtensionModules
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\DeploymentExtensionModules
Fonecore\admin\appmodel\dependencymanager\dependencymanager.cpp
onecore\admin\appmodel\dependencymanager\dependencyrules.cpp
onecore\admin\appmodel\dependencymanager\dependencyresolver.cpp
 addPackageList:
 removePackageList:
 destagePackageList:
 updateList:
 is updating to 
All incoming packages should be listed in the packages array.  The package %ws in updatePackageList is missing.
All packages being added or updated should be listed in the packages array.  The package %ws is missing.
 stagePackageList:
All incoming packages should be listed in the packages array. The package %ws in addPackageList is missing.
A framework cannot be both matching architecture and cross architecture at the same time.  Framework package architecture is %x, dependent package architecture is %x
A framework must be either matching architecture or cross architecture, it cannot be neither.  Framework package architecture is %x, dependent package architecture is %x
Resources packages can only be serviced when the app package is already installed.  Expecting to find the app package for resource package %ws in the array, but it is not found.
This function should only be called for main packages, but the specified package %ws has type %d.
onecore\admin\appmodel\dependencymanager\deferredregistrationsresolver.cpp
onecore\admin\appmodel\dependencymanager\dependencyutilities.cpp
any publisher
onecore\admin\appmodel\dependencymanager\bundleactionlists.cpp
onecore\admin\appmodel\dependencymanager\dependencylist.cpp
onecore\admin\appmodel\deploymentmanager\src\sessionutil.cpp
onecore\admin\appmodel\DeploymentManager\Inc\DynamicDependenciesStateHandler.hpp
Non-fatal, webplat storage server fails to detach databases.
Ignoring failure: CleanupSpecificVolumeForPackageFamilyIfNeeded
onecore\admin\appmodel\deploymentmanager\src\deploymentmanager.cpp
SharedAppsBlockedByPolicy
PackageMoniker count should be 1
Microsoft.WindowsStore_8wekyb3d8bbwe
onecore\admin\appmodel\deploymentmanager\src\ipackagepolicydataparameters.cpp
CheckApproval
PreEvaluateClosePackagesInUse
Evaluate
BlockDeploymentIfNeeded
DynamicDependenciesInUse
CheckRestoredState
PreStageClosePackagesInUse
CheckPrerequisites
SqmSetOperationForPackageUpdate
AclExternalLocation
TilesHandlerExecute
StageRequired
CheckEmbeddedAutoUpdates
EnableExternalLocation
MachineRegisterAdd
MRTDataHandlerPopulate
MutablePackageDirectoryProcessAdd
RemoveStageOnlyPackagesFromAddList
ClosePackagesInUse
SystemRegisterAdd
StageUserData
ChangeRegistration
ProcessHostRuntimePackages
ResolveDeferredRegistrations
SingletonRegisterAdd
SingletonRegisterRemove
SystemRegisterRemove
DeployInContainer
SupercedeAllUsers
SharedPackageContainerEvaluate
SharedPackageContainerIndex
MachineRegisterRemove
DeIndex
SharedPackageContainerStateCreation
SharedPackageContainerDeIndex
SharedPackageContainerClosePackagesInUse
SharedPackageContainerPackagerootAcl
onecore\admin\appmodel\deploymentmanager\src\pipeline.cpp
***Unexpected***
SharedPackageContainerFinalize
Deployment pipeline was unexpectedly invoked for operation
Unknown operation %d
StateHandler
StateMachine
onecore\admin\appmodel\deploymentmanager\src\commonregistration.cpp
Untrusted packages are not allowed to deploy unless the device is dev unlocked
CreateValidatedIndirectDataReader in PreApprovalHelper::GetPackageSignatureOrigin failed
onecore\admin\appmodel\deploymentmanager\src\preapprovalhelper.cpp
DynamicDependencies: %u packages in use
DynamicDependencies: Update(outdated=%ls, updating=%ls) outdated in use. Moving to actionList.Add(updating)
onecore\admin\appmodel\deploymentmanager\src\dynamicdependenciesstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\optionaldependencyhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\bundleprocessor.cpp
onecore\admin\appmodel\DeploymentManager\Inc\ExceptionAwareHelpers.hpp
.msix
.emsix
microsoft.microsoftedge.internal_8wekyb3d8bbwe
microsoft.microsoftedge.stable_8wekyb3d8bbwe
microsoft.microsoftedge.canary_8wekyb3d8bbwe
microsoft.microsoftedge.dev_8wekyb3d8bbwe
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Properties']/*
onecore\admin\appmodel\deploymentmanager\src\indexingstatehandler.cpp
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='ApplicationContentUriRules']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.service']
*[local-name()='HoloContent']
*[local-name()='MixedRealityModel']/@*[local-name()='Path']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='CustomCapability' and @Name='Microsoft.coreAppActivation_8wekyb3d8bbwe']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='CustomCapability' and @Name='Microsoft.deployFullTrustOnHost_8wekyb3d8bbwe']
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='CustomCapability' and @Name='Microsoft.nonUserConfigurableStartupTasks_8wekyb3d8bbwe']
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@*[local-name()="RuntimeBehavior" and .="packagedClassicApp"] or @*[local-name()="RuntimeBehavior" and .="win32App"]) and not(@EntryPoint="Windows.FullTrustApplication")]
/*[local-name()='Package']
*[local-name()='StartupTask']
/*[local-name()="Package"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
/*[local-name()="Package"]/*[local-name()="Applications"]/*[local-name()="Application"]/*[local-name()="Extensions"]/*[local-name()="Extension" and @*[local-name()="TrustLevel" and .="mediumIL"] and not(@EntryPoint="Windows.FullTrustApplication" or not(boolean(//EntryPoint)))]
Target
Shared
uap11:UserConfigurable
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.mutablePackageDirectories']/*[local-name()='MutablePackageDirectories']/*[local-name()='MutablePackageDirectory']
Unexpected invalid namespace for MutablePackageDirectory %S
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.userMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectories']/*[local-name()='UserMutablePackageDirectory']
MutablePackageDirectory targetting mutable root cannot be shared--only those targetting volume root can be shared
MutablePackageDirectory Target does not start with accepted roots %S
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='FileSystemWriteVirtualization']/*
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='RegistryWriteVirtualization' and text()='disabled']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='ModificationPackage' and text()='true']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='FileSystemWriteVirtualization' and text()='disabled']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='AllowExternalContent' and .='true']
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.hostRuntime']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='RegistryWriteVirtualization']/*
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.ntServices']
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @*[local-name()='HostId']])
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId' and .='VailProxy']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Scope' and .='machine']])
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.installedLocationVirtualization']
default
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @*[local-name()='HostId' and .='VailProxy']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='HostId' and .='VailProxy']])
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PackageIntegrity']/*[local-name()='Content']/@Enforcement
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='OSPackageDependency']
Version
allowForWebOnly
@*[local-name()='ServiceWorker']
PublisherDisplayName
ResourcePackage
/*[local-name()='Package']/*[local-name()='Properties']/*
Description
Developer mode registration package uri is not uri of manifest file.
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='windows.localExperiencePack']
Failed to set foldingBundleId for package %ws because parent bundle not yet processed. Parent bundle either does not appear in expandedPackageUris list or appears in the list after this child package
Reset of dev mode package %ws isn't supported
Microsoft.Windows.Photos
Microsoft.Office.OneNote
8wekyb3d8bbwe
ThirdPartyRatingSystem
ThirdPartyRatingLevel
AgeRating
DVROptOut
AppCategory
RestrictedToSystemVolume
BackupRestoreOptOut
hMZ7y
T -!qb
ProxyApp
CN=Microsoft Windows, O=Microsoft Corporation, L=Redmond, S=Washington, C=US
(/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Executable']])
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @*[local-name()='Executable']])
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='HostRuntimeDependency']
onecore\admin\appmodel\deploymentmanager\src\approvalstatehandler.cpp
srpapi.dll
SrpIsAllowed
(/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @*[local-name()='Executable']])
Unsigned package must be in unsigned publisher namespace
AppXDeploymentServer-License-MaxSideloadedPackagesCount
onecore\admin\appmodel\deploymentmanager\src\prerequisitestatehandler.cpp
/*[local-name()='Package']/*[local-name()='Dependencies']/*[local-name()='DriverDependency']
@MinDate
_cw5n1h2txyewy
*[local-name()='DriverConstraint']
@MinVersion
Microsoft.VCLibs.120.00_8wekyb3d8bbwe
Microsoft.VCLibs.120.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.110.00_8wekyb3d8bbwe
Microsoft.VCLibs.110.00.Debug_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.CP_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Preview_8wekyb3d8bbwe
Microsoft.VCLibs.140.00.Debug.Preview_8wekyb3d8bbwe
LyncMXE2ETool-0ee8b9d7-73ed-477e-9624-4c7f903dec5b_t84ne4vpwezv8
Microsoft.ZDebugMenu_wmyngzxja4wtg
Microsoft.WinJS.2.0_8wekyb3d8bbwe
Microsoft.LyncMX_8wekyb3d8bbwe
Package %ws is in a bad state and must be reinstalled.
Packages with different projection folders in the same stage request not supported.
onecore\admin\appmodel\deploymentmanager\src\evaluatestatehandler.cpp
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\StagingManager\FaultInjection
DataSourceErrorFile
DataSourceErrorCount
DataSourceErrorCode
DataSourceErrorPhase
onecore\admin\appmodel\deploymentmanager\src\stagingstatehandler.cpp
Staging Manager unexpected staging action: %d
onecore\admin\appmodel\StagingManager\Inc\StagingManagerFaultInjection.hpp
Custom.data
Staging Manager failed to auto re-stage package
Failed to update existing mounted folder %ws to point to target folder %ws
Ignoring failure in MigrateCustomData as either outdated package or updating package is attached.
Required
Package root folder parent %ws does not have correct ACLs. Please use the official tool to create package folders for app attach.
Failed to remove existing folder %ws, before creating a new mounted folder of the same name
Package root folder %ws does not have correct ACLs. Please use the official tool to create package folders for app attach.
onecore\admin\appmodel\deploymentmanager\src\embeddedautoupdatesstatehandler.cpp
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='AutoUpdate']/*[local-name()='AppInstaller']/@File
onecore\admin\appmodel\deploymentmanager\src\packagesinusehandler.cpp
Ignoring failure to DisablePackageForReset for %ws
Ignoring failure to Inform PLM of Reset for %ws
MinimumDaysBeforeForceUpdate
onecore\admin\appmodel\deploymentmanager\src\stageuserdatastatehandler.cpp
LogFileInfoAlongPath %ws
IdentifyUserNameInPath %ws
ConvertSidToString %u
Add %ws operation %u
Make %u
GetCurrentUserSid %u
CountFiles %ws root %ws i %u
MoveStateData %ws root %ws i %u
ContinueRepairIfNeeded
GetStateRootPath %ws i %u
IncrementCurrentTicks %llu
CreateStateRootFolderACLs %ws
Operation %d
Impersonate %ws
CreateWPSystemAndSIDFolders %ws
GetRealStateRootPath %ws
AppendString %ws %ws
SUDCreateRoot
CreateDirectoryIfNecessary %ws path %ws
CdplIsSupported
CdplIsAppDataProtectionSupported %ws, maxVer %llu
CreateDirectoryIfNecessary %ws %ws
EncryptPackagesFolderForVolume %ws %u
CreatePackagesFolderForVolume %ws %u
SUDCreateRootRetry
InitializeFromString %ws path %ws
GetRealStateRootPath
SUDSetRootSecurity
SetNamedSecurityInfoW %ws %ws
AddSearchStringToPath
FindFirstFile
AppendString1 %ws
AppendString2 %ws
FindNextFile %llu
Package %ws %ws
CreateFullFileName %ws count %llu
WalkDirectoryTree %ws count %llu
StageUserDataStateHandler
RemoveDirectoryTreeExcept %ws newRoot %ws
CreateStateRootFolder %ws
ReportFileCopied %ws newRoot %ws
RemoveOrphanedDeletedFolderIfNeeded %ws
RemoveDirectoryTree %ws staging %ws
\Staging
AppendString %ws
OldRoot %ws user %ws newRoot %ws
OldRoot %ws
CopyDirectory %ws %ws %ws %u
ReportFileCopied %ws
CdplProtectFileToLevelWithResult %ws %u
CdplProtectFileToLevelWithResult %ws %u %u
CdplGetFileProtectionLevel %ws
Trying to set already encrypted file %ws to DPL-level %u?
FindFirstFile %ws
CreateFullFileName from %ws
CreateDirectoryIfNecessary
CopyDataProtectionLevelIfNeeded %ws %ws %u
CopyDirectory %ws %u %llu
CopyStateFile %ws
CreateFullFileName to %ws
CustomCopyDirectoryIfNecessary %ws
Package %ws %ws %ws %llu
ReportProgress %llu
ReportFileCopied%ws
FindNextFile %ws
Append %ws
RegisterPackageByFullNameAndOptionalPackagesAsync %ws
UInt64Mult %llu
ActivateInstance %ws
RemoveDirectoryTree %ws
CombinePaths %ws
DirectoryExists %ws
QueueRegistrationForRepairActivity
onecore\admin\appmodel\deploymentmanager\src\registrationstatehandler.cpp
OSIM failed processing a request
Unable to remove all user store downlevel installed package.
Processing Downlevel Installed package failed
OSIM failed deactivating prior to reactivation.
Failed while adding session %d to the PLM Session List.
onecore\admin\appmodel\deploymentmanager\src\plmsessionlist.cpp
Session %d failed to CoCreateInstanceInSession
P3>,R
@Qm6t
CRestartHandlerFinishedServicing
RestartHandlerEnableStatus
FailedToQIIApplicationActivationClient2
FailedToSetUserActivationInfo
onecore\admin\appmodel\deploymentmanager\src\restartpackagesinusehandler.cpp
AppActivationManagerFailedToActivate
%s!%s
}+onecore\admin\appmodel\deploymentmanager\src\destagingstatehandler.cpp
DeStaging for rollback: unexpected staging action: %d
MovePackageFilesToDeletedAllUserPackages
Ignoring failure to delete the recovery file for package %ws
DeStaging: : unexpected staging action: %d
Could not move package to %ws folder.
onecore\admin\appmodel\deploymentmanager\src\destageuserdatastatehandler.cpp
make_unique_nothrow
Index %u %u
DeleteStagingFolder %u
AppendString2
RemoveDirectoryTree
PackaGetRealStateRootPath
AppendString1
RemoveDirectory
Package %ws
onecore\admin\appmodel\deploymentmanager\src\deindexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\dataflushingstatehandler.cpp
Could not flush HKCU
Could not flush HKLM
onecore\admin\appmodel\deploymentmanager\src\versionsupercedencehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\mrtdatastatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\tilesstatehandler.cpp
Intersecting directories (%ws and %ws) are not supported
Package modified: a package file that is hard linked to an external file has been changed. File full path: %ws
onecore\admin\appmodel\deploymentmanager\src\mutablepackagedirectorystatehandler.cpp
MutablePackageDirectoryRemoveProcessing
MutablePackageDirectoryUpdateProcessing
MutablePackageDirectoryAddProcessing
onecore\admin\appmodel\deploymentmanager\src\aclexternallocationstatehandler.cpp
Skipping per-machine registration mode for pre-register operation because package: %ws is Paused.
onecore\admin\appmodel\deploymentmanager\src\machineregistrationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\systemregistrationstatehandler.cpp
Skipping machine scope registration mode for pre-register operation because package: %ws is Paused.
OSIM failed deactivating prior to reactivation
onecore\admin\appmodel\deploymentmanager\src\singletonregistrationstatehandler.cpp
onecore\internal\base\inc\appmodel\appxminirepository\AppXMiniRepository.h
onecore\admin\appmodel\deploymentmanager\src\ondemandregisterhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedappsredirecthandler.cpp
appManagementSystem
onecore\admin\appmodel\deploymentmanager\src\sharedappssynchandler.cpp
ART:OnDemandSyncGroup
RegisterPackageOnLogon packagetype %d is not supported
onecore\admin\appmodel\deploymentmanager\src\registerpackageonlogonhandler.cpp
onecore\admin\appmodel\deploymentmanager\src\hostruntimestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\containerdeploymentstatehandler.cpp
Microsoft.XboxIdentityProvider_8wekyb3d8bbwe
RemoveFromContainer
MicrosoftWindows.WCOSCDG.Proto_cw5n1h2txyewy
onecore\admin\appmodel\deploymentmanager\src\undockeddehstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerevaluatestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerindexingstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerclosepackagesinusestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerpackagerootaclstatehandler.cpp
Failed to ACL packageroot
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerstatecreationstatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerfinalizestatehandler.cpp
onecore\admin\appmodel\deploymentmanager\src\cleanappxalluserstorestatehandler.cpp
GetOptOutOfSD
GetCategoryIsGame
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviastaterepository.cpp
GetOptOutOfBackupRestore
GetAgeRating
GetOptOutOfDVR
GetCategories
Initialize
GetThirdPartyAppRatingCount
GetThirdPartyAppRating
onecore\admin\appmodel\deploymentmanager\src\packagepolicydataparametersviaapplicability.cpp
onecore\admin\appmodel\deploymentmanager\src\packagepolicyhelpers.cpp
, Reason: 
onecore\admin\appmodel\deploymentmanager\src\exceptionawarehelpers.cpp
Rejected package: 
, Getting size failed with hr=
SIS directory: 
, Size: 
onecore\admin\appmodel\deploymentmanager\src\bundledataloader.cpp
onecore\admin\appmodel\deploymentmanager\src\xboxdatastatehandler.cpp
OSDATA\UWAKeyIds\
{A89ECE52-7E8E-444F-BBD0-C68B76C2ECA4}#
EditionId
KeyID
OSDATA\PackageRegistration\
ProductId
DeviceId
PrimaryServiceConfigId
ContentId
PackageSize
EraVersion
BuildId
EkbId
*[local-name()='ContentPackageVisualElements']
SmallLogo
*[local-name()='AllowedProduct']
BackgroundColor
ManifestSmallLogo
WideLogo
ForegroundText
AllowedProductId
ShortName
ManifestLogo
ManifestWideLogo
OSName
ImplementsContentRestrictions
VuiPron
VuiAlm
InitialInstallTime
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.live']
RatingsCategory
Ratings
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Ratings']
Category
m:XboxLive | mx:XboxLive
/*[local-name()='Package']/*[local-name()='Capabilities']/*[local-name()='Capability'][@Name='contentRestrictions']
/*[local-name()='Package']/*[local-name()='Prerequisites']/*[local-name()='OSName']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='VisualElements']/*[local-name()='DefaultTile']
mx:Rating
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='PackageExtension' and @Category='xbox.contentpackage']/*[local-name()='ContentPackage']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension' and @Category='xbox.vui']/*[local-name()='XboxVui']
onecore\admin\appmodel\deploymentmanager\src\actionlistutilities.cpp
Evaluate Handler failed to figure if a package is an all-user package. Ignoring the error.
onecore\admin\appmodel\deploymentmanager\src\sharedpackagecontainerhelpers.cpp
onecore\admin\appmodel\deploymentmanager\src\plmsessioninfo.cpp
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel
EnableAppAttach
Open %ws
onecore\admin\appmodel\deploymentmanager\src\deploymentoptionsconverter.cpp
onecore\admin\appmodel\StagingManager\Inc\MsixvcStagingSession.hpp
onecore\admin\appmodel\stagingmanager\src\stagingmanager.cpp
O:SYD:(A;OICI;GA;;;BA)
PackagesToDestage
AppxBlockMap.xml
AppxMetadata\PublisherBridging\
AppxContentGroupMap.xml
Could not get file size of %ws. The file will be removed.
Could not DeleteFile %ws
onecore\admin\appmodel\stagingmanager\src\staginghelpers.cpp
File: %ws
Encrypted FileName: %ws
Non-Encrypted FileName: %ws
Failed to create a hardlink from %ws to %ws
Failed to delete hard linked file %ws
Staging Manager: PrefetchFile(%ws) failed. Ignore failure.
http://www.w3.org/2001/04/xmlenc#sha256
Filename: %ws
Staging Manager: WalkTreeCallback(%ws) failed
Failed to create hardlink from %ws to %ws
Failed to remove mounted folder %ws. Ignore failure.
.blockcache
File hash does not match the record. File name: %ws
Failed to compute file hash for baseline file: %ls
File size does not match the record. File name: %ws, expected file size: %I64d, actual file size: %I64d
LastOrphanBackupManifestCleanupTime
microsoft.system.package.metadata\blockcache
LastOrphanPackageCleanupTime
AppxSignature.p7x
onecore\admin\appmodel\stagingmanager\src\appxdeltahandler.cpp
BinaryDeltaCompression
AppXDelta
Common::Deployment::MsixvcStagingSession::CreateDataSource
Common::Deployment::MsixvcStagingSession::GetAcquisitionEstimate
onecore\admin\appmodel\stagingmanager\src\msixvcstagingsession.cpp
Common::Deployment::MsixvcStagingSession::StagePackageImpl
Common::Deployment::MsixvcStagingSession::StagePackageDeferred
Common::Deployment::MsixvcStagingSession::GetAcquisitionEstimateImpl
Common::Deployment::MsixvcStagingSession::StagePackage
Common::Deployment::MsixvcStagingSession::RequestCancelImpl
Common::Deployment::MsixvcStagingSession::CalculateUpdateRanges
Common::Deployment::MsixvcStagingSession::StagePackageDeferredImpl
Common::Deployment::MsixvcStagingSession::RequestCancel
Common::Deployment::MsixvcStagingSession::GetManifestReader
Common::Deployment::MsixvcStagingSession::GetSignatureStream
Common::Deployment::MsixvcStagingSession::UpdatePackage
Common::Deployment::MsixvcStagingSession::UpdatePackageImpl
Common::Deployment::MsixvcStagingSession::MakePackageActivatable
Common::Deployment::MsixvcStagingSession::MakePackageActivatableImpl
Common::Deployment::MsixvcStagingSession::UpdatePackageDeferred
Common::Deployment::MsixvcStagingSession::UpdatePackageDeferredImpl
Common::Deployment::MsixvcStagingSession::CopySignatureFileToMetadataDirectory
Common::Deployment::MsixvcStagingSession::RollbackMovePackage
Common::Deployment::MsixvcStagingSession::RollbackMovePackageImpl
TgMd`
MsixvcSignature.p7
onecore\admin\appmodel\stagingmanager\src\contentgroupstaginghelpers.cpp
yvGA3
)yonecore\admin\appmodel\stagingmanager\src\faultinjection.cpp
onecore\admin\appmodel\stagingmanager\src\applyinplaceupdate.cpp
BApplyUpdatePayloadFiles
lUonecore\admin\appmodel\StagingManager\Inc\StagingSession.hpp
StagingSession::CreatePackageFileHandle
Preallocating file %ws failed. Ignoring the error as the file on disk already has full size %llu bytes
onecore\admin\appmodel\stagingmanager\src\stagingsession.cpp
Could not delete existing File %ws, which is to be replaced with a hardlink.
Could not delete hardlink temp file %ws, which failed to set correct ACLs. Ignore failure.
Failed to apply ACLs for a hardlink from %ws to %ws
Create File Failed: %ws
Could not delete hardlink temp file %ws, which failed to replace the existing file %ws. Ignore failure
Failed to rename hardlink temp file %ws to %ws
StageUpdatePayloadFiles
lFailed to clean up MovedPackage folder on Rollback cleanup. Ignore failure.
onecore\admin\appmodel\stagingmanager\src\destagingsession.cpp
Failed to open valid baseline file %ws from old package path %ws. Skip BDC update for this file.
Failed to get resume offset for baseline file %ws
onecore\admin\appmodel\stagingmanager\src\appxpackagestagingsession.cpp
Failed to get file info from State Repository for package: %ws, file: %ws
Could not link duplicate file %ws to %ws
Failed to delete partially created hardlink target placeholder file %ws
DownloadSize
Failed to open file %ws with read and write EA permission. Will not set EA.
onecore\admin\appmodel\stagingmanager\src\appxpayloadfilehasher.cpp
Failed: FileExists failed for file %ws. Skip hard linking to this file.
onecore\admin\appmodel\stagingmanager\src\appxpayloadduplicatefinder.cpp
Failed: CheckFileIntegrity failed for file %ws.  Skip hard linking to this file.
onecore\admin\appmodel\stagingmanager\src\mountedfolderhelper.cpp
AutomaticDynamicFileRanges must be populated before calling PrioritizeContentGroups.
onecore\admin\appmodel\stagingmanager\src\appxrequestfilerangesinventory.cpp
MaxDynamicBatchSize
onecore\admin\appmodel\stagingmanager\src\encryptionstaginghelpers.cpp
Y$Kernel.Smartlocker.OriginClaim
Staging Manager: WalkTreeCallbackForManagedInstallerEA(%ws) failed in UpdateManagedInstallerMarker
onecore\admin\appmodel\stagingmanager\src\managedinstallers.cpp
Staging Manager: WalkTreeCallbackForManagedInstallerEA(%ws) failed while opening file
SMARTLOCKER://ORIGINCLAIM
onecore\admin\appmodel\stagingmanager\src\appxloosefilebundlestagingsession.cpp
onecore\admin\appmodel\stagingmanager\src\appxloosefilepackagestagingsession.cpp
StagingHelpers::AreStreamsEqual() failed.
onecore\admin\appmodel\stagingmanager\src\appxbundlestagingsession.cpp
Failed to initialize ResumeFileInfo for file: %ws
Failed to set file valid ending for file %ws
Failed to find resume offset by block hash validation for %ws. Ignore the error and download the whole file instead.
onecore\admin\appmodel\stagingmanager\src\resumefileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\fileinfo.cpp
onecore\admin\appmodel\stagingmanager\src\appxcustominstallhandler.cpp
Folder
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension']/*[local-name()='CustomInstall']
onecore\admin\appmodel\stagingmanager\src\appxdatareceiver.cpp
onecore\admin\appmodel\stagingmanager\src\appxmountedfolderconfiguration.cpp
onecore\admin\appmodel\stagingmanager\src\appxdynamicfilerangecollection.cpp
DeleteFile %ls
GetUserTokenAndCheckDirectoryExistence %ls %u
CheckDirectoryExistenceAndLogIfNeeded %ls %u
DirectoryExists %ls 0x%0x
onecore\admin\appmodel\statecreation\lib\statecreation.cpp
ConvertSidToString %ls
FamilyMonikerStringToSid %ls
GetSchemaContext %ls
OpenStateExplicitForUserSidString %ls
GetPublisherRoot %ls
GetSystemStateRoot %ls
GetSystemAppDataKey %ls
GetPublisher %ls
PackageFamilyNameFromFullName
Package %ls %ls %ls
OpenDatabaseFromCache
DropImpersonation %ls
CreateAppContainerIfNecessary
CommitStateDirectoryStructure
CommitStateRegistryStructure
GetStateRepositoryPackageInformation
SetPublisherFolders
CommitPublisherTree
GetPublisherFolders
GetSchemaContext
CommitPublisherTree %ls
GetPublisherFolders %ls
FetchDataFromPolicyCache %ls
SetPackageFullName
GetStateFolderPath %u
Package %ls
SetPackageFullName %ls
SetPublisherFolders %ls
GetAddPublisherArray
GetACFolderPath
GetStateSettingsFolderPath
FixSubFolderAccess %ls
FindByPackageAndCategory
GetByPackageFullName %ls
FixStateLocationsAccess
GetActivationStoreFolderPath
PackageNameAndPublisherIdFromFamilyName %ls
ArrayAddString %ls
FindByPackageExtension
windows.publisherCacheFolders
GetStateRootFolder %u
GetStateRootFolder
SetValueFromString %ls %ls
SetValue %ls
GetSystemAppDataKey
GetPublisherRootFolder %u
GetPublisherRootFolder
CreateSchemaContext
ApplyRegistryACLs %u
CreateStructured
VerifyIfSystemAppDataKeyAlreadyExists
Failed to get handle for folder %ls
CreatePublisherRoot %zu
RemovePublisherFolder Folder[%u]%ls of %u
SetStateSchema
ApplySystemAppDataBaseKeyACLs
RegCreateKeyEx
RegOpenCurrentUserLocalSettings
CreatePublisherSubFolder Folder[%u] %ls of %zu
RegOpenKeyEx PSR
ApplyRegistrySubKeyACLs
RegOpenKeyEx
CreateWellKnownSid %u
LocalAlloc
RegOpenKeyEx SCHEMAS
Schemas
GetSecurityDescriptorDacl %ls
CreateFromSddlTemplateStringWithTrusteeSidParseToken %ls
User %ls 0x%0x
GetAce %ls %u
VerifyIfStateRootsAlreadyExist %u
CheckStateLeftFromPreviousUninstall %u
LockTheStateLock %u
SetSecurityInfo %ls
VerifyIfSystemAppDataFolderAlreadyExists %u
CreateUnstructuredStateSubFolder LOCALCACHE
CreateUnstructuredStateSubFolder ROAMING
CreateUnstructuredStateSubFolder TEMP
CreateSecureSystemAppDataFolder
VerifyIfSecureSystemAppDataFolderAlreadyExists
GetHasCentennial
CreateSystemAppDataFolder %u
RegisterStateChangeNotification %u
VerifyIfStateChangeNotificationExists
CreateAppDataFolder %u
VerifyIfAppDataFolderAlreadyExists %u
CreateUnstructured
Repair missing package state root
CreateStateLockRegistration %u
VerifyIfStateLockExists %u
RegisterStateChangeNotification
DestroyAllExcept
Staging
CreateStateLockRegistration
GetStateFolderPath %ls persist %u
GetHasCentennial %ls user %ls package %ls
CheckDirectoryExistenceWithRepair %ls %u
StateRoot
GetTarget %ls persist %u
IsMounted %ls persist %u
CheckDirectoryExistenceWithRepair %ls %u %u
AppStateSubFolder
ReplacePackageSidWithPackageCapabilitySid %ls %p %u %u
SetFolderDataProtectionLevelIfNeeded %ls.
ReplacePackageSidWithPackageCapabilitySid %ls %p %u
MountedAppStateFolderTarget
IsMounted %ls
CheckDirectoryExistenceWithRepair %ls%u
SettingsFolder
GetStateSettingsFolderPath %ls
RecursivelyProtectSubFoldersToLevel %ls level %u
Target path %ls not found.
MountedSettingsFolderTarget
GetTarget %ls
FixAppHiveIfNeeded
CreateStateMountedFolders %ls user %ls package %ls
CreateSystemStateRootFolderIfNecessary %ls user %ls %ls
CreateACFolderIfNecessary %ls user %ls package %ls %u
GetAppDataFolderPath
SecureSystemAppData
GetSecureSystemAppDataFolderPath
GetSystemAppDataFolderPath
StringCchPrintf LOCAL %u
%s\LocalState
AppDataFolder
StringCchPrintf ROAMING %u
%s\RoamingState
%s\LocalCache
StringCchPrintf TEMP %u
%s\TempState
GetHivePath %u
StringCchPrintf %ls %u
%s\Settings
StringCchPrintf LOCALCACHE %u
GetSystemAppDataFolder
StringCchPrintf %u
%s\AC
GetHivePath %u size %u
StringCchPrintf %ls size %u
%s\AppData
GetSecureSystemAppDataFolder
GetSystemAppDataFolder %u
GetVolumeFromSubpath
PathCchCombine %ls root %ls size %u
PathCchCombine %ls subDir %ls size %zu
StringCchLength %ls
GetPackagesRootLocationFromStateRoot
CreateDirectoryW %ls
CreatePackagesFolderForVolume %u
CreateWPSystemAndSIDFolders
StringCchCopyN %zu systemStateRoot %ls
StringCchCopyN %zu root %ls
CreateDirectoryTree %ls
CreateDirectoryW %ls %ls
CreateSystemAppDataFolder Root %ls
CreateACFolderIfNecessary %ls
CreateFolderAndSetAcl %ls
CreateUnstructuredStateSubFolder %d root %ls
CreateAppHive %ls user %ls package %ls
CreateStateMountedFolders Root %ls user %ls package %ls hasCentennial %u
CreateSecureSystemAppDataFolder Root %ls
GetHasCentennial Root %ls
SetFolderDataProtectionLevelIfNeeded %u %ls.
Persist %u folder %ls
Persist %u
CreateAppDataFolder %ls user %ls package %ls
Locality %u path %ls
Locality %u
Folder %ls.
ACFolder
Locality %u size %u copiedSize %u fromPath %ls toPath %ls
\settings.dat
Locality %u size %u copiedSize %u path %ls
Locality %u size %u path %ls
StringCchPrintf %ls %llu
StringCchPrintf %ls %zu
GetUserProfileFolderPath
FileExists %ls
CreateFromSddlLiteralString %ls 
SecureSystemAppDataRetry
CreateDirectoryTree %ls, post-fix
CheckDirectoryExistenceAndLogIfNeeded %ls
MoveFile %ls %ls
Path: %ls subDir %ls
SubDir %ls
Size %u publisherRoot %ls
Failed in VerifyIfSecureSystemAppDataFolderAlreadyExists()
Container %ls user %ls
Path: %ls hasCentennial %u isFullTrust %u runAsSystem %u user %ls
Path: %ls subDir %ls isFullTrust %u runAsSystem %u
ApplyExceptions %u
Key %ls index %u
Path %ls
StateCreation
Subkey %ls
Subkey %ls path %ls
Value %ls
AcquisitionInfo
LocalStateFolder
GetUserTokenAndCheckDirectoryExistence %ls %ls %ls %ls %ls
SubDir %ls user %ls package %ls publisher %ls
SubDir %ls user %ls
Folder %ls
STATE_LEFT_FROM_LAST_UNINSTALL
Folder %ls user %ls package %ls publisher %ls isFullTrust %u
Folder %ls user %ls package %ls publisher %ls
Path %ls level %u.
Ignoring unsupported protection level %u for %ls.
RemoveDirectoryTreeExcept %ls
Folder %ls isFullTrust %u hasCentennial %u
CdplProtectFileToLevelWithResult %ls level %u protectResult %u %u
Trying to DPL-protect encrypted %ls?
Ingoring error for CdplProtectFileToLevelWithResult(%ls)
IsErrorFatal 0x%0x %ls
SetFolderDataProtectionToLevel %ls level %u %u.
Ignoring protection level %u for %ls.
RecursivelyProtectSubFoldersToLevel %ls level %u %u
Level %u for %ls.
PathCchRemoveFileSpec %ls %u
Helium
Helium\Cache
CaptureErroPathInCallBack %ls 0x%0x
Failed to get file handle for folder %ls
RemoveSecureAppDataFolder %ls
RemoveEmptyCentennialStateFolders %ls
RemoveDirectoryTree %ls
Failed to create full file name for folder %ls
*.dat*
Failed to get file final path for folder %ls
Failed to get file attributes from handle for folder %ls
File redirection identified in files %ls and %ls
Failed to compare file paths %ls, %ls
Failed to create full file name for file %ls
Failed to get file handle for file %ls
Failed to set file delete disposition for folder %ls
Failed to set file delete disposition for file %ls
File hardlink identified in files %ls
Failed to get file hardlink information for file %ls
\Settings\roaming.lock
WalkDirectoryTree %ls %u
WalkDirectoryTree %ls path %ls %u
WalkDirectoryTree %ls %u %u
WriteStateContainerValue %ls (empty) %u
CreateStateSubcontainer
CreateStateContainer %ls
GetSettingValue %ls %u
(null)
Setting %ls %ls %u
GetSettingName %ls %u
WriteStateContainerValue %ls %ls %u
Failed to create full file name for folder search path %ls
Sanity limit reached %ls!
D:(A;CROICI;GA;;;%s)
D:(A;OICI;KA;;;CO)(A;OICI;KA;;;SY)(A;OICI;KA;;;%ls)(A;OICI;KA;;;BA)
D:(A;;CC;;;%ls)
D:(A;;GA;;;SY)(A;;GA;;;%ls)(A;;GA;;;%ls)
D:PAI(A;;FA;;;SY)(A;;FA;;;BA)
Managed.App.Settings
onecore\private\base\inc\appmodel\statemanager\statelock.hpp
BuildFilename
\roaming.lock
RtlAllocateHeap %u
GetStateSettingsFolder
StateLock
LogFileInfoAlongPath %ls 0x%0x
BuildFilename returned empty lock file path
onecore\admin\appmodel\statecreation\lib\statecreationhelpers.cpp
IdentifyUserNameInPath %ls
DirectoryExists %ls
AppXDeleteFile
GetAccess
GetEffectiveToken %ls
LogFileInfoAlongPath %ls %p 0x%0x
onecore\admin\appmodel\sharedpackagecontainer\lib\sharedpackagecontainer.acls.cpp
_8wekyb3d8bbwe
RemoveStateLocations
onecore\admin\appmodel\sharedpackagecontainer\lib\sharedpackagecontainer.statecreation.cpp
Container.
PerSystemEntries
DirtyPackages
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
RestartStatus
ReattemptCount
PerPackageFamilyEntries
PerPackageEntries
O:SYG:SYD:P(A;OICI;KA;;;SY)(A;OICI;KRKX;;;BA)(A;OICI;KRKX;;;%s)
LocalExperiencePackage
%s\WpSystem\AppData\Local\Packages
%s\WpSystem\*
TrustHelper
EnsureRootFolderInheritAclsAreSet
Kernel-OneCore-VailGuest
AppXMetadata\CodeIntegrity.Cat
The signature origin from the file does not match the registered package.
FilePath: %ws
onecore\admin\appmodel\trust\trusthelper.cpp
RootFolder: %ws
The PFN from the AppxManifest did not match the registered PFN.
Tampering detected for package with PackageIntegrity Content Enforcement.
The blockmap could not be found.
appxmetadata\codeintegrity.cat
microsoft.system.package.metadata\
onecore\admin\appmodel\trust\walktreetrusthelpers.cpp
appxsignature.p7x
appxblockmap.xml
ValidateFile
BlockMap Validation Failed for FilePath: %ws IsEncrypted: %d EABIT: %d UncompressedSize: %I64u
SetFileIntegrity failed for FilePath %ws with Origin %d
onecore\admin\appmodel\trust\filevalidationhelper.cpp
%s_32
onecore\admin\appmodel\precompilation\bytecodequeuemanager\bytecodequeuemanager.cpp
appOSVersion
FrameworkPackage
%s_64
D:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;SY)(A;;0xF0087;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;;0xF0087;;;AC)
D:(A;OICIIO;GA;;;SY)(A;NP;0xf037f;;;SY)(A;OICI;0x20022;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;0x20022;;;AC)
onecore\admin\appmodel\precompilation\client\bytecodegenerationengine.cpp
D:(A;;GA;;;SY)(A;;GR;;;BU)(A;;GR;;;AC)
ByteCodeGeneratorDesktop
ByteCodeGeneratorWinStation
onecore\admin\appmodel\OSIM\Src\DEH\Appx\Common\LongfilePath.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Key.hpp
onecore\private\base\inc\appmodel\staterepository\cache\srcache-entity-package.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Context.hpp
onecore\private\base\inc\appmodel\staterepository\cache\SRCache-Manager.hpp
Package\Data\
Package\Index\PackageFullName\
PackageType
PackageFullName
\JSByteCodeCache
Ignoring failure to delete the stale bytecode cache file %ws.
onecore\admin\appmodel\precompilation\client\bytecodegenerationrequest.cpp
\Autogen
\ByteCodeGenerator.exe
onecore\admin\appmodel\precompilation\client\rpcserverhelper.cpp
D:(A;OICI;GA;;;SY)(A;OICI;GR;;;S-1-2-1406295995-2538229729-1264070048-2919177457)(A;OICI;GR;;;AC)
D:(A; OICI; GA;;; SY)(A; OICI; GR;;; BU)(A; OICI; GR;;; AC)
S-1-2-1406295995-2538229729-1264070048-2919177457
\RPC Control
ByteCodeGeneratorWinStation\ByteCodeGeneratorDesktop
ByteCodeGeneration
onecore\base\appmodel\trust\trustlabelhelpersbase.cpp
onecore\base\appmodel\trust\trustlabelacehelpers.cpp
NtQuerySystemInformation
@66666666[
66666
EnsureStoreLicenseForPackageActivation isn't present, store license check is skipped!
onecore\admin\appmodel\packagemanager\rpcinterface\packagemanagerrpc.cpp
Software\Microsoft\Windows\CurrentVersion\Appmodel
PolicyCache
PolicyCache %ws
CreateSubKey 0x%0x
OpenRootKey
onecoreuap\base\appmodel\statemanager\helpers\policycache.cpp
settingName is empty
GetStringValue %ws
SetValueFromString %u %ws
EnumValue %u
Sanity limit is hit
OpenSubKey
OpenCurrentUserLocalSettings
CreateSubKey %ws 0x%0x
%|fUN<
m:AppxProvisionList
m:Provisioned/m:Package
m:EndOfLife/m:Package
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionreader.cpp
m:EndOfLife
http://schemas.microsoft.com/appx/2013/appxprovisionpackage
@FamilyName
@FullName
m:Package
m:Provisioned
Provisioned
EndOfLife
AppxProvisionList
ProvisionSourceIsBundle
FamilyName
FullName
Package
resource
framework
bundle
IsLOBApp
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionwriter.cpp
version="1.0" encoding="utf-8"
@IsLOBApp
@PackageType
@ProvisionSourceIsBundle
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackage.cpp
m:AppxProvisionList/m:EndOfLife/m:Package/@FamilyName
m:AppxProvisionList/m:Provisioned/m:Package/@FullName
xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage"
SelectionNamespaces
NewParser
onecore\base\appmodel\appxprovisionpackage\src\commonhelpers.cpp
<?xml version="1.0" encoding="utf-8"?><xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:m="http://schemas.microsoft.com/appx/2013/appxprovisionpackage" xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:element name="AppxProvisionList">  <xs:complexType>    <xs:all>      <xs:element name="EndOfLife" type="CT_EndOfLife" minOccurs="0"/>      <xs:element name="Provisioned" type="CT_Provisioned" minOccurs="0"/>    </xs:all>  </xs:complexType>  <xs:unique name="Package_FamilyName">    <xs:selector xpath="m:EndOfLife/m:Package"/>    <xs:field xpath="@FamilyName"/>  </xs:unique>  <xs:unique name="Package_FullName">    <xs:selector xpath="m:Provisioned/m:Package"/>    <xs:field xpath="@FullName"/>  </xs:unique></xs:element><xs:complexType name="CT_EndOfLife">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FamilyName" type="ST_FamilyName" use="required"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:complexType name="CT_Provisioned">  <xs:sequence>    <xs:element name="Package" maxOccurs="unbounded">      <xs:complexType>        <xs:attribute name="FullName" type="ST_FullName" use="required"/>        <xs:attribute name="PackageType" type="ST_PackageType"/>        <xs:attribute name="ProvisionSourceIsBundle" type="xs:boolean"/>        <xs:attribute name="IsLOBApp" type="xs:boolean"/>      </xs:complexType>    </xs:element>  </xs:sequence></xs:complexType><xs:simpleType name="ST_FamilyName">  <xs:restriction base="xs:string">    <xs:minLength value="17"/>    <xs:maxLength value="64"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_FullName">  <xs:restriction base="xs:string">    <xs:minLength value="30"/>    <xs:maxLength value="127"/>  </xs:restriction></xs:simpleType><xs:simpleType name="ST_PackageType">  <xs:restriction base="xs:string">    <xs:enumeration value="resource"/>    <xs:enumeration value="framework"/>    <xs:enumeration value="bundle"/>  </xs:restriction></xs:simpleType></xs:schema>
onecore\base\appmodel\appxprovisionpackage\src\appxprovisionpackageenumerator.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilebundlestreamingreader.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilepackagestreamingreader.cpp
application/octet-stream
onecore\admin\appmodel\loosefilestreaming\appxloosefilehelper.cpp
AppxMetadata\PublisherBridging
onecore\admin\appmodel\loosefilestreaming\appxloosefilepublisherbridgingartifactsenumerator.cpp
sonecore\admin\appmodel\loosefilestreaming\appxloosefilerequesthandler.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilesenumerator.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefile.cpp
onecore\admin\appmodel\loosefilestreaming\appxloosefilerawdatareceiver.cpp
1onecore\admin\appmodel\datasource\filedatasource\src\fileappxstreamingdatasource.cpp
Dq>qn
onecore\admin\appmodel\datasource\filedatasource\src\fileappxrangerequestjob.cpp
SELECT EXISTS(SELECT 1 FROM AppInstaller WHERE _AppInstallerID=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
AppInstaller
SELECT _AppInstallerID, _Revision, PackageFamily, Uri, Version, LastChecked, CheckUpdateInterval, Flags, PauseUntil, _Dictionary FROM AppInstaller;
SELECT _AppInstallerID, _Revision, PackageFamily, Uri, Version, LastChecked, CheckUpdateInterval, Flags, PauseUntil, _Dictionary FROM AppInstaller WHERE Uri=?;
UPDATE AppInstaller SET _Revision=?, PackageFamily=?, Uri=?, Version=?, LastChecked=?, CheckUpdateInterval=?, Flags=?, PauseUntil=?, _Dictionary=? WHERE _AppInstallerID=? AND _Revision=?;
INSERT INTO AppInstaller (_Revision, PackageFamily, Uri, Version, LastChecked, CheckUpdateInterval, Flags, PauseUntil, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
DELETE FROM AppInstaller WHERE _AppInstallerID=?;
DELETE FROM AppInstaller WHERE (PackageFamily = 0) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AppInstallerUri)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AutoUpdatePackage)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
DELETE FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
PackageFamily
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE _PackageID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
Package
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE EditionId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE EditionId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND Version=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND Version=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE SourceBundle=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE SourceBundle=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT EXISTS(SELECT 1 FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND Version=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE EditionId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE EditionId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND Version=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND Version=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND PackageType & ? !=0 AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND _WorkId=0;
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle=? AND PackageType & ? !=0 AND _WorkId=0;
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
UPDATE Package SET _Revision=?, _WorkId=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, Flags2=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET _Revision=?, _WorkId=?, PackageFamily=?, ResourceId=?, Architecture=?, Version=?, PackageFullName=?, IsInbox=?, PackageType=?, Flags=?, Flags2=?, DisplayName=?, PublisherDisplayName=?, Description=?, Logo=?, OSMinVersion=?, OSMaxVersionTested=?, TargetDeviceFamily=?, Capabilities=?, SupportedUsers=?, SignatureOrigin=?, PackageOrigin=?, Enterprise=?, SourceBundle=?, EditionId=?, OSVersionWhenIndexed=?, InPlaceUpdateBaseline=?, _Dictionary=? WHERE _PackageID=? AND _Revision=? AND _WorkId=0;
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
Enterprise
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND pu._WorkId=0 LIMIT 1);
SELECT _UserID FROM User WHERE UserSid=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON pu.User=u._UserID WHERE pu.Package=? AND u.UserSid NOT IN (?,?) AND (pu._WorkId=0 OR pu._WorkId=?) LIMIT 1);
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
SELECT _PackageID FROM Package WHERE PackageFullName=? AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET IsInbox=? WHERE _PackageID=? AND _WorkId=0;
SELECT _PackageID FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSMinVersion=?, OSMaxVersionTested=? WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET SupportedUsers=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT PackageOrigin FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT PackageOrigin FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT PackageOrigin FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SignatureOrigin=?, PackageOrigin=? WHERE _PackageID=? AND _WorkId=0;
SELECT PackageOrigin FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND pf.PublisherId=?2 AND p.ResourceId=?3 AND p.Architecture=?4 AND p.Version=?5 AND (p._WorkId=0 OR p._WorkId=?6)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND pf.PublisherId=?2 AND p.ResourceId=?3 AND p.Architecture=?4 AND p.Version=?5 AND p._WorkId=0  LIMIT 1);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p._PackageID=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND p._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND p.ResourceId=?4 AND p.Architecture=?5 AND p.Version=?6 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?7)  AND (pu._WorkId=0 OR pu._WorkId=?7) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND p.ResourceId=?4 AND p.Architecture=?5 AND p.Version=?6 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND pf.PublisherId=?2 AND p.ResourceId=?3 AND p.Architecture=?4 AND p.Version=?5 AND p._WorkId=0;
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND p.ResourceId=?4 AND p.Architecture=?5 AND p.Version=?6 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND p._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND pf.PublisherId=?2 AND p.ResourceId=?3 AND p.Architecture=?4 AND p.Version=?5 AND (p._WorkId=0 OR p._WorkId=?6);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND p.ResourceId=?4 AND p.Architecture=?5 AND p.Version=?6 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?7)  AND (pu._WorkId=0 OR pu._WorkId=?7);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND p._WorkId=0  AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3);
SourceBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
TargetDeviceFamily
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
Package rows w/no PackageUser references
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
(Non-Inbox) Package rows w/no PackageUser references
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin<>2;
(Inbox) Package rows w/no PackageUser references
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 1, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin=2;
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=~8&FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=8|FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~8&Flags WHERE PackageFullName=? AND _WorkId=0;
UPDATE Package SET FLAGS=~4096&FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=4096|FLAGS WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS=~4096&FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS=4096|FLAGS WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS2=~0x100&FLAGS2 WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS2=0x100|FLAGS2 WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET FLAGS2=~0x100&FLAGS2 WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET FLAGS2=0x100|FLAGS2 WHERE _PackageID=? AND _WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.InstalledLocation=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, pf.PackageFamilyName FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageOrigin=?1 AND p._WorkId=0;
SELECT p.SupportedUsers, p.PackageFullName FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (p._WorkId=0 OR p._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT p.SupportedUsers, p.PackageFullName FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND p._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0;
SELECT SupportedUsers FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT SupportedUsers FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND (p._WorkId=0 OR p._WorkId=?3)   AND (pu._WorkId=0 OR pu._WorkId=?3)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND (p._WorkId=0 OR p._WorkId=?3)  UNION ALL SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND (p._WorkId=0 OR p._WorkId=?3)  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType=1 AND pf.PackageFamilyName=?2 AND p.IsInbox=1 AND p._WorkId=0  UNION ALL SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x21 !=0 AND pf.PackageFamilyName=?2 AND p.IsInbox=0 AND p._WorkId=0  AND p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?1) ORDER BY p.Version DESC;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND (p._WorkId=0 OR p._WorkId=?5) LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND p._WorkId=0 LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (p._WorkId=0 OR p._WorkId=?6)  LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND p._WorkId=0  LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND (p._WorkId=0 OR p._WorkId=?5) AND (a._WorkId=0 OR a._WorkId=?5) LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND p._WorkId=0 AND a._WorkId=0 LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND (p._WorkId=0 OR p._WorkId=?5)  LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p._WorkId=0  LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND (p._WorkId=0 OR p._WorkId=?5);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (p._WorkId=0 OR p._WorkId=?6);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?3 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?2) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)) AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE (p._WorkId=0 OR p._WorkId=?4);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?3 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?2) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.ApplicationUserModelId=?2 AND (p._WorkId=0 OR p._WorkId=?5) AND (a._WorkId=0 OR a._WorkId=?5);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND p._WorkId=0 AND pu._WorkId=0 AND a._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND (     p.OSVersionWhenIndexed=0     OR     (         ?3 > p.OSVersionWhenIndexed         AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END     ) ) AND (p._WorkId=0 OR p._WorkId=?5);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p WHERE p.PackageType & ?1 !=0 AND p.PackageOrigin!=?2 AND (     p.OSVersionWhenIndexed=0     OR     (         ?3 > p.OSVersionWhenIndexed         AND p.OSMaxVersionTested > CASE WHEN p.OSVersionWhenIndexed > 0 THEN p.OSVersionWhenIndexed ELSE ?4 END     ) ) AND p._WorkId=0;
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET OSVersionWhenIndexed=? WHERE _PackageID=? AND _WorkId=0;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND (p._WorkId=0 OR p._WorkId=?4)   AND (pu._WorkId=0 OR pu._WorkId=?4)   ORDER BY p.Version ASC LIMIT 1;
SELECT p.PackageFullName, p.Version FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE p.PackageType & 0x21 !=0 AND u.UserSid=?1 AND pf.PackageFamilyName=?2 AND pu.DeploymentState=?3 AND p._WorkId=0  AND pu._WorkId=0  ORDER BY p.Version ASC LIMIT 1;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND (p._WorkId=0 OR p._WorkId=?7) AND (pu._WorkId=0 OR pu._WorkId=?7);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND pu.DeploymentState=?2  AND p.PackageType & ?3 !=0 AND p.PackageOrigin!=?4  AND ?5 > pu.OSVersionWhenInstalled AND p.OSMaxVersionTested > CASE WHEN pu.OSVersionWhenInstalled > 0 THEN pu.OSVersionWhenInstalled ELSE ?6 END AND p._WorkId=0 AND pu._WorkId=0;
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~0x80&Flags WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=0x80|Flags WHERE _PackageID=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageOrigin=?1 AND (_WorkId=0 OR _WorkId=?2);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageOrigin=? AND _WorkId=0;
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET InPlaceUpdateBaseline=? WHERE _PackageID=? AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM Package WHERE PackageFullName=? LIMIT 1);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE (_WorkId=0 OR _WorkId=?1)) AND (_WorkId=0 OR _WorkId=?1)
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE SourceBundle<>0 AND SourceBundle NOT IN (SELECT _BundleID FROM Bundle WHERE _WorkId=0) AND _WorkId=0
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN (SELECT p.SourceBundle AS containedPackageSourceBundle FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND p.PackageType & ?1 != 0 AND p.SourceBundle != 0 AND p._PackageID NOT IN( SELECT p._PackageID from Package as p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?3 AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4)) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4)) ON p.SourceBundle=containedPackageSourceBundle WHERE p.PackageType & 8 != 0 AND (p._WorkId=0 OR p._WorkId=?4);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN (SELECT p.SourceBundle AS containedPackageSourceBundle FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND p.PackageType & ?1 != 0 AND p.SourceBundle != 0 AND p._PackageID NOT IN( SELECT p._PackageID from Package as p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?3 AND p._WorkId=0 AND pu._WorkId=0) AND p._WorkId=0 AND pu._WorkId=0) ON p.SourceBundle=containedPackageSourceBundle WHERE p.PackageType & 8 != 0 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & ?3 != 0 AND p.SourceBundle=?4 AND p._PackageID NOT IN( SELECT p._PackageID from Package as p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND (p._WorkId=0 OR p._WorkId=?5) AND (pu._WorkId=0 OR pu._WorkId=?5)) AND (p._WorkId=0 OR p._WorkId=?5) AND (pu._WorkId=0 OR pu._WorkId=?5);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & ?3 != 0 AND p.SourceBundle=?4 AND p._PackageID NOT IN( SELECT p._PackageID from Package as p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND p._WorkId=0 AND pu._WorkId=0) AND p._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & 0x21 != 0 AND p.PackageFamily NOT IN ( SELECT p.PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND(p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3)) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & 0x21 != 0 AND p.PackageFamily NOT IN ( SELECT p.PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?2 AND p._WorkId=0 AND pu._WorkId=0) AND p._WorkId=0 AND pu._WorkId=0
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=0x4 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND (p._WorkId=0 OR p._WorkId=?3) AND (dg._WorkId=0 OR dg._WorkId=?3) AND (p2._WorkId=0 OR p2._WorkId=?3)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN DependencyGraph AS dg ON p._PackageID=dg.SupplierPackage INNER JOIN User AS u ON dg.User=u._UserID INNER JOIN Package AS p2 ON dg.DependentPackage=p2._PackageID INNER JOIN PackageFamily AS pf ON p2.PackageFamily=pf._PackageFamilyID WHERE dg.DependencyType=0x4 AND pf.PackageFamilyName=?1 AND u.UserSid=?2 AND p._WorkId=0 AND dg._WorkId=0 AND p2._WorkId=0
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND (p._WorkId=0 OR p._WorkId=?2) 
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE p.PackageType & 0x29 !=0 AND p.Flags & 0x400 !=0 AND pf.PackageFamilyName=?1 AND p._WorkId=0 
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package WHERE a.ApplicationUserModelId=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN Application AS a ON p._PackageID=a.Package WHERE a.ApplicationUserModelId=? AND p._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & ?2 != 0 AND p._PackageID NOT IN ( SELECT p._PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?3 AND(p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4)) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4)
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageType & ?2 != 0 AND p._PackageID NOT IN ( SELECT p._PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?3 AND p._WorkId=0 AND pu._WorkId=0) AND p._WorkId=0 AND pu._WorkId=0
UPDATE Package SET Flags=0x20000|Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=0x20000|Flags WHERE _PackageID=? AND _WorkId=0;
SELECT p.PackageFullName FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN TargetDeviceFamily AS tdf ON tdf._TargetDeviceFamilyID=p.TargetDeviceFamily WHERE u.UserSid=?1 AND p.PackageType & ?2 !=0 AND tdf.Name=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (tdf._WorkId=0 OR tdf._WorkId=?4);
SELECT p.PackageFullName FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN TargetDeviceFamily AS tdf ON tdf._TargetDeviceFamilyID=p.TargetDeviceFamily WHERE u.UserSid=?1 AND p.PackageType & ?2 !=0 AND tdf.Name=?3 AND pu._WorkId=0 AND p._WorkId=0 AND tdf._WorkId=0;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=?3 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=?3 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation WHERE User=?1 AND Package=?2 AND _WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation WHERE User=0 AND Package=?2 AND _WorkId=0 UNION ALL SELECT IFNULL(MutableLink, InstalledLocation) FROM PackageLocation WHERE Package=?2 AND _WorkId=0 LIMIT 1;
UPDATE Package SET Flags=~0x20000&Flags WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=~0x20000&Flags WHERE _PackageID=? AND _WorkId=0;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a._ApplicationID=?2 AND pl._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a._ApplicationID=?2 AND pl._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a._ApplicationID=?2 AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a._ApplicationID=?2 AND pl._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=?3 AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=0 AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=?1 AND p.PackageFullName=?2 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Package AS p ON p._PackageID=pel.Package WHERE pel.User=0 AND p.PackageFullName=?2 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Package AS p ON p._PackageID=pl.Package WHERE p.PackageFullName=?2 AND pl._WorkId=0 AND p._WorkId=0 LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a.ApplicationUserModelId=?2 AND pl._WorkId=?3 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a.ApplicationUserModelId=?2 AND pl._WorkId=0 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1;
SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=?1 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 UNION ALL SELECT Path FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=0 AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 UNION ALL SELECT IFNULL(pl.MutableLink, pl.InstalledLocation) FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a.ApplicationUserModelId=?2 AND pl._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 LIMIT 1;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET Flags=((Flags & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
onecore\base\appmodel\StateRepository\DataAccessLayer\MultiUser.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
Cpu:%d%s Mem:%d%s Io:%d%s
Cpu:%d%s Mem:%d%s Io:%d%s
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
[sqlite3_close] #%u Database %p: %s
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
temp_store
MEMORY
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
IsInAutoCommitMode() called but !db.IsOpen()
DETACH DATABASE '%s';
ATTACH DATABASE '%s' AS '%s';
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> ROLLBACK;
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> COMMIT;
journal_mode
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
PRAGMA %s;
synchronous
locking_mode
journal_size_limit
PRAGMA %s=%I64d;
PRAGMA %s=%s;
GetLastInsertRowID() called but !db.IsOpen()
GetTotalChanges() called but !db.IsOpen()
GetChanges() called but !db.IsOpen()
user_version
(database)
ANALYZE;
cache_size
PRAGMA optimize;
<null>
TRUNCATE
DELETE
cannot start a transaction within a transaction
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
NORMAL
PERSIST
EXTRA
EXCLUSIVE
changeid_next_value
is_srjournal_enabled
is_triggers_enabled
execution_flags
endswith
startswith
workid
sroptions
hash_base32
uncompress
compress
EndsWith(*string*,suffix) error: Invalid type (%d)
StartsWith(string,*prefix*) error: Invalid type (%d)
StartsWith(*string*,prefix) error: Invalid type (%d)
changeid_next_value() failed
Hasher.Start() failed
Compress(x[,level]) error: Invalid level (%d)
Compress(x[,level]) error: Invalid type for level (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
Unknown SQLite datatype %d
Hasher.Update(text) failed
hash_base32() doesn't support double (%d)
Hasher.Update(integer) failed
Log(error,*message*) error: Invalid type for message (%d)
Log(*error*,message) error: Invalid type for error (%d)
Hasher.GetDigestAsBase32(text) failed
<no-error-message>
sqlite3_prepare_v2
[pre-sqlite3_prepare] #%u Database %p : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement -------- --: Try %u (%llums) : SQL %s
[post-sqlite3_prepare] #%u Database %p: Statement %p %s: Try %u (%llums) : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[post-sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
sqlite3_exec
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
Analyze
UpdateStatistics
Checkpoint
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=? AND pai._WorkId=0);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller-custom.cpp
SELECT ai._AppInstallerID, ai._Revision, ai.PackageFamily, ai.Uri, ai.Version, ai.LastChecked, ai.CheckUpdateInterval, ai.Flags, ai.PauseUntil, ai._Dictionary FROM AppInstaller AS ai WHERE ai.PackageFamily=?;
DELETE FROM AppInstaller WHERE _AppInstallerID IN ( SELECT ai._AppInstallerID FROM AppInstaller AS ai INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri.cpp
AppInstallerUri
SELECT COUNT(*) FROM AppInstallerUri WHERE AppInstaller=? AND UriType & ? !=0;
SELECT _AppInstallerUriID, _Revision, AppInstaller, UriType, "Index", Uri, _Dictionary FROM AppInstallerUri WHERE AppInstaller=? AND UriType & ? !=0 AND "Index"=?;
DELETE FROM AppInstallerUri WHERE AppInstaller=? AND UriType & ? !=0 AND "Index"=?;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
INSERT INTO AppInstallerUri (_Revision, AppInstaller, UriType, "Index", Uri, _Dictionary) VALUES(?,?,?,?,?,?);
DELETE FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_finalize] #%u Database %p: Statement %p: --
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
sqlite3_step
[pre-sqlite3_step] #%u Database %p: Statement %p %s
[post-sqlite3_reset] #%u Database %p: Statement %p: %s
[post-sqlite3_step] #%u Database %p: Statement %p %s: Tries %u
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE _PackageFamilyID=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE PackageSID=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE PackageFamilyName=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE Name=? AND PublisherId=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE Name=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily WHERE PublisherId=? LIMIT 1);
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageSID=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily;
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AppInstaller)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AutoUpdatePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageDependency)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
SELECT EXISTS(SELECT 1 FROM User WHERE UserSid=? LIMIT 1);
SELECT EXISTS(SELECT 1 FROM User WHERE _UserID=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User;
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM ApplicationUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageDependency)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRHistory)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM SharedPackageContainer)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
SELECT EXISTS(SELECT 1 FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0;
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.Name=?2 AND pf.PublisherId=?3 AND pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0;
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PublisherId=?2 AND pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0;
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1  AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT pf._PackageFamilyID, pf._Revision, pf.Name, pf.Publisher, pf.PublisherId, pf.PackageFamilyName, pf.PackageSID, pf._Dictionary FROM PackageFamily AS pf INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1  AND p._WorkId=0 AND pu._WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage.cpp
AutoUpdatePackage
SELECT _AutoUpdatePackageID, _Revision, PackageFamily, Architecture, Version, PackageType, Flags, Uri, AppInstaller, _Dictionary FROM AutoUpdatePackage WHERE AppInstaller=?;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
INSERT INTO AutoUpdatePackage (_Revision, PackageFamily, Architecture, Version, PackageType, Flags, Uri, AppInstaller, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
DELETE FROM AutoUpdatePackage WHERE AppInstaller=? AND PackageFamily=? AND Version=? AND Architecture=?;
DELETE FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND _WorkId=0;
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET DeploymentState=? WHERE User=? AND _PackageUserID=? AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
UPDATE PackageUser SET AppDataVolume=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu._WorkId=0 AND p._WorkId=0;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ORDER BY pu._WorkId DESC;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND p._WorkId=0 AND pu._WorkId=0;
SELECT EXISTS(SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) LIMIT 1);
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND p.PackageType & ?2 !=0 AND pu._WorkId=0 AND p._WorkId=0 ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p.PackageFullName FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageType=1 AND pu.User=?1 AND pf.PackageFamilyName=?2 AND p._WorkId=0  AND pu._WorkId=0 ORDER BY p.Version DESC LIMIT 1;
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) ;
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN (SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2 AND p.PackageType=1 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0 UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET OSVersionWhenInstalled=? WHERE _PackageUserID=? AND _WorkId=0;
SELECT p.PackageFullName FROM Package AS p INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageType=1 AND pu.User=?1 AND pf.PackageFamilyName=?2 AND (p._WorkId=0 OR p._WorkId=?3)   AND (pu._WorkId=0 OR pu._WorkId=?3) ORDER BY p.Version DESC LIMIT 1;
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND DeploymentState=? AND _WorkId=0 LIMIT 1);
UPDATE PackageUser SET DeploymentState=?1 WHERE DeploymentState IN ( SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.PackageFullName=?2  AND p.PackageType=1 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) UNION ALL SELECT pu.DeploymentState FROM PackageUser as pu INNER JOIN Package as p ON p._PackageID=pu.Package WHERE p.SourceBundle IN (SELECT SourceBundle FROM Package WHERE PackageFullName=?2 AND PackageType=8) AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4));
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND pu._WorkId=0 AND p._WorkId=0  LIMIT 1);
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)SELECT COUNT(*), GROUP_CONCAT(t.PackageUserID) FROM BundleInfo AS t WHERE t.PackageType=8   AND NOT EXISTS(        SELECT 1 FROM Package AS p         INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID         WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8       );
DELETE FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN User AS u ON u._UserID=pu.User INNER JOIN PackageFamily AS pf ON p.PackageFamily=pf._PackageFamilyID WHERE pf.PackageFamilyName=?1 AND pu.DeploymentState=?2 AND u.UserSid!=?3 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  LIMIT 1);
PackageUser rows for Inbox packages cannot be DeploymentState=Paused
SELECT COUNT(*), GROUP_CONCAT(pu.rowid) FROM PackageUser AS pu INNER JOIN Package AS p on p._PackageID=pu.Package WHERE p.PackageOrigin=2 AND pu.DeploymentState=6;
PackageUser
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) ;
SELECT pu._PackageUserID, pu._Revision, pu._WorkId, pu.Package, pu.User, pu.InstallTime, pu.OSVersionWhenInstalled, pu.WhenRestored, pu.IsExplicitlyInstalled, pu.DeploymentState, pu.AppDataVolume, pu._Dictionary FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pu.User=?1 AND pf.PackageFamilyName=?2 AND pu._WorkId=0 AND p._WorkId=0 ;
UPDATE PackageUser SET DeploymentState=1 WHERE DeploymentState=6 AND Package IN (     SELECT _PackageID FROM Package      WHERE PackageOrigin =2);
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON u._UserID = pu.User INNER JOIN Package AS p ON p._PackageID = pu.Package LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User = pu.User AND pus.PackageIdentity = pu.Package) WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND IFNULL(pus.Status, 0) & ?4 = 0 AND pu._WorkId=0 AND AND u._WorkId=0 AND p._WorkId=0 AND pus._WorkId=0);
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3);
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND pu._WorkId=0 AND p._WorkId=0;
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=? LIMIT 1);
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID = pu.Package LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User = pu.User AND pus.PackageIdentity = pu.Package) WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND IFNULL(pus.Status, 0) & ?3 = 0 AND (pu._WorkId=0 OR pu._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pus._WorkId=0 OR pus._WorkId=?4);
SELECT COUNT(*) FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID = pu.Package LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User = pu.User AND pus.PackageIdentity = pu.Package) WHERE p.PackageFullName=?1 AND pu.DeploymentState=?2 AND IFNULL(pus.Status, 0) & ?3 = 0 AND pu._WorkId=0 AND p._WorkId=0 AND pus._WorkId=0;
SELECT EXISTS( SELECT 1 FROM PackageUser AS pu INNER JOIN User AS u ON u._UserID = pu.User INNER JOIN Package AS p ON p._PackageID = pu.Package LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User = pu.User AND pus.PackageIdentity = pu.Package) WHERE u.UserSid=?1 AND p.PackageFullName=?2 AND pu.DeploymentState=?3 AND IFNULL(pus.Status, 0) & ?4 = 0 AND (pu._WorkId=0 OR pu._WorkId=?5) AND (u._WorkId=0 OR u._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5) AND (pus._WorkId=0 OR pus._WorkId=?5));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
PackageSourceUri
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0 LIMIT 1);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageSourceUriID, _Revision, _WorkId, Package, Uri, Kind, _Dictionary FROM PackageSourceUri WHERE Package=? AND Kind=? AND _WorkId=0;
INSERT INTO PackageSourceUri (_Revision, _WorkId, Package, Uri, Kind, _Dictionary) VALUES(?,?,?,?,?,?);
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND DeploymentState=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND DeploymentState=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND DeploymentState=? AND IsExplicitlyInstalled=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND DeploymentState=? AND IsExplicitlyInstalled=? AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND DeploymentState=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND DeploymentState=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND DeploymentState=? AND IsExplicitlyInstalled=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND DeploymentState=? AND IsExplicitlyInstalled=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
[pre-StatementCache.Get] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Add(list)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[StatementCache.Add] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
[StatementCache.Get(Miss)] #%u StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
[StatementCache.Get(Hit)] #%u Database %p: StatementCache %p: Statement %p: Cache Size/Hits/Misses %u/%llu/%llu: SQL %s
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
PackageLocation
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE Volume=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE Volume=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageLocation WHERE Package=? AND _WorkId=0;
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
SELECT DISTINCT Name FROM AppExtension WHERE _WorkId=0 AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND a._WorkId=0 AND ae._WorkId=0 AND pu._WorkId=0 AND p._WorkId=0)
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension-custom.cpp
SELECT DISTINCT Name FROM AppExtension WHERE (_WorkId=0 OR _WorkId=?3) AND Extension IN ( SELECT _ApplicationExtensionID FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Package AS p ON p._PackageID=a.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (a._WorkId=0 OR a._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3))
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND (ae._WorkId=0 OR ae._WorkId=?2) AND (ae2._WorkId=0 OR ae._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2)
SELECT ae._AppExtensionID, ae._Revision, ae._WorkId, ae.Name, ae.Id, ae.PublicFolder, ae.DisplayName, ae.Description, ae.Extension, ae._Dictionary FROM AppExtension AS ae INNER JOIN ApplicationExtension AS ae2 ON ae2._ApplicationExtensionID=ae.Extension INNER JOIN Application AS a ON a._ApplicationID=ae2.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae._WorkId=0 AND ae2._WorkId=0 AND a._WorkId=0 AND p._WorkId=0
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=?1 AND (ape._WorkId=0 OR ape._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExtension WHERE _AppExtensionID IN ( SELECT ape._AppExtensionID FROM AppExtension AS ape INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=ape.Extension WHERE ae.Application=? AND ape._WorkId=0 AND ae._WorkId=0);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle-custom.cpp
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND b._WorkId=0 AND p._WorkId=0;
DELETE FROM Bundle WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Bundle WHERE Package=? AND _WorkId=0;
UPDATE Bundle SET Package=? WHERE _BundleID=? AND _WorkId=?;
SELECT b._BundleID, b._Revision, b._WorkId, b.Package, b.UniqueLanguage, b.UniqueScale, b.UniqueDXFeatureLevel, b._Dictionary FROM Bundle AS b INNER JOIN Package AS p ON p.SourceBundle=b._BundleID WHERE p.PackageFullName=?1 AND (b._WorkId=0 OR b._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
Bundle
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
SELECT _BundleID, _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE Package=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE _BundleID=? AND _WorkId=0;
SELECT _BundleID, _Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary FROM Bundle WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
INSERT INTO Bundle (_Revision, _WorkId, Package, UniqueLanguage, UniqueScale, UniqueDXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE ps.User=? AND pi.PackageFamily=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded-custom.cpp
SELECT ps._PackageSupercededID, ps._Revision, ps.PackageIdentity, ps.User, ps._Dictionary FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily INNER JOIN User AS u ON u._UserID=ps.User WHERE u.UserSid=? AND pf.PackageFamilyName=?;
SELECT EXISTS(SELECT 1 FROM PackageSuperceded AS ps INNER JOIN PackageIdentity AS pi ON ps.PackageIdentity=pi._PackageIdentityID WHERE pi.PackageFullName=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser-custom.cpp
SELECT EXISTS( SELECT 1 FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pfu.PackageFamily INNER JOIN Package AS p ON p.PackageFamily=pfu.PackageFamily INNER JOIN User AS u ON u._userID=pfu.User INNER JOIN PackageUser AS pu ON (pu.Package=p._PackageID AND pu.User=pfu.User) LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User=pu.User AND pus.PackageIdentity=p._PackageID) WHERE u._userID=?1 AND pf.PackageFamilyName=?2 AND p.PackageType=?3 AND pu.DeploymentState=?4 AND IFNULL(pus.Status, 0) & ?5 = 0 AND (p._WorkId=0 OR p._WorkId=?6) AND (pu._WorkId=0 OR pu._WorkId=?6));
SELECT EXISTS( SELECT 1 FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pfu.PackageFamily INNER JOIN Package AS p ON p.PackageFamily=pfu.PackageFamily INNER JOIN User AS u ON u._userID=pfu.User INNER JOIN PackageUser AS pu ON (pu.Package=p._PackageID AND pu.User=pfu.User) LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User=pu.User AND pus.PackageIdentity=p._PackageID) WHERE u._userID=?1 AND pf.PackageFamilyName=?2 AND p.PackageType=?3 AND pu.DeploymentState=?4 AND IFNULL(pus.Status, 0) & ?5 = 0 AND p._WorkId=0 AND pu._WorkId=0));
SELECT pfu._PackageFamilyUserID, pfu._Revision, pfu.PackageFamily, pfu.User, pfu.WhenInstalled, pfu._Dictionary FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pfu.PackageFamily WHERE pfu.User=?1 AND pf.PackageFamilyName=?2;
SELECT COUNT(*) FROM ( SELECT DISTINCT pfu.User, pfu.PackageFamily FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON (pf._PackageFamilyID=pfu.PackageFamily) INNER JOIN Package AS p ON (p.PackageFamily=pfu.PackageFamily) INNER JOIN PackageUser AS pu ON (pu.Package=p._PackageID AND pu.User=pfu.User) LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User=pfu.User AND pus.PackageIdentity=p._PackageID) WHERE pf.PackageFamilyName=?1 AND p.PackageType=?2 AND pu.DeploymentState=3 AND IFNULL(pus.Status, 0) & ?4 = 0 AND (p._WorkId=0 OR p._WorkId=?5) AND (pu._WorkId=0 OR pu._WorkId=?5));
SELECT COUNT(*) FROM ( SELECT DISTINCT pfu.User, pfu.PackageFamily FROM PackageFamilyUser AS pfu INNER JOIN PackageFamily AS pf ON (pf._PackageFamilyID=pfu.PackageFamily) INNER JOIN Package AS p ON (p.PackageFamily=pfu.PackageFamily) INNER JOIN PackageUser AS pu ON (pu.Package=p._PackageID AND pu.User=pfu.User) LEFT OUTER JOIN PackageUserStatus AS pus ON (pus.User=pfu.User AND pus.PackageIdentity=p._PackageID) WHERE pf.PackageFamilyName=?1 AND p.PackageType=?2 AND pu.DeploymentState=3 AND IFNULL(pus.Status, 0) & ?4 = 0 AND p._WorkId=0 AND pu._WorkId=0);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
SELECT pl._PackageLocationID, pl._Revision, pl._WorkId, pl.Package, pl.Volume, pl.InstalledLocation, pl.MutableLink, pl.MutableLocation, pl.ProjectionId, pl._Dictionary FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a._ApplicationID=?2 AND pl._WorkId=0 AND pu._WorkId=0 AND a._WorkId=0 ORDER BY pl._WorkId DESC;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE ProjectionId=? AND _WorkId=0;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE MutableLocation IS NOT NULL AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE MutableLocation IS NOT NULL AND _WorkId=0;
SELECT pl._PackageLocationID, pl._Revision, pl._WorkId, pl.Package, pl.Volume, pl.InstalledLocation, pl.MutableLink, pl.MutableLocation, pl.ProjectionId, pl._Dictionary FROM PackageLocation AS pl INNER JOIN Application AS a ON a.Package=pl.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pu.User=?1 AND a._ApplicationID=?2 AND (pl._WorkId=0 OR pl._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) ORDER BY pl._WorkId DESC;
SELECT COUNT(*) FROM PackageLocation WHERE Volume=? AND InstalledLocation LIKE '%WindowsApps%' AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM PackageLocation WHERE Volume=? AND InstalledLocation LIKE '%WindowsApps%' AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE MutableLocation=? AND ProjectionId IS NOT NULL AND _WorkId=0 LIMIT 1);
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE ProjectionId=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND dh._WorkId=0)   AND dh._WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory-custom.cpp
DELETE FROM DeploymentHistory WHERE _DeploymentHistoryID IN ( SELECT dh._DeploymentHistoryID FROM DeploymentHistory AS dh   INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity   INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily   WHERE dh.User=?1       AND pf.PackageFamilyName=?2       AND dh._WorkId=0);
SELECT EXISTS(SELECT 1 FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND (dh._WorkId=0 OR dh._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh._WorkId=0 LIMIT 1);
SELECT COUNT(DISTINCT(dh.WhenOccurred / ?4)) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1   AND pf.PackageFamilyName=?2   AND dh.HResult=?3   AND dh.WhenOccurred > (SELECT IFNULL(MAX(dh.WhenOccurred), 0) FROM DeploymentHistory AS dh INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily WHERE dh.User=?1 AND pf.PackageFamilyName=?2 AND dh.HResult>=0 AND (dh._WorkId=0 OR dh._WorkId=?5))   AND (dh._WorkId=0 OR dh._WorkId=?5);
DELETE FROM DeploymentHistory WHERE _DeploymentHistoryID IN ( SELECT dh._DeploymentHistoryID FROM DeploymentHistory AS dh   INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=dh.PackageIdentity   INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=pi.PackageFamily   WHERE dh.User=?1       AND pf.PackageFamilyName=?2       AND (dh._WorkId=0 OR dh._WorkId=?3));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
PackageIdentity
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
SELECT _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE _PackageIdentityID=?;
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND (p._WorkId=0 OR p._WorkId=?);
SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON p.PackageFullName=pi.PackageFullName WHERE p._PackageID=? AND p._WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
DeploymentHistory
INSERT INTO DeploymentHistory (_Revision, _WorkId, PackageIdentity, User, HResult, WhenOccurred, _Dictionary) VALUES(?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory.cpp
SRHistory
INSERT INTO SRHistory (_Revision, _WorkId, "Action", Flags, PackageIdentity, User, ActivityId, HResult, WhenOccurred, SequenceId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
DELETE FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
StateRepository.log
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
:memory:
StateRepositoryStatus
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepository
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModel\StateRepositoryStatus
%AppRepository%\Downlevel\StateRepository-Machine.srd
%AppRepository%\StateRepository-User-%UserSid%.srd
%AppRepository%\StateRepository-Machine.srd
%AppRepository%\StateRepository-Deployment.srd
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
OptionalBundle
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0 LIMIT 1);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE MainBundle=? AND Name=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND Publisher=? AND _WorkId=0;
SELECT _OptionalBundleID, _Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary FROM OptionalBundle WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO OptionalBundle (_Revision, _WorkId, MainBundle, Name, Publisher, Version, Filename, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
MainBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
OptionalBundlePackage
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE _OptionalBundlePackageID=? AND _WorkId=0;
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _OptionalBundlePackageID, _Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary FROM OptionalBundlePackage WHERE OptionalBundle=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
INSERT INTO OptionalBundlePackage (_Revision, _WorkId, OptionalBundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
DependencyGraph
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=?5) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=?5))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=? AND _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE DependencyType & ?1 !=0 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND "Index"=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=?5) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _DependencyGraphID=?4 AND _WorkId=?5))) AND _IsMarkedForDeletion=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0;
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SupplierPackage
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DependentPackage
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
INSERT INTO File (_Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
ContentGroup
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup WHERE _ContentGroupID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ContentGroupID, _Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary FROM ContentGroup WHERE Package=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE ContentGroup SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, ContentGroupType=?, Status=?, _Dictionary=? WHERE _ContentGroupID=? AND _Revision=? AND _WorkId=0;
INSERT INTO ContentGroup (_Revision, _WorkId, Package, "Index", Name, ContentGroupType, Status, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias-custom.cpp
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (aea._WorkId=0 OR aea._WorkId=?3) AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT aea._AppExecutionAliasID, aea._Revision, aea._WorkId, aea.Alias, aea.Extension, aea.Flags, aea._Dictionary FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND aea._WorkId=0 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=?1 AND (aea._WorkId=0 OR aea._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
DELETE FROM AppExecutionAlias WHERE _AppExecutionAliasID IN ( SELECT aea._AppExecutionAliasID FROM AppExecutionAlias AS aea INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aea.Extension WHERE ae.Application=? AND aea._WorkId=0 AND ae._WorkId=0);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
AppExecutionAlias
INSERT INTO AppExecutionAlias (_Revision, _WorkId, Alias, Extension, Flags, _Dictionary) VALUES(?,?,?,?,?,?);
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Extension
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension-custom.cpp
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE ae.Category=?2 AND pu.User=?1 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE ae.Category=?2 AND pu.User=?1 AND ae._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0;
DELETE FROM ApplicationExtension WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationExtension WHERE Application=? AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p._PackageID=?1 AND ae.Category=?2 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND p.PackageFullName=?3 AND (ae._WorkId=0 OR ae._WorkId=?4) AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND p.PackageFullName=?3 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND (ae._WorkId=0 OR ae._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application WHERE ae.Flags & ?2 != 0 AND a.ApplicationUserModelId=?1 AND ae._WorkId=0 AND a._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category=?2 AND (ae._WorkId=0 OR ae._WorkId=?5);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category=?2 AND ae._WorkId=0;
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND a.ApplicationUserModelId=?3 AND (ae._WorkId=0 OR ae._WorkId=?4) AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ae.Category=?2 AND pu.User=?1 AND a.ApplicationUserModelId=?3 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN Protocol AS pr ON pr.Extension=ae._ApplicationExtensionID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category='windows.protocol' AND p.PackageFullName=?2 AND pr.ProtocolName=?3 AND (ae._WorkId=0 OR ae._WorkId=?6) AND (a._WorkId=0 OR a._WorkId=?6) AND (p._WorkId=0 OR p._WorkId=?6) AND (pr._WorkId=0 OR pr._WorkId=?6);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN Protocol AS pr ON pr.Extension=ae._ApplicationExtensionID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category='windows.protocol' AND p.PackageFullName=?2 AND pr.ProtocolName=?3 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pr._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category='windows.fileTypeAssociation' AND p.PackageFullName=?2 AND fta.FileType=?3 AND (ae._WorkId=0 OR ae._WorkId=?6) AND (a._WorkId=0 OR a._WorkId=?6) AND (p._WorkId=0 OR p._WorkId=?6) AND (fta._WorkId=0 OR fta._WorkId=?6);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=a.Package WHERE ae.Category='windows.fileTypeAssociation' AND p.PackageFullName=?2 AND fta.FileType=?3 AND ae._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND fta._WorkId=0;
UPDATE ApplicationExtension SET Activation=? WHERE _ApplicationExtensionID=? AND _WorkId=?;
windows.fullTrustProcess
Windows.PartialTrustApplication
Windows.FullTrustApplication
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE ae.Category='windows.fileTypeAssociation' AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND fta.FileType=?3 AND (ae._WorkId=0 OR ae._WorkId=?6) AND (a._WorkId=0 OR a._WorkId=?6) AND (pu._WorkId=0 OR pu._WorkId=?6) AND (fta._WorkId=0 OR fta._WorkId=?6);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN FileTypeAssociation AS fta ON fta.Extension=ae._ApplicationExtensionID WHERE ae.Category='windows.fileTypeAssociation' AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND fta.FileType=?3 AND ae._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 AND fta._WorkId=0;
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Protocol AS pr ON pr.Extension=ae._ApplicationExtensionID WHERE ae.Category='windows.protocol' AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pr.ProtocolName=?3 AND (ae._WorkId=0 OR ae._WorkId=?6) AND (a._WorkId=0 OR a._WorkId=?6) AND (pu._WorkId=0 OR pu._WorkId=?6) AND (pr._WorkId=0 OR pr._WorkId=?6);
SELECT ae._ApplicationExtensionID, ae._Revision, ae._WorkId, ae.Application, ae."Index", ae.Category, ae.Activation, ae.HostId, ae.Executable, ae.Entrypoint, ae.RuntimeType, ae.StartPage, ae.ResourceGroup, ae.Flags, ae.Subsystem, ae.Parameters, ae.CurrentDirectoryPath, ae.Id, ae._LocalizedDictionary, ae._Dictionary FROM ApplicationExtension AS ae INNER JOIN Application AS a ON a._ApplicationID=ae.Application INNER JOIN PackageUser AS pu ON pu.Package=a.Package INNER JOIN Protocol AS pr ON pr.Extension=ae._ApplicationExtensionID WHERE ae.Category='windows.protocol' AND pu.User=?1 AND a.ApplicationUserModelId=?2 AND pr.ProtocolName=?3 AND ae._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 AND pr._WorkId=0;
SELECT EXISTS(SELECT 1 FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainer.cpp
SharedPackageContainer
SELECT EXISTS(SELECT 1 FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND _WorkId=0;
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE User=? AND Name=? AND _WorkId=0;
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE Id=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE Id=? AND _WorkId=0;
SELECT _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE User=? AND Name=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND _WorkId=0;
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE User=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SharedPackageContainerID, _Revision, _WorkId, Id, Name, User, Status, _Dictionary FROM SharedPackageContainer WHERE User=? AND _WorkId=0;
DELETE FROM SharedPackageContainer WHERE _SharedPackageContainerID=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
UPDATE SharedPackageContainer SET _Revision=?, _WorkId=?, Id=?, Name=?, User=?, Status=?, _Dictionary=? WHERE _SharedPackageContainerID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE SharedPackageContainer SET _Revision=?, _WorkId=?, Id=?, Name=?, User=?, Status=?, _Dictionary=? WHERE _SharedPackageContainerID=? AND _Revision=? AND _WorkId=0;
INSERT INTO SharedPackageContainer (_Revision, _WorkId, Id, Name, User, Status, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
PackageUserStatus
SELECT COUNT(*), GROUP_CONCAT(pus.rowid) FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus-custom.cpp
SELECT pus.Status FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=?;
DELETE FROM PackageUserStatus AS pus WHERE User IN ( SELECT _UserID FROM User WHERE UserSid=?) AND PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?);
UPDATE PackageUserStatus SET Status=?3 WHERE PackageIdentity IN (SELECT _PackageIdentityID FROM PackageIdentity WHERE PackageFullName=?2) AND User IN (SELECT _UserID FROM User WHERE UserSid=?1);
SELECT EXISTS(SELECT 1 FROM PackageUserStatus AS pus INNER JOIN User AS u ON u._UserID=pus.User INNER JOIN PackageIdentity AS pi ON pi._PackageIdentityID=pus.PackageIdentity WHERE u.UserSid=? AND pi.PackageFullName=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
PostFixAllCascadingInMachinePartition
PostCheckAllCascadingInMachinePartition
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
WowDependencyGraph
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 LIMIT 1);
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.User, ptu.ApplicationIdentity, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN ApplicationIdentity AS ai ON ptu.ApplicationIdentity=ai._ApplicationIdentityID WHERE ptu.User=?1 AND ai.ApplicationUserModelId=?2 AND (ptu._WorkId=0 OR ptu._WorkId=?3) ORDER BY ptu._WorkId DESC;
SELECT ptu._PrimaryTileUserID, ptu._Revision, ptu._WorkId, ptu._Created, ptu._Modified, ptu.User, ptu.ApplicationIdentity, ptu.State, ptu.TileUniqueId, ptu._Dictionary FROM PrimaryTileUser AS ptu INNER JOIN ApplicationIdentity AS ai ON ptu.ApplicationIdentity=ai._ApplicationIdentityID WHERE ptu.User=?1 AND ai.ApplicationUserModelId=?2 AND ptu._WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
PrimaryTileUser
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
SecondaryTileUser
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
PrimaryTileUserChangelog
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
SecondaryTileUserChangelog
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
Partition %d not supported by GC()
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
CheckAllCascadingInDeploymentPartition
CheckAllCascadingInMachinePartition
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
MrtPackage
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _MrtPackageID, _Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary FROM MrtPackage WHERE Package=? AND _WorkId=0;
DELETE FROM MrtPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtPackage WHERE Package=? AND _WorkId=0;
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackageExternalLocation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
SELECT EXISTS(SELECT 1 FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
INSERT INTO PackageExternalLocation (_Revision, _WorkId, User, Package, Path, _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
MrtUserPri
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
MrtSharedPri
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
INSERT OR IGNORE INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
DELETE FROM ApplicationUser WHERE Package=? AND _WorkId=0;
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
DELETE FROM ApplicationUser WHERE PackageUser=? AND _WorkId=0;
DELETE FROM ApplicationUser WHERE PackageUser=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu.Package=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
DELETE FROM ApplicationUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
DELETE FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=? AND d._WorkId=0 AND pu._WorkId=0;
SELECT d._DependencyID, d._Revision, d._WorkId, d.DependentPackage, d."Index", d.DependencyType, d.Name, d.Publisher, d.MinVersion, d.MaxVersion, d.Flags, d._Dictionary FROM Dependency as d INNER JOIN PackageUser AS pu ON pu.Package=d.DependentPackage WHERE pu.DeploymentState=?1 AND (d._WorkId=0 OR d._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
DELETE FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
Dependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
SELECT EXISTS(SELECT 1 FROM Dependency WHERE DependentPackage=? AND Name=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Dependency WHERE DependentPackage=? AND Name=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Dependency WHERE DependentPackage=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE Name=? AND _WorkId=0;
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO Dependency (_Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependencyType=4 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=?;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
 SELECT EXISTS(SELECT 1 FROM DependencyGraph AS dg INNER JOIN Package AS p ON p._PackageID = dg.SupplierPackage INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID = p.PackageFamily WHERE dg.User=?1 AND dg.DependentPackage=?2 AND pf.PackageFamilyName=?3 AND dg._WorkId=0 AND p._WorkId=0 LIMIT 1);
 SELECT EXISTS(SELECT 1 FROM DependencyGraph AS dg INNER JOIN Package AS p ON p._PackageID = dg.SupplierPackage INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID = p.PackageFamily WHERE dg.User=?1 AND dg.DependentPackage=?2 AND pf.PackageFamilyName=?3 AND (dg._WorkId=0 OR dg._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) LIMIT 1);
DELETE FROM DependencyGraph WHERE DependentPackage=? AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0;
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) INNER JOIN Package AS p ON p._PackageID=dg.DependentPackage WHERE dg.User=?1 AND p.PackageFullName=?2 AND (dg._WorkId=0 OR dg._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) LIMIT 1);
DELETE FROM DependencyGraph WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?);
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) WHERE pu.User=?1 AND pu.Package=?2 AND pu._WorkId=0 AND pel._WorkId=0 UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) WHERE dg.User=?1 AND dg.DependentPackage=?2 AND dg._WorkId=0 AND pel._WorkId=0 LIMIT 1);
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) WHERE pu.User=?1 AND pu.Package=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) WHERE dg.User=?1 AND dg.DependentPackage=?2 AND (dg._WorkId=0 OR dg._WorkId=?3) AND (pel._WorkId=0 OR pel._WorkId=?3) LIMIT 1);
 SELECT EXISTS( SELECT 1 FROM PackageUser as pu INNER JOIN PackageExternalLocation AS pel ON pel.Package=pu.Package AND (pel.User=0 OR pel.User=pu.User) INNER JOIN Package AS p ON p._PackageID=pu.Package WHERE pu.User=?1 AND p.PackageFullName=?2 AND pu._WorkId=0 AND pel._WorkId=0 AND p._WorkId=0 UNION ALL SELECT 1 FROM DependencyGraph AS dg INNER JOIN PackageExternalLocation AS pel ON pel.Package=dg.SupplierPackage AND (pel.User=0 OR pel.User=dg.User) INNER JOIN Package AS p ON p._PackageID=dg.DependentPackage WHERE dg.User=?1 AND p.PackageFullName=?2 AND dg._WorkId=0 AND pel._WorkId=0 AND p._WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
AppxExtension
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND _WorkId=0;
DELETE FROM WowDependencyGraph WHERE DependentPackage=? AND _WorkId=?;
DELETE FROM WowDependencyGraph WHERE SupplierPackage=? AND (_WorkId=0 OR _WorkId=?);
BundlePackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND _WorkId=0;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE Bundle=? AND Version=? AND Architecture=? AND ResourceId IS ? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE PackageType=? AND Bundle=? AND (_WorkId=0 OR _WorkId=?);
SELECT _BundlePackageID, _Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary FROM BundlePackage WHERE PackageType=? AND Bundle=? AND _WorkId=0;
INSERT INTO BundlePackage (_Revision, _WorkId, Bundle, PackageType, Version, Architecture, ResourceId, Filename, "Offset", Size, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
%s.%s%s
%s.%s
ExeServerRegistration
AppXdbszz9cysstkgdz6xk17sywkqb7gjj0v
AppXqj98qxeaynz6dv4459ayz6bnqxbyaqcs
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-progid.cpp
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
PackageExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND "Index"=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageExtension WHERE Package=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND "Index"=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND _WorkId=0;
SELECT _PackageExtensionID, _Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary FROM PackageExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
DELETE FROM PackageExtension WHERE _PackageExtensionID=? AND _WorkId=0;
DELETE FROM PackageExtension WHERE _PackageExtensionID=? AND (_WorkId=0 OR _WorkId=?);
Activation
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
UPDATE PackageExtension SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, Flags=?, Parameters=?, CurrentDirectoryPath=?, Id=?, ResourceGroup=?, _Dictionary=? WHERE _PackageExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageExtension SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, Flags=?, Parameters=?, CurrentDirectoryPath=?, Id=?, ResourceGroup=?, _Dictionary=? WHERE _PackageExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT EXISTS(SELECT 1 FROM PackageExtension AS pe INNER JOIN Package AS p ON p._PackageID=pe.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pe.Category=?2 AND pu.User=?1 AND (pe._WorkId=0 OR pe._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
SELECT pe._PackageExtensionID, pe._Revision, pe._WorkId, pe.Package, pe."Index", pe.Category, pe.Activation, pe.HostId, pe.Executable, pe.Entrypoint, pe.RuntimeType, pe.StartPage, pe.Flags, pe.Parameters, pe.CurrentDirectoryPath, pe.Id, pe.ResourceGroup, pe._Dictionary FROM PackageExtension AS pe INNER JOIN Package AS p ON p._PackageID=pe.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pe.Category=?2 AND pu.User=?1 AND pe._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT pe._PackageExtensionID, pe._Revision, pe._WorkId, pe.Package, pe."Index", pe.Category, pe.Activation, pe.HostId, pe.Executable, pe.Entrypoint, pe.RuntimeType, pe.StartPage, pe.Flags, pe.Parameters, pe.CurrentDirectoryPath, pe.Id, pe.ResourceGroup, pe._Dictionary FROM PackageExtension  AS pe INNER JOIN Package AS p ON p._PackageID=pe.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pe.Category=?2 AND pu.User=?1 AND (pe._WorkId=0 OR pe._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT EXISTS(SELECT 1 FROM PackageExtension AS pe INNER JOIN Package AS p ON p._PackageID=pe.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pe.Category=?2 AND pu.User=?1 AND pe._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
DELETE FROM PackageExtension WHERE Package=? AND _WorkId=0;
DELETE FROM PackageExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
text()
#text
*[local-name()='%s']
>`PublisherCacheFolder
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND _WorkId=0;
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE FolderName IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _PublisherCacheFolderID, _Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary FROM PublisherCacheFolder WHERE PackageExtension=? AND _WorkId=0;
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
HostRuntime
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
SELECT EXISTS(SELECT 1 FROM HostRuntime WHERE PackageExtension=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM HostRuntime WHERE PackageExtension=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
ApplicationExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND "Index"=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Category=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND "Index"=? AND _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE _ApplicationExtensionID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Category=? AND _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND _WorkId=0;
SELECT _ApplicationExtensionID, _Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary FROM ApplicationExtension WHERE Application=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO ApplicationExtension (_Revision, _WorkId, Application, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, Flags, Subsystem, Parameters, CurrentDirectoryPath, Id, _LocalizedDictionary, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, CurrentDirectoryPath=?, Id=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE ApplicationExtension SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Category=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, RuntimeType=?, StartPage=?, ResourceGroup=?, Flags=?, Subsystem=?, Parameters=?, CurrentDirectoryPath=?, Id=?, _LocalizedDictionary=?, _Dictionary=? WHERE _ApplicationExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
Application
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
SELECT EXISTS(SELECT 1 FROM Application WHERE EditionId IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE EditionId IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE _ApplicationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE ApplicationUserModelId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE ApplicationUserModelId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND PackageRelativeApplicationId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE (_WorkId=0 OR _WorkId=?);
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE ApplicationUserModelId=? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE ApplicationUserModelId=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE EditionId IS ? AND _WorkId=0;
SELECT _ApplicationID, _Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary FROM Application WHERE EditionId IS ? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO Application (_Revision, _WorkId, Package, "Index", ApplicationType, Flags, Subsystem, PackageRelativeApplicationId, ApplicationUserModelId, DisplayName, Description, Square150x150Logo, Square44x44Logo, Wide310x150Logo, Square310x310Logo, Square71x71Logo, ForegroundText, BackgroundColor, Activation, HostId, Executable, Entrypoint, StartPage, ResourceGroup, LockScreenNotification, LockScreenBadgeLogo, SplashScreenImage, SplashScreenBackgroundColor, InitialRotationPreference, ApplicationViewMinWidth, AppListEntry, EditionId, VisualGroup, Parameters, CurrentDirectoryPath, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
UPDATE Application SET _Revision=?, _WorkId=?, Package=?, "Index"=?, ApplicationType=?, Flags=?, Subsystem=?, PackageRelativeApplicationId=?, ApplicationUserModelId=?, DisplayName=?, Description=?, Square150x150Logo=?, Square44x44Logo=?, Wide310x150Logo=?, Square310x310Logo=?, Square71x71Logo=?, ForegroundText=?, BackgroundColor=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, StartPage=?, ResourceGroup=?, LockScreenNotification=?, LockScreenBadgeLogo=?, SplashScreenImage=?, SplashScreenBackgroundColor=?, InitialRotationPreference=?, ApplicationViewMinWidth=?, AppListEntry=?, EditionId=?, VisualGroup=?, Parameters=?, CurrentDirectoryPath=?, _Dictionary=? WHERE _ApplicationID=? AND _Revision=? AND _WorkId=0;
UPDATE Application SET _Revision=?, _WorkId=?, Package=?, "Index"=?, ApplicationType=?, Flags=?, Subsystem=?, PackageRelativeApplicationId=?, ApplicationUserModelId=?, DisplayName=?, Description=?, Square150x150Logo=?, Square44x44Logo=?, Wide310x150Logo=?, Square310x310Logo=?, Square71x71Logo=?, ForegroundText=?, BackgroundColor=?, Activation=?, HostId=?, Executable=?, Entrypoint=?, StartPage=?, ResourceGroup=?, LockScreenNotification=?, LockScreenBadgeLogo=?, SplashScreenImage=?, SplashScreenBackgroundColor=?, InitialRotationPreference=?, ApplicationViewMinWidth=?, AppListEntry=?, EditionId=?, VisualGroup=?, Parameters=?, CurrentDirectoryPath=?, _Dictionary=? WHERE _ApplicationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
SELECT EXISTS(SELECT 1 FROM Activation WHERE _ActivationID=? LIMIT 1);
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation;
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
SELECT EXISTS(SELECT 1 FROM Activation WHERE ActivationKey IS ? LIMIT 1);
SELECT _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE _ActivationID=?;
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
ApplicationBackgroundTask
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO ApplicationBackgroundTask (_Revision, _WorkId, Type, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppService
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO AppService (_Revision, _WorkId, Name, Extension, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
AppUriHandlerGroup
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO AppUriHandlerGroup (_Revision, _WorkId, Name, Extension, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppUriHandler
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
INSERT INTO AppUriHandler (_Revision, _WorkId, HostName, Path, Extension, ProgID, AppUriHandlerGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
FileTypeAssociation
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO FileTypeAssociation (_Revision, _WorkId, FileType, ContentType, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
Protocol
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO Protocol (_Revision, _WorkId, ProtocolName, ReturnResults, Extension, "Index", ProgID, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppExtensionHost
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO AppExtensionHost (_Revision, _WorkId, Extension, Name, _Dictionary) VALUES(?,?,?,?,?);
AppExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppExtension WHERE _AppExtensionID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
INSERT INTO AppExtension (_Revision, _WorkId, Name, Id, PublicFolder, DisplayName, Description, Extension, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND _WorkId=0;
UPDATE AppExtension SET _Revision=?, _WorkId=?, Name=?, Id=?, PublicFolder=?, DisplayName=?, Description=?, Extension=?, _Dictionary=? WHERE _AppExtensionID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryreader.cpp
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
AppxManifest
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND _WorkId=0;
SELECT _AppxManifestID, _Revision, _WorkId, Package, uncompress(Xml), _Dictionary FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
INSERT INTO AppxManifest (_Revision, _WorkId, Package, Xml, _Dictionary) VALUES(?,?,?,compress(?),?);
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE _AppxManifestID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxManifest WHERE Package=? AND _WorkId=0;
DELETE FROM AppxManifest WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND _WorkId=0;
UPDATE AppxManifest SET _Revision=?, _WorkId=?, Package=?, Xml=compress(?), _Dictionary=? WHERE _AppxManifestID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.ContentGroupType=2 AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup-custom.cpp
DELETE FROM ContentGroup WHERE Package=? AND _WorkId=0;
DELETE FROM ContentGroup WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg WHERE Package=? AND cg.Status<>3 AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtreader.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation-custom.cpp
DELETE FROM PackageExternalLocation WHERE Package=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE (User=0 OR User=?) AND Package=? AND _WorkId=0 ORDER BY User DESC;
DELETE FROM PackageExternalLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN User AS u ON u._UserID=pel.User WHERE u.UserSid=?1 AND pel.Package=?2 AND pel._WorkId=0;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN User AS u ON u._UserID=pel.User WHERE u.UserSid=?1 AND pel.Package=?2 AND (pel._WorkId=0 OR pel._WorkId=?3) ORDER BY pel._WorkId DESC;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel WHERE (pel.User=0 OR pel.User=?) AND pel.Package=? AND (pel._WorkId=0 OR pel._WorkId=?) AND (a._WorkId=0 OR a._WorkId=?) AND (pu._WorkId=0 OR pu._WorkId=?) ORDER BY pel.User DESC, pel._WorkId DESC;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE pel.User=? AND pel.Package=? AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 ORDER BY pel.User DESC;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel WHERE pel.User=? AND pel.Package=? AND (pel._WorkId=0 OR pel._WorkId=?) AND (a._WorkId=0 OR a._WorkId=?) AND (pu._WorkId=0 OR pu._WorkId=?) ORDER BY pel.User DESC, pel._WorkId DESC;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE (User=0 OR User=?) AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY User DESC, _WorkId DESC;
SELECT pel._PackageExternalLocationID, pel._Revision, pel._WorkId, pel.User, pel.Package, pel.Path, pel._Dictionary FROM PackageExternalLocation AS pel INNER JOIN Application AS a ON a.Package=pel.Package INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE (pel.User=0 OR pel.User=?) AND pel.Package=? AND pel._WorkId=0 AND a._WorkId=0 AND pu._WorkId=0 ORDER BY pel.User DESC;
PackageFamilyUserResource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
SELECT _PackageFamilyUserResourceID, _Revision, PackageFamilyUser, ResourceId, _Dictionary FROM PackageFamilyUserResource WHERE PackageFamilyUser=?;
PackageFamilyUser
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile-custom.cpp
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND _WorkId=0;
DELETE FROM ContentGroupFile WHERE ContentGroup IN (SELECT _ContentGroupID FROM ContentGroup WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND _WorkId=0;
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.ContentGroupType=2 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
ContentGroupFile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
INSERT INTO ContentGroupFile (_Revision, _WorkId, ContentGroup, File, _Dictionary) VALUES(?,?,?,?,?);
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM Application WHERE Package=? AND _WorkId=0;
DELETE FROM Application WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND a._WorkId=0 AND p._WorkId=0  LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application-custom.cpp
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=?1 AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2)  LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=?1 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=?1 AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0  AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4)  AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.Package=?2 AND pu.User=?1 AND a._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.Package=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND a._WorkId=0  AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3)  AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND a._WorkId=0  AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a._ApplicationID=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a._ApplicationID=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE a.PackageRelativeApplicationId=?2 AND p.PackageFullName=?1 AND a._WorkId=0 AND p._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=? AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=? AND a._WorkId=0 AND p._WorkId=0 ;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PackageFamilyName=? AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) ;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package WHERE p.PackageFullName=? AND a._WorkId=0 AND p._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.Package=?2 AND pu.User=?1 AND a._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.Package=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFamily=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4) AND (pu._WorkId=0 OR pu._WorkId=?4);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0  AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3)  AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0  AND pu._WorkId=0;
SELECT a.ApplicationType FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) ORDER BY a._WorkId DESC;
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND a._WorkId=0;
SELECT a._ApplicationID FROM Application AS a WHERE a.Package=? AND (a._WorkId=0 OR a._WorkId=?);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND a._WorkId=0  AND p._WorkId=0 LIMIT 1);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.PackageFullName=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2);
SELECT a.ApplicationType FROM Application AS a INNER JOIN PackageUser AS pu ON pu.Package=a.Package WHERE a.ApplicationUserModelId=?2 AND pu.User=?1 AND a._WorkId=0 AND pu._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5) LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND a._WorkId=0 AND p._WorkId=0 ;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (a._WorkId=0 OR a._WorkId=?6) AND (p._WorkId=0 OR p._WorkId=?6) ;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND a._WorkId=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?5 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?4) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)) AND (p._WorkID=0 OR p._WorkID=?6) AND (pu._WorkID=0 OR pu._WorkID=?6)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE pf.PackageFamilyName=?2 AND p.PackageType & ?3 !=0 AND (a._WorkId=0 OR a._WorkId=?6)  AND (p._WorkId=0 OR p._WorkId=?6) LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5) LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT EXISTS(SELECT 1 FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND a._WorkId=0 AND p._WorkId=0 LIMIT 1);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?3 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?2) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)) AND (p._WorkID=0 OR p._WorkID=?4) AND (pu._WorkID=0 OR pu._WorkID=?4)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.AppListEntry=?2 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE a.AppListEntry=?2 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.AppListEntry=?2 AND a._WorkId=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE p.PackageFullName=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND a._WorkId=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.ApplicationUserModelId=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5);
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?3 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?2) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a._WorkId=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.AppListEntry=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID WHERE ae.Category='windows.appExecutionAlias' AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 AND ae._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID INNER JOIN ApplicationExtension AS ae ON ae.Application=a._ApplicationID WHERE ae.Category='windows.appExecutionAlias' AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?2) AND (p._WorkId=0 OR p._WorkId=?2) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2);
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND _WorkId=0;
SELECT Flags, Subsystem, HostId, Executable, Entrypoint, StartPage, ResourceGroup FROM Application WHERE _ApplicationID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND p._WorkID=0 AND pu._WorkID=0)AND p._WorkID=0 AND pu._WorkID=0), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.HostId=?2 AND a._WorkId=0 AND p._WorkId=0;
WITH PackageIdByUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByDefaultAccountForPackageFamilyNotUser(_PackageID) AS (SELECT _PackageID FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ?4 AND pu.User IN (SELECT _UserID FROM User AS u WHERE u.UserSid=?3) AND p.PackageFamily NOT IN (SELECT DISTINCT PackageFamily FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pu.User=?1 AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)) AND (p._WorkID=0 OR p._WorkID=?5) AND (pu._WorkID=0 OR pu._WorkID=?5)), PackageIdByAll(_PackageID) AS (SELECT _PackageID FROM PackageIdByUser UNION ALL SELECT _PackageID FROM PackageIdByDefaultAccountForPackageFamilyNotUser)SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageIdByAll AS cte_p ON cte_p._PackageID=p._PackageID WHERE a.HostId=?2 AND (a._WorkId=0 OR a._WorkId=?5) AND (p._WorkId=0 OR p._WorkId=?5);
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND a.AppListEntry==?3 AND pu.User=?1 AND a._WorkId=0 AND p._WorkId=0  AND pu._WorkId=0;
SELECT a._ApplicationID, a._Revision, a._WorkId, a.Package, a."Index", a.ApplicationType, a.Flags, a.Subsystem, a.PackageRelativeApplicationId, a.ApplicationUserModelId, a.DisplayName, a.Description, a.Square150x150Logo, a.Square44x44Logo, a.Wide310x150Logo, a.Square310x310Logo, a.Square71x71Logo, a.ForegroundText, a.BackgroundColor, a.Activation, a.HostId, a.Executable, a.Entrypoint, a.StartPage, a.ResourceGroup, a.LockScreenNotification, a.LockScreenBadgeLogo, a.SplashScreenImage, a.SplashScreenBackgroundColor, a.InitialRotationPreference, a.ApplicationViewMinWidth, a.AppListEntry, a.EditionId, a.VisualGroup, a.Parameters, a.CurrentDirectoryPath, a._Dictionary FROM Application AS a INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pf.PackageFamilyName=?2 AND a.AppListEntry==?3 AND pu.User=?1 AND (a._WorkId=0 OR a._WorkId=?4) AND (p._WorkId=0 OR p._WorkId=?4)  AND (pu._WorkId=0 OR pu._WorkId=?4);
PackageSuperceded
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
DELETE FROM PackageSuperceded WHERE _PackageSupercededID=?;
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
INSERT INTO PackageSuperceded (_Revision, PackageIdentity, User, _Dictionary) VALUES(?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal-custom.cpp
INSERT INTO SRJournal (_Revision, _WorkId, ObjectType, Action, ObjectId, User, PackageIdentity, ApplicationIdentity, WhenOccurred, SequenceId)SELECT 1, workid(), 14 /*ApplicationUser*/, 1 /*Add*/, pu._PackageUserID, pu.User, pi._PackageIdentityID, ai._ApplicationIdentityID, now(), ?1 AS SequenceId FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageIdentity AS pi ON pi.PackageFullName=p.PackageFullName INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE a._ApplicationID=?2 AND pu._WorkId=0 AND p._WorkId=0 AND a._WorkId=0;
INSERT INTO SRJournal (_Revision, _WorkId, ObjectType, Action, ObjectId, User, PackageIdentity, ApplicationIdentity, WhenOccurred, SequenceId)SELECT 1, workid(), 14 /*ApplicationUser*/, 1 /*Add*/, pu._PackageUserID, pu.User, pi._PackageIdentityID, ai._ApplicationIdentityID, now(), ?1 AS SequenceId FROM PackageUser AS pu INNER JOIN Package AS p ON p._PackageID=pu.Package INNER JOIN PackageIdentity AS pi ON pi.PackageFullName=p.PackageFullName INNER JOIN Application AS a ON a.Package=p._PackageID INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE a._ApplicationID=?2 AND (pu._WorkId=0 OR pu._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3);
ApplicationProperty
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND "Index"=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND Name=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE _ApplicationPropertyID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE _ApplicationPropertyID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Application=? AND Name=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Name=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty WHERE Name=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE _ApplicationPropertyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND "Index"=? AND _WorkId=0;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE _WorkId=0;
SELECT _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE _ApplicationPropertyID=? AND _WorkId=0;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Name=? AND _WorkId=0;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND _WorkId=0;
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT _ApplicationPropertyID, _Revision, _WorkId, Application, "Index", Name, _Dictionary FROM ApplicationProperty WHERE Application=? AND Name=? AND _WorkId=0;
INSERT INTO ApplicationProperty (_Revision, _WorkId, Application, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
UPDATE ApplicationProperty SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Name=?, _Dictionary=? WHERE _ApplicationPropertyID=? AND _Revision=? AND _WorkId=0;
UPDATE ApplicationProperty SET _Revision=?, _WorkId=?, Application=?, "Index"=?, Name=?, _Dictionary=? WHERE _ApplicationPropertyID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DefaultTile
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
SELECT EXISTS(SELECT 1 FROM DefaultTile WHERE Application=? AND _WorkId=0 LIMIT 1);
DELETE FROM DefaultTile WHERE Application=? AND _WorkId=0;
INSERT INTO DefaultTile (_Revision, _WorkId, Application, UpdateRecurrence, UpdateUriTemplate, ShowNameOnTiles, ShortName, DefaultSize, HoloContentChoice, MixedRealityModel, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM DefaultTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
ApplicationContentUriRule
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0;
SELECT _ApplicationContentUriRuleID, _Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
INSERT INTO ApplicationContentUriRule (_Revision, _WorkId, Application, "Index", Uri, Type, WindowsRuntimeAccess, Flags, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
Resource
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
INSERT INTO Resource (_Revision, _WorkId, Package, "Index", Language, _Dictionary) VALUES(?,?,?,?,?,?);
NamedDependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
INSERT INTO NamedDependency (_Revision, _WorkId, DependencyType, Package, "Index", Name, Version, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
PackageProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE _PackagePropertyID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND "Index"=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND Name=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE _PackagePropertyID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Name=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Name=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE _WorkId=0;
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Name=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE _PackagePropertyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE _PackagePropertyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND "Index"=? AND _WorkId=0;
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageProperty WHERE _PackagePropertyID=? AND _WorkId=0;
DELETE FROM PackageProperty WHERE _PackagePropertyID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND _WorkId=0;
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePropertyID, _Revision, _WorkId, Package, "Index", Name, _Dictionary FROM PackageProperty WHERE Package=? AND Name=? AND _WorkId=0;
INSERT INTO PackageProperty (_Revision, _WorkId, Package, "Index", Name, _Dictionary) VALUES(?,?,?,?,?,?);
UPDATE PackageProperty SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, _Dictionary=? WHERE _PackagePropertyID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageProperty SET _Revision=?, _WorkId=?, Package=?, "Index"=?, Name=?, _Dictionary=? WHERE _PackagePropertyID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackagePolicy
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE _PackagePolicyID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueNumber=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND ValueString IS ? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT COUNT(*) FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND _WorkId=0;
SELECT _PackagePolicyID, _Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PackagePolicy (_Revision, _WorkId, User, Package, Name, "Index", ValueString, ValueNumber, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND _WorkId=0;
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
UPDATE PackagePolicy SET _Revision=?, _WorkId=?, User=?, Package=?, Name=?, "Index"=?, ValueString=?, ValueNumber=?, _Dictionary=? WHERE _PackagePolicyID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy-custom.cpp
DELETE FROM PackagePolicy WHERE Package=? AND _WorkId=0;
DELETE FROM PackagePolicy WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND _WorkId=0;
SELECT ValueNumber FROM PackagePolicy WHERE User=? AND Package=? AND Name=? AND "Index"=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri-custom.cpp
DELETE FROM PackageSourceUri WHERE Package=? AND _WorkId=0;
DELETE FROM PackageSourceUri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
MrtApplication
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND _WorkId=0;
SELECT _MrtApplicationID, _Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM MrtApplication WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtApplication WHERE Application=? AND _WorkId=0;
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
INSERT INTO MrtApplication (_Revision, _WorkId, Application, DisplayNameReference, DescriptionReference, Square150x150LogoReference, Square44x44LogoReference, Wide310x150LogoReference, Square310x310LogoReference, Square71x71LogoReference, StartPageReference, SplashScreenImageReference, VisualGroupReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication-custom.cpp
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND _WorkId=0;
DELETE FROM MrtApplication WHERE Application IN (SELECT _ApplicationID FROM Application WHERE Package=?) AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE _WorkId=0 AND Digest IN (SELECT Digest FROM File WHERE _WorkId=0 GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE (_WorkId=0 OR _WorkId=?1) AND Digest IN (SELECT Digest FROM File WHERE (_WorkId=0 OR _WorkId=?1) GROUP BY Digest HAVING (COUNT(*) > 1)) ORDER BY Size;
UPDATE File SET Flags=((Flags & ~?) | ?) WHERE _FileID=? AND _WorkId=0;
UPDATE File SET Flags=((Flags & ~?) | ?) WHERE _FileID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE Package=? AND _WorkId=0;
DELETE FROM File WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND Flags & ? !=0 AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND Flags & ? !=0 AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
SELECT LastValue FROM Sequence WHERE Id=?;
UPDATE Sequence SET LastValue=? WHERE Id=?;
SharedPackageContainerPackageFamily
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainerpackagefamily.cpp
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE SharedPackageContainer=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM SharedPackageContainerPackageFamily WHERE _SharedPackageContainerPackageFamilyID=? AND _WorkId=0;
DELETE FROM SharedPackageContainerPackageFamily WHERE _SharedPackageContainerPackageFamilyID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE _WorkId=0;
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE (_WorkId=0 OR _WorkId=?);
SELECT _SharedPackageContainerPackageFamilyID, _Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary FROM SharedPackageContainerPackageFamily WHERE SharedPackageContainer=? AND _WorkId=0;
INSERT INTO SharedPackageContainerPackageFamily (_Revision, _WorkId, SharedPackageContainer, PackageFamilyName, "Index", _Dictionary) VALUES(?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
DELETE FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
BundleResource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
INSERT INTO BundleResource (_Revision, _WorkId, BundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
OptionalBundleResource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
INSERT INTO OptionalBundleResource (_Revision, _WorkId, OptionalBundlePackage, Language, Scale, DXFeatureLevel, _Dictionary) VALUES(?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM XboxPackage WHERE _XboxPackageID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
XboxPackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE EditionId=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND _WorkId=0;
SELECT _XboxPackageID, _Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO XboxPackage (_Revision, _WorkId, Package, EditionId, BuildId, DeviceId, BuildVersion, ContentId, ProductId, MediaId, PackageSize, TitleId, PrimaryServiceConfigId, EraVersion, EscrowedKeyBlobId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND _WorkId=0;
UPDATE XboxPackage SET _Revision=?, _WorkId=?, Package=?, EditionId=?, BuildId=?, DeviceId=?, BuildVersion=?, ContentId=?, ProductId=?, MediaId=?, PackageSize=?, TitleId=?, PrimaryServiceConfigId=?, EraVersion=?, EscrowedKeyBlobId=?, _Dictionary=? WHERE _XboxPackageID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywinrtwriter.cpp
RepairGhostMinimumAgeForDeletion
MachineDatabasePageSize
DownlevelMachineDatabaseCheckpointThreshold
MaintenanceMaxClockDelta
MachineDatabaseJournalSizeLimit
DownlevelMachineDatabase
CheckpointInterval
Policy.Normal.StatementMinCount
DatabaseStatisticsUpdateInterval
Policy.Aggressive.ConnectionMinCount
DatabaseCorruptionFirstDetectedWhen
DownlevelMachineDatabaseCacheSize
DeploymentDatabaseAutoCheckpoint
DeploymentDatabaseOptions
WaitForRequestsInUseTimeout
Policy.Normal.ConnectionMaxCount
Policy.Normal.ConnectionMinCount
Policy.Aggressive.GCInterval
PackageRepositoryRoot
UserDatabaseStatisticsLastUpdated
%AppRepository%
DeploymentDatabaseJournalSizeLimit
DeploymentDatabaseCacheSize
DownlevelMachineDatabaseFileChunkSize
BusyMaxTimeout
SOFTWARE\Microsoft\Windows\CurrentVersion\Appx
Policy.Aggressive.ConnectionMaxAge
Machine
AccessControlFlags
DatabaseCorruptionLastReported
Deployment
MachineDatabaseFileChunkSize
MachineDatabaseOptions
ServiceIdleTimeout
Policy.Normal.GCInterval
Policy.Normal.StatementMaxAge
DownlevelMachineDatabaseOptions
CheckpointMaxClockDelta
DeploymentDatabase
DeploymentDatabaseCheckpointThreshold
DownlevelMachineDatabasePageSize
DownlevelMachineDatabaseJournalSizeLimit
DatabaseCorruptionFirstDetectedUptime
DeploymentDatabaseStatisticsLastUpdated
Policy.Normal.StatementMaxCount
ServiceWaitHintInterval
MachineDatabaseCheckpointThreshold
Policy.Aggressive.StatementMaxAge
DownlevelMachineDatabaseStatisticsLastUpdated
MachineDatabaseStatisticsLastUpdated
MachineDatabaseAutoCheckpoint
Options
BusyDelayBetweenRetries
Policy.Aggressive.StatementMinCount
Policy.Aggressive.ConnectionMaxCount
DeploymentDatabasePageSize
GCTimeToLiveExpiredInterval
MachineDatabase
DatabaseStatisticsUpdateMaintenanceTaskInterval
Policy.Normal.ConnectionMaxAge
DeploymentDatabaseFileChunkSize
GCChangelogsInterval
Policy.Aggressive.StatementMaxCount
DatabaseStatisticsUpdateMaxClockDelta
BusyTimeout
MaintenanceInterval
DownlevelMachineDatabaseAutoCheckpoint
MachineDatabaseCacheSize
onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
Required configuration data not found: %ws
CreateSetting: Subkey=%ls
OpenSetting: Subkey=%ls
ReadSetting: Name=%ls
WriteSetting: Name=%ls
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
ApplicationUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
ApplicationIdentity
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
CustomInstallWork
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
GetTempPath2W
Profile
Trace
Critical
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
Error
Warning
Information
Verbose
automatic index on PackageIdByAll(_PackageID)
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.StatementCount
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
Filename:%s, SQL:%s, TxCallerId:%hs %ls
OpenProcess() failed on %u of %u for %hs
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.FirstBusySQL
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
ExpandedSQL=%hs
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
DELETE FROM AppInstallerUri WHERE _AppInstallerUriID IN ( SELECT aiu._AppInstallerUriID FROM AppInstallerUri AS aiu INNER JOIN AppInstaller AS ai ON ai._AppInstallerID=aiu.AppInstaller INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=? AND pai._WorkId=0);
DELETE FROM AppInstallerUri WHERE _AppInstallerUriID IN ( SELECT aiu._AppInstallerUriID FROM AppInstallerUri AS aiu INNER JOIN AppInstaller AS ai ON ai._AppInstallerID=aiu.AppInstaller INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage-custom.cpp
DELETE FROM AutoUpdatePackage WHERE _AutoUpdatePackageID IN ( SELECT aup._AutoUpdatePackageID FROM AutoUpdatePackage AS aup INNER JOIN AppInstaller AS ai ON ai._AppInstallerID=aup.AppInstaller INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=? AND pai._WorkId=0);
DELETE FROM AutoUpdatePackage WHERE _AutoUpdatePackageID IN ( SELECT aup._AutoUpdatePackageID FROM AutoUpdatePackage AS aup INNER JOIN AppInstaller AS ai ON ai._AppInstallerID=aup.AppInstaller INNER JOIN PackageAppInstaller AS pai ON ai._AppInstallerID=pai.AppInstaller WHERE pai.Package=?1 AND (pai._WorkId=0 OR pai._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
[io:xClose] #%u xClose() failed
win32-noimpersonation
win32-longpath
[vfs:xOpen] #%u sqlite3_malloc() failed
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily-custom.cpp
DELETE FROM TargetDeviceFamily WHERE Package=? AND _WorkId=0;
DELETE FROM TargetDeviceFamily WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle-custom.cpp
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND _WorkId=0);
DELETE FROM OptionalBundle WHERE MainBundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM OptionalBundlePackage WHERE OptionalBundle IN (SELECT ob._OptionalBundleID FROM OptionalBundle AS ob INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage-custom.cpp
package.userExternalPath
package.machineExternalPath
package.mutablePath
package.currentDirectoryPath
onecore\base\appmodel\staterepository\dataaccesslayer\macros.cpp
package.effectivePath
package.installedPath
package.effectiveExternalPath
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
INSERT INTO PackageUserStatus (_Revision, PackageIdentity, User, Status, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DynamicAppUriHandler
DynamicAppUriHandlerGroup
EndOfLifePackage
MigratorPatch
AppExecutionAliasUser
ConnectedSet
ConnectedSetPackageFamily
PackageMachineStatus
PrimaryTile
ProvisionedPackage
ProvisionedPackageDeleted
MrtDefaultTile
PackageAppInstaller
PackageDependency
PackageFamilyPolicy
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
ProvisionedPackageExclude
SRJournal
SRJournalArchive
SecondaryTile
DELETE FROM XboxPackage WHERE Package=? AND _WorkId=0;
DELETE FROM XboxPackage WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE TileUniqueId=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND _WorkId=0;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE TileUniqueId=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileUserID, _Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM PrimaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND _WorkId=0;
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO PrimaryTileUser (_Revision, _WorkId, _Created, _Modified, User, ApplicationIdentity, State, TileUniqueId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, User=?, ApplicationIdentity=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND _WorkId=0;
UPDATE PrimaryTileUser SET _Revision=?, _WorkId=?, _Created=?, _Modified=?, User=?, ApplicationIdentity=?, State=?, TileUniqueId=?, _Dictionary=? WHERE _PrimaryTileUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM SecondaryTileUser WHERE User=? AND ApplicationIdentity=? AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND _WorkId=0;
DELETE FROM SecondaryTileUser WHERE _SecondaryTileUserID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _SecondaryTileUserID, _Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary FROM SecondaryTileUser WHERE User=? AND ApplicationIdentity=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO SecondaryTileUser (_Revision, _WorkId, _Created, _Modified, SecondaryTile, User, ApplicationIdentity, State, TileUniqueId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT _ApplicationIdentityID, _Revision, ApplicationUserModelId, _Dictionary FROM ApplicationIdentity WHERE ApplicationUserModelId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM ApplicationUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND _WorkId=0;
DELETE FROM SecondaryTile WHERE _SecondaryTileID=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO SecondaryTile (_Revision, _WorkId, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagedependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PrimaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Application=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND _WorkId=0;
SELECT _PrimaryTileID, _Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary FROM PrimaryTile WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PrimaryTile WHERE _PrimaryTileID=? AND _WorkId=0;
INSERT INTO PrimaryTile (_Revision, _WorkId, Application, Package, Flags, TileTemplate, TileId, Arguments, EditionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension-custom.cpp
DELETE FROM AppxExtension WHERE Package=? AND _WorkId=0;
DELETE FROM AppxExtension WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage-custom.cpp
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0);
DELETE FROM BundlePackage WHERE Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder-custom.cpp
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM PublisherCacheFolder WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
DELETE FROM HostRuntime WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND _WorkId=0);
DELETE FROM HostRuntime WHERE PackageExtension IN ( SELECT pe._PackageExtensionID FROM PackageExtension AS pe WHERE pe.Package=? AND (_WorkId=0 OR _WorkId=?));
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND _WorkId=0) AND hr._WorkId=0 AND pe._WorkId=0 AND dg._WorkId=0;
SELECT hr._HostRuntimeID, hr._Revision, hr._WorkId, hr.HostId, hr.PackageExtension, hr._Dictionary FROM HostRuntime AS hr INNER JOIN PackageExtension AS pe ON pe._PackageExtensionID=hr.PackageExtension INNER JOIN DependencyGraph AS dg ON dg.SupplierPackage=pe.Package WHERE dg.User=?1 AND hr.HostId=?2 AND dg.DependencyType=0x8 AND dg.DependentPackage IN (SELECT _PackageID FROM Package WHERE PackageFullName=?3 AND (_WorkId=0 OR _WorkId=?4)) AND (hr._WorkId=0 OR hr._WorkId=?4) AND (pe._WorkId=0 OR pe._WorkId=?4) AND (dg._WorkId=0 OR dg._WorkId=?4);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask-custom.cpp
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=? AND abt._WorkId=0 AND ae._WorkId=0);
DELETE FROM ApplicationBackgroundTask WHERE _BackgroundTaskID IN ( SELECT abt._BackgroundTaskID FROM ApplicationBackgroundTask AS abt INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=abt.Extension WHERE ae.Application=?1 AND (abt._WorkId=0 OR abt._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice-custom.cpp
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=? AND "as"._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppService WHERE _AppServiceID IN ( SELECT "as"._AppServiceID FROM AppService AS "as" INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID="as".Extension WHERE ae.Application=?1 AND ("as"._WorkId=0 OR "as"._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup-custom.cpp
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=? AND auhg._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandlerGroup WHERE _AppUriHandlerGroupID IN ( SELECT auhg._AppUriHandlerGroupID FROM AppUriHandlerGroup AS auhg INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auhg.Extension WHERE ae.Application=?1 AND (auhg._WorkId=0 OR auhg._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler-custom.cpp
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=? AND auh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppUriHandler WHERE _AppUriHandlerID IN ( SELECT auh._AppUriHandlerID FROM AppUriHandler AS auh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=auh.Extension WHERE ae.Application=?1 AND (auh._WorkId=0 OR auh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation-custom.cpp
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=? AND fta._WorkId=0 AND ae._WorkId=0);
DELETE FROM FileTypeAssociation WHERE _FileTypeAssociationID IN ( SELECT fta._FileTypeAssociationID FROM FileTypeAssociation AS fta INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=fta.Extension WHERE ae.Application=?1 AND (fta._WorkId=0 OR fta._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol-custom.cpp
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=? AND p._WorkId=0 AND ae._WorkId=0);
DELETE FROM Protocol WHERE _ProtocolID IN ( SELECT p._ProtocolID FROM Protocol AS p INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=p.Extension WHERE ae.Application=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost-custom.cpp
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=? AND aeh._WorkId=0 AND ae._WorkId=0);
DELETE FROM AppExtensionHost WHERE _AppExtensionHostID IN ( SELECT aeh._AppExtensionHostID FROM AppExtensionHost AS aeh INNER JOIN ApplicationExtension AS ae ON ae._ApplicationExtensionID=aeh.Extension WHERE ae.Application=?1 AND (aeh._WorkId=0 OR aeh._WorkId=?2) AND (ae._WorkId=0 OR ae._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryserialization.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest-custom.cpp
SELECT EXISTS(SELECT 1 FROM ApplicationProperty AS ap INNER JOIN Application AS a ON a._ApplicationID=ap.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ap.Name=?2 AND pu.User=?1 AND ap._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM ApplicationProperty AS ap INNER JOIN Application AS a ON a._ApplicationID=ap.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ap.Name=?2 AND pu.User=?1 AND (ap._WorkId=0 OR ap._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
DELETE FROM ApplicationProperty WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationProperty WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty-custom.cpp
SELECT ap._ApplicationPropertyID, ap._Revision, ap._WorkId, ap.Application, ap."Index", ap.Name, ap._Dictionary FROM ApplicationProperty AS ap INNER JOIN Application AS a ON a._ApplicationID=ap.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ap.Name=?2 AND pu.User=?1 AND ap._WorkId=0 AND a._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT ap._ApplicationPropertyID, ap._Revision, ap._WorkId, ap.Application, ap."Index", ap.Name, ap._Dictionary FROM ApplicationProperty AS ap INNER JOIN Application AS a ON a._ApplicationID=ap.Application INNER JOIN Package AS p ON p._PackageID=a.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE ap.Name=?2 AND pu.User=?1 AND (ap._WorkId=0 OR ap._WorkId=?3) AND (a._WorkId=0 OR a._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile-custom.cpp
DELETE FROM ApplicationContentUriRule WHERE Application=? AND _WorkId=0;
DELETE FROM ApplicationContentUriRule WHERE Application=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource-custom.cpp
DELETE FROM Resource WHERE Package=? AND _WorkId=0;
DELETE FROM Resource WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency-custom.cpp
DELETE FROM NamedDependency WHERE Package=? AND _WorkId=0;
DELETE FROM NamedDependency WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT EXISTS(SELECT 1 FROM PackageProperty AS pp INNER JOIN Package AS p ON p._PackageID=pp.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pp.Name=?2 AND pu.User=?1 AND pp._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageProperty AS pp INNER JOIN Package AS p ON p._PackageID=pp.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pp.Name=?2 AND pu.User=?1 AND (pp._WorkId=0 OR pp._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3) LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty-custom.cpp
SELECT pp._PackagePropertyID, pp._Revision, pp._WorkId, pp.Package, pp."Index", pp.Name, pp._Dictionary FROM PackageProperty AS pp INNER JOIN Package AS p ON p._PackageID=pp.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pp.Name=?2 AND pu.User=?1 AND pp._WorkId=0 AND p._WorkId=0 AND pu._WorkId=0;
SELECT pp._PackagePropertyID, pp._Revision, pp._WorkId, pp.Package, pp."Index", pp.Name, pp._Dictionary FROM PackageProperty  AS pp INNER JOIN Package AS p ON p._PackageID=pp.Package INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE pp.Name=?2 AND pu.User=?1 AND (pp._WorkId=0 OR pp._WorkId=?3) AND (p._WorkId=0 OR p._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3);
DELETE FROM PackageProperty WHERE Package=? AND _WorkId=0;
DELETE FROM PackageProperty WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource-custom.cpp
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND _WorkId=0));
DELETE FROM BundleResource WHERE BundlePackage IN (SELECT bp._BundlePackageID FROM BundlePackage AS bp WHERE bp.Bundle IN (SELECT b._BundleID FROM Bundle AS b WHERE b.Package=?1 AND (_WorkId=0 OR _WorkId=?2)));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource-custom.cpp
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND obp._WorkId=0 AND ob._WorkId=0 AND b._WorkId=0);
DELETE FROM OptionalBundleResource WHERE OptionalBundlePackage IN (SELECT obp._OptionalBundlePackageID FROM OptionalBundlePackage AS obp INNER JOIN OptionalBundle AS ob ON ob._OptionalBundleID=obp.OptionalBundle INNER JOIN Bundle AS b ON b._BundleID=ob.MainBundle WHERE b.Package=?1 AND (obp._WorkId=0 OR obp._WorkId=?2) AND (ob._WorkId=0 OR ob._WorkId=?2) AND (b._WorkId=0 OR b._WorkId=?2));
DELETE FROM MrtSharedPri WHERE Package=? AND _WorkId=0;
DELETE FROM MrtSharedPri WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork-custom.cpp
DELETE FROM CustomInstallWork WHERE Package=? AND _WorkId=0;
DELETE FROM CustomInstallWork WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
[DatabaseCache.Get(Hit)] #%u DatabaseCache %p: Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
[DatabaseCache.Get(Miss)] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
[DatabaseCache.Add] #%u Database %p: StatementCache %p: Cache Size/Hits/Misses %u/%llu/%llu
[pre-DatabaseCache.Get] #%u DatabaseCache %p: Cache Size/Hits/Misses %u/%llu/%llu: Filename %s
Clear
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\macrosevaluators.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile-custom.cpp
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=? AND mdt._WorkId=0 AND dt._WorkId=0);
DELETE FROM MrtDefaultTile WHERE _MrtDefaultTileID IN ( SELECT mdt._MrtDefaultTileID FROM MrtDefaultTile AS mdt INNER JOIN DefaultTile AS dt ON dt._DefaultTileID=mdt.DefaultTile WHERE dt.Application=?1 AND (mdt._WorkId=0 OR mdt._WorkId=?2) AND (dt._WorkId=0 OR dt._WorkId=?2));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller-custom.cpp
DELETE FROM PackageAppInstaller WHERE Package=? AND _WorkId=0;
DELETE FROM PackageAppInstaller WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
S}"Yb
onecore\base\appmodel\packageinuse\packageinusehelper.cpp
Failed to delete stale indicator file %ws
\AC\PackageInUseState\
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilesstorehandler.cpp
WritePrimaryTiles
DetectAndFixPrimaryTileUserConstraintUniqueErrors
MigrateSecondaryTilesFromTDL
GetTileUniqueIdFromTDL
UpdatePrimaryTileUser
AddPrimaryTileUserRecord
CreatePrimaryTileUser
RemoveTilesForRemovedApplicationsForUserAndPackage
RemoveSecondaryTilesForUserAndPackage
RemoveSecondaryTilesForUserAndApplicationIdentity
RemovePrimaryTileForUserAndApplicationIdentity
RemovePrimaryTilesForUserAndPackage
AddOrUpdatePrimaryTileForUserAndApplication
ReIndexTilesForPackage
AddOrUpdatePrimaryTilesForUserAndPackage
CreateTilesForAllRegisteredPackagesForUser
RemoveTilesForRemovedApplicationsForUser
CreateTilesForAllRegisteredPackages
RemovePrimaryTileForUser
RemoveSecondaryTilesForUser
RemovePrimaryTilesForPackage
RegisterPrimaryTilesForUser
AddPrimaryTilesForPackage
CreateInstance
MigrationRequired
SOFTWARE\Microsoft\Windows NT\CurrentVersion\TileDataModel\Migration
Completed
PrimaryBaseTile
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tdlmigrationhelper.cpp
Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy!App
Microsoft.Windows.ShellExperienceHost_cw5n1h2txyewy!App
Microsoft.Windows.Cortana_cw5n1h2txyewy!CortanaUI
MigrateSecondaryTilesFromTdl
TileStore
onecoreuap\internal\base\inc\TdlMigration.h
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\tilestorepackageinfo.cpp
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxtileshandler.cpp
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\xmlqueryhelper.cpp
%f,%f,%f
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\appxvisualelementsparser.cpp
%1.8e;%1.8e;%1.8e;%1.8e;%1.8e;%1.8e
NoUIEntryPoints
NoUIEntryPoints-DesignMode
./m:VisualElements
//*[local-name() = 'Extension' and @Category = 'windows.settingsApp']
logoOnly
*[local-name()='VisualElements']/*[local-name()='DefaultTile']/@ShowName
allLogos
wideLogoOnly
./m3:VisualElements
./m2:VisualElements
./*[local-name()='VisualElements']
onecoreuap\base\appmodel\tiledatarepository\tilesstorehandler\src\staterepositoryutils.cpp
Software\Microsoft\Windows\CurrentVersion\Store\ContentId
Microsoft Enhanced RSA and AES Cryptographic Provider
%s:%s:%s
win32
wp8xappx
win8xappx
\WcifsPort
wcifs Outer Instance
wcifs Instance
\\.\FltMgr
invalid window size
unknown compression method
need dictionary
incorrect header check
incorrect data check
insufficient memory
data error
incompatible version
buffer error
stream end
stream error
file error
invalid block type
too many length or distance symbols
invalid stored block lengths
invalid bit length repeat
oversubscribed dynamic bit lengths tree
oversubscribed literal/length tree
incomplete dynamic bit lengths tree
oversubscribed distance tree
incomplete literal/length tree
empty distance tree with lengths
incomplete distance tree
invalid distance code
invalid literal/length code
onecoreuap\admin\appmodel\enterprisemodernappmanagement\lib\autoupdatesettingspersistence\autoupdatesettingspersistence.cpp
Windows.Internal.StateRepository.AppInstallerUri
AutoUpdateSettings
OnLaunchUpdateCheck
HoursBetweenUpdateChecks
UpdateBlocksActivation
PackageSource
AutomaticBackgroundTask
Software\Microsoft\EnterpriseModernAppManagement\AppUpdateSettings
ForceUpdateFromAnyVersion
Disable
EnterpriseModernAppManagementAppUpdateSettings
ShowPrompt
AutoRepair
onecoreuap\admin\appmodel\enterprisemodernappmanagement\lib\storeapputil\appmodelstorepersistencelayer.cpp
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationProperty
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationExtension
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.DependencyGraph
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Database
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Application
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Activation
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageUser
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageProperty
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.User
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Package
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Dictionary
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageFamily
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageExtension
c&UDoN
kMHYz[
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.DependencyGraph>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.DependencyGraph>
Windows.Foundation.Uri
Windows.Storage.Streams.RandomAccessStreamReference
DependencyGraph::ExistsByUser
DependencyGraph::ExistsBySupplierPackage
DependencyGraph::ExistsByUserAndDependentPackageAndDependencyType
DependencyGraph::ExistsByUserAndDependentPackage
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\dependencygraph.cpp
DependencyGraph::ExistsByDependencyType
DependencyGraph::Exists
DependencyGraph::ExistsByUserAndDependentPackageFullNameAndHasExternalLocation
DependencyGraph::ExistsByUserAndDependentPackageAndSupplierPackageFamilyName
DependencyGraph::Get
DependencyGraph::ExistsByUserAndSupplierPackage
DependencyGraph::ExistsByUserAndDependentPackageAndHasExternalLocation
DependencyGraph::ExistsByUserAndDependentPackageAndDependencyTypeAnd_DependencyGraphID
DependencyGraph::ExistsByUserAndDependentPackageAndSupplierPackage
DependencyGraph::ExistsByUserAndDependentPackageAndIndex
DependencyGraph::FindByUser
DependencyGraph::FindBySupplierPackage
DependencyGraph::FindByUserAndDependentPackage_SortedByIndex
DependencyGraph::FindByUserAndDependentPackage
DependencyGraph::GetMainPackageDependencyByUserAndSupplierPackage
DependencyGraph::GetByUserAndDependentPackageAndSupplierPackage
DependencyGraph::FindByDependencyType
DependencyGraph::Find
DependencyGraph::FindByUserAndDependentPackageAndDependencyTypeAnd_DependencyGraphID
DependencyGraph::FindByUserAndDependentPackageAndDependencyType
DependencyGraph::FindByUserAndSupplierPackage
DependencyGraph::FindByUserAndDependentPackageAndIndex
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\WinRT.h
PackageProperty::ExistsByUserAndName
PackageProperty::Get
PackageProperty::ExistsByPackageAndIndex
PackageProperty::ExistsByPackageAndName
PackageProperty::ExistsByName
PackageProperty::ExistsByPackage
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\packageproperty.cpp
PackageProperty::Exists
PackageProperty::FindByPackageAndName
PackageProperty::FindByUserAndName
PackageProperty::FindByName
PackageProperty::FindByPackage
PackageProperty::GetByPackageAndIndex
PackageProperty::Find
MT,tGu
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageProperty>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageProperty>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageUser>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageUser>
PackageUser::ExistsByPackage
PackageUser::ExistsByPackageFamilyNameAndPackageType
PackageUser::Exists
PackageUser::ExistsByAppDataVolume
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\packageuser.cpp
PackageUser::ExistsByUserAndPackageFullName
PackageUser::ExistsByPackageFullNameAndDeploymentState
PackageUser::ExistsByUserAndPackage
PackageUser::ExistsByUserAndPackageFamilyNameAndPackageType
PackageUser::ExistsByUserAndDeploymentState
PackageUser::ExistsByUserAndDeploymentStateAndIsExplicitlyInstalled
PackageUser::ExistsByPackageFullName
PackageUser::ExistsByUser
PackageUser::FindByPackageFamilyNameAndPackageType
PackageUser::FindByPackageFullName
PackageUser::FindByAppDataVolume
PackageUser::FindByPackage
PackageUser::GetByUserAndPackageFullName
PackageUser::Find
PackageUser::Get
PackageUser::GetByUserAndPackage
PackageUser::GetMainPackageFullNameByUserAndPackageFamilyName
PackageUser::FindByUserAndDeploymentStateAndIsExplicitlyInstalled
PackageUser::FindByUserAndPackageFamilyNameAndPackageType
PackageUser::FindByUser
PackageUser::FindByUserAndDeploymentState
Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Transaction
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\database.cpp
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\activation.cpp
Activation::Find
Activation::GetByActivationKey
Activation::Get
Activation::ExistsByActivationKey
Activation::Exists
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Activation>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Activation>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationProperty>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationProperty>
ApplicationProperty::ExistsByName
ApplicationProperty::ExistsByApplicationAndName
ApplicationProperty::ExistsByApplicationAndIndex
ApplicationProperty::ExistsByApplication
ApplicationProperty::Exists
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\applicationproperty.cpp
ApplicationProperty::FindByUserAndName
ApplicationProperty::FindByName
ApplicationProperty::FindByApplicationAndName
ApplicationProperty::FindByApplication
ApplicationProperty::Find
ApplicationProperty::GetByApplicationAndIndex
ApplicationProperty::Get
ApplicationProperty::ExistsByUserAndName
ApplicationExtension::ExistsByUserAndCategory
ApplicationExtension::ExistsByCategory
ApplicationExtension::ExistsByApplicationAndIndex
ApplicationExtension::ExistsByApplicationAndCategory
ApplicationExtension::ExistsByApplication
ApplicationExtension::Exists
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\applicationextension.cpp
ApplicationExtension::FindByCategory
ApplicationExtension::FindByApplicationAndCategory
ApplicationExtension::FindByApplication
ApplicationExtension::Find
ApplicationExtension::GetByUserAndApplicationUserModelIdAndProtocolName
ApplicationExtension::GetByUserAndApplicationUserModelIdAndFileType
ApplicationExtension::GetByApplicationAndIndex
ApplicationExtension::Get
ApplicationExtension::FindByUserOrDefaultAccountAndPackageFullNameAndProtocolName
ApplicationExtension::FindByUserOrDefaultAccountAndPackageFullNameAndFileType
ApplicationExtension::FindByUserOrDefaultAccountAndCategory
ApplicationExtension::FindByUserAndCategoryAndPackageFullName
ApplicationExtension::FindByUserAndCategoryAndApplicationUserModelId
ApplicationExtension::FindByUserAndCategory
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationExtension>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.ApplicationExtension>
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\packagefamily.cpp
PackageFamily::Get
PackageFamily::GetByNameAndPublisherId
PackageFamily::GetByPackageFamilyName
PackageFamily::GetByUserAndNameAndPublisherId
PackageFamily::GetByUserAndPackageFamilyName
PackageFamily::Find
PackageFamily::FindByName
PackageFamily::FindByPackageSID
PackageFamily::Exists
PackageFamily::ExistsByName
PackageFamily::ExistsByNameAndPublisherId
PackageFamily::ExistsByPackageFamilyName
PackageFamily::ExistsByPackageSID
PackageFamily::ExistsByPublisherId
PackageFamily::ExistsByUserAndNameAndPublisherId
PackageFamily::ExistsByUserAndPackageFamilyName
PackageFamily::FindByPublisherId
PackageFamily::FindByUser
PackageFamily::FindByUserAndPublisherId
c&UDoN
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageFamily>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageFamily>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Application>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Application>
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\application.cpp
Application::Exists
Application::ExistsByApplicationUserModelId
Application::ExistsByEditionId
Application::ExistsByPackage
Application::ExistsByUserAndPackageFamilyNameAndPackageType
Application::ExistsByUserAndPackageFullName
Application::ExistsByUserOrDefaultAccountAndApplicationUserModelId
Application::ExistsByUserOrDefaultAccountAndPackageFamilyNameAndPackageType
Application::ExistsByUserOrDefaultAccountAndPackageFullName
Application::Get
Application::GetByPackageAndPackageRelativeApplicationId
Application::GetByUserAndApplicationId
Application::ExistsByPackageAndPackageRelativeApplicationId
Application::ExistsByPackageFamilyName
Application::ExistsByPackageFullName
Application::ExistsByUserAndApplicationUserModelId
Application::ExistsByUserAndPackage
Application::ExistsByUserAndPackageFamily
Application::ExistsByUserAndPackageFamilyAndPackageType
Application::ExistsByUserAndPackageFamilyName
Application::FindByUserAndAnyAppExecutionAlias
Application::FindByUserAndAppListEntry
Application::FindByUserAndPackage
Application::FindByUserAndPackageFamily
Application::FindByUserAndPackageFamilyAndPackageType
Application::FindByUserAndPackageFamilyName
Application::FindByUserAndPackageFamilyNameAndAppListEntry
Application::FindByUserAndPackageFamilyNameAndPackageType
Application::GetByUserAndApplicationUserModelId
Application::Find
Application::FindByApplicationUserModelId
Application::FindByEditionId
Application::FindByPackage
Application::FindByPackageFamilyName
Application::FindByPackageFullName
Application::FindByUser
Application::GetApplicationTypeByUserAndApplicationUserModelId
Application::FindByUserAndPackageFullName
Application::FindByUserOrDefaultAccount
Application::FindByUserOrDefaultAccountAndApplicationID
Application::FindByUserOrDefaultAccountAndApplicationUserModelId
Application::FindByUserOrDefaultAccountAndAppListEntry
Application::FindByUserOrDefaultAccountAndHostId
Application::FindByUserOrDefaultAccountAndPackageFamilyNameAndPackageType
Application::FindByUserOrDefaultAccountAndPackageFullName
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\package.cpp
Package::Exists
Package::ExistsByEditionId
Package::ExistsByNameAndArchitectureAndVersionAndResourceIdAndPublisherId
Package::ExistsByPackageFamily
Package::ExistsByPackageFullName
Package::ExistsBySourceBundle
Package::ExistsBySourceBundleAndPackageType
Package::ExistsByUserAndApplicationUserModelId
Package::ExistsByUserAndNameAndArchitectureAndVersionAndResourceIdAndPublisherId
Package::ExistsByUserAndPackageFamily
Package::ExistsByUserAndPackageFamilyAndPackageType
Package::ExistsByUserAndPackageFamilyName
Package::ExistsByPackageFamilyAndPackageType
Package::ExistsByPackageFamilyAndPackageTypeAndResourceId
Package::ExistsByPackageFamilyAndPackageTypeAndResourceIdAndVersion
Package::ExistsByPackageFamilyAndResourceId
Package::ExistsByPackageFamilyAndResourceIdAndArchitecture
Package::ExistsByPackageFamilyAndResourceIdAndArchitectureAndVersion
Package::ExistsByPackageFamilyName
Package::ExistsByPackageFamilyNameAndPackageType
Package::GetByNameAndArchitectureAndVersionAndResourceIdAndPublisherId
Package::GetByPackageFamilyAndResourceIdAndArchitectureAndVersion
Package::GetByPackageFullName
Package::GetByUserAndApplicationUserModelId
Package::GetByUserAndNameAndArchitectureAndVersionAndResourceIdAndPublisherId
Package::GetByUserAndPackageID
Package::GetByUserAndPackageFullName
Package::GetByUserOrDefaultAccountAndPackageFullName
Package::ExistsByUserAndPackageFamilyNameAndPackageType
Package::ExistsByUserAndPackageFullName
Package::ExistsByUserAndPublisherId
Package::ExistsByUserOrDefaultAccountAndApplicationUserModelId
Package::ExistsByUserOrDefaultAccountAndPackageFamilyNameAndPackageType
Package::ExistsByUserOrDefaultAccountAndPackageFullName
Package::Get
Package::GetByInstalledLocation
Package::FindByPackageFamilyAndResourceIdAndArchitecture
Package::FindByPackageFamilyName
Package::FindByPackageFamilyNameAndPackageType
Package::FindByPackageOrigin
Package::FindBySourceBundle
Package::FindBySourceBundleAndPackageType
Package::FindByUser
Package::FindByUserAndPackageFamily
Package::GetMainPackageDependencyByUserAndSupplierPackage
Package::Find
Package::FindByEditionId
Package::FindByPackageFamily
Package::FindByPackageFamilyAndPackageType
Package::FindByPackageFamilyAndPackageTypeAndResourceId
Package::FindByPackageFamilyAndPackageTypeAndResourceIdAndVersion
Package::FindByPackageFamilyAndResourceId
Package::FindByUserOrDefaultAccountAndPackageFullName
Package::FindByUserOrDefaultAccountAndPackageID
Package::FindBundleAndMainOrOptionalNotPartOfBundleByUserAndNotOtherUser_SortedByPackageType
Package::FindMainOrOptionalByUserAndNotByFamilyAndOtherUser
Package::GetPackageOriginByUserAndPackageFullName
Package::GetStagedPackageOriginByPackageFullName
Package::GetEffectiveSupportedUsersByApplicationUserModelId
Package::GetEffectiveSupportedUsersByPackageFullName
Package::FindByUserAndPackageFamilyAndPackageType
Package::FindByUserAndPackageFamilyName
Package::FindByUserAndPackageFamilyNameAndPackageType
Package::FindByUserAndPackageTypeAndNotOtherUser
Package::FindByUserAndPublisherId
Package::FindByUserOrDefaultAccount
Package::FindByUserOrDefaultAccountAndApplicationUserModelId
Package::FindByUserOrDefaultAccountAndPackageFamilyNameAndPackageType
Package::GetEffectiveIsUninstallableByPackageFullName
Package::FindPackageFullNamesByUserSidAndPackageTypeAndTargetDeviceFamily
Package::GetEffectiveLocationByUserAndPackage
Package::GetEffectiveLocationByUserAndPackageFullName
Package::GetEffectiveLocationByUserAndApplicationUserModelId
kMHYzn
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Package>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.Package>
User::Exists
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\user.cpp
User::Get
User::ExistsByUserSid
User::GetEveryone
User::GetDefaultAccount
User::Find
User::GetByUserSid
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.User>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.User>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageExtension>
Windows.Foundation.Collections.IVector`1<Windows.Internal.ApplicationModel.StateRepository.DataAccessLayer.PackageExtension>
PackageExtension::Exists
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\packageextension.cpp
PackageExtension::ExistsByPackage
PackageExtension::ExistsByCategory
PackageExtension::FindByUserAndCategory
PackageExtension::FindByPackageAndCategory
PackageExtension::ExistsByPackageAndIndex
PackageExtension::ExistsByPackageAndCategory
PackageExtension::Get
PackageExtension::ExistsByUserAndCategory
PackageExtension::Find
PackageExtension::GetByPackageAndIndex
PackageExtension::FindByPackage
PackageExtension::FindByCategory
Method
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\winrt-dictionary.cpp
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\winrt-string.cpp
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\localize.cpp
TargetSize
nan(ind)
nan(snan)
CoIncrementMTAUsage
DllGetActivationFactory
gffffff
onecore\base\appmodel\staterepository\winrt\inproc\dataaccesslayer\lib\winrt-results.cpp
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IVector`1<String>
Windows.Internal.Management.Deployment.OSIntegration.XMLDOMElement
Windows.Internal.Management.Deployment.OSIntegration.DehRegistrationTable
Windows.Internal.Management.Deployment.OSIntegration.DehRequest
OSIntegration.DEH.ComInprocHandlerClassDllRegistration
OSIntegration.DEH.ComInterfaceRegistration
OSIntegration.DEH.ComExeServerRegistration
OSIntegration.DEH.ComServiceClassRegistration
OSIntegration.DEH.ComSurrogateServerRegistration
OSIntegration.DEH.ComSurrogateClassRegistration
OSIntegration.DEH.ComProgIdRegistration
OSIntegration.DEH.ComTreatAsClassRegistration
OSIntegration.DEH.ComInprocServerClassDllRegistration
X~zjg
AKw]I
Windows.Foundation.ExeServerActivatableClassRegistration
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Management.Deployment.OSIntegration.IDehRegistration>
Windows.Foundation.Collections.IVector`1<Windows.Internal.Management.Deployment.OSIntegration.IDehRegistration>
OSIntegration.DEH.ComProxyStubRegistration
OSIntegration.DEH.ComServiceServerRegistration
OSIntegration.DEH.PackagedComCatalogCollectorForUserOrSystemRegister
OSIntegration.DEH.ComManagedInprocServerClassRegistration
OSIntegration.DEH.ComExeClassRegistration
m'w8Z
Windows.Foundation.ExeServerRegistration
OSIntegration.DEH.ComTypeLibRegistration
OSIntegration.DEH.PackagedComCatalogCollector
;~ rB
AKw]I
onecore\admin\appmodel\osim\src\winrt\lib\dehrequest.cpp
Windows.Foundation.Collections.IVector`1<Windows.Internal.Management.Deployment.OSIntegration.DehPackagePair>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Management.Deployment.OSIntegration.DehPackagePair>
Windows.Internal.Management.Deployment.OSIntegration.DehPackagePair
onecore\admin\appmodel\osim\src\winrt\lib\xmldomelement.cpp
Windows.Foundation.Collections.IVector`1<Windows.Internal.Management.Deployment.OSIntegration.XMLDOMElement>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Management.Deployment.OSIntegration.XMLDOMElement>
Windows.Internal.Management.Deployment.OSIntegration.DehPackage
5_onecore\admin\appmodel\osim\src\winrt\lib\dehpackage.cpp
Windows.Internal.Management.Deployment.OSIntegration.Package
Windows.Foundation.Collections.IVector`1<Windows.Internal.Management.Deployment.OSIntegration.ComHelper>
Windows.Foundation.Collections.IIterator`1<Windows.Internal.Management.Deployment.OSIntegration.ComHelper>
Windows.Internal.Management.Deployment.OSIntegration.ComHelper
Windows.Internal.Management.Deployment.OSIntegration.PackageOptions
Windows.Internal.Management.Deployment.OSIntegration.UserDataInformation
Windows.Internal.Management.Deployment.OSIntegration.PackageLocation
Windows.Internal.Management.Deployment.OSIntegration.PackageInstallInformation
Windows.Internal.Management.Deployment.OSIntegration.Origin
Windows.Internal.Management.Deployment.OSIntegration.PackageType
Windows.Internal.Management.Deployment.OSIntegration.PackageLocalization
Windows.Internal.Management.Deployment.OSIntegration.PackageIdentity
Windows.Internal.Management.Deployment.OSIntegration.ManifestInformation
onecore\admin\appmodel\osim\src\winrt\lib\comhelper.cpp
onecore\admin\appmodel\OSIM\src\deh\appx\common\mocomhelper.hpp
Windows.Internal.Management.Deployment.OSIntegration.AppxManifestReader
onecore\admin\appmodel\osim\src\winrt\lib\appxmanifestreader.cpp
1.3.6.1.4.1.311.76.3.1
1.3.6.1.4.1.311.10.3.6
Signing Certificate specifies invalid combination of both Windows Store and Component EKUs
onecore\admin\appmodel\appxsignatureorigin\appxsignatureorigin.cpp
CertGetEnhancedKeyUsage failed when sizing EKU buffer
CertVerifyCertificateChainPolicy failed
1.3.6.1.4.1.311.10.3.21
MicrosoftTelemetryAssertTriggeredUM
ntdll.dll
onecore\base\appmodel\statemanager\apiset\lib\statespace.cpp
RtlStringCchCatW %ws size %u
RtlStringCchCopyW %ws size %u
GetStateRootSubfolderPath SETTINGS
GetSubfolderPath %ws size %u
GetStateRootPath %ws size %u
RtlStringCchCopyW
GetUserProfileFolderPath %u
AddRestrictedAppContainerPathIfNeccessary
RtlStringCchCatW Family
RtlStringCchCatW PROFILE
path %ws %u %u
RtlStringCchCatW PREFIX %u
\AC\#!
\Packages\
Allocate
GetStateRootPathInternal
RtlStringCchCatW RAC %u
onecore\base\appmodel\StateManager\ApiSet\Inc\StateHeap.hpp
WintrustGetRegPolicyFlags
wintrust.dll
TrustedAppRoot
onecore\printscan\appxpackaging\lib\crypto\src\signaturecheckhelper.cpp
onecore\printscan\appxpackaging\lib\crypto\src\appxindirectdatareader.cpp
AXEHAXEFAXEBAXPCAXBMAXCI
AXPCAXCDAXCTAXBMAXCI
onecore\printscan\appxpackaging\lib\crypto\src\appxsignatureorigininternal.cpp
onecore\printscan\appxpackaging\lib\crypto\src\hashengine.cpp
onecore\printscan\AppxPackaging\lib\Core\src\StreamHelper.hpp
onecore\printscan\appxpackaging\lib\crypto\src\hashprovider.cpp
com3.
com2.
com1.
com7.
com6.
com5.
com4.
lpt9.
lpt8.
lpt7.
onecore\base\appmodel\runtime\src\monikerinternal.cpp
.xn--
lpt2.
lpt1.
com9.
com8.
lpt6.
lpt5.
lpt4.
lpt3.
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
onecore\base\appmodel\runtime\src\packagestatusinternal.cpp
WofShouldCompressBinaries
wofutil.dll
onecore\base\appmodel\common\autocotaskmemstring.cpp
StateSchema
\Schemas
onecore\base\appmodel\common\stateschema.cpp
PublisherFolders
Classes\CLSID\{AA00FB1F-4EC7-4b09-BDC1-E5D88D291440}
onecore\base\appmodel\common\appxuninstallblocklist.cpp
EnterpriseUninstallBlockList
onecore\base\appmodel\common\base32encoding.cpp
0123456789abcdefghjkmnpqrstvwxyz
Failed to create full name for folder %ws
Failed to get final path for folder %ws
Failed to get file attributes from handle for %ws
onecore\base\appmodel\common\fileutils.cpp
Failed to get file handle for folder %ws
Failed to set file delete disposition for folder %ws
Failed to set file delete disposition for file %ws
Failed to get handle for %ws
Failed to create handle for %ws
Failed to create full name for %ws and %ws
Failed to get file handle for %ws
Failed in RemoveDirectoryTreeSafelyByHandle for folder %ws
Failed to get file attributes from handle for folder %ws
File redirection found for %ws and %ws
Failed to get file final path for folder %ws
onecore\base\appmodel\packageacquisitioninfo\packageacquisitioninfo.cpp
Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppModel\SystemAppData\
onecore\admin\appmodel\packagerepository\staterepository\tablehelper.cpp
onecore\admin\appmodel\packagerepository\common\applicationextras.cpp
*[local-name()='VisualElements']/*[local-name()='SplashScreen']/@*[local-name()='Optional']
*[local-name()='VisualElements']/*[local-name()='SplashScreen']
*[local-name()='VisualElements']
/*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application' and @Id='%s']
*[local-name()='VisualElements']/*[local-name()='InitialRotationPreference']/*[local-name()='Rotation']
width500
width320
BadgeAndTileText
PortraitFlipped
Landscape
Portrait
Preference
EntryPoint
AppListEntry
*[local-name()='VisualElements']/*[local-name()='ApplicationView']
*[local-name()='VisualElements']/*[local-name()='LockScreen']
Badge
BadgeLogo
Notification
MinWidth
LandscapeFlipped
onecore\admin\appmodel\common\actionlist.cpp
onecore\admin\appmodel\common\signaturetools.cpp
OSRollbackPackages
Ignoring failure to delete OSRollback packages registry
onecore\admin\appmodel\common\downlevelhelper.cpp
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel
%s\%d
SOFTWARE\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\Appmodel\ShellRefresh
onecore\admin\appmodel\common\shellrefresh.cpp
rundll32.exe AppXDeploymentExtensions.OneCore.dll,ShellRefresh
MACHINE\
onecore\admin\appmodel\common\removeregistrytree.cpp
Failed to delete the file %ws
onecore\admin\appmodel\recovery\recovery.cpp
.recovery
onecore\admin\appmodel\osim\src\deh\appx\common\package.cpp
Microsoft.GameOS
: does not have a resources.pri file or could not create a resource manager
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='PublisherDisplayName']
onecore\admin\appmodel\osim\src\deh\appx\common\dehrequest.cpp
Windows.AppService
Windows.UpdateTask
Windows.PreInstalledConfigTask
Windows.BackgroundTasks
Windows.PrintSupportWorkflow
Windows.Launch
onecore\admin\appmodel\osim\src\deh\appx\common\mocomhelper.cpp
Windows.UserDataTaskDataProvider
Windows.EmailDataProvider
Windows.ContactDataProvider
Windows.AppointmentDataProvider
Windows.PrintSupportExtension
Windows.PosPaymentConnector
Windows.BarcodeScannerProvider
Windows.PrintWorkflowBackgroundTask
onecore\admin\appmodel\osim\src\deh\appx\common\MoCOMHelper.hpp
./*[local-name()='BackgroundTasks']
uap4:SupportsMultipleInstances
./*[local-name()='AppService']
Subsystem
SupportsMultipleInstances
ExeHost
NavigateTo
AppObject.RuntimeType
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='DisplayName']
../..
AppObject.Aliased
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Logo']
/*[local-name()='Package']/*[local-name()='Properties']/*[local-name()='Description']
%windir%\system32\gamecoreproxyapp.exe
eraproxyapp.exe
AppObject.EntryPoint
gamecoreproxyapp.exe
wwahost.exe
%windir%\system32\eraproxyapp.exe
%windir%\syswow64\aghost.exe
<Error message string not found>
onecore\admin\appmodel\osim\src\deh\appx\common\usertoken.cpp
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] | /*[local-name()='Package']/*[local-name()='Applications']/*[local-name()='Application']/*[local-name()='Extensions']/*[local-name()='Extension']
onecore\admin\appmodel\osim\src\deh\appx\common\tools.cpp
onecore\admin\appmodel\osim\src\deh\appx\common\extensionbundle.cpp
CreatePackagedComCatalogCollectorForUserOrSystemRegister(userToken, &packagedComCatalogCollectorForUserOrSystemRegister)
CreateRegistryCompatibilityCollector(&registryCompatibilityCollector)
CreateRegistryCompatibilityCollectorForUserOrSystemRegister(userToken, &registryCompatibilityCollectorForUserOrSystemRegister)
onecore\admin\appmodel\osim\src\deh\winrt\collector\collectors.cpp
CreateActivationCatalogCollectorForUser(&activationCatalogCollectorForUser)
CreateExtensionCatalogCollector(&extensionCatalogCollector)
CreatePackagedComCatalogCollector(&packagedComCatalogCollector)
CreateActivationCatalogCollector(&activationCatalogCollector)
OSIntegration::DEH::Collectors::RuntimeClassInitialize
OSIntegration.DEH.Collectors
RegistryMapFactory< IExeServerRegistration * >::RegistryMap::Make(&_exeServers)
_exeServers->Insert(serverName.Get(), static_cast<IExeServerRegistration*>(server), &replaced)
_outOfProcessActivatableClasses->Insert(acid.Get(), static_cast<IExeServerActivatableClassRegistration*>(activatableClass), &replaced)
server
OSIntegration::DEH::ActivationCatalogCollector::AddServerRegistration
serverName.Initialize(server->get_ServerName())
OSIntegration::DEH::ActivationCatalogCollector::AddOutOfProcessActivatableClassRegistration
RegistryMapFactory< IExeServerActivatableClassRegistration * >::RegistryMap::Make(&_outOfProcessActivatableClasses)
activatableClass
onecore\admin\appmodel\osim\src\deh\winrt\collector\activationcatalogverifier.cpp
acid.Initialize(activatableClass->get_ActivatableClassId())
_exeServers->Lookup(serverName, &registration)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveOutOfProcessActivatableClassRegistration
_outOfProcessActivatableClasses->Lookup(activatableClassId, &registration)
_exeServers->HasKey(serverName, found)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveServerRegistration
_inProcessActivatableClasses->HasKey(activatableClassId, found)
OSIntegration::DEH::ActivationCatalogCollector::RetrieveInProcessActivatableClassRegistration
_inProcessActivatableClasses->Lookup(activatableClassId, &registration)
_outOfProcessActivatableClasses->HasKey(activatableClassId, found)
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite
Unable to stage pending writes to activation catalog.
OSIntegration::DEH::ActivationCatalogCollector::PendingRemove
registrationStoreContext->RemoveActivationEntriesForPackage( packageMoniker.Get(), deploymentOperation, outgoingPackage->GetIsFramework())
PendingWriteOutOfProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
PendingWriteProxyStubs(packageMoniker, registrationStoreContext.Get())
PendingWriteInterfaces(packageMoniker, registrationStoreContext.Get())
hrPendingWrite
OSIntegration::DEH::ActivationCatalogCollector::PendingWrite::<lambda_e8da1d624f5a8bd4a8ff673fff0627a1>::operator ()
registrationStoreContext->CreatePackage(packageMoniker.Get(), packageIsFramework)
PendingWriteExeSevers(incomingPackage, registrationStoreContext.Get())
PendingWriteInProcActivatableClasses(packageMoniker, registrationStoreContext.Get())
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStoreContext))
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IDllServerActivatableClassRegistration* > * keyValuePair ) -> HRESULT { ComPtr< IDllServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); RETURN_IF_FAILED(static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses::<lambda_20cd266dcdfb7323e024d33da7893824>::operator ()
activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)
_outOfProcessActivatableClasses->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses::<lambda_17e64c4b6c9e7cc51bb10fcfe94be8eb>::operator ()
static_cast< InProcessActivatableClassRegistration_Impl* >(classInterface.Get())-> PendingWriteToStore(packageMoniker, registrationStoreContext)
_inProcessActivatableClasses->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInProcActivatableClasses
_exeServers->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers
MyForEach(iterator, [this, incomingPackage, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerRegistration > serverInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&serverInterface)); RETURN_IF_FAILED(static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)); return S_OK; })
keyValuePair->get_Value(&classInterface)
OSIntegration::DEH::ActivationCatalogCollectorForUser::PendingRemove
keyValuePair->get_Value(&serverInterface)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteExeSevers::<lambda_1aa3892973072908dcbd7084db467598>::operator ()
static_cast<ExeServerRegistration_Impl*>(serverInterface.Get())-> PendingWriteToStore(incomingPackage, registrationStoreContext)
registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))
_interfaceRegistrations->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > itf; Windows::Internal::String iid; RETURN_IF_FAILED(keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&itf)); RETURN_IF_FAILED(registrationStoreContext->CreateInterfaceEntry( packageMoniker.Get(), iid.Get(), *static_cast<InterfaceRegistration_Impl*>(itf.Get()))); return S_OK; })
MyForEach(iterator, [&packageMoniker, &registrationStoreContext]( IKeyValuePair< HSTRING, IInspectable* > *keyValuePair ) -> HRESULT { ComPtr< IInspectable > proxyStub; Windows::Internal::String clsid; RETURN_IF_FAILED(keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())); RETURN_IF_FAILED(keyValuePair->get_Value(&proxyStub)); RETURN_IF_FAILED(registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))); return S_OK; })
keyValuePair->get_Key(iid.ReleaseAndGetAddressOf())
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteInterfaces::<lambda_4322a56d354eb0685e0659bd47d7f47b>::operator ()
keyValuePair->get_Value(&itf)
keyValuePair->get_Value(&proxyStub)
registrationStoreContext->CreateProxyStubEntry( packageMoniker.Get(), clsid.Get(), *static_cast<ProxyStubRegistration_Impl*>(proxyStub.Get()))
_proxyStubRegistrations->First(&iterator)
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteOutOfProcActivatableClasses
MyForEach(iterator, [&packageMoniker, &registrationStoreContext] ( IKeyValuePair< HSTRING, IExeServerActivatableClassRegistration* > *keyValuePair ) -> HRESULT { ComPtr< IExeServerActivatableClassRegistration > classInterface; RETURN_IF_FAILED(keyValuePair->get_Value(&classInterface)); OutOfProcessActivatableClassRegistration_Impl *activatableClass = static_cast< OutOfProcessActivatableClassRegistration_Impl* >(classInterface.Get()); RETURN_IF_FAILED(activatableClass->PendingWriteToStore(packageMoniker, registrationStoreContext)); return S_OK; })
keyValuePair->get_Key(clsid.ReleaseAndGetAddressOf())
OSIntegration::DEH::ActivationCatalogCollector::PendingWriteProxyStubs::<lambda_e82a56ad4bd550ceabcd0284a54fe13c>::operator ()
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Create
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &serverRegistration)
OutOfProcessActivatableClassRegistration_Impl::Create(activatableClassId, serverRegistration.Get(), &classRegistration)
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration(activatableClassId, &found, &retrievedOutOfProcClassRegistration)
HRESULT_FROM_WIN32(160L)
ERROR_BAD_ARGUMENTS
((HRESULT)0x80080204L)
APPX_E_INVALID_MANIFEST
collectors->GetActivationCatalogCollector()->RetrieveInProcessActivatableClassRegistration(activatableClassId, &found, &retrievedInProcClassRegistration)
MakeAndInitialize<ActivationCatalogCollector>(collector)
OSIntegration::DEH::CreateActivationCatalogCollector
MakeAndInitialize<ActivationCatalogCollectorForUser>(collector)
OSIntegration::DEH::CreateActivationCatalogCollectorForUser
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration(serverName, &found, &retrievedServerRegistration)
ExeServerRegistration_Impl::Create(serverName, &serverRegistration)
collectors->GetActivationCatalogCollector()->AddServerRegistration(serverRegistration.Get())
collectors->GetActivationCatalogCollector()->AddOutOfProcessActivatableClassRegistration(classRegistration.Get())
HRESULT_FROM_WIN32(13L)
ERROR_INVALID_DATA
OSIntegration::DEH::ExeServerRegistration::Create
iterator->get_Current(&item)
f(item.Get())
iterator->MoveNext(&hasCurrent)
OSIntegration::DEH::ExeServerRegistration::Retrieve
iterator->get_HasCurrent(&hasCurrent)
MyForEach
collectors->GetActivationCatalogCollector()->RetrieveOutOfProcessActivatableClassRegistration( activatableClassId, &found, &outOfProcessRegistration)
OSIntegration::DEH::OutOfProcessActivatableClassRegistration::Retrieve
collectors->GetActivationCatalogCollector()->RetrieveServerRegistration( serverName, &found, &serverRegistration)
OSIntegration.DEH.ActivationCatalogCollectorForUser
OSIntegration.DEH.ActivationCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerRegistration>
Windows.Foundation.Collections.IMapView`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>>
Windows.Foundation.Collections.IMapView`2<String, Object>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Object>>
]|pIX
Windows.Foundation.Collections.IKeyValuePair`2<String, Object>
+ *Px
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerActivatableClassRegistration>
Windows.Foundation.Collections.IMap`2<String, Object>
Windows.Foundation.Collections.IMap`2<String, Windows.Foundation.IExeServerRegistration>
OSIntegration::DEH::Internal::CExtensionRegistration::put_Vendor
copy.Initialize(_properties.Icon.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Icon
OSIntegration::DEH::Internal::CExtensionRegistration::put_Icon
OSIntegration::DEH::Internal::CExtensionRegistration::get_ContractId
copy.Initialize(_properties.Vendor.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Vendor
((HRESULT)0x80070057L)
copy.Initialize(_activatableClassId.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_ActivatableClassId
onecore\admin\appmodel\osim\src\deh\winrt\collector\extensioncatalogcollector.cpp
copy.Initialize(_contractId.Get())
OSIntegration.DEH.ExtensionRegistration
_spAttributesCollisionMap->Remove(keyName)
_spPropertyValueFactory->CreateUInt32(value, &spPropertyValue)
_spAttributesMap->GetView(_properties.CustomProperties.MapView.ReleaseAndGetAddressOf())
OSIntegration::DEH::Internal::CExtensionRegistration::PendingWriteToStore
((HRESULT)0x8007000EL)
OSIntegration::DEH::Internal::CExtensionRegistration::AddAttribute
_spAttributesCollisionMap->Insert(keyName, keyName, &fReplaced)
_spPropertyValueFactory->CreateString(value, &spPropertyValue)
OSIntegration::DEH::Internal::CExtensionRegistration::get_Description
OSIntegration::DEH::Internal::CExtensionRegistration::put_Description
_spAttributesMap->GetView(spAttributesMapView.GetAddressOf())
OSIntegration::DEH::Internal::CExtensionRegistration::get_Attributes
copy.Initialize(_properties.DisplayName.Get())
OSIntegration::DEH::Internal::CExtensionRegistration::get_DisplayName
OSIntegration::DEH::Internal::CExtensionRegistration::put_DisplayName
copy.Initialize(_properties.Description.Get())
hrLookup
OSIntegration::DEH::ExtensionCatalogCollector::RetrieveExtensionRegistration
OSIntegration::DEH::ExtensionCatalogCollector::CreateExtensionRegistration
contractIdCopy.Set(contractId.Get())
hrInsert
E_OUTOFMEMORY
_spAttributesCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::CExtensionRegistration::CheckAttributeNameDoesNotCollide
hrRuntimeClassInitialize
OSIntegration::DEH::ExtensionCatalogCollector::RuntimeClassInitialize
extensionCatalogContext->CreateExtensionEntry( _contractId.Get(), packageMoniker, _activatableClassId.Get(), _properties)
OSIntegration::DEH::CreateExtensionCatalogCollector
collectors->GetExtensionCatalogCollector()->CreateExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
OSIntegration::DEH::ExtensionRegistration::Create
collectors->GetExtensionCatalogCollector()->RetrieveExtensionRegistration( contractId, activatableClassId, spExtensionRegistration.GetAddressOf())
extensionCatalogContext->RemoveExtensionEntriesForPackage(packageMoniker.Get(), deploymentOperation)
MakeAndInitialize<ExtensionCatalogCollector>(collector)
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&extensionCatalogContext))
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite
ForEachExtensionRegistration(extensionRegistrationMap.Get(), [&](Internal::CExtensionRegistration* extensionRegistration) { StringReference packageMoniker(incomingPackage->GetPackageMoniker()); RETURN_HR(extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())); })
OSIntegration::DEH::ExtensionCatalogCollector::PendingRemove
extensionRegistration->PendingWriteToStore( packageMoniker.Get(), extensionCatalogContext.Get())
OSIntegration::DEH::ExtensionCatalogCollector::PendingWrite::<lambda_876117454afcc4e850e10f8e1c8f984f>::operator ()
spIterator->MoveNext(&bHasCurrent)
spIterator->get_HasCurrent(&bHasCurrent)
spIterator->get_Current(spKeyValuePair.GetAddressOf())
spKeyValuePair->get_Value(&spExtensionRegistration)
lambda(spExtensionRegistration.Get())
OSIntegration::DEH::ExtensionRegistration::Retrieve
pIterable->First(&spIterator)
OSIntegration::DEH::ForEachExtensionRegistration
OSIntegration.DEH.ExtensionCatalogCollector
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IMap`2<String, String>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IMapView`2<String, String>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>
Windows.Foundation.Collections.IKeyValuePair`2<String, String>
Windows.Foundation.Collections.IMapView`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>>
Windows.Foundation.Collections.IKeyValuePair`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Destroy
WindowsDeleteString(initializedElement->contractId)
WindowsDeleteString(initializedElement->activatableClassId)
OSIntegration::DEH::Internal::ContractIdActivatableClassIdPairLifetimeTraits::Construct
onecore\admin\appmodel\osim\src\deh\winrt\collector\ExtensionCatalogCollector.hpp
WindowsDuplicateString(source.contractId, &uninitializedElement->contractId)
WindowsDeleteString(uninitializedElement->contractId)
hrDuplicateString
Windows.Foundation.Collections.IMap`2<OSIntegration.DEH.Internal.ContractIdActivatableClassIdPair, Object>
S:(ML;;NX;;;LW)
O:PSG:BAD:(A;;0xB;;;BU)(A;;0xB;;;AC)
(A;;0xB;;;%s)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;BA)(A;;0xB;;;BU)
O:PSG:BAD:(A;;0xB;;;SY)(A;;0xB;;;IU)(A;;0xB;;;BA)(A;;0xB;;;BU)
OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties
onecore\admin\appmodel\OSIM\src\deh\WinRT\Inc\Uint32String.hpp
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%x", value)
Uint32HexString::Uint32HexString
GuidString::GuidString
onecore\internal\com\inc\combase\ComGuid.hpp
StringCchPrintf(m_string, ARRAYSIZE(m_string), L"%u", value)
Uint32String::Uint32String
StringFromGUID2(guid, m_string, ARRAYSIZE(m_string)) != ARRAYSIZE(m_string)
OpenClassesRootKey(whichHive, KEY_READ, &classesRootKey)
Com::Catalog::Win32Registry::OpenClsidKey
::RegOpenKeyExW(classesRootKey.get(), Constants::CLSID, 0 , KEY_READ, &clsidTopLevelKey)
::RegOpenKeyExW(clsidTopLevelKey.get(), GuidString(clsid), 0 , samDesired, key)
::RegOpenKeyExW(GetHiveKey(whichHive), GetClassesRootPathRelativeToHiveKey(whichHive), 0 , samDesired, key)
Com::Catalog::Win32Registry::OpenClassesRootKey
*value
E_UNEXPECTED
heapBuffer
Com::Catalog::Win32Registry::Details::GetStringValue
onecore\private\com\inc\combase\ComRegistryCatalogFunctions.hpp
getValueResult
\WowAA32Node
\WowAA64Node
CLSID
AppID
onecore\admin\appmodel\osim\src\deh\winrt\collector\packagedcomregistration.cpp
\WOW6432Node
\Wow6464Node
OpenClsidKey(whichHive, clsid, KEY_READ, &clsidKey)
Com::Catalog::Win32Registry::GetInprocServer32Properties
::RegOpenKeyExW(clsidKey.get(), Constants::InprocServer32, 0 , KEY_READ, &inprocServer32Key)
Details::GetStringValueExpanded(inprocServer32Key.get(), L"", dllPath)
commandLine
"%ls" %ls
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\" %ls", executableAbsolutePath, arguments)
"%ls"
SizeTAdd(commandLineLength, 2, &commandLineLength)
OSIntegration::DEH::Internal::ConstructCommandLine
SizeTAdd(commandLineLength, 1, &commandLineLength)
SizeTAdd(commandLineLength, wcslen(arguments), &commandLineLength)
Failed call to GetSystemDirectory/GetSystemWow64Directory2. imageFileMachine=%u
systemDirectoryLength == 0
OSIntegration::DEH::Internal::GetSystemFileAbsolutePath
PathAllocCombine(systemDirectoryCharacters, relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
Interface
TypeLib
PathAllocCombine(incomingPackage->GetPackageRoot(), relativePath, PATHCCH_ALLOW_LONG_PATHS, &absolutePath)
OSIntegration::DEH::Internal::GetPackagedFileAbsolutePath
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.VersionIndependentProgId, versionIndependentProgId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetVersionIndependentProgId
_properties.EnableOleDefaultHandler.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOleDefaultHandler
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ShortDisplayName, shortDisplayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetShortDisplayName
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ProgId, progId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetProgId
SetRegistrationProperty(_properties.ServerId, serverId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetServerId
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DisplayName, displayName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDisplayName
StringCchPrintf(commandLine.get(), commandLineLength + 1, L"\"%ls\"", executableAbsolutePath)
GetInprocServer32Properties(WhichHive::LocalMachine, __uuidof(PackagedInprocClassVirtualizationManager), &g_virtualizationManagerDllPath)
OSIntegration::DEH::Internal::GetVirtualizationManagerDllFilename
MaxInstallOrder
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultIcon, defaultIcon)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultIcon
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.DefaultFormatName, defaultFormatName)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDefaultFormatName
_propertyValueFactory->CreateUInt32(0, &categoryPropValue)
_implementedCategories->Insert(Wrappers::HStringReference(categoryKey).Get(), categoryPropValue.Get(), &replacedIgnored)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.AutoConvertTo, autoConvertTo)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAutoConvertTo
_properties.InsertableObject.Present
CreatePropertyValueFactoryIfNecessary()
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddImplementedCategory
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_implementedCategories)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.InsertableObject, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInsertableObject
AddImplementedCategory(CATID_Insertable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddVerb
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_verbs)
_verbs->HasKey(verbId, &alreadyHasKey)
_verbs->Lookup(verbId, &existingVerbPropValue)
SetRegistrationProperty(_properties.TypeLibId, typeLibId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLib
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetTypeLibWithVersion
SetRegistrationProperty(_properties.TypeLibVersionNumber, typeLibVersionNumber)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ConversionReadable, readable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadable
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.ConversionReadWritable, readWritable)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetConversionReadWritable
Vector<HSTRING>::Make(&_dataFormats)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddDataFormat
_dataFormats->IndexOf(dataFormat, &indexIgnored, &found)
_dataFormats->Append(dataFormat)
_propertyValueFactory->CreateString(miscStatus, &miscStatusPropValue)
_miscStatusAspects->Insert(aspect, miscStatusPropValue.Get(), &replacedIgnored)
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.ToolboxBitmap32, toolboxBitmap32)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetToolboxBitmap32
_miscStatusAspects->HasKey(aspect, &alreadyHasKey)
_miscStatusAspects->Lookup(aspect, &existingMiscStatusPropValue)
existingMiscStatusPropValue->GetString(existingMiscStatus.GetAddressOf())
miscStatus != existingMiscStatus
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.MiscStatusDefault, miscStatusDefault)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetMiscStatusDefault
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddMiscStatusAspect
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_miscStatusAspects)
existingVerbPropValue->GetString(existingVerb.GetAddressOf())
verb != existingVerb
_propertyValueFactory->CreateString(verb, &verbPropValue)
_verbs->Insert(verbId, verbPropValue.Get(), &replacedIgnored)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm
SetRegistrationProperty(_properties.InprocServerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_arm64
_properties.IsSystemInprocServerDll.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x86
SetRegistrationProperty(_properties.InprocServerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerDllPath_x64
SetRegistrationProperty(_properties.InprocServerDllPath_arm, path)
_properties.OutofprocClassHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetOutofprocClassHasMachineScope
SetRegistrationProperty(_properties.InprocServerDllPath_x86, path)
SetRegistrationProperty(_properties.DllPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetDllPath
SetRegistrationPropertyAllowMultipleIfConsistent(_properties.Threading, static_cast<ThreadingModel>(threadingModel))
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetThreadingModel
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm
SetRegistrationProperty(_properties.InprocHandlerDllPath_arm64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_arm64
SetRegistrationProperty(_properties.InprocHandlerDllPath_x86, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x86
SetRegistrationProperty(_properties.InprocHandlerDllPath_x64, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerDllPath_x64
_properties.EnableVirtualizationForInprocServer.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocServer
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetIsSystemInprocServerDll
_properties.InprocServerHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocServerHasMachineScope
_propertyValueFactory->CreateUInt32(value, &propValue)
_customAttributes->Insert(name, propValue.Get(), &replacedIgnored)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringCustomAttribute
existingPropValue->GetString(existingValue.GetAddressOf())
_customAttributes->HasKey(name, &alreadyHasKey)
_customAttributes->Lookup(name, &existingPropValue)
existingPropValue->GetUInt32(&existingValue)
value != existingValue
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetEnableVirtualizationForInprocHandler
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddUint32CustomAttribute
RegistryMapFactory<IInspectable*>::RegistryMap::Make(&_customAttributes)
_properties.InprocHandlerHasMachineScope.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetInprocHandlerHasMachineScope
_properties.EnableVirtualizationForInprocHandler.Present
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetHasMachineScope
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocServerHasMachineScope, true)
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.InprocHandlerHasMachineScope, true)
SetCalculatedRegistrationProperties(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerArguments
!_additionalValuesForInprocServer32.try_emplace( ValueName(WindowsGetStringRawBuffer(name, nullptr)), RegSzValueData(value)).second
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::AddStringValueForInprocServer32CompatibilityKey
SetRegistrationPropertyAllowMultipleIfConsistent( _properties.OutofprocClassHasMachineScope, true)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetApplicationDisplayName
SetRegistrationProperty(_exeServerPath, path)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetExeServerPath
SetRegistrationProperty(_exeServerArguments, arguments)
_propertyValueFactory->CreateString(value, &propValue)
SetRegistrationProperty(_appId, appId)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetAppId
SetRegistrationProperty(_applicationDisplayName, applicationName)
_miscStatusAspects->GetView(&miscStatusAspectsView)
_customAttributes->GetView(&customAttributesView)
SetRegistrationProperty(_properties.DataFormats, _dataFormats.Get())
_verbs->GetView(&verbsView)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreatePropertyValueFactoryIfNecessary
CalculateSurrogateDllPath(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::SetCalculatedRegistrationProperties
_implementedCategories->GetView(&implementedCategoriesView)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::PendingWriteRegistration
registrationStore->CreateComClassEntry(packageMoniker, _id, _properties)
CreateCompatibilityEntries(incomingPackage)
GetActivationFactory( Wrappers::HStringReference(RuntimeClass_Windows_Foundation_PropertyValue).Get(), &_propertyValueFactory)
GetPackagedFileAbsolutePath(incomingPackage, _properties.ToolboxBitmap32.Value.GetRawBuffer(nullptr), _toolboxBitmap32AbsolutePath)
registryCompatibilityCollector->AddKey( (isMachineScope ? Scope::Machine : Scope::User), GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateCompatibilityEntries
_properties.ImplementedCategories.MapView.CopyTo(IID_PPV_ARGS(&implementedCategoriesIterable))
CoGetModuleArchitecture(_surrogateDllAbsolutePath.get(), reinterpret_cast<DWORD*>(&_surrogateDllArchitecture))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocServerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocServerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, GetInprocHandlerDllForArchitecture(architecture).GetRawBuffer(nullptr), _inprocHandlerAbsolutePaths.*(architecture.PerArchitectureDllPath))
GetPackagedFileAbsolutePath(incomingPackage, _properties.DefaultIcon.Value.GetRawBuffer(nullptr), _defaultIconAbsolutePath)
GetPackagedFileAbsolutePath(incomingPackage, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
CoGetModuleArchitecture(_exeServerAbsolutePath.get(), reinterpret_cast<DWORD*>(&_executableArchitecture))
ConstructCommandLine(_exeServerAbsolutePath.get(), _exeServerArguments.Value.GetRawBuffer(nullptr), _exeServerCommandLine)
GetPackagedFileAbsolutePath(incomingPackage, _properties.DllPath.Value.GetRawBuffer(nullptr), _surrogateDllAbsolutePath)
CalculateBinaryCompatibilityPropertiesIfNecessary(incomingPackage)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateSurrogateDllPath
GetSystemFileAbsolutePath(_executableArchitecture, _exeServerPath.Value.GetRawBuffer(nullptr), _exeServerAbsolutePath)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CalculateBinaryCompatibilityPropertiesIfNecessary
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocHandler32Subkey
classes->HasKey(id, &internalRegistrationExists)
OSIntegration::DEH::ComClassRegistration::RuntimeClassInitialize
classes->Lookup(id, &_combinedProperties)
miscStatusAspectKeyValuePair->get_Value( &miscStatusAspectFlagsInspectable)
miscStatusAspectFlagsPropertyValue->GetString( &miscStatusAspectFlagsString)
GetVirtualizationManagerDllFilename(&virtualizationManagerDllFilename)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateInprocServer32Subkey
verbKeyValuePair->get_Value(&verbInspectable)
verbPropertyValue->GetString(&verb)
_properties.MiscStatusAspects.MapView.CopyTo( IID_PPV_ARGS(&miscStatusAspectsIterable))
miscStatusAspectKeyValuePair->get_Key(&miscStatusAspect)
OSIntegration::DEH::Internal::ComClassRegistrationCombinedProperties::CreateClsidKeyTemplateFromSharedProperties
implementedCategoryKeyValuePair->get_Key(&implementedCategory)
_properties.Verbs.MapView.CopyTo(IID_PPV_ARGS(&verbsIterable))
verbKeyValuePair->get_Key(&verbId)
_combinedProperties->SetInprocServerDllPath_arm64(mscoreeDll.Get())
_combinedProperties->SetIsSystemInprocServerDll(true)
AddStringCustomAttribute(assemblyAttributeName.Get(), assembly)
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( assemblyAttributeName.Get(), assembly)
_combinedProperties->SetInprocServerDllPath_x86(mscoreeDll.Get())
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetAssembly
_combinedProperties->SetInprocServerDllPath_x64(mscoreeDll.Get())
_combinedProperties->SetInprocServerDllPath_arm(mscoreeDll.Get())
_combinedProperties->SetServerId(serverId)
ComOutofprocClassRegistration::RuntimeClassInitialize(classes, id, serverId)
OSIntegration::DEH::ComSurrogateClassRegistration::RuntimeClassInitialize
_combinedProperties->SetOutofprocClassIsSurrogate(true)
_combinedProperties
classes->Insert(id, _combinedProperties.Get(), &replaced)
ComClassRegistration::RuntimeClassInitialize(classes, id)
OSIntegration::DEH::ComOutofprocClassRegistration::RuntimeClassInitialize
SetRegistrationProperty( _properties.LaunchAndActivationPermission, launchAndActivationPermission)
OSIntegration::DEH::ComServerRegistration::SetLaunchAndActivationPermission
OSIntegration::DEH::ComServerRegistration::PendingWriteRegistration
registrationStore->CreateComServerEntry(packageMoniker, _id, _properties)
SetRegistrationProperty(_properties.ApplicationDisplayName, applicationDisplayName)
OSIntegration::DEH::ComServerRegistration::SetApplicationDisplayName
SetRegistrationProperty(_properties.DisplayName, displayName)
OSIntegration::DEH::ComServerRegistration::SetDisplayName
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetImplementationClass
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( implementationClassAttributeName.Get(), implementationClass)
SetRegistrationProperty(_properties.ApplicationId, applicationId)
OSIntegration::DEH::ComServerRegistration::SetApplicationId
AddStringCustomAttribute(runtimeVersionAttributeName.Get(), runtimeVersion)
OSIntegration::DEH::ComManagedInprocServerClassRegistration::SetRuntimeVersion
_combinedProperties->AddStringValueForInprocServer32CompatibilityKey( runtimeVersionAttributeName.Get(), runtimeVersion)
AddStringCustomAttribute(implementationClassAttributeName.Get(), implementationClass)
OSIntegration::DEH::ComServerRegistration::SetCalculatedRegistrationProperties
SetRegistrationProperty( _properties.ExecutionPackageFamily, executionPackageFamily)
Internal::GetSystemFileAbsolutePath( _properties.SystemExecutableArchitecture.Value, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
OSIntegration::DEH::ComServerRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComServerRegistration::SetArguments
SetRegistrationProperty(_properties.SurrogateAppId, appId)
OSIntegration::DEH::ComServerRegistration::SetSurrogateAppId
incomingPackage->GetMainPackageFamilyMoniker(executionPackageFamily)
OSIntegration::DEH::ComServerRegistration::SetServiceName
SetRegistrationProperty(_properties.SystemExecutableArchitecture, architecture)
OSIntegration::DEH::ComServerRegistration::SetSystemExecutableArchitecture
SetRegistrationProperty(_properties.Arguments, arguments)
SetRegistrationProperty(_properties.Executable, executable)
OSIntegration::DEH::ComServerRegistration::SetExecutable
SetRegistrationProperty(_properties.IsSystemExecutable, isSystemExecutable != FALSE)
SetRegistrationProperty(_properties.ServiceName, serviceName)
ComServerRegistration::SetServiceName(serviceName)
OSIntegration::DEH::ComServiceServerRegistration::SetServiceName
OSIntegration::DEH::ComServiceServerRegistration::SetArguments
ComServerRegistration::SetSurrogateAppId(classId)
ComServerRegistration::SetArguments(arguments)
OSIntegration::DEH::ComExeServerRegistration::SetArguments
ComServerRegistration::CreateClassRegistration<ComServiceClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComServiceServerRegistration::CreateClassRegistration
ComServerRegistration::SetExecutable(executable, isSystemExecutable)
OSIntegration::DEH::ComExeServerRegistration::SetExecutable
ComServerRegistration::SetSystemExecutableArchitecture(architecture)
OSIntegration::DEH::ComExeServerRegistration::SetSystemExecutableArchitecture
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Executable.Value.GetRawBuffer(nullptr), surrogateExecutableAbsolutePath)
registryCompatibilityCollector->AddKey( (_hasMachineScope ? Scope::Machine : Scope::User), Internal::GetAppIdKeyPath(_appId.Value), std::move(appIdKey))
ComServerRegistration::CreateClassRegistration<ComExeClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComExeServerRegistration::CreateClassRegistration
OSIntegration::DEH::ComInterfaceRegistration::SetAsynchronousInterface
OSIntegration::DEH::ComInterfaceRegistration::SetTypeLib
SetRegistrationProperty(_properties.ProxyStubCLSID, proxyStubClsid)
OSIntegration::DEH::ComInterfaceRegistration::SetProxyStubClsidWithSupportedArchitectures
SetRegistrationProperty(_properties.SynchronousInterface, synchronousInterface)
OSIntegration::DEH::ComInterfaceRegistration::SetSynchronousInterface
SetRegistrationProperty(_properties.AsynchronousInterface, asynchronousInterface)
OSIntegration::DEH::ComSurrogateServerRegistration::SetAppId
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateSystemExecutableArchitecture
_properties.UseUniversalMarshaler.Present
OSIntegration::DEH::ComInterfaceRegistration::SetUniversalMarshaler
OSIntegration::DEH::ComSurrogateServerRegistration::CreateClassRegistration
ComServerRegistration::CreateClassRegistration<ComSurrogateClassRegistration>(classId, &classRegistration)
OSIntegration::DEH::ComSurrogateServerRegistration::SetCustomSurrogateExecutable
ComServerRegistration::SetSurrogateAppId(appId)
SetRegistrationProperty(_properties.DllPath_arm, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm
SetRegistrationProperty(_properties.DllPath_arm64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_arm64
SetRegistrationProperty(_properties.DllPath_x86, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x86
SetRegistrationProperty(_properties.DllPath_x64, path)
OSIntegration::DEH::ComProxyStubRegistration::SetPath_x64
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetInterfaceKeyPathForArchitecture(_id, architecture), Key(interfaceKey))
OSIntegration::DEH::ComInterfaceRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComProxyStubRegistration::SetDisplayName
OSIntegration::DEH::ComProxyStubRegistration::SetPath
SetRegistrationProperty(_properties.HasMachineScope, (hasMachineScope != FALSE))
OSIntegration::DEH::ComInterfaceRegistration::SetHasMachineScope
registrationStore->CreateComInterfaceEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::ComInterfaceRegistration::PendingWriteRegistration
OSIntegration::DEH::ComTypeLibRegistration::SetLocaleId
SetRegistrationProperty(_properties.Flags, flags)
OSIntegration::DEH::ComTypeLibRegistration::SetFlags
SetRegistrationProperty(_properties.HelpDirectory, helpDirectory)
Internal::GetPackagedFileAbsolutePath(incomingPackage, GetDllPathForArchitecture(architecture).GetRawBuffer(nullptr), dllAbsolutePath)
OSIntegration::DEH::ComProxyStubRegistration::CreateCompatibilityEntries
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), std::move(clsidKey))
SetRegistrationProperty(_properties.LocaleId, localeId)
PendingCopyFiles(packageMoniker, packageRoot.Get(), incomingPackage->GetSignatureOrigin(), fileManager.Get())
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, _properties.DllPath.Value.Get())
OSIntegration::DEH::ComProxyStubRegistration::PendingCopyFiles
pFileManager->CopyFileToManagedDirectory( packageMoniker, packageRoot, signatureOrigin, ManagedDirectory::PackagedComProgramData, GetDllPathForArchitecture(architecture).Get())
OSIntegration::DEH::ComProxyStubRegistration::SetHasMachineScope
registrationStore->CreateComProxyStubEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::ComProxyStubRegistration::PendingWriteRegistration
resourcesManager->GetFileManager(&fileManager)
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.HelpDirectory.Value.GetRawBuffer(nullptr), absolutePath)
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetTypeLibVersionKeyPath(_id, _versionNumber.GetRawBuffer(nullptr)), std::move(typeLibVersionKey))
SetRegistrationProperty(_properties.CurrentVersion, currentVersion)
OSIntegration::DEH::ComProgIdRegistration::SetCurrentVersion
OSIntegration::DEH::ComTypeLibRegistration::PendingWriteRegistration
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win32Path.Value.GetRawBuffer(nullptr), absolutePath)
OSIntegration::DEH::ComTypeLibRegistration::CreateCompatibilityEntries
Internal::GetPackagedFileAbsolutePath(incomingPackage, _properties.Win64Path.Value.GetRawBuffer(nullptr), absolutePath)
SetRegistrationProperty(_properties.Win64Path, win64Path)
OSIntegration::DEH::ComTypeLibRegistration::SetWin64Path
OSIntegration::DEH::ComTypeLibRegistration::SetHasMachineScope
registrationStore->CreateComTypeLibEntry( packageMoniker, _id, _versionNumber.Get(), _properties)
OSIntegration::DEH::ComTypeLibRegistration::SetHelpDirectory
OSIntegration::DEH::ComTypeLibRegistration::SetDisplayName
SetRegistrationProperty(_properties.Win32Path, win32Path)
OSIntegration::DEH::ComTypeLibRegistration::SetWin32Path
OSIntegration::DEH::ComTreatAsClassRegistration::SetHasMachineScope
registrationStore->CreateComTreatAsClassEntry(packageMoniker, _id, _properties)
OSIntegration::DEH::ComProgIdRegistration::CreateCompatibilityEntries
OSIntegration::DEH::ComTreatAsClassRegistration::SetDisplayName
SetRegistrationProperty(_properties.AutoConvertTo, autoConvertTo)
OSIntegration::DEH::ComTreatAsClassRegistration::SetAutoConvertTo
OSIntegration::DEH::ComProgIdRegistration::SetHasMachineScope
registrationStore->CreateComProgIdEntry(packageMoniker, _id.Get(), _properties)
OSIntegration::DEH::ComProgIdRegistration::PendingWriteRegistration
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetProgIdKeyPath(_id.GetRawBuffer(nullptr)), std::move(progIdKey))
SetRegistrationProperty(_properties.CLSID, clsid)
OSIntegration::DEH::ComProgIdRegistration::SetClsidWithIsInsertableObject
SetRegistrationProperty(_displayName, displayName)
OSIntegration::DEH::ComProgIdRegistration::SetDisplayName
OSIntegration::DEH::PackagedComCatalogCollector::CreateExeServerRegistration
_servers->Insert(serverId, serverRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateSurrogateServerRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateServiceServerRegistration
RegistryMapFactory<ComTypeLibRegistration*>::RegistryMap::Make(&_typeLibs)
RegistryMapFactory<ComProgIdRegistration*>::RegistryMap::Make(&_progIds)
(HashMap<CLSID, ComTreatAsClassRegistration*>::Make(&_treatAsClasses))
serverRegistration
OSIntegration::DEH::PackagedComCatalogCollector::RuntimeClassInitialize
(HashMap<CLSID, Internal::ComClassRegistrationCombinedProperties*>::Make(&_classes))
(HashMap<CLSID, ComProxyStubRegistration*>::Make(&_proxyStubs))
(HashMap<IID, ComInterfaceRegistration*>::Make(&_interfaces))
OSIntegration::DEH::ComTreatAsClassRegistration::PendingWriteRegistration
registryCompatibilityCollector->AddKey( (_properties.HasMachineScope.GetValueOrDefault(false) ? Scope::Machine : Scope::User), Internal::GetClsidKeyPathForArchitecture(_id, architecture), Key(clsidKey))
OSIntegration::DEH::ComTreatAsClassRegistration::CreateCompatibilityEntries
(HashMap<UINT32, IComServerRegistration*>::Make(&_servers))
_progIds->Insert(progId, spRegistration.Get(), &replaced)
OSIntegration::DEH::PackagedComCatalogCollector::CreateTreatAsClassRegistration
_treatAsClasses->Insert(classId, spRegistration.Get(), &replaced)
MakeAndInitialize<ComInprocServerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
WindowsConcatString( Wrappers::HStringReference(typeLibIdString).Get(), versionNumber, typeLibKey.GetAddressOf())
_typeLibs->Insert(typeLibKey.Get(), spRegistration.Get(), &replaced)
progIdString.Set(progId)
OSIntegration::DEH::PackagedComCatalogCollector::CreateProgIdRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateInterfaceRegistration
_interfaces->Insert(interfaceId, spRegistration.Get(), &replaced)
versionNumberString.Set(versionNumber)
OSIntegration::DEH::PackagedComCatalogCollector::CreateTypeLibRegistration
spRegistration
OSIntegration::DEH::PackagedComCatalogCollector::CreateProxyStubRegistration
_proxyStubs->Insert(proxyStubClassId, spRegistration.Get(), &replaced)
replaced
PendingWriteForEachRegistration( _treatAsClasses.Get(), incomingPackage, resourcesManager)
hrRemove
OSIntegration::DEH::PackagedComCatalogCollector::PendingRemove
spRegistrationStore->TryGetComPackageInstallOrder(packageMoniker.Get(), false , installOrder)
PendingWriteForEachRegistration( _proxyStubs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _interfaces.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _typeLibs.Get(), incomingPackage, resourcesManager)
PendingWriteForEachRegistration( _progIds.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::CreateManagedInprocServerClassRegistration
PendingWriteForEachRegistration( _servers.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::PendingWrite
PendingWriteForEachRegistration( _classes.Get(), incomingPackage, resourcesManager)
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocServerClassRegistration
MakeAndInitialize<ComInprocHandlerClassDllRegistration>(&classRegistration, _classes.Get(), classId)
OSIntegration::DEH::PackagedComCatalogCollector::CreateInprocHandlerClassRegistration
MakeAndInitialize<ComManagedInprocServerClassRegistration>(&classRegistration, _classes.Get(), classId)
registryCompatibilityCollector.query_to(&registryCompatibilityCollectorTestHooks)
registryCompatibilityCollectorTestHooks->SetIsAdditiveMode(incomingPackage)
_classes->First(&iterator)
OSIntegration::DEH::PackagedComCatalogCollector::GetHasAnyClasses
packagedComContext->TryGetComClassIdForPackageByIndex(classesHandle, classIndex, &hasEntryAtIndex, &clsid)
packagedComContext->ReadComClassEntry(packageMoniker.Get(), clsid, properties)
classProperties
_classes->Insert(clsid, classProperties.Get(), &replaced)
RoGetRegistrationStoreContext(Windows::Foundation::RegistrationScope_PerUser, nullptr, 0, IID_PPV_ARGS(&registrationStoreContext))
registrationStoreContext.query_to(&packagedComContext)
hrReadEntry
packagedComContext->GetComClassEntriesForPackage(packageMoniker.Get(), &classesHandle)
_serverCount > 0
OSIntegration::DEH::PackagedComCatalogCollector::SetIsAdditiveMode
GetHasAnyClasses(&hasAnyClasses)
hasAnyClasses
registrationStore->CheckComPackageExists(packageFullName, &packageHasComRegistrations)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasComRegistrationsForCurrentScope
registrationStore->TryGetComPackageInstallOrder( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), maxInstallOrder)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::GetMaxInstallOrder
registrationStore->TryGetComTypeLibIdForPackageByIndex(typeLibsHandle, typeLibIndex, &hasTypeLibAtIndex, &typeLibId)
registrationStore->GetComTypeLib(packageFullName, typeLibId, &typeLibHandle)
registrationStore->TryGetComTypeLibVersionIdByIndex(typeLibHandle, versionIndex, &hasVersionAtIndex, &versionId)
registrationStore->ReadComTypeLibEntry(packageFullName, typeLibId, versionId.get(), properties)
spRegistrationStore->TryGetComPackageInstallOrder( packageMoniker.Get(), IsUserRegister(), outgoingPackageInstallOrder)
spRegistrationStore->RemoveComPackageInstallOrderEntry( packageMoniker.Get(), IsUserRegister(), deploymentOperation)
registrationStore->GetComTypeLibsForPackage(packageFullName, &typeLibsHandle)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyTypeLibRegistrationsForScope
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&registrationStore))
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingWrite
resourcesManager->GetRegistrationStoreContext(IID_PPV_ARGS(&spRegistrationStore))
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PendingRemove
OSIntegration::DEH::CreatePackagedComCatalogCollector
MakeAndInitialize<PackagedComCatalogCollectorForUserOrSystemRegister>(collector, userToken)
OSIntegration::DEH::CreatePackagedComCatalogCollectorForUserOrSystemRegister
MakeAndInitialize<PackagedComCatalogCollector>(collector)
registrationStore->CreateComPackageInstallOrderEntry( Wrappers::HStringReference(Internal::MaxInstallOrder).Get(), IsUserRegister(), m_maxInstallOrderProperties)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetMaxInstallOrder
registrationStore->CreateComPackageInstallOrderEntry( packageFullName, IsUserRegister(), m_incomingPackageProperties)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::SetIncomingPackageInstallOrder
registrationScope->SetHasMachineScope(true)
spRegistration.As(&spPackagedComRegistration)
spPackagedComRegistration->PendingWriteRegistration( packageMoniker.Get(), incomingPackage, resourcesManager, spRegistrationStore.Get())
classRegistration->SetExeServerPath(_properties.Executable.Value.Get(), _properties.IsSystemExecutable.GetValueOrDefault(false), _properties.SystemExecutableArchitecture.GetValueOrDefault(IMAGE_FILE_MACHINE_UNKNOWN))
classRegistration->SetExeServerArguments(_properties.Arguments.Value.Get())
OSIntegration::DEH::PackagedComCatalogCollector::PendingWriteForEachRegistration
pair->get_Value(&spRegistration)
OSIntegration::DEH::ComServerRegistration::CreateClassRegistration
MakeAndInitialize<ClassRegistrationType>(&classRegistration, _classes.get(), classId, _id)
classRegistration->SetAppId(_appId.Value)
classRegistration->SetApplicationDisplayName( _properties.ApplicationDisplayName.Value.Get())
property.Present
SetRegistrationProperty(property.Value, value)
property.Present && (property.Value != value)
OSIntegration::DEH::PackagedComCatalogCollectorForUserOrSystemRegister::PackageHasAnyRegistrationsOfTypeForScope
(registrationStore->*Traits::tryGetEntryIdForPackageByIndex)(entriesHandle, index, &hasEntryAtIndex, &entryId)
(registrationStore->*Traits::readEntry)(packageFullName, EntryIdRaiiTraits::UnwrapRaiiType(entryId), properties, nullptr, nullptr)
(registrationStore->*Traits::getEntriesForPackage)(packageFullName, &entriesHandle)
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
I*VwZ
!string
wil::err_failfast_policy::HResult
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMapView`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<UInt32, OSIntegration.DEH.IComServerRegistration>>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComTypeLibRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComTypeLibRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMapView`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>>
Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, OSIntegration.DEH.ComProgIdRegistration>>
Windows.Foundation.Collections.IMapView`2<String, OSIntegration.DEH.ComProgIdRegistration>
HB7Xzz
UInt32Add(collectedCharacterCount, lengthIncludingNullTerminator, &collectedCharacterCount)
UInt32Add(lengthIncludingNullTerminator, 1, &lengthIncludingNullTerminator)
WindowsCreateString(firstNullTerminator, 1, GetAddressOf())
!current.IsValid()
WindowsPreallocateStringBuffer(collectedCharacterCount, &collectedCharacters, &multiStringBuffer)
wil::make_hstring_from_buffer_nothrow(wistd::move(multiStringBuffer), GetAddressOf())
StringCchCopy(collectedCharacters + collectedCharaterOffset, collectedCharacterCount - collectedCharaterOffset, sourceCharacters)
UInt32Add(collectedCharaterOffset, sourceLength + 1, &collectedCharaterOffset)
SetRegistrationPropertyAllowMultipleIfConsistent
MultiString::InitializeFromStringArray
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComProxyStubRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.Internal.ComClassRegistrationCombinedProperties>
Windows.Foundation.Collections.IMap`2<UInt32, OSIntegration.DEH.IComServerRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComTreatAsClassRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComProgIdRegistration>
Windows.Foundation.Collections.IMap`2<Guid, OSIntegration.DEH.ComInterfaceRegistration>
Windows.Foundation.Collections.IMap`2<String, OSIntegration.DEH.ComTypeLibRegistration>
onecore\private\com\inc\deployment\RegistrationStore.hpp
SetRegistrationProperty
StringHasEmbeddedNull(value)
MultiStringIterator::operator ==
other._current == nullptr
MultiStringIterator::operator *
_pastTheEnd
_current == nullptr
onecore\private\com\inc\deployment\RegistrationStoreApiTypes.hpp
MultiStringIterator::operator ++
OSIntegration::DEH::RegistryCompatibility::Name<0,16383,1>::Name
Software\Classes
ole32.dll
mscoree.dll
HELPDIR
SOFTWARE\Classes
RuntimeVersion
Class
{00020424-0000-0000-C000-000000000046}
Assembly
CurVer
DllSurrogate
Control
Programmable
RunAs
Interactive User
LaunchPermission
LocalService
ProxyStubClsid32
SynchronousInterface
ServiceParameters
AsynchronousInterface
win64
FLAGS
win32
Apartment
InprocServer32
ThreadingModel
Implemented Categories
Insertable
Neutral
MiscStatus
ProgID
LocalServer32
ServerExecutable
VersionIndependentProgID
TreatAs
ToolBoxBitmap32
AppID
CLSID
AuxUserType
Conversion
TypeLib
AutoConvertTo
DataFormats
Readable
ReadWritable
DefaultIcon
InprocHandler32
DefaultFile
GetSet
!emplaceResult.second
OSIntegration::DEH::RegistryCompatibility::Key::AddSubkey
OSIntegration::DEH::RegistryCompatibility::Details::GetStringPointer
!pointer
OSIntegration::DEH::RegistryCompatibility::Details::GetStringByteCountIncludingTerminator
UInt32Mult(lengthIncludingTerminator, sizeof(WCHAR), &byteCountIncludingTerminator)
OSIntegration::DEH::RegistryCompatibility::Details::GetStringLengthIncludingTerminator
UInt32Add(lengthWithoutTerminator, 1, &lengthIncludingTerminator)
OSIntegration::DEH::RegistryCompatibility::Key::AddValue
!m_values.try_emplace(std::move(valueName), std::move(valueData)).second
OSIntegration::DEH::RegistryCompatibility::GenericValueData::GenericValueData
contentsCopy
OSIntegration::DEH::RegistryCompatibility::Details::CastValueDataSize
SizeTToDWord(rawSize, &size)
OSIntegration::DEH::RegistryCompatibility::RegBinaryValueData::RegBinaryValueData
m_text.length() > maxLength
m_text.length() < minLength
OSIntegration::DEH::RegistryCompatibility::Name<1,256,0>::Name
m_text.find(L'\\') != std::wstring::npos
SizeTToUInt32(actualLength, &reportedLength)
(m_text.length() - currentBegin) > MaxKeyNameLength
currentBegin == m_text.length()
m_text.length() > UNICODE_STRING_MAX_CHARS
m_text.length() == 0
OSIntegration::DEH::RegistryCompatibility::Details::GetStringLength
(currentEnd - currentBegin) > MaxKeyNameLength
currentBegin == currentEnd
onecore\admin\appmodel\osim\src\deh\winrt\collector\RegistryCompatibilityTypes.hpp
OSIntegration::DEH::RegistryCompatibility::KeyPath::KeyPath
propertyValueFactory->CreateString(value, &propValue)
nameCollisionMap->Insert(keyName, keyName, &replaced)
nameCollisionMap->Remove(keyName)
attributes->Insert(keyName.Get(), propValue.Get(), &replaced)
OSIntegration::DEH::Internal::CheckAttributeNameDoesNotCollide
nameCollisionMap->HasKey(keyName, &fHasKey)
OSIntegration::DEH::Internal::AddStringAttribute
onecore\admin\appmodel\osim\src\deh\winrt\collector\activatableclassregistration.cpp
registrationStoreContext->CreateActivatableClassEntry( packageMoniker, _activatableClassId.Get(), _properties)
_attributes->GetView(&(_properties.CustomAttributes.MapView))
static_cast<ExeServerRegistration_Impl*>(exeServer)->AddActivatableClass(activatableClassId)
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::Create
registration->Initialize(activatableClassId)
SetRegistrationProperty(_properties.IsPackageRelativePath, isPackageRelativePath)
propertyValueFactory->CreateUInt32(value, &propValue)
OSIntegration::DEH::Internal::AddDwordAttribute
registration
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ExePath
copy.Initialize(_properties.ExePath.Value.Unexpanded.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_CommandLine
copy.Initialize(_properties.CommandLine.Value.Unexpanded.Get())
GetActivationFactory((Windows::Internal::String&)propertyValueId, &registration->_propertyValueFactory)
AttributesMap::Make(&registration->_attributes)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_ServerName
copy.Initialize(_serverName.Get())
registration->_serverName.Set(serverName.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::Create
NameCollisionMap::Make(&registration->_nameCollisionMap)
Windows::Foundation::Collections::Internal::Vector<HSTRING>::Make(&classNames)
_server.CopyTo(server)
registration->_properties.Server.Value.Set(exeServer->get_ServerName().Get())
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::PendingWriteToStore
OSIntegration::DEH::Internal::OutOfProcessActivatableClassRegistration_Impl::get_ServerRegistration
hrput_AppUserModelId
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_IsPackageRelativePath
SetRegistrationProperty(_properties.ExplicitPsmActivationType, explicitPsmActivationType)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_AppUserModelId
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExePath
hrSetExePath
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_CommandLine
hrSetCommandLine
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_Permissions
copy.Initialize(_permissions.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::AddActivatableClass
_classNames->Append(className.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::get_AppUserModelId
copy.Initialize(_properties.AppUserModelId.Value.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::CalculateServerPermissions
securityDescriptorString.Initialize(defaultAAAPermissionsBase)
packageSidString.SetValueFromString(packageSid.GetRawBuffer(nullptr))
securityDescriptorString.Initialize(permissions)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::PendingWriteToStore
CalculateServerPermissions(strPackageSid)
registrationStoreContext->CreateServerEntry( packageMoniker.Get(), _serverName.Get(), _properties)
_properties.ActivatableClasses.InitializeFromStringArray(_classNames.Get())
SetRegistrationProperty(_properties.HostRuntimeId, hostRuntimeId.Get())
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_RuntimeBehavior
E_NOTIMPL
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_HostRuntimeId
SetRegistrationProperty(_properties.TrustLevel, trustLevel)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_ExplicitPsmActivationType
SetRegistrationProperty(_properties.RuntimeBehavior, runtimeBehavior)
OSIntegration::DEH::Internal::ExeServerRegistration_Impl::put_TrustLevel
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::Initialize
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_Attributes
OSIntegration::DEH::Internal::ActivatableClassRegistration_Impl<struct OSIntegration::DEH::OutOfProcessActivatableClassRegistration>::get_ActivatableClassId
GetActivationFactory((Windows::Internal::String&)propertyValueId, &_propertyValueFactory)
AttributesMap::Make(&_attributes)
_attributes->GetView(attributes)
_activatableClassId.Set(activatableClassId.Get())
SetRegistrationProperty(_properties.Permissions, securityDescriptorString.Get())
NameCollisionMap::Make(&_nameCollisionMap)
StringCchPrintfW(packageDacl, length, comDACLFormat, packageSidString.GetChars())
packageDacl
securityDescriptorString.Concat(saclString, &securityDescriptorString)
securityDescriptorString.Concat(packageDaclString, &securityDescriptorString)
onecore\admin\appmodel\osim\src\host\host.cpp
Phase
Software\Microsoft\Windows\CurrentVersion\Policies\AppX\Deployment\OSIntegration
Pause
commit
evaluate
PackageName
CategoryName
windows.repositoryExtension
windows.applyDataExtension
windows.stateExtension
OSIM Host
LoadCategoryNameTable
onecore\admin\appmodel\osim\src\host\host.hpp
LoadExtensionRegistrationTable
onecore\admin\appmodel\osim\src\host\osimrequest.cpp
onecoreuap\inetcore\Wwa\AppModelCommon\GenericMap.hpp
onecoreuap\inetcore\Wwa\AppModelCommon\AutoPtr.hpp
onecoreuap\inetcore\wwa\bytecode\lib\bytecodecache.cpp
onecoreuap\inetcore\wwa\bytecode\lib\automapviewoffilehandle.cpp
SELECT ai._ApplicationIdentityID, ai._Revision, ai.ApplicationUserModelId, ai._Dictionary FROM ApplicationIdentity AS ai INNER JOIN PackageFamily AS pf ON ai.ApplicationUserModelId LIKE pf.PackageFamilyName || '!%' INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID AND p._PackageID=?2 WHERE (p._WorkId=0 OR p._WorkId=?3) AND ai._ApplicationIdentityID NOT IN ( SELECT ai._ApplicationIdentityID FROM ApplicationIdentity AS ai INNER JOIN Application AS a ON ai.ApplicationUserModelId=a.ApplicationUserModelId INNER JOIN PackageUser AS pu ON a.Package=pu.Package AND pu.User=?1 WHERE (a._WorkId=0 OR a._WorkId=?3) AND (pu._WorkId=0 OR pu._WorkId=?3));
SELECT ai._ApplicationIdentityID, ai._Revision, ai.ApplicationUserModelId, ai._Dictionary FROM ApplicationIdentity AS ai INNER JOIN PackageFamily AS pf ON ai.ApplicationUserModelId LIKE pf.PackageFamilyName || '!%' INNER JOIN Package AS p ON p.PackageFamily=pf._PackageFamilyID AND p._PackageID=?2 WHERE p._WorkId=0 AND ai._ApplicationIdentityID NOT IN ( SELECT ai._ApplicationIdentityID FROM ApplicationIdentity AS ai INNER JOIN Application AS a ON ai.ApplicationUserModelId=a.ApplicationUserModelId INNER JOIN PackageUser AS pu ON a.Package=pu.Package AND pu.User=?1 WHERE a._WorkId=0 AND pu._WorkId=0);
SELECT _ApplicationIdentityID FROM ApplicationIdentity WHERE ApplicationUserModelId=?
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileview.cpp
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT EXISTS(SELECT 1 FROM SecondaryTileView WHERE User=? AND Application=? AND TileId=? AND _WorkId=0 LIMIT 1);
\\?\%s\microsoft.system.package.metadata\%s
%s\microsoft.system.package.metadata\%s
onecore\admin\appmodel\common\packageid.cpp
MainPackageIgnoredBecauseItHasAlreadyBeenAdded
FamilyName
AddingCoServicedPackageToDeploymentRequest
FullName
PackageAlsoSpecifiedByUri
FullName
PackageCurrentlyInstalled, soMustBeAddedEvenIfNotSpecified
FamilyName
FoundPackageInCoservicedSet
FamilyName
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Metered network being used and DisableMeteredNetworkBackgroundAutoUpdates policy enabled
Battery low or critical and not charging
Battery
DisableBackgroundAutoUpdates policy enabled
Roaming
Not roaming but NetworkCostType_Fixed and over data limit
Not roaming but NetworkCostType_Variable
ResolveAppInstallerUri
Absolute Uri
Indirections
Adding optional package to the deployment request
FamilyName
FullName
Adding optional package to the deployment request
Package
Multiple frameworks with same version found, choosing not yet installed package
packageFullName
Ignoring bundle package without main or optional
packageFullName
Ignoring package because of invalid related set update, picking another package instead
ignoredPackageFullName
installedPackageFullName
Ignoring destaged package
packageFullName
Ignoring paused package
packageFullName
New request enqueued
DeploymentOperation
PackageFullName
This user has insufficient rights to enqueue this request
Found existing request in queue to attach to for the new request
DeploymentOperation
PackageFamilyName
ExistingRequestState
RepairPackageRegistration
PackageFullName
UserSid
DeploymentQueueManage: Conflict comparison for next dequeueable package with operation against executing package with operation
Dequeable Package
Dequeuable package operation
Executing Package
Executing package operation
Flushing request for packager due to an overlapping force-flush operation.
Package
Deleting expired request for
Package
Dequeuing a request that requires flushing previously run request.
Found a request from a different user that requires force flushing.
Forced flush has been done for a request in lazy flush queue. Deleting from the list.
Found an expired request in lazy flush queue. Deleting from the list.
Failed to get current timestamp due to
HRESULT
Service Control Flags
Service
Requested
IsQueueEmpty
DequeuerCount
WaitHandlesEmpty
Progress
Cancelling request for package for shutdown
Package
CancelSynchronousIo failed for idle task
Thread Id
WINERROR
Set CPU priority failed for idle task
Thread Id
WINERROR
Set IO priority failed for idle task
Thread Id
OpenThread failed for idle task
Thread Id
WINERROR
stopping service
Cancelling deployment request...
DeploymentQueueManager is at maximum allowed thread count. Treating as conflict
DeploymentQueueManager: Dequeue for operation hit conflict in system wide isolation
Operation
DeploymentQueueManager: Max concurrent regular deployment request count breached. Conflict assumed
UserId
DeploymentQueueManager: Maximum number of executing PreRegisterPackageOperation reached. Will not dequeue another one
DeploymentQueueManager: The currently executing item in conflict with operation
Currently executing item
Operation
DeploymentQueueManager: Maximum amount of items executing for this user reached. Conflict assumed
UserId
DeploymentQueueManager: Two non-stage operations happening simultaneously with one bringing dependencies. Conflict assumed
DeploymentQueueManager: This item should run isolated and we can't have multiple types of same per user. Conflict assumed
DeploymentQueueManager: User SID already at limit. Conflict assumed
DeploymentQueueManager:
Currently executing item
Operation
DeploymentQueueManager: Framework will be modified. Conflict assumed
DeploymentQueueManager: Executing request is not already resolved. Conflict assumed
DeploymentQueueManager: No non-conflicting items in queue to return
DeploymentQueueManager: Skipping because there are restored items in queue and the skipped request has priority lower than InteractiveHigh
DeploymentQueueManager: Validating deployment request from queue
main package
operation
state
userSid
Failed to get current timestamp
HRESULT
Could not expire other users' requests. Force flushing this request
HRESULT
QueueStore: Cleaning up.
QueueStore: Initialized.
QueueStoreGuid
QueueStore: Initializing.
ResiliencyRecoverRequestFailed
ErrorCode
ResiliencyRecoverRequestExpiredOnExternalVolume
PackageFullName
QueueStore: Found requests
static_cast<int>(requests->Count())
QueueStore: ReadDeploymentRequests
QueueStore: Wrote entry for request
ResiliencyFile
RollbackRequest
PartA_PrivTags
wilActivity
threadId
lastState
options
request
PackageManagerPerfSummary
DeploymentOperation
PackageFullName
Summary
OverAllTime
__TlgCV__
MissingManifestDebugLog
Details
StagingSession could not be retrieved. The package may no longer be accessible or the backup manifest was lost.
PackageManagerUninstall
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
HasCentennial
HasWin32alacarte
HasFullTrust
PackageType
IsPackageEncrypted
UninstallSuccess
ErrorCode
CallingProcess
__TlgCV__
DeploymentOptions
PackageOrigin
HasExternalLocation
PackageManagerError
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
HasWin32alacarte
HasFullTrust
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsPackageDowngrade
InPlaceUpdateStatus
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
PackageName
CurrentDeploymentState
__TlgCV__
OptionalPackageSubtype
PackageFlags
PackageFlags2
PackageOrigin
IsStubApp
HasExternalLocation
PackageSourceUriProtocol
PackageDisplayName
UserSid
OriginalUserSid
AppsInUse
CachedEffectivePackageStatus
PartA_PrivTags
PackageManagerMainPackageSuccess
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
HasWin32alacarte
HasFullTrust
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
IsPackageDowngrade
MainPackageFamilyName
CallingProcess
__TlgCV__
OptionalPackageSubtype
PackageFlags
PackageFlags2
PackageOrigin
IsStubApp
HasExternalLocation
PackageSourceUriProtocol
PackageDisplayName
AppsInUse
PackageManagerUninstall
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
HasCentennial
HasWin32alacarte
HasFullTrust
PackageType
IsPackageEncrypted
UninstallSuccess
ErrorCode
CallingProcess
__TlgCV__
DeploymentOptions
PackageOrigin
IsStubApp
HasExternalLocation
PackageRollBackResult
DeploymentOperation
PackageFullName
DeploymentOptions
IsPackageDowngrade
PreviousAppVersion
ErrorCode
__TlgCV__
PackageOrigin
HasExternalLocation
PackageManagerSuccess
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
HasWin32alacarte
HasFullTrust
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
IsPackageDowngrade
MainPackageFamilyName
CallingProcess
__TlgCV__
OptionalPackageSubtype
PackageFlags
PackageFlags2
PackageOrigin
IsStubApp
HasExternalLocation
PackageSourceUriProtocol
PackageDisplayName
UserSid
OriginalUserSid
AppsInUse
CachedEffectivePackageStatus
DeploymentContextFlags
UsersPackageFamilyAlreadyInstalledCount
UsersPackageAlreadyInstalledCount
CurrentOperationContextRecorded
PartA_PrivTags
RemediationFromInplaceUpdate
PackageFullName
Flags
__TlgCV__
SkipRollbackOfUserProfileRemoval
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RollbackRequest
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
RollbackRequest
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
PackageStatus_MarkPackageRemediationForRollbackFailure
packageFullName
Rolling back a loose file operation.
A resumable restored deployment request was encountered. Moving forward with operation.
A restored deployment request was encountered that needs rollback. Cancelling deployment request.
Calling StateHandler: SharedAppsSync
Calling CleanupManager PostDeployment
Calling StateHandler: PostUpdateProcessing
Calling DataFlushingStateHandler
Calling StateHandler: CleanAppxAllUserStore
Calling StateHandler: DeStageUserData
DeStaging skipped for inbox app uninstall
Calling StateHandler: DeStaging
Calling StateHandler: MRTDataRemove
Calling StateHandler: MutablePackageDirectoryRemove
ProcessDeferredRequestStatesEnd
PackageFullName
Flags
ErrorCode
__TlgCV__
ProcessDeferredRequestStatesBegin
PackageFullName
Flags
Calling StateHandler: RestartPackagesInUse
Committing deployment request to repository.
Rolling back a restored deployment request.
Calling DeploymentPipeline::StateMachine
Calling SpecificVolumeHelper: PrepareRemovePackagesIfNeeded
Calling StateHandler: DependencyManager
Calling StateHandler: StageUserData (deferred)
Calling StateHandler: Evaluation
Calling StateHandler: Indexing
Calling SpecificVolumeHelper: PrepareSpecificVolumeForPackageFamilyIfNeeded
Calling StateHandler: BundleProcessing
Calling StateHandler: OptionalDependencyHandler
Calling CleanupManager PreDeployment
Calling StateHandler: SharedAppsRedirect
Calling SharedPackageContainerStateMachine
DeploymentRequestRunningStart
__TlgCV__
SuccessfullyConvertedCentennialTokenToUserToken
CallingProcessPackageFullName
MainPackageMoniker
Flags
PackageRollBackResult
DeploymentOperation
PackageFullName
DeploymentOptions
IsPackageDowngrade
PreviousAppVersion
ErrorCode
__TlgCV__
HasExternalLocation
PackageManagerSummaryError
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
IsPackageDowngrade
DeploymentOperation
CurrentDeploymentState
__TlgCV__
ExtendedErrorCode
IsStubApp
HasExternalLocation
FailedComponentName
FailedOSIMState
DeploymentContextFlags
UsersPackageFamilyAlreadyInstalledCount
UsersPackageAlreadyInstalledCount
CurrentOperationContextRecorded
EndOfLife list
FamilyName
GetAppXError reports there is no error; checking COM error info
Got error message from GetAppXError
ErrorMessage
Unknown fault injection type
FaultInjection notify, released notification semaphore
NotificationSemaphoreName
FaultInjection waiting for restart event finished
RestartEventName
WaitResult
FaultInjection paused, signalled pause event
PauseEventName
FaultInjection is terminating the process
MergedPriFileCreationError
HResult
packageFullName
PartA_PrivTags
Could not get an instance of the queue. Aborting thread.
Failure
HResult
LineNumber
Message
... Applicability state is Installed but this inbox package was not found in the per-user AllUserStore. Applicability State is RequiresReinstall.
Package is in a bad package status so it requires reinstall
packageFullName
packageStatus
... Applicability is offline, because package family is on an offline volume
... Applicability state is Not Installable
... Applicability state is Installable because it is a framework and concurrent architecture installs are allowed when neither of them is neutral.
... Applicability state is Installable because a higher version was found, but lower versions are installable
... Applicability state is Installable because it is not already installed and no higher version was found
... Applicability state is NotInstallable because it is already installed with a different resourceID
... Applicability state is Installable because a higher version of the package was found, but the caller is forcing a downgrade.
... Applicability state is Installed because a higher version of the package was found installed.
... Applicability state is Installable because the package is Inbox and a different version is currently installed
GetApplicability called for bundle
packageFullName
... Applicability state is Installed because the exact version, arch and language was found installed.
... Applicability state is RequiresReinstall because the exact version, arch and language was found installed, but it is in a bad status
... Applicability state is NotInstallable because a version of the package in the same family is StageInPlace (attached)
....... Package may have been blocked because payload type is unknown
... Applicability state is NotInstallable because the package is incompatible with the system by policy
... Applicability state is NotInstallable because the architecture is incompatible with the system
User has no package installed and no stub can be installed, falling back to full app
Stub preference doesn't match currently installed package.  Allowing force update from any version.
... Checking Applicability for user
userSidString
Applicability state is NotInstallable
... Applicability is offline, because it is not Installed for every user and is offline
Applicability state is RequiresReinstall because at least one user requires a reinstall
Applicability state is Installable because at least one user does not yet have the package installed
Applicability state is Installable because no users with installed packages were found, and the architecture check passed
Applicability state is Installed because some users were found, and every one of them has the package Installed
... Package may have been blocked because payload type is unknown
Applicability state is NotInstallable because the package is incompatible with the system by policy
Applicability state is NotInstallable because the architecture is incompatible with the system
All applicable packages are installed for the user, so the bundle is Installed
Installed resource package set is not a subset of the combined user and system applicable resource package sets, so it is Installable because a package needs to be removed.
Applicable resource package set is not a subset of Installed resource package set, so it is Installable because a package needs to be added.
The number of installed resource packages is less than the known user applicable resource packages, so it is installable
All applicable packages are staged for the system, so the bundle is Installed
Applicable resource package set is not a subset of Staged resource package set, so it is Installable because a package needs to be added.
Bundle is Installable - bundle is not installed but is most recently staged
Bundle is Installable - Main package is a re-install, but bundle wasn't installed
Main package is already installed.  Applicability blob contains bundle payload information so it's not necessary to update the bundle.
Main or Optional Package could not be found!
Main or Optional Package is installed and in a good package status
packageFullName
Checking applicability of app package
PackageFullName
applicabilityState
Applicable Package is not yet indexed in package repository, so it is installable
packageFullName
Bundle is not installed for the user, so it is installable
bundleFullName
No matching main package found, bundle is not reinstall
BundleFullName
Installed main package found, bundle is reinstall
MainPackageFullName
Package is not installable because architecture preservation requirement is not satisfied
packageFullName
Applicability state is not installable because the current profile is special, but special deployments are disallowed by policy
Package is end of lifed and is thus not installable
packageFullName
GetApplicabilityEx called
packageFullName
userSidString
Package is not installed for the user, so it is not a reinstall
packageFullName
Package is not yet indexed in package repository, so it is not a reinstall
packageFullName
Package is required because it is Installable for other user that has this package family
userSidString
IntentPackageFamilyOrFullName
intentPackageFamilyOrFullName
GetApplicability5 called
ApplicabilityBlob
UserSid
isForSpecificUser
isCoServicedSet
GetApplicabilityForSpecificVersion called
intentPackageFullName
Applicability4 results
userSidString
isPackageRequired
applicabilityState
Package is not required by the specified user, but query is not only for specific user--check to see if it is required for machine.
Package is required because it is already installed for that user.
Checking if package is required due to intent or installation status.
packageFamilyName
Bundle is NotInstallable - no Installable main packages.
Bundle re-install
Bundle is NotInstallable - no stub available when stub is preferred.
Phone package not installable on desktop
PackageFullName
Target MaxVersion lower than 10.0.14000.0 Not Applicable on Xbox
MaxVersion
Universal TargetDeviceFamily Not Applicable on Xbox
No Applicable TargetPlatform
PackageFullName
No manifest could be found in the local manifest path for End of Life package. This may fail later if no other manifest could be found.
PackageFullName
Attempt to remove end of life package without a local manifest, but we found a related package manifest to remove instead
OriginalEOLPackage
RemovedPackage
No manifest could be found in the local manifest path. This may fail later if no other manifest could be found.
PackageFullName
Failed Remove of package because it did not contain an optional or a resource package.
PackageFullName
No main packages found to reset
SetContentGroupState
PartA_PrivTags
wilActivity
threadId
package
group
state
progress
AppxMiniRepositoryAfterAclRepair
PackageFullName
ACLKeyPath
SDDLString
AppxMiniRepositoryBeforeAclRepair
PackageFullName
ACLKeyPath
SDDLString
ServerSideRepairPackageFileAclsImplementation
PackageFullName
fileRelativePath
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SetContentGroupState
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SetContentGroupState
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
ActivityFailure
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityFailure
PartA_PrivTags
wilActivity
hresult
threadId
currentContextName
currentContextMessage
StreamingDeploymentRequestNotFoundExitingGracefully
RequestedPackageFullName
StreamingDeploymentRequestFound
RequestedPackageFullName
StreamingRequestPackageMoniker
CreatingNewStreamingDeploymentRequest
RequestedPackageFullName
RelatedSetsPresentForPackagedService
packageFullName
InPlaceUpdatePendingForPackagedService
packageFullName
PackageManagerStartDeploymentWithDependencies
DeploymentOperation
SecondaryPaths
HasExternalLocation
Flags
FlagsHigh
CallingProcess
__TlgCV__
PartA_PrivTags
PackageManagerStartDeploymentForAllApplications
DeploymentOperation
SecondaryPaths
HasExternalLocation
Flags
FlagsHigh
CallingProcess
__TlgCV__
PartA_PrivTags
PackageManagerStartDeployment
DeploymentOperation
HasExternalLocation
Flags
FlagsHigh
CallingProcess
__TlgCV__
PackageManagerSummaryError
SummaryError
MainParameter
ErrorCode
CallingProcess
__TlgCV__
ExtendedErrorCode
HasExternalLocation
Attempt to Enable AppContainer RPC interface - RpcEpRegister returned error
result
Attempt to Enable RPC interface - RpcEpRegister returned error
result
Attempt to Enable RPC interface - RpcServerInqBindings returned error
result
Attempt to Enable RPC interface - RpcServerRegisterIf3 returned error
result
Attempt to Enable RPC interface - RpcServerRegisterIfEx returned error
result
Attempt to Enable RPC interface - RpcServerUseProtseq ncacn_hvsocket returned error
result
Attempt to Enable RPC interface - RpcServerUseProtseq returned error
result
Attempt to Enable RPC interface - calls out of sequence
Updating filter driver for package
packageFullName
externalDirectory
projectionID
MoveFileEx failed
HR MoveFile
HR DelayUntilReboot
externalDirectory
Updating app data mountpoint for package failed. Continuing to next package.
PackageFullName
Updating app data mountpoint for package failed because data is on internal. Attempting to move to external
PackageFullName
SetVolumeStateRequest::UpdateAppDataMountPoints - Failed to create state mounted folders
ErrorCode
MethodName
PackageFamilyName
VolumeMountPoint
VolumeKey
VolumeMediaId
HasCentennial
UserSid
StageUserData processing StateRepository package
InputPackageFullName
PackageFullNameToUse
RepairAppDataACLForPackage
PackageFullName
Failed to compare payload hashes in UpdateAgentGetDownloadPackageReturnValue
payload->hash.GetChars()
payload->id.GetChars()
payload->downloadFile.GetChars()
RemovePIIfromPath
GetAppXLogMessageFromDataFailure
result
Repository initialize
readOnly
workId
Attaching log file to WER report (to be deleted after submission)
Attaching file to WER report
Attaching data file to WER report (to be deleted after submission)
WER submit result
result
Submitting WER report
packageManagerState
osimState
extensionHandler
buildVersion
etwEventId
Ignoring optional package -- unable to get optional package row
optionalBundle
HRESULT
Package does not exist for current user
packageFullName
To Be Installed Related Set
toBeInstalledRelatedSetPackageFullName
Currently Installed Related Set
currentlyInstalledRelatedSetPackageFamily
Ignoring optional package - did not find an indexed package row
optionalPackageFamilyName
FoundUnmatchingOptionalBundleVersion
lookingFor
publisher
version
found
Ignoring paused optional package
packageFullName
optionalPackage
Ignoring optional package - failed to get package row
HRESULT
packageFullName
optionalBundle
Found package in related set
packageFullName
optionalPackage
Getting Main Package indexed row failed
packageFullName
Getting related set
packageFullName
mainPackage
GetNonExactManifestReader
PackageFullName
SimilarPackageFullName
ManifestReaderFound
PackageStatus_DependencyPackageIssue
packageFullName
PackageStatusUpdateBad_ModifiedPackage
packageFullName
currentStatus
desiredStatus
statusToClear
statusToSet
callOrigin
SetPackageStatusModifiedReason
packageFullName
offlineSoftwareHive
modifiedReason
GetSessionUserSidQueryTokenFailed
::GetLastError()
FileInUse
PartA_PrivTags
wilActivity
threadId
filename
ProcessInformation
packageFullName
imageName
commandLine
userSid
sessionId
processId
FileInUse
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FileInUse
PartA_PrivTags
wilActivity
hresult
threadId
AppxInvestigationFile
FilePath
MutablePackageDirectoryAddProcessing
PartA_PrivTags
wilActivity
threadId
packagefullName
packageRoot
mutablePackageDirectory
MutablePackageDirectoryMoveProcessing
PartA_PrivTags
wilActivity
threadId
packagefullName
oldPackageRoot
oldMutablePackageDirectory
newPackageRoot
newMutablePackageDirectory
MutablePackageDirectoryRepairProcessing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MutablePackageDirectoryRepairProcessing
PartA_PrivTags
wilActivity
hresult
threadId
MutablePackageDirectoryMoveProcessing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MutablePackageDirectoryMoveProcessing
PartA_PrivTags
wilActivity
hresult
threadId
AppliedACLs
EfsOpenFileRawFailed
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
EfsOpenFileRawFailedAttemptingRetry
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
EfsOpenFileRawFailedAttemptingRetryForWrite
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
HS_PACKAGE_HANDLE_TABLE::Cleanup
message
HS_PACKAGE_HANDLE_ENTRY destructor
message
packageFullName
HamServicingClosePackageHandle
message
packageFullName
SLMTerminateSingleServiceActivity
PartA_PrivTags
wilActivity
threadId
Package
Service
SLMTerminateServicesInPackageActivity
PartA_PrivTags
wilActivity
threadId
Package
SLMGetActiveAumidsInPackageActivity
PartA_PrivTags
wilActivity
threadId
Package
SLMAllowUninstallActivity
PartA_PrivTags
wilActivity
threadId
Package
SLMTerminateApplicationsActivity
PartA_PrivTags
wilActivity
threadId
SLMGetBlockingAumidsActivity
PartA_PrivTags
wilActivity
threadId
ServiceLifetimeManager::ShouldPackageBeServiced - NotPresentForUser Or OnDemandRegistration
PackageFullName
UserSidString
CurrentUserVisibility
EffectivePackageStatus
SLMTerminateSingleServiceActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
Service
terminateService
SLMTerminateSingleServiceActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
Service
terminateService
SLMTerminateSingleServiceActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMTerminateSingleServiceActivity
PartA_PrivTags
wilActivity
hresult
threadId
SLMTerminateServicesInPackageActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMTerminateServicesInPackageActivity
PartA_PrivTags
wilActivity
hresult
threadId
SLMGetActiveAumidsInPackageActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
SLMGetActiveAumidsInPackageActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
SLMGetActiveAumidsInPackageActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMGetActiveAumidsInPackageActivity
PartA_PrivTags
wilActivity
hresult
threadId
ServiceLifetimeManager::AllowUninstall - Don't call TerminateServicesInPackage
Method
PackageFullName
DoNotServicePackageReason
SLMAllowUninstallActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Package
SLMAllowUninstallActivity
PartA_PrivTags
wilActivity
hresult
threadId
Package
SLMAllowUninstallActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMAllowUninstallActivity
PartA_PrivTags
wilActivity
hresult
threadId
ServiceLifetimeManager::TerminateApplications - Don't call TerminateServicesInPackage
Method
PackageFullName
DoNotServicePackageReason
SLMTerminateApplicationsActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMTerminateApplicationsActivity
PartA_PrivTags
wilActivity
hresult
threadId
ServiceLifetimeManager::GetBlockingAumids - Don't call GetActiveAumidsInPackage
Method
PackageFullName
DoNotServicePackageReason
SLMGetBlockingAumidsActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
SLMGetBlockingAumidsActivity
PartA_PrivTags
wilActivity
hresult
threadId
Added module
module
Module already loaded
module
Extension DLLs previously loaded.
moduleCount
No Extension DLLs previously loaded
threadId
AppxOSIMExtensionDLLs::Cleanup
DependencyResolverRequeueIgnoredError
PackagesCannotBeInstalledConcurrentlyDueToResourceID
package1
package2
PackagesCannotBeInstalledConcurrentlyDueToFramework
package1
package2
AppPackagesInSameFamilyCannotBeInstalledConcurrently
package1
package2
PackagesCannotBeInstalledConcurrentlyDueToArchitecture
package1
package2
BundlesInSameFamilyCannotBeInstalledConcurrently
package1
package2
PackageCannotUpdateOtherPackageDueToFullName
package1
package2
PackageCannotUpdateOtherPackageDueToPackageType
package1
package2
PackageCannotUpdateOtherPackageDueToSameVersion
package1
package2
FrameworkCannotUpdateOtherPackageDueToFullName
package1
package2
ArchitectureNotCompatible
RemovingWoWPackageDependency
dependent
supplier
IgnoringSkippableFramework
framework
AddingPackageDependency
dependent
supplier
RemovingPackageDependency
dependent
supplier
DeletingDependencyGraph
package
packageKey
UpdatingDependencyGraph
package
packageKey
IncomingPackageIsUpdate
incomingPackage
versionOnMachine
...ComparedAgainstInstalledPackage
package
packageKey
...but the architecture is no longer supported on this system
...ArchitectureNotCompatible
CheckForUpdatesAndConflicts
package
packageKey
PackageFamilyStillInstalledForAnotherUser
package
CleaningUpStagedPackagesInFamily
package
DevModeResolvedToNotInstalledFramework
framework
CheckForFrameworkConflicts
package
...ComparedToExistingPackage
package
packageKey
PausedandInstalledPackage
PackageFullName
__TlgCV__
EnqueueSeparateRemoveOperationForUnusedOptionalPackage
package
RemovingResourcePackage
package
KeepingOptionalPackageBecauseMainStillInstalled
package
RemovingOptionalPackageFamily
package
RemovingUnusedFramework
package
RemovingPackageInOptionalFamily
package
deploymentState
CheckedPackageHasDependents
package
packageKey
hasDependents
MovingFrameworkFromUpdateToAddList
package
AlreadyPendingUpdateRegistrationNotDeferred
package
DeferringDependentPackageUpdateRegistration
dependentPackage
mainPackage
PackageNotDeferred
package
DeferringMainPackageUpdateRegistration
package
RelatedSetSpecifiesDifferentVersionOptional
mainPackage
optionalPackage
OptionalPackageIsSpecificVersionInRelatedSet
MainPackageFoundForOptional
mainPackage
optionalPackage
optionalPackageVersion
AddVisibilityInfoAlreadyExists
InboxPackageFullNameDoesNotMatchManifest
invalidPackage
manifestPackage
AddListPackageIsUsedResult
package
packageKey
packageIsUsed
AddListBundlePackage
package
packageKey
AddListAppPackage
package
packageKey
AppPackage
packageKey
package
InsertPackageToDestagePackageList
package
packageKey
CouldNotFindDifferentVersionOfSamePackage
package
...butNotInstalledForCurrentUser.
RemovePackageFromList
package
FoundDifferentVersionOfSamePackage
package
existingPackage
AddPackageList
package
SplitIntoNewActionList
PackageDependency
package
packageKey
dependency
InPlaceUpdate
StageInplaceUpdate
ApplyInplaceUpdate
UpdateSize
PackageFullName
__TlgCV__
RestartPackagesInUseSkipped
EnablePackageStatusSkipped
Ignore RegistrationStateHandler Error In UserProfileDeletionScenario
ErrorCode
Skip PackagesInUseHandler because deployment operation is SYSTEM
SkippingDeferredStaging
options
operation
StateHandler
PartA_PrivTags
wilActivity
threadId
StateMachine
PartA_PrivTags
wilActivity
threadId
Operation
StateHandler
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
StateHandler
PartA_PrivTags
wilActivity
hresult
threadId
StateHandler
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
StateHandler
PartA_PrivTags
wilActivity
hresult
threadId
StateMachine
PartA_PrivTags
wilActivity
hresult
threadId
StateMachine
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
DownlevelInstalledKeyAlreadyExists
userSid
currentPackage
existingPackage
Using origin derived from signature
signatureOrigin
hasWindowsRTEKU
Assigned unknown origin to package with untrusted signature because device is dev unlocked
Using cached signature origin
signatureOrigin
Assigned not validated origin to unsigned package
SignatureOrigin on disk does not match origin from repository
signatureOrigin
repositoryOrigin
Pre-Approving package
package
Removed package in related set because the user does not have the package family installed and did not request this optional package to be installed.
relatedSetPackage
package
Keeping package in related set because the user has the package family installed.
relatedSetPackage
package
Keeping package in related set due to non-OK package status
relatedSetPackage
package
status
Removed package from related set because it is installed and in PACKAGE_STATUS_OK.
relatedSetPackage
package
Keeping package in related set because it is the main package and hasn't been installed yet.
relatedSetPackage
package
Keeping package in related set due to not-installed deployment state
relatedSetPackage
package
deploymentState
User doesn't yet exist in database, just install all packages in the related set.
Adding package to the deployment request
package
Keeping package from related set because this is a repair operation.
relatedSetPackage
package
Determining whether to remove package from related set
package
At end of OptionalDependencyHandler packages
Package
At beginning of OptionalDependencyHandler packages
Package
MSIXInBundle
packageFamilyName
__TlgCV__
CannotProvisionPackage
PackageFullName
IsInbox
IsDevMode
PackageType
SourceBundleId
Removing inbox app from PackageUser table as part of user profile deletion.
package
User-initiated uninstall of non-uninstallable app is not supported.
package
AppxPackageStubStateChanged
PackageFullName
HasSwitchedToStub
PartA_PrivTags
Package approved for unsigned package origin
Package approved based on Enterprise origin and sideload settings
Package approved based on Windows Component or Windows Store origin
Package approved based on unsigned package origin and dev unlock
Package approved based on signed package origin and dev unlock or sideload settings
ApprovePackage
Package
Destaging action for package. (Inbox packages will be skipped later.)
package
StagingAction
Package is in a bad state and cannot be used as baseline for an update.
package
SelectedUpdateBaseline
package
packageInplacePending
packageBaseKey
baseline
Package is in a modified or tampered state and must be re-staged.
package
EvaluatedPackageStagingAction
package
action
AllUserPackageRemediation
CallingProcess
PackageFullName
PackageStatus
FailIfNeedsRemediation
__TlgCV__
Staging action for package
package
stagingAction
PackageUpdateFailedAttemptingRestage
HResult
package
isEncrypted
baselinePackage
__TlgCV__
PackageUpdateFailed
HResult
package
isEncrypted
baselinePackage
__TlgCV__
FailedToApplyInPlaceUpdateDuringRegisterDueToBlockcacheIncomplete
packageFullName
isOnSystemVolume
requiresEAIntegrity
__TlgCV__
StagingSessionsReadyForContentGroupReorderingEventSet
StreamingRequestPackageMoniker
StagingStateHandlerStagePackage
stagingAction
EmbeddedAutoUpdatesStateHandler::Execute()
Found Embedded AutoUpdate AppInstaller File
For PackageFullName
ForciblyTerminatedProcess
package
MovingPackageToDeferredRegistrationList
package
AppInUseMovedToDeferredList
AddingAUMIDToRelaunchList
AUMID
IgnoringPLMErrorBecauseUserClosedSession
DisregardingAUMIDForRelaunchList
AUMID
PackagesInUseHandlerExecute
PackagesInUseHandlerCreateFoundNoActionRequired
IndirectlyServicedPackage
package
DirectlyServicedPackage
package
QueueRegistrationForRepairActivity
PartA_PrivTags
wilActivity
threadId
Package
RemoveOrphanedDeletedFolder
DeletedFolder
QueueRegistrationForRepairActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
QueueRegistrationForRepairActivity
PartA_PrivTags
wilActivity
hresult
threadId
StageUserDataStateHandler::Execute
Operations
StageUserDataStateHandler::Create
Operations
ReplacedOutgoingPackage
outgoingPackageFromUpdateList
downlevelInstalledPackage
Ignoring failure in CoCreateInstanceInSession because session has been terminated
Ignoring failure in CoCreateInstanceInSession--this failure indicates sihost.exe and PLM are not accessible at this time
Ignoring failure in CoCreateInstance-this failure indicates CLM is not accessible at this time
ActivityStoppedAutomatically
NotifyPrelaunchServce
aumid
sessionId
signatureOrigin
RestartHandlerEnableStatus
PartA_PrivTags
wilActivity
threadId
RestartHandlerEnableStatus
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RestartHandlerEnableStatus
PartA_PrivTags
wilActivity
hresult
threadId
RestartHandlerFinishedServicing
PartA_PrivTags
wilActivity
threadId
RestartHandlerFinishedServicing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RestartHandlerFinishedServicing
PartA_PrivTags
wilActivity
hresult
threadId
SkipDestageForResourcePack
packageFullName
SkipDestageForInbox
packageFullName
PackageFamily is not in Staged key
package
MutablePackageDirectoryUpdateProcessing
PartA_PrivTags
wilActivity
threadId
oldPackageFullName
oldPackageRoot
oldMutablePackageDirectory
newPackageFullName
newPackageRoot
newMutablePackageDirectory
Rolling back external mutable directory projection
ExternalMutableDirectory
PreviousProjectionId
CurrentProjectionId
Projecting update--external location was previously projected
ExistingProjectionId
ExternalMutableDirectory
Merge package in order
InstalledLocation
MergedDirectory
Package family name to merge was not specified in ordering
packageFamilyName
Not merging package because it's not in the related set
packageFullName
isInRelatedSetFamily
Specified ordering package family name not found to merge
packageFamilyName
Unexpected multiple existing projection ids exist. Ignoring.
projectionId
existingProjectionId
MutablePackageDirectoryRemoveProcessing
PartA_PrivTags
wilActivity
hresult
threadId
MutablePackageDirectoryRemoveProcessing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MutablePackageDirectoryUpdateProcessing
PartA_PrivTags
wilActivity
hresult
threadId
MutablePackageDirectoryUpdateProcessing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MutablePackageDirectoryAddProcessing
PartA_PrivTags
wilActivity
hresult
threadId
MutablePackageDirectoryAddProcessing
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
BundlePackageInstallStateMismatch
BundleInstalledPackage
MainOrOptionalPausedPackage
GetDownlevelInstalledPackageForUser
HResult
OnDemandRegisterPackageFound
HResult
packageFullName
OnDemandRegisterPackageNotFound
packageFullName
PartA_PrivTags
Deployment operation has been redirected to target the DefaultAccount.
Notified ARS of package changes to DefaultAccount.
StateRepositoryDownlevelReadFailed
Action
PackageFullName
ErrorCode
LogMissingAppPackageSisDir
Package
LogMissingAppPackageInfo
Package
Reason
TrackServicingTerminatedAppFailed
trackServiceHR
FeatureError
featureId
featureVersion
featureBaseVersion
featureStage
lineNumber
module
process
originFile
originLineNumber
originModule
originName
message
callerModule
callerReturnAddressOffset
originCallerModule
originCallerReturnAddressOffset
FeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
FeatureVariantUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
variantKind
variant
addend
EnabledFeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
DeleteContentsInFolderError
folder
DeleteFileError
fileName
returnValue
CouldNotDeletePackageFile
lastError
SetFileIntegrityInfoFailed
static_cast<DWORD>(origin)
static_cast<DWORD>(integrityState)
integrityResult
FileIntegrityStateLessThanFull
fileName
access
isEncrypted
requiresEAIntegrity
fileSizeValid
fileSize
integrityState
The destination file exists but has an unexpected length. It will be removed.
actualLength
expectedLength
The destination file exists but requires remediation. Delete it instead.
BinaryDeltaCompression
PartA_PrivTags
wilActivity
threadId
BinaryDeltaCompression
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
BinaryDeltaCompression
PartA_PrivTags
wilActivity
hresult
threadId
BDC_ApplyInfo
SourceFilePath
SourceFileSize
TargetFilePath
TargetFileSize
StreamingStatusUnavailableForLinkTarget
filePath
error
StreamingStatusGetFileSizeError
filePath
expectedFileSize
error
ApplyUpdatePayloadFiles
PartA_PrivTags
wilActivity
threadId
oldPackage
newPackage
InPlaceFileInfo
packageRelativeFilePath
isRequired
hasBlockCacheFile
blockCacheFileComplete
targetInBaseline
needsTrimming
targetSize
encrypted
fullValidation
RequiredFileNotYetComplete
ForceCopyFileResult
result
FailedOpeningBaselineForceCopy
sourceFilePath
openError
MoveAndShrink
ApplyBlockCache
BlockCacheFileIsNotComplete
setFilePointerResult
setFilePointerGLE
newFilePointer
readFileResult
readFileGLE
didRead
sizeof(entry)
isCacheFileTailBlockResult
entry.Version
entry.Tag
entry.Offset
entry.Length
Finalize
ApplyUpdatePayloadFiles
PartA_PrivTags
wilActivity
hresult
threadId
ApplyUpdatePayloadFiles
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
StageUpdatePayloadFiles
PartA_PrivTags
wilActivity
threadId
packageSource
packageRoot
oldRoot
forInPlaceUpdate
EncryptedFilePreallocationFailedIgnoringError
hresult
fileName
isEncrypted
AcquisitionCost
packageRoot
stageCost
hardlinkCost
metadataStageCost
totalFileSize
downloadFileCount
UpdateCost
packageRoot
packageRootOld
updateCost
metadataStageCost
totalFileSize
totalChangedSize
downloadFileCount
StageUpdatePayloadFiles
PartA_PrivTags
wilActivity
hresult
threadId
readiedInPlaceChanges
StageUpdatePayloadFiles
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
readiedInPlaceChanges
StageUpdatePayloadFiles
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
StageUpdatePayloadFiles
PartA_PrivTags
wilActivity
hresult
threadId
Creating StagingSession: appx package
Creating StagingSession: appx bundle
Creating StagingSession: encrypted package
Delaying removal of package folder as we are still in the window that users can uninstall the OS upgrade. Keeping the package folder in case OS downgrades.
package
LinkTargetIsPartOfAutomaticContentGroup
filePath
Duplicate file was not fully streamed. So, it is not available for hard-linking.
linkTarget
AppxFileRangesInventoryPopulated
PackageMoniker
NoContentGroupMapForPackage
package
GetEncryptedStreamingReader
keyIdSize
keyId
isDiffusionEnabled
encryptionAlgorithm
BlockcacheFileDisappeared
error
SetTrustLabelAtLowPriority
packageFullName
flags
Unsupported
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
wilActivity
threadId
package
ReapplyAcls
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
wilActivity
hresult
threadId
Analyze
PartA_PrivTags
wilActivity
threadId
UpdateStatistics
PartA_PrivTags
wilActivity
threadId
Checkpoint
PartA_PrivTags
wilActivity
threadId
StateRepository.ResourcePriority.Inadequate
ErrorCode
DatabasePtr
Partition
WorkId
CpuPriority
IoPriority
MemoryPriority
TransactionCallerID
PartA_PrivTags
StateRepository.Database.Statistics
Database
StatementCache.Count
StatementCache.Hits
StatementCache.Misses
StatementCache.Lifespan
CacheUsed
CacheHit
CacheMiss
CacheWrite
CacheSpill
SchemaUsed
StatementUsed
LookasideUsed
LookasideUsedPeak
LookasideHitPeak
LookasideMissSizePeak
LookasideMissFullPeak
DatabasePtr
Partition
WorkId
PartA_PrivTags
Analyze
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Analyze
PartA_PrivTags
wilActivity
hresult
threadId
UpdateStatistics
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
UpdateStatistics
PartA_PrivTags
wilActivity
hresult
threadId
Database.Checkpoint
Filename
CheckpointMode
SizeInPages
NumberOfPagesCheckpointed
PartA_PrivTags
Checkpoint
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Checkpoint
PartA_PrivTags
wilActivity
hresult
threadId
Repository.SetOptions.SetCacheSize
ErrorCode
Filename
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PartA_PrivTags
wilActivity
threadId
Partition
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PartA_PrivTags
wilActivity
hresult
threadId
StateRepository.FailFastBusySnapshot.StatementInProgress
ErrorCode
Index
DatabasePtr
StatementPtr
ExpandedSQL
PartA_PrivTags
StateRepository.FailFastBusySnapshot
ErrorCode
StatementCount
BusyCount
DatabasePtr
FirstBusySQL
ProcessingSQL
PartA_PrivTags
DatabaseCorruption.Detected
ErrorCode
Action
Partition
Filename
Elapsed
FirstReportedUptime
FirstReportedWhen
PartA_PrivTags
SQLite.AutoIndexWarning
ErrorCode
Message
PartA_PrivTags
StateRepository.DatabaseCache.Statistics
Cache.Count
Cache.Hits
Cache.Misses
DatabaseCache.Lifespan
MemoryUsed
MemoryUsedPeak
PageCachePeak
PageCacheUsed
PageCacheUsedPeak
PageCacheOverflow
PageCacheOverflowPeak
ScratchUsed
ScratchUsedPeak
ScratchOverflow
ScratchOverflowPeak
ScratchSizePeak
MallocSizePeak
MallocCount
MallocCountPeak
PartA_PrivTags
Clear
PartA_PrivTags
wilActivity
threadId
Clear
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Clear
PartA_PrivTags
wilActivity
hresult
threadId
DatabaseCache.Add
DatabaseConnection
PartA_PrivTags
DatabaseCache.Get
DatabaseConnection
PartA_PrivTags
WritePrimaryTiles
PartA_PrivTags
wilActivity
threadId
tileCount
DetectAndFixPrimaryTileUserConstraintUniqueErrors
PartA_PrivTags
wilActivity
threadId
applicationIdentityId
tileUniqueId
userId
GetTileUniqueIdFromTDL
PartA_PrivTags
wilActivity
threadId
applicationUserModelId
MigrateSecondaryTilesFromTDL
PartA_PrivTags
wilActivity
threadId
applicationUserModelId
AddPrimaryTileUserRecord
PartA_PrivTags
wilActivity
threadId
applicationIdentity
userId
workId
UpdatePrimaryTileUser
PartA_PrivTags
wilActivity
threadId
applicationUserModelId
userId
workId
CreatePrimaryTileUser
PartA_PrivTags
wilActivity
threadId
applicationUserModelId
userId
workId
RemoveSecondaryTilesForUserAndApplicationIdentity
PartA_PrivTags
wilActivity
threadId
applicationIdentityId
userId
RemoveTilesForRemovedApplicationsForUserAndPackage
PartA_PrivTags
wilActivity
threadId
packageId
userId
RemoveSecondaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
threadId
packageId
userId
RemovePrimaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
threadId
packageId
userId
RemovePrimaryTileForUserAndApplicationIdentity
PartA_PrivTags
wilActivity
threadId
applicationIdentityId
userId
AddOrUpdatePrimaryTileForUserAndApplication
PartA_PrivTags
wilActivity
threadId
applicationUserModelId
userId
AddOrUpdatePrimaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
threadId
packageId
userId
ReIndexTilesForPackage
PartA_PrivTags
wilActivity
threadId
packageFullName
CreateTilesForAllRegisteredPackagesForUser
PartA_PrivTags
wilActivity
threadId
userId
CreateTilesForAllRegisteredPackages
PartA_PrivTags
wilActivity
threadId
userId
userSid
isMigration
RemoveSecondaryTilesForUser
PartA_PrivTags
wilActivity
threadId
packageFullName
userId
userSid
RemoveTilesForRemovedApplicationsForUser
PartA_PrivTags
wilActivity
threadId
packageFullName
userId
userSid
RemovePrimaryTileForUser
PartA_PrivTags
wilActivity
threadId
packageFullName
userId
userSid
RegisterPrimaryTilesForUser
PartA_PrivTags
wilActivity
threadId
incomingPackageFullName
userId
userSid
PrimaryTileAlreadyExists
ApplicationId
TileId
PrimaryTileCreated
ApplicationId
TileId
RemovePrimaryTilesForPackage
PartA_PrivTags
wilActivity
threadId
packageFullName
AddPrimaryTilesForPackage
PartA_PrivTags
wilActivity
threadId
packageFullName
CreateInstance
PartA_PrivTags
wilActivity
threadId
MigratedSecondaryTilesFromTDL
ApplicationUserModelId
UserId
FailedMigratingSecondaryTilesFromTDL
ApplicationUserModelId
UserId
HResult
ObtainedTileUniqueIdFromTDL
ApplicationUserModelId
TileUniqueId
FailedGettingTileUniqueIdFromTDL
ApplicationUserModelId
HResult
FoundConstraintViolationApplicationIdentity
ApplicationIdentityId
UserId
WorkId
FoundConstraintViolationTileUniqueIdDifferentUser
TileUniqueId
CurrentUserId
DeletedUserId
WorkId
FoundConstraintViolationTileUniqueIdSameUser
TileUniqueId
UserId
WorkId
PrimaryTileUserCreated
ApplicationUserModelId
UserId
WorkId
TileUniqueId
FoundRemovedApplicationIdentity
ApplicationUserModelId
ApplicationIdentityId
UserId
SecondaryTileRemoved
SecondaryTileId
ApplicationIdentityId
UserId
FoundApplicationForSecondaryTileRemoval
ApplicationUserModelId
ApplicationIdentityId
UserId
DuplicateTileUniqueId
ApplicationUserModelId
PrimaryTileId
TileUniqueId
FailedToAddPrimaryTileUser
ApplicationIdentity
UserId
WorkId
HResult
UniqueConstraintCollisionRepairUnsuccessful
ApplicationIdentity
UserId
WorkId
HResult
PrimaryTileUserUpdated
ApplicationUserModelId
UserId
WorkId
FoundApplicationForPrimaryTileRemoval
ApplicationUserModelId
ApplicationIdentityId
UserId
FailedToDeleteOldTiles
PackageFullName
HResult
OldPrimaryTileNotFound
OldApplicationId
TileId
DeletedOldPrimaryTile
PrimaryTileId
OldApplicationId
TileId
PrimaryTileUserNotFound
ApplicationIdentityId
UserId
PrimaryTileUserRemoved
ApplicationIdentityId
UserId
TileUniqueId
PrimaryTileRemoved
PackageFullName
PrimaryTileId
PackageId
ApplicationId
FailedToRegisterTile
PackageFullName
HResult
userSid
FailedToCreatePrimaryTiles
PackageId
PackageFullName
HResult
userSid
PackageFound
PackageFullName
IsMain
IsOptional
PackageSkipped
PackageFullName
IsMain
IsOptional
WritePrimaryTiles
PartA_PrivTags
wilActivity
hresult
threadId
WritePrimaryTiles
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
DetectAndFixPrimaryTileUserConstraintUniqueErrors
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
DetectAndFixPrimaryTileUserConstraintUniqueErrors
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
MigrateSecondaryTilesFromTDL
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MigrateSecondaryTilesFromTDL
PartA_PrivTags
wilActivity
hresult
threadId
GetTileUniqueIdFromTDL
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
GetTileUniqueIdFromTDL
PartA_PrivTags
wilActivity
hresult
threadId
AddPrimaryTileUserRecord
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
AddPrimaryTileUserRecord
PartA_PrivTags
wilActivity
hresult
threadId
UpdatePrimaryTileUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
UpdatePrimaryTileUser
PartA_PrivTags
wilActivity
hresult
threadId
CreatePrimaryTileUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
CreatePrimaryTileUser
PartA_PrivTags
wilActivity
hresult
threadId
RemoveTilesForRemovedApplicationsForUserAndPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemoveTilesForRemovedApplicationsForUserAndPackage
PartA_PrivTags
wilActivity
hresult
threadId
RemoveSecondaryTilesForUserAndApplicationIdentity
PartA_PrivTags
wilActivity
hresult
threadId
RemoveSecondaryTilesForUserAndApplicationIdentity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemoveSecondaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
hresult
threadId
RemoveSecondaryTilesForUserAndPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemovePrimaryTileForUserAndApplicationIdentity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemovePrimaryTileForUserAndApplicationIdentity
PartA_PrivTags
wilActivity
hresult
threadId
RemovePrimaryTilesForUserAndPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemovePrimaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
hresult
threadId
AddOrUpdatePrimaryTileForUserAndApplication
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
AddOrUpdatePrimaryTileForUserAndApplication
PartA_PrivTags
wilActivity
hresult
threadId
AddOrUpdatePrimaryTilesForUserAndPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
AddOrUpdatePrimaryTilesForUserAndPackage
PartA_PrivTags
wilActivity
hresult
threadId
ReIndexTilesForPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ReIndexTilesForPackage
PartA_PrivTags
wilActivity
hresult
threadId
CreateTilesForAllRegisteredPackagesForUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
CreateTilesForAllRegisteredPackagesForUser
PartA_PrivTags
wilActivity
hresult
threadId
CreateTilesForAllRegisteredPackages
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
CreateTilesForAllRegisteredPackages
PartA_PrivTags
wilActivity
hresult
threadId
RemoveTilesForRemovedApplicationsForUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemoveTilesForRemovedApplicationsForUser
PartA_PrivTags
wilActivity
hresult
threadId
RemoveSecondaryTilesForUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemoveSecondaryTilesForUser
PartA_PrivTags
wilActivity
hresult
threadId
RemovePrimaryTileForUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemovePrimaryTileForUser
PartA_PrivTags
wilActivity
hresult
threadId
RegisterPrimaryTilesForUser
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RegisterPrimaryTilesForUser
PartA_PrivTags
wilActivity
hresult
threadId
RemovePrimaryTilesForPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RemovePrimaryTilesForPackage
PartA_PrivTags
wilActivity
hresult
threadId
AddPrimaryTilesForPackage
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
AddPrimaryTilesForPackage
PartA_PrivTags
wilActivity
hresult
threadId
CreateInstance
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
CreateInstance
PartA_PrivTags
wilActivity
hresult
threadId
MigrateSecondaryTilesFromTdl
PartA_PrivTags
wilActivity
threadId
aumid
MigrateSecondaryTile
tileId
TileAlreadyExists
tileId
SecondaryTileMigrated
ApplicationUserModelId
UserId
TileId
DontMigrateSecondaryTiles
MigrateSecondaryTilesFromTdl
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MigrateSecondaryTilesFromTdl
PartA_PrivTags
wilActivity
hresult
threadId
Method
PartA_PrivTags
wilActivity
threadId
Symbol
Method
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Method
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Symbol
Method
PartA_PrivTags
wilActivity
hresult
threadId
Method
PartA_PrivTags
wilActivity
hresult
threadId
Symbol
Signing certificate does not chain up to the Microsoft Root Certificate Authority
Signing certificate does not chain up to the Microsoft Application Root Certificate Authority
Signing certificate does not chain up to Microsoft Flighting Root 2014
Signing Certificate has no EKU fields (valid for all EKU)
PackagedCom_GetMaxInstallOrder
MaxInstallOrder
PackagedCom_SetMaxInstallOrder
MaxInstallOrder
PackagedCom_SetIncomingPackageInstallOrder
IncomingPackage
IncomingPackageInstallOrder
DEH is applicable and will be run
FixImpersonationIfNecessary skipped
DEH Name
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.AppxDeploymentFallback
Microsoft-Windows-AppModel-State
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.Wil.FeatureLogging
Microsoft.Windows.StateRepository.Service
Microsoft.Windows.AppModel.Tiles
Microsoft.Windows.AppXDeploymentExtensions
AppxDeploymentServer.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
$B(0&~,
j j$=
6V0V2^,p<
0V2^*
0V2^*
J&f$8
b&f$8
$j(T 
d*d$T(
*X$T(
l$J -
<4b2R.R*R&R
44d2R.R*R&R
<8b6R2R.R*R&R
D<b8\6
2R.R*R&R
4<b8\6
2R.R*R&R
2R.R*R&R
:B.@~F
2R.R*R&R
:@bFR<r6
2R.R*R&R
:J.H~B
FR<r6
2R.R*R&R
FR<r6
2R.R*R&R
FR<r6
2R.R*R&R
F"0&l(
.~(Z,
BNfJZ
HNlJX
lXdPXJV
BX0\l`
l"r B
<"p B
`$l(V B
F$l(V B
B.>r@
8f:f4)
8X:X2
8X:X2
8X:X2
HdF$0V
NXF20V
LVNVF20p
<RjXXLXNXF20r
LVNVF20p
XVLVNVF20p
LVNVF20p
LVNVF20p
J$-<"]
`08B0{
08@HPX
08@HPX`hpx
08@HPX`hpx
08@HPX`hpx
"\&Z"r
&\$,&
($2m#4
4H6H4`2e
2h:\86:V8
Ft<LFv<
2vH\<,H%
h h"h$h&h(h*h,h.
 n"|(
,j0p4n8
6J2N.N*
6J2N.N*f$N&
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6L2P.P*P$P&p
6J2N.N*N$N&l
2N.N*N$N&l
.N*N$N&l
*N$N&l
 B"n$r&r(
@8@Nz
$|*:,`.|0
26.@(
:v6h(l&D D
.\&D D
p2L= 
b"r&N(p
P>rBN*N
"P$> 
"P$H 
"P$H 
"P$H 
"P$Z"P$
``pzX
P2Lb#
P2P@$
N$J&J*\,J.
,J$N N
,J$N N
,J$N N
,J$N N
8J:v,J$N N
8J:v,J$N N
8J:J.h,J$N N
^8J:v,J$N N
~8J:v,J$N N
~8J:v,J$N N
t:xBt@-
<N>J(p2
<J>J(p2
v<J>~2
v<J>~2
v<J>~2
z<J>~2
<J>~2
z<J>~2
<J>~2
<J>~2
z<J>~2
|<J>~2
v<J>~2
<J>~2
z<J>~2
,p<P@
:J<D@
*J"J 
p2@@$
`2(-"
08@HP&
`:Lc=
`2 q=
,.G1V
,.W5V
(:*6,
&f("&
,<002
",B002T,04`
",B002b,04N
6282<
@|BJDbFNHLJ0L
<p8(N
\|^J`bbNdLf0h
Bn(pt
FrBvTr"xT
(rBvTr"xL
FRBR@Rb
p2L= 
p2L= 
p2L= 
8@J0{
@HPX`hpx
TTV&IV
XXZ5IV
\\^DIV
CreateUri
FindFullNameForFamilyNameInAppxAllUserStore
IsNonInboxAllUserPackage
DeleteAllPackagesFromMainPackageArray
DeleteAllPackagesFromPackageArray
IsNonInboxAllUserPackageSpecificPackage
IsInboxPackageAndPath
GetAllUpdatedPackages
GetAllInboxPackages
DeleteUpdatedPackageKey
IsInboxPackage
GetPackageSetupPhase
SetPackageOverrideSetupPhase
GetAllNonInboxPackagesFromRegistryStore
IsPackageEndOfLife
GetUpgradePackageVolumeKey
GetAllPackagesToBeInstalledForSetupPhase
FreeApplicabilityContext
CreateApplicabilityContextFromString
FreeApplicablePackages
GetApplicablePackagesForUserWithAppChosenResources
SHCreateMemStream
SHCreateStreamOnFileEx
SHTaskPoolQueueTask
GetScaleFactorForMonitor
PfRpcServiceIsRunning
PfRpcSendCommand
GetApplicabilityFactory
IsAppx
IsPreThresholdDesktop
IsPreThresholdPhone
IsXAP
CreateSerializedBundleManifestStatement
ProvisionForAppInstall
GetStorageInstanceCount
GetStorageDeviceInfo
CreateTdlMigratorForUser
GetSecurityInfo
SetSecurityInfo
MkParseDisplayName
GetUserTokensForMultiUserSession
FreeUserTokensForMultiUserSession
PolicyManager_GetPolicyInt
CreateWindowStationW
GetProcessWindowStation
SetProcessWindowStation
CreateDesktopW
CloseDesktop
CloseWindowStation
CreateBindCtx
GetCanonicalMergedPriFileNameForPackages
MergeRelatedPriFiles
UMgrEnumerateSessionUsers
UMgrQueryUserToken
UMgrFreeSessionUsers
UMgrQueryUserContext
UMgrQuerySessionUserToken
UMgrQueryDefaultAccountToken
QueryUserToken
QueryActiveSession
WTSQueryUserToken
WTSEnumerateSessionsW
WTSFreeMemory
WTSQuerySessionInformationW
WerReportCloseHandle
WerReportCreate
WerReportSetParameter
WerReportSubmit
WerReportAddFile
EvtClose
EvtOpenChannelConfig
EvtGetChannelConfigProperty
EvtExportLog
GetVolumeMediaId
GetAppxDataRootPath
WPDeveloperAppAllowed
GetLegacyTargetPlatformInfo
CreateAppxMetadataProfile
ShouldCreatePackageRootMetadata
DeleteAppxMetadataProfile
ApplyStrongProtection
GetByteCodeCachePath
CompleteDeploymentOperation
StartDeploymentOperationForRemove
StartDeploymentOperationForResume
StartDeploymentOperation
GetVolumeMountPointForVolume
GetDeploymentVolumeFlagsForPackageRoot
PrepareDeploymentPath
FinalizeDeploymentPath
CoTaskMemFree
RoGetMatchingRestrictedErrorInfo
SetRestrictedErrorInfo
WindowsCreateString
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsCreateStringReference
CoCreateInstance
RoOriginateError
RoTransformError
CoGetApartmentType
RpcRevertToSelf
RpcImpersonateClient
CoSetProxyBlanket
CoTaskMemAlloc
RoGetActivationFactory
RoActivateInstance
StringFromGUID2
StringFromCLSID
CoCreateGuid
ConvertSidToStringSidW
UuidCreate
UuidToStringW
RpcStringFreeW
ConvertStringSidToSidW
CoInitializeEx
CoUninitialize
RoInitialize
RoUninitialize
WindowsGetStringLen
CoWaitForMultipleHandles
CoCreateFreeThreadedMarshaler
WindowsDuplicateString
GetNamedSecurityInfoW
ConvertSecurityDescriptorToStringSecurityDescriptorW
RpcServerUseProtseqW
RpcServerUseProtseqEpW
RpcServerRegisterIf3
RpcServerRegisterIfEx
RpcServerInqBindings
RpcEpRegisterW
RpcEpUnregister
RpcServerUnregisterIf
RpcBindingVectorFree
SetServiceStatus
RegisterServiceCtrlHandlerExW
CoDisconnectContext
QueryTraceW
ControlTraceW
EnableTraceEx2
StartTraceW
FilterAttach
SetNamedSecurityInfoW
TdhGetEventMapInformation
TdhGetEventInformation
TdhEnumerateProviderFieldInformation
RoOriginateErrorW
CLSIDFromString
RpcServerInqCallAttributesW
I_QueryTagInformation
ConvertStringSecurityDescriptorToSecurityDescriptorW
LookupAccountSidW
UuidFromStringW
SetEntriesInAclW
OpenSCManagerW
OpenServiceW
QueryServiceStatus
NotifyServiceStatusChangeW
QueryServiceConfigW
ChangeServiceConfigW
EnumDependentServicesW
ControlService
QueryServiceStatusEx
CloseServiceHandle
CapabilityCheck
BCryptCreateHash
BCryptHashData
BCryptFinishHash
BCryptDestroyHash
RegEnumKeyW
RpcBindingCreateW
RpcBindingBind
RpcBindingFree
NdrClientCall3
NdrAsyncServerCall
NdrServerCallAll
Ndr64AsyncServerCallAll
NdrServerCall2
RpcRaiseException
RpcAsyncCompleteCall
LsaLookupGetDomainInfo
LsaLookupFreeMemory
LsaLookupClose
LsaLookupOpenLocalPolicy
BCryptGetProperty
BCryptOpenAlgorithmProvider
BCryptCloseAlgorithmProvider
CoTaskMemRealloc
AppXGetOSMaxVersionTested
GetPackageStatus
GetPackageFullNameFromToken
GetPackageStatusForUserSid
GetEffectivePackageStatusForUser
GetSystemMetadataPathForPackageFamily
AddExtensionProgId
SetExtensionProperty
SetProtocolProperty
GetExtensionProperty
EnumerateExtensionNames
UpdatePackageStatus
IncrementPackageStatusVersion
GetSystemMetadataPathForPackage
GetEffectivePackageStatusForUserSid
GetPackageStatusForUser
PackageSidFromFamilyName
VerifyPackagePublisher
GetAppModelVersion
RemovePackageStatus
RemoveExtensionProgIds
GetPackageVolumeSisPath
CouldMultiUserAppsBehaviorBePossibleForPackage
OpenStateExplicit
GetSecureSystemAppDataFolder
CloseState
OpenStateExplicitForUserSidString
SharedLocalIsEnabled
GetStateRootFolder
GetSharedLocalFolder
GetSystemAppDataKey
OpenStateExplicitForUserSid
CloseStateLock
GetPublisherRootFolder
UnregisterStateChangeNotification
CheckIfStateChangeNotificationExists
CreateStateLock
AcquireStateLock
ReleaseStateLock
GetHivePath
GetSystemAppDataFolder
RegisterStateChangeNotification
RegisterStateLock
UnregisterStateLock
GetStateFolder
CreateStateContainer
CreateStateSubcontainer
WriteStateContainerValue
CloseStateContainer
IsSideloadingEnabled
IsDeveloperModeEnabled
BiChangeApplicationStateForPackageName
BiPackageChangeState
PackageFamilyNameFromFullName
PackageFullNameFromId
PackageNameAndPublisherIdFromFamilyName
PackageIdFromFullName
VerifyPackageFullName
VerifyPackageFamilyName
ParseApplicationUserModelId
FindPackagesByPackageFamily
FormatApplicationUserModelId
GetStagedPackageOrigin
PackageFamilyNameFromId
GetPackageFullName
GetApplicationUserModelIdFromToken
GetPackagesByPackageFamily
GetStagedPackagePathByFullName
RemoveDesktopAppXMetadataForFolder
SetDesktopAppXMetadataForFolder
CreateDesktopAppXLocalCacheStructure
SetDesktopAppXMetadataForPackage
CryptReleaseContext
CryptGetHashParam
CryptDestroyHash
CryptHashData
CryptCreateHash
CryptAcquireContextW
GetDeltaInfoW
ApplyDeltaW
GetMergedSystemPriEx
ResetOverlayPriMergeChecksum
IsLocalExperiencePackReadyForRemoval
EnsureStoreLicenseForPackageActivation
WldpIsAppApprovedByPolicy
CdplIsSupported
CdplIsAppDataProtectionSupported
CdplGetFileProtectionLevel
CdplProtectFileToLevelWithResult
CmsCloseContainer
CmsCloseActivity
CmsOpenContainer
CmsRegisterForContainerNotifications
CmsCreateActivity
CmsStartActivityAsync
CmsUnmapFolderFromContainer
CmsMapFolderToContainer
SRCacheManager_Open
SRCacheContext_GetField_UInt32
SRCache_Free
SRCacheContext_Close
SRCacheManager_Close
SRCache_AllocStringBuffer
SRCacheContext_Open
SRCacheContext_EnumerateData
SRCacheContext_CacheInitialize
SRCacheContext_CacheShutdown
SRCache_ExpandMacros
SRCache_DuplicateString
SRPackageDependencyExistsByUserAndPackageFullName
CpmcGetContainerIdForUser
QueryWin32SubsystemHost
BfSetupFilterEx
BfRemoveMappingEx
OpenAppExecutionAliasForUserEx
GetAppExecutionAliasApplicationType
GetAppExecutionAliasExecutableEx
CreateAndPersistAppExecutionAliasEx
CloseAppExecutionAliasEx
SHGetKnownFolderPath
HamServicingClosePackageHandle
HamDisconnectForServicing
IsPackageOnPreinstalledVolume
IsPackageInUpgradeKey
RemovePackageFromRegistryStore
AddDeprovisionedPackageMarking
IsCleanupTaskComplete
IsPackageInStagedKey
GetPackagesThatMayNeedPreinstallPackageStatusMarked
MarkStatusOfMainPackageForUser
UpdatePackageInRegistryStore
AddPackageToRegistryStore
RemoveDeprovisionedPackageMarking
RemoveStatusOfMainPackageForAllUsers
RemoveInboxInstalledStatusOfPackageForUser
UpdateUpgradePackageInRegistryStore
RemoveDownlevelInstalledPackagesFromRegistryStore
DeletePackageInfo
RemoveUpgradePackagesFromRegistryStore
CleanupPreinstalledPackageForRemoval
AddEndOfLifePackageMarking
AddPackageToPreinstalledAppsVolume
AddUpgradePackageToPreinstalledVolume
AddUpgradePackageToRegistryStore
MoveEndOfLifePackageToDeletedStoreExternal
IsPackageInDownlevelInstalledKey
IsPackageInEndOfLifeKey
CreateApplicabilityContext
AddDirectXFeatureLevelToContext
GetApplicablePackages
TreeResetNamedSecurityInfoW
IsWPTestEkuSigningAllowed
IIDFromString
FilterSendMessage
FilterConnectCommunicationPort
CertGetEnhancedKeyUsage
CertVerifyCertificateChainPolicy
CryptQueryObject
CryptMsgGetParam
CertGetSubjectCertificateFromStore
CertGetCertificateChain
CertNameToStrW
CertOpenStore
CertCreateCertificateChainEngine
CertCloseStore
CryptMsgClose
CertFreeCertificateContext
CertFreeCertificateChain
CertFreeCertificateChainEngine
CryptFindOIDInfo
StartServiceW
RegDeleteKeyW
AccTreeResetNamedSecurityInfo
WindowsCompareStringOrdinal
WindowsIsStringEmpty
WindowsStringHasEmbeddedNull
CoGetModuleArchitecture
WindowsConcatString
WindowsPromoteStringBuffer
WindowsDeleteStringBuffer
WindowsPreallocateStringBuffer
ResourceManagerQueueGetString
SRDictionaryToPropertySet
CreateRegistryCompatibilityCollector
CreateRegistryCompatibilityCollectorForUserOrSystemRegister
WinVerifyTrust
AppxDeploymentServer.dll
AppXApplyTrustLabelToFolder
CancelDeploymentImplementation
CreateCanonicalPriFileImplementation
CreateWnfStateNameImplementation
EnumPackagesByUserSidInternal
EnumPackagesByUserSidNamePublisherInternal
EnumPackagesByUserSidPackageFamilyNameInternal
EnumProvisionedPackagesInternal
EnumVisibilityByPackageFullNameInternal
FindPackageByUserSidPackageFullNameInternal
GenerateBytecodeForPackageImplementation
GenerateBytecodeForPackagesImplementation
GetApplicability5Implementation
GetApplicabilityForPackageImplementation
GetApplicabilityImplementation
GetDeploymentError
GetPackageFilesDiskUsageImplementation
GetPackageFilesDiskUsagePerVolumeImplementation
GetSessionIdsOwnedByUser
IsPackageInstalledInternal
MergeSystemResourceFilesImplementation
PackageRepositoryAllocate
PackageRepositoryFree
PackageStatusOperationImplementation
PackageVolumeStatusImplementation
RDSRecoverRequestsImplementation
RepairResourcesPriAclsImplementation
RequestPackageOperationImplementation
ServerSideRequestContentGroupsImplementation
ServiceMain
SetDeploymentError
SetPackageStatusBlockingForUserImplementation
SetPackageStatusBlockingImplementation
StartDeploymentImplementation
AddToPurgeList
AppXSetTrustLabelOnPackage
DllCanUnloadNow
DllGetActivationFactory
SvchostPushServiceGlobals
?_Xlength_error@std@@YAXPEBD@Z
msvcp_win.dll
wcsncmp
_initterm
_initterm_e
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
wcschr
wcsrchr
strchr
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswscanf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__get_errno
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__stricmp
_o__ui64tow_s
_o__ultow_s
_o__wcsicmp
_o__wcslwr
_o__wcsnicmp
_o__wcstoui64
_o__wtoi
_o_abort
_o_calloc
_o_ceilf
_o_free
_o_iswspace
_o_malloc
_o_qsort
_o_realloc
_o_strncpy_s
_o_strtol
_o_terminate
_o_wcscpy_s
_o_wcsncat_s
_o_wcsncpy_s
_o_wcstok_s
_o_wcstoul
__C_specific_handler
__current_exception
__current_exception_context
__CxxFrameHandler3
memset
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
RtlWow64IsWowGuestMachineSupported
RtlInsertElementGenericTableAvl
RtlDeleteElementGenericTableAvl
RtlEnumerateGenericTableWithoutSplayingAvl
RtlInitializeGenericTableAvl
RtlCompareUnicodeString
RtlInitUnicodeString
RtlLeaveCriticalSection
RtlEnterCriticalSection
NtSetInformationThread
RtlLookupElementGenericTableAvl
RtlFreeHeap
RtlPublishWnfStateData
RtlNumberGenericTableElementsAvl
RtlIsMultiUsersInSessionSku
NtDeleteWnfStateName
RtlIsGenericTableEmptyAvl
NtClose
EtwEventRegister
EtwEventWrite
EtwEventUnregister
NtCreateSection
RtlNtStatusToDosErrorNoTeb
NtMapViewOfSection
NtUnmapViewOfSection
RtlFreeSid
RtlAllocateHeap
ZwFlushBuffersFileEx
RtlQueryPackageClaims
RtlIsStateSeparationEnabled
RtlAllocateAndInitializeSid
RtlEqualSid
RtlCreateAndSetSD
NtAccessCheck
RtlDeleteSecurityObject
RtlCaptureContext
RtlReportExceptionEx
RtlIsMultiSessionSku
NtQueryInformationThread
RtlGetDeviceFamilyInfoEnum
RtlAcquireSRWLockExclusive
RtlReleaseSRWLockExclusive
RtlDeleteCriticalSection
RtlWaitForWnfMetaNotification
NtCreateWnfStateName
RtlAddFunctionTable
RtlDeleteFunctionTable
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
GetErrorInfo
combase.dll
sqlite3_close
sqlite3_errmsg
sqlite3_log
sqlite3_open_v2
sqlite3_extended_errcode
sqlite3_file_control
sqlite3_extended_result_codes
sqlite3_get_autocommit
sqlite3_db_config
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_changes
sqlite3_total_changes
sqlite3_last_insert_rowid
sqlite3_db_filename
sqlite3_busy_timeout
sqlite3_db_status
sqlite3_next_stmt
sqlite3_errcode
sqlite3_create_function_v2
sqlite3_user_data
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_error_code
sqlite3_result_int64
sqlite3_result_int
sqlite3_value_type
sqlite3_value_text16
sqlite3_value_int
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_malloc
sqlite3_result_blob
sqlite3_free
sqlite3_value_int64
sqlite3_result_text16
sqlite3_value_text
sqlite3_prepare_v2
sqlite3_stmt_busy
sqlite3_exec
sqlite3_clear_bindings
sqlite3_bind_null
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_text16
sqlite3_bind_blob
sqlite3_column_int
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_bytes
sqlite3_column_text16
sqlite3_column_blob
sqlite3_column_type
sqlite3_sql
sqlite3_db_handle
sqlite3_finalize
sqlite3_reset
sqlite3_step
sqlite3_initialize
sqlite3_shutdown
sqlite3_enable_shared_cache
sqlite3_config
sqlite3_trace
sqlite3_profile
sqlite3_snprintf
sqlite3_expanded_sql
sqlite3_status
sqlite3_vfs_find
sqlite3_vfs_register
sqlite3_vfs_unregister
StateRepository.Core.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
GetModuleHandleExW
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
HeapAlloc
GetProcAddress
CreateMutexExW
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
GetSystemInfo
CompareStringOrdinal
EventUnregister
EventWriteTransfer
InitOnceBeginInitialize
InitOnceComplete
EventSetInformation
EventRegister
SetEvent
CreateEventExW
RaiseException
InitializeSRWLock
GetSystemTimeAsFileTime
CompareFileTime
GetCurrentThread
GetSystemPowerStatus
GetFileAttributesW
RegCloseKey
DuplicateTokenEx
ImpersonateLoggedOnUser
PathStripPathW
LocalFree
RegEnumKeyExW
OpenThreadToken
IsWellKnownSid
EqualSid
CreateEventW
EventActivityIdControl
RegCreateKeyExW
RegSetValueExW
IsValidSid
SetThreadToken
RegOpenCurrentUser
CopySid
PathCreateFromUrlW
GetLengthSid
TrySubmitThreadpoolCallback
RegEnumValueW
QueryUnbiasedInterruptTime
CreateThreadpool
SetThreadpoolThreadMinimum
SetThreadpoolThreadMaximum
OpenThread
SetThreadPriority
CancelSynchronousIo
Sleep
ExitProcess
CloseThreadpool
SetFileAttributesW
DeleteFileW
CreateFileW
FindClose
FindFirstFileW
FindNextFileW
GetFileAttributesExW
FlushFileBuffers
WriteFile
GetTickCount64
CreateWellKnownSid
DuplicateHandle
GetCurrentProcess
GetTokenInformation
GetSystemDirectoryW
LocalAlloc
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
TerminateProcess
CreateSemaphoreW
ExpandEnvironmentStringsW
lstrcmpiW
lstrcmpW
MultiByteToWideChar
DisableThreadLibraryCalls
QuirkIsEnabledForPackage
CloseThreadpoolWork
CreateThreadpoolCleanupGroup
CreateThreadpoolWork
SubmitThreadpoolWork
CloseThreadpoolCleanupGroupMembers
CloseThreadpoolCleanupGroup
PathAllocCanonicalize
GetFileInformationByHandleEx
WideCharToMultiByte
OpenEventW
FreeSid
SetWaitableTimer
CreateWaitableTimerExW
WaitForMultipleObjects
MoveFileW
CreateDirectoryW
CopyFileW
RemoveDirectoryW
MoveFileExW
PathGetDriveNumberW
GetSecurityDescriptorDacl
GetSecurityDescriptorSacl
RegOpenKeyExW
RegQueryValueExW
RegDeleteValueW
ResetEvent
RevertToSelf
VirtualProtect
VirtualFree
VirtualAlloc
GetModuleFileNameW
ResumeThread
RaiseFailFastException
LoadLibraryExW
UnhandledExceptionFilter
SetUnhandledExceptionFilter
IsProcessorFeaturePresent
QueryPerformanceCounter
InitializeSListHead
FreeLibrary
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
GetVersionExW
RtlValidSid
RtlFreeUnicodeString
RtlDowncaseUnicodeString
GetSidSubAuthority
GetSidSubAuthorityCount
RtlDetermineDosPathNameType_U
RtlConvertSidToUnicodeString
RtlLengthSid
NtQueryInformationToken
RtlCopySid
OpenProcessToken
RtlReportException
NtQuerySystemInformation
RegOpenUserClassesRoot
RegDeleteKeyExW
RegDeleteTreeW
RegFlushKey
RegGetKeySecurity
RegSetKeySecurity
GetSecurityDescriptorOwner
RegQueryInfoKeyW
RtlReleaseSRWLockShared
RtlAcquireSRWLockShared
RtlInitializeCriticalSection
PathCchCombine
RtlExpandEnvironmentStrings
SetSecurityDescriptorGroup
MakeSelfRelativeSD
SetSecurityDescriptorControl
AddAccessAllowedAceEx
InitializeAcl
RtlDeriveCapabilitySidsFromName
DestroyPrivateObjectSecurity
GetAce
SetSecurityDescriptorOwner
CreatePrivateObjectSecurityEx
RtlGetPersistedStateLocation
PathCchAppend
GetWindowsDirectoryW
VerSetConditionMask
VerifyVersionInfoW
GetTempPath2W
GetFileVersionInfoSizeExW
GetFileVersionInfoExW
VerQueryValueW
OpenProcess
QueryFullProcessImageNameW
GetVolumePathNameW
GetVolumeInformationW
GetVolumeNameForVolumeMountPointW
GetVolumePathNamesForVolumeNameW
DeviceIoControl
GetProfileType
NtQueryInformationFile
GetFileSizeEx
PathCchRemoveBackslash
PathCchSkipRoot
ReadFile
RegGetValueW
GetFinalPathNameByHandleW
CheckTokenMembership
RegLoadAppKeyW
GetVolumeInformationByHandleW
GetDriveTypeW
GetSystemPreferredUILanguages
PathAllocCombine
ImpersonateSelf
SetFileInformationByHandle
PathFileExistsW
GetTempFileNameW
K32EnumProcesses
NtQueryInformationProcess
ProcessIdToSessionId
FileTimeToSystemTime
GetFileSecurityW
AccessCheck
PathCchRemoveFileSpec
FindFirstFileNameW
FindNextFileNameW
DeleteAce
AddAccessAllowedAce
AllocateAndInitializeSid
CreateFileMappingW
MapViewOfFile
NtSetInformationVirtualMemory
UnmapViewOfFile
GetPersistedRegistryLocationW
SystemTimeToFileTime
AdjustTokenPrivileges
CreateHardLinkW
RtlInitUnicodeStringEx
NtCreateFile
FindFirstFileExW
RtlDosPathNameToNtPathName_U_WithStatus
WakeByAddressAll
WaitOnAddress
RtlAddAce
RtlpEnsureBufferSize
RtlNtPathNameToDosPathName
CreateSymbolicLinkW
CopyFileExW
RtlDosPathNameToRelativeNtPathName_U_WithStatus
NtOpenFile
RtlReleaseRelativeName
NtSetInformationFile
NtFsControlFile
RegSetKeyValueW
DuplicateToken
PathFindNextComponentW
SetFilePointerEx
SetEndOfFile
NtSetCachedSigningLevel2
ZwQueryEaFile
ZwQuerySecurityAttributesToken
GetFileInformationByHandle
RtlSetSaclSecurityDescriptor
RtlAddProcessTrustLabelAce
NtSetSecurityObject
SetSecurityAccessMask
CreateThread
NtQueryLicenseValue
RtlCreateAcl
RtlCreateSecurityDescriptor
RtlFindAceByType
NtCompareSigningLevels
NtGetCachedSigningLevel
CreateAppContainerProfile
InitializeProcThreadAttributeList
DeriveAppContainerSidFromAppContainerName
CreateProcessAsUserW
DeleteAppContainerProfile
CreateRestrictedToken
GetSystemWow64DirectoryW
UpdateProcThreadAttribute
NtOpenDirectoryObject
SetTokenInformation
RtlGetAppContainerNamedObjectPath
NtQuerySecurityObject
GetExitCodeProcess
CancelWaitableTimer
UrlCreateFromPathW
CompareStringW
GetFileType
GetFileTime
CancelIoEx
GetOverlappedResult
GlobalMemoryStatusEx
SHLoadIndirectString
GetTempPathW
GetLocalTime
RtlCaptureStackBackTrace
WerRegisterCustomMetadata
ApiSetQueryApiSetPresence
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-url-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-io-l1-1-1.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-file-l1-2-4.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-io-l1-1-0.dll
USERENV.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-stateseparation-helpers-l1-1-0.dll
api-ms-win-core-registry-l1-1-1.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-core-string-l2-1-1.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-apiquery-l1-1-0.dll
GetOrCreatePriFileForAvailablePackages
mrmdeploy.dll
?_Xout_of_range@std@@YAXPEBD@Z
?_Xbad_function_call@std@@YAXXZ
wcsstr
RtlNtStatusToDosError
RtlDosPathNameToNtPathName_U
NtDelayExecution
NtOpenThreadToken
NtQueryObject
RtlImpersonateSelf
NtAdjustPrivilegesToken
NtDeviceIoControlFile
NtWaitForSingleObject
RtlRbRemoveNode
LCMapStringEx
GetNativeSystemInfo
GetModuleHandleExA
ResolveDelayLoadedAPI
DelayLoadFailureHook
RtlQueryWnfStateData
RtlExpandEnvironmentStrings_U
InterlockedPopEntrySList
InterlockedPushEntrySList
RtlEqualUnicodeString
RtlUpcaseUnicodeChar
GetSystemWow64Directory2W
PathFindFileNameW
SetFilePointer
RtlEnumerateGenericTableAvl
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
SetErrorInfo
LoadLibraryW
InterlockedFlushSList
api-ms-win-core-libraryloader-l1-2-1.dll
strcmp
wcscmp
_local_unwind
memcmp
memcpy
memmove
.?AVbad_alloc@std@@
.?AUhresult_error@winrt@@
.?AVResultException@wil@@
.?AVlogic_error@std@@
.?AVout_of_range@std@@
.?AVinvalid_argument@std@@
.?AVexception@std@@
.?AVbad_array_new_length@std@@
.?AV<lambda_c11cd384dede5ed21b37ab49eb636685>@@
.?AUhresult_changed_state@winrt@@
.?AUhresult_access_denied@winrt@@
.?AUhresult_class_not_available@winrt@@
.?AUhresult_invalid_argument@winrt@@
.?AUhresult_not_implemented@winrt@@
.?AUhresult_illegal_delegate_assignment@winrt@@
.?AUhresult_out_of_bounds@winrt@@
.?AUhresult_illegal_state_change@winrt@@
.?AUhresult_no_interface@winrt@@
.?AUhresult_wrong_thread@winrt@@
.?AUhresult_illegal_method_call@winrt@@
.?AUhresult_canceled@winrt@@
.?AUhresult_class_not_registered@winrt@@
.?AVtype_info@@
AppXDelta
<tock
WI%dh
nNB3K
nNB3K
Twp`f
R0.y.
R$9J9
R9B`B
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
AppX Deployment Server DLL
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
AppXDeploymentServer.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
AppXDeploymentServer.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Microsoft-Windows-AppXDeploymentServer/Diagnostic
Microsoft-Windows-AppXDeploymentServer/Operational
Microsoft-Windows-AppXDeploymentServer/Debug
Microsoft-Windows-AppXDeploymentServer/Restricted
MAPSL
VMAPD
BMAP<
VMAP4
VMAPL
VMAP|
VMAPD
VMAP<
VMAPD
VMAP$
VMAP,
VMAPd
ApplicabilityStateEnumMap
AppxPackageOriginEnumMap
AppxSignatureOriginEnumMap
ArchitectureEnumMap
DependencyPackageApplicabilityStateMap
DeploymentOperationEnumMap
DeploymentOptionsBitMap
DeploymentOptionsHighBitMap
DeploymentStateHandlerEnumMap
DeviceAccessVetoReasonMap
OSIMListTypeEnumMap
OptionalPackageSubtype
PlatformPolicyBlockReasonMap
PreRegisterOptionsBitMap
TargetPlatformEnumMap
EventData
ErrorCode
ErrorCode
TEMP 
EventData
String1
String2
String1
String2
TEMP8
EventData
ErrorCode
UInt32Value
ErrorCode
UInt32Value
TEMP$
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
EventData
ErrorCode
String1
String2
String3
ErrorCode
String1
String2
String3
EventData
ErrorCode
String1
String2
Bool1
ErrorCode
String1
String2
Bool1
TEMPt
[S'rA9
EventData
String
Bool1
Bool2
String
Bool1
Bool2
EventData
ErrorCode
String
ErrorCode
String
EventData
ErrorCode
String1
String2
ErrorCode
String1
String2
TEMPP
EventData
TEMPp
EventData
ExtensionsCategoryNames
PackageName
ExtensionsCategoryNames
PackageName
EventData
PackageName
PackageName
TEMP<
EventData
ErrorCode
ErrorMessage
ErrorCode
ErrorMessage
EventData
ErrorCode
ErrorCode
a7l6y+
EventData
ErrorCode
ErrorMessage
CategoryName
ErrorCode
ErrorMessage
CategoryName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMP0
EventData
DehName
RunAsSystem
DehName
RunAsSystem
EventData
PackageName
CategoryName
KeyName
PackageName
CategoryName
KeyName
EventData
PackageName
PackageName
EventData
ExtensionName
ExtensionName
TEMPh
EventData
FileName
Column
ErrorCode
PackageName
FileName
Column
ErrorCode
PackageName
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
FileName
Column
ErrorCode
PackageName
ErrorText
TEMPX
EventData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
FileName
Column
ErrorCode
PackageName
ErrorText
ExtendedData
TEMP$
EventData
PackageName
ErrorCode
ErrorText
ExtendedData
PackageName
ErrorCode
ErrorText
ExtendedData
TEMP8
EventData
UniqueKey
PackageName
UniqueKey
PackageName
EventData
Category
PackageName
ErrorText
ErrorCode
Category
PackageName
ErrorText
ErrorCode
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
TEMP4
EventData
ErrorCode
ServerName
ErrorCode
ServerName
EventData
ErrorCode
PackageName
ActivatableClassIdentifier
ErrorCode
PackageName
ActivatableClassIdentifier
TEMPt
EventData
ErrorCode
ActivatableClassIdentifier
ErrorCode
ActivatableClassIdentifier
EventData
ErrorCode
ActivatableClassIdentifier
ContractID
ErrorCode
ActivatableClassIdentifier
ContractID
TEMPX
EventData
ErrorCode
InterfaceIdentifier
ErrorCode
InterfaceIdentifier
TEMP@
EventData
ErrorCode
AttributeName
ErrorCode
AttributeName
TEMP 
EventData
ErrorCode
CLSID
ErrorCode
CLSID
EventData
ErrorCode
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
IncomingPackageName
TEMPX
EventData
IncomingPackageName
ErrorCode
IncomingPackageName
ErrorCode
EventData
IncomingPackageName
OutgoingPackageName
IncomingPackageName
OutgoingPackageName
EventData
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
EventData
OutgoingPackageName
OutgoingPackageName
TEMPX
EventData
OutgoingPackageName
ErrorCode
OutgoingPackageName
ErrorCode
EventData
ErrorCode
ErrorCode
+dZrp>N
EventData
ErrorContext
ErrorContext
TEMPP
EventData
ErrorContext1
ErrorContext2
ErrorContext1
ErrorContext2
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMPh
EventData
Filename
Column
ErrorCode
PackageName
Filename
Column
ErrorCode
PackageName
EventData
Filename
Column
ErrorCode
PackageName
ImagePath
Filename
Column
ErrorCode
PackageName
ImagePath
TEMPD
EventData
PackageFullName
Settings
PackageFullName
Settings
t+=D{
EventData
PackageFullName
PackageFullName
t+=D{
EventData
PackageFullName
PackageFullName
TEMP<
EventData
PackageFullName
Result
PackageFullName
Result
EventData
PackageFullName
PeriodicUpdateRecurrence
PackageFullName
PeriodicUpdateRecurrence
TEMP<
EventData
DeploymentOperation
PackageFullName
ErrorCode
DeploymentOperation
PackageFullName
ErrorCode
TEMP@
EventData
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
ErrorCode
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsInPlaceUpdate
ErrorFileInfo
DetailedMessageInfo
RollbackErrorFileInfo
RollbackDetailedMessageInfo
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
DeploymentOperation
PackageFullName
MountPoint
TargetPlatform
SystemVolume
StorageId
IsCentennial
PackageType
IsPackageEncrypted
DeploymentOptions
IsStreamingPackage
IsInRelatedSet
IsPackageUsingBDC
MainPackageFamilyName
CallingProcess
IsOptional
PackageFlags
PackageFlags2
HasWin32alacarte
HasFullTrust
ExternalLocation
PackageSourceUri
PackageDisplayName
EventData
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
SummaryError
PackageFullName
ErrorCode
MountPoint
TargetPlatform
CallingProcess
ExternalLocation
TEMP<
EventData
SummaryError
ErrorCode
SummaryError
ErrorCode
TEMP(
EventData
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPP
EventData
TEMP\
EventData
DeploymentOperation
PackageFullName
UserSid
CallingProcess
DeploymentOperation
PackageFullName
UserSid
CallingProcess
N6Eh0
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPT
EventData
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
DeploymentOperation
DependencyPaths
Flags
FlagsHigh
CallingProcess
ExternalLocation
TEMPp
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
ErrorCode
ErrorCode
EventData
ApplicationUserModelId
ApplicationUserModelId
TEMPd
EventData
ApplicationUserModelId
ErrorCode
ApplicationUserModelId
ErrorCode
TEMPD
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
PackageFullName
StatusToClear
StatusToSet
CallOrigin
EventData
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
PackageFullName
StatusToClear
StatusToSet
CallOrigin
ErrorCode
EventData
PackageFullName
BiApplicationStateTransition
ErrorCode
PackageFullName
BiApplicationStateTransition
ErrorCode
EventData
PackageFullName
Context
ErrorCode
PackageFullName
Context
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
PackageFullName
PackageKey
ErrorCode
PackageFullName
PackageKey
ErrorCode
EventData
DeploymentState
NextDeploymentState
ErrorCode
DeploymentState
NextDeploymentState
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
DeploymentOperation
MainPackageMoniker
ResiliencyCurrentState
ResiliencyFilePath
TEMPT
EventData
ResiliencyFilePath
ErrorCode
ResiliencyFilePath
ErrorCode
EventData
HRESULT
HRESULT
TEMP,
EventData
Architecture
Architecture
EventData
PackageUri
PackageUri
EventData
reason
package
reason
package
TEMPT
EventData
PackageFullName
PolicyReason
PackageFullName
PolicyReason
EventData
DeploymentOperation
PackageFullName
Summary
DeploymentOperation
PackageFullName
Summary
EventData
OrphanedAppDataVolume
MitigatedAppDataVolume
OrphanedAppDataVolume
MitigatedAppDataVolume
EventData
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
targetPackageFullNameForRepair
deploymentOperation
currentPackageFullName
currentStepIndex
numTotalSteps
errorCode
ls:\9
EventData
packageFullName
userSid
hresult
packageFullName
userSid
hresult
t+=D{
EventData
PackageFullName
PackageFullName
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPP
EventData
PackageFullName
CheckResult
PackageFullName
CheckResult
TEMP`
EventData
PackageFullName
SignatureOrigin
PackageFullName
SignatureOrigin
TEMPX
EventData
PackageFullName
PackageOrigin
PackageFullName
PackageOrigin
EventData
filename
Error
filename
Error
EventData
ReturnVal
ReturnVal
EventData
filename
filename
FB&_W
EventData
Error
PackageMoniker
SettingName
SettingValue
Index
Error
PackageMoniker
SettingName
SettingValue
Index
TEMP(
EventData
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
PackageName
DependencyName
DependencyPublisher
DependencyArchitecture
DependencyMinVersion
EventData
DependentPackageName
SupplierPackageName
Reason
DependentPackageName
SupplierPackageName
Reason
TEMP4
EventData
Error
PackageMoniker
Error
PackageMoniker
EventData
PackageFullName
IsInstalled
Options
PackageFullName
IsInstalled
Options
TEMP$
EventData
PackageFullName
Flags
HResult
CallingProcess
PackageFullName
Flags
HResult
CallingProcess
EventData
HResult
Options
CallingProcess
HResult
Options
CallingProcess
EventData
HResult
HResult
TEMP\
EventData
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
runningAppsList
directlyServicedPackagesList
indirectlyServicedPackagesList
numAttempts
isSessionLocked
EventData
PackageFamilyName
PackageFamilyName
EventData
PackageFamilyNameOne
PackageFamilyNameTwo
PackageFamilyNameOne
PackageFamilyNameTwo
EventData
PackageMoniker
PackageMoniker
TEMPl
EventData
DeploymentOperation
PackageMoniker
DeploymentOperation
PackageMoniker
EventData
PackageName
PackageVersion
PackageVersion2
PackageName
PackageVersion
PackageVersion2
EventData
PackageVersion
PackageVersion
TEMP4
EventData
PackageName
XapState
PackageName
XapState
TEMP(
EventData
UserSid
ErrorCode
UserSid
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP0
EventData
TileStore
ErrorCode
TileStore
ErrorCode
EventData
AppId
AppId
TEMP\
EventData
PackageMoniker
PackageMoniker2
PackageMoniker
PackageMoniker2
EventData
PackageMoniker
PackageMoniker2
PackageMoniker3
PackageMoniker
PackageMoniker2
PackageMoniker3
EventData
PackageName
PackageName
TEMPX
EventData
PackageName
DeploymentOptions
PackageName
DeploymentOptions
EventData
PackageName
DeploymentOptions
Publisher
PackageName
DeploymentOptions
Publisher
TEMPt
EventData
IntegrityLevel
CallerPackageFullName
IntegrityLevel
CallerPackageFullName
EventData
PackageName
StageForInPlace
ApplyInPlace
PackageName
StageForInPlace
ApplyInPlace
TEMPH
EventData
PackageName
PublisherName
PackageName
PublisherName
EventData
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
UserSid
NewMainPackageFullName
OldMainPackageFullName
ErrorCode
Online
EventData
PackageName
PackageArchitecture
MachineArchitecture
PackageName
PackageArchitecture
MachineArchitecture
TEMPL
EventData
PackageFullName
MountPoint
PackageFullName
MountPoint
TEMP`
EventData
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
PackageMoniker
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionAppModel
OSVersionMajor
OSVersionMinor
OSVersionAppModel
EventData
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
PackageMoniker
deviceFamilyName
RequestedVersionMajor
RequestedVersionMinor
RequestedVersionBuild
RequestedVersionRevision
OSVersionMajor
OSVersionMinor
OSVersionBuild
OSVersionRevision
TEMP\
EventData
DeploymentPath
FileSystemType
DeploymentPath
FileSystemType
EventData
ErrorCode
ErrorCode
EventData
PackageMoniker
FileName
ErrorCode
PackageMoniker
FileName
ErrorCode
TEMP,
EventData
FileName
ErrorCode
FileName
ErrorCode
EventData
FileName
FileName
EventData
RequestCount
RequestCount
EventData
FileName
Count
MaxCount
FileName
Count
MaxCount
XbVS>
EventData
PackageFullName
ApplicabilityState
PackageFullName
ApplicabilityState
EventData
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
PackageFullName
ErrorCode
ErrorFileInfo
DetailedMessageInfo
TEMPT
EventData
DeploymentOperation
Argument
DeploymentOperation
Argument
EventData
DeploymentOperation
PackageFullName
DeploymentOperation
PackageFullName
EventData
TEMP 
EventData
PathOne
PathTwo
PathOne
PathTwo
EventData
PackageNameOne
PackageNameTwo
PackageNameOne
PackageNameTwo
TEMP$
EventData
PackageName
PackageName
._Q%N
EventData
PackageName
MediaID
PackageName
MediaID
EventData
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
PackageName
DestinationPath
DestinationMediaID
SourcePath
SourceMediaID
EventData
TEMPD
EventData
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
MissingPackageFamily
CurrentlyInstalledPackages
PackagesToBeInstalled
TEMP|
EventData
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
BundlePackageFullName
MainOrOptionalPackageFullName1
MainOrOptionalPackageFullName2
EventData
PackageFullName
Bundle
AppDataVolume
PackageFullName
Bundle
AppDataVolume
TEMPH
EventData
RegistryKeyName
ErrorCode
RegistryKeyName
ErrorCode
EventData
RegistryKeyName
ValueName
ErrorCode
RegistryKeyName
ValueName
ErrorCode
cW*q.
EventData
PackageFullNames
PackageFullNames
t+=D{
EventData
PackageFullName
PackageFullName
EventData
RegistryKeyName
RegistrySubKeyName
ErrorCode
RegistryKeyName
RegistrySubKeyName
ErrorCode
EventData
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
RegistryKeyName
RegistrySubKeyName
ValueName
ValueValue
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
InstallPackageList
EndOfLifePackageList
InstallPackageList
EndOfLifePackageList
EventData
UserSid
UserSid
EventData
UserSid
MainPackageFullName
ErrorCode
UserSid
MainPackageFullName
ErrorCode
TEMPH
EventData
UserSid
PackageFamilyName
UserSid
PackageFamilyName
TEMP$
EventData
Error
PackageFamilyName
FoundState
ErrorCode
Error
PackageFamilyName
FoundState
ErrorCode
TEMPt
p*X3A
EventData
PackageFamilyName
SettingSyncEnabled
PackageFamilyName
SettingSyncEnabled
TEMP@
EventData
PackageName
BinaryCount
PackageName
BinaryCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPP
EventData
PackageName
CapabilityCount
PackageName
CapabilityCount
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
PackageName
ApplicationCount
ErrorCode
PackageName
ApplicationCount
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
DeviceName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
Location
PackageName
ErrorCode
Location
PackageName
TEMP8
EventData
Column
Package
Column
Package
0RP\M
EventData
Column
Package
Column
Package
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
y<FQ1
EventData
ErrorCode
IncomingPackageName
OutgoingPackageName
ErrorCode
IncomingPackageName
OutgoingPackageName
EventData
PackageName
PackageName
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
TEMPD
EventData
PackageUri
PackageFolder
PackageUri
PackageFolder
EventData
PackageUri
PackageUri
TEMP,
EventData
FilePath
ErrorCode
FilePath
ErrorCode
TEMP4
EventData
FilePath
ErrorCount
FilePath
ErrorCount
EventData
ErrorCount
ErrorCount
TEMPD
EventData
DeploymentOperation
PackageName
ErrorCode
LineNumber
DeploymentOperation
PackageName
ErrorCode
LineNumber
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
ErrorCode
F<}lf-#X
EventData
ErrorCode
VolumeID
MediaID
ErrorCode
VolumeID
MediaID
TEMP@
EventData
PackageName
UserSid
ErrorCode
AppDataErrorOperation
PackageName
UserSid
ErrorCode
AppDataErrorOperation
EventData
PackageTableRowKey
UserSid
ErrorCode
PackageTableRowKey
UserSid
ErrorCode
EventData
SourceFilePath
LinkDestinationPath
ErrorCode
SourceFilePath
LinkDestinationPath
ErrorCode
TEMP,
[IzZG
EventData
FilePath
FileSize
FilePath
FileSize
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
EventData
PackageUri
PackageFolder
PackageFolderOld
PackageUri
PackageFolder
PackageFolderOld
EventData
PackageMonikerOld
PackageMonikerNew
ErrorCode
PackageMonikerOld
PackageMonikerNew
ErrorCode
G6?lYi
EventData
FileName
Offset
FileName
Offset
EventData
ReturnValue
ReturnValue
EventData
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
PackageFullName
PackageKey
Count
SizeKB
HardLinkedCount
HardLinkedSizeKB
DurationMS
TEMPH
EventData
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
PackageFullName
PackageKey
Count
UncompressedSizeKB
CompressedSizeKB
DurationMS
,Zndrz
EventData
SourceFolderPath
DestinationFolderPath
ErrorCode
SourceFolderPath
DestinationFolderPath
ErrorCode
TEMP4
EventData
PackageUri
ErrorCode
PackageUri
ErrorCode
HV@k>
EventData
ManifestPath
ErrorCode
ErrorString
ManifestPath
ErrorCode
ErrorString
TEMPx
EventData
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
RequestCount
QueueLength
LazyFlushQueueLength
IdleTaskInProgress
EventData
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
CurrentPackageFullName
TargetPackageFullName
CurrentFilePath
TargetFilePath
CurrentFileSize
TargetFileSize
EventData
PackageMoniker
Writesize
Filesize
PackageMoniker
Writesize
Filesize
TEMPD
EventData
PackageMoniker
ErrorCode
PackageMoniker
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
Column
ErrorCode
Package
Content
StoreName
ErrorCodeDescription
0RP\M
EventData
Column
Package
Column
Package
EventData
Column
ErrorCode
Package
ErrorCodeDescription
Column
ErrorCode
Package
ErrorCodeDescription
TEMPT
EventData
PackageFullName
ResourceName
PackageFullName
ResourceName
EventData
PackageFullName
ResourceName
ErrorCode
PackageFullName
ResourceName
ErrorCode
TEMPT
EventData
ErrorCode
MediaID
UserSid
Package
ErrorCode
MediaID
UserSid
Package
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
EventData
PackageFullName
Architecture
ErrorCode
PackageFullName
Architecture
ErrorCode
EventData
PackageFullName
Architecture
Count
PackageFullName
Architecture
Count
TEMPT
EventData
PackageFullName
Architecture
PackageFullName
Architecture
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
PackageFullName
FullFilePath
ErrorCode
PackageFullName
FullFilePath
ErrorCode
TEMPD
EventData
PackageFullName
ExitCode
PackageFullName
ExitCode
TEMPH
^lBaaAV
EventData
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
PackageFullName
FullFilePath
ErrorText
ErrorDescription
LineNumber
ColumnNumber
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
TEMPL
EventData
PackageFullName
waitResult
PackageFullName
waitResult
TEMPT
EventData
PackageFullName
FullFilePath
PackageFullName
FullFilePath
EventData
SessionKey
#StreamingDataSourcePrefetchCanceled
SessionKey
StreamingDataSourcePrefetchCanceled
TEMP 
EventData
CLSID
ErrorCode
CLSID
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP4
EventData
FolderPath
ErrorCode
FolderPath
ErrorCode
EventData
PackageFullName
Action
ErrorCode
PackageFullName
Action
ErrorCode
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP\
EventData
PackageFullName
 UpstreamDependentPackageFullName
UpstreamDependentPackageKey
PackageFullName
UpstreamDependentPackageFullName
UpstreamDependentPackageKey
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
TEMP$
D(mgQ
EventData
PackageFullName
FileName
ErrorCode
ErrorText
PackageFullName
FileName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
EventData
PackageFullName
ErrorCode
ErrorText
PackageFullName
ErrorCode
ErrorText
t+=D{
EventData
PackageFullName
PackageFullName
TEMPh
EventData
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageIndex
PropertyId
Value
ErrorCode
ErrorText
TEMP8
EventData
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
PackageFullName
PackageRelativeApplicationId
ApplicationIndex
PropertyId
Value
ErrorCode
ErrorText
TEMPL
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
TEMP(
EventData
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
ProcessingPackageFullName
FileName
ErrorCode
ErrorText
ProcessIndex
ProcessCount
ProcessId
ApplicationUserModelId
PackageFullName
ExecutableName
UserSID
UserDomain
UserName
SessionId
t+=D{
EventData
PackageFullName
PackageFullName
EventData
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
FileName
ErrorCode
ProcessId
ErrorText
PackageFullName
TEMPL
EventData
packageFullName
returnCode
packageFullName
returnCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
ErrorText
PackageName
ErrorCode
ErrorText
TEMP@
EventData
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
FileName
ErrorCode
Offset
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
Section
ProcessId
FileName
ErrorCode
HeaderAddr
Section
ProcessId
EventData
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
FileName
ErrorCode
HeaderAddr
ApplicationUserModelId
ProcessId
TEMPp
EventData
FileName
ErrorCode
HeaderAddr
ProcessId
FileName
ErrorCode
HeaderAddr
ProcessId
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
TEMP<
EventData
FileName
ExceptionCode
FileName
ExceptionCode
EventData
FileName
ErrorCode
ProcessId
FileName
ErrorCode
ProcessId
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
FileName
LineNumber
ColumnNumber
ErrorCode
PackageName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
TEMPT
h5!wE
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceCapabilityHandlerCLSID
MissingParameter
TEMPh
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
DeviceId
FunctionType
VetoReason
R]^F=
EventData
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
PackageName
ErrorCode
FileName
Column
DeviceCapabilityName
ElementName
AttributeName
AttributeValue
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
PackageName
ErrorCode
FileName
Column
Element
Attribute
Value
Problem
TEMP@
W3^+`x
EventData
PackageName
ErrorCode
FileName
Column
Element
Attribute
PackageName
ErrorCode
FileName
Column
Element
Attribute
EventData
PackageFamilyName
PackageFamilyName
TEMPP
EventData
PackageFamilyName
ErrorCode
PackageFamilyName
ErrorCode
EventData
ErrorCode
ErrorCode
TEMP@
EventData
ServiceStatus
ErrorCode
ServiceStatus
ErrorCode
TEMP8
EventData
PackageFullName
Flags
PackageFullName
Flags
EventData
PackageFullName
Flags
ErrorCode
PackageFullName
Flags
ErrorCode
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPT
EventData
PackageFullName
ModifiedFile
PackageFullName
ModifiedFile
TEMPX
EventData
PackageFullName
NumberOfFiles
PackageFullName
NumberOfFiles
TEMP8
EventData
PackageName
ErrorCode
PackageName
ErrorCode
EventData
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
ErrorCode
VolumeKey
VolumeName
VolumeMountPoint
VolumeMediaID
TEMP<
EventData
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
PackageFullName
DeploymentOperation
State
Percentage
ErrorCode
IsImpersonating
t+=D{
EventData
PackageFullName
PackageFullName
TEMPD
EventData
PackageFullName
FilePath
PackageFullName
FilePath
TEMP,
EventData
PriPaths
ErrorCode
PriPaths
ErrorCode
TEMP|
EventData
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
MofFile
PhaseError
ObjectNum
FirstLine
LastLine
EventData
HostingModel
HostingModel
EventData
AppId
AppExtensionName
Error
AppId
AppExtensionName
Error
TEMP|
EventData
FileName
Error
FileName
Error
TEMP8
EventData
PackageFullName
Error
PackageFullName
Error
EventData
FileName
Column
ErrorCode
PackageName
PathName
FileName
Column
ErrorCode
PackageName
PathName
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
FilePath
Message
PackageName
FilePath
Message
EventData
PackageName
FilePath
ErrorCode
Message
PackageName
FilePath
ErrorCode
Message
TEMP8
EventData
ErrorCode
PackageName
ErrorCode
PackageName
EventData
ErrorCode
ForMove
ErrorCode
ForMove
EventData
ErrorCode
ErrorCode
EventData
TEMP$
EventData
ErrorCode
Source Path
Destination Path
Flags
ErrorCode
Source Path
Destination Path
Flags
TEMP4
EventData
PackageFullname
PackageFullname
EventData
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
PackageFullname
PreDowngradeVersion
PostDowngradeVersion
TEMPP
,p<DR
EventData
PackageFullname
errorString
PackageFullname
errorString
EventData
SearchString
HresultCode
ErrorCode
Index
SearchString
HresultCode
ErrorCode
Index
TEMPt
EventData
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
PackageFullName
HostRuntimePackageFullName
Capability
ErrorCode
EventData
PackageFullName
HostRuntimePackageFullName
ErrorCode
PackageFullName
HostRuntimePackageFullName
ErrorCode
TEMPH
EventData
PackageFullName
ErrorCode
PackageFullName
ErrorCode
EventData
DeploymentOperation
Package
OriginalUser
DeploymentOperation
Package
OriginalUser
TEMP<
EventData
DeploymentOperation
Package
OriginalUser
ErrorCode
DeploymentOperation
Package
OriginalUser
ErrorCode
TEMP<
EventData
PackageSID
PackageFullName
Capabilities
ErrorCode
PackageSID
PackageFullName
Capabilities
ErrorCode
^m&5t
EventData
PackageFullName
EventlogDllFamilyPath
Operation
PackageFullName
EventlogDllFamilyPath
Operation
TEMP$
EventData
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
PackageFullname
ExitingPackageFullname
MutablePackageDirectory
TEMPP
EventData
PackageName
ProviderGuid
ProviderName
OtherPackageName
PackageName
ProviderGuid
ProviderName
OtherPackageName
EventData
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
PackageName
ProviderGuid
ProviderName
DuplicateChannelName
OtherPackageName
TEMPh
EventData
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
PackageName
ProviderGuid
ProviderName
DependencyProviderGuid
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
EventData
PackageName
ErrorText
ErrorCode
PackageName
ErrorText
ErrorCode
PRVAd
Microsoft-Windows-AppXDeployment-Server
OPCOx
win:Info
win:Start
win:Stop
win:Error
win:Warning
win:Informational
win:Verbose
TASKH$
AppXDeployment.Task.Server.OSIM
AppXDeployment.Task.Server.Extensions
AppXDeployment.Task.Server.Deployment
AppXDeployment.Task.Server.Dependency
AppXDeployment.Task.Server.StagingManager
AppXDeployment.Task.Server.AppxAllUserStore
AppXDeployment.Perftrack.Task.Uninstall
AppXDeployment.Task.Server.Deployment.PackageStateHandler
AppXDeployment.Task.Server.Deployment.PackageManagerGetPackageReader
AppXDeployment.Task.Server.Deployment.RepositoryTerminateSession
AppXDeployment.Task.Server.Deployment.RepositoryBeginTransaction
AppXDeployment.Task.Server.Deployment.RepositoryCommitTransaction
AppXDeployment.Task.Server.Deployment.RepositoryRollbackTransaction
AppXDeployment.Task.Server.Deployment.StagePackage
AppXDeployment.Task.Server.Deployment.UpdatePackage
AppXDeployment.Task.Server.Deployment.OSIMActivate
AppXDeployment.Task.Server.Deployment.OSIMDeactivate
AppXDeployment.Task.Server.Deployment.DeStagePackage
AppXDeployment.Task.Server.Deployment.PrerequisiteStateHandler
AppXDeployment.Task.Server.Deployment.EvaluateStateHandler
AppXDeployment.Task.Server.Deployment.SetPackageState
AppXDeployment.Task.Server.Deployment.DeletePackageFiles
AppXDeployment.Task.Server.Deployment.CleanupManagerPreDeployment
AppXDeployment.Task.Server.Deployment.CleanupManagerPostDeployment
AppXDeployment.Task.Server.Deployment.PackagesInUse
AppXDeployment.Task.Server.Deployment.AllowService
AppXDeployment.Task.Server.Deployment.AllowService2
AppXDeployment.Task.Server.Deployment.AllowUninstall
AppXDeployment.Task.Server.Deployment.DisablePackage
AppXDeployment.Task.Server.Deployment.BeginJETSession
AppXDeployment.Task.Server.Deployment.CreateDatabase
AppXDeployment.Task.Server.Deployment.EndJETSession
AppXDeployment.Task.Server.Deployment.ReleaseJETResources
AppXDeployment.Task.Server.Deployment.QueueManagerEnqueue
AppXDeployment.Task.Server.Deployment.QueueManagerDequeue
AppXDeployment.Task.Server.Deployment.QueueManagerGetNext
AppXDeployment.Task.Server.Deployment.GetRequestForWNFName
AppXDeployment.Task.Server.Deployment.CancelRequest
AppXDeployment.Task.Server.Deployment.FlushUserRegistration
AppXDeployment.Task.Server.Deployment.FlushMachineRegistration
AppXDeployment.Task.Server.Deployment.DataFlushStateHandler
AppXDeployment.Task.Server.Deployment.BundleProcessor
AppXDeployment.Task.Server.Deployment.StageUserData
AppXDeployment.Task.Server.Service
AppXDeployment.Task.Server.Deployment.Trust
AppXDeployment.Task.Server.Deployment.SISOptimization
AppXDeployment.Task.Server.Deployment.Runtime
AppXDeployment.Task.Server.VolumeManager
AppXDeployment.Task.Server.Deployment.SetPackageStatus
AppXDeployment.Task.Server.Deployment.ClearPackageStatus
AppXDeployment.Task.Server.Deployment.UpdatePackageStatus
AppXDeployment.Task.Server.Deployment.FileStat
AppXDeployment.Task.Server.Deployment.FileCompressionStat
AppXDeployment.Task.Server.Deployment.VersionSupercedenceHandler
AppXDeployment.Task.Server.Deployment.MRTDataStateHandler
AppXDeployment.Task.Server.Deployment.AllowReset
AppXDeployment.Task.Server.Deployment.StateRepositoryDownlevel
AppXDeployment.Task.Server.Deployment.StateRepositoryFixIntegrity
AppXDeployment.Task.Server.Deployment.TilesStateHandler
AppXDeployment.Task.Server.Deployment.OptionalDependencyHandler
AppXDeployment.Task.Server.Deployment.SharedAppsRedirectHandler
AppXDeployment.Task.Server.Deployment.SharedAppsSyncHandler
AppXDeployment.Task.Server.Deployment.ContainerDeploymentStateHandler
AppXDeployment.Task.Server.Deployment.MutablePackageDirectoryStateHandler
AppXDeployment.Task.Server.VolumeRequestManager
APPXDEPLOYMENTSERVER_KEYWORD
VISUALELEMENTS_EXTENSION_KEYWORD
OSIM_KEYWORD
STATE_DEH_KEYWORD
AUTOPLAY_DEH_KEYWORD
COLLECTOREXTENSION_DEH_KEYWORD
PACKAGED_COM_DEH_KEYWORD
FILETYPE_DEH_KEYWORD
TRUST_DEH_KEYWORD
LICENSING_DEH_KEYWORD
DATAPACKAGEHOST_DEH_KEYWORD
CERTIFICATES_DEH_KEYWORD
APPX_BASE_DEH_KEYWORD
PROTOCOL_DEH_KEYWORD
MOCOM_HELPER_KEYWORD
RUNTIME_DEH_KEYWORD
BACKGROUND_TASKS_DEH_KEYWORD
DOWNLOAD_DEH_KEYWORD
APPXDEPLOYMENTSERVER_PERF_KEYWORD
MRT_DEH_KEYWORD
DSM_DEH_KEYWORD
APPMODEL_RUNTIME_DMR_KEYWORD
RESTRICTED_LAUNCH_DEH_KEYWORD
DEVICEACCESS_DEH_KEYWORD
INDEXEDDB_DEH_KEYWORD
MSAC_SIGNOUT_DEH_KEYWORD
SEARCHINDEXER_EXTENSION_KEYWORD
APPSYNC_DEH_KEYWORD
APPLYDATA_DEH_KEYWORD
ALARM_DEH_KEYWORD
GEOLOCATION_DEH_KEYWORD
PREINSTALLED_CONFIG_TASK_DEH_KEYWORD
UPDATE_MIGRATION_TASK_DEH_KEYWORD
WEB_ACCOUNT_PROVIDER_DEH_KEYWORD
APPSERVICE_DEH_KEYWORD
USERDATAACCESS_EXTENSION_KEYWORD
DIALPROTOCOL_DEH_KEYWORD
COMMUNICATION_BLOCKING_APP_DEH_KEYWORD
PHONECALLORIGIN_DEH_KEYWORD
WMIPROVIDER_EXTENSION_KEYWORD
LXP_DEH_KEYWORD
SERVER_EXTENSION_KEYWORD
ms:ReservedKeyword44
ms:Telemetry
ms:Measures
ms:CriticalData
win:ResponseTime
EVNTT
WEVT_TEMPLATE
en-US
