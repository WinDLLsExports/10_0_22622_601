!This program cannot be run in DOS mode.
Rich<
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
f94Cu
L$0H3
f94Ku
f94Gu
L$0H3
|$ AVH
T$ E3
!D$@H
L$hH3
UWATAVAWH
9~0v%H
0A_A^A\_]
UVWATAUAVAWH
D$@E3
paWXK
pqZzy
t$PE3
A_A^A]A\_^]
{ ATAVAWH
A_A^A\
L$0E3
p0R^G'
VWATAVAWH
 A_A^A\_^
t$ WATAUAVAWH
 A_A^A]A\_
@USVWAVH
uzD8u
pA^_^[]
L$`H3
|$ UH
p#U^a
UWATAVAWH
|$0E3
|$(E3
u)@8}
A_A^A\_]
x AVH
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWAVAWH
A_A^_^]
9y(v3H
\$ UVWAVAWH
A_A^_^]
@USVWATAUAVAWH
p0R^G'
|$ D9|$8t
A_A^A]A\_^[]
K H!|$ I9y
H!|$(
p0R^G'
WAVAWH
p0R^G'
O H!t$ I9q
H!t$(H
(t$@L
A_A^_
WAVAWH
M L!|$0M9y
L!|$8
A_A^_
x AVH
S H!t$0I9r
H!t$8H
O H!\$ I9Y
H!\$(H
p0R^G'
H;{0s!H
H;{0r
@SUVWAVH
L$pH3
A^_^][
@SVWAVH
L$pH3
A^_^[
@SUVWAVH
L$pH3
A^_^][
L$pH3
t$ WH
L$pH3
VWAVH
H!t$xH
@A^_^
;t$`s
@SVWH
!D$@I
L$pH3
@USVWAVH
A^_^[]
|$ UH
VWAVH
0A^_^
x AVH
x AVH
@USVWAVH
A^_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
x AVH
\$ UVWATAUAVAWH
A_A^A]A\_^]
t?L9{0u1Lc{8I
\$ UVWATAUAVAWH
A_A^A]A\_^]
)t$0I
(t$0H
t$ UWAVH
 u*9E
UWAVH
 A^_]
f9<Au
qrRzj7
(D$@f
)D$@f
HcY8H
H#L$@H
(D$ f
UVWATAUAVAWH
L$P;K
D8l$H
t'D8l$H
|$XE3
;C$}9H
A_A^A]A\_^]
d$ UAVAWH
H#M H
H#M H
A_A^]
UVWATAUAVAWH
mPHcB8L9j
DD$pH
u!8D$0t
U(;U8
(D$@f
(D$@f
(D$@H
A_A^A]A\_^]
x AVH
@USVWATAUAVAWH
p0R^G'
A9u0u0H
HcB8H9r
(D$pf
)D$@<
(D$pf
A_A^A]A\_^[]
@SUVWH
L$hH3
x_^][
VWAVH
@A^_^
P0I!@
x AVH
 HcA8L
V@LcF8H
x AVH
x AVH
9_$~+L
q8T>47
t$ E3
qP[|8>
@USVWATAVAWH
p(XRJ
tHL9e
p+YT"
A_A^A\_^[]
UATAVH
D90t!D
D90t!D
A^A\]
D90t8
D90t8
L$ E3
D90t!D
D90t!D
(D$ f
(D$ f
(D$ f
(D$ f
(D$ f
)t$ H
p0R^G'
(t$ H
(D$ f
tjHcX8
H#L$@H
(D$ f
(D$ f
WAVAWH
i ;Y(}YLcy(H
 A_A^_
D9G@sgH
HcG@H
D;K(}bH
t$ UWAVH
D91uzL
t!D)1H
D;[(|
H9Y t
H#T$@H
(D$0f
|$ UH
UVWAVAWH
T$(E3
\$ E3
`A_A^_^]
\$ UVWATAUAVAWH
H89K(t
LcS(I
L(@H;
T$(E3
d$ E3
A_A^A]A\_^]
|$ UAVAWH
T$(E3
A_A^]
X UVWATAUAVAWH
)t$0H
d$@u-H
(D$0f
d$Pu-H
d$Pu-H
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
@USVWH
H#L$HH
(D$ H
T$(E3
C(H9C
H;C(u
x UAVAWH
A_A^]
` UAVAWH
I;^(t
A_A^]
:Au'H
H#L$pH
(D$@H
USVWATAUAVAWH
uPL92
I;}(ti
?I;}(u
xA_A^A]A\_^[]
L$DE3
L$pH3
U(9S(r
B,A9A,u
UWAVH
D$(E3
D$(E3
@A^_]
D$(H#M0E3
x ATAVAWH
 A_A^A\
VWAVH
 A^_^
p1X~^
@SUVWAVH
H!|$pH
px]Tf'M
D$`E3
0A^_^][
\$ UVWH
@USVWAVH
!\$ L
A^_^[]
@USVWAVH
!\$ L
A^_^[]
@USVWAVH
!\$ L
A^_^[]
(D$@f
(D$PH
p+YT"
qYTvz
qYTvz
t$ UWATAVAWH
H!t$@H
@8wPt
!\$ L
A_A^A\_]
q3]T@
@USVWATAVAWH
D$hD8
T$0E3
L$ E3
|$ E3
t$`D9|$`t5H
|$ E3
t$`D9|$`
L$8E3
|$ E3
t$`D9|$`
L$8E3
|$ E3
t$`D9|$`
L$8E3
|$ E3
t$`D9|$`
D$xD9|$`umH
|$ E3
D$xD9|$`umH
|$ E3
D$xD9|$`umH
|$ E3
A_A^A\_^[]
t$ UWATAVAWH
pi]:*
pz\2]
L$0E3
E8~Lt
E9fH@
L$8E3
|$ E3
D9|$`
pJ^~x
pi]:*
A_A^A\_]
q{]0'
pcYZ/
t$ UWATAVAWH
|$0!E
!\$ L
A_A^A\_]
UVWAVAWH
8GHueH
!\$ L
A_A^_^]
\$ UVWAVAWH
H!t$HI
H!t$@H
!\$ L
A_A^_^]
\$ UVWATAUAVAWH
|$PD8~pt>H
L$0E3
|$(E3
|$ E3
PD8~`t
L$hE3
p+YT"
A_A^A]A\_^]
VWAVH
8CXt)3
9{Pv"H
@A^_^
qsUX#
` UAVAWH
pJ^~x
!\$ L
EH!\$ 
p+YT"
A_A^]
D$@E3
D$@E3
Dt$PH
x AVH
fA9<Hu
P.fA;
@SUVWH
D$ H;
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$HE3
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
PARAMETERS
NitsInjectorIn_
NitsInjectorOut_
NitsInjectorLock_
NitsStartInjector
NitsStopInjector
SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN
NitsInjector
onecore\admin\wmi\winomi\pal\condlockatomic.c
GetPooledSemaphore
Ignoring error deliberately
!((NITS_PRESENCE_STUB != NitsStubbedOut) ? NITS_STUB.DidFault() : NitsFalse)
mpunits.dll
MINT Function Loader
MIReturn
CmdletAliases
admin\wmi\winomi\mp\loader\loader.c
MintLoader_LoadModule
MI_Main
compiled_expression
mint_environment
SourceInfo
sourceLines
sourceInfo
keyword
keywordalias
MSFT_ExpressionIdentifier
MSFT_ExpressionKeywordParameter
lvalue
rvalue
MSFT_ExpressionAssignment
condition
truecase
falsecase
initializers
parameters
pipeline
arguments
function
hasValue
value
Assignment
Begin
Identifier
KeywordValue
Lambda
boolean
datetime
string
sint64
sint32
sint16
sint8
uint64
uint32
uint16
uint8
real64
real32
Value_
MSFT_Expression
admin\wmi\winomi\mp\evaluator\arena.c
Arena_Allocate
Arena_Allocate: simulated OOM
admin\wmi\winomi\mp\evaluator\mint.evaluate.c
__pipeline
error_Type
error_Code
MSFT_Expression
KeywordParameter
Value
Value_boolean
Value_datetime
Value_real32
Value_real64
Value_sint16
Value_sint32
Value_sint64
Value_sint8
Value_string
Value_uint16
Value_uint32
Value_uint64
Value_uint8
IgnoreSchema
SchemaValidation
MI_MOF_CIMV2_EXTV1
ERROR: unknown class %s
core:interval:from-seconds
core:get-classname
get-classname
new-subject
send-subject
core:+
core:-
core:*
core:/
core:%
core:-not
core:-xor
core:-bnot
core:-band
core:-bor
core:-bxor
core:-shl
core:-shr
core:-eq
core:-ceq
core:-ieq
core:-ne
core:-cne
core:-ine
core:-lt
core:-clt
core:-ilt
core:-le
core:-cle
core:-ile
core:-gt
core:-cgt
core:-igt
core:-ge
core:-cge
core:-ige
core:-like
core:-ilike
core:-clike
core:-notlike
core:-cnotlike
core:-inotlike
core:-is
core:-isnot
core:coerce
core:new-instance
core:.
core:new-array
core:[]
core:range
control:try
control:raise
control:shift
control:reset
control:apply-exception-to-continuation
limits:real32:nan
limits:real64:nan
limits:real32:infinity
limits:real64:infinity
limits:real32:-infinity
limits:real64:-infinity
limits:real32:epsilon
limits:real64:epsilon
limits:real32:max
limits:real64:max
limits:real32:min
limits:real64:min
limits:uint8:min
limits:uint16:min
limits:uint32:min
limits:uint64:min
limits:uint8:max
limits:uint16:max
limits:uint32:max
limits:uint64:max
limits:sint8:min
limits:sint16:min
limits:sint32:min
limits:sint64:min
limits:sint8:max
limits:sint16:max
limits:sint32:max
limits:sint64:max
types:void
types:boolean
types:uint8
types:sint8
types:uint16
types:sint16
types:uint32
types:sint32
types:uint64
types:sint64
types:real32
types:real64
types:char16
types:datetime
types:timestamp
types:interval
types:string
types:instance
types:observable
types:boolean[]
types:uint8[]
types:sint8[]
types:uint16[]
types:sint16[]
types:uint32[]
types:sint32[]
types:uint64[]
types:sint64[]
types:real32[]
types:real64[]
types:char16[]
types:datetime[]
types:string[]
types:instance[]
Switch
UpstreamPipe
Delegate
Observable
__arg0
__arg1
__arg2
__arg3
__arg%d
[UpstreamPipe]
SourceLines
MSFT_ExpressionKeywordValue
MSFT_ExpressionValue
EmbeddedInstance
MSFT_ExpressionCall
MSFT_ExpressionLambda
MSFT_ExpressionIf
MSFT_ExpressionLoop
MSFT_ExpressionLet
MSFT_ExpressionBegin
MSFT_ExpressionValue_boolean
MSFT_ExpressionValue_uint8
MSFT_ExpressionValue_sint8
MSFT_ExpressionValue_uint16
MSFT_ExpressionValue_sint16
MSFT_ExpressionValue_uint32
MSFT_ExpressionValue_sint32
MSFT_ExpressionValue_uint64
MSFT_ExpressionValue_sint64
MSFT_ExpressionValue_real32
MSFT_ExpressionValue_real64
MSFT_ExpressionValue_datetime
MSFT_ExpressionValue_string
MINT_LOG_EXCEPTION_CAPTURE_LENGTH
admin\wmi\winomi\mp\evaluator\mint.control.c
OMI_Error
CIM_Error
wmitomi.dll
%s\%s
Adapter_RegisterDLL
Adapter_UnRegisterDLL
Adapter_DllCanUnloadNow
Adapter_DllGetClassObject
ac401218-1295-4d06-9b36-f6f8ccebc707
mpunits.dll
expression
pipelineDefinition.expression
ClassVersion
Stream
InstanceId
MSFT_PipelineExecution
Abstract
MSFT_Pipeline
pipelineExecutionName
pipelineExecution
Execute
MSFT_Runspace
Required
pipelineDefinitionInstanceId
pipelineName
EmbeddedObject
CreatePipeline
modules
ImportModule
MSFT_Engine
runspaceName
runspace
CreateDefaultRunspace
MSFT_MintEngine
Static
engine
ExecuteExpression
Flags
Wakeup
MSFT_MintRunspace
MSFT_PipelineDefinition
1.0.0
Description
MSFT_MintPipelineDefinition
MSFT_MintPipeline
MSFT_MintPipelineExecution
Load-Stream
Timeout
Triggers
Arguments
Libraries
Expression
LoadStream
Loader_MINT
Runspace
Pipeline
PipelineExecution
mpeval.dll
/* This file has been generated by Microsoft.Monitoring.Commands, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (file version 10.0.9800.0) */ instance of MSFT_ExpressionIdentifier as $Alias0000000B { name = "CU-LCM"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000000C { SourceInfo = ";2;16;2;36;-ExecutionObservable"; keyword = "ExecutionObservable"; }; instance of MSFT_ExpressionIdentifier as $Alias0000000D { SourceInfo = ";2;37;2;53;$executionStream"; name = "variable:executionStream"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000000E { SourceInfo = ";2;54;2;74;-InterruptObservable"; keyword = "InterruptObservable"; }; instance of MSFT_ExpressionIdentifier as $Alias0000000F { SourceInfo = ";2;75;2;91;$interruptStream"; name = "variable:interruptStream"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000010 { SourceInfo = ";2;92;2;109;-BypassObservable"; keyword = "BypassObservable"; }; instance of MSFT_ExpressionIdentifier as $Alias00000011 { SourceInfo = ";2;110;2;123;$bypassStream"; name = "variable:bypassStream"; }; instance of MSFT_ExpressionCall as $Alias00000012 { SourceInfo = ";2;9;2;123;"; function = $Alias0000000B; arguments = {$Alias0000000C, $Alias0000000D, $Alias0000000E, $Alias0000000F, $Alias00000010, $Alias00000011}; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000013 { SourceInfo = ";1;15;1;31;$executionStream"; name = "variable:executionStream"; keywordalias = "executionStream"; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000014 { SourceInfo = ";1;33;1;49;$interruptStream"; name = "variable:interruptStream"; keywordalias = "interruptStream"; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000015 { SourceInfo = ";1;51;1;64;$bypassStream"; name = "variable:bypassStream"; keywordalias = "bypassStream"; }; instance of MSFT_ExpressionLambda { SourceLines = {"  param($executionStream, $interruptStream, $bypassStream)", " CU-LCM -ExecutionObservable $executionStream -InterruptObservable $interruptStream -BypassObservable $bypassStream", " "}; SourceInfo = ";1;1;3;1;"; body = $Alias00000012; parameters = {$Alias00000013, $Alias00000014, $Alias00000015};  }; 
/* This file has been generated by Microsoft.Monitoring.Commands, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 (file version 10.0.9800.0) */ instance of MSFT_ExpressionIdentifier as $Alias00000177 { SourceInfo = ";3;9;11;10;"; name = "Get-Configurations"; }; instance of MSFT_ExpressionIdentifier as $Alias00000178 { name = "control:reset"; }; instance of MSFT_ExpressionIdentifier as $Alias00000179 { SourceInfo = ";5;9;5;23;$initialConfig"; name = "variable:initialConfig"; }; instance of MSFT_ExpressionIdentifier as $Alias0000017A { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias0000017B { value = "Hashtable"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias0000017C { value = "p"; hasvalue = True; }; instance of MSFT_ExpressionValue_sint32 as $Alias0000017D { value = 30; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias0000017E { value = "c"; hasvalue = True; }; instance of MSFT_ExpressionValue_sint32 as $Alias0000017F { value = 15; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000180 { SourceInfo = ";5;26;5;43;@{p = 30; c = 15}"; function = $Alias0000017A; arguments = {$Alias0000017B, $Alias0000017C, $Alias0000017D, $Alias0000017E, $Alias0000017F}; }; instance of MSFT_ExpressionAssignment as $Alias00000181 { SourceInfo = ";5;9;5;43;$initialConfig = @{p = 30; c = 15}"; lvalue = $Alias00000179; rvalue = $Alias00000180; }; instance of MSFT_ExpressionIdentifier as $Alias00000182 {  name = "control:write-object"; }; instance of MSFT_ExpressionIdentifier as $Alias00000183 { SourceInfo = ";6;9;6;23;$initialConfig"; name = "variable:initialConfig"; }; instance of MSFT_ExpressionCall as $Alias00000184 { SourceInfo = ";6;9;6;23;$initialConfig"; function = $Alias00000182; pipeline = $Alias00000183; }; instance of MSFT_ExpressionIdentifier as $Alias00000185 { name = "%"; }; instance of MSFT_ExpressionIdentifier as $Alias00000186 { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias00000187 { value = "Hashtable"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias00000188 {  value = "Process"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias00000189 { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias0000018A { value = "Hashtable";  hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias0000018B { value = "p"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias0000018C { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias0000018D { SourceInfo = ";9;16;9;18;$_";  name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias0000018E { value = "RefreshFrequencyMins"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias0000018F { SourceInfo = ";9;16;9;39;$_.RefreshFrequencyMins"; function = $Alias0000018C; arguments = {$Alias0000018D, $Alias0000018E}; }; instance of MSFT_ExpressionValue_string as $Alias00000190 { value = "c"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias00000191 { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias00000192 { SourceInfo = ";9;45;9;47;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias00000193 { value = "ConfigurationModeFrequencyMins"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000194 { SourceInfo = ";9;45;9;78;$_.ConfigurationModeFrequencyMins"; function = $Alias00000191; arguments = {$Alias00000192, $Alias00000193}; }; instance of MSFT_ExpressionCall as $Alias00000195 { SourceInfo = ";9;9;9;81;@{ p = $_.RefreshFrequencyMins; c = $_.ConfigurationModeFrequencyMins; }"; function = $Alias00000189; arguments = {$Alias0000018A, $Alias0000018B, $Alias0000018F, $Alias00000190, $Alias00000194}; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000196 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias00000197 { SourceInfo = ";8;33;10;10;"; body = $Alias00000195; parameters = {$Alias00000196}; }; instance of MSFT_ExpressionCall as $Alias00000198 { SourceInfo = ";8;32;10;10;"; function = $Alias00000186; arguments = {$Alias00000187, $Alias00000188, $Alias00000197}; }; instance of MSFT_ExpressionLambda as $Alias00000199 { SourceInfo = ";8;32;10;10;"; body = $Alias00000198; };  instance of MSFT_ExpressionIdentifier as $Alias0000019A { name = "Get-DscTimingSubject"; }; instance of MSFT_ExpressionCall as $Alias0000019B {  SourceInfo = ";8;9;8;29;Get-DscTimingSubject"; function = $Alias0000019A;  }; instance of MSFT_ExpressionCall as $Alias0000019C { SourceInfo = ";8;32;10;10;"; function = $Alias00000185; arguments = {$Alias00000199}; pipeline = $Alias0000019B; }; instance of MSFT_ExpressionBegin as $Alias0000019D { SourceInfo = ";5;9;10;10;"; body = {$Alias00000181, $Alias00000184, $Alias0000019C}; }; instance of MSFT_ExpressionLambda as $Alias0000019E { SourceInfo = ";5;9;10;10;"; body = $Alias0000019D; }; instance of MSFT_ExpressionCall as $Alias0000019F { SourceInfo = ";5;9;10;10;"; function = $Alias00000178; arguments = {$Alias0000019E}; }; instance of MSFT_ExpressionIdentifier as $Alias000001A0 { SourceInfo = ";5;9;5;23;$initialConfig"; name = "variable:initialConfig"; }; instance of MSFT_ExpressionAssignment as $Alias000001A1 { lvalue = $Alias000001A0; }; instance of MSFT_ExpressionLet as $Alias000001A2 { SourceInfo = ";4;9;11;10;"; body = $Alias0000019F; initializers = {$Alias000001A1}; };  instance of MSFT_ExpressionLambda as $Alias000001A3 { SourceInfo = ";4;9;11;10;"; body = $Alias000001A2; }; instance of MSFT_ExpressionAssignment as $Alias000001A4 { SourceInfo = ";3;9;11;10;"; lvalue = $Alias00000177; rvalue = $Alias000001A3; }; instance of MSFT_ExpressionIdentifier as $Alias000001A5 { SourceInfo = ";13;9;13;12;$s1"; name = "variable:s1"; }; instance of MSFT_ExpressionIdentifier as $Alias000001A6 { name = "Switch-Stream"; }; instance of MSFT_ExpressionIdentifier as $Alias000001A7 { SourceInfo = ";14;9;14;11;$p"; name = "variable:p"; }; instance of MSFT_ExpressionIdentifier as $Alias000001A8 { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias000001A9 { SourceInfo = ";14;14;14;16;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias000001AA { value = "p"; hasvalue = True; };  instance of MSFT_ExpressionCall as $Alias000001AB { SourceInfo = ";14;14;14;18;$_.p"; function = $Alias000001A8; arguments = {$Alias000001A9, $Alias000001AA}; }; instance of MSFT_ExpressionAssignment as $Alias000001AC { SourceInfo = ";14;9;14;18;$p = $_.p"; lvalue = $Alias000001A7;  rvalue = $Alias000001AB; }; instance of MSFT_ExpressionIdentifier as $Alias000001AD { SourceInfo = ";15;9;15;11;$c"; name = "variable:c"; };  instance of MSFT_ExpressionIdentifier as $Alias000001AE { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias000001AF { SourceInfo = ";15;14;15;16;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias000001B0 { value = "c"; hasvalue = True;  }; instance of MSFT_ExpressionCall as $Alias000001B1 { SourceInfo = ";15;14;15;18;$_.c"; function = $Alias000001AE; arguments = {$Alias000001AF, $Alias000001B0}; }; instance of MSFT_ExpressionAssignment as $Alias000001B2 { SourceInfo = ";15;9;15;18;$c = $_.c"; lvalue = $Alias000001AD; rvalue = $Alias000001B1; }; instance of MSFT_ExpressionIdentifier as $Alias000001B3 { name = "Merge-Stream"; }; instance of MSFT_ExpressionIdentifier as $Alias000001B4 { name = "core:new-array"; }; instance of MSFT_ExpressionIdentifier as $Alias000001B5 { name = "types:instance[]"; }; instance of MSFT_ExpressionValue_sint32 as $Alias000001B6 { value = 2; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias000001B7 { name = "%"; }; instance of MSFT_ExpressionIdentifier as $Alias000001B8 { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias000001B9 { value = "Hashtable"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias000001BA { value = "Process"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias000001BB { value = "c"; hasvalue = True; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001BC { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias000001BD { SourceInfo = ";16;61;16;68;{ \"c\" }"; body = $Alias000001BB; parameters = {$Alias000001BC}; }; instance of MSFT_ExpressionCall as $Alias000001BE { SourceInfo = ";16;60;16;68;%{ \"c\" }"; function = $Alias000001B8; arguments = {$Alias000001B9, $Alias000001BA, $Alias000001BD}; }; instance of MSFT_ExpressionLambda as $Alias000001BF { SourceInfo = ";16;60;16;68;%{ \"c\" }"; body = $Alias000001BE; }; instance of MSFT_ExpressionIdentifier as $Alias000001C0 { name = "Get-Interval"; }; instance of MSFT_ExpressionKeywordValue as $Alias000001C1 { SourceInfo = ";16;18;16;27;-Interval"; keyword = "Interval"; }; instance of MSFT_ExpressionIdentifier as $Alias000001C2 { name = "core:interval:from-seconds"; }; instance of MSFT_ExpressionIdentifier as $Alias000001C3 { name = "core:*"; }; instance of MSFT_ExpressionValue_real64 as $Alias000001C4 { value = 6.0000000000000000000000000000000000000000000000000000E+001; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias000001C5 {  SourceInfo = ";16;53;16;55;$c"; name = "variable:c"; }; instance of MSFT_ExpressionCall as $Alias000001C6 { SourceInfo = ";16;29;16;56;[TimeSpan]::FromMinutes($c)"; function = $Alias000001C3; arguments = {$Alias000001C4, $Alias000001C5}; }; instance of MSFT_ExpressionCall as $Alias000001C7 { SourceInfo = ";16;29;16;56;[TimeSpan]::FromMinutes($c)"; function = $Alias000001C2; arguments = {$Alias000001C6}; }; instance of MSFT_ExpressionCall as $Alias000001C8 { SourceInfo = ";16;5;16;57;Get-Interval -Interval ([TimeSpan]::FromMinutes($c))"; function = $Alias000001C0; arguments = {$Alias000001C1, $Alias000001C7}; }; instance of MSFT_ExpressionCall as $Alias000001C9 { SourceInfo = ";16;60;16;68;%{ \"c\" }"; function = $Alias000001B7; arguments = {$Alias000001BF}; pipeline = $Alias000001C8; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001CA {  name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias000001CB { SourceInfo = ";16;3;16;70;{ Get-Interval -Interval ([TimeSpan]::FromMinutes($c)) | %{ \"c\" } }"; body = $Alias000001C9; parameters = {$Alias000001CA}; }; instance of MSFT_ExpressionIdentifier as $Alias000001CC { name = "%"; }; instance of MSFT_ExpressionIdentifier as $Alias000001CD { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias000001CE { value = "Hashtable"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias000001CF { value = "Process"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias000001D0 { value = "p"; hasvalue = True; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001D1 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias000001D2 { SourceInfo = ";16;129;16;136;{ \"p\" }"; body = $Alias000001D0; parameters = {$Alias000001D1}; }; instance of MSFT_ExpressionCall as $Alias000001D3 { SourceInfo = ";16;128;16;136;%{ \"p\" }";  function = $Alias000001CD; arguments = {$Alias000001CE, $Alias000001CF, $Alias000001D2}; }; instance of MSFT_ExpressionLambda as $Alias000001D4 { SourceInfo = ";16;128;16;136;%{ \"p\" }"; body = $Alias000001D3; };  instance of MSFT_ExpressionIdentifier as $Alias000001D5 { name = "Get-Interval"; }; instance of MSFT_ExpressionKeywordValue as $Alias000001D6 {  SourceInfo = ";16;86;16;95;-Interval"; keyword = "Interval"; }; instance of MSFT_ExpressionIdentifier as $Alias000001D7 { name = "core:interval:from-seconds"; }; instance of MSFT_ExpressionIdentifier as $Alias000001D8  { name = "core:*"; }; instance of MSFT_ExpressionValue_real64 as $Alias000001D9 { value = 6.0000000000000000000000000000000000000000000000000000E+001; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias000001DA { SourceInfo = ";16;121;16;123;$p"; name = "variable:p";  }; instance of MSFT_ExpressionCall as $Alias000001DB { SourceInfo = ";16;97;16;124;[TimeSpan]::FromMinutes($p)"; function = $Alias000001D8; arguments = {$Alias000001D9, $Alias000001DA}; }; instance of MSFT_ExpressionCall as $Alias000001DC { SourceInfo = ";16;97;16;124;[TimeSpan]::FromMinutes($p)"; function = $Alias000001D7; arguments = {$Alias000001DB}; };  instance of MSFT_ExpressionCall as $Alias000001DD { SourceInfo = ";16;73;16;125;Get-Interval -Interval ([TimeSpan]::FromMinutes($p))"; function = $Alias000001D5; arguments = {$Alias000001D6, $Alias000001DC}; }; instance of MSFT_ExpressionCall as $Alias000001DE { SourceInfo = ";16;128;16;136;%{ \"p\" }"; function = $Alias000001CC; arguments = {$Alias000001D4}; pipeline = $Alias000001DD; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001DF { name = "variable:_"; keywordalias = "_"; };  instance of MSFT_ExpressionLambda as $Alias000001E0 { SourceInfo = ";16;72;16;137;{Get-Interval -Interval ([TimeSpan]::FromMinutes($p)) | %{ \"p\" }}"; body = $Alias000001DE; parameters = {$Alias000001DF}; }; instance of MSFT_ExpressionCall as $Alias000001E1 { SourceInfo = ";16;3;16;137;";  function = $Alias000001B4; arguments = {$Alias000001B5, $Alias000001B6, $Alias000001CB, $Alias000001E0}; }; instance of MSFT_ExpressionCall as $Alias000001E2 { SourceInfo = ";16;140;16;152;Merge-Stream"; function = $Alias000001B3; pipeline = $Alias000001E1; }; instance of MSFT_ExpressionBegin as $Alias000001E3 { SourceInfo = ";14;9;16;152;"; body = {$Alias000001AC, $Alias000001B2, $Alias000001E2}; }; instance of MSFT_ExpressionIdentifier as $Alias000001E4 { SourceInfo = ";14;9;14;11;$p"; name = "variable:p"; }; instance of MSFT_ExpressionAssignment as $Alias000001E5 {  lvalue = $Alias000001E4; }; instance of MSFT_ExpressionIdentifier as $Alias000001E6 { SourceInfo = ";15;9;15;11;$c"; name = "variable:c"; }; instance of MSFT_ExpressionAssignment as $Alias000001E7 { lvalue = $Alias000001E6; }; instance of MSFT_ExpressionLet as $Alias000001E8 { SourceInfo = ";13;52;16;154;"; body = $Alias000001E3; initializers = {$Alias000001E5, $Alias000001E7}; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001E9 { name = "variable:_"; keywordalias = "_"; };  instance of MSFT_ExpressionLambda as $Alias000001EA { SourceInfo = ";13;52;16;154;"; body = $Alias000001E8; parameters = {$Alias000001E9}; };  instance of MSFT_ExpressionIdentifier as $Alias000001EB { name = "Get-Configurations"; }; instance of MSFT_ExpressionCall as $Alias000001EC {  SourceInfo = ";13;17;13;35;Get-Configurations"; function = $Alias000001EB; }; instance of MSFT_ExpressionCall as $Alias000001ED { SourceInfo = ";13;38;16;154;"; function = $Alias000001A6; arguments = {$Alias000001EA}; pipeline = $Alias000001EC; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001EE { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias000001EF { SourceInfo = ";13;15;16;155;"; body = $Alias000001ED; parameters = {$Alias000001EE}; }; instance of MSFT_ExpressionAssignment as $Alias000001F0 { SourceInfo = ";13;9;16;155;"; lvalue = $Alias000001A5; rvalue = $Alias000001EF; }; instance of MSFT_ExpressionIdentifier as $Alias000001F1 { SourceInfo = ";17;3;17;6;$s2"; name = "variable:s2"; }; instance of MSFT_ExpressionIdentifier as $Alias000001F2 { name = "Get-DscInputSubject"; }; instance of MSFT_ExpressionCall as $Alias000001F3 { SourceInfo = ";17;11;17;30;Get-DscInputSubject"; function = $Alias000001F2; }; instance of MSFT_ExpressionKeywordParameter as $Alias000001F4 { name = "variable:_";  keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias000001F5  { SourceInfo = ";17;9;17;32;{ Get-DscInputSubject }"; body = $Alias000001F3; parameters = {$Alias000001F4}; }; instance of MSFT_ExpressionAssignment as $Alias000001F6 { SourceInfo = ";17;3;17;32;$s2 = { Get-DscInputSubject }"; lvalue = $Alias000001F1; rvalue = $Alias000001F5; }; instance of MSFT_ExpressionIdentifier as $Alias000001F7 { name = "Out-Null"; }; instance of MSFT_ExpressionIdentifier as $Alias000001F8 { name = "Invoke-PipelineShutdown"; }; instance of MSFT_ExpressionIdentifier as $Alias000001F9 { name = "Select-Object"; }; instance of MSFT_ExpressionKeywordValue as $Alias000001FA { SourceInfo = ";18;955;18;961;-Until"; keyword = "Until"; }; instance of MSFT_ExpressionIdentifier as $Alias000001FB { name = "core:-eq"; }; instance of MSFT_ExpressionIdentifier as $Alias000001FC { name = "control:unravel-object"; }; instance of MSFT_ExpressionIdentifier as $Alias000001FD { name = "control:reset"; }; instance of MSFT_ExpressionIdentifier as $Alias000001FE { name = "Get-ClassName"; }; instance of MSFT_ExpressionIdentifier as $Alias000001FF { SourceInfo = ";18;978;18;980;$_"; name = "variable:_"; }; instance of MSFT_ExpressionCall as $Alias00000200 { SourceInfo = ";18;964;18;980;Get-ClassName $_"; function = $Alias000001FE; arguments = {$Alias000001FF}; }; instance of MSFT_ExpressionLambda as $Alias00000201 { SourceInfo = ";18;964;18;980;Get-ClassName $_"; body = $Alias00000200; }; instance of MSFT_ExpressionCall as $Alias00000202 { SourceInfo = ";18;964;18;980;Get-ClassName $_"; function = $Alias000001FD; arguments = {$Alias00000201}; };  instance of MSFT_ExpressionCall as $Alias00000203 { SourceInfo = ";18;964;18;980;Get-ClassName $_"; function = $Alias000001FC; pipeline = $Alias00000202; }; instance of MSFT_ExpressionValue_string as $Alias00000204 { value = "MSFT_DSCConfigurationOutputResult"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000205 { SourceInfo = ";18;963;18;1021;(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\""; function = $Alias000001FB; arguments = {$Alias00000203, $Alias00000204}; };  instance of MSFT_ExpressionKeywordParameter as $Alias00000206 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias00000207 { SourceInfo = ";18;962;18;1022;{(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"}"; body = $Alias00000205; parameters = {$Alias00000206}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000208 { SourceInfo = ";18;1023;18;1033;-Inclusive"; keyword = "Inclusive"; }; instance of MSFT_ExpressionIdentifier as $Alias00000209 { name = "Send-Ipc"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000020A { SourceInfo = ";18;931;18;935;-Key"; keyword = "Key"; }; instance of MSFT_ExpressionValue_string as $Alias0000020B { value = ""; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias0000020C { name = "Convert-OnErrorToOutputResult"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000020D { SourceInfo = ";18;872;18;878;-JobId";  keyword = "JobId"; }; instance of MSFT_ExpressionValue_string as $Alias0000020E { value = "{ffffffff-ffff-ffff-ffff-ffffffffffff}"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias0000020F { name = "Merge-Stream"; }; instance of MSFT_ExpressionIdentifier as $Alias00000210 { name = "Out-Null"; }; instance of MSFT_ExpressionIdentifier as $Alias00000211 { name = "Select-Object"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000212 { SourceInfo = ";18;749;18;755;-Until";  keyword = "Until"; }; instance of MSFT_ExpressionIdentifier as $Alias00000213 { name = "core:-eq"; }; instance of MSFT_ExpressionIdentifier as $Alias00000214 { name = "control:unravel-object"; }; instance of MSFT_ExpressionIdentifier as $Alias00000215 { name = "control:reset"; }; instance of MSFT_ExpressionIdentifier as $Alias00000216 { name = "Get-ClassName"; }; instance of MSFT_ExpressionIdentifier as $Alias00000217 { SourceInfo = ";18;772;18;774;$_"; name = "variable:_"; }; instance of MSFT_ExpressionCall as $Alias00000218 { SourceInfo = ";18;758;18;774;Get-ClassName $_"; function = $Alias00000216; arguments = {$Alias00000217}; };  instance of MSFT_ExpressionLambda as $Alias00000219 { SourceInfo = ";18;758;18;774;Get-ClassName $_"; body = $Alias00000218; }; instance of MSFT_ExpressionCall as $Alias0000021A { SourceInfo = ";18;758;18;774;Get-ClassName $_"; function = $Alias00000215; arguments = {$Alias00000219}; }; instance of MSFT_ExpressionCall as $Alias0000021B { SourceInfo = ";18;758;18;774;Get-ClassName $_"; function = $Alias00000214; pipeline = $Alias0000021A; }; instance of MSFT_ExpressionValue_string as $Alias0000021C { value = "MSFT_DSCConfigurationOutputResult"; hasvalue = True; };  instance of MSFT_ExpressionCall as $Alias0000021D { SourceInfo = ";18;757;18;815;(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\""; function = $Alias00000213; arguments = {$Alias0000021B, $Alias0000021C}; };  instance of MSFT_ExpressionKeywordParameter as $Alias0000021E { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias0000021F { SourceInfo = ";18;756;18;816;{(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"}"; body = $Alias0000021D; parameters = {$Alias0000021E}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000220 { SourceInfo = ";18;817;18;827;-Inclusive"; keyword = "Inclusive"; }; instance of MSFT_ExpressionIdentifier as $Alias00000221 { name = "Send-Ipc"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000222 { SourceInfo = ";18;725;18;729;-Key"; keyword = "Key"; }; instance of MSFT_ExpressionValue_string as $Alias00000223 { value = ""; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias00000224 { name = "Convert-OnErrorToOutputResult"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000225 { SourceInfo = ";18;700;18;706;-JobId";  keyword = "JobId"; }; instance of MSFT_ExpressionIdentifier as $Alias00000226 { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias00000227 { SourceInfo = ";18;707;18;709;$_"; name = "variable:_";  }; instance of MSFT_ExpressionValue_string as $Alias00000228 { value = "Key"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000229 { SourceInfo = ";18;707;18;713;$_.Key"; function = $Alias00000226; arguments = {$Alias00000227, $Alias00000228}; }; instance of MSFT_ExpressionIdentifier as $Alias0000022A { name = "Export-BinaryMiLog"; };  instance of MSFT_ExpressionKeywordValue as $Alias0000022B { SourceInfo = ";18;538;18;552;-DirectoryPath"; keyword = "DirectoryPath"; }; instance of MSFT_ExpressionValue_string as $Alias0000022C { value = "%windir%\\system32\\configuration\\JobLogs\\"; hasvalue = True; }; instance of MSFT_ExpressionKeywordValue as $Alias0000022D { SourceInfo = ";18;598;18;613;-fileNamePrefix"; keyword = "fileNamePrefix"; }; instance of MSFT_ExpressionIdentifier as $Alias0000022E { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias0000022F { SourceInfo = ";18;614;18;616;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias00000230 { value = "Key"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000231 { SourceInfo = ";18;614;18;620;$_.Key"; function = $Alias0000022E; arguments = {$Alias0000022F, $Alias00000230}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000232 { SourceInfo = ";18;621;18;643;-indexBookmarkDelegate"; keyword = "indexBookmarkDelegate"; }; instance of MSFT_ExpressionIdentifier as $Alias00000233 {  name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias00000234 { SourceInfo = ";18;655;18;657;$x"; name = "variable:x"; }; instance of MSFT_ExpressionValue_string as $Alias00000235 { value = "Bookmark"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000236 { SourceInfo = ";18;655;18;666;$x.Bookmark"; function = $Alias00000233; arguments = {$Alias00000234, $Alias00000235}; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000237 { SourceInfo = ";18;651;18;653;$x"; name = "variable:x"; keywordalias = "x"; }; instance of MSFT_ExpressionLambda as $Alias00000238 { SourceInfo = ";18;644;18;667;{param($x) $x.Bookmark}"; body = $Alias00000236; parameters = {$Alias00000237}; }; instance of MSFT_ExpressionIdentifier as $Alias00000239 { name = "Convert-OnErrorToOutputResult"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000023A { SourceInfo = ";18;503;18;509;-JobId"; keyword = "JobId"; }; instance of MSFT_ExpressionIdentifier as $Alias0000023B {  name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias0000023C { SourceInfo = ";18;510;18;512;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias0000023D { value = "Key";  hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias0000023E { SourceInfo = ";18;510;18;516;$_.Key"; function = $Alias0000023B;  arguments = {$Alias0000023C, $Alias0000023D}; }; instance of MSFT_ExpressionIdentifier as $Alias0000023F { name = "Use-Bookmarker"; }; instance of MSFT_ExpressionIdentifier as $Alias00000240 { SourceInfo = ";18;451;18;453;$_"; name = "variable:_"; }; instance of MSFT_ExpressionCall as $Alias00000241 { SourceInfo = ";18;456;18;470;Use-Bookmarker"; function = $Alias0000023F; pipeline = $Alias00000240; }; instance of MSFT_ExpressionCall as $Alias00000242 { SourceInfo = ";18;473;18;516;Convert-OnErrorToOutputResult -JobId $_.Key"; function = $Alias00000239; arguments = {$Alias0000023A, $Alias0000023E}; pipeline = $Alias00000241; }; instance of MSFT_ExpressionCall as $Alias00000243 { SourceInfo = ";18;519;18;667;"; function = $Alias0000022A; arguments = {$Alias0000022B, $Alias0000022C, $Alias0000022D, $Alias00000231, $Alias00000232, $Alias00000238}; pipeline = $Alias00000242; }; instance of MSFT_ExpressionCall as $Alias00000244 {  SourceInfo = ";18;670;18;713;Convert-OnErrorToOutputResult -JobId $_.Key";  function = $Alias00000224; arguments = {$Alias00000225, $Alias00000229}; pipeline = $Alias00000243; }; instance of MSFT_ExpressionCall as $Alias00000245 { SourceInfo = ";18;716;18;732;Send-Ipc -Key \"\""; function = $Alias00000221; arguments = {$Alias00000222, $Alias00000223}; pipeline = $Alias00000244; }; instance of MSFT_ExpressionCall as $Alias00000246 { SourceInfo = ";18;735;18;827;"; function = $Alias00000211; arguments = {$Alias00000212, $Alias0000021F, $Alias00000220}; pipeline = $Alias00000245; }; instance of MSFT_ExpressionCall as $Alias00000247 { SourceInfo = ";18;830;18;838;Out-Null"; function = $Alias00000210; pipeline = $Alias00000246; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000248 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias00000249 { SourceInfo = ";18;450;18;839;"; body = $Alias00000247; parameters = {$Alias00000248}; }; instance of MSFT_ExpressionIdentifier as $Alias0000024A { name = "Split-Stream"; }; instance of MSFT_ExpressionKeywordValue as $Alias0000024B { SourceInfo = ";18;414;18;423;-Property"; keyword = "Property"; }; instance of MSFT_ExpressionIdentifier as $Alias0000024C { name = "core:."; }; instance of MSFT_ExpressionIdentifier as $Alias0000024D { SourceInfo = ";18;425;18;427;$_"; name = "variable:_"; }; instance of MSFT_ExpressionValue_string as $Alias0000024E { value = "JobId"; hasvalue = True; };  instance of MSFT_ExpressionCall as $Alias0000024F { SourceInfo = ";18;425;18;433;$_.JobId"; function = $Alias0000024C; arguments = {$Alias0000024D, $Alias0000024E}; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000250 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias00000251 { SourceInfo = ";18;424;18;434;{$_.JobId}"; body = $Alias0000024F; parameters = {$Alias00000250}; }; instance of MSFT_ExpressionIdentifier as $Alias00000252 { name = "Use-DscArbiter"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000253 { SourceInfo = ";18;49;18;66;-JobQueryReceiver"; keyword = "JobQueryReceiver"; }; instance of MSFT_ExpressionIdentifier as $Alias00000254 { name = "Get-JobQueryReceiver"; }; instance of MSFT_ExpressionCall as $Alias00000255 { SourceInfo = ";18;68;18;88;Get-JobQueryReceiver"; function = $Alias00000254; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000256 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias00000257 { SourceInfo = ";18;67;18;89;{Get-JobQueryReceiver}"; body = $Alias00000255; parameters = {$Alias00000256}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000258 { SourceInfo = ";18;90;18;111;-JobQueryResultSender"; keyword = "JobQueryResultSender"; }; instance of MSFT_ExpressionIdentifier as $Alias00000259 { name = "Send-Subject"; }; instance of MSFT_ExpressionIdentifier as $Alias0000025A { name = "Get-JobQueryResultReceiver"; }; instance of MSFT_ExpressionCall as $Alias0000025B { SourceInfo = ";18;137;18;163;Get-JobQueryResultReceiver"; function = $Alias0000025A; }; instance of MSFT_ExpressionKeywordParameter as $Alias0000025C { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionLambda as $Alias0000025D { SourceInfo = ";18;136;18;164;{Get-JobQueryResultReceiver}"; body = $Alias0000025B; parameters = {$Alias0000025C}; }; instance of MSFT_ExpressionIdentifier as $Alias0000025E { SourceInfo = ";18;165;18;167;$x"; name = "variable:x"; }; instance of MSFT_ExpressionCall as $Alias0000025F { SourceInfo = ";18;123;18;167;Send-Subject {Get-JobQueryResultReceiver} $x"; function = $Alias00000259; arguments = {$Alias0000025D, $Alias0000025E}; };  instance of MSFT_ExpressionKeywordParameter as $Alias00000260 { SourceInfo = ";18;119;18;121;$x"; name = "variable:x"; keywordalias = "x"; };  instance of MSFT_ExpressionLambda as $Alias00000261 { SourceInfo = ";18;112;18;168;{param($x) Send-Subject {Get-JobQueryResultReceiver} $x}"; body = $Alias0000025F; parameters = {$Alias00000260}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000262 { SourceInfo = ";18;169;18;182;-JobExecution"; keyword = "JobExecution"; }; instance of MSFT_ExpressionIdentifier as $Alias00000263 { name = "Load-Stream"; }; instance of MSFT_ExpressionKeywordValue as $Alias00000264 { SourceInfo = ";18;206;18;214;-Timeout"; keyword = "Timeout"; }; instance of MSFT_ExpressionIdentifier as $Alias00000265 { name = "core:interval:from-seconds"; }; instance of MSFT_ExpressionValue_sint32 as $Alias00000266 { value = 60; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000267 { SourceInfo = ";18;216;18;243;[TimeSpan]::FromSeconds(60)"; function = $Alias00000265; arguments = {$Alias00000266}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000268 { SourceInfo = ";18;245;18;254;-Triggers";  keyword = "Triggers"; }; instance of MSFT_ExpressionIdentifier as $Alias00000269 { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias0000026A { value = "Hashtable"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias0000026B { value = "executionStream"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias0000026C { name = "core:[]"; }; instance of MSFT_ExpressionIdentifier as $Alias0000026D { SourceInfo = ";18;273;18;275;$x"; name = "variable:x"; }; instance of MSFT_ExpressionValue_sint32 as $Alias0000026E { value = 0; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias0000026F { SourceInfo = ";18;273;18;278;$x[0]"; function = $Alias0000026C; arguments = {$Alias0000026D, $Alias0000026E}; }; instance of MSFT_ExpressionValue_string as $Alias00000270 { value = "interruptStream"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias00000271 { name = "core:[]"; }; instance of MSFT_ExpressionIdentifier as $Alias00000272 { SourceInfo = ";18;296;18;298;$x"; name = "variable:x"; }; instance of MSFT_ExpressionValue_sint32 as $Alias00000273 { value = 1; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000274 { SourceInfo = ";18;296;18;301;$x[1]"; function = $Alias00000271; arguments = {$Alias00000272, $Alias00000273}; }; instance of MSFT_ExpressionValue_string as $Alias00000275 { value = "bypassStream"; hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias00000276 { name = "core:[]"; }; instance of MSFT_ExpressionIdentifier as $Alias00000277 { SourceInfo = ";18;316;18;318;$x"; name = "variable:x"; }; instance of MSFT_ExpressionValue_sint32 as $Alias00000278 { value = 2; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000279 { SourceInfo = ";18;316;18;321;$x[2]"; function = $Alias00000276; arguments = {$Alias00000277, $Alias00000278}; }; instance of MSFT_ExpressionCall as $Alias0000027A { SourceInfo = ";18;255;18;322;@{executionStream=$x[0]; interruptStream=$x[1]; bypassStream=$x[2]}"; function = $Alias00000269; arguments = {$Alias0000026A, $Alias0000026B, $Alias0000026F, $Alias00000270, $Alias00000274, $Alias00000275, $Alias00000279}; }; instance of MSFT_ExpressionKeywordValue as $Alias0000027B { SourceInfo = ";18;323;18;333;-Arguments"; keyword = "Arguments"; }; instance of MSFT_ExpressionIdentifier as $Alias0000027C { name = "core:new-instance"; }; instance of MSFT_ExpressionValue_string as $Alias0000027D { value = "Hashtable";  hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias0000027E {  SourceInfo = ";18;334;18;337;@{}"; function = $Alias0000027C; arguments = {$Alias0000027D}; }; instance of MSFT_ExpressionKeywordValue as $Alias0000027F { SourceInfo = ";18;338;18;348;-Libraries"; keyword = "Libraries"; }; instance of MSFT_ExpressionIdentifier as $Alias00000280 { name = "core:new-array"; }; instance of MSFT_ExpressionIdentifier as $Alias00000281 { name = "types:instance[]"; }; instance of MSFT_ExpressionValue_sint32 as $Alias00000282 { value = 2; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias00000283 { value = "CULCM.dll"; hasvalue = True; }; instance of MSFT_ExpressionValue_string as $Alias00000284 { value = "mpunits.dll"; hasvalue = True; }; instance of MSFT_ExpressionCall as $Alias00000285 { SourceInfo = ";18;350;18;376;\"CULCM.dll\", \"mpunits.dll\""; function = $Alias00000280; arguments = {$Alias00000281, $Alias00000282, $Alias00000283, $Alias00000284}; }; instance of MSFT_ExpressionKeywordValue as $Alias00000286 { SourceInfo = ";18;378;18;389;-Expression"; keyword = "Expression"; }; instance of MSFT_ExpressionIdentifier as $Alias00000287 { SourceInfo = ";18;390;18;397;$object";  name = "variable:object"; }; instance of MSFT_ExpressionCall as $Alias00000288 { SourceInfo = ";18;194;18;397;"; function = $Alias00000263;  arguments = {$Alias00000264, $Alias00000267, $Alias00000268, $Alias0000027A, $Alias0000027B, $Alias0000027E, $Alias0000027F, $Alias00000285, $Alias00000286, $Alias00000287}; }; instance of MSFT_ExpressionKeywordParameter as $Alias00000289 { SourceInfo = ";18;190;18;192;$x"; name = "variable:x";  keywordalias = "x"; }; instance of MSFT_ExpressionLambda as $Alias0000028A  { SourceInfo = ";18;183;18;398;"; body = $Alias00000288; parameters = {$Alias00000289}; }; instance of MSFT_ExpressionIdentifier as $Alias0000028B { name = "Merge-Stream"; }; instance of MSFT_ExpressionIdentifier as $Alias0000028C { name = "core:new-array"; }; instance of MSFT_ExpressionIdentifier as $Alias0000028D { name = "types:instance[]"; }; instance of MSFT_ExpressionValue_sint32 as $Alias0000028E { value = 2;  hasvalue = True; }; instance of MSFT_ExpressionIdentifier as $Alias0000028F { SourceInfo = ";18;9;18;12;$s1"; name = "variable:s1"; }; instance of MSFT_ExpressionIdentifier as $Alias00000290 { SourceInfo = ";18;13;18;16;$s2"; name = "variable:s2"; }; instance of MSFT_ExpressionCall as $Alias00000291 { SourceInfo = ";18;9;18;16;$s1,$s2"; function = $Alias0000028C; arguments = {$Alias0000028D, $Alias0000028E, $Alias0000028F, $Alias00000290}; }; instance of MSFT_ExpressionCall as $Alias00000292 { SourceInfo = ";18;19;18;31;Merge-Stream"; function = $Alias0000028B; pipeline = $Alias00000291; }; instance of MSFT_ExpressionCall as $Alias00000293 { SourceInfo = ";18;34;18;398;"; function = $Alias00000252; arguments = {$Alias00000253, $Alias00000257, $Alias00000258, $Alias00000261, $Alias00000262, $Alias0000028A}; pipeline = $Alias00000292; }; instance of MSFT_ExpressionCall as $Alias00000294 { SourceInfo = ";18;401;18;434;Split-Stream -Property {$_.JobId}"; function = $Alias0000024A; arguments = {$Alias0000024B, $Alias00000251}; pipeline = $Alias00000293; }; instance of MSFT_ExpressionCall as $Alias00000295 { SourceInfo = ";18;437;18;839;"; function = $Alias0000020F; arguments = {$Alias00000249}; pipeline = $Alias00000294; }; instance of MSFT_ExpressionCall as $Alias00000296 { SourceInfo = ";18;842;18;919;Convert-OnErrorToOutputResult -JobId \"{ffffffff-ffff-ffff-ffff-ffffffffffff}\""; function = $Alias0000020C; arguments = {$Alias0000020D, $Alias0000020E}; pipeline = $Alias00000295; }; instance of MSFT_ExpressionCall as $Alias00000297 { SourceInfo = ";18;922;18;938;Send-Ipc -Key \"\""; function = $Alias00000209; arguments = {$Alias0000020A, $Alias0000020B}; pipeline = $Alias00000296; }; instance of MSFT_ExpressionCall as $Alias00000298 { SourceInfo = ";18;941;18;1033;"; function = $Alias000001F9; arguments = {$Alias000001FA, $Alias00000207, $Alias00000208}; pipeline = $Alias00000297; }; instance of MSFT_ExpressionCall as $Alias00000299 { SourceInfo = ";18;1036;18;1059;Invoke-PipelineShutdown"; function = $Alias000001F8; pipeline = $Alias00000298; }; instance of MSFT_ExpressionCall as $Alias0000029A { SourceInfo = ";18;1062;18;1070;Out-Null"; function = $Alias000001F7; pipeline = $Alias00000299; }; instance of MSFT_ExpressionBegin as $Alias0000029B { SourceInfo = ";3;9;18;1070;"; body = {$Alias000001A4, $Alias000001F0, $Alias000001F6, $Alias0000029A}; }; instance of MSFT_ExpressionIdentifier as $Alias0000029C { SourceInfo = ";13;9;13;12;$s1"; name = "variable:s1"; }; instance of MSFT_ExpressionAssignment as $Alias0000029D { lvalue = $Alias0000029C; }; instance of MSFT_ExpressionIdentifier as $Alias0000029E { SourceInfo = ";17;3;17;6;$s2"; name = "variable:s2"; }; instance of MSFT_ExpressionAssignment as $Alias0000029F { lvalue = $Alias0000029E; };  instance of MSFT_ExpressionIdentifier as $Alias000002A0 { name = "Get-Configurations"; }; instance of MSFT_ExpressionAssignment as $Alias000002A1 {  lvalue = $Alias000002A0; }; instance of MSFT_ExpressionLet as $Alias000002A2 { SourceLines = {" param($jobid, $bookmark, $object)", "", "  function Get-Configurations", " {", " $initialConfig = @{p = 30; c = 15}", " $initialConfig", "", " Get-DscTimingSubject | %{", " @{ p = $_.RefreshFrequencyMins; c = $_.ConfigurationModeFrequencyMins; }", " }", " }", "", " $s1 = { Get-Configurations | Switch-Stream {", " $p = $_.p", " $c = $_.c", "\t\t{ Get-Interval -Interval ([TimeSpan]::FromMinutes($c)) | %{ \"c\" } }, {Get-Interval -Interval ([TimeSpan]::FromMinutes($p)) | %{ \"p\" }} | Merge-Stream }}", "\t\t$s2 = { Get-DscInputSubject }", " $s1,$s2 | Merge-Stream | Use-DscArbiter -JobQueryReceiver {Get-JobQueryReceiver} -JobQueryResultSender {param($x) Send-Subject {Get-JobQueryResultReceiver} $x} -JobExecution {param($x) Load-Stream -Timeout ([TimeSpan]::FromSeconds(60)) -Triggers @{executionStream=$x[0]; interruptStream=$x[1]; bypassStream=$x[2]} -Arguments @{} -Libraries (\"CULCM.dll\", \"mpunits.dll\") -Expression $object} | Split-Stream -Property {$_.JobId} | Merge-Stream {$_ | Use-Bookmarker | Convert-OnErrorToOutputResult -JobId $_.Key | Export-BinaryMiLog -DirectoryPath (\"%windir%\\system32\\configuration\\JobLogs\\\") -fileNamePrefix $_.Key -indexBookmarkDelegate {param($x) $x.Bookmark} | Convert-OnErrorToOutputResult -JobId $_.Key | Send-Ipc -Key \"\" | Select-Object -Until {(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"} -Inclusive | Out-Null} | Convert-OnErrorToOutputResult -JobId \"{ffffffff-ffff-ffff-ffff-ffffffffffff}\" | Send-Ipc -Key \"\" | Select-Object -Until {(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"} -Inclusive | Invoke-PipelineShutdown | Out-Null", " "};  SourceInfo = ";1;1;19;1;"; body = $Alias0000029B; initializers = {$Alias0000029D, $Alias0000029F, $Alias000002A1}; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002A3 { SourceInfo = ";1;15;1;21;$jobid";  name = "variable:jobid"; keywordalias = "jobid"; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002A4 { SourceInfo = ";1;23;1;32;$bookmark"; name = "variable:bookmark"; keywordalias = "bookmark"; };  instance of MSFT_ExpressionKeywordParameter as $Alias000002A5 { SourceInfo = ";1;34;1;41;$object"; name = "variable:object"; keywordalias = "object"; }; instance of MSFT_ExpressionLambda as $Alias000002A6 { SourceLines = {" param($jobid, $bookmark, $object)", "", " function Get-Configurations", " {", " $initialConfig = @{p = 30; c = 15}", "  $initialConfig", "", " Get-DscTimingSubject | %{", " @{ p = $_.RefreshFrequencyMins; c = $_.ConfigurationModeFrequencyMins; }", " }", " }", "", " $s1 = { Get-Configurations | Switch-Stream {", "  $p = $_.p", " $c = $_.c", "\t\t{ Get-Interval -Interval ([TimeSpan]::FromMinutes($c)) | %{ \"c\" } }, {Get-Interval -Interval ([TimeSpan]::FromMinutes($p)) | %{ \"p\" }} | Merge-Stream }}", "\t\t$s2 = { Get-DscInputSubject }", "  $s1,$s2 | Merge-Stream | Use-DscArbiter -JobQueryReceiver {Get-JobQueryReceiver} -JobQueryResultSender {param($x) Send-Subject {Get-JobQueryResultReceiver} $x} -JobExecution {param($x) Load-Stream -Timeout ([TimeSpan]::FromSeconds(60)) -Triggers @{executionStream=$x[0]; interruptStream=$x[1]; bypassStream=$x[2]} -Arguments @{} -Libraries (\"CULCM.dll\", \"mpunits.dll\") -Expression $object} | Split-Stream -Property {$_.JobId} | Merge-Stream {$_ | Use-Bookmarker | Convert-OnErrorToOutputResult -JobId $_.Key | Export-BinaryMiLog -DirectoryPath (\"%windir%\\system32\\configuration\\JobLogs\\\") -fileNamePrefix $_.Key -indexBookmarkDelegate {param($x) $x.Bookmark} | Convert-OnErrorToOutputResult -JobId $_.Key | Send-Ipc -Key \"\" | Select-Object -Until {(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"} -Inclusive | Out-Null} | Convert-OnErrorToOutputResult -JobId \"{ffffffff-ffff-ffff-ffff-ffffffffffff}\" | Send-Ipc -Key \"\" | Select-Object -Until {(Get-ClassName $_) -eq \"MSFT_DSCConfigurationOutputResult\"} -Inclusive | Invoke-PipelineShutdown | Out-Null", " "}; SourceInfo = ";1;1;19;1;"; body = $Alias000002A2; parameters = {$Alias000002A3, $Alias000002A4, $Alias000002A5}; }; instance of MSFT_ExpressionIdentifier as $Alias000002A7 { name = "control:write-object"; }; instance of MSFT_ExpressionIdentifier as $Alias000002A8 { SourceInfo = ";2;17;2;23;$value"; name = "variable:value"; }; instance of MSFT_ExpressionIdentifier as $Alias000002A9 { SourceInfo = ";2;26;2;32;$input"; name = "variable:input"; }; instance of MSFT_ExpressionAssignment as $Alias000002AA { SourceInfo = ";2;17;2;32;$value = $input"; lvalue = $Alias000002A8; rvalue = $Alias000002A9; }; instance of MSFT_ExpressionIdentifier as $Alias000002AB {  name = "core:-isnot"; }; instance of MSFT_ExpressionIdentifier as $Alias000002AC { SourceInfo = ";3;21;3;27;$value"; name = "variable:value"; }; instance of MSFT_ExpressionIdentifier as $Alias000002AD { name = "types:void"; }; instance of MSFT_ExpressionCall as $Alias000002AE { SourceInfo = ";3;21;3;41;$value -isnot [void]"; function = $Alias000002AB;  arguments = {$Alias000002AC, $Alias000002AD}; }; instance of MSFT_ExpressionIdentifier as $Alias000002AF { name = "control:shift"; }; instance of MSFT_ExpressionIdentifier as $Alias000002B0 { name = "control:ConcatWithContinuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002B1 {  SourceInfo = ";11;33;11;43;$exception"; name = "variable:exception"; }; instance of MSFT_ExpressionIdentifier as $Alias000002B2 { name = "control:apply-exception-to-continuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002B3 { SourceInfo = ";13;73;13;86;$continuation"; name = "variable:continuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002B4 { SourceInfo = ";13;87;13;97;$exception"; name = "variable:exception"; }; instance of MSFT_ExpressionCall as $Alias000002B5 {  SourceInfo = ";13;33;13;97;control:apply-exception-to-continuation $continuation $exception"; function = $Alias000002B2; arguments = {$Alias000002B3, $Alias000002B4}; }; instance of MSFT_ExpressionIdentifier as $Alias000002B6 { name = "variable:continuation"; }; instance of MSFT_ExpressionCall as $Alias000002B7 { SourceInfo = ";19;33;19;54;variable:continuation";  function = $Alias000002B6; }; instance of MSFT_ExpressionIf as $Alias000002B8 { SourceInfo = ";11;29;20;30;"; condition = $Alias000002B1; truecase = $Alias000002B5; falsecase = $Alias000002B7; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002B9 { SourceInfo = ";9;35;9;45;$exception"; name = "variable:exception"; keywordalias = "exception"; }; instance of MSFT_ExpressionLambda as $Alias000002BA { SourceInfo = ";8;65;21;26;"; body = $Alias000002B8; parameters = {$Alias000002B9}; }; instance of MSFT_ExpressionIdentifier as $Alias000002BB { SourceInfo = ";8;25;8;31;$value"; name = "variable:value"; }; instance of MSFT_ExpressionCall as $Alias000002BC { SourceInfo = ";8;34;21;26;"; function = $Alias000002B0; arguments = {$Alias000002BA}; pipeline = $Alias000002BB; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002BD { SourceInfo = ";6;31;6;44;$continuation"; name = "variable:continuation"; keywordalias = "continuation"; }; instance of MSFT_ExpressionLambda as $Alias000002BE { SourceInfo = ";5;35;22;22;"; body = $Alias000002BC; parameters = {$Alias000002BD}; }; instance of MSFT_ExpressionCall as $Alias000002BF { SourceInfo = ";5;21;22;22;"; function = $Alias000002AF; arguments = {$Alias000002BE}; }; instance of MSFT_ExpressionIf as $Alias000002C0 { SourceInfo = ";3;17;23;18;"; condition = $Alias000002AE; truecase = $Alias000002BF; }; instance of MSFT_ExpressionBegin as $Alias000002C1 { SourceInfo = ";2;17;23;18;"; body = {$Alias000002AA, $Alias000002C0}; }; instance of MSFT_ExpressionIdentifier as $Alias000002C2 { SourceInfo = ";2;17;2;23;$value"; name = "variable:value"; };  instance of MSFT_ExpressionAssignment as $Alias000002C3 { lvalue = $Alias000002C2; }; instance of MSFT_ExpressionLet as $Alias000002C4 { SourceLines = {"", " $value = $input", " if ($value -isnot [void])", " {", " control:shift {", "  param($continuation)", " ", "  $value | control:ConcatWithContinuation {", "  param($exception)", "", " if ($exception)", " {", " control:apply-exception-to-continuation $continuation $exception", "  }", " else", " {", "  # this is same as: & $continuation, but doesn\'t require ", " # support for &/invocation-operator when arg is not a string/identifier", " variable:continuation ", " }", " }", "  }", " }", " "}; SourceInfo = ";1;1;24;13;"; body = $Alias000002C1; initializers = {$Alias000002C3}; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002C5 { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionIdentifier as $Alias000002C6 { name = "variable:input"; }; instance of MSFT_ExpressionLambda as $Alias000002C7 { SourceLines = {"", " $value = $input", " if ($value -isnot [void])", " {", " control:shift {", " param($continuation)", " ", " $value | control:ConcatWithContinuation {", " param($exception)", "", " if ($exception)", " {", " control:apply-exception-to-continuation $continuation $exception", " }", "  else", " {", " # this is same as: & $continuation, but doesn\'t require ", "  # support for &/invocation-operator when arg is not a string/identifier", " variable:continuation ", "  }", " }", " }", "  }", " "}; SourceInfo = ";1;1;24;13;"; body = $Alias000002C4; parameters = {$Alias000002C5}; pipeline = $Alias000002C6; }; instance of MSFT_ExpressionAssignment as $Alias000002C8 { lvalue = $Alias000002A7; rvalue = $Alias000002C7; }; instance of MSFT_ExpressionIdentifier as $Alias000002C9 { name = "control:unravel-object"; }; instance of MSFT_ExpressionIdentifier as $Alias000002CA { name = "core:-isnot";  }; instance of MSFT_ExpressionIdentifier as $Alias000002CB { SourceInfo = ";2;21;2;27;$input"; name = "variable:input"; }; instance of MSFT_ExpressionIdentifier as $Alias000002CC { name = "types:observable"; }; instance of MSFT_ExpressionCall as $Alias000002CD { SourceInfo = ";2;21;2;50;$input -isnot [IObservable`1]"; function = $Alias000002CA; arguments = {$Alias000002CB, $Alias000002CC}; }; instance of MSFT_ExpressionIdentifier as $Alias000002CE { SourceInfo = ";4;21;4;27;$input"; name = "variable:input"; }; instance of MSFT_ExpressionIdentifier as $Alias000002CF {  SourceInfo = ";8;21;8;27;$value"; name = "variable:value"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D0 { SourceInfo = ";8;30;8;36;$input"; name = "variable:input"; }; instance of MSFT_ExpressionAssignment as $Alias000002D1 { SourceInfo = ";8;21;8;36;$value = $input";  lvalue = $Alias000002CF; rvalue = $Alias000002D0; }; instance of MSFT_ExpressionIdentifier as $Alias000002D2 { name = "control:shift"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D3 { name = "control:UnravelIntoContinuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D4 { SourceInfo = ";15;33;15;43;$exception"; name = "variable:exception"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D5 {  name = "control:apply-exception-to-continuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D6 { SourceInfo = ";17;73;17;86;$continuation"; name = "variable:continuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002D7 { SourceInfo = ";17;87;17;97;$exception"; name = "variable:exception"; }; instance of MSFT_ExpressionCall as $Alias000002D8 { SourceInfo = ";17;33;17;97;control:apply-exception-to-continuation $continuation $exception"; function = $Alias000002D5; arguments = {$Alias000002D6, $Alias000002D7}; }; instance of MSFT_ExpressionIdentifier as $Alias000002D9 { name = "variable:continuation"; }; instance of MSFT_ExpressionIdentifier as $Alias000002DA { SourceInfo = ";23;55;23;62;$result";  name = "variable:result"; }; instance of MSFT_ExpressionCall as $Alias000002DB { SourceInfo = ";23;33;23;62;variable:continuation $result"; function = $Alias000002D9; arguments = {$Alias000002DA}; }; instance of MSFT_ExpressionIf as $Alias000002DC { SourceInfo = ";15;29;24;30;"; condition = $Alias000002D4; truecase = $Alias000002D8; falsecase = $Alias000002DB; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002DD { SourceInfo = ";13;35;13;42;$result"; name = "variable:result";  keywordalias = "result"; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002DE { SourceInfo = ";13;44;13;54;$exception"; name = "variable:exception"; keywordalias = "exception"; }; instance of MSFT_ExpressionLambda as $Alias000002DF { SourceInfo = ";12;66;25;26;"; body = $Alias000002DC; parameters = {$Alias000002DD, $Alias000002DE}; }; instance of MSFT_ExpressionIdentifier as $Alias000002E0 { SourceInfo = ";12;25;12;31;$value"; name = "variable:value"; }; instance of MSFT_ExpressionCall as $Alias000002E1 { SourceInfo = ";12;34;25;26;"; function = $Alias000002D3; arguments = {$Alias000002DF}; pipeline = $Alias000002E0;  }; instance of MSFT_ExpressionKeywordParameter as $Alias000002E2 { SourceInfo = ";10;31;10;44;$continuation"; name = "variable:continuation";  keywordalias = "continuation"; }; instance of MSFT_ExpressionLambda as $Alias000002E3 { SourceInfo = ";9;35;26;22;"; body = $Alias000002E1;  parameters = {$Alias000002E2}; }; instance of MSFT_ExpressionCall as $Alias000002E4 { SourceInfo = ";9;21;26;22;"; function = $Alias000002D2;  arguments = {$Alias000002E3}; }; instance of MSFT_ExpressionBegin as $Alias000002E5 { SourceInfo = ";8;21;26;22;"; body = {$Alias000002D1, $Alias000002E4}; }; instance of MSFT_ExpressionIf as $Alias000002E6 { SourceInfo = ";2;17;27;18;"; condition = $Alias000002CD; truecase = $Alias000002CE; falsecase = $Alias000002E5; }; instance of MSFT_ExpressionIdentifier as $Alias000002E7 { SourceInfo = ";8;21;8;27;$value"; name = "variable:value"; }; instance of MSFT_ExpressionAssignment as $Alias000002E8 { lvalue = $Alias000002E7; }; instance of MSFT_ExpressionLet as $Alias000002E9 { SourceLines = {"", " if ($input -isnot [IObservable`1])", " {", " $input", "  }", " else", " {", " $value = $input", " control:shift {", " param($continuation)", " ", " $value | control:UnravelIntoContinuation {", " param($result, $exception)", "", " if ($exception)", "  {", " control:apply-exception-to-continuation $continuation $exception", " }", "  else", " {", "  # this is same as: & $continuation, but doesn\'t require ", "  # support for &/invocation-operator when arg is not a string/identifier", " variable:continuation $result", " }", " }", "  }", " }", " "}; SourceInfo = ";1;1;28;13;"; body = $Alias000002E6; initializers = {$Alias000002E8}; }; instance of MSFT_ExpressionKeywordParameter as $Alias000002EA { name = "variable:_"; keywordalias = "_"; }; instance of MSFT_ExpressionIdentifier as $Alias000002EB { name = "variable:input"; }; instance of MSFT_ExpressionLambda as $Alias000002EC { SourceLines = {"", " if ($input -isnot [IObservable`1])", " {", " $input", " }", " else", " {", "  $value = $input", " control:shift {", "  param($continuation)", " ", "  $value | control:UnravelIntoContinuation {", " param($result, $exception)", "", " if ($exception)", "  {", " control:apply-exception-to-continuation $continuation $exception", " }", " else", " {", "  # this is same as: & $continuation, but doesn\'t require ", " # support for &/invocation-operator when arg is not a string/identifier", " variable:continuation $result", " }", " }", " }", " }", " "}; SourceInfo = ";1;1;28;13;"; body = $Alias000002E9; parameters = {$Alias000002EA}; pipeline = $Alias000002EB; }; instance of MSFT_ExpressionAssignment as $Alias000002ED { lvalue = $Alias000002C9; rvalue = $Alias000002EC;  }; instance of MSFT_ExpressionLet { body = $Alias000002A6; initializers = {$Alias000002C8, $Alias000002ED}; }; 
root/Microsoft/Windows/DesiredStateConfiguration
root/PEH
DSC Local LCM
PerformRequiredConfigurationChecks
MSFT_DSCLocalConfigurationManager
Primary classification of the error. The following values are defined: 
2 - Communications Error. Errors of this type are principally associated with the procedures and/or processes required to convey information from one point to another. 
3 - Quality of Service Error. Errors of this type are principally associated with failures that result in reduced functionality or performance. 
4 - Software Error. Error of this type are principally associated with a software or processing fault. 
5 - Hardware Error. Errors of this type are principally associated with an equipment or hardware failure. 
6 - Environmental Error. Errors of this type are principally associated with a failure condition relating to the facility, or other environmental considerations. 
7 - Security Error. Errors of this type are associated with security violations, detection of viruses, and similar issues. 
8 - Oversubscription Error. Errors of this type are principally associated with the failure to allocate sufficient resources to complete the operation. 
9 - Unavailable Resource Error. Errors of this type are principally associated with the failure to access a required resource. 
10 -Unsupported Operation Error. Errors of this type are principally associated with requests that are not supported.
ValueMap
Unknown
Other
Communications Error
Quality of Service Error
Software Error
Hardware Error
Environmental Error
Security Error
Oversubscription Error
Unavailable Resource Error
Unsupported Operation Error
DMTF Reserved
Values
CIM_Error.OtherErrorType
ModelCorrespondence
ErrorType
A free-form string describing the ErrorType when 1, "Other", is specified as the ErrorType.
CIM_Error.ErrorType
OtherErrorType
A string that uniquely identifies the entity that owns the definition of the format of the Message described in this instance. OwningEntity MUST include a copyrighted, trademarked or otherwise unique name that is owned by the business entity or standards body defining the format.
OwningEntity
An opaque string that uniquely identifies, within the scope of the OwningEntity, the format of the Message.
CIM_Error.Message
CIM_Error.MessageArguments
MessageID
The formatted message. This message is constructed by combining some or all of the dynamic elements specified in the MessageArguments property with the static elements uniquely identified by the MessageID in a message registry or other catalog associated with the OwningEntity.
CIM_Error.MessageID
Message
An array containing the dynamic content of the message.
MessageArguments
An enumerated value that describes the severity of the Indication from the notifier's point of view: 
0 - the Perceived Severity of the indication is unknown or indeterminate. 
1 - Other, by CIM convention, is used to indicate that the Severity's value can be found in the OtherSeverity property. 
2 - Information should be used when providing an informative response. 
3 - Degraded/Warning should be used when its appropriate to let the user decide if action is needed. 
4 - Minor should be used to indicate action is needed, but the situation is not serious at this time. 
5 - Major should be used to indicate action is needed NOW. 
6 - Critical should be used to indicate action is needed NOW and the scope is broad (perhaps an imminent outage to a critical resource will result). 
7 - Fatal/NonRecoverable should be used to indicate an error occurred, but it's too late to take remedial action. 
2 and 0 - Information and Unknown (respectively) follow common usage. Literally, the Error is purely informational or its severity is simply unknown.
Information
Degraded/Warning
Minor
Major
Critical
Fatal/NonRecoverable
PerceivedSeverity
An enumerated value that describes the probable cause of the error.
Adapter/Card Error
Application Subsystem Failure
Bandwidth Reduced
Connection Establishment Error
Communications Protocol Error
Communications Subsystem Failure
Configuration/Customization Error
Congestion
Corrupt Data
CPU Cycles Limit Exceeded
Dataset/Modem Error
Degraded Signal
DTE-DCE Interface Error
Enclosure Door Open
Equipment Malfunction
Excessive Vibration
File Format Error
Fire Detected
Flood Detected
Framing Error
HVAC Problem
Humidity Unacceptable
I/O Device Error
Input Device Error
LAN Error
Non-Toxic Leak Detected
Local Node Transmission Error
Loss of Frame
Loss of Signal
Material Supply Exhausted
Multiplexer Problem
Out of Memory
Output Device Error
Performance Degraded
Power Problem
Pressure Unacceptable
Processor Problem (Internal Machine Error)
Pump Failure
Queue Size Exceeded
Receive Failure
Receiver Failure
Remote Node Transmission Error
Resource at or Nearing Capacity
Response Time Excessive
Retransmission Rate Excessive
Software Program Abnormally Terminated
Software Program Error (Incorrect Results)
Storage Capacity Problem
Temperature Unacceptable
Threshold Crossed
Timing Problem
Toxic Leak Detected
Transmit Failure
Transmitter Failure
Underlying Resource Unavailable
Version Mismatch
Previous Alert Cleared
Login Attempts Failed
Software Virus Detected
Hardware Security Breached
Denial of Service Detected
Security Credential Mismatch
Unauthorized Access
Alarm Received
Loss of Pointer
Payload Mismatch
Transmission Error
Excessive Error Rate
Trace Problem
Element Unavailable
Element Missing
Loss of Multi Frame
Broadcast Channel Failure
Invalid Message Received
Routing Failure
Backplane Failure
Identifier Duplication
Protection Path Failure
Sync Loss or Mismatch
Terminal Problem
Real Time Clock Failure
Antenna Failure
Battery Charging Failure
Disk Failure
Frequency Hopping Failure
Loss of Redundancy
Power Supply Failure
Signal Quality Problem
Battery Discharging
Battery Failure
Commercial Power Problem
Fan Failure
Engine Failure
Sensor Failure
Fuse Failure
Generator Failure
Low Battery
Low Fuel
Low Water
Explosive Gas
High Winds
Ice Buildup
Smoke
Memory Mismatch
Out of CPU Cycles
Software Environment Problem
Software Download Failure
Element Reinitialized
Logging Problems
Leak Detected
Protection Mechanism Failure
Protecting Resource Failure
Database Inconsistency
Authentication Failure
Breach of Confidentiality
Cable Tamper
Delayed Information
Duplicate Information
Information Missing
Information Modification
Information Out of Sequence
Key Expired
Non-Repudiation Failure
Out of Hours Activity
Out of Service
Procedural Error
Unexpected Information
CIM_Error.ProbableCauseDescription
ProbableCause
A free-form string describing the probable cause of the error.
CIM_Error.ProbableCause
ProbableCauseDescription
A free-form string describing recommended actions to take to resolve the error.
RecommendedActions
The identifying information of the entity (i.e., the instance) generating the error. If this entity is modeled in the CIM Schema, this property contains the path of the instance encoded as a string parameter. If not modeled, the property contains some identifying string that names the entity that generated the error. The path or identifying string is formatted per the ErrorSourceFormat property.
CIM_Error.ErrorSourceFormat
ErrorSource
The format of the ErrorSource property is interpretable based on the value of this property. Values are defined as: 
0 - Unknown. The format is unknown or not meaningfully interpretable by a CIM client application. 
1 - Other. The format is defined by the value of the OtherErrorSourceFormat property.2 - CIMObjectPath. A CIM Object Path as defined in the CIM Infrastructure specification. Note: CIM 2.5 and earlier used the term object names.
CIMObjectPath
CIM_Error.ErrorSource
CIM_Error.OtherErrorSourceFormat
ErrorSourceFormat
A string defining "Other" values for ErrorSourceFormat. This value MUST be set to a non NULL value when ErrorSourceFormat is set to a value of 1 ("Other"). For all other values of ErrorSourceFormat, the value of this string must be set to NULL.
OtherErrorSourceFormat
The CIM status code that characterizes this instance. 
This property defines the status codes that MAY be returned by a conforming CIM Server or Listener. Note that not all status codes are valid for each operation. The specification for each operation SHOULD define the status codes that may be returned by that operation. 
The following values for CIM status code are defined: 
1 - CIM_ERR_FAILED. A general error occurred that is not covered by a more specific error code. 
2 - CIM_ERR_ACCESS_DENIED. Access to a CIM resource was not available to the client. 
3 - CIM_ERR_INVALID_NAMESPACE. The target namespace does not exist. 
4 - CIM_ERR_INVALID_PARAMETER. One or more parameter values passed to the method were invalid. 
5 - CIM_ERR_INVALID_CLASS. The specified Class does not exist. 
6 - CIM_ERR_NOT_FOUND. The requested object could not be found. 
7 - CIM_ERR_NOT_SUPPORTED. The requested operation is not supported. 
8 - CIM_ERR_CLASS_HAS_CHILDREN. Operation cannot be carried out on this class since it has instances. 
9 - CIM_ERR_CLASS_HAS_INSTANCES. Operation cannot be carried out on this class since it has instances. 
10 - CIM_ERR_INVALID_SUPERCLASS. Operation cannot be carried out since the specified superclass does not exist. 
11 - CIM_ERR_ALREADY_EXISTS. Operation cannot be carried out because an object already exists. 
12 - CIM_ERR_NO_SUCH_PROPERTY. The specified Property does not exist. 
13 - CIM_ERR_TYPE_MISMATCH. The value supplied is incompatible with the type. 
14 - CIM_ERR_QUERY_LANGUAGE_NOT_SUPPORTED. The query language is not recognized or supported. 
15 - CIM_ERR_INVALID_QUERY. The query is not valid for the specified query language. 
16 - CIM_ERR_METHOD_NOT_AVAILABLE. The extrinsic Method could not be executed. 
17 - CIM_ERR_METHOD_NOT_FOUND. The specified extrinsic Method does not exist. 
18 - CIM_ERR_UNEXPECTED_RESPONSE. The returned response to the asynchronous operation was not expected. 
19 - CIM_ERR_INVALID_RESPONSE_DESTINATION. The specified destination for the asynchronous response is not valid. 
20 - CIM_ERR_NAMESPACE_NOT_EMPTY. The specified Namespace is not empty.
21 - CIM_ERR_INVALID_ENUMERATION_CONTEXT. The enumeration context supplied is not valid.
22 - CIM_ERR_INVALID_OPERATION_TIMEOUT. The specified Namespace is not empty.
23 - CIM_ERR_PULL_HAS_BEEN_ABANDONED. The specified Namespace is not empty.
24 - CIM_ERR_PULL_CANNOT_BE_ABANDONED. The attempt to abandon a pull operation has failed.
25 - CIM_ERR_FILTERED_ENUMERATION_NOT_SUPPORTED. Filtered Enumeratrions are not supported.
26 - CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED. Continue on error is not supported.
27 - CIM_ERR_SERVER_LIMITS_EXCEEDED. The WBEM Server limits have been exceeded (e.g. memory, connections, ...).
28 - CIM_ERR_SERVER_IS_SHUTTING_DOWN. The WBEM Server is shutting down.
29 - CIM_ERR_QUERY_FEATURE_NOT_SUPPORTED. The specified Query Feature is not supported.
CIM_ERR_FAILED
CIM_ERR_ACCESS_DENIED
CIM_ERR_INVALID_NAMESPACE
CIM_ERR_INVALID_PARAMETER
CIM_ERR_INVALID_CLASS
CIM_ERR_NOT_FOUND
CIM_ERR_NOT_SUPPORTED
CIM_ERR_CLASS_HAS_CHILDREN
CIM_ERR_CLASS_HAS_INSTANCES
CIM_ERR_INVALID_SUPERCLASS
CIM_ERR_ALREADY_EXISTS
CIM_ERR_NO_SUCH_PROPERTY
CIM_ERR_TYPE_MISMATCH
CIM_ERR_QUERY_LANGUAGE_NOT_SUPPORTED
CIM_ERR_INVALID_QUERY
CIM_ERR_METHOD_NOT_AVAILABLE
CIM_ERR_METHOD_NOT_FOUND
CIM_ERR_UNEXPECTED_RESPONSE
CIM_ERR_INVALID_RESPONSE_DESTINATION
CIM_ERR_NAMESPACE_NOT_EMPTY
CIM_ERR_INVALID_ENUMERATION_CONTEXT
CIM_ERR_INVALID_OPERATION_TIMEOUT
CIM_ERR_PULL_HAS_BEEN_ABANDONED
CIM_ERR_PULL_CANNOT_BE_ABANDONED
CIM_ERR_FILTERED_ENUMERATION_NOT_SUPPORTED
CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED
CIM_ERR_SERVER_LIMITS_EXCEEDED
CIM_ERR_SERVER_IS_SHUTTING_DOWN
CIM_ERR_QUERY_FEATURE_NOT_SUPPORTED
CIM_Error.CIMStatusCodeDescription
CIMStatusCode
A free-form string containing a human-readable description of CIMStatusCode. This description MAY extend, but MUST be consistent with, the definition of CIMStatusCode.
CIM_Error.CIMStatusCode
CIMStatusCodeDescription
Indication
2.22.1
Version
Exception
CIM::Interop
UMLPackagePath
CIM_Error is a specialized class that contains information about the severity, cause, recommended actions and other data related to the failure of a CIM Operation. Instances of this type MAY be included as part of the response to a CIM Operation.
Application-specific error code
The name of the error type, for example : 'HRESULT' or 'MI_RESULT' or 'Win32'
An enumeration corresponding to the category enum in MI.h
MI_ERRORCATEGORY_NOT_SPECIFIED
MI_ERRORCATEGORY_OPEN_ERROR
MI_ERRORCATEGORY_CLOSE_EERROR
MI_ERRORCATEGORY_DEVICE_ERROR
MI_ERRORCATEGORY_DEADLOCK_DETECTED
MI_ERRORCATEGORY_INVALID_ARGUMENT
MI_ERRORCATEGORY_INVALID_DATA
MI_ERRORCATEGORY_INVALID_OPERATION
MI_ERRORCATEGORY_INVALID_RESULT
MI_ERRORCATEGORY_INVALID_TYPE
MI_ERRORCATEGORY_METADATA_ERROR
MI_ERRORCATEGORY_NOT_IMPLEMENTED
MI_ERRORCATEGORY_NOT_INSTALLED
MI_ERRORCATEGORY_OBJECT_NOT_FOUND
MI_ERRORCATEGORY_OPERATION_STOPPED
MI_ERRORCATEGORY_OPERATION_TIMEOUT
MI_ERRORCATEGORY_SYNTAX_ERROR
MI_ERRORCATEGORY_PARSER_ERROR
MI_ERRORCATEGORY_ACCESS_DENIED
MI_ERRORCATEGORY_RESOURCE_BUSY
MI_ERRORCATEGORY_RESOURCE_EXISTS
MI_ERRORCATEGORY_RESOURCE_UNAVAILABLE
MI_ERRORCATEGORY_READ_ERROR
MI_ERRORCATEGORY_WRITE_ERROR
MI_ERRORCATEGORY_FROM_STDERR
MI_ERRORCATEGORY_SECURITY_ERROR
MI_ERRORCATEGORY_PROTOCOL_ERROR
MI_ERRORCATEGORY_CONNECTION_ERROR
MI_ERRORCATEGORY_AUTHENTICATION_ERROR
MI_ERRORCATEGORY_LIMITS_EXCEEDED
MI_ERRORCATEGORY_QUOTA_EXCEEDED
MI_ERRORCATEGORY_NOT_ENABLED
error_Category
OMI_Error is a class used to report errors in the OMI infrastructure and components built on that infrastructure.
OMI_BackTrace
OMI_DebugError
inner_Error
Instances of OMI_DebugError contain information about interpretercontinuation stack that can be used to pinpoint the line of codethat failed, and the context it failed in.
fDc o
MPEval.pdb
.text$mn
.text$mn$00
.text$x
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
fDc o
mpeval.dll
DllCanUnloadNow
DllGetClassObject
DllMain
DllRegisterServer
DllUnregisterServer
GetProviderClassID
MI_Main
MPEvalTrap
NITS_PRESENCE_STUB
NITS_STUB
monitoring_platform_evaluatorFT_V1
_XcptFilter
_amsg_exit
malloc
_initterm
__C_specific_handler
msvcrt.dll
_lock
_unlock
__dllonexit
_onexit
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
EventWrite
EventRegister
Sleep
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
MPUnitsTraps
monitoring_platform_reactive_extensionsFT_V1
monitoring_platformFT_V1
mpunits.dll
MI_Application_NewDeserializer_Mof
mimofcodec.dll
mi_clientFT_V1
MI_Application_InitializeV1
mi.dll
wcscat_s
calloc
_wcsicmp
_wcsnicmp
strcpy_s
tolower
fwprintf
_errno
strtol
getenv
realloc
swprintf_s
RegQueryValueExW
RegOpenKeyExW
WaitForSingleObject
GetProcAddress
FreeLibrary
RegCloseKey
CreateSemaphoreExW
ReleaseSemaphore
OpenSemaphoreW
CloseHandle
SetLastError
FormatMessageW
GetLastError
LoadLibraryExW
GetSystemInfo
SwitchToThread
GetModuleHandleA
LocalFree
RaiseException
GetSystemDirectoryW
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-heap-l2-1-0.dll
Instance_New
Instance_Construct
Class_New
RtlpReleaseIdleSlots
miutils.dll
__iob_func
vswprintf_s
LoadStringW
memcpy
memset
wcscmp
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Monitoring Platform Evaluator
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
MPEval.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
MPEval.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
WEVTt
TTBLt
EventData
EventData
EventData
EventData
EventData
EventData
PRVA$
MPEval
LEVL@
win:Informational
EVNT0
WEVT_TEMPLATE
en-US
