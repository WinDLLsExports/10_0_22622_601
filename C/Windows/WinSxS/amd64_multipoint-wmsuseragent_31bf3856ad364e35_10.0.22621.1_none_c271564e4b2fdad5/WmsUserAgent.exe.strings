!This program cannot be run in DOS mode.
RichI
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
L$0H3
UATAUAVAWH
fD9+u
A_A^A]A\]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
PA_A^A]A\_^]
UATAUAVAWH
D$HE3
L$PfD;a
A_A^A]A\]
WATAUAVAWH
t$HE3
t$@E3
A_A^A]A\_
q9R4Z
t$ UWATAVAWH
\$HI9N
A_A^A\_]
h VWATAUAVH
H!\$ L
A^A]A\_^
x AWH
p AWH
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
A_A^A\_^
WAVAWH
A_A^_
@SVWH
WATAUAVAWH
A_A^A]A\_
SUVWATAUAVAWH
(A_A^A]A\_^][
UVWATAUAVAWH
$taH9U
A_A^A]A\_^]
L$0H3
H USVWATAUAVH
A^A]A\_^[]
UVWATAV
A^A\_^]
ATAVAWH
 A_A^A\
USVWATAUAVAWH
fA90t
HA_A^A]A\_^[]
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
ATAVAWH
@A_A^A\
VWAUAVAWH
A_A^A]_^
WATAUAVAWH
fD9 t
A_A^A]A\_
x UATAUAVAWH
fD9 t%f
8.t5fD9
fD9 t
D$ E3
A_A^A]A\]
t$ WAUAVH
A^A]_
L$ SVWAVH
(A^_^[
VWAVH
uGfD9s
fD9sbu
 A^_^
UVWATAUAVAWH
fD9,Ku
fD9;I
fD9+t|H
u?fD9;u9
>.u+H
fF9,gu
)fD9/u
@A_A^A]A\_^]
UVWATAUAVAWH
fE9$xu
D$@H;
fD9$nu
A_A^A]A\_^]
x ATAVAWH
A_A^A\
VWAUAVAWH
H!\$0H
H!\$(L
@A_A^A]_^
VWAUAVAWH
!\$pL
H!\$ H
A_A^A]_^
x ATAVAWH
@A_A^A\
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
\$PH!|$HH
A_A^A]A\_
x ATAVAWH
@A_A^A\
p9R4Z
q9R4Z
s ATAVAWH
A_A^A\
q0R^G'
p AWH
D$$I;
u.L93t
p0R^G'
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$HE3
x AVH
fSuccess == TRUE
wWinMain
termsrv\wms\src\wmsuseragent\main.cpp
%s(%d) - %s - Assertion failed:  %s (%s)  hr = 0x%08X
Assertion failed:  %s(%d) - %s - %s (%s)  hr = 0x%08X
SrcRes.dll
pszArglist
CBRAEx
wWinMain - Exiting, returning 0x%08x.
cArgs > cParamBeforeExcludedProcesses
ExecuteProcessInfoAgent
prgExcludedProcesses
(prgExcludedProcesses[idx].m_id != 0) || ((*_errno()) == 0)
(prgExcludedProcesses[idx].m_uliCreate.QuadPart!= 0) || ((*_errno()) == 0)
ExecuteProcessInfoAgent - Exiting, returning 0x%08x.
cArgs > 2
ExecuteProjectionViewer
cArgs > 3
cbDecodedInvitation % sizeof (WCHAR) == 0
pszInivitation
ExecuteProjectionViewer - Exiting, returning 0x%08x.
hProcess
DisableUserTerminatingProcess
dwResult == 0L
fStatus
!fStatus && GetLastError() == 122L
pbUserSid
pszDomain
eUse == SidTypeUser
pNewDacl
Assertion failed:  %s(%d) - %s - %s (%s)
%s(%d) - %s - Assertion failed:  %s (%s)
ASSERT
WmsProcessInfoAgentWindowClass
CProcessInfoAgent::Initialize - pszProcessInfoWindowClassName=%s, pszProcessInfoWindowTitle=%s, cExcludedProcesses=%d
CProcessInfoAgent::Initialize
termsrv\wms\src\wmsuseragent\processinfoagent.cpp
CProcessInfoAgent::Initialize - prgidExcludedProcesses[%d]=%d
m_hwndProcessInfoWindow
WmsProcessInfoAgent Hidden Window
CProcessInfoAgent::Uninitialize
CProcessInfoAgent::GetProcessInfo - 
fSuccess
CProcessInfoAgent::SendProcessInfo - pszProcessInfo=%s, cbProcessInfo=%d
CProcessInfoAgent::s_RunningAppsEnumWindowsProc
cchTextLength
FALSE
CProcessInfoAgent::s_RunningAppsEnumWindowsProc - szTitle="%s" fFrameWindow=%s fShellManaged=%s hwnd=0x%x.
CProcessInfoAgent::s_RunningAppsEnumWindowsProc - szTitle="%s", hwnd=0x%x.
hStdin != ((HANDLE)(LONG_PTR)-1)
CProcessInfoAgent::ReadCookieFromStdin
hStdin != 0
cbRead == sizeof (dwTempCookie)
CProcessInfoAgent::ReadCookieFromStdin - Exiting, returning 0x%08x.
CProcessList::m_lockProcesses
CProcessList::ReturnAndDeleteHead
CProcessList::RemoveAll
CAutoWriteLock::~CAutoWriteLock
m_tidWriteLockOwner == ::GetCurrentThreadId ()
m_cCurrentThreadWriteLockCount != 0
CSharedReaderWriterLock::UnlockWrite
CSharedReaderWriterLock::UnlockWrite - SRW write lock %s released (contention count = %d)
m_pWriterLock
CAutoWriteLock::CAutoWriteLock
CSharedReaderWriterLock::LockWrite - Waiting for SRW write lock %s, owner = 0x%X (contention count = %d).
m_tidWriteLockOwner == 0
CSharedReaderWriterLock::LockWrite
CSharedReaderWriterLock::LockWrite - SRW write lock %s acquired (contention count = %d)
hr == S_OK
CSharedReaderWriterLock::CSharedReaderWriterLock
termsrv\wms\Src\inc\SrcSharedReaderWriterLock.h
bstrInvitation
CProjectionViewer::Initialize
termsrv\wms\src\wmsuseragent\projectionviewer.cpp
bstrPassword
bstrTitle
m_hHeap
CRunningApps::Initialize
termsrv\wms\src\wmsuseragent\runningapps.cpp
m_pszBuf
m_pImmersiveProcessList
CRunningApps::Add
CRunningApps::Grow
CRunningApps::Grow
pszNew
%d, %I64d, %Id, %s, 
[%I64u] [%u-%02u-%02u %02u:%02u:%02u.%03u] %s [%X.%X.%X] 
hRecord
__EHM_MsiWrite
termsrv\wms\src\common\ehmlib\ehmlib.cpp
rc == 0L
__EHM_FlatFileWrite
10.0.10011.16384
level < (sizeof(*RtlpNumberOf(s_rgEventDescriptor)))
DEBUGMSGV
lpFilename != NULL
GetModulePath
termsrv\wms\src\common\srcutils\srcutils.cpp
cchFileName != 0
pszFullPath
AppendFileNameToModulePath
LoadResourceDLL
hInst
idProcess != 0
GetProcessCreateTime
lr == 0L
((HRESULT)0x80070057L)
CopyString
*ppszDest
GenerateDumpFileName
cchUsedWithoutNull != 0 && cchUsedWithoutNull != (sizeof(*RtlpNumberOf(szModulePathName)))
*pszModuleFileName != L'\0'
%s\%s_%d_%s_%s.dmp
WriteDumpOnExceptionUnhandled exception 0x%08X
WriteDumpOnException
WriteDumpOnExceptionCreating dump file:  %s
hFile != ((HANDLE)(LONG_PTR)-1)
\UNC\
\\?\Volume
{00000000-0000-0000-0000-000000000000}
::$DATA
ProductDumpsDir
SOFTWARE\Microsoft\Windows MultiPoint Server
termsrv\wms\src\common\srcutils\wmscrypt.cpp
WmsBase64Encode
pszTemp
WmsBase64Decode
pbTemp
termsrv\wms\src\common\srcutils\registry.cpp
RegUtil::GetStringValue
cb % sizeof (WCHAR) == 0
WM_ENDSESSION
WM_QUERYENDSESSION
CWmsAgentBaseWnd::WndProc - got %s, wParam=%d, lParam=%d
CSRCWindow::s_SharedWindowProc
termsrv\wms\src\common\srcwnd\srcwnd.cpp
CSRCWindow::s_SharedWindowProc - Set CSRCWindow (0x%08X) m_hWnd to 0x%08X
CSRCWindow::s_CreateWindowHelper
CSRCWindow::CSRCWindow - obj = 0x%X
CSRCWindow::~CSRCWindow - Closing event m_hWndDestroyed 0x%X
CSRCWindow::Initialize::s_lock
pszClassName != NULL
CSRCWindow::Initialize
m_hWndDestroyed
atom != 0
m_hInst != NULL
CSRCWindow::CreateEx
m_szClassName[0] != 0
CSRCWindow::CreateEx
m_hWnd == NULL
CSRCWindow::CreateEx - Created window:  "%s" (0x%08X) 
CSRCWindow::Destroy
CSRCWindow::Destroy - Called on same thread; sending s_WM_WMS_Destroy message
CSRCWindow::Destroy - Called on different thread; posting s_WM_WMS_Destroy message to thread id 0x%X and waiting
wait == WAIT_TIMEOUT
CSRCWindow::Destroy - Wait for m_hWndDestroyed completed
wait == ((((DWORD )0x00000000L) ) + 0 )
CSRCWindow::OnNcCreate
CSRCWindow::OnNcDestroy - Removed property from CSRCWindow 0x%08X (m_hWnd 0x%08X) 
CSRCWindow::OnPaint
SrcWnd:this
assert
fileName
lineNumber
function
macro
message
version
assert
fileName
lineNumber
function
macro
message
hresult
version
Microsoft.Windows.RemoteDesktop.MultiPoint
RSDSu+c
WmsUserAgent.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
EventRegister
EventUnregister
GetSecurityInfo
GetUserNameW
LookupAccountNameW
GetLengthSid
InitializeAcl
AddAccessDeniedAce
GetAce
AddAce
SetSecurityInfo
ADVAPI32.dll
SetUnhandledExceptionFilter
HeapSetInformation
IsDebuggerPresent
GetLastError
LocalFree
GetCurrentProcessId
OpenProcess
LocalAlloc
CloseHandle
GetStdHandle
ReadFile
InitializeSRWLock
GetCurrentThreadId
AcquireSRWLockExclusive
TryAcquireSRWLockExclusive
ReleaseSRWLockExclusive
GetProcessHeap
HeapAlloc
HeapFree
HeapReAlloc
KERNEL32.dll
GetMessageW
TranslateMessage
DispatchMessageW
FindWindowW
EnumWindows
SendMessageW
GetWindowThreadProcessId
IsWindow
IsWindowVisible
GetParent
GetWindowTextLengthW
GetWindowLongPtrW
GetWindowTextW
IsImmersiveProcess
USER32.dll
__CxxFrameHandler4
_wcsicmp
_wtoi
_errno
_wtoi64
memcpy_s
_vsnwprintf
malloc
_callnewh
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
__C_specific_handler
_wcmdln
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
CoInitializeEx
CoUninitialize
CoCreateInstance
ole32.dll
OLEAUT32.dll
CommandLineToArgvW
SHELL32.dll
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
EventSetInformation
EventWrite
EventWriteTransfer
RegOpenKeyExW
RegCloseKey
RegGetValueW
Sleep
GetStartupInfoW
GetModuleHandleW
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
UnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
ProcessIdToSessionId
K32GetModuleBaseNameW
GetLocalTime
WriteFile
GetModuleFileNameW
LoadLibraryExW
GetProcessTimes
CreateEventW
GetDateFormatEx
GetTimeFormatEx
CreateFileW
WaitForSingleObject
SetLastError
SetEvent
GetPropW
DefWindowProcW
CreateWindowExW
GetClassInfoW
RegisterClassW
ShowWindow
ShowWindowAsync
PostMessageW
DestroyWindow
SetPropW
RemovePropW
BeginPaint
ValidateRect
EndPaint
ShowCursor
wcsrchr
wcschr
iswalpha
CryptBinaryToStringW
CryptStringToBinaryW
CRYPT32.dll
msi.dll
MiniDumpWriteDump
dbghelp.dll
WakeAllConditionVariable
SleepConditionVariableSRW
memset
HH-mm-ss
yyyyy-MM-dd
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
    <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
        <asmv3:windowsSettings
             xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">          
          <disableWindowFiltering xmlns="http://schemas.microsoft.com/SMI/2011/WindowsSettings">true</disableWindowFiltering>
        </asmv3:windowsSettings>
    </asmv3:application>
</assembly>
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Wms User Agent
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WmsUserAgent.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WmsUserAgent.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
