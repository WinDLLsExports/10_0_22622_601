!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
D$(E3
L$0H3
` AWH
VWAUAVAWH
 A_A^A]_^
pKXVX
WAVAWH
H!X(!X8
@A_A^_
qYSxS
p AWH
WAVAWH
H!X(!X8
@A_A^_
qYSxS
p AWH
WAVAWH
@A_A^_
ATAVAWH
9|$@u
A_A^A\
VWATAVAWH
L!t$PH
ppZ8w
 A_A^A\_^
WAVAWH
@A_A^_
WAVAWH
A_A^_
WAVAWH
H!X(!X8
@A_A^_
qYSxS
x ATAVAWH
L$pD9O
@A_A^A\
xU9\$0u%L
x09\$0t
WAVAWH
H!X(!X8
@A_A^_
qYSxS
x ATAVAWH
L$pD9O
@A_A^A\
SUVWATAUAVAWH
x8D;t$4H
HA_A^A]A\_^][
WAVAWH
H!X(H
@A_A^_
qYSxS
x ATAVAWH
L$pD9O
@A_A^A\
VWAVH
xc9l$@~
x-9l$@
 A^_^
WAVAWH
H!X(H
@A_A^_
qYSxS
ATAVAWH
@A_A^A\
WAVAWH
@A_A^_
qYSxS
x ATAVAWH
L$pD9O
@A_A^A\
9\$8t
|$ UATAUAVAWH
A_A^A]A\]
VWATAVAWH
A_A^A\_^
WAVAWH
@A_A^_
p WAVAWH
@A_A^_
p WAVAWH
@A_A^_
x AWH
p AWH
c AVH
WAVAWH
@A_A^_
WAVAWH
A_A^_
WAVAWH
@A_A^_
WAVAWH
A_A^_
UWATAUAVH
A^A]A\_]
WAVAWH
@A_A^_
q0\<g
WAUAVH
@A^A]_
WAVAWH
@A_A^_
x*9^(u
H9A0t
@SUVWAVH
pYSxS
 A^_^][
qsT20
t$ WAVAWH
0A_A^_
UVWATAUAVAWH
D9}@A
PA_A^A]A\_^]
WATAVH
@A^A\_
WATAVH
@A^A\_
WAVAWH
@A_A^_
WATAVH
@A^A\_
UWAVH
@A^_]
@USVWATAVAWH
}@H!}PH!}HH
H9EHt
PA_A^A\_^[]
x AVH
UVWATAUAVAWH
`A_A^A]A\_^]
SUVWATAUAVAWH
ue9C,
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
`A_A^A]A\_^]
UVWAUAWH
pKXVX
@A_A]_^]
p WATAWH
@A_A\_
@USVWATAUAVH
!uPE3
@A^A]A\_^[]
h VWATAVAWH
pKXVX
A_A^A\_^
UVWATAUAVAWH
D$ E3
d$XE3
d$PE3
A_A^A]A\_^]
VWAUAVAWH
A_A^A]_^
L$HH3
uB9]8u=H
VWAWH
@A__^
qzUtG
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
A!s M
@A_A^A]A\_^]
k VWAVH
D$@E3
p WAVAWH
@A_A^_
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
WATAWH
A_A\_
VWAVH
 A^_^
|$ ATAVAWH
!t$ E3
@A_A^A\
t$ WAVAWH
@A_A^_
WAVAWH
@A_A^_
@USVWAUAVAWH
pA_A^A]_^[]
L$HH3
UVWATAUAVAWH
D$ E3
uJD9m
uDD9e
D$ E3
d$XE3
d$PE3
A_A^A]A\_^]
VWAUAVAWH
A_A^A]_^
l$ VWATAVAWH
L$XH3
A_A^A\_^
@USVWATAVAWH
!}HE3
PA_A^A\_^[]
p WAVAWH
@A_A^_
WATAUAVAWH
fD90t
A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
{ AUAVAWH
HcCtM
@A_A^A]
WATAUH
@A]A\_
LcCtH
9_|tAH
9Gxt4L
9Gxt(
qKXVX
pKXVX
UVWAVAWH
@A_A^_^]
` AUAVAWH
@A_A^A]
p WAVAWH
@A_A^_
p AWH
UVWATAUAVAWH
A_A^A]A\_^]
k VWATAVAWH
D$ E3
L$hH3
A_A^A\_^
s WATAUAVAWH
D$xE3
L$xfD
A_A^A]A\_
t$ UWAUAVAWH
D$ E3
A_A^A]_]
\$ UVWATAUAVAWH
D$ E3
!\$8H
pA_A^A]A\_^]
\$ UVWATAUAVAWH
D$ E3
!\$8H
pA_A^A]A\_^]
\$ UVWATAUAVAWH
pA_A^A]A\_^]
UVWATAUAVAWH
xVD9mwu8L
x6D9mwu
A_A^A]A\_^]
UWAVH
 A^_]
UVWAUAVH
A^A]_^]
t$ UWATAVAWH
!|$@H
A_A^A\_]
@SUWATAUAVAWH
L$`H3
pA_A^A]A\_][
WATAUAVAWH
fD9 t
A_A^A]A\_
UVWATAUAVAWH
PA_A^A]A\_^]
WATAVH
@A^A\_
WAVAWH
@A_A^_
VWAUAVAWH
!\$pH
A_A^A]_^
UVWATAUAVAWH
|$XE3
|$PE3
D$ E3
pA_A^A]A\_^]
E9Fpu
fD98t
p AWH
USVWATAUAVAWH
D9+t"A
l$XE3
l$PE3
A_A^A]A\_^[]
@SUVWATAUAWH
D$ E3
L$hH3
pA_A]A\_^][
WAVAWH
@A_A^_
\$ UVWAVAWH
pA_A^_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
9t$hu
UVWATAUAVAWH
u 9nlt
L$XH3
`A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
p WAVAWH
@A_A^_
UVWATAUAVAWH
`A_A^A]A\_^]
UVWAVAWH
L$xE3
@A_A^_^]
WATAWH
!|$hH
@A_A\_
` AVH
9zXtUH
x AWH
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
D9w\u|L
H9?tjH
H96tzH
@A_A^A]A\_^]
p WATAVH
H!\$0H
@A^A\_
UVWATAUAVAWH
t$ E3
9PHtRH
t>LcCTH
A_A^A]A\_^]
UWAUH
@A]_]
UVWATAUAVAWH
d$XE3
d$PE3
D9eHu;H
}XNr{
D9eHv
pA_A^A]A\_^]
VWATAUAVH
A^A]A\_^
` AVH
x AVH
t$ WAVAWH
|$`Hc
@A_A^_
\$ UVWAVAWH
T$@I;
A_A^_^]
ATAVAWH
@A_A^A\
VWATAUAWH
A_A]A\_^
s AWH
H9\$p
UATAUAVAWH
A_A^A]A\]
pS[0f7
T$@E3
l$ VWAUAVAWH
H9?tuH
A_A^A]_^
UWATAVAWH
A_A^A\_]
h VWATAUAVH
A^A]A\_^
VWATAVAWH
@A_A^A\_^
@USVWATAVAWH
@A_A^A\_^[]
l$ VWAUAVAWH
A_A^A]_^
@USVWATAUAVAWH
9NXthH
A_A^A]A\_^[]
t$ AWH
L$@L+
UVWAUAVH
pA^A]_^]
!|$hI
VWATAVAWH
L$`H3
A_A^A\_^
WAVAWH
@A_A^_
t$ WATAUAVAWH
L!l$pH
pKXVX
L!l$pH
pKXVX
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
|$ ATAVAWH
@A_A^A\
WAVAWH
@A_A^_
k VWATAVAWH
 A_A^A\_^
D$`I+D$
IcNHH
p WATAUAVAWH
M96t~H
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
A_A^A\_^
VWAWH
@A__^
l$ VWATAVAWH
H96u,HcKHH
HcKHfI
HcKHH
HcKHfI
D$pH+
HcKHfI
A_A^A\_^
UVWATAVH
@A^A\_^]
L$ SVWAVH
(A^_^[
x AVH
x AUAVAWH
D$HH;
A_A^A]
WATAWH
@A_A\_
WAVAWH
@A_A^_
s WAVAWH
q0I![
@A_A^_
AH+A@
AL+ADA
@USVWATAUAVAWH
A_A^A]A\_^[]
p AWH
p AWH
UVWATAUAVAWH
fD90t
fD90t
A_A^A]A\_^]
WAVAWH
A_A^_
WAVAWH
@A_A^_
qzUtG
WATAVH
@A^A\_
VWATAVAWH
H!\$pH9
@A_A^A\_^
WAVAWH
A_A^_
UVWATAUAVAWH
u69l$Dt0H
fA;(s/L
fA;(s*H
`A_A^A]A\_^]
t$ WATAWH
@A_A\_
WATAUAVAWH
A_A^A]A\_
@SUVWATAVAWH
D!d$DI
t$@D9
D$(E3
D$DE3
A_A^A\_^][
x ATAUAVH
D$@E3
D$ E3
A^A]A\
WATAUAVAWH
C@fD9l
p [VJ7
A_A^A]A\_
@SUVWATAVAWH
7D9t$@vID
A_A^A\_^][
UVWATAUAVAWH
D$PfD
f9D$du
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
L$0D9d$TtjH
D$0fD
D$0fD
A_A^A]A\_
UVWAVAWH
A_A^_^]
WAVAWH
A_A^_
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
S D8?
fD9<H
A_A^A\_^
UVWATAUAVAWH
L$8E3
d$(D8
@A_A^A]A\_^]
@SUVWATAVAWH
A_A^A\_^][
l$ VWAUAVAWH
A_A^A]_^
\$ VWAVH
@A^_^
s WAVAWH
pKXVX
0A_A^_
UVWATAUAVAWH
pKXVX
pjW0Z7q
pjW0Z7q
$$L;e
PA_A^A]A\_^]
x ATAUAVH
@A^A]A\
UVWATAUAVAWH
pjW0Z7q
PA_A^A]A\_^]
UVWATAUAVAWH
AdH;B
pKXVX
pKXVX
@A_A^A]A\_^]
p WAVAWH
@A_A^_
qKXVX
H!\$@H
L$@H;
D$@H;
WAVAWH
pKXVX
@A_A^_
pjW0Z7q
p WAVAWH
@A_A^_
UWATAVAWH
A_A^A\_]
q0R^G'
p WATAUAVAWH
,8A8m
A_A^A]A\_
WAVAWH
A_A^_
WATAVH
@A^A\_
qzUtG
UVWATAUAVAWH
D90uwH
D90uk
JfD90u
PA_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
t$ UWATAUAWH
D$8E3
A_A]A\_]
UVWATAUH
`A]A\_^]
x AVH
l$ VWATAVAWH
A_A^A\_^
p WAVAWH
@A_A^_
WAVAWH
@A_A^_
p WAVAWH
@A_A^_
@SUVWAVAWH
L$`H3
xA_A^_^][
p WAVAWH
@A_A^_
WATAUH
@A]A\_
p WAVAWH
@A_A^_
UVWATAUAVAWH
L$(A+
@A_A^A]A\_^]
x AVH
pS[0f7
@USVWATAVAWH
D!}@H
D!}HD!}PD!}X
PA_A^A\_^[]
UVWATAUAVAWH
fD9 t
fD9 t
@A_A^A]A\_^]
x ATAVAWH
@A_A^A\
qS[0f7
x UATAUAVAWH
|$`D+
A_A^A]A\]
VWATAVAWH
H!\80H
H!\88
A_A^A\_^
qzUtG
p WAVAWH
@A_A^_
t$ UWAVH
p WAVAWH
fB;D;
0A_A^_
VWATAVAWH
@A_A^A\_^
VWATAUAVH
A^A]A\_^
x ATH
H!{pH
H!{xH!{@H!{HH
x ATAUAVH
@A^A]A\
x AWH
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
WATAUAVAWH
H9\$ht
|$8!\$0!\$(!\$ H
A_A^A]A\_
SUVWATAUAVAWH
hA_A^A]A\_^][
@USVWATAUAVH
pA^A]A\_^[]
x ATAUAWH
H9D$h
!|$0!|$(!|$ H
9{(t#
A_A]A\
WAVAWH
H!_0H!_8H
@A_A^_
x AVH
p WAVAWH
t$xIc
@A_A^_
UWAUAVAWH
A_A^A]_]
WAVAWH
A_A^_
p WAVAWH
@A_A^_
p AWH
UAUAVH
A^A]]
UATAUAVAWH
T$0E3
HcR(I
HcR(I
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
UVWATAUAVAWH
PA_A^A]A\_^]
UVWATAVH
@A^A\_^]
WATAUAVAWH
H9?t|L
A_A^A]A\_
t$ UWATAUAVH
A^A]A\_]
WAVAWH
@A_A^_
qK_2[
h VWATAVAWH
A_A^A\_^
VWAWH
@A__^
p WAVAWH
@A_A^_
qXX0!
q!UXw
WATAVH
p0\<g
@A^A\_
VWATAVAWH
A_A^A\_^
ATAVAWH
@A_A^A\
WAVAWH
@A_A^_
x AVH
WAUAVH
@A^A]_
qcVtv
WAUAVH
@A^A]_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WATAVH
@A^A\_
WAVAWH
@A_A^_
x ATAVAWH
@A_A^A\
p WAVAWH
0A_A^_
p WATAWH
@A_A\_
VWAVH
@A^_^
pY^T,
WAVAWH
@A_A^_
p AWH
VWATAUAVH
pS[0f7
L$XH3
A^A]A\_^
qS[0f7
h VWAUAVAWH
A_A^A]_^
p WATAVH
H!\(0
p+P0]
@A^A\_
p AWH
x ATAVAWH
A_A^A\
qQ\tI
\$@E3
x AVH
WATAUAVAWH
A_A^A]A\_
UAVAWH
A_A^]
x AUAVAWH
@A_A^A]
x ATAVAWH
A_A^A\
UWATAVAWH
H!|$@H
D$8H!|$0
!|$ E3
A_A^A\_]
UVAVH
H!\$@H
D$8H!\$0
!\$ E3
PA^^]
VWAVH
H!X H
H!\$@H
D$8H!\$0
!\$ E3
D$ E3
UVWATAUAVAWH
paZ0_
|$0E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
fD98t
paZ0_
A_A^A]A\_^]
UATAUAVAWH
D9~`L
L9~8H
fE98t
A_A^A]A\]
A;zPu%M
WAVAWH
@A_A^_
x ATAVAWH
@A_A^A\
ATAVAWH
@A_A^A\
\$ UVWATAUAVAWH
pYVr3/
@A_A^A]A\_^]
\$ UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
VWATAUAWH
A_A]A\_^
WAUAWH
9stt7
@A_A]_
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
Ep9Gpt
LcGtH
A_A^A]A\_
WAVAWH
A_A^_
VWAUAVAWH
A_A^A]_^
t$ WATAUAVAWH
A_A^A]A\_
Spl&D
qbY~N
q)^~[
@USVWATAUAVAWH
A_A^A]A\_^[]
x ATAVAWH
|$ E3
@A_A^A\
D$xE+
L$pA+
D$xE+
T$pA+
@USVWAVAWH
HA_A^_^[]
x UATAUAVAWH
d$ E3
D9&tK
A_A^A]A\]
WAVAWH
@A_A^_
@USVWAUAVAWH
Spl&D
pA_A^A]_^[]
UVWAVAWH
H!\$xH
@A_A^_^]
UVWATAUAVAWH
`A_A^A]A\_^]
x AUAVAWH
@A_A^A]
s WATAWH
@A_A\_
UVWATAUAVAWH
D9AXtlH
PA_A^A]A\_^]
{ ATAUAVH
D$PH;
A^A]A\
ATAVAWH
@A_A^A\
UVWATAUAVAWH
PA_A^A]A\_^]
p WAVAWH
@A_A^_
UVWATAUAVAWH
pS_2[>
A_A^A]A\_^]
@USVWATAUAVAWH
Spl&D
T$ E3
A_A^A]A\_^[]
VWATAVAWH
L!d$pH
A_A^A\_^
USVWATAUAVAWH
L!p(H
xA_A^A]A\_^[]
l$ WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
t$ WATAUAVAWH
A_A^A]A\_
VWATH
@A\_^
p WAVAWH
@A_A^_
Spl&D
WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
p`^XS
p0\<J7
psT20
A_A^A]A\_
WATAUAVAWH
t?fD9)t9f
A_A^A]A\_
qbY~N
x ATAUAVH
@A^A]A\
UVWATAUAVAWH
PA_A^A]A\_^]
q)^~[
x ATAVAWH
@A_A^A\
t$ UWATAVAWH
A_A^A\_]
VWAVH
@A^_^
VWATAVAWH
A_A^A\_^
UVWAVAWH
@A_A^_^]
` AWH
t8HcFpL
psT20
p AWH
UVWAVAWH
!\$p9
@A_A^_^]
UVWAVAWH
@A_A^_^]
psT20
x ATAUAVH
@A^A]A\
p AWH
p AWH
p AWH
p WAVAWH
@A_A^_
x AVH
WAVAWH
@A_A^_
p WAVAWH
@A_A^_
p AWH
UVWAVAWH
 A_A^_^]
@USVWATAUAVAWH
}XHcFpH
x-D9}PtxE9
XA_A^A]A\_^[]
SUVWAUAVAWH
psT20
@A_A^A]_^][
@SUVWAUAVAWH
psT20
PA_A^A]_^][
t$ WATAUAVAWH
A_A^A]A\_
UVWAVAWH
@A_A^_^]
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
qaZ0_
p WAVAWH
@A_A^_
qpZ8w
VWATAVAWH
psT20
psT20
psT20
psT20
A_A^A\_^
@USVWATAUAVAWH
A_A^A]A\_^[]
WATAUAVAWH
pKXVX
0A_A^A]A\_
p WAVAWH
@A_A^_
qYVr3/
p AWH
qjW0Z7q
x ATAVAWH
pKXVX
pjW0Z7q
@A_A^A\
p WAVAWH
@A_A^_
x AVH
WAVAWH
(t$@L
A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
p WATAUAVAWH
A_A^A]A\_
SUVWATH
H!X E3
H!\$0E3
!\$ H
H!\$ H
PA\_^][
ATAVAWH
@A_A^A\
p WATAVH
@A^A\_
WAVAWH
@A_A^_
p ATAVAWH
pzSX8?m
@A_A^A\
WATAUAVAWH
L$pE3
A_A^A]A\_
UVWATAUAVAWH
fF9<hu
D$(E3
L$ E3
A_A^A]A\_^]
USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
p AWH
WAVAWH
@A_A^_
p AWH
q [VJ7
t$ WAVAWH
@A_A^_
9\$8u
9\$@t
@USVWATAUH
HA]A\_^[]
@USVWATAUH
HA]A\_^[]
VWAUAVAWH
@A_A^A]_^
k VWATAVAWH
t$D9r
d$xt D
A_A^A\_^
UVWATAUAVAWH
PA_A^A]A\_^]
VWAVH
 A^_^
s AWH
t$hHc
UWATAUAWH
@A_A]A\_]
UVWATAWH
paZ0_
`A_A\_^]
x AUAVAWH
H!{ H!{(H!{0H!{8!{@!{DH!{HH
A_A^A]
UVWATAUAVAWH
psT20
A_A^A]A\_^]
SUVWATAUAVAWH
H!l$xH
paZ0_
(A_A^A]A\_^][
VWATAVAWH
@A_A^A\_^
VWATAVAWH
paZ0_
A_A^A\_^
p WAVAWH
A_A^_
|$ UAVAWH
@A_A^]
WAVAWH
paZ0_
0A_A^_
USVWATAUAVAWH
D!uHL
D!uXH
D9uHt
paZ0_
;EXtz
xA_A^A]A\_^[]
@USVWATAUAVAWH
paZ0_
HA_A^A]A\_^[]
t$ WH
UWAUAVAWH
H!}@H
A_A^A]_]
p WAVAWH
A_A^_
p WAVAWH
@A_A^_
VWAVH
 A^_^
p WAVAWH
@A_A^_
UVWATAUAVAWH
D$0E3
A_A^A]A\_^]
x AVH
UVWATAUAVAWH
|$pI;
paZ0_
0A_A^A]A\_^]
UVWATAUAVAWH
pA_A^A]A\_^]
D;m@t
paZ0_
paZ0_
@USVWATAVAWH
LczpA
pKXVX
@A_A^A\_^[]
pKXVX
p WAVAWH
HcopH
pKXVX
@A_A^_
WAVAWH
A_A^_
WAVAWH
pKXVX
pjW0Z7q
0A_A^_
|$ UATAUAVAWH
pjW0Z7q
A_A^A]A\]
t$ WATAWH
L$`H3
A_A\_
WAVAWH
@A_A^_
WATAUAVAWH
@A_A^A]A\_
UVWAVAWH
psT20
@A_A^_^]
l$ VWATAVAWH
!\$PL
 A_A^A\_^
VWAWH
UWAUAVAWH
;E0t|
A_A^A]_]
h VWAUAVAWH
pjW0Z7q
A_A^A]_^
t$ WATAUAVAWH
H9CHts
A_A^A]A\_
H!t$HH
H!t$PH
pKXVX
tX9wtuSH
x AVH
UVWATAUAVAWH
pjW0Z7q
A_A^A]A\_^]
p WAVAWH
 A_A^_
qY^T,
VWAVH
H!p H
0A^_^
UWAUAVAWH
H!\$ H
H!\$ H
A_A^A]_]
UWAUAVAWH
L$HA+
A_A^A]_]
@SUVWAWH
L$PH3
`A__^][
@USVWATAVAWH
T$PD+
A_A^A\_^[]
UVWATAUAVAWH
T$0A+
fD9(t
A_A^A]A\_^]
t$ WATAUAVAWH
L$`H3
A_A^A]A\_
u%D9\$@u,E
D9\$@u
pS[0f7
qS[0f7
t$ UWATAUAWH
A_A]A\_]
WAVAWH
HcD$`H
@A_A^_
x AVH
VATAWH
@A_A\^
UVWATAUAVAWH
D9mXu
`A_A^A]A\_^]
UVWATAUAVAWH
l$8E3
D$0E3
@A_A^A]A\_^]
p AWH
p WAVAWH
@A_A^_
x AVH
x UATAUAVAWH
t$8E3
D$0E3
A_A^A]A\]
UVWATAUAVAWH
@A_A^A]A\_^]
x UATAUAVAWH
\$8E3
D$0E3
A_A^A]A\]
UVWATAUAVAWH
$tiH9U
A_A^A]A\_^]
L$0H3
H USVWATAUAVH
A^A]A\_^[]
UVWATAV
A^A\_^]
D$0E3
WAVAWH
pQ\tI
0A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWAVAWH
A_A^_^]
@SUVWATAUAVAWH
D$`H+
d$0E3
|$(E3
fD9 t
D$(E3
A_A^A]A\_^][
qzUtG
pzUtG
UVWATAUAVAWH
</tLJ
@A_A^A]A\_^]
k WAVAWH
!\$hI
@A_A^_
L$0H3
WAVAWH
@A_A^_
WATAUAVAWH
H!l$ H
A_A^A]A\_
ATAVAWH
fD9 t
@A_A^A\
t$ UWAUAVAWH
A_A^A]_]
VWATH
A![ H
!\$@E3
;D$@tc
PA\_^
@SUVWAVH
A^_^][
p AWH
` UAUAVH
L95L^
A^A]]
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
ATAVAWH
@A_A^A\
UVWATAUAVAWH
L$XE3
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
\$ UVWATAUAVAWH
D9d$@H
|$ E3
D$XE3
A_A^A]A\_^]
c AVH
OH!\$(L
L$@E3
H!\$ 3
L$XH3
WATAUAVAWH
fD9 t
A_A^A]A\_
p AWH
UAVAWH
|$ E3
|$ E3
A_A^]
WAVAWH
@A_A^_
VWATAVAWH
@A_A^A\_^
x ATAVAWH
@A_A^A\
9D$Pt
{ ATAVAWH
!\$pI
@A_A^A\
VWAVH
uGfD9s
fD9sbu
 A^_^
UVWATAUAVAWH
fD9,Ku
fD9;I
fD9+t|H
u?fD9;u9
>.u+H
fF9,gu
)fD9/u
@A_A^A]A\_^]
UVWATAUAVAWH
fE9$xu
D$@H;
fD9$nu
A_A^A]A\_^]
VWATAUAVH
A^A]A\_^
WAVAWH
@A_A^_
VWATAVAWH
A_A^A\_^
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
@A_A^A\_^
x ATAUAVH
D!3D!s
@A^A]A\
WATAVH
@A^A\_
WATAVH
@A^A\_
qH\2Z
VWATAVAWH
A_A^A\_^
l$ VWATAVAWH
A_A^A\_^
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
@A_A^A\_^
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
ATAVAWH
fD9 t
@A_A^A\
VWAUAVAWH
!|$pL
H!|$ I
A_A^A]_^
|$ ATAVAWH
@A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
x AWH
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
D$8E3
d$0E3
A_A^A]A\_^]
USVWATAUAVH
D$8E3
t$0E3
pA^A]A\_^[]
WATAUAVAWH
D$0E3
l$(E3
D$0E3
\$(E3
A_A^A]A\_
x ATAVAWH
A_A^A\
p AWH
x AUAVAWH
p"T^o
@A_A^A]
x ATAVAWH
@A_A^A\
H!9H!y
h VWATAUAWH
A_A]A\_^
ATAVAWH
A_A^A\
VWAVH
 A^_^
x ATAVAWH
@A_A^A\
UATAUAVAWH
A_A^A]A\]
L$ E3
WATAUAVAWH
\$PH!|$HH
A_A^A]A\_
|$ ATAVAWH
A_A^A\
x ATAVAWH
@A_A^A\
p9R4Z
q9R4Z
s ATAVAWH
A_A^A\
h VWAUAVAWH
A_A^A]_^
VWATAVAWH
A_A^A\_^
t$ WAVAWH
A_A^_
p WATAUAVAWH
A96twH
E9.twH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
VWAWH
@A__^
VWAUAVAWH
!l$@H
A_A^A]_^
D$DDtXH
@USWATAUAVAWH
EHt6H
EHt>H
t4A9~
t.HcC<
EPt>H
pA_A^A]A\_[]
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
SVWAVH
\$px#H+
8A^_^[
VWAVH
\$px I+
@A^_^
WAVAWH
\$ A;
0A_A^_
D$HE3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
ffffff
oD$ f
oL$0f
oT$@f
o\$PH
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
}1$_=C
IMM32.dll
Global\WMS:VcfFirstWarningThreshold
Global\WMS:VcfSecondWarningThreshold
Global\WMS:MultiStation
VDEST
]G}(EB
termsrv\wms\src\devices\station\Monitor.h
idxSubdivision < m_cSubdivisions
CMonitor::IsSubdivisionEnabled
m_pDeviceManager == 0
CBRAEx
CDetectoid::SetDeviceManager
termsrv\wms\src\devices\station\detectoid.cpp
%s(%d) - %s - Assertion failed:  %s (%s)  hr = 0x%08X
Assertion failed:  %s(%d) - %s - %s (%s)  hr = 0x%08X
CDetectoid::IsOnRootHub - %s 0x%X %s is connected to a root hub.
is not
pMonitor->GetDeviceType() == DT_Monitor
CDetectoid::CountUnmappedMonitorSubdivisions - Monitor 0x%X '%c' subdivision %d is unmapped (%s)
CDetectoid::CountUnmappedMonitorSubdivisions - Found a total of %d unmapped subdivisions.
Assertion failed:  %s(%d) - %s - %s (%s)
%s(%d) - %s - Assertion failed:  %s (%s)
ASSERT
ppv != 0
CDiskProtectionFirstThresholdCrossedDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\diskprotectionfirstthresholdcrosseddetectoid.cpp
punkOuter == 0
CDiskProtectionFirstThresholdCrossedDetectoid::s_CreateInstance
pDetectoid
peStatusChange
CDiskProtectionFirstThresholdCrossedDetectoid::NotifySystemChange
CDiskProtectionSecondThresholdCrossedDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\diskprotectionsecondthresholdcrosseddetectoid.cpp
CDiskProtectionSecondThresholdCrossedDetectoid::s_CreateInstance
CDiskProtectionSecondThresholdCrossedDetectoid::NotifySystemChange
CHubMissingRequiredDeviceDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\hubmissingrequireddevicedetectoid.cpp
CHubMissingRequiredDeviceDetectoid::s_CreateInstance
CHubMissingRequiredDeviceDetectoid::NotifyStationChange
CHubMissingRequiredDeviceDetectoid::NotifyStationChange - status is unchanged -- suppressing alert.
CHubMissingRequiredDeviceDetectoid::Check - station %d - %s
CAutoLogonCredentialDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\autologoncredentialdetectoid.cpp
CAutoLogonCredentialDetectoid::s_CreateInstance
CAutoLogonCredentialDetectoid::NotifyStationChange
CAutoLogonCredentialDetectoid::NotifyStationChange - status is unchanged -- suppressing alert.
CKeyboardOrMouseOnRootHubDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\keyboardormouseonroothubdetectoid.cpp
CKeyboardOrMouseOnRootHubDetectoid::s_CreateInstance
CKeyboardOrMouseOnRootHubDetectoid::NotifySystemChange
CKeyboardOrMouseOnRootHubDetectoid::NotifySystemChange - status is unchanged -- suppressing alert.
CKeyboardOrMouseOnRootHubDetectoid::Check - %s
CMonitorsWithoutPotentialStationHubsDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\monitorswithoutpotentialstationhubsdetectoid.cpp
CMonitorsWithoutPotentialStationHubsDetectoid::s_CreateInstance
CMonitorsWithoutPotentialStationHubsDetectoid::NotifySystemChange
CMonitorsWithoutPotentialStationHubsDetectoid::NotifySystemChange - status is unchanged -- suppressing alert.
CMonitorsWithoutPotentialStationHubsDetectoid::Check - %s
CNoPotentialStationHubsDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\nopotentialstationhubsdetectoid.cpp
CNoPotentialStationHubsDetectoid::s_CreateInstance
CNoPotentialStationHubsDetectoid::NotifySystemChange
CNoPotentialStationHubsDetectoid::NotifySystemChange - status is unchanged -- suppressing alert.
CNoPotentialStationHubsDetectoid::Check - %s
CSafeModeDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\safemodedetectoid.cpp
CSafeModeDetectoid::s_CreateInstance
CSafeModeDetectoid::NotifySystemChange
CSafeModeDetectoid::NotifySystemChange - status is unchanged -- suppressing alert.
CSafeModeDetectoid::Check - %s
m_eWmsMode != WM_Invalid
CDeviceManager::GetWmsMode
termsrv\wms\src\devices\station\DeviceManager.h
CStandardVgaAdapterOnlyDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\standardvgaadapteronlydetectoid.cpp
CStandardVgaAdapterOnlyDetectoid::s_CreateInstance
CStandardVgaAdapterOnlyDetectoid::NotifySystemChange
CStandardVgaAdapterOnlyDetectoid::NotifySystemChange - status is unchanged -- suppressing alert.
CStandardVgaAdapterOnlyDetectoid::Check - %s
hDisplayAdapters != ((HANDLE)(LONG_PTR)-1)
CStandardVgaAdapterOnlyDetectoid::IsDefaultDisplayAdapterInstalled
fSuccess
BasicDisplay
CStationDetectoid::m_lockStationStatus
termsrv\wms\src\devices\station\stationdetectoid.cpp
peSeverity
CStationDetectoid::GetCurrentStatus
peStatus
pEntry != &m_listStationStatus
pStationStatus->m_idStation != idStation
CStationDetectoid::AddStation
pNewStationStatus
CStationDetectoid::RemoveStation
CStationDetectoid::SetStatus
CAutoWriteLock::~CAutoWriteLock
m_tidWriteLockOwner == ::GetCurrentThreadId ()
m_cCurrentThreadWriteLockCount != 0
CSharedReaderWriterLock::UnlockWrite
CSharedReaderWriterLock::UnlockWrite - SRW write lock %s released (contention count = %d)
m_pWriterLock
CAutoWriteLock::CAutoWriteLock
CSharedReaderWriterLock::LockWrite - Waiting for SRW write lock %s, owner = 0x%X (contention count = %d).
m_tidWriteLockOwner == 0
CSharedReaderWriterLock::LockWrite
CSharedReaderWriterLock::LockWrite - SRW write lock %s acquired (contention count = %d)
CAutoReadLock::~CAutoReadLock
CSharedReaderWriterLock::UnlockRead - SRW read lock %s released
m_pReaderLock
CAutoReadLock::CAutoReadLock
CSharedReaderWriterLock::LockRead - Waiting for SRW read lock %s, owner = 0x%X (contention count = %d).
CSharedReaderWriterLock::LockRead - SRW read lock %s acquired (contention count = %d)
hr == S_OK
CSharedReaderWriterLock::CSharedReaderWriterLock
termsrv\wms\Src\inc\SrcSharedReaderWriterLock.h
termsrv\wms\src\devices\station\systemdetectoid.cpp
CSystemDetectoid::GetCurrentStatus
CWaitForConnectionTimeoutDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\waitforconnectiontimeoutdetectoid.cpp
CWaitForConnectionTimeoutDetectoid::s_CreateInstance
CWaitForConnectionTimeoutDetectoid::NotifyStationChange
CWaitForConnectionTimeoutDetectoid::NotifyStationChange - status is unchanged -- suppressing alert.
CWaitForServicesTimeoutDetectoid::NondelegatingQueryInterface
termsrv\wms\src\devices\station\waitforservicestimeoutdetectoid.cpp
CWaitForServicesTimeoutDetectoid::s_CreateInstance
CWaitForServicesTimeoutDetectoid::NotifyStationChange
CWaitForServicesTimeoutDetectoid::NotifyStationChange - status is unchanged -- suppressing alert.
CAlertManager::s_tsoSingleInstance
CAlertManager::NondelegatingQueryInterface
termsrv\wms\src\devices\station\alertmanager.cpp
pNewObject
CAlertManager::s_CreateInstance
m_pDeviceManager
CAlertManager::Initialize
CAlertManager::GetSystemAlertStatus
eType >= __SystemAlert_First
eType < __SystemAlert_Count
CAlertManager::GetSystemAlertStatus - %s (%s), status = %s
CAlertManager::GetStationAlertStatus
idStation != SID_InvalidStationID
eType >= __StationAlert_First
eType < __StationAlert_Count
CAlertManager::GetStationAlertStatus - %s station %d, severity = %s, status = %s
CAlertManager::CheckFatalError - DETECTED %d FATAL ERRORS!
CAlertManager::NotifySystemChange - %s
CAlertManager::NotifyStationChange - %s
prgTable[idx].idx < cTable
CAlertManager::s_InitializeInterfaceArrayFromTable
(prgTable[idx].grfAppliesToSystem & ~__DATS_ValidFlags) == 0
ZX{lzm
_bstrProgId
CAutoMap::CThreadContext::Initialize
termsrv\wms\src\devices\station\automap.cpp
m_bstrMonitorDeviceInstancePath
CAutoMap::CQueryMonitorSubdivisionsCtx::Initialize
CAutoMap::CQueryMonitorSubdivisionLocationCtx::Initialize
CAutoMap::CLookupHubForSubdivisionCtx::Initialize
CAutoMap::m_lockPluginInfoList
Failed to initialize critical section.
CAutoMap::Initialize
%s(%d) - %s - Test failed:  %s
s_pBadPluginInfoList
CAutoMap::LoadPlugins
m_pPluginInfoList
CAutoMap::LoadPluginsPlugin %s supports IAutoMapPlugin.
CAutoMap::LoadPluginsPlugin %s does not supports IAutoMapPlugin.
CAutoMap::LoadPluginsPlugin %s supports IPlugInAutoMap_v1_Deprecated.
m_pPluginInfoList != NULL
CAutoMap::ReleasePlugins
 Skipping -- no automap plugins installed.
CAutoMap::GetHubForMonitor
pContext
hWorkerThread != 0
CAutoMap::GetHubForMonitor - Marking plugin %s bad (LookupHubForMonitor did not complete within the allotted time)
CAutoMap::GetHubForMonitor - Plugin %s matched monitor %s to hub %s
CAutoMap::GetHubForMonitor - No hub found for monitor %s
CAutoMap::QueryMonitorSubdivisions
CAutoMap::QueryMonitorSubdivisions - Marking plugin %s bad (LookupHubForMonitor did not complete within the allotted time)
CAutoMap::QueryMonitorSubdivisions - Plugin %s found %d subdivision%s for monitor %s 
CAutoMap::QueryMonitorSubdivisions - No subdivisions found for monitor %s
CAutoMap::QueryMonitorSubdivisionLocation
CAutoMap::QueryMonitorSubdivisionLocation - Marking plugin %s bad (LookupHubForMonitor did not complete within the allotted time)
CAutoMap::QueryMonitorSubdivisionLocation - Plugin %s:  located subdivision %d (%d, %d) (%d x %d) on monitor %s 
CAutoMap::QueryMonitorSubdivisionLocation - No location found for subdivision %d on monitor %s
CAutoMap::LookupHubForSubdivision
CAutoMap::LookupHubForSubdivision - Marking plugin %s bad (LookupHubForMonitor did not complete within the allotted time)
CAutoMap::LookupHubForSubdivision - Plugin %s matched subdivision %d on monitor %s to hub %s
CAutoMap::LookupHubForSubdivision - No hub found for monitor %s
CAutoMap::s_LookupHubForMonitorThreadProc
CAutoMap::s_LookupHubForMonitorThreadProc - Plugin %s LookupHubForMonitor() failed with 0x%X
CAutoMap::s_LookupHubForMonitorThreadProc - Plugin %s mapped monitor %s to %s which is a %s, not a hub.
CAutoMap::s_LookupHubForMonitorThreadProc - Plugin %s mapped monitor %s to hub %s which is ALREADY a station hub
SUCCEEDED (hr2)
CAutoMap::s_QueryMonitorSubdivisionsThreadProc
CAutoMap::s_QueryMonitorSubdivisionsThreadProc - Plugin %s QueryMonitorSubdivisions() failed with 0x%X
CAutoMap::s_QueryMonitorSubdivisionLocationThreadProc
bstrMonitorDeviceInstancePath
CAutoMap::s_QueryMonitorSubdivisionLocationThreadProc - Plugin %s QueryMonitorSubdivisionLocation() failed with 0x%X
CAutoMap::s_LookupHubForSubdivisionThreadProc
CAutoMap::s_LookupHubForSubdivisionThreadProc - Plugin %s LookupHubForSubdivision() failed with 0x%X
CAutoMap::s_LookupHubForSubdivisionThreadProc - Plugin %s mapped monitor %s to an invalid hub %s
CAutoMap::s_LookupHubForSubdivisionThreadProc - Plugin %s mapped monitor %s to hub %s which is ALREADY a station hub
Software\Microsoft\Windows Multipoint Server\PlugIns
CAutoMap::LoadPluginsFromRegistry
lr == 0L
AutoMap
pszProgId
CAutoMap::LoadPluginsFromRegistry - Skipping value index %d:  %s (gle = %d)
CAutoMap::LoadPluginsFromRegistry - Skipping value %s (invalid type)
CAutoMap::AddPluginToList - Skipping value %s (pPluginInfo is disabled)
CAutoMap::AddPluginToList
CAutoMap::AddPluginToList - Skipping value %s (pPluginInfo was previously marked bad)
pPluginInfo
pPluginInfo->m_bstrProgId
CAutoMap::AddPluginToList - Adding plugin %s to list
CAutoMap::CreatePlugin - Marking plugin %s bad (CLSIDFromProgID failed with 0x%X)
CAutoMap::CreatePlugin - Marking plugin %s bad (CoCreateInstance failed with 0x%X)
Enabled
Plugins are not enabled.
CAutoMap::LoadSettings
Timeout
CAutoMap::LoadSettings - Timeout = %d msec.
CAutoMap::LoadSettings - Ignoring illegal value "Timeout" = %d seconds.  Retaining current value of %d msec.
CAutoCriticalSection::~CAutoCriticalSection
CCriticalSection::Leave - Critical section 0x%p released (contention count = %d)
m_pCriticalSection
CAutoCriticalSection::CAutoCriticalSection
CCriticalSection::Enter - Waiting for critical section 0x%p (contention count = %d)
CCriticalSection::Enter - Critical section 0x%p acquired (contention count = %d)
CCriticalSection::CCriticalSection:  Failed to initialize critical section.
FALSE
CCriticalSection::CCriticalSection
termsrv\wms\Src\inc\SrcCriticalSection.h
HID Consumer Control
usageHi < ARRAYSIZE (s_rgMapHidConsumerPageUsageToScanCode)
CConsumerControl::s_CreateInstance
termsrv\wms\src\devices\station\consumercontrol.cpp
CConsumerControl::FinalRelease - m_pszInstanceId = %s
CConsumerControl::PreInitialize
CConsumerControl::PreInitialize - m_pszInstanceId = %s
m_pKeyRepeatThread
CConsumerControl::SetInputMode - m_pszInstanceId = %s
CConsumerControl::SetInputMode - About to call ::HidD_GetPreparsedData (m_hSidebandInput = 0x%IX)
cUsage > 0
CConsumerControl::OnSidebandDataReceived
pUsageAndPageBuffer
Ignoring invalid HID report.
status == (((NTSTATUS) (((0x0) << 28) | (0x11 << 16) | (0))))
CConsumerControl::OnSidebandDataReceived- HID data:  UsagePage = 0x%X   Usage = 0x%X
CConsumerControl::ProcessHidInput - Scan = 0x%04X [%s]
CConsumerControl::ProcessHidInputUnable to map scan code 0x%X to virtual key, skipping.
CConsumerControlKeyRepeatThread
m_eThreadStatus == WTTS_Stopped
CConsumerControlKeyRepeatThread::RepeatUsage
termsrv\wms\src\devices\station\consumercontrolkeyrepeatthread.cpp
m_usage != 0
CConsumerControlKeyRepeatThread::ThreadProc
CCursorData::m_lockThis
pCursorData
CCursorData::s_CreateInstance
termsrv\wms\src\devices\station\cursordata.cpp
CCursorData::InitializeCursor
hCursorDefault != 0
CCursorData::InitializeCursor
m_hCursorPriv != 0
CCursorData::InitializeCursor - IWmsStationMousePresenter::SetCursor failed, hr = 0x%08x
CCursorData::InitializeCursor - IWmsStationMousePresenter::SetCursorPos failed, hr = 0x%08x
CCursorData::InitializeCursor - IWmsStationMousePresenter::ShowCursor failed, hr = 0x%08x
CCursorData::SetCursorPos - IWmsStationMousePresenter::SetCursorPos failed, hr = 0x%08x
CCursorData::MoveCursor - IWmsStationMousePresenter::SetCursorPos failed, hr = 0x%08x
CCursorData::SetCursor
CCursorData::SetCursor - Supplied cursor handle is invalid
CCursorData::SetCursor - IWmsStationMousePresenter::SetCursor failed, hr = 0x%08x
CCursorData::ForceShowCursor - IWmsStationMousePresenter::ShowCursor failed, hr = 0x%08x
CCursorData::ShowCursor - IWmsStationMousePresenter::ShowCursor failed, hr = 0x%08x
pCustomPresenterPlugins
CCustomPresenterPlugins::s_CreateInstance
termsrv\wms\src\devices\station\custompresenterplugins.cpp
m_pPluginList == 0
CCustomPresenterPlugins::Initialize
m_pPluginList
 Skipping -- no custom presenter plugins installed.
CCustomPresenterPlugins::GetPresentationDeviceForHub
bstrHubId
pPluginInfo->m_pPlugin != 0
CCustomPresenterPlugins::GetPresentationDeviceForHub - Plugin %s failed processing hub %s with error code 0x%08X
rpcStatus == 0L
CCustomPresenterPlugins::GetPresentationDeviceForHub - Plugin %s matched hub %s to presentation device %s
CCustomPresenterPlugins::GetPresentationDeviceForHub - No display device found for hub %s
CCustomPresenterPlugins::CreatePlugin - Ignoring plugin %s - (CLSIDFromProgID failed with 0x%X)
CCustomPresenterPlugins::CreatePlugin - Ignoring plugin %s - (CoCreateInstance failed with 0x%X)
CCustomPresenterPlugins::LoadPluginsFromRegistry
CustomPresenter
CCustomPresenterPlugins::LoadPluginsFromRegistry - Skipping value index %d:  %s (gle = %d)
CCustomPresenterPlugins::LoadPluginsFromRegistry - Skipping value %s (invalid type)
CCustomPresenterPlugins::LoadPluginsFromRegistry - failed on %s (0x%lX)
CCustomPresenterPlugins::LoadPluginsFromRegistry - loaded %s
CCustomPresenterPlugins::LoadSettings
CCustomPresenterPlugins::AddPluginToList - Skipping value %s (pPluginInfo is disabled)
CCustomPresenterPlugins::AddPluginToList
CCustomPresenterPlugins::AddPluginToList - Adding plugin %s to list
CDevice::s_lockWmsServiceInit
DS_Normal
DS_SessionizationRemovalExpected
DS_SessionizationArrivalExpected
CDevice::~CDevice - this = 0x%X  type = %s  devnode = 0x%X  instance = %s
CDevice::PreInitialize
termsrv\wms\src\devices\station\device.cpp
HTREE\ROOT\0
cch > 0
Device initialization failed - device is flagged as non-functional
CDevice::PreInitialize - Non-redirectable device:  0x%X  %s  %s
CDevice::PreInitialize Composite device has %d children.
CDevice::PreInitialize - 0x%X  %s  %s
The device is no longer present.
CDevice::OnPreInitializeCompositeHub
cr == (0x00000000)
pszChildInstanceId
CDevice::OnPreInitializeCompositeHub found child %s.
CDevice::OnPreInitializeCompositeHub simulate DBT_DEVICEARRIVAL - DevNode = 0x%x, InstanceId = "%s".
CDevice::OnInitializeComplete
pHub != 0
CDevice::SendWmsUsbBusFilterIoctl
CDevice::SendWmsUsbBusFilterIoctl - USB control device could not find %s.
CDevice::SendWmsUsbBusFilterIoctl - USB control device returned ERROR_NOT_SUPPORTED for IOCTL 0x%X.
CDevice::OnSetVisibility - [%s] %s, requested visibility = %s.
CDevice::OnSetVisibility - [%s] %s, request ignored, device manager has disabled visibility changes.
CDevice::OnSetVisibility
CDevice::OnSetVisibility - [%s] %s, request ignored, not a sessionizable device.
CDevice::OnSetVisibility - [%s] %s, request ignored, marked as non-redirectable, not a sessionizable device.
CDevice::OnSetVisibility - [%s] %s, request ignored, marked as non-functional, not a sessionizable device.
CDevice::OnSetVisibility - [%s] %s, request ignored, device has problem code %s (0x%X), not a sessionizable device.
CDevice::OnSetVisibility - [%s] %s, request ignored, visibility unchanged.
CDevice::OnSetVisibility - [%s] %s, request ignored, visibility change in progress.
CDevice::OnSetVisibility - [%s] %s, request ignored, device has been redirected.
USB hub driver does not support IOCTL_USB_HUB_CYCLE_PORT, unable to change device visibility.
skipped because device was removed
CDevice::UpdateDeviceTreeForVisibilityChange
CDevice::UpdateDeviceTreeForVisibilityChange - id = "%s", IGNORING, device is a sideband.
CDevice::UpdateDeviceTreeForVisibilityChange - id = "%s", state = %s, IGNORING requested state %s because device is already pending arrival.
CDevice::UpdateDeviceTreeForVisibilityChange - id = "%s", state = %s, newstate = %s.
pChild != NULL
CDevice::ResetDevice - id = "%s"
CDevice::OnSetChildrenVisibility
CDevice::OnExpectedDeviceRemoval - device [0x%X], %s
CDevice::OnExpectedDeviceRemoval - id = "%s", state = %s, newstate = %s.
CDevice::OnExpectedDeviceArrival - device [0x%X], %s
CDevice::OnExpectedDeviceArrival - id = "%s", state = %s, newstate = %s.
CDevice::OnExpectedDeviceArrival - id = "%s", ASSERT m_Visibility = %s, GetVisibility() = %s
CDevice::IsPotentialStationHub - device [0x%X] is not a hub
CDevice::IsPotentialStationHub - device [0x%X] is already station hub for station %d '%c'!
CDevice::IsPotentialStationHub - hub [0x%X] has no keyboards plugged into it.
CDevice::IsPotentialStationHub - device [0x%X] IS a potential station hub.
CDevice::GetHub
pFirstHub != 0
HRESULT_FROM_WIN32 (1168L)
ppParent != 0
CDevice::GetParent
pParent != this
CDevice::SetParent
m_pParent->m_fRedirectable == FALSE
CDevice::SetParent - Disabling redirection for device with same container ID as its station hub; device = %s
ppStation != 0
CDevice::GetStation
pChild != 0
CDevice::AddChild
CDevice::RemoveChild
pChild->m_pParent == this
pszDevicePath != NULL
CDevice::s_DevicePathToDeviceInstanceId
ppszDeviceInstanceId != NULL
hDeviceInfoList != ((HANDLE)(LONG_PTR)-1)
CDevice::s_DevicePathToDeviceInstanceId - Device %s no longer exists.
HRESULT_FROM_WIN32 (err)
fStatus
!fStatus && (GetLastError() == 122L)
devPropType == 0x00000012
pszDeviceInstanceId
pguidSetupClass != NULL
CDevice::s_DevNodeToSetupClass
ppszInstanceId != NULL
CDevice::s_DevNodeToInstanceId
crStatus == (0x00000000)
pszInstanceId
pszInstanceId != NULL
CDevice::s_GetGuidProperty
pPropertyKey != NULL
pGuid != NULL
The device does not support this property.
devPropType == 0x0000000D
CDevice::s_GetStringProperty
ppszPropertyVal != NULL
!fStatus
Device property not found.
err == 122L
pszPropertyVal
CDevice::s_GetMultiStringProperty
devPropType == (0x00000012|0x00002000)
peDeviceType != 0
CDevice::s_DevNodeToDeviceType
CDevice::s_CheckUsbDevices
crStatus != (0x0000000D)
CDevice::s_CheckUsbDevices Found %s in the DEVPKEY_Device_CompatibleIds for device %s.
CDevice::s_CheckUsbDevices Found %s in the DEVPKEY_Device_HardwareIds for device %s.
{E0BE2F41-7A8E-4DDD-A647-516B946597A6}
{dc15947a-2bc8-4f15-8676-83ad389e7371}
{D10807EB-0816-4F2D-BEAA-E1DA84A9C496}
{ab7be170-1d3a-4981-9ef6-3a15323d92ba}
{6c4d4477-0bd5-4481-b76a-a247ac1f24e3}
CDevice::s_CheckEnumerator - [0x%X] %s is enumerated by DISPLAY, but is not GUID_DEVCLASS_MONITOR.  Forcing to DT_Monitor.
CDevice::s_GetHighestHubInContainer
System\CurrentControlSet\Control\DeviceClasses
CDevice::GetNumberDeviceInterfaces
hDevInfoSet != ((HANDLE)(LONG_PTR)-1)
CDevice::s_HasInterface
pszUsbFilterDevInstId != NULL
CDevice::s_UsbRedirFilterInstanceIdToDeviceInstanceId
ppszDevInstanceId != NULL
TS_USB\
cchUsbFilterDevInstId >= 7
pszTSPrefix != 0
cchIndent < 2147483647
CDevice::Dump
pszIndentBuf
REDIR
     
CDevice::Dump%s[%s] (ref = %4d)  0x%IX  %s  %s  0x%X, %s
SUCCEEDED (hr)
m_fRedirectable == TRUE
CDevice::SetPendingRedirection
m_fRedirected == FALSE
m_eDeviceType == DT_CompositeHub
CDevice::SetRedirectable
CDevice::SetRedirectable %s rejecting request to be redirectable 0x%X %s
REDIRECTABLE
 not redirectable
CDevice::SetRedirectable [%s] is now %s (was %s) 0x%X %s
Monitor
CDevice::LoadMergedStationDetectoids
pszMergedStationDetectoids
CDevice::DetectMergedStation
SOFTWARE\Microsoft\Windows MultiPoint Server\Merged Stations
pszSubKeyName
CDevice::DetectMergedStation - 0x%X  %s  %s Merged station = %s
CDevice::s_CompareMultiStrings
CDevice::DetectNonRedirectableDevice
SOFTWARE\Microsoft\Windows MultiPoint Server\Non Redirectable Devices
pszValueName
pszNonRedirectableDeviceDetectoid
CDevice::DetectNonRedirectableDevice - 0x%X  %s  %s Non-Redirectable = %s
NON_FUNCTIONAL
CDevice::s_GetInt32Property
pInt32 != NULL
CDevice::SetDeviceState - id = "%s", state = %s, newstate = %s.
CDevice::IsParentCompositeHub
pParent != 0
CDevice::s_IsParentOfNonRedirectableDevice
Found a non-redirectable device.
CDevice::s_IsParentOfNonRedirectableDevice - 0x%X child 0x%X s_IsParentOfNonRedirectableDevice returned ERROR_NO_SUCH_DEVINST.  Ignoring this child.
TS_USB
DISPLAY
usb\class_08
usb\composite
PCI\VEN_1414&DEV_02C1
USB\ROOT_HUB&WMS_STATION
Global\WMSSessionizationReadyEvent
CDeviceManager::m_lockWorkerThreads
CDeviceManager::AddDevice No parent for DevNode = 0x%X
CDeviceManager::AddDevice
termsrv\wms\src\devices\station\devicemanager.cpp
pParentDevice != 0
CDeviceManager::AddDevice %s (0x%X) adding "%s", visibility = %s.
m_pDeviceEventSink != NULL
CDeviceManager::CheckHubUniqueId
CDeviceManager::CheckHubUniqueId %s devnode=%i, caps=%08X, CM_DEVCAP_UNIQUEID flag %s set.
!(grfExistingDeviceCaps & CM_DEVCAP_UNIQUEID)
CDeviceManager::CheckHubUniqueId - %012I64X maps to 2 devices, both have CM_DEVCAP_UNIQUEID not set, do nothing.
CDeviceManager::CheckHubUniqueId devnode=%i has a bad instance ID.
CDeviceManager::CheckHubUniqueId Failed - hr=0x%X, device (0x%X) %s
CDeviceManager::GenerateNewInstanceId devnode=%i.
CDeviceManager::GenerateNewInstanceId - A device with Hardware Id %012I64X (%s) has incorrectly reported CM_DEVCAP_UNIQUEID, setting UsbFlags reg key
CDeviceManager::GenerateNewInstanceId - A device with Hardware Id %012I64X (no longer present) has incorrectly reported CM_DEVCAP_UNIQUEID, setting UsbFlags reg key
CDeviceManager::GenerateNewInstanceId
CDeviceManager::AddDeviceByDevNode
CDeviceManager::AddDeviceByDevNode Instantiating device for DevNode = 0x%X
CDeviceManager::AddDeviceByDevNode Zombie redirected device detected, recreating device for DevNode = 0x%X
pExistingDevice == 0
CDeviceManager::AddDeviceByDevNode CDevice found for %s (0x%X), device interface count is %li
CDeviceManager::AddDeviceByDevNode %s (0x%X) was %s but now supports %s
pNewDevice
CDeviceManager::AddDeviceByDevNode Failed - destroying %s device (0x%X) %s
CDeviceManager::AddDeviceByDevPath
CDeviceManager::AddDeviceByDevPath CM_Locate_DevNode could not find the devnode for %s
CDeviceManager::RemoveDeviceHelper
CDeviceManager::RemoveDeviceHelper Remove device interface for %s (0x%X), device already marked for expected arrival
cInterfaces > 0
CDeviceManager::RemoveDeviceHelper Remove device interface for %s (0x%X), new device interface count is %li
dwDevNode != 0
CDeviceManager::RemoveDeviceByDevNode
CDeviceManager::RemoveDeviceByDevNode - dwDevNode 0x%X
Device not found
CDeviceManager::RemoveDeviceByDevPath
CDeviceManager::RemoveDeviceByDevPath - DeviceInstanceId %s
pDevice != 0
CDeviceManager::RemoveDevice
CDeviceManager::RemoveDevice %s (0x%X) removing "%s"
Device is already pending delete -- bailing out.
CDeviceManager::Uninitialize
m_hThreadWndProc != NULL
CDeviceManager::Uninitialize
m_hThreadNotifications != NULL
pRootDevice->IsDeviceTreeRoot()
IsListEmpty (&m_listDevices[idx])
IsListEmpty (&m_listAllDevices)
CDeviceManager::SessionizeNewUsbDevices - Start
request ignored, system is in safe-mode.
CDeviceManager::SessionizeNewUsbDevices
\\.\WindowMultiPointServerUSBFilterDriverControlObject
CDeviceManager::SessionizeNewUsbDevices - asked wms usb bus filter to sessionize the devices.
CDeviceManager::SessionizeNewUsbDevices - End hr=0x%lx
Critical section is not initialized.
CDeviceManager::Initialize
CDeviceManager::Initialize - Start
m_hEventDeviceTreeReady != 0
m_pAutoMap
m_hEventStopWorkerThreads == NULL
m_hEventStopWorkerThreads
m_hNotificationsAvailableEvent == NULL
m_hNotificationsAvailableEvent
m_hNotificationQueueEmptyEvent == NULL
m_hNotificationQueueEmptyEvent
m_hWmsSessionizationReadyEvent == NULL
m_hThreadNotifications == NULL
m_hThreadNotifications
m_hThreadWndProc == NULL
m_hThreadWndProc
CDeviceManager::Initialize - Build initial device list.
devInfoSet != ((HANDLE)(LONG_PTR)-1)
CDeviceManager::Initialize - Initial add of device 0x%X failed.  Adding to retry queue.
CDeviceManager::Initialize - Device 0x%X was already in the list.
CDeviceManager::Initialize - Initial device enumeration total = %d.
CDeviceManager::Initialize - allow device change notifications to be processed and kick-start the notification thread.
CDeviceManager::Initialize - Waiting for device retry queue to drain...
dwWait == ((((DWORD )0x00000000L) ) + 0 )
Fatal errors detected, skipping station creation
m_eWmsMode != WM_MultiStation
::GetSystemMetrics (SM_CLEANBOOT) != 0
CDeviceManager::Initialize - configure the usb bus filter with our session id.
CDeviceManager::Initialize - SetEvent (m_hEventDeviceTreeReady).
CDeviceManager::Initialize - End hr = 0x%08X
CDeviceManager::LoadSettings m_InitialPnpStabilityMsec = %i
CDeviceManager::LoadSettings m_DelayBetweenCyclingStationHubsMsec = %i
CDeviceManager::LoadSettings m_fAllowRootHubAsStationHub = %s
Allow16bpp
CDeviceManager::LoadSettings m_fAllow16bpp = %s
SOFTWARE\Microsoft\Windows MultiPoint Server\Non Redirectable Device Classes
CDeviceManager::LoadNonRedirectableDeviceIds
No non-redirectable devclass guids
prgpszGuidStrings
CDeviceManager::LoadNonRedirectableDeviceIds - Skipping invalid value:  %s
*ppszGuidStringCur
CDeviceManager::LoadNonRedirectableDeviceIds - Value %s = %s
pDeviceNotification
CDeviceManager::QueueDeviceNotification
dt >= __DT_First
CDeviceManager::GetDeviceList
dt < __DT_Count
CDeviceManager::SetInputMode - device is not valid, removing 0x%X
hr == E_ABORT
CDeviceManager::SetInputMode
CDeviceManager::SetInputMode - device 0x%X failed with HRESULT 0x%X
CDeviceManager::OnDeviceChange
lParam != 0
DBT_DEVICEARRIVAL
DBT_DEVICEREMOVECOMPLETE
CDeviceManager::OnDeviceChange - %s %s "%s"
There are no devices in the list.
CDeviceManager::DumpTree
CDeviceManager::RequestVisibilityChange
pThis
CDeviceManager::s_WndProcThreadProc
CDeviceManager::WndProcThreadProc - Entered.
DeviceManager Hidden Input Window Class
CDeviceManager::WndProcThreadProc
DeviceManager Hidden Input Window
hDevNotify != 0
CDeviceManager::WndProcThreadProc - Exiting, hr = 0x%08X.
CDeviceManager::WndProc
CDeviceManager::InstantiateDevice
CDeviceManager::s_NotificationsThreadProc
CDeviceManager::NotificationsThreadProc - Entered.
CDeviceManager::NotificationsThreadProc - Got a device notification.
CDeviceManager::NotificationsThreadProc - Ignoring device notification while still enumerating the tree.
CDeviceManager::NotificationsThreadProc - Told to stop.
CDeviceManager::NotificationsThreadProc
CDeviceManager::NotificationsThreadProc - Exiting, hr = 0x%08X
IsListEmpty (&m_listRetry)
CDeviceManager::ProcessDeviceNotifications
CDeviceManager::ProcessDeviceNotifications - Failed %d time%s to add device 0x%X %s -- adding to retry queue.
CDeviceManager::ProcessDeviceNotifications - Exceeded retry limit for 0x%X %s -- giving up.
pDeviceNotification->GetDevicePath()
CDeviceManager::ValidateDevNodeState
retval == (0x00000000)
CDeviceManager::ValidateDevNodeState - DevNode 0x%X  status = 0x%X (%s)  problem = 0x%X (%s)
Driver AddDevice routine failed, failing device add.
Ignoring that the device is in an invalid state.
CDeviceManager::CreatePs2Hub
pRootDevice != 0
pPs2Hub
CDeviceManager::CheckPs2KeyboardMouse
pPs2Hub != 0
CDeviceManager::CheckHypervisor
CDeviceManager::CheckHypervisor - adding %s 0x%X to PS2 hub.
CDeviceManager::CreateVirtualMonitor
CDeviceManager::CreateVirtualMonitor - VM detected but no monitors were found, SM_CMONITORS = %d
pVirtualMonitor
CDeviceManager::AddPresentationDevice
CDeviceManager::AddPresentationDevice - Found an existing monitor with instance ID %s
CDeviceManager::AddPresentationDevice - Adding a new monitor with instance ID %s
pPresentationDevice
CDeviceManager::AddPresentationDevice - Failed with hr = 0x%08X
cchClassname
CDeviceManager::s_HideSystemCursorWndEnumProc
CDeviceManager::s_HideSystemCursorWndEnumProcClass:  "%s"
CDeviceManager::HideSystemCursor
CDeviceManager::OnCustomPresenterHubRemoved
hub had no presentation device, bailing out gracefully.
CDeviceManager::WaitForOneMonitorToAppear
CDeviceManager::WaitForOneMonitorToAppear - %i minutes were specified, will use %i minutes instead.
CDeviceManager::WaitForOneMonitorToAppear - Will retry for %i minutes.
> 0 monitors present.
CDeviceManager::WaitForOneMonitorToAppear - 0 monitors present, waiting %i seconds for a monitor to appear.
CDeviceManager::CountDevices
CDeviceManager::GetSessionizerHelper
m_pSessionizerHelper != 0
phEventDeviceTreeReady != 0
CDeviceManager::GetEventDeviceTreeReady
CDeviceManager::SetUsbStorageDeviceBlocking - eUsbStorageDeviceBlocking = %s.
m_fIsConnector == 1
CDeviceManager::SetUsbStorageDeviceBlocking
CDeviceManager::SessionizeHubs
CDeviceManager::SessionizeHubs - Hub %s is a descendant of a sessionizable hub, taking no action.
CDeviceManager::SessionizeHubs - Waiting for device retry queue to drain...
CDeviceManager::SessionizeHubs
CDeviceManager::SessionizeHubs - Root hub %s added as a station hub, need to adjust visibility state for all children.
CDeviceManager::SessionizeHubs - hr = 0x%08X.
(dwDevNode && !pszDevicePath) || (!dwDevNode && pszDevicePath)
CDeviceNotification::Initialize
termsrv\wms\src\devices\station\devicenotification.cpp
m_pszDevicePath == NULL
m_dwDevNode == 0
m_wParam == 0
CDeviceSessionizerHelper::s_CreateInstance
pHelper
CDeviceSessionizerHelper::s_CreateInstance
termsrv\wms\src\devices\station\devicesessionizerhelper.cpp
CDeviceSessionizerHelper::m_lockList
CDeviceSessionizerHelper::CDeviceSessionizerHelper
CDeviceSessionizerHelper::~CDeviceSessionizerHelper
CDeviceSessionizerHelper::Initialize - cMaxWaitTimeMilliseconds = %u
m_hEventAllDevicesSessionized
CDeviceSessionizerHelper::Initialize
CDeviceSessionizerHelper::OnDeviceAdded - Device %s under hub %s took %.4f seconds to sessionize.
CDeviceSessionizerHelper::OnDeviceAdded - Device %s on station %s took %.4f seconds to redirect.
m_eSessionizationType == ESessionizationType::Invalid
CDeviceSessionizerHelper::PrepareToSessionizeHub
m_pszParentObject == NULL
IsListEmpty (&m_listSessionizableDevices)
CDeviceSessionizerHelper::PrepareToSessionizeHub - Hub: %s is already sessionized, nothing to do.
CDeviceSessionizerHelper::PrepareToSessionizeHub - Hub: %s
CDeviceSessionizerHelper::PrepareToSessionizeHub
CDeviceSessionizerHelper::PrepareToRedirectDevices
pszStation
CDeviceSessionizerHelper::PrepareToRedirectDevices - Station: %s
m_pszParentObject != NULL
CDeviceSessionizerHelper::AddPendingRedirectionDevice
m_eSessionizationType == ESessionizationType::DeviceToRemoteSession
CDeviceSessionizerHelper::StartRedirecting
CDeviceSessionizerHelper::StartRedirecting - Station: %s
CDeviceSessionizerHelper::StartRedirecting
CDeviceSessionizerHelper::WaitForSessionization - Hub %s all devices sessionized within %.3f seconds.
CDeviceSessionizerHelper::WaitForSessionization - Station %s all devices redirected within %.3f seconds.
CDeviceSessionizerHelper::WaitForSessionization - Hub %s the following devices did NOT sessionize within %.3f seconds:
CDeviceSessionizerHelper::WaitForSessionization - Station %s the following Devices did NOT redirect within %.3f seconds:
CDeviceSessionizerHelper::WaitForSessionization - Hub %s - no devices to sessionize!
CDeviceSessionizerHelper::WaitForSessionization - Station %s - no devices to redirect!
CDeviceSessionizerHelper::WaitForSessionization
%s - FAILED TO SESSIONIZE.
CDeviceSessionizerHelper::WaitForSessionization
%s - FAILED TO REDIRECT.
CDeviceSessionizerHelper::WaitForSessionization - Hub %s took %.3f seconds to sessionize.
CDeviceSessionizerHelper::WaitForSessionization - Station %s devices took %.3f seconds to redirect.
m_eSessionizationType != ESessionizationType::Invalid
CDeviceSessionizerHelper::WaitForSessionization
m_pszParentObject != 0
CDeviceSessionizerHelper::HubChildIteratorCallback
CDeviceSessionizerHelper::HubChildIteratorCallback - IGNORING Device %s, is neither HID nor USB.
CDeviceSessionizerHelper::HubChildIteratorCallback - IGNORING Device %s, it is a root hub.
CDeviceSessionizerHelper::HubChildIteratorCallback - IGNORING Device %s, its parent is a composite hub.
CDeviceSessionizerHelper::HubChildIteratorCallback - IGNORING Device %s, it has problem code %s (0x%X).
CDeviceSessionizerHelper::HubChildIteratorCallback - IGNORING Device %s, it is already sessionized.
%d '%c'
CDiskProtectionNotificationSinkThread
m_hVcfFirstWarningEvent != 0 || GetLastError() == 2L
CDiskProtectionNotificationSinkThread::Initialize
termsrv\wms\src\devices\station\diskprotectionnotificationsinkthread.cpp
Disk protection notification is not initialized; exiting.
CDiskProtectionNotificationSinkThread::ThreadProc
Disk protection is not active; exiting.
CDisplayRotator::CDisplayRotator - 0x%p
CDisplayRotator::~CDisplayRotator - 0x%p
pRotator
CDisplayRotator::s_CreateInstance
termsrv\wms\src\devices\station\displayrotator.cpp
CDisplayRotator::Initialize
CDisplayRotator::Initialize - IWmsStationPresenter::GetDimensions returned m_cxPresenter = %i, m_cyPresenter = %i, exiting now.
((HRESULT)0x8000FFFFL)
m_pbOriginalLayout
CDisplayRotator::NondelegatingQueryInterface
CDisplayRotator::GetMousePresenter
CDisplayRotator::Present
iRegionType != 0
hRgn != 0
m_pExternalPresenter != 0
CDisplayRotator::OnError
CDisplayRotator::EnterIdleState
CDisplayRotator::ExitIdleState
hdcScreen != 0
hdc != 0
CDisplayRotator::s_RotateRect
SRC Input Manager
SRC Station Manager
WMS Notifcation Manager
Alert Manager
fResult
Software\Microsoft\Windows MultiPoint Server
AllowRootHubsAsStationHubs
InitialPnpStabilityMsec
DelayBetweenCyclingStationHubsMsec
AggregateUsb3Hubs
WmsStationPresenterWndClass
MaxMinutesToWaitForMonitors
VGpuRebootComplete
::IsListEmpty(&m_listHardwareIds)
CHardwareIds::~CHardwareIds
termsrv\wms\src\devices\station\hardwareids.cpp
CHardwareIds::s_GenerateHardwareId
CHardwareIds::s_GenerateHardwareId %s reports DEVPKEY_Device_HardwareIds:
CHardwareIds::s_GenerateHardwareId
0123456789abcdefABCDEF
CHardwareIds::s_GenerateHardwareId Used this hardware ID: %s
CHardwareIds::s_GenerateHardwareId %s ==> %012I64X.
CHardwareIds::Add %012I64X, devnode=%i, caps=%08X.
pHardwareId
CHardwareIds::Add
CHardwareIds::Find %012I64X found in list, devnode=%i, caps=%08X.
CHardwareIds::Find %012I64X not found in list.
fFound
CHardwareIds::Update %012I64X, devnode=%i, caps=%08X, new devnode=%i, new caps=%08X.
CHardwareIds::Update
CHidDigitizerDevice
CHidDigitizerDevice::FinalRelease - m_pszInstanceId = %s
termsrv\wms\src\devices\station\hiddigitizerdevice.cpp
CHidDigitizerDevice::PreInitialize - m_pszInstanceId = %s
CHidDigitizerDevice::SetInputMode - m_pszInstanceId = %s
CHidDigitizerDevice::SetInputMode - About to call ::HidD_GetPreparsedData (m_hSidebandInput = 0x%IX)
CHidDigitizerDevice::SetInputMode - Now have preparsed data.
CHidDigitizerDevice::SetParserEventSink
CHidDigitizerParser::m_lockEventSink
pParser
CHidDigitizerParser::s_CreateInstance
termsrv\wms\src\devices\station\hiddigitizerparser.cpp
CHidDigitizerParser::Initialize
DumpHidReports
CHidDigitizerParser::Initialize - m_fDumpTouchFrames = %s.
CHidDigitizerParser::Initialize - %s: m_fSupportMultiTouch = %s m_cMaximumContacts = %i m_cMaximumContactsPerReport = %i m_fHasActualCount = %s m_eReportingType = %s
CHidDigitizerParser::GetLinkCollectionNodes
pLinkCollectionNodes
pcValueCaps
CHidDigitizerParser::GetValueCaps
pValueCaps
pcButtonCaps
CHidDigitizerParser::GetButtonCaps
pButtonCaps
Device does not support multitouch.
CHidDigitizerParser::InitializeMaximumCount
pbReportBuffer
CHidDigitizerParser::SetupCurrentFrame - Digitizer %s gave a HID report that has no contacts, and there are no pending hybrid contacts.  Dropping on floor.
CHidDigitizerParser::SetupCurrentFrame
m_pCurrentFrame->cPendingHybridContacts != 0
CHidDigitizerParser::SetupCurrentFrame Got a report with ActualContacts=%i, current frame actual=%i, pending hybrid=%i
m_pCurrentFrame == 0
m_pCurrentFrame
m_pCurrentFrame->pContacts
CHidDigitizerParser::ParseInputReport
m_fSupportMultiTouch == 0
cbData >= m_Capabilities.InputReportByteLength
CHidDigitizerParser::Parse
cbData % m_Capabilities.InputReportByteLength == 0
CHidDigitizerParser::DumpFrame BEGINFRAME cContacts = %i fHybrid = %s
OTHERS
others
CONFIDENCE
confidence
INRANGE
inrange
TIPSWITCH
tipswitch
CHidDigitizerParser::DumpFrame
 contact = %i x = %i y = %i [%s %s %s %s], x_range = {%i .. %i}, y_range = {%i .. %i}
CHidDigitizerParser::DumpFrame ENDFRAME
CHidDigitizerParser::GetButtons
CHidDigitizerParser::DoesCollectionReportCenter
cBits >= 1 && cBits <= 32
CHidDigitizerParser::GetValueFromArray
CHidDigitizerParser::GetXAndYValues
CHidDigitizerParser::GetLogicalRange
pReportPrinter
CHidReportPrettyPrinter::s_CreateInstance
termsrv\wms\src\devices\station\hidreportprettyprinter.cpp
pInputValueCaps[i].Range.UsageMin <= pInputValueCaps[i].Range.UsageMax
CHidReportPrettyPrinter::Initialize
m_pInputData
pInputData->ButtonData.Usages
UP=%02X, Usages: 
CHidReportPrettyPrinter::ReportToString
%02X 
UP=%02X U=%02X Value=%d
pData->Status == (((NTSTATUS) (((0x0) << 28) | (0x11 << 16) | (0))))
CHidReportPrettyPrinter::UnpackReport
CHidReportPrettyPrinter::PrintInputReport -------------------------------
CHidReportPrettyPrinter::PrintInputReport
CHidReportPrettyPrinter::PrintInputReport Raw Report Data:
CHidReportPrettyPrinter::PrintInputReport %s
CHidReportPrettyPrinter::PrintInputReport Parsed Data:
CHidReportPrettyPrinter::PrintInputReport HID_DATA[%d]: %s
CHub::s_lockKeyboards
CHub::m_lockPresentationDevice
CHub::m_lockMatchingContainerIdHubs
pHubListEntry->pHub != NULL
CHub::Uninitialize
termsrv\wms\src\devices\station\hub.cpp
CHub::Uninitialize - removing hub (0x%IX) 0x%X %s with matching container ID from hub (0x%IX) 0x%X %s
CHub::OnChildArrived - hub = %s, child = %s
Hub is already flagged as a custom presenter.
CHub::OnChildArrived
m_pPresentationDevice == NULL
CHub::IncrementKeyboardCount - hub = %s, cKeyboards = %d
CHub::IncrementKeyboardCount - removing device tree for hub (0x%IX) 0x%X %s from station %i '%c'
CHub::DecrementKeyboardCount - hub = %s, cKeyboards = %d
m_pStation == NULL
CHub::DecrementKeyboardCount
CHub::DecrementKeyboardCount - removing device tree for hub (0x%IX) 0x%X %s from station %i '%c'
CHub::DecrementKeyboardCount - adding device tree for hub (0x%IX) 0x%X %s to station %i '%c'
CHub::GetCustomPresentationDevice
m_pPresentationDevice != NULL
CHub::AddAggregateHubs - hub (0x%IX) 0x%X %s is already mapped to station %i '%c'
CHub::AddAggregateHubs - removing device tree for hub (0x%IX) 0x%X %s from station %i '%c'
CHub::AddAggregateHubs - adding device tree for hub (0x%IX) 0x%X %s to station %i '%c' mapped to hub (0x%IX) 0x%X %s
CHub::AddMatchingContainerIdHub
CHub::AddMatchingContainerIdHub - hub (0x%IX) 0x%X %s is already the station hub for %i '%c'
fNewHubIsStationHub || fCurrentHubIsStationHub || (pNewHubStation == NULL) || (pCurrentHubStation == NULL) || ((pNewHubStation->GetStationID() == pCurrentHubStation->GetStationID()))
(m_pStation==NULL) || (pNewHubsHighestHubInContainerAsHub->m_pStation==NULL) || (pNewHubsHighestHubInContainerAsHub->m_pStation->GetStationID() == m_pStation->GetStationID())
CHub::InternalAddMatchingContainerIdHub - adding hub (0x%IX) 0x%X %s with matching container ID to hub (0x%IX) 0x%X %s
pHubListEntry
CHub::InternalAddMatchingContainerIdHub
CHub::RemoveMatchingContainerIdHub - removing hub (0x%IX) 0x%X %s with matching container ID from hub (0x%IX) 0x%X %s
m_pDeviceManager->AggregateHubs()
CHub::PotentialStationHubTransition
CHub::PotentialStationHubTransition - removing device tree for hub (0x%IX) 0x%X %s from station %i '%c
CHub::PotentialStationHubTransition - setting visibility on hub (0x%IX) 0x%X %s to hidden
CHub::PotentialStationHubTransition - ignoring station hub (0x%IX) 0x%X %s
CHub::ChangeStation
The hub is already connected to this station.
CHub::ChangeStation - removing device tree for hub (0x%IX) 0x%X %s from station %i '%c'
CHub::ChangeStation - adding device tree for hub (0x%IX) 0x%X %s to station %i '%c'
CInputDevice::CInputDevice - this = 0x%X
CInputManager::s_tsoSingleInstance
USER32.dll
GetFocus
SetFocus
GetForegroundWindow
SetForegroundWindow
SetCapture
ReleaseCapture
GetCursorPos
SetCursorPos
ShowCursor
DestroyCursor
SetCursor
GetKeyState
GetAsyncKeyState
keybd_event
GetKeyboardState
CInputManager::s_CreateInstance
termsrv\wms\src\devices\station\inputmanager.cpp
CInputManager::NondelegatingQueryInterface
CInputManager::s_Hook_GetFocus - No station is associated with thread 0x%X.
CInputManager::s_Hook_SetFocus - No station is associated with thread 0x%X.
CInputManager::s_Hook_GetForegroundWindow - No station is associated with thread 0x%X.
CInputManager::s_Hook_SetForegroundWindow - No station is associated with thread 0x%X.
CInputManager::s_Hook_SetCapture - No station is associated with thread 0x%X.
CInputManager::s_Hook_ReleaseCapture - No station is associated with thread 0x%X.
CInputManager::s_Hook_GetCursorPos - No station is associated with thread 0x%X.
CInputManager::s_Hook_SetCursorPos - No station is associated with thread 0x%X.
CInputManager::s_Hook_ShowCursor - No station is associated with thread 0x%X.
CInputManager::s_Hook_DestroyCursor - No station is associated with thread 0x%X.
CInputManager::s_Hook_SetCursor - No station is associated with thread 0x%X.
CInputManager::s_Hook_GetKeyState - No station is associated with thread 0x%X.
CInputManager::s_Hook_keybd_event - No station is associated with thread 0x%X.
CInputManager::s_Hook_GetKeyboardState - No station is associated with thread 0x%X.
hModule != 0
CInputManager::HookApis
pDOSHeader->e_magic == 0x5A4D
pNTHeader->Signature == 0x00004550
dwAddr
CInputManager::HookApis - Hooked %S in %S
CInputManager::MapThreadToStation
pStation != 0
pThreadToStationMapping == 0
pThreadToStationMapping
CInputManager::MapThreadToStation - Mapped thread 0x%X to station 0x%X
CInputManager::UnmapThreadToStation - Removed mapping for thread 0x%X to station 0x%X
CFactory::s_hModule != 0
CInputManager::Initialize
nDeviceType >= __DT_First
CInputManager::FindUnmappedDevice
nDeviceType < __DT_Count
Keyboard
CKeyboard::FinalRelease - m_pszInstanceId = %s
CKeyboard::SetInputMode - m_pszInstanceId = %s
termsrv\wms\src\devices\station\keyboard.cpp
CKeyboard::Initialize - m_pszInstanceId = %s
CKeyboard::OnSidebandDataReceived
CKeyboard::OnSidebandDataReceived - Invalid number of bytes read from keyboard driver.
Illegal scan code, skipping.
CKeyboard::ParseOneKey
(key.usFlags & 4) == 0
CBRLAEx
key.usScanCode < 256
vsc == 0x0045
Already processed 0xE11D as VK_PAUSE so eating the subsequent 0x0045.
Skipping WM_KEYDOWN / WM_SYSKEYDOWN for VK_SNAPSHOT; Windows only sends key up messages for VK_SNAPSHOT.
CKeyboard::ParseOneKey No virtual key for scan code 0x%04X; manually mapping to VK_HANGUL.
CKeyboard::ParseOneKey Unable to map scan code 0x%X to virtual key, skipping.
CKeyboard::ConvertNumlockKeys - Num lock is on, Shift is not down, vk = 0x%04X, new vk = 0x%04X
pgrfKeyState != 0
CKeyboard::GetKeyState
usScanCode != 0
lpKeyState != 0
CKeyboard::OnGetKeyboardState
CKeyboard::GetKeyboardIndicators
overlapped.hEvent
!fSuccess
cb == sizeof (indicators)
CKeyboard::SetIndicatorLEDs
device sessionizing, request pending.
cb == 0
CKeyboard::OnExpectedDeviceArrival - device [0x%X]
-`#a(b"c%d
e'f$g&h!i.n
CMonitor::CMonitor - 0x%p
CMonitor::~CMonitor - 0x%p
CMonitor::PreInitialize
termsrv\wms\src\devices\station\monitor.cpp
Monitors are not supported in the service session.
Monitors are not supported in safe mode.
CMonitor::OnExpectedDeviceArrival - device [0x%X]
cSubdivisions > 0
CMonitor::SetSubdivisions
m_cSubdivisions == 0
m_prgSubdivision == NULL
m_prgSubdivision
m_cSubdivisions > 0
CMonitor::GetSubdivisions
CMonitor::SetSubdivisionLocation
CMonitor::GetSubdivisionBounds
CMonitor::SetSubdivisionStation
nLeftOffset must be >= 0
CMonitor::IsValidSubdivisionLocation
nTopOffset must be >= 0
nWidth must be > 0
nHeight must be > 0
nWidth must be >= 600
nHeight must be >= 600
CMonitor::GetSubdivisionResized
CMonitor::SetSubdivisionResized
CMonitor::GetSubdivisionStation
CMonitor::GetSubdivisionSplitScreenState
idxSubdivision + 1 < m_cSubdivisions
CMonitor::GetSubdivisionStationPresenter
s_SubdivisionSplitScreenType (idxSubdivision) == SSST_Main
CMonitor::SplitSubdivision
Subdivision is already split
!IsSubdivisionEnabled (idxSubdivision + 1)
CBRLA
(m_prgSubdivision[idxSubdivision].m_size.cx / 2) >= s_knMinSubdivisionWidth
CMonitor::SplitSubdivision - Main (%d):           (%d, %d) %dx%d
CMonitor::SplitSubdivision - Collaboration (%d):  (%d, %d) %dx%d
CMonitor::UnsplitSubdivision
CMonitor::OnInitializeComplete
Monitor is a presentation device so we don't need to set DPI
CMonitor::Subdivide
m_cSubdivisions == (cRawSubdivisions * __SSST_Count)
CMonitor::Subdivide - Clearing locations of current subdivisions.
CMonitor::Subdivide - IAutoMapPlugin::QueryMonitorSubdivisionLocation failed with hr = 0x%08X -- setting subdivision %d of monitor %s to zero size.
!IsSubdivisionEnabled (idxRawSubdivision * __SSST_Count + 1)
!IsSubdivisionEnabled (1)
m_pszHardwareId == NULL
CMonitor::GenerateHardwareId
m_pszHardwareId
%s%s%s
CMonitor::UpdateSubdivisionBounds
rcBounds.right <= m_rcBounds.right
rcBounds.bottom <= m_rcBounds.bottom
CMonitor::UpdateSubdivisionBounds - Subdivision %d at (%d, %d) is %dx%d [monitor = %s]
CMonitor::UpdateBounds - Enter
CMonitor::UpdateBounds
CMonitor::UpdateBounds - Monitor 0x%X %s not found (or is in mirror mode) -- returning ERROR_NOT_FOUND.
CMonitor::UpdateBounds - Monitor 0x%X %s appears to be using the generic VGA driver.
CMonitor::UpdateBounds - Found "%s" (%s) - "%s" (%s) %lux%lux%lu at (%d, %d) 
m_cBitsPerPixel == 32 || m_cBitsPerPixel == 16 && m_pDeviceManager->Allow16bpp()
being initialized
unchanged
CMonitor::UpdateBounds - Monitor size is %s.
CMonitor::UpdateBounds - Monitor size has changed.
CMonitor::UpdateBounds - Leave
Mouse
CMouse::FinalRelease - m_pszInstanceId = %s
CMouse::SetInputMode - m_pszInstanceId = %s
termsrv\wms\src\devices\station\mouse.cpp
CMouse::Destroy
CMouse::OnSidebandDataReceived
CMouse::OnSidebandDataReceived - Invalid number of bytes read from mouse driver.
%s(%d) - %s - ERROR 0x%08X: %s
pMousePresenter
CMousePresenter::s_CreateInstance
termsrv\wms\src\devices\station\mousepresenter.cpp
CMousePresenter::~CMousePresenter
CMousePresenter::Initialize
m_hCursor != 0
m_hBrushTransparent != 0
m_hBrushAlphaChannel != 0
m_hThreadProcKillEvent != 0
m_hThreadProc
CMousePresenter::Uninitialize
m_hwndAlphaChannel != 0
CMousePresenter::Uninitialize
CMousePresenter::NondelegatingQueryInterface
hCursorTemp != 0
CMousePresenter::SetCursor
CMousePresenter::SetCursorPos
CMousePresenter::ShowCursor
SW_SHOW
SW_HIDE
CMousePresenter::ShowCursor ShowCursor - %s
CMousePresenter::OnError eError = 0x%04X
CMousePresenter::OnPaint
cchClassName != 0
CMousePresenter::OnCreate
CMousePresenter::OnDestroy.
CMousePresenter::OnDestroy
CMousePresenter::OnDestroy - releasing the cursor bitmap.
::GetCurrentThreadId () == m_tidCreator
CMousePresenter::CreateCursorBitmap
hdcMem != 0
hBitmap != 0
hBitmapOld != 0 && hBitmapOld != (LongToHandle(0xFFFFFFFFL))
CMousePresenter::CreateCursorBitmap - CMousePresenter 0x%08IX: created m_hdcMemCursor = 0x%08IX
CMousePresenter::ReleaseCursorBitmap
CMousePresenter::ReleaseCursorBitmap - CMousePresenter 0x%08IX: deleted m_hdcMemCursor = 0x%08IX
CMousePresenter::DrawCursor
CMousePresenter::OnSetCursorPos
dwError == 0L
CMousePresenter::OnSetCursor
m_hdcMemCursor != 0
CMousePresenter::OnUninitialize
CMousePresenter::OnUninitialize
CMousePresenter::OnShowCursor
CMousePresenter::s_ThreadProc
CMousePresenter::ThreadProc - Enter
AlphaChannel
CMousePresenter::ThreadProc
Transparent
CMousePresenter::ThreadProc - Exiting, hr=0x%08X
pThis != 0
CMousePresenter::s_WndProc
CMousePresenter::RegisterCursorWindows::s_lock
atomAlphaChannel != 0
CMousePresenter::RegisterCursorWindows
atomTransparent != 0
WmsMpTransparent
WmsMpAlphaChannel
CMouseRotator::CMouseRotator - 0x%p
CMouseRotator::~CMouseRotator - 0x%p
pMouseRotator
CMouseRotator::s_CreateInstance
termsrv\wms\src\devices\station\mouserotator.cpp
CMouseRotator::NondelegatingQueryInterface
m_pExternalMousePresenter != 0
CMouseRotator::SetCursor
CMouseRotator::SetCursorPos
CMouseRotator::ShowCursor
CMouseRotator::OnError
CMouseRotator::RotateCursor
hCursorRotated != 0
CMouseRotator::RotateMask
cxCursor == cxMask
(cyCursor == cyMask) || (cyCursor == cyMask / 2)
pbMaskRotated
hbmpMaskRotated != 0
CMouseRotator::RotateColorCursor
hdcRotated != 0
hbmpRotated != 0
iRet != 0
hOldRotated != 0
pii->hbmMask != 0
CMouseRotator::s_GetCursorDimensions
CNotificationManager::s_tsoSingleInstance
station!CNotificationManager
CNotificationManager::s_CreateInstance
termsrv\wms\src\devices\station\notificationmanager.cpp
CNotificationManager::Initialize
CNotificationManager::Initialize
m_hCoreRegisteredEvent
m_hWakeSinkThreadEvent != 0
m_hSinkThread != 0
m_hWakeSinkThreadEvent != NULL
CNotificationManager::TerminateNotificationManagerThread
CNotificationManager::TerminateNotificationManagerThread - waiting for thread to terminate.
CNotificationManager::TerminateNotificationManagerThread - thread %lu has terminated.
IsListEmpty (&m_listStationSnapshot)
CNotificationManager::Uninitialize
CNotificationManager::SinkThreadProc
CNotificationManager::SinkThreadProc
CNotificationManager::SinkThreadProc - waiting for service ready event.
dwWaitResult != ((DWORD)0xFFFFFFFF)
CNotificationManager::SinkThreadProc - WaitForMultipleObjects returned %lu.
(dwWaitResult == SERVICE_READY_EVENT) || m_fTerminateSinkThread
m_pSessionService == NULL
CNotificationManager::SinkThreadProc - waiting for m_hWakeSinkThreadEvent.
CNotificationManager::SinkThreadProc - m_hWakeSinkThreadEvent was signalled.
m_fTerminateSinkThread
CNotificationManager::SinkThreadProc - terminating hr=0x%X
pSnapshot
CNotificationManager::GetStationSnapshotData
CNotificationManager::NondelegatingQueryInterface
pidSession != 0
CNotificationManager::GetStationInformation
peIdentifyStationState != 0
peState != 0
pbstrSessionHost != 0
pbstrVirtualMachineId != 0
pdwDeviceCount != 0
CNotificationManager::GetStationDeviceInformation
(eDeviceType == DT_Mouse) || (eDeviceType == DT_Keyboard) || (eDeviceType == DT_Audio) || (eDeviceType == DT_MassStorage) || (eDeviceType == DT_Image)
pidNextStation != 0
CNotificationManager::GetNextStationIdentifier
CNotificationManager::GetSystemMode()
CNotificationManager::GetSystemMode
CNotificationManager::Reboot()
CNotificationManager::Shutdown()
CNotificationManager::GetSystemAlertStatus
CNotificationManager::GetSystemAlertStatus (eMessage = %s, *peSeverity = %s, *peStatus = %s)
CNotificationManager::GetStationAlertStatus
CNotificationManager::GetStationAlertStatus (idStation = %lu, eMessage = %s, *peSeverity = %s, *peStatus = %s)
peConfiguration
CNotificationManager::GetStationAutoLogonInformation
pbstrUserName
pbstrDomain
pbstrFriendlyName != 0
CNotificationManager::GetStationFriendlyName
bstrFriendlyName != 0
CNotificationManager::SetStationFriendlyName
CNotificationManager::SetStationFriendlyName (idStation = %lu, bstrFriendlyName = %s)
CNotificationManager::SetStationAutoLogon (idStation = %lu, eConfiguration = %s, bstrUserName = %s, bstrDomain = %s)
m_pStationManager != NULL
CNotificationManager::RemapStations
CNotificationManager::RemapStations()
CNotificationManager::BlockStation()
CNotificationManager::IdentifyStation (idStation = %lu, bstrStationName = %s, bstrStationHost = %s, bstrSessionHost = %s)
CNotificationManager::IdentifyStation
CNotificationManager::StopIdentifyingStation (idStation = %lu)
CNotificationManager::StopIdentifyingStation
CNotificationManager::GetPeerWmsServerList()
CNotificationManager::GetPeerWmsConnectorList()
CNotificationManager::SplitStation()
((HRESULT)0x80070057L)
((HRESULT)0x80004001L)
CNotificationManager::GetRemoteManagementCredential
CNotificationManager::SetRemoteManagementCredential
pbstrServerName != 0
CNotificationManager::GetStationServerName
pbstrVirtualMachineName != 0
CNotificationManager::GetStationServerName (idStation = %lu, *pbstrServerName = %s, *pbstrVirtualMachineName = %s)
CNotificationManager::SetStationServerName (idStation = %lu, bstrServerName = %s, bstrVirtualMachineName = %s)
pfEnable != 0
CNotificationManager::GetStationRemoteFxEnable
CNotificationManager::GetStationRemoteFxEnable (idStation = %lu, *pfEnable = %s)
fEnable != 0
CNotificationManager::SetStationRemoteFxEnable
CNotificationManager::SetStationRemoteFxEnable (idStation = %lu, vbEnable = %s)
CNotificationManager::RefreshStation (idStation = %lu)
bstrVirtualMachineHostName != 0
CNotificationManager::GetVirtualMachineIpAddress
pbstrVirtualMachineIpAddress != 0
CNotificationManager::GetVirtualMachineIpAddress (bstrVirtualMachineHostName = %s, *pbstrVirtualMachineIpAddress = %s)
CNotificationManager::OnSessionConnecting
pSnapshot->eStationState != SS_NotPresent
CNotificationManager::LogOffSession()
CNotificationManager::GetAllSessions()
peAutoMapPluginType
CNotificationManager::GetStationAutoMapType
peStationPresenterType
CNotificationManager::GetStationPresenterType
CNotificationManager::DecryptAutoLogonPassword
m_pSessionService != 0
CNotificationManager::DecryptAutoLogonPassword
CNotificationManager::WaitForServiceRegistration
wait == ((((DWORD )0x00000000L) ) + 0 )
CNotificationManager::WaitForServiceRegistration
CNotificationManager::BlockUsbStorageDevicesAllStations - Blocking USB Storage on all stations.
CNotificationManager::UnblockUsbStorageDevicesAllStations - Unblocking USB Storage on all stations.
CNotificationManager::BlockUsbStorageDevices - Blocking USB Storage on station: %d.
CNotificationManager::UnblockUsbStorageDevices - Unblocking USB Storage on station: %d.
termsrv\wms\src\devices\station\presentationdevice.cpp
m_pPresentationDevice != 0
CPresentationDevice::OnInitializeComplete
m_pszInstanceId == 0
CPresentationDevice::GetContainerId
CPresentationDevice::UpdateBounds
CPresentationDevice::UpdateBounds
CPresentationDevice::UpdateBounds - IWmsPresentationDevice::GetDimensions returned cX = %i, cY = %i, exiting now.
CPresentationDevice::UpdateBounds IWmsPresentationDevice::GetDimensions returned cX = %i, minimum is %i
CPresentationDevice::UpdateBounds IWmsPresentationDevice::GetDimensions returned cY = %i, minimum is %i
CPresentationDevice::UpdateBounds - %dx%d at (%d, %d)
CPresentationDevice::OnCreateSubdivisionPresenters
CPresentationDevice::OnCreateSubdivisionPresenters - Calling IWmsPresentationDevice::CreateStationPresenter %dx%d at x offset %d
CPresentationDevice::OnCreateSubdivisionPresenters
CPresentationDevice::OnCreateSubdivisionPresenters IWmsPresentationDevice::CreateStationPresenter returned a NULL IWmsStationPresenter, exiting now.
CPs2Hub::OnInitializeComplete
termsrv\wms\src\devices\station\ps2hub.cpp
m_pszInstanceId == NULL
WmsPs2HubInstanceId
CRawInputManager::Initialize
termsrv\wms\src\devices\station\rawinputmanager.cpp
m_hWnd
CRawInputManager::ProcessRawInput:  HID input received
CRawInputManager::ProcessRawInput:  KEYBOARD input received
CRawInputManager::ProcessRawInput:  MOUSE input received
CRedirectedDevice::RemoveOriginalDeviceTree - Removing type = %s  devnode = %d  instance = %s
Software\Microsoft\Windows MultiPoint Server\Stations
Station Hub
Monitor Subdivision
Server Name
VM Name
Remote FX Enable
User Name
Domain
Encrypted Password
Auto Logon Configuration
Desktop Composition
Split Screen Configuration
Render Volume
Render Mute
Capture Volume
Capture Mute
Friendly Name
Drive Letter Cache
UsbStorage Blocked
AutoMap Plugin Type
Display Orientation
CSettings::EnumRegSubKeys
termsrv\wms\src\devices\station\settings.cpp
pszSubKey
Failed to initialize critical section
CSettings::Initialize
CSettings::Load
(lr == 0L) || (lr == 2L)
CSettings::LoadEnumSubKeyProc - Skipping unknown key:  %s
CSettings::RemoveMappingsForHub- Searching for stations mapped to hub %s
CSettings::RemoveMappingsForHub
CSettings::RemoveMappingsForHubEnumSubKeyProc
CSettings::RemoveMappingsForHubEnumSubKeyProc - Deleting mapped hub for station id = %s
CSettings::DeleteData
CSettings::Save
CSettings::SaveStation
pMonitor
CSettings::SaveStation - station id = %d:  monitor = %s  subdivision = %d  composition = %d  hub = %s  autologon = %d  splitscreen = %d user = %s%s%s r_vol = %f r_mute = %s c_vol = %f c_mute = %s UsbStorageBlocked = %s  DisplayOrientation = %s AutoMapPluginType = %d
CSettings::LoadStationData
pData
lr == 0L || lr == 2L
pbDriveLetterCache
CSettings::LoadStationData - station id = %d:  monitor = %s  subdivision = %d  composition = %d  hub = %s  autologon = %d  splitscreen = %d server = %s remotefx = %s user = %s%s%s r_vol = %f r_mute = %s c_vol = %f c_mute = %s UsbStorageBlocked = %s Display Orientation = %s AutoMapPluginType = %d
idStation > 0
CSettings::ValidateStationID
idStation != pStationData->m_idStation
Virtual Machine Id
Last Station Id
m_cbReadBuffer > 0
CSidebandInputDevice::CSidebandInputDevice
termsrv\wms\src\devices\station\sidebandinputdevice.cpp
CSidebandInputDevice::Destroy - Exiting  (this = 0x%X  instance = %s)
CSidebandInputDevice::PreInitialize - Enter
m_csDeviceHandle.IsValid()
CSidebandInputDevice::PreInitialize
m_csSetInputMode.IsValid()
m_pbReadBuf
CSidebandInputDevice::PreInitialize - %s initialized:  this = 0x%IX  %s  PDO = %s
CSidebandInputDevice::s_InputThreadProc - Enter
CSidebandInputDevice::s_InputThreadProc
CSidebandInputDevice::s_InputThreadProc - Exit hr = 0x%08X
CSidebandInputDevice::InputThreadProc - Enter (%s).
CSidebandInputDevice::InputThreadProc - Sideband input handle has been closed (%s).
CSidebandInputDevice::InputThreadProc
CSidebandInputDevice::InputThreadProc - Thread kill event signaled (%s)
es != 0
CSidebandInputDevice::InputThreadProc - Sideband input handle has been closed (%s)
CSidebandInputDevice::InputThreadProc - Async read aborted - closing handle 0x%IX (%s)
OnSidebandDataReceived() failed.
CSidebandInputDevice::InputThreadProc - Invalid number of bytes read from sideband (%s).
CSidebandInputDevice::InputThreadProc - WaitForSingleObjectEx() failed.  (%s)
CSidebandInputDevice::InputThreadProc - WaitForSingleObjectEx() returned an unknown status.  (%s)
CSidebandInputDevice::InputThreadProc - Canceling asynchronous I/O (%s)
CSidebandInputDevice::InputThreadProc - Exit hr = 0x%08X (%s).
CSidebandInputDevice::s_GetRawPdoDevicePath - devnode = 0x%X
hPdoDevInfo != ((HANDLE)(LONG_PTR)-1)
CSidebandInputDevice::s_GetRawPdoDevicePath
(fSuccess == 0) && (GetLastError() == 122L)
pInterfaceDetailData
fSuccess == 1
*ppszRawPdoDevicePath
CSidebandInputDevice::SetFilterMode
CSidebandInputDevice::SetFilterMode - m_pszInstanceId = %s
CSidebandInputDevice::SetFilterMode - About to call ::DeviceIoControl (m_hSidebandInput = 0x%IX)
CSidebandInputDevice::SetFilterMode - Exiting with hr = 0x%08X
CSidebandInputDevice::SetInputMode - m_pszInstanceId = %s
CSidebandInputDevice::SetInputMode
m_pszRawPdoDevicePath != NULL
aborted, device is being sessionized.
CSidebandInputDevice::SetInputMode - m_pszInstanceId = %s, m_hSidebandInput = 0x%IX, m_pszRawPdoDevicePath = %s
m_hReadThread == NULL
CSidebandInputDevice::StartReadThread
m_hReadThreadKillEvent == NULL
CSidebandInputDevice::StartReadThread - m_pszInstanceId = %s
m_hReadThreadKillEvent
m_hReadThread
CSidebandInputDevice::KillReadThread - m_pszInstanceId = %s
::WaitForSingleObject (m_hReadThreadKillEvent, 0) == WAIT_OBJECT_0
CSidebandInputDevice::KillReadThread
CSidebandInputDevice::KillReadThread - (Waiting for read thread to end)  this = 0x%X  instance = %s
dwRet != ((DWORD)0xFFFFFFFF)
dwRet == ((((DWORD )0x00000000L) ) + 0 )
CSidebandInputDevice::KillReadThread - returning hr = 0x%08X  this = 0x%X  instance = %s
CSidebandInputDevice::OnExpectedDeviceArrival - device [0x%X], %s
CSidebandInputDevice::OnExpectedDeviceRemoval - device [0x%X], %s
CSidebandInputDevice::SetParent
pSibling != NULL
pSibling->GetDeviceState() != DS_Normal
CSidebandInputDevice::SetParent - removing stale sideband device [0x%X] instance id = "%s".
pSessionPresenter
CSessionPresenter::s_CreateInstance
termsrv\wms\src\devices\station\sessionpresenter.cpp
CSessionPresenter::m_lockThis
CSessionPresenter::CSessionPresenter
CSessionPresenter::~CSessionPresenter
CSessionPresenter::Initialize
CSessionPresenter::Initialize - IWmsStationPresenter::GetDimensions returned cxStationSurface = %i, cyStationSurface = %i, exiting now.
CSessionPresenter::Initialize m_cxStationPresenter = %i, m_cyStationPresenter = %i
CSessionPresenter::NondelegatingQueryInterface
hRgnInvalid
CSessionPresenter::Present
CSessionPresenter::Present - Failed to present for the first time!
CSessionPresenter::Present - Failed to present for %I64d consecutive times!
CSessionPresenter::Present - Presenting is working again, but previously it failed %I64d consecutive times!
CSessionPresenter::OnRemoteDesktopSizeChange - cX = %i, cY = %i, cReconnectAttempts = %i
CSessionPresenter::PresentIntoBackBuffer cxFrameBuffer = %i, cyFrameBuffer = %i, bailing out gracefully.
CSessionPresenter::PresentIntoBackBuffer
cScanLines != 0
hPenOld
CSessionPresenter::DrawBlackRect
hBrushOld
CMouseRotator::s_RotateFromDisplayToSession
termsrv\wms\src\devices\station\MouseRotator.h
CStation::s_lockRedirectDevices
CStation::CTsThreadContext::CTsThreadContext - 0x%IX
CStation::CTsThreadContext::~CTsThreadContext - 0x%IX
CStation::CStationThreadContext::CStationThreadContext - 0x%IX
CStation::CStationThreadContext::~CStationThreadContext - 0x%IX
CStation::m_lockDevices
CStation::m_lockTsThread
CStation::m_lockMap
CStation::m_tsoInputManagerPriv
CStation::m_tsoTsSession
CStation::m_tsoSrcShellSink
CStation::m_tsoMonitor
CStation::m_tsoStationHub
CStation::m_tsoStationThreadContext
CStation::m_tsoPresenterBackBuffer
CStation::m_lockVdiScreenSaver
CStation::m_lockVdiConnectTimeoutTimer
CStation::m_lockIdleTimeout
CStation::m_lockLoginComplete
CStation::~CStation - station %d '%c' (0x%IX) 
CStation::NondelegatingQueryInterface
termsrv\wms\src\devices\station\station.cpp
pSrcShellSink
CStation::Create
pInputManager
CStation::Create Creating station %d '%c' on subdivision %d of monitor %s 
CStation::Create - m_fDumpTouchFrames = %s.
m_hTsThreadIdleEvent
m_hEventAbortBlocking
m_hEventConnectionEstablished
SrcRes.dll
Station Hidden Input Window Class
m_hSessionAgentResponseEvent != 0
CStation::Create - station %d '%c' m_IdleTimeoutSeconds = %i, m_fPresenterSupportsIdleNotifications = %s
idNewTimer != 0
pBackBuffer != 0
CStation::CreateHiddenInputWindow - station %d '%c' (0x%IX) 
Station Hidden Input Window
CStation::WaitForTsIdleEvent - station %i '%c' (0x%IX), session state is %s, waiting for m_hTsThreadIdleEvent
CStation::WaitForTsIdleEvent
CStation::WaitForTsIdleEvent - wait for m_hTsThreadIdleEvent timed out (did not receive OnDisconnected event)
CStation::WaitForTsIdleEvent - m_hTsThreadIdleEvent is signalled
CStation::Destroy - station %i '%c' (0x%IX), SessionState=%s 
CStation::Destroy
m_bstrLoggedOnUserName == NULL
(m_SessionState == SessionState_Disconnected) || (m_SessionState == SessionState_Disconnecting)
CStation::Destroy - station %i '%c' (0x%IX), SessionState=%s - WaitForTsIdleEvent timed out.
CStation::Destroy - station %i '%c' (0x%IX) - simulating a disconnect event.
SUCCEEDED(hr)
CStation::Destroy - station %i '%c' (0x%IX), SessionState=%s - simulated disconnect complete.
(m_id == SID_InvalidStationID) || (m_idPrevious == m_id)
CStation::AddRedirectedDevice
pRedirectableUsbDevice->IsPendingRedirection()
CStation::AddRedirectedDevice - station %d '%c' - Found original device for %s
CStation::AddRedirectedDevice - station %d '%c' - Original device for %s has been removed -- rescan redirectable devices.
pDeviceNew != 0
CStation::AddDevice
CStation::AddDevice - station %d '%c' (0x%IX)  type = %s  devnode = 0x%X  instance = %s  redirectable = %s  pending-redirection = %s  redirected = %s
pDeviceExisting->IsRedirected() == FALSE
CStation::AddDevice - station %d '%c' already has device %s
(pDeviceNew->m_leStation.Flink == 0) && (pDeviceNew->m_leStation.Blink == 0)
CStation::RemoveRedirectedDevice - station %d '%c' Removing original device type = %s  devnode = 0x%X instance = %s
CStation::RemoveRedirectedDeviceTree - station %d '%c' Found child:  type = %s  devnode = 0x%X instance = %s
CStation::RemoveRedirectedDeviceTree
deviceType != DT_Hub
deviceType != DT_Monitor
CStation::RemoveDevice_RedirectedUsb - Entered (station %i '%c' 0x%IX), pDevice=%s
pDevice->GetDeviceType() == DT_RedirectedUsb
CStation::RemoveDevice_RedirectedUsb
CStation::RemoveDevice
CStation::RemoveDevice - station %d '%c' (0x%IX)  type = %s  devnode = 0x%X  instance = %s redirectable = %s pending-redirection = %s redirected = %s
The specified device does not exist on this station!
(pDevice->m_leStation.Flink != 0) && (pDevice->m_leStation.Blink != 0)
pTsSession
m_bstrChannelNames == 0
CStation::InitializeTs
*(pEntry->pbstrMember)
m_bstrServerName
m_bstrVirtualMachineName
m_bstrVirtualMachineId
m_bstrDomain
m_bstrUserName
CStation::ConnectSession - station %d '%c' (0x%X) - requesting station reconnect
CStation::RedirectDeviceHelper - Entered (station %i '%c' 0x%IX), pDevice=%s
bstrDevInstanceId
CStation::RedirectDeviceHelper
CStation::InternalRedirectDevices - station %i '%c'
CStation::InternalRedirectDevices
retval != 0
CStation::InternalRedirectDevices - station %d '%c' - device %s not ready, retry #%d in %d ms.
CStation::InternalRedirectDevices - station %d '%c' - device %s not ready and all retry attempts exhausted, ignoring device.
CStation::InternalRedirectDevices - station %i '%c' - No devices to redirect, taking no action.
CStation::RedirectDevices - Entered (station %i '%c' 0x%IX)
CStation::RedirectDevices
CStation::RedirectDevices - station %i '%c' - sessionState == MSTSCAX_DISCONNECTED, quitting now.
CStation::RedirectDevices - station %i '%c' - no username, therefore not logged in, quitting now.
CStation::RedirectDevices - station %d '%c' - retrying since the session disconnected during redirection.
i < s_knMaxRetries
CStation::InitializeTSForConnection
Recieved a NULL station presenter.
CStation::InitializeTSForConnection - station %d '%c' - IWmsStationPresenter::GetDimensions returned m_cxPresenter = %i, m_cyPresenter = %i, exiting now.
pBackBuffer
CStation::InitializeTSForConnection - station %d '%c' - calling CreateSession hwndStationPresenter=0x%IX
CStation::InitializeTSForConnection - station %d '%c' - CreateSession returned 0x%X
CStation::InternalConnectSession - Entered (station %i '%c' 0x%IX)
connection already in progress, ignoring connection request.
CStation::InternalConnectSession
Can't connect a TS session on an unmapped station
CStation::InternalConnectSession - station %d '%c' - Shutdown/reboot detected, station is now in update mode
m_hwndParent != NULL
lWmsRdpPortNumber != 0
localhost
bstrTempServerName
bstrTempServerDisplayName
::SysStringLen (m_bstrVirtualMachineIPAddress) > 0
bstrEmpty
CStation::InternalConnectSession - Exiting (station %i '%c' 0x%IX) hr = 0x%X
m_cSessionConnectionPending == 1 || m_cSessionConnectionPending == 2
CStation::s_TsThreadProc - Entered
CStation::s_TsThreadProc
pCtx->m_pMtaMarshalTsSessionIStream == NULL
CStation::s_TsThreadProc - Exiting, hr = 0x%X
CStation::CreateTsThread - station %d '%c'
!pTsSession
CStation::CreateTsThread
pTsThreadContext
pTsThreadContext->m_hTerminateTsThreadEvent
pTsThreadContext->m_hTsSessionReadyEvent
pTsThreadContext->m_hTsThread
CStation::CreateTsThread - station %d '%c' - tid = 0x%X
m_pTsThreadContext->m_pMtaMarshalTsSessionIStream != NULL
CStation::KillTsThread - station %d '%c' - Signaling event to terminate Ts thread for CStation (0x%IX)
m_pTsThreadContext
CStation::KillTsThread
m_pTsThreadContext->m_hTsThread
m_pTsThreadContext->m_hTerminateTsThreadEvent
CStation::KillTsThread - station %d '%c' - waiting for TS thread to terminate
CStation::KillTsThread - TS thread did not terminate
dwWait != 258L
CStation::KillTsThread - station %d '%c' - TS thread terminated
CStation::DisconnectSession - station %i '%c' (0x%IX) 
CStation::DisconnectSession
Mapped
Unmapped
CStation::OnConnecting - station %d '%c' (0x%IX) state = %s %s
station Id is invalid and we are not disconnecting
CStation::OnConnecting
(m_id != SID_InvalidStationID) || (m_SessionState == SessionState_Disconnecting)
CStation::OnConnecting - station %d '%c' - not mapped or Id is invalid, not sending OnSessionConnecting notification
m_hWndForeground != NULL
m_hwndTsContainer != NULL
m_tidMsTscAxInputHandler != 0
CStation::OnConnecting - station %d '%c' (0x%IX) - mapped input thread id = 0x%X, window = 0x%IX
CStation::OnConnecting - station %d '%c' (0x%IX) - mapped output thread id not found, window = 0x%IX, retries = %d
Unable to map output thread id!
m_tidMsTscAxOutputWindow != 0
CStation::OnConnecting - station %d '%c' (0x%IX) - mapped output thread id = 0x%X
CStation::OnConnecting - station %d '%c' - Setting VDI connect timeout to %d seconds
id != 0
CStation::OnConnected - station %d '%c' (0x%IX) 
CStation::OnConnected - station %d '%c' - Killing VDI connect timeout timer
CStation::OnConnected
CStation::OnConnected - station %d '%c' - This is a VDI station - setting a screensaver timer for %i seconds
CStation::DestroySession - station %d '%c'
CStation::DestroySession
pParams
CStation::OnDisconnected
pParams->bstrErrorMessage
CStation::OnDisconnected - station %d '%c' (0x%IX) - exiting.
CStation::OnDisconnectedHelper - station %d '%c' (0x%IX), discReason = 0x%X, discExtendedReason = 0x%X, state = %s %s
CStation::OnDisconnectedHelper - station %d '%c' (0x%IX), Error Message = "%s"
CStation::OnDisconnectedHelper
CStation::OnDisconnectedHelper - station %d '%c' - m_eAutoLogonCredentialStatus set to ALCS_CredentialsFailed
CStation::OnDisconnectedHelper - station %d '%c' - auto logon retry %li
CStation::OnDisconnectedHelper - station %d '%c' (0x%IX) - requesting station reconnect
pchDomainSeparator
CStation::CheckLoggedOnUserName
false
CStation::CheckLoggedOnUserName - station %d '%c' (0x%IX) user = %s%s%s  autologon = %s  match = %s
CStation::OnLoginComplete - station %d '%c' (0x%IX) 
bstrWParam
CStation::OnLoginComplete
CStation::OnLoginComplete - station %d '%c' (0x%IX) - exiting.
CStation::OnLoginCompleteHelper - station %d '%c' (0x%IX) 
CStation::OnLoginCompleteHelper
m_pNotificationManager != NULL
CStation::OnLoginCompleteHelper - station %d '%c' - This is a VDI station, killing the VDI screensaver timer.
m_bstrLoggedOnUserName
bstrChannelName
CStation::OnChannelReceivedData
bstrChannelData
CStation::OnChannelReceivedData - station %d '%c' - Received data on an incorrect channel name: %s
((HRESULT)0x80004005L)
CStation::SetServerAudioVolume
bstrMessageData
SAE_VolumeChange
CStation::SetServerAudioVolume - station %d '%c' - cmd = %s, eDataFlow = %s, flVolume = %f, Muted = %s
CStation::EnterScreenSaver - station %d '%c' (0x%IX) 
CStation::EnterScreenSaver
CStation::ExitScreenSaver - station %d '%c' (0x%IX) 
CStation::ExitScreenSaver
CStation::ExitScreenSaver - requesting station reconnect - station %d '%c' (0x%IX) 
CStation::GetKeyState
No keyboard is present on this station.
uVirtualKey != 0
CStation::NotifyMouseOfKeyEvent
pDevice->ReadyToSendDeviceNotifications()
CStation::SendNotificationForDevice
CStation::SetFriendlyName
bstrNewFriendlyName
CStation::GetSessionId
CStation::GetSessionState
CStation::ClearAutoLogonCredentialState - station %d '%c' - m_eAutoLogonCredentialStatus set to ALCS_CredentialsOK
CStation::SetServerName
pfEnable
CStation::GetRemoteFxEnable
CStation::SetUser
CStation::SetDomain
m_bstrEncryptedPassword
CStation::SetEncryptedPassword
(eConfiguration == ALC_ManualLogon) || (eConfiguration == ALC_AutoLogon)
CStation::SetAutoLogonConfiguration
CStation::GetSplitScreenState
CStation::RefreshStation - station %d '%c' (0x%IX) state = %s %s
deferring, station currently logged on.
CStation::RefreshStation
CStation::ResetStation - station %d '%c' (0x%IX) state = %s %s
CStation::ResetStation
(m_id == SID_InvalidStationID)||(m_idPrevious == m_id)
CStation::OnGetCursorPos
CStation::OnSetCursorPos
CStation::Onkeybd_event - station %d '%c' - bVk=0x%02X, bScan=0x%02X, dwFlags=0x%08X, dwExtraInfo=0x%08X
CStation::OnGetKeyboardState - station %d '%c' - Enter.
CStation::OnGetKeyboardState
CStation::AddRedirectableDevice - Entered (station %i '%c' 0x%IX), pDevice=%s
pDevice->IsRedirectable()
CStation::AddRedirectableDevice
fInStationList
CStation::Map - station %d '%c'
!m_fIsMapped
CStation::Map
m_SessionState != SessionState_Connected && m_SessionState != SessionState_LoggedOn
CStation::UnMap - station %d '%c'
CStation::UnMap
(m_id == idStation) || (m_id == SID_InvalidStationID)
CStation::SetStationID
m_bstrFriendlyName
CStation::GetPrimaryStationID
CStation::GetAssociatedStation
*ppStation
m_fIsMapped == FALSE
CStation::SetStationHub
m_SessionState != SessionState_Disconnecting
(grfPerformanceFlags & s_kgrfValidFlags) == grfPerformanceFlags
CStation::SetPerformanceFlags
CStation::GetStationBounds
CStation::SetState Station %li '%c' state changed from %s to %s
CStation::WndProc
CStation::WndProc - station %d '%c' (0x%IX):  Retrying connection due to failure in InternalConnectSession()
CStation::WndProc - station %d '%c' - recieved SM_ONLOGINCOMPLETE.
CStation::WndProc - station %d '%c' - recieved SM_ONDISCONNECTED.
CStation::WndProc - station %d '%c' (0x%IX) - requesting station reconnect
CStation::WndProc - station %d '%c' - retrying to redirect USB devices - attempting redirection.
CStation::Reposition
Ignoring because station uses a custom presenter
pShellSink
CStation::Reposition - station %d '%c' - Destroying session
CStation::Reposition - station %d '%c' (0x%IX):  Monitor "%s" repositioned to: left=%i, top=%i, right=%i, bottom=%i
CStation::RemoveDeviceTree - station %d '%c' - Device 0x%IX is a potential station hub, skipping.
CStation::RemoveDeviceTree - station %d '%c' - Child device 0x%IX is a station hub, skipping.
CStation::RemoveDeviceTree - station %d '%c' - Child device 0x%IX is a keyboard, skipping.
CStation::RescanRedirectableDevices - Entered (station %i '%c' 0x%IX)
CStation::OnReceivedInput
CStation::OnReceivedInput - Received a VK_ESCAPE key up, for a vdi station, while screensaver timer is active - disconnecting.
CStation::OnSidebandInput
CStation::AddDeviceTree
CStation::AddDeviceTree - station %d '%c' - Child device 0x%IX is a potential station hub, skipping.
CStation::AddDeviceTree - station %d '%c' - Child device 0x%IX is a station hub, skipping.
CStation::AddDeviceTree - station %d '%c' - Child device 0x%IX is a keyboard, skipping.
CStation::DumpRedirectableDeviceList - station %d '%c' - Redirectable:  type = %s  devnode = 0x%X  instance = %s
cbChannelData > 0
CStation::OnAudioChannelReceivedData
SAE_Started
CStation::OnAudioChannelReceivedData - station %d '%c' - Channel Name: %s, cmd = %s
CStation::OnAudioChannelReceivedData - station %d '%c' - Channel Name: %s, cmd = %s, eDataFlow = %s, lVolume = %f, Muted = %s
SAE_RemoteConnect
SAE_Unknown
SADLE_Started
CStation::OnDriveLetterChannelReceivedData - station %d '%c' - Channel Name: %s, cmd = %s
SADLE_SerializedCache
CStation::OnDriveLetterChannelReceivedData - station %d '%c' - Channel Name: %s, cmd = %s, cbSerialized = %i
SADLE_Unknown
CStation::SetDriveLetterCache
pbTemp
CStation::GetDriveLetterCache
CStation::SendDriveLetterCache
CStation::GetPresentMethod
DisableFBR
CStation::OnWaitForRequiredServices
CStation::OnHandleCheckVirtualMachineReadyFailure - station %d '%c' - VM "%s" is in the "%s" state.
CStation::OnHandleCheckVirtualMachineReadyFailure - station %d '%c' - Request VM "%s" to enter the enabled state again.
CStation::OnStationWaitForEventTimeout
m_fSemaphoreClaimed == TRUE
hSimultaneousVirtualMachineEnables != 0
CStation::OnStationWaitForEventTimeout - station %d '%c' - SWFETA_CheckVirtualMachineReady:  VM = "%s", hostname = "%s", taking too long to start, releasing semaphore.
CStation::OnStationWaitForEventTimeout - station %d '%c' - SWFETA_CheckVirtualMachineReady:  VM = "%s", hostname = "%s", hr = 0x%08x
CStation::OnStationWaitForEventTimeout - station %d '%c' - SWFETA_CheckVirtualMachineReady:  VM = "%s", ipaddr = "%s", hr = 0x%08x
CStation::OnStationWaitForEventTimeout - station %d '%c' - SWFETA_CheckVirtualMachineReady:  VM = "%s", VM state = "%u", hr = 0x%08x
CStation::StationWaitForEvent - station %i '%c' (0x%IX) - Entered
CStation::StationWaitForEvent - station %i '%c' (0x%IX) - Exit
CStation::ConsoleModePromptEnable
schSCManager != 0
CStation::GetServiceName
pszServiceName
pSrcShellSink != 0
CStation::OnWaitForRdshResources
CStation::OnWaitForRdshResources - station %d '%c' - Waiting for "WMS" service to start.
TermService
Global\RCMReadyEvent
pszResourceName
hEvent
CStation::OnWaitForRdshResources - station %d '%c' - Waiting for "TermService" service to start.
Unknown
CStation::OnWaitForRdvhResources
CStation::OnWaitForRdvhResources - station %d '%c' - Waiting for WMS service to start
CStation::OnWaitForRdvhResources - station %d '%c' - Waiting for Hyper-V service to start
::SysStringLen (m_bstrVirtualMachineName) != 0
CStation::OnWaitForRdvhResources - station %d '%c' - Waiting to obtain startup semaphore, VM = "%s".
CStation::OnWaitForRdvhResources - station %d '%c' - Startup semaphore claimed, VM = "%s".
virtual machine ready
CStation::OnWaitForRdvhResources - station %d '%c' - Waiting for VM "%s" to start.
CStation::OnWaitForRdvhResources - station %d '%c' - VMReady state is %u.
SysPrep is not finished, there are reboots pending
automatic vm binding
CStation::OnWaitForRdvhResources - station %d '%c' - Release startup semaphore, VM = "%s".
CStation::InitializeBackBufferAndCursor
CStation::InitializeBackBufferAndCursor - station %d '%c' - IWmsStationPresenter::GetMousePresenter returned a NULL IWmsMousePresenter, exiting now.
CStation::GetVirtualMachineIpAddress
*pbstrVirtualMachineIpAddress
CStation::SetConnectionRetryTimer
CStation::DisconnectForVdiScreenSaver
CStation::DisconnectForVdiScreenSaver - station %d '%c' - This is a VDI station, killing the VDI screensaver timer, and calling DisconnectSession.
CStation::OnVdiConnectionTimeout
CStation::OnVdiConnectionTimeout - station %d '%c' - Session is not in a connecting state; ignoring VDI connection timeout.
CStation::OnTouchFrameArrived
pbSerializedFrame
CStation::OnEnterIdleState - station %d '%c'.
CStation::OnEnterIdleState
CStation::OnExitIdleState - station %d '%c'.
CStation::OnExitIdleState
CStation::DoesPresenterSupportIdleNotifications
pPresenter2 != NULL
CStation::BlockUSBStorageDevices - 
CStation::UnblockUSBStorageDevices - 
peDisplayOrientation != 0
CStation::GetDisplayOrientation
cbSerializedFrame == sizeof (*pTouchFrame) + (pTouchFrame->cContacts * sizeof (pTouchFrame->pContacts[0]))
CStation::NormalizeTouchContacts
CStation::NormalizeTouchContacts BEGINFRAME cContacts = %i fHybrid = %s
pContact->rangeXLogical.lMaximum >= pContact->rangeXLogical.lMinimum
pContact->rangeYLogical.lMaximum >= pContact->rangeYLogical.lMinimum
CStation::NormalizeTouchContacts
 contact = %i {x = %i y = %i} ==> {x_rotated = %i y_rotated = %i}.
CStation::NormalizeTouchContacts ENDFRAME
Administrators
WmsOperators
ZbcExI
WMSDL
WMSAud
CStationManager::s_tsoSingleInstance
CStationManager::s_CreateInstance
termsrv\wms\src\devices\station\stationmanager.cpp
CStationManager::m_lockUninitialize
CStationManager::m_lockStations
CStationManager::m_lockHandleUnmappedInput
CStationManager::NondelegatingQueryInterface
lParam
CStationManager::WndProc
CStationManager::CreateStationsOnMonitor - Subdivision %d of monitor %s has zero size--no station created.
CStationManager::UpdateCollaborationStationFriendlyName
CStationManager::UpdateCollaborationStationFriendlyName
m_hInstRes
cchText
CStationManager::UpdateCollaborationStationFriendlyName - Collaboration station %d friendly name set to "%s".
CStationManager::CreateStation
pStationThreadContext
CStationManager::CreateStation
pStationThreadContext->m_hTerminateStationThreadEvent
pStationThreadContext->m_hStationThreadReadyEvent
pStationThreadContext->m_hStationThread
CStationManager::CreateStation - CreateThread tid = 0x%X
CStationManager::InternalCreateStation
CStationManager::InternalCreateStation
pPartiallyCreatedStation
MapUsingStationData failed with ERROR_NOT_READY
CStationManager::InternalCreateStation - finished, hr=0x%8.8lx
(m_pSrcShellSink != 0) && (m_pDeviceManager != 0)
CStationManager::CreateStations
m_eWmsMode == WM_MultiStation
CStationManager::DeleteSettings - Start
CStationManager::DeleteSettings - Skipping automapped station %i '%c'
CStationManager::DeleteSettings - Skipping monitorless station %i '%c'
CStationManager::DeleteSettings - Automapped station %i '%c'
CStationManager::DeleteSettings - End hr=0x%lx
CStationManager::GetStationFriendlyName
CStationManager::GetStationFriendlyName (idStation = %lu, *pbstrFriendlyName = %s) 
CStationManager::SetStationFriendlyName
CStationManager::SetStationFriendlyName (idStation = %lu, bstrFriendlyName = %s) 
m_pNotificationManager
CStationManager::SetStationAutoLogon
CStationManager::SplitStation - Station %lu
CStationManager::SplitStation
 - Station has no monitor
station is to narrow to be split
CMonitor::s_SubdivisionSplitScreenType (idxSubdivision) == SSST_Main
m_idLastStationCreated == idNextStation
pStationData
CStationManager::InternalUnsplitStation
CStationManager::UnsplitStation - Station %lu
CStationManager::GetStationServerName
CStationManager::GetStationServerName (idStation = %lu, *pbstrServerName = %s, *pbstrVirtualMachineName = %s, bstrVirtualMachineId = %s) 
CStationManager::SetStationServerName
CStationManager::SetStationServerName (idStation = %lu, bstrServerName = "%s", bstrVirtualMachineName = "%s") 
CStationManager::GetStationRemoteFxEnable
CStationManager::GetStationRemoteFxEnable (idStation = %lu, *pfEnable = %s) 
CStationManager::SetStationRemoteFxEnable (idStation = %lu, fEnable = %s) 
CStationManager::RefreshStation (idStation = %lu) 
CStationManager::Initialize
UseIPv6ForVdiStations
Max VMs Starting
Software\Microsoft\Windows MultiPoint Server\Shell
m_hSimultaneousVirtualMachineEnables
AutoLogonMaxRetryCount
m_pSrcShellSink == 0
(pShellSink != 0) && (pCoreEventSink == 0)
m_hMultiStationModeEvent
(pCoreEventSink != 0) && (pShellSink == 0)
Station Manager Hidden Input Window Class
Station Manager Hidden Input Window
pDeviceSender != 0
CStationManager::HandleUnmappedInput
CStationManager::HandleUnmappedInput - Manual mapping is currently suspended; discarding mapping input
CStationManager::HandleUnmappedInput - Ignoring map request from keyboard %s attached to a non-potential station hub %s
CStationManager::HandleUnmappedInput - Found station match '%c'
CStationManager::HandleUnmappedInput - Found existing station %li for monitor %s
pStation->GetStationID() == SID_InvalidStationID
CStationManager::OnDeviceAdded
CStationManager::OnDeviceAdded - hub %s is already a station hub, take no action.
CStationManager::OnDeviceRemoved
CStationManager::AutoMapStation
CStationManager::ScanForAndAddMergedStationHubs - Added Merged Station Hub
CStationManager::MapStation
CStationManager::MapStation - Mapping hub [0x%X] to station %li '%c' (0x%X) 
CStationManager::MapStation - End hr=0x%lx
%s,%s
CStationManager::ConnectStation
bstrVirtualChannelNames
No mapping characters are available.
CStationManager::GetNextMappingChar
CStationManager::FreeMappingChar
idx != s_cMappingChars
s_rgfMappingCharInUse[idx]
CStationManager::OnMonitorRemoved
CStationManager::DestroyStation
CStationManager::DestroyStation - Station %d '%c'
CStationManager::OnMonitorAdded - [0x%X], id = "%s".
CStationManager::OnMonitorAdded
Ignoring monitor because it's not connected to the desktop or a presentation device.
CStationManager::OnHubAdded - [0x%X], id = "%s".
CStationManager::OnHubAdded
CStationManager::OnHubAdded - No persisted mapping data exists for hub %s.
CStationManager::OnHubAdded - Found persisted mapping data for hub %s, but matching monitor %s is not present.
CStationManager::OnHubAdded - Subdivision %d of monitor %s has zero size--no station created.
CStationManager::OnMergedStationHubAdded
CStationManager::OnMergedStationHubAdded - Added Merged Station Hub
CStationManager::SetStationMappingMode - %i
CStationManager::s_StationThreadProc - Entered
CStationManager::s_StationThreadProc
pCtx->m_pStation != 0
pOldCtx == NULL || pOldCtx->m_pStation == pCtx->m_pStation
CStationManager::s_StationThreadProc - Exiting, hr = 0x%X
CStationManager::OnConsoleModeRequest - Validated request for console mode, all stations waiting for resources
CStationManager::CheckUsb3StationHub - adding device tree for hub (0x%IX) 0x%X %s to station %i '%c' mapped to hub (0x%IX) 0x%X %s
CStationManager::SetUsbStorageDeviceBlockingOnAllStations - usbDeviceBlocking = %s.
CStationManager::SetUsbStorageDeviceBlockingOnAllStations - Unblocking USB storage on station: %i.
CStationManager::SetUsbStorageDeviceBlockingOnAllStations - Blocking USB storage on station: %i.
CStationManager::BlockUsbStorageDevices - Blocking USB storage on station: %i.
CStationManager::UnblockUsbStorageDevices - Unblocking USB storage on station: %i.
CStationManager::GetStationPresenterType
CStationManager::SetDisplayOrientation - Setting display orientation to "%s" on station: %i.
dwStatus == 0L
CStationManager::GetDisplayIdleTimeout
CStationManager::GetDisplayIdleTimeout - System is running on AC power.
CStationManager::GetDisplayIdleTimeout - System is running on DC power.
CStationManager::GetDisplayIdleTimeout - Unable to determine if running on AC or DC power.
CStationManager::GetDisplayIdleTimeout - m_IdleTimeoutSeconds = %u.
SOFTWARE\Microsoft\Windows MultiPoint Server
BlockUsbStorageOnAllStations
BCDFGHJKMPQRTVWXY2346789
WMSDL
WMSAud
pStationPresenter
CStationPresenter::s_CreateInstance
termsrv\wms\src\devices\station\stationpresenter.cpp
CStationPresenter::CStationPresenter - 0x%p
CStationPresenter::~CStationPresenter - 0x%p (m_hWnd 0x%08X)
DrawStationDimensions
DrawDirtyRects
m_hDebugPen != 0
CStationPresenter::Initialize
DrawStationIdleState
StationPresenter
m_hWnd != 0
CStationPresenter::Initialize left = %i, top = %i, width = %i, height = %i
CStationPresenter::NondelegatingQueryInterface
m_pMousePresenter != 0
CStationPresenter::GetMousePresenter
CStationPresenter::GetDimensions
m_hWnd!= NULL
CStationPresenter::Present
CStationPresenter::OnError eError = 0x%04X
CStationPresenter::DumpDimensions
(0xFFFFFFFFL) != iOldTextAlign
0xFFFFFFFF != clrOldColor
In IdleState !!
CStationPresenter::DumpIdleState
l=%i, t=%i, w=%i, h=%i
CVirtualMonitor::OnInitializeComplete
termsrv\wms\src\devices\station\virtualmonitor.cpp
CVirtualMonitor::GetContainerId
CVirtualMonitor::UpdateBounds
CVirtualMonitor::UpdateBounds - %dx%d at (%d, %d)
WmsVirtualMonitorInstanceId
CVGpu::PreInitialize
termsrv\wms\src\devices\station\vgpu.cpp
CVGpu::PreInitialize - DevNode 0x%X  status = 0x%X
CVGpu::PreInitialize - DevNode 0x%X  needs restart. Restarting...
CVGpu::PreInitialize - VGpu reboot complete key not found.
CVGpu::PreInitialize - VGpu reboot complete key is created. Restarting in 1 minute.
SDriveLetterInfo::lock
CVolume::~CVolume
termsrv\wms\src\devices\station\volume.cpp
CVolume::OnInitializeComplete
m_dwDevNode != 0
CVolume::OnInitializeComplete
CVolume::OnSetVisibility - eVisibility = %s, m_pszInstanceId = %s
CVolume::OnSetVisibility
m_hSideband != INVALID_HANDLE_VALUE
cbReturned == 0
CVolume::SetPermissionsMode
ePermissionsMode <= __WMS_VOLUME_PERMISSIONS_MODE_LAST
CVolume::SetVisibilityMode
CVolume::SetVisibilityMode volume needs a drive letter assigned.
CVolume::SetVisibilityMode volume has no linked drive letter.
CVolume::SetVisibilityMode volume has a cached drive letter.
m_chDriveLetter == L'\0'
pszVolumePath != NULL
CVolume::SetVisibilityMode Programmatically creating drive letter %c
CVolume::SetVisibilityMode Programmatically deleting drive letter %c
CVolume::GetVolumePath
pszTempVolumeName
cbReturned < (260 * sizeof (WCHAR))
m_pszVolumeName != NULL
((chDriveLetter >= L'A') && (chDriveLetter <= L'Z'))
CVolume::s_AddGlobalDriveLetter
CVolume::s_AddGlobalDriveLetter Global Drive "%c" - updated cached drive letter.
CVolume::s_AddGlobalDriveLetter Global Drive "%c" - ADDED.
CVolume::s_RemoveGlobalDriveLetter
CVolume::s_RemoveGlobalDriveLetter Global drive "%c" - REMOVED
iIdx < (sizeof(*RtlpNumberOf(s_DriveLetterInfo.rgRefCount)))
CVolume::s_IsDriveLetterAvailable
CVolume::s_GetFirstFreeDriveLetter Next drive letter = %c
CVolume::GetCurrentDriveLetter
(cbReturned == 0) || (cbReturned == (sizeof(*RtlpNumberOf(szTempVolumePath))))
szTempVolumePath[s_idxSlash] == L'\\'
szTempVolumePath[s_idxColon] == L':'
m_chOriginalDriveLetter == L'\0'
CVolume::s_ProcessVolumeNotification DBT_DEVICEARRIVAL for drive %c.
CVolume::s_ProcessVolumeNotification
CVolume::s_ProcessVolumeNotification DBT_DEVICEREMOVECOMPLETE for drive %c.
CVolume::HasCurrentGlobalDriveLetter
SOFTWARE\Microsoft\Windows MultiPoint Server
BlockUsbStorageOnAllStations
CVolumeNotification Hidden Window Class
termsrv\wms\src\devices\station\volumenotification.cpp
CVolumeNotification Hidden Window
CVolumeNotification::OnDeviceChange
[%I64u] [%u-%02u-%02u %02u:%02u:%02u.%03u] %s [%X.%X.%X] 
hRecord
__EHM_MsiWrite
termsrv\wms\src\common\ehmlib\ehmlib.cpp
rc == 0L
__EHM_FlatFileWrite
10.0.10011.16384
level < (sizeof(*RtlpNumberOf(s_rgEventDescriptor)))
DEBUGMSGV
CRawInput Hidden Input Window Class
CRawInput Hidden Input Window
CFactory::QueryInterface
termsrv\wms\src\common\srccom\srcfactory.cpp
CFactory::CreateInstance
((HRESULT)0x80040110L)
(iid == IID_IUnknown) || (iid == IID_IClassFactory)
CFactory::s_GetClassObject
pData->m_pfnCreateInstance != 0
idx < g_cFactoryData
Apartment
CUnknown::NondelegatingQueryInterface
termsrv\wms\src\common\srccom\srcunknown.cpp
_wcsicmp (pszThreadingModel, g_kszThreadingModelApartment) == 0 || _wcsicmp (pszThreadingModel, g_kszThreadingModelBoth) == 0 || _wcsicmp (pszThreadingModel, g_kszThreadingModelFree) == 0
CSrcComRegUtil::s_RegisterServer
termsrv\wms\src\common\srccom\srccomregutil.cpp
cchCopied > 0 && cchCopied < (sizeof(*RtlpNumberOf(szModule)))
CLSID\%s
AppID
InprocServer32
ThreadingModel
ProgID
VersionIndependentProgID
CLSID
CurVer
DllSurrogate
CSrcComRegUtil::s_UnregisterServer
(ls == 0L) || (ls == 2L)
CSrcComRegUtil::s_SetKeyAndValue
%s\%s
m_cRef == 0
CRefCount::~CRefCount
termsrv\wms\src\common\srcutils\refcount.cpp
cNewRef >= 0
CRefCount::Release
Utils::StringTableHelper
termsrv\wms\src\common\srcutils\debughelpers.cpp
Unknown       
Keybd Filter  
Mouse Filter  
Audio         
Consumer Ctrl 
HID Device    
HUB           
Root Hub      
Composite Hub 
Monitor       
Disk          
Volume Filter 
Image Filter  
HostController
Mass Storage  
Usb Device    
Keyboard      
Mouse         
Volume        
Image         
Redirected Usb
VGPU          
Touch Screen  
ALC_ManualLogon
ALC_AutoLogon
ACT_NoChange
ACT_MonitorAdded
ACT_MonitorRemoved
ACT_HubAdded
ACT_HubRemoved
ACT_KeyboardAdded
ACT_KeyboardRemoved
ACT_MouseAdded
ACT_MouseRemoved
ACT_AudioAdded
ACT_AudioRemoved
ACT_DiskDriveAdded
ACT_DiskDriveRemoved
ACT_ImageAdded
ACT_ImageRemoved
ACT_StationMapped
ACT_StationUnmapped
ACT_ForceDetectionNow
ACT_StationAutoLogonFailed
ACT_StationAutoLogonCleared
ACT_StationAdded
ACT_StationRemoved
ACT_StationConnectionTimeoutFailed
ACT_StationConnectionTimeoutCleared
ACT_StationServicesTimeoutFailed
ACT_StationServicesTimeoutCleared
ACT_DiskProtectionFirstThresholdCrossed
ACT_DiskProtectionSecondThresholdCrossed
SystemAlert_StandardVgaAdapterOnly
SystemAlert_NoPotentialStationHubs
SystemAlert_SafeMode
SystemAlert_KeyboardOrMouseOnRootHub
SystemAlert_MonitorsWithoutPotentialStationHubs
SystemAlert_DiskProtectionFirstThresholdCrossed
SystemAlert_DiskProtectionSecondThresholdCrossed
StationAlert_HubMissingRequiredDevice
StationAlert_AutoLogonCredentialFailed
StationAlert_WaitForServicesTimeout
StationAlert_WaitForConnectionTimeout
Status_AlertCleared
Status_AlertSet
Status_AlertNoChange
Sev_Unknown
Sev_YellowAlert
Sev_RedAlert
Sev_FatalAlert
No problem
CM_PROB_NOT_CONFIGURED
CM_PROB_DEVLOADER_FAILED
CM_PROB_OUT_OF_MEMORY
CM_PROB_ENTRY_IS_WRONG_TYPE
CM_PROB_LACKED_ARBITRATOR
CM_PROB_BOOT_CONFIG_CONFLICT
CM_PROB_FAILED_FILTER
CM_PROB_DEVLOADER_NOT_FOUND
CM_PROB_INVALID_DATA
CM_PROB_FAILED_START
CM_PROB_LIAR
CM_PROB_NORMAL_CONFLICT
CM_PROB_NOT_VERIFIED
CM_PROB_NEED_RESTART
CM_PROB_REENUMERATION
CM_PROB_PARTIAL_LOG_CONF
CM_PROB_UNKNOWN_RESOURCE
CM_PROB_REINSTALL
CM_PROB_REGISTRY
CM_PROB_VXDLDR
CM_PROB_WILL_BE_REMOVED
CM_PROB_DISABLED
CM_PROB_DEVLOADER_NOT_READY
CM_PROB_DEVICE_NOT_THERE
CM_PROB_MOVED
CM_PROB_TOO_EARLY
CM_PROB_NO_VALID_LOG_CONF
CM_PROB_FAILED_INSTALL
CM_PROB_HARDWARE_DISABLED
CM_PROB_CANT_SHARE_IRQ
CM_PROB_FAILED_ADD
CM_PROB_DISABLED_SERVICE
CM_PROB_TRANSLATION_FAILED
CM_PROB_NO_SOFTCONFIG
CM_PROB_BIOS_TABLE
CM_PROB_IRQ_TRANSLATION_FAILED
CM_PROB_FAILED_DRIVER_ENTRY
CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD
CM_PROB_DRIVER_FAILED_LOAD
CM_PROB_DRIVER_SERVICE_KEY_INVALID
CM_PROB_LEGACY_SERVICE_NO_DEVICES
CM_PROB_DUPLICATE_DEVICE
CM_PROB_FAILED_POST_START
CM_PROB_HALTED
CM_PROB_PHANTOM
CM_PROB_SYSTEM_SHUTDOWN
CM_PROB_HELD_FOR_EJECT
CM_PROB_DRIVER_BLOCKED
CM_PROB_REGISTRY_TOO_LARGE
CM_PROB_SETPROPERTIES_FAILED
CM_PROB_WAITING_ON_DEPENDENCY
CM_PROB_UNSIGNED_DRIVER
CM_PROB_USED_BY_DEBUGGER
CM_PROB_DEVICE_RESET
CM_PROB_CONSOLE_LOCKED
CM_PROB_NEED_CLASS_CONFIG
CM_PROB_GUEST_ASSIGNMENT_FAILED
DN_ROOT_ENUMERATED
DN_DRIVER_LOADED
DN_ENUM_LOADED
DN_STARTED
DN_MANUAL
DN_NEED_TO_ENUM
DN_DRIVER_BLOCKED
DN_HARDWARE_ENUM
DN_NEED_RESTART
DN_CHILD_WITH_INVALID_ID
DN_HAS_PROBLEM
DN_FILTERED
DN_LEGACY_DRIVER
DN_DISABLEABLE
DN_REMOVABLE
DN_PRIVATE_PROBLEM
DN_MF_PARENT
DN_MF_CHILD
DN_WILL_BE_REMOVED
DN_NOT_FIRST_TIMEE
DN_STOP_FREE_RES
DN_REBAL_CANDIDATE
DN_BAD_PARTIAL
DN_NT_ENUMERATOR
DN_NT_DRIVER
DN_NEEDS_LOCKING
DN_ARM_WAKEUP
DN_APM_ENUMERATOR
DN_APM_DRIVER
DN_SILENT_INSTALL
DN_NO_SHOW_IN_DM
DN_BOOT_LOG_PROB
Utils::DevNodeStatusToString
%s | 
eRender
eCapture
WTTS_Starting
WTTS_Started
WTTS_Stopping
WTTS_Stopped
__DV_First
DV_Hidden
DV_Global
__DV_Last
eVisibility < ARRAYSIZE (s_rgStringMap)
Utils::DeviceVisibilityToString
VMState_Unknown
VMState_Enabled
VMState_Disabled
VMState_Reboot
VMState_Reset
VMState_Paused
VMState_Suspended
VMState_Starting
VMState_Snapshotting
VMState_Saving
VMState_Stopping
VMState_Pausing
VMState_Resuming
SessionState_ScreenSaver
SessionState_Disconnecting
SessionState_Disconnected
SessionState_Initializing
SessionState_Connecting
SessionState_Connected
SessionState_LoggedOn
eSessionState < ARRAYSIZE (s_rgStringMap)
Utils::SessionStateToString
Portrait
Landscape
Portrait (Flipped)
Landscape (Flipped)
eDisplayOrientation < ARRAYSIZE (s_rgStringMap)
Utils::DisplayOrientationToString
Unblocked
Blocked
eUsbStorageDeviceBlocking < ARRAYSIZE (s_rgStringMap)
Utils::UsbStorageDeviceBlockingToString
Serial
SingleFingerHybrid
Parallel
Hybrid
SOFTWARE\Microsoft\Windows MultiPoint Server
termsrv\wms\src\common\srcutils\platformutils.cpp
PortNumber
PlatformUtils::GetWmsRdpListenerPortNumber
PlatformUtils::IsHypervisorPresent - The system %s running under a hypervisor
PlatformUtils::IsHypervisorPresent - Clearing fVirtualized because we're running in the hypervisor's root partition
 - thread failed to start.
SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\WMS-Tcp
termsrv\wms\src\common\srcutils\usermanagement.cpp
dwError == 122L
pszDomainName
nStatus == 0 || nStatus == (2100+121)
CUserManagement::s_DoesUserExist
status == ((NTSTATUS)0x00000000L)
CUserManagement::s_GetUserSIDEx
nStatus == 0
CUserManagement::s_InitLsaUnicodeString
CUserManagement::s_GetLocalGroupSid
CUserManagement::s_IsSidMemberOfLocalGroup
cEntriesRead == cTotalEntries
CUserManagement::s_IsWellKnownSidEnabledInToken
CUserManagement::s_IsCallerWmsShell
CUserManagement::s_VerifyAccessLevelEx
CUserManagement::s_VerifyTokenAccessLevel
WmsShell
lpFilename != NULL
GetModulePath
termsrv\wms\src\common\srcutils\srcutils.cpp
cchFileName != 0
pszFullPath
AppendFileNameToModulePath
LoadResourceDLL
hInst
CreateWmsSid
pSDTempBuffer
CreateSecurityDescriptor
CreateWmsNamedEvent
dwLastError == 5L
hWmsSvcReadyEvent != 0
AdjustPrivilege
CopyString
*ppszDest
pbstrDest != 0
SafeSysAllocString
bstrTemp
SafeOuterMessagePump - Entered.
SafeOuterMessagePump - Told to stop, pumping any messages left in the Queue.
SafeOuterMessagePump - Done processing messages in the Queue.
SafeOuterMessagePump
SafeOuterMessagePump - Exiting
HandleDeviceRemovalErrorSilently
err == 0L
Reboot - pszMessage = %s, timeout = %i, shutdown reason = 0x%08X
SeShutdownPrivilege
Reboot
dwError == 21L
GetTokenInformationWithLocalAlloc
(err == 24L) || (err == 122L)
pTokenInformation
pversionInfo != 0
GetOSInfo
pdwProductType != 0
WaitForShellReady - Waiting for shell...
Shell_TrayWnd
WaitForShellReady
WaitForShellReady - Found the shell window.
DpSoftwareUpdateRunning
System\CurrentControlSet\Services\WMS\Parameters\
IsSoftwareUpdatesRunning
System\CurrentControlSet\Services\WMS\Parameters\ShutdownInProgress
UpdateWindowStyle
DumpTouchFrames
StationVirtualMachine
Global\WmsSvcReadyEvent
WmsShell
\UNC\
\\?\Volume
{00000000-0000-0000-0000-000000000000}
::$DATA
CWorkerThread::m_lockThreadStatus
CWorkerThread::Start
termsrv\wms\src\common\srcutils\workerthread.cpp
m_hThreadKillEvent
m_hThreadStarted
m_hThread
CWorkerThread::Start - %s thread started:  id = 0x%X  obj = 0x%X
CWorkerThread::Stop
CWorkerThread::Stop - %s thread failed to stop gracefully; calling TerminateThread():  id = 0x%X  obj = 0x%X
CWorkerThread::WaitForThreadToStop
::GetThreadId (m_hThread) != GetCurrentThreadId()
CWorkerThread::WaitForThreadToStop - Waiting for %s thread to stop:  id = 0x%X  obj = 0x%X
 - thread failed to stop.
CWorkerThread::WaitForThreadToStop - %s thread stopped:  id = 0x%X  obj = 0x%X
CWorkerThread::s_ThreadProc
pThis->m_hThreadStarted
termsrv\wms\src\common\srcutils\stringutils.cpp
IsInMultiString
PlatformSkuUtils::IsRole
termsrv\wms\src\common\srcutils\platformskuutils.cpp
PlatformSkuUtils::IsConnector
ConnectorInstalled
RoleInstalled
pbBuffer != 0
CPixelMap::AttachToRect
termsrv\wms\src\common\srcutils\pixelmap.cpp
cbStride >= cxBuffer * s_kcbPixel
s_RectIsContained (cxBuffer, cyBuffer, pRect)
pRotated->m_cX == m_cX
CPixelMap::GetRotatedImage180
pRotated->m_cY == m_cY
pTransposed->m_cX == m_cY
CPixelMap::GetTransposedImage
pTransposed->m_cY == m_cX
CCoreEventDispatcher::m_lockClients
CCoreEventDispatcher::CCoreEventDispatcher - 0x%p
CCoreEventDispatcher::~CCoreEventDispatcher - 0x%p
pClient != 0
CCoreEventDispatcher::RegisterEventSink
termsrv\wms\src\common\srcutils\coreeventdispatcher.cpp
pullCookie != 0
CCoreEventDispatcher::RegisterEventSink()
pCoreEventQueue
CCoreEventDispatcher::EnqueueCoreEvent CCoreEventQueue 0x%p terminated, removing from m_listClients.
CCoreEventDispatcher::EnqueueCoreEvent
pEvent
CCoreEventDispatcher::ShutdownNotification
CCoreEventDispatcher::ShutdownNotification ()
CCoreEventDispatcher::OnSystemAlert
CCoreEventDispatcher::OnSystemAlert (eType=%s, eStatus=%s)
CCoreEventDispatcher::OnStationAlert
CCoreEventDispatcher::OnStationAlert (eType=%s, idStation=%d, eStatus=%s)
CCoreEventDispatcher::OnConfigureStation
CCoreEventDispatcher::OnConfigureStation (idStation = %lu)
CCoreEventDispatcher::OnStationAdded
CCoreEventDispatcher::OnStationAdded (idStation = %lu, idxSplitScreen = %lu, idPrimaryStation = %lu)
CCoreEventDispatcher::OnStationRemoved
CCoreEventDispatcher::OnStationRemoved (idStation = %lu)
CCoreEventDispatcher::OnSessionConnecting
CCoreEventDispatcher::OnSessionConnecting (idStation = %lu)
CCoreEventDispatcher::OnAssociateSessionWithStation
pEvent->m_bstrServerName
pEvent->m_bstrVirtualMachineId
CCoreEventDispatcher::OnAssociateSessionWithStation (idStation = %lu, idSession = %lu, bstrServerName = %s, bstrVirtualMachineId = %s)
CCoreEventDispatcher::OnSessionDisconnected
CCoreEventDispatcher::OnSessionDisconnected (idStation = %lu)
CCoreEventDispatcher::OnDeviceAdded
CCoreEventDispatcher::OnDeviceAdded (idStation = %lu, eDeviceType = %s, cDevices = %lu)
CCoreEventDispatcher::OnDeviceRemoved
CCoreEventDispatcher::OnDeviceRemoved (idStation = %lu, eDeviceType = %s, cDevices = %lu)
CCoreEventDispatcher::OnEnterSplitScreen
CCoreEventDispatcher::OnEnterSplitScreen (idStation = %lu)
CCoreEventDispatcher::OnExitSplitScreen
CCoreEventDispatcher::OnExitSplitScreen (idStation = %lu)
CCoreEventDispatcher::OnBeginIdentifyStation
CCoreEventDispatcher::OnBeginIdentifyStation (idStation = %lu)
CCoreEventDispatcher::OnEndIdentifyStation
CCoreEventDispatcher::OnEndIdentifyStation (idStation = %lu)
RegUtil::SetStringValue
termsrv\wms\src\common\srcutils\registry.cpp
RegUtil::GetStringValue
cb % sizeof (WCHAR) == 0
pStationPresenterBackBuffer
CStationPresenterBackBuffer::s_CreateInstance
termsrv\wms\src\common\srcutils\stationpresenterbackbuffer.cpp
CStationPresenterBackBuffer::Initialize
CStationPresenterBackBuffer::Initialize - IWmsStationPresenter::GetDimensions returned cxStationSurface = %i, cyStationSurface = %i, exiting now.
hMemDc != 0
hDibSection != 0
hOldBmp != 0
m_pStationPresenter != 0
CStationPresenterBackBuffer::Present
hRgnDirty != 0
CStationPresenterBackBuffer::Present - Failed to present for the first time!
CStationPresenterBackBuffer::Present - Failed to present for %I64d consecutive times!
CStationPresenterBackBuffer::Present - Presenting is working again, but previously it failed %I64d consecutive times!
termsrv\wms\src\common\srcutils\machineusersettingsutils.cpp
CMachineUserSettingsUtils::s_IsAdminOrchestrationEnabled
SOFTWARE\Microsoft\Windows MultiPoint Server
EnableAdminSessionOrchestration
GetPreferredDriveLetter
termsrv\wms\src\common\srcutils\volumeutils.cpp
(((pszDriveLetter[0] >= L'A') && (pszDriveLetter[0] <= L'Z')) || (pszDriveLetter[0] == L' '))
GetPreferredDriveLetter found previous mapping for volume %s to drive '%s'.
SetPreferredDriveLetter
SetPreferredDriveLetter volume %s mapped to drive letter '%s'.
GetVolumeUniqueId
pbOutput
!fSuccess && (::GetLastError() == 234L)
pbUniqueId
Software\Microsoft\Windows MultiPoint Server\Drive Letters
termsrv\wms\src\common\srcutils\wmscrypt.cpp
WmsBase64Encode
pszTemp
pWorkItem
CCoreEventQueue::EnqueueEvent
termsrv\wms\src\common\srcutils\coreeventqueue.cpp
CCoreEventQueue::ProcessWorkItem - 0x%p DispatchCoreEvent returned RPC error 0x%lx
pEntry != 0
CCoreEventQueue::DiscardWorkItem
m_pEventSink != NULL
CCoreEventQueue::DispatchEvent
 - m_pEventSink dispatch failed.
CWorkerQueueThread::m_lockListWorkItems
CWorkerQueueThread::Start
termsrv\wms\src\common\srcutils\workerqueuethread.cpp
m_hWorkItemsAvailable == 0
m_hWorkItemsAvailable
CWorkerQueueThread::Enqueue - Failed to queue work item; queue %s (0x%p) state is %s
CWorkerQueueThread::Enqueue
CWorkerQueueThread::ThreadProc - Entered.
CWorkerQueueThread::ThreadProc
CWorkerQueueThread::ThreadProc - Told to stop.
CWorkerQueueThread::ThreadProc - Exiting
CSRCWindow::s_SharedWindowProc
termsrv\wms\src\common\srcwnd\srcwnd.cpp
CSRCWindow::s_SharedWindowProc - Set CSRCWindow (0x%08X) m_hWnd to 0x%08X
CSRCWindow::s_CreateWindowHelper
CSRCWindow::CSRCWindow - obj = 0x%X
CSRCWindow::~CSRCWindow - Closing event m_hWndDestroyed 0x%X
CSRCWindow::Initialize::s_lock
pszClassName != NULL
CSRCWindow::Initialize
m_hWndDestroyed
atom != 0
m_hInst != NULL
CSRCWindow::CreateEx
m_szClassName[0] != 0
CSRCWindow::CreateEx
m_hWnd == NULL
CSRCWindow::CreateEx - Created window:  "%s" (0x%08X) 
CSRCWindow::CreateOnNewThread
CSRCWindow::CreateOnNewThread
m_pMessagePumpThread
CSRCWindow::Destroy
CSRCWindow::Destroy - Called on same thread; sending s_WM_WMS_Destroy message
CSRCWindow::Destroy - Called on different thread; posting s_WM_WMS_Destroy message to thread id 0x%X and waiting
wait == WAIT_TIMEOUT
CSRCWindow::Destroy - Wait for m_hWndDestroyed completed
CSRCWindow::OnNcCreate
CSRCWindow::OnNcDestroy - Removed property from CSRCWindow 0x%08X (m_hWnd 0x%08X) 
CSRCWindow::OnPaint
CSRCWindow::ShowCursor
SrcWnd:this
CMessagePumpThread
CMessagePumpThread::m_lockWindow
termsrv\wms\src\common\srcwnd\messagepumpthread.cpp
CMessagePumpThread::ThreadProc - Entered, m_pWnd=0x%X.
CMessagePumpThread::ThreadProc
m_pWnd
CMessagePumpThread::ThreadProc Exiting - m_pWnd=0x%X (HWND 0x%X)
m_pWnd->GetWindowHandle() == NULL
hDefaultDesktop
CMessagePumpThread::ThreadProc SetThreadDesktop failed error %ul - m_pWnd=0x%X (HWND 0x%X)
CMessagePumpThread::CreateWnd
m_hWindowCreatedEvent != 0
m_hDefaultDesktop
termsrv\wms\src\common\srcwnd\wmsdesktop.cpp
m_cWmsDesktopRef == 0
CWmsDesktop::s_ForceSwitchDesktop
CWmsDesktop::s_ForceSwitchDesktop - Attempt %3d:  SwitchDesktop() returned error 0x%08X
CWmsDesktop::s_ForceSwitchDesktop - timed out waiting to dismiss secure desktop
CWmsDesktop::GetWmsDesktop - m_cWmsDesktopRef=%u 0x%IX
CWmsDesktop::GetWmsDesktop
m_hWmsDesktop
CWmsDesktop::GetWmsDesktop - Created desktop 0x%IX
m_hPreviousDesktop == NULL
m_hPreviousDesktop
m_cWmsDesktopRef != 0
(m_cWmsDesktopRef+1) != 0
m_cWmsDesktopRef == 1
CWmsDesktop::SwitchToPreviousDesktop
CWmsDesktop::SwitchToPreviousDesktop - Switching to previous desktop 0x%IX
CWmsDesktop::SwitchToPreviousDesktop - Switching to default desktop 0x%IX
CWmsDesktop::ReleaseWmsDesktop - m_cWmsDesktopRef=%u 0x%IX
CWmsDesktop::ReleaseWmsDesktop
CWmsDesktop::ReleaseWmsDesktop - Closing desktop 0x%IX
CInjectEscKeyThread
hDesktop
CInjectEscKeyThread::ThreadProc
termsrv\wms\src\common\srcutils\injectesckeythread.cpp
CInjectEscKeyThread::ThreadProc - Current desktop is %s
WinLogon
CInjectEscKeyThread::ThreadProc - detected a Winlogin desktop during Screen Lock. Injecting an <Esc> key
CInjectEscKeyThread::ThreadProc - SendInput() failed, gle = 0x%08X
OnWaitForRdvhResources
resourceName
error
vmJobState
vmErrorCode
vmErrorMessage
dwWmsVmReadyState
OnWaitForRdshResources
resourceName
error
assert
fileName
lineNumber
function
macro
message
version
assert
fileName
lineNumber
function
macro
message
hresult
version
Microsoft.Windows.RemoteDesktop.MultiPoint
Microsoft.Windows.RemoteDesktop.MultiPoint
Station.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
ImmDisableIME
Station.DLL
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
__CxxFrameHandler4
_wcsnicmp
_purecall
__C_specific_handler
_wcsicmp
memcpy_s
wcsstr
_vsnwprintf
wcscspn
wcsspn
swscanf_s
wcsncmp
_wtol
wcschr
_wcsdup
malloc
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
RegOpenKeyExW
RegQueryInfoKeyW
RegEnumValueW
RegCloseKey
RegQueryValueExW
RegOpenKeyW
RegEnumKeyW
RegGetValueW
EventRegister
EventUnregister
RegEnumKeyExW
RegCreateKeyExW
RegDeleteValueW
RegDeleteTreeW
RegSetValueExW
EventSetInformation
OpenSCManagerW
GetServiceDisplayNameW
CloseServiceHandle
EventWriteTransfer
RegSetKeyValueW
LookupAccountNameW
ADVAPI32.dll
DeleteObject
GetRgnBox
CreateRectRgn
CreateCompatibleDC
CreateCompatibleBitmap
SelectObject
DeleteDC
CreateSolidBrush
BitBlt
CreateBitmap
SetGraphicsMode
SetWorldTransform
GetObjectW
SetDIBitsToDevice
GetStockObject
Rectangle
CreatePen
MoveToEx
LineTo
SetTextAlign
SetTextColor
TextOutW
GDI32.dll
IsDebuggerPresent
GetLastError
InitializeSRWLock
AcquireSRWLockShared
TryAcquireSRWLockShared
GetCurrentThreadId
ReleaseSRWLockShared
AcquireSRWLockExclusive
TryAcquireSRWLockExclusive
ReleaseSRWLockExclusive
InitializeCriticalSection
DeleteCriticalSection
EnterCriticalSection
TryEnterCriticalSection
LeaveCriticalSection
CloseHandle
CreateThread
WaitForSingleObject
DeviceIoControl
SetEvent
ProcessIdToSessionId
GetCurrentProcessId
CreateFileW
CreateEventW
Sleep
ResetEvent
WaitForMultipleObjects
QueryPerformanceFrequency
QueryPerformanceCounter
OpenEventW
lstrcmpA
VirtualQuery
VirtualProtect
GetOverlappedResult
SetLastError
ReadFileEx
WaitForSingleObjectEx
SetThreadExecutionState
CancelIo
FreeLibrary
GetThreadId
ReleaseSemaphore
FormatMessageW
LocalFree
CreateSemaphoreW
GetSystemPowerStatus
GetLogicalDrives
WakeAllConditionVariable
SleepConditionVariableSRW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
GetSystemTimeAsFileTime
GetTickCount
KERNEL32.dll
CoCreateInstance
CoInitializeEx
CoUninitialize
CLSIDFromProgID
StringFromGUID2
CLSIDFromString
CoCreateGuid
CoCreateFreeThreadedMarshaler
CoMarshalInterThreadInterfaceInStream
CoGetInterfaceAndReleaseStream
CoTaskMemAlloc
CoTaskMemFree
ole32.dll
OLEAUT32.dll
GetSystemMetrics
MapVirtualKeyW
DestroyCursor
LoadCursorW
CopyImage
GetIconInfo
PostMessageW
RegisterDeviceNotificationW
UnregisterDeviceNotification
GetClassNameW
EnumWindows
GetDC
ReleaseDC
GetFocus
SetFocus
GetForegroundWindow
SetForegroundWindow
SetRect
IntersectRect
EqualRect
MonitorFromWindow
EnumDisplayDevicesW
EnumDisplaySettingsExW
ClientToScreen
ValidateRect
DefWindowProcW
ShowCursor
FillRect
DrawIconEx
ShowWindow
UpdateLayeredWindow
GetClientRect
MapWindowPoints
DestroyWindow
CreateWindowExW
SetWindowLongPtrW
GetWindowLongPtrW
GetClassInfoW
RegisterClassW
DestroyIcon
CreateIconIndirect
RegisterRawInputDevices
SetTimer
KillTimer
SendMessageW
ScreenToClient
SetWindowPos
MsgWaitForMultipleObjects
PeekMessageW
TranslateMessage
DispatchMessageW
LoadStringW
USER32.dll
HidD_FreePreparsedData
HidD_GetPreparsedData
HidP_GetUsagesEx
HidP_GetCaps
HidP_GetLinkCollectionNodes
HidP_GetValueCaps
HidP_GetButtonCaps
HidP_GetSpecificValueCaps
HidD_GetFeature
HidP_GetUsageValue
HidP_GetUsages
HidP_GetUsageValueArray
HidP_MaxUsageListLength
HID.DLL
UuidToStringW
RpcStringFreeW
UuidCompare
RPCRT4.dll
SetupDiGetClassDevsW
SetupDiEnumDeviceInfo
SetupDiDestroyDeviceInfoList
CM_Locate_DevNodeW
CM_Get_Child
CM_Get_Device_ID_Size
CM_Get_Device_IDW
CM_Get_Sibling
SetupDiCreateDeviceInfoList
SetupDiOpenDeviceInterfaceW
SetupDiGetDeviceInterfaceDetailW
SetupDiGetDevicePropertyW
SetupDiOpenDeviceInfoW
CM_Get_Parent
CM_Get_DevNode_Status
SetupDiEnumDeviceInterfaces
SETUPAPI.dll
StrStrIW
SHLWAPI.dll
PowerGetActiveScheme
PowerReadACValue
PowerReadDCValue
POWRPROF.dll
IncrementPerfCounter
DecrementPerfCounter
InitializePerfCounters
UninitializePerfCounters
PerfCounters.dll
GetScaleFactorForMonitor
SetProcessDpiAwareness
api-ms-win-shcore-scaling-l1-1-1.dll
wcsrchr
iswalpha
EventWrite
CreateWellKnownSid
LsaOpenPolicy
LsaNtStatusToWinError
LsaLookupNames2
LsaFreeMemory
LsaClose
EqualSid
CopySid
CheckTokenMembership
GetTokenInformation
OpenProcessToken
DuplicateToken
OpenThreadToken
InitializeAcl
AddAccessAllowedAce
AddAccessDeniedAce
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
LookupPrivilegeValueW
AdjustTokenPrivileges
InitiateSystemShutdownExW
CryptBinaryToStringW
CRYPT32.dll
CreateDIBSection
K32GetModuleBaseNameW
GetLocalTime
WriteFile
GetModuleFileNameW
GetVersionExW
GetSystemInfo
GetProcAddress
LocalAlloc
GetCurrentThread
LoadLibraryExW
GetProductInfo
TerminateThread
msi.dll
NetUserGetInfo
NetApiBufferFree
NetLocalGroupGetMembers
NETAPI32.dll
StringFromCLSID
CoImpersonateClient
CoRevertToSelf
GetRawInputData
FindWindowW
GetWindowLongW
SetWindowLongW
GetPropW
ShowWindowAsync
SetPropW
RemovePropW
BeginPaint
EndPaint
SetThreadDesktop
CloseDesktop
SwitchDesktop
CreateDesktopW
OpenInputDesktop
SHDeleteKeyW
LoadLibraryExA
RaiseException
HeapAlloc
GetProcessHeap
GetUserObjectInformationW
SendInput
memset
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Station Management
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
Station.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
Station.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
