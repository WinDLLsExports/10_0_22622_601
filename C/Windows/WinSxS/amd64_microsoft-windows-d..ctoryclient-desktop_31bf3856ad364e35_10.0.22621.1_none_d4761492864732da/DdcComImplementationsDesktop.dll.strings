!This program cannot be run in DOS mode.
Richq
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
\$ UH
M H1E
 H3E H3E
p:_0#
@SVWH
ntelA
ineID
oD$ f
oL$0f
oT$@f
o\$PH
t$ WH
qcPtE
fD94Fu
D$pE3
9|$pvR
;|$pr
qA[r@
VWAVH
9\$@u
9\$DD
PA^_^
UVWATAWH
H!]8A
H!]0E3
D$ E3
E8H!\$@H
H!]8E3
H!]0E3
H!\$0D
d$(!\$ H
ugH!\$@H
D$8E3
H!\$0H
d$(!\$ H
PA_A\_^]
!\$ H
L$(E3
!\$ H
UATAUAVAWH
A_A^A]A\]
t$ UWATAVAWH
D9d$(|
D$,D8%
t(D8%B
UVWAVAWH
D9|$(
t(D8=p
A_A^_^]
t:fA9(t4H
fA9,@u
x AVH
t$ UWAVH
x AVH
\$ UVWAVAWH
t,D8=*
L9{Hu
A_A^_^]
\$ VWAVH
D$0H;
u%H!\$8H
D$@E3
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
@A_A^A]A\_^]
L$ SUVWH
L$hH+
f9,Cu
(_^][
UVWATAUAVAWH
D$@H+
L$@fD
A_A^A]A\_^]
t$ WH
UVWATAUAVAWH
}HL9M@t
L97sKI
 A_A^A]A\_^]
t$ WATAUAVAWH
f9<Au
f9<Au
fD94Ou
tG9)u
|$(H;
|$0H;
|$8H;
|$HH;
|$pH;
t$XE3
t4E88t/H
E8<0u
 A_A^A]A\_
x AVH
uPH9i
L$ SVWH
L$ SVWAVH
(A^_^[
x UAVAWH
T$0H+
L$0fD
HcD$$HcL$ H
A_A^]
x AVH
VWAVH
@A^_^
H!]gH
H!]gH
D$DDtXH
@USWATAUAVAWH
EHt6H
EHt>H
t4A9~
t.HcC<
EPt>H
pA_A^A]A\_[]
x AVH
bad allocation
Fext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-0
ext-ms-win-devmgmt-policy-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-2
ext-ms-win-devmgmt-policy-l1-1-3
CPR(ppv)
onecoreuap\shell\devicedirectory\devicedirectoryclient\ddccomimplementationsdesktop\ddccomimplementationsdesktop.cpp
CPR(pCommandHandlerFactory)
CHR(pCommandHandlerFactory->QueryInterface(riid, ppv))
CPR(pTaskStateHandlerFactory)
CHR(pTaskStateHandlerFactory->QueryInterface(riid, ppv))
CHR(((HRESULT)0x80040111L))
Windows.Data.Json.JsonValue
JTk_S/
SYSTEM\CurrentControlSet\Control\Lsa\LockedDownSIDs
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\LostMode
EnableLostMode
LostModeMessage
CPR(ppvObject)
onecoreuap\shell\devicedirectory\devicedirectoryclient\ddccomimplementationsdesktop\ddccommandhandlerdesktop.cpp
CBR(pUnkOuter == nullptr)
CPR(pCommandHandler)
CHR(pCommandHandler->QueryInterface(riid, ppvObject))
CBR(pwszPin == nullptr)
CBR(pwszCpn == nullptr)
CBR(fRingAfterLock == 0)
CBR(vCids.size() == 1)
CHR(MdmEnumerateUsers(&vConnectedAdmins, nullptr, nullptr, 1))
CBR(std::find(vConnectedAdmins.begin(), vConnectedAdmins.end(), vCids.front()) != vConnectedAdmins.end())
CBR(IsWTSEnumerateSessionsExWPresent() && IsWTSLogoffSessionPresent() && IsWTSFreeMemoryPresent())
CHR(hrSignOut)
CHR(hrSidsLock)
CPR(pwszMessage)
CHR(MdmEnumerateUsers(&vConnectedAdminsCids, nullptr, nullptr, 1))
CHR(MdmGetSidsByConnectedCids(vConnectedAdminsCids, vConnectedAdminsSids))
CHR(MdmGetSidsByConnectedCids(vCids, vCallerSid))
CBR(vCallerSid.size() == 1)
CBR(std::find(vConnectedAdminsSids.begin(), vConnectedAdminsSids.end(), vCallerSid.front()) != vConnectedAdminsSids.end())
CHR(LockDeviceCritical(vCallerSid.front().c_str(), vConnectedAdminsSids))
CPR(pResourceId)
CHR(((HRESULT)0x80004001L))
<SessionStateChangeTrigger><StateChange>SessionUnlock</StateChange></SessionStateChangeTrigger><LogonTrigger />
CPR(pwszTrigger)
CPR(pcchTrigger)
CBR(*pcchTrigger >= 256)
CBR(wcscpy_s(pwszTrigger, *pcchTrigger, c_pwszTrigger) == 0)
\Microsoft\Windows\DeviceDirectoryClient
RegisterDeviceAccountChange
IntegrityCheck
RegisterDevicePeriodic24
RegisterDeviceLocationRightsChange
RegisterDeviceConnectedToNetwork
RegisterDeviceScreenOnOff
RegisterDevicePeriodic1
RegisterDevicePeriodic6
RegisterUserDevice
onecoreuap\shell\devicedirectory\devicedirectoryclient\ddccomimplementationsdesktop\ddctaskstatehandlerdesktop.cpp
CPR(pTaskStateHandler)
CHR(pTaskStateHandler->QueryInterface(riid, ppvObject))
CHR(DdcAccountHelper::EnumerateUsers(0, nullptr, nullptr, nullptr, &cAdmins, &cDeviceOwners, &cStandardUsers))
CHR(DdcDeviceInfoHelper::FmdDisabledByPolicy(&fFmdDisabledByPolicy))
CHR(taskSchedulerWrapper.Initialize())
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_PERIODIC_1_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_PERIODIC_6_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_CONNECTED_TO_NETWORK_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_SCREEN_ON_OFF_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_INTEGRITY_CHECK_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_PERIODIC_24_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_LOCATION_RIGHTS_CHANGE, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_ACCOUNT_CHANGE_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_REGISTER_USER_DEVICE_TASK, 0))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_INTEGRITY_CHECK_TASK, 1))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_ACCOUNT_CHANGE_TASK, 1))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_REGISTER_USER_DEVICE_TASK, 1))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_PERIODIC_24_TASK, 1))
CHR(taskSchedulerWrapper.EnableTaskIfExists(TASK_SCHEDULER_DIRECTORY_NAME, TASK_SCHEDULER_LOCATION_RIGHTS_CHANGE, 1))
CBR(0L == dwResult)
onecoreuap\shell\devicedirectory\devicedirectoryclient\lib\ddcregistry.cpp
CBR(lRet == 0L)
CBR(dwResult == 0L)
CHR(DeleteKey(hKeyRoot, pwszRegistryKey))
CHR(CreateKey(hKeyRoot, pwszRegistryKey, iter.c_str()))
bad array new length
Unknown exception
onecoreuap\shell\devicedirectory\devicedirectoryclient\lib\ddcaccounthelper.cpp
CHR(GetActivationFactory(HStringReference(RuntimeClass_Windows_Data_Json_JsonValue).Get(), pJsonValueStatics.GetAddressOf()))
CHR(MdmEnumerateUsers(&vAdmins, &vDeviceOwners, &vStandardUsers, fConnectedOnly))
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
WilError_03
onecoreuap\shell\devicedirectory\devicedirectoryclient\lib\ddcdeviceinfohelper.cpp
CHR(hr)
Local\SM0:%lu:%lu:%hs
onecoreuap\shell\devicedirectory\devicedirectoryclient\lib\ddctaskschedulerwrapper.cpp
CHR(CoCreateInstance(CLSID_TaskScheduler, 0, CLSCTX_INPROC_SERVER, IID_ITaskService, (PVOID*)&pTaskService))
CHR(pTaskService->Connect(vtEmpty, vtEmpty, vtEmpty, vtEmpty))
CPR(pwszTaskName)
CPR(bszTaskFolder)
CPR(bszTaskName)
CHR(m_pTaskService->GetFolder(bszTaskFolder, pTaskFolder.GetAddressOf()))
CHR(pRegisteredTask->put_Enabled(fEnabled ? ((VARIANT_BOOL)-1) : ((VARIANT_BOOL)0)))
TraceIntegrityCheckResult
AdminsCount
StandardUsersCount
FmdDisabledByPolicy
HRESULT
Microsoft.Windows.DeviceDirectoryClient
RSDS?L"
DdcComImplementationsDesktop.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
HNJNLNNNPNRJTJVJXNZJ\ 
WTSEnumerateSessionsExW
WTSLogoffSession
WTSFreeMemory
DdcComImplementationsDesktop.dll
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
_initterm
_initterm_e
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__register_onexit_function
_o__seh_filter_dll
_o_free
_o_malloc
_o_wcscpy_s
__C_specific_handler
__CxxFrameHandler3
memset
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
DisableThreadLibraryCalls
EventWriteTransfer
GetLastError
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
InitializeSListHead
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
IsDebuggerPresent
UnhandledExceptionFilter
SetUnhandledExceptionFilter
IsProcessorFeaturePresent
GetModuleHandleW
GetCurrentProcess
TerminateProcess
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
MdmGetSidsByConnectedCids
MdmEnumerateUsers
MdmCommon.DLL
RegOpenKeyExW
RegCloseKey
RegCreateKeyExW
RegSetValueExW
RegDeleteTreeW
RegDeleteValueW
RaiseException
WindowsCreateStringReference
RoGetActivationFactory
FormatMessageW
HeapAlloc
GetProcessHeap
HeapFree
GetModuleHandleExW
GetModuleFileNameA
DebugBreak
GetProcAddress
OutputDebugStringW
SetLastError
CloseHandle
ReleaseSemaphore
ReleaseMutex
WaitForSingleObjectEx
CoCreateInstance
WaitForSingleObject
OpenSemaphoreW
FreeLibrary
CreateMutexExW
CreateSemaphoreExW
ApiSetQueryApiSetPresence
VirtualProtect
LoadLibraryExA
ReleaseSRWLockExclusive
AcquireSRWLockExclusive
GetSystemInfo
VirtualQuery
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
OLEAUT32.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
MdmIsFindMyDeviceEnabled
memcpy
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVtype_info@@
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
DdcComImplementationsDesktop
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
DdcComImplementationsDesktop
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
DdcComImplementationsDesktop.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
