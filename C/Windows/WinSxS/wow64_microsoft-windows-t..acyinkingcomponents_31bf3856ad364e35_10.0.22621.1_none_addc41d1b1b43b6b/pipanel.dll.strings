!This program cannot be run in DOS mode.
RichM
.text
@.rsrc
.rdata
.rdata$voltmd
.rdata$zzzdbg
.rsrc$01
.rsrc$02
TEXTINCLUDE
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Tablet PC Component
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
Dummy.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
Dummy.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
1 TYPELIB "PenInputPanel.tlb"
2 TYPELIB "TipAutoComplete.tlb"
stdole2.tlbWWWdG
vPenInputPanelLib
DISPID_PenInputPanel
DISPID_PIPAttachedEditWindow
0iTDISPID_PIPFactoidWWW
DISPID_PIPCurrentPanelWW
DISPID_PIPDefaultPanelWW
0 BDISPID_PIPVisibleWWW
DISPID_PIPTopWWW
DISPID_PIPLeftWW
DISPID_PIPWidthW
0Y2DISPID_PIPHeight
WDISPID_PIPMoveTo
DISPID_PIPCommitPendingInput
DISPID_PIPRefreshWWW
DISPID_PIPBusyWW
nDISPID_PIPVerticalOffset
0'iDISPID_PIPHorizontalOffsetWW
DISPID_PIPEnableTsfW
DISPID_PIPAutoShowWWd
DISPID_PenInputPanelEventsWWd
:DISPID_PIPEVisibleChangedWWWd
DISPID_PIPEPanelChangedWd
DISPID_PIPEInputFailedWWd
DISPID_PIPEPanelMovingWW
VisualStateW
InPlaceW
0*DFloating
DockedTopWWW
*DockedBottom
ClosedWW,
8%WInteractionModeW
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0001WW
OInteractionMode_InPlaceW
InteractionMode_Floating
InteractionMode_DockedTopWWW
InteractionMode_DockedBottom
InPlaceStateX
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0002WWX
%InPlaceState_AutoWWWX
gInPlaceState_HoverTargetX
0=cInPlaceState_ExpandedWWW
PanelInputAreaWW 
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0003WW 
5PanelInputArea_AutoW 
YPanelInputArea_KeyboardW 
nPanelInputArea_WritingPadWWW 
PanelInputArea_CharacterPadW
gCorrectionModeWW
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0004WW
CorrectionMode_NotVisibleWWW
CorrectionMode_PreInsertionW
CorrectionMode_PostInsertionCollapsedWWW
$0dvCorrectionMode_PostInsertionExpandedL
CorrectionPositionWW
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0005WW
rCorrectionPosition_AutoW
7CorrectionPosition_BottomWWW
CorrectionPosition_TopWW
InPlaceDirectionx
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0006WWx
:InPlaceDirection_AutoWWWx
0*`InPlaceDirection_BottomWx
InPlaceDirection_Top
EventMaskWWW@
;__MIDL___MIDL_itf_peninputpanel_0000_0000_0007WW@
EventMask_InPlaceStateChangingWW@
,EventMask_InPlaceStateChangedWWW@
0$8EventMask_InPlaceSizeChangingWWW@
0,iEventMask_InPlaceSizeChanged@
EventMask_InputAreaChangingW@
EventMask_InputAreaChangedWW@
EventMask_CorrectionModeChanging@
EventMask_CorrectionModeChangedW@
#0ekEventMask_InPlaceVisibilityChangingW@
hEventMask_InPlaceVisibilityChangedWW@
EventMask_TextInsertingW@
EventMask_TextInsertedWW@
EventMask_AllWWW
IPenInputPanelWW
FactoidW
AttachedEditWindowWW
PanelTypeWWW
PT_DefaultWW
PT_InactiveW
PT_HandwritingWW
PT_KeyboardW
wCurrentPanel
DefaultPanel
pDefaultPanelWWW
VisibleW
{Left
hNWidthWWW
HeightWW
VerticalOffsetWW
HorizontalOffset
AutoShow
pAutoShowWWW
MoveToWW
CommitPendingInputWW
RefreshW
JcEnableTsfWWW
 EnableWWl
_IPenInputPanelEventsWWWl
InputFailedW
ShiftKeyl
lVisibleChangedWW
NewVisibilityWWWl
PanelChanged
NewPanelTypel
PanelMovingW
IHandwrittenTextInsertionWWW
InsertRecognitionResultsArrayWWW
<psaAlternatesWWW(#
localeWW
sfAlternateContainsAutoSpacingInformation4
8hrIInkRecognitionResultWWW4
TopStringWWW
IInkRecognitionAlternate
StringWW
fRecoStringWW
InkRecognitionConfidence
IRC_StrongWW
IRC_Intermediate
IRC_Poor
ZConfidenceWW
Baseline
MidlineW
pAscender
DescenderWWW
LineNumberWW`
IInkStrokesW`
0vCountWWW`
xA_NewEnum
IInkDisp
TStrokesW(
8q>IInkExtendedPropertiesWW
IInkExtendedProperty
;Data(
zItem
IdentifierWW(
rAddW
InkExtendedPropertyW(
RemoveWW(
ClearWWW(
DoesPropertyExistWWW
ExtendedPropertiesWW
PropertiesWW
VDirtyWWW
IInkCustomStrokesWWW
CustomStrokesWWW
ppunkInkCustomStrokesWWWT
8\QInkBoundingBoxModeWWT
IBBM_DefaultT
IBBM_NoCurveFitWT
IBBM_CurveFitWWWT
IBBM_PointsOnlyWT
IBBM_UnionWW
IInkRectangleWWW
UnitsWWW
H{BottomWW
RightWWW
tagRECTW
GetRectangle
>SetRectangle
YGetBoundingBoxWW
BoundingBoxModeW
4!RectangleWWW
DeleteStrokesWWW
8ybIInkStrokeDispWW
]IDWW
BezierPoints
PointsWW
IInkDrawingAttributesWWW
2FColorWWW
CurrentColor
CurrentWidth
,1CurrentHeightWWW
FitToCurveWW
IgnorePressureWW
AntiAliasedW
Transparency
uCurrentTransparencyWH
InkRasterOperationWWH
IRO_BlackWWWH
IRO_NotMergePenWH
IRO_MaskNotPenWWH
IRO_NotCopyPenWWH
IRO_MaskPenNotWWH
pIRO_NotWH
uIRO_XOrPenWWH
IRO_NotMaskPenWWH
IRO_MaskPenWH
IRO_NotXOrPenWWWH
0$IIRO_NoOperationWH
IRO_MergeNotPenWH
{IRO_CopyPenWH
IRO_MergePenNotWH
IRO_MergePenH
IRO_WhiteWWW
RasterOperationW
CurrentRasterOperationWW
8zlInkPenTipWWW
IPT_Ball
IPT_RectangleWWW
bPenTipWW
CurrentPenTipWWW
CloneWWW
92DrawingAttributesWWW
DrawAttrsWWW
PolylineCuspsWWW
CuspsWWW
BezierCuspsW
,SelfIntersectionsWWW
IntersectionsWWW
PacketCountW
plCountW
PacketSizeWW
plSizeWW
PacketDescriptionWWW
[gDeletedW
FindIntersectionsWWW
GetRectangleIntersectionsWWW
u,HitTestCircleWWW
VRadiusWW
u'IntersectsWW
NearestPoint
'Distance
PointWWW
)SplitWWW
SplitAtW
KNewStrokeWWW
8.?TabletPropertyMetricUnit
jTPMU_Default
TPMU_InchesW
TPMU_Centimeters
TPMU_Degrees
TPMU_Radians
TPMU_Seconds
TPMU_PoundsW
TPMU_GramsWW
GetPacketDescriptionPropertyMetricsW
PropertyName
MinimumW
MaximumW
ResolutionWW
GetPointsWWW
IndexWWW
SetPointsWWW
NumberOfPointsSetWWW
GetPacketDataWWW
PacketDataWW
UGetPacketValuesByPropertyWWW
PacketValues
SetPacketValuesByPropertyWWW
HbstrPropertyName
NumberOfPacketsSetWW
GetFlattenedBezierPoints
zFittingError
JFlattenedBezierPointsWWWt
IInkTransformWWWt
>ResetWWWt
g_TranslateWWW
HorizontalComponentW
{VerticalComponentWWWt
RotateWW
rGDegreesWt
pReflectW
Horizontally
VerticallyWWt
ShearWWWt
NScaleTransformWW
HorizontalMultiplier
VerticalMultiplierWWt
pGetTransformt
;eM11t
;eM12t
;eM21t
;eM22t
eDxWt
eDyWt
%SetTransform
KValueWWW
[XFORMWWW<
?tagXFORM
TransformWWW
ApplyOnPenWidthW
ScaleToRectangle
>yMove
DeleteStroke
/StrokeWW
InkExtractFlagsW
IEF_CopyFromOriginal
0f$IEF_RemoveFromOriginalWW
0}nIEF_DefaultW
ExtractStrokesWW
ExtractFlags
bExtractedInk
ExtractWithRectangle
(NewInkWW
HitTestWithRectangle
7SelectionRectangleWW
HIntersectPercent
HitTestWithLasso
ZLassoPointsW
PointOnStrokeWWW
m DistanceFromPacketWW
nCreateStrokesWWW
StrokeIdsWWW
AddStrokesAtRectangleWWW
SourceStrokesWWW
qTargetRectangleW
InkPersistenceFormat
DIPF_InkSerializedFormatW
IPF_Base64InkSerializedFormatWWW
IPF_GIFW
IPF_Base64GIFWWWh
InkPersistenceCompressionModeWWWh
IPCM_Defaulth
IPCM_MaximumCompressionWh
/IPCM_NoCompressionWW
PersistenceFormatWWW
CompressionModeW
CreateStroke
jInkClipboardFormatsW
ICF_None
ICF_InkSerializedFormatW
ICF_SketchInkWWW
ICF_TextInkW
ICF_EnhancedMetafile
ICF_Metafile
ICF_BitmapWW
ICF_PasteMaskWWW
cICF_CopyMask
0Q{ICF_DefaultW0
InkClipboardModesWWW0
ICB_Copy0
xICB_CutW0
0yfICB_ExtractOnlyW0
ICB_DelayedCopyW0
ICB_DefaultW
IDataObjectW
tagFORMATETC\
8ppwireCLIPFORMATWW
_userCLIPFORMATW
cfContext$
Z__MIDL_IWinTypes_0001WWW$
]dwValueW$
vpwszName
cfFormat
8DFtagDVTARGETDEVICEWWW
tdSizeWW
S!tdDriverNameOffsetWW
f?tdDeviceNameOffsetWW
LItdPortNameOffset
tdExtDevmodeOffsetWW
tdDataWW
dwAspect
lindexWW
tymedWWW
wireSTGMEDIUMWWWP
X_userSTGMEDIUMWW
_STGMEDIUM_UNION
D__MIDL_IAdviseSink_0003W|
A_userHMETAFILEPICTWW
Z__MIDL_IWinTypes_0005WWW
JhInprocWD
_remoteMETAFILEPICTWD
C^mmWWD
xExtD
qyExt
8_D_userHMETAFILEWW
Z__MIDL_IWinTypes_0004WWWp
T_BYTE_BLOBWWp
clSizeWWp
<abDataWW
hRemoteW
&hInproc64WWWD
}hMetaFilePictWWW
_userHENHMETAFILEWWW8
Z__MIDL_IWinTypes_0006WWW
hHEnhMetaFileWWW
8hg_GDI_OBJECTW
ObjectTypeWW
D__MIDL_IAdviseSink_0002Wd
"_userHBITMAP
Z__MIDL_IWinTypes_0007WWW,
_userBITMAPW,
\bmTypeWW,
bmWidthW,
bmHeight,
bmWidthBytes,
BbmPlanes,
bmBitsPixelW,
,*cbSizeWW,
pBufferW
hBitmapW
88f_userHPALETTEWWW
Z__MIDL_IWinTypes_0008WWWX
tagLOGPALETTEWWWX
palVersionWWX
palNumEntriesWWW
atagPALETTEENTRYW
peRedWWW
4peGreenW
peBlueWW
peFlagsWX
spalPalEntryW
hPalette 
2_userHGLOBAL
Z__MIDL_IWinTypes_0003WWW
i_FLAGGED_BYTE_BLOBWW
 fFlagsWW
.hGeneric
hGdiHandleWW
hGlobalW
lpszFileName
pstgP
DUMMYUNIONNAMEWWP
pUnkForReleaseWW
RemoteGetDataWWW
+pformatetcIn
%pRemoteMediumWWW
,RemoteGetDataHereWWW
&pformatetcWW
QueryGetData
R(GetCanonicalFormatEtcWWW
ZfpformatectIn
pformatetcOutWWWL
{wireFLAG_STGMEDIUMWW
h_userFLAG_STGMEDIUMW
ContextFlags
YfPassOwnershipWW
StgmedWW
RemoteSetDataWWW
pmediumW
6VfRelease
IEnumFORMATETCWW
RemoteNextWW
rgeltWWW
pceltFetched
ppenumWW
EnumFormatEtcWWW
dwDirectionW
ppenumFormatEtcWx
fIAdviseSinkW
8:=wireASYNC_STGMEDIUMWx
RemoteOnDataChangeWW
PxpStgmedWx
]_RemoteOnViewChangeWW@
rIMoniker
IPersistStreamWW
8V>IPersist
AGetClassIDWW
!0pClassID
ZIsDirtyWl 
8Q$IStreamW
83GISequentialStreamWWW
RemoteReadWW
^pvWW
\cbWW
g-pcbReadW
RemoteWriteW
pcbWrittenWW4!
_LARGE_INTEGERWW4!
QuadPart
_ULARGE_INTEGERWl 
RemoteSeekWW
dlibMove
dwOrigin
plibNewPositionWl 
Y3SetSizeW
zlibNewSizeWWl 
&RemoteCopyTol 
CommitWW
grfCommitFlagsWWl 
nRevertWWl 
N!LockRegionWW
(libOffsetWWW
dwLockTypeWWl 
UnlockRegion
tagSTATSTGWW
pwcsName
type`"
_FILETIMEWWW`"
dwLowDateTimeWWW`"
dwHighDateTimeWW
mtimeWWW
ctimeWWW
atimeWWW
grfModeW
grfLocksSupportedWWW
clsidWWW
grfStateBits
reservedl 
2Stat
pstatstg
&rgrfStatFlagW
ppstmWWW
\sfClearDirtyW
9GetSizeMaxWW
pcbSizeW
8c/IBindCtx
RegisterObjectBoundW
RevokeObjectBoundWWW
_+ReleaseBoundObjectsW(#
tagBIND_OPTS2WWW(#
cbStruct(#
%hgrfFlags(#
dwTickCountDeadlineW(#
dwTrackFlags(#
dwClassContextWW
_COSERVERINFOWWW
@dwReserved1W
_COAUTHINFOW
YdwAuthnSvcWW
dwAuthzSvcWW
$pwszServerPrincNameW
dwAuthnLevel
dwImpersonationLevelT$
O_COAUTHIDENTITYWT$
UserT$
UserLengthWWT$
DomainWWT$
DomainLengthT$
PasswordT$
?PasswordLengthWWT$
oFlagsWWW
pAuthIdentityDataWWW
^dwCapabilitiesWW
pAuthInfoWWW
@dwReserved2W(#
pServerInfoW
RemoteSetBindOptions
pbindoptsWWW
RemoteGetBindOptions
8xQIRunningObjectTableW
Register
lpunkObjectWW
+pmkObjectNameWWW
pdwRegisterW
RevokeWW
dwRegisterWW
~IsRunningWWW
GetObjectWWW
appunkObjectW
NoteChangeTimeWW
pfiletimeWWW
GetTimeOfLastChangeW
IEnumMoniker
EnumRunningW
ppenumMonikerWWW
LGetRunningObjectTableWWW
pprotWWW
RegisterObjectParamW
qpszKeyWW
GetObjectParamWW
ppunkWWW
IEnumStringW
EnumObjectParamW
RevokeObjectParamWWW@
/RemoteBindToObjectWW
pmkToLeftWWW
riidResultWW
k:ppvResultWWW@
"XRemoteBindToStorageW
3riid
ppvObjWW@
ReduceWW
[dwReduceHowFarWW
ppmkToLeftWW
ppmkReducedW@
ComposeWithW
?pmkRight
fOnlyIfNotGenericWWW
ppmkCompositeWWW@
ZFEnum
fForward@
w'IsEqualW
epmkOtherMonikerW@
QHash
pdwHashW
pmkNewlyRunningW@
InverseW
ppmk@
CommonPrefixWith
pmkOther
bxppmkPrefixWW@
RelativePathToWW
ppmkRelPathW@
=GetDisplayNameWW
ppszDisplayNameW@
ParseDisplayName
hrpszDisplayNameWW
;pchEaten
ZppmkOutW@
FIsSystemMonikerW
pdwMksysx
4RemoteOnRenameWW
pmkWx
RemoteOnSavex
k{RemoteOnCloseWWW
eDAdviseWH&
advfH&
pAdvSink
pdwConnectionWWW
DUnadviseWWWH&
dwConnection
IEnumSTATDATAWWWH&
tagSTATDATAWH&
x\formatetcWWW
EnumDAdviseW
U]ppenumAdvise
8 ClipboardCopyWithRectangleWW
2ClipboardFormats
ClipboardModesWW
DataObjectWW
{ClipboardCopyWWW
CanPaste
 ClipboardPasteWW`
RecognitionResultWWW`
ToString
a9InkStrokeWWW`
AddStrokesWW
InkStrokesWW`
}RemoveStrokesWWW`
ModifyDrawingAttributesW
BoundingBoxW`
RemoveRecognitionResultW
IInkRecognitionAlternatesWWW
InkRecoAlternate
=LineAlternatesWW
!ConfidenceAlternates
GetStrokesFromStrokeRangesWW
S-GetStrokesFromTextRangeW
e|selectionStartWW
kselectionLengthW
GetTextRangeFromStrokesW
AlternatesWithConstantPropertyValues
PropertyType
yGetPropertyValue
@PropertyValueWWW4
TopAlternate4
TopConfidenceWWW4
%aAlternatesFromSelectionW
XmaximumAlternatesWWW4
ModifyTopAlternateWW
AlternateWWW4
ASetResultOnStrokesWW
InsertInkRecognitionResultWW
pIInkRecoResultW
HandwrittenTextInsertiont'
PenInputPanelWWW
ITextInputPanelEventSink
InPlaceStateChanging
ZoldInPlaceStateW
j.newInPlaceStateW
lInPlaceStateChangedW
hInPlaceSizeChangingW
oldBoundingRectangle
newBoundingRectangle
4InPlaceSizeChangedWW
InputAreaChangingWWW
oldInputArea
M;newInputArea
YInputAreaChanged
q:CorrectionModeChangingWW
oldCorrectionModeWWW
newCorrectionModeWWW
CorrectionModeChangedWWW
4)InPlaceVisibilityChangingWWW
oldVisibleWW
newVisibleWW
z"InPlaceVisibilityChanged
TextInsertingWWW
TextInserted<(
ITextInputPanelW
wireHWND
_RemotableHandleh)
Z__MIDL_IWinTypes_0009WWW<(
CurrentInteractionModeWW<(
DefaultInPlaceStateW
StateWWW<(
CurrentInPlaceStateW<(
DefaultInputArea
BArea<(
CurrentInputArea<(
<CurrentCorrectionModeWWW
vMode<(
PreferredInPlaceDirectionWWW
&DirectionWWW<(
\xExpandPostInsertionCorrectionWWW
$dExpandWW<(
TInPlaceVisibleOnFocusWWW<(
[InPlaceBoundingRectangle
BoundingRectangleWWW<(
PopUpCorrectionHeightWWW<(
PopDownCorrectionHeightW<(
SetInPlaceVisibility<(
SetInPlacePositionWW
YxPositionWWW
yPositionWWW
position<(
SetInPlaceHoverTargetPositionWWW<(
pAdviseWW
|EventSinkWWW<(
Unadvise
hIInputPanelWindowHandleW
~oAttachedEditWindow32
oAttachedEditWindow640*
ITextInputPanelRunInfoWW0*
IsTipRunning
pfRunningWWW
TextInputPanelWW
PenInputPanel_InternalWW
Microsoft PenInputPanel 1.7WWWL
The PenInputPanel allows you to add in-place pen input to your applications.WWf
Retrieves a Boolean value that specifies whether the PenInputPanel object is currently processing ink.f
Returns or sets the factoid that a recognizer uses to constrain its search for the recognition result._
Sets or retrieves the window handle of the object that the PenInputPanel object is attached to.WWWu
Specifies that the PenInputPanel object displays the last panel type used for any pen input panel in any application.W>
Specifies that the PenInputPanel object does not accept input.n
Specifies that the PenInputPanel object displays the default handwriting panel for the current input language.k
Specifies that the PenInputPanel object displays the default keyboard panel for the current input language.WWWJ
Defines the type of input currently available in the PenInputPanel object.I
Sets or retrieves which panel is currently active in the pen input panel.WF
Sets or retrieves which panel shows in the pen input panel by default.@
Sets or retrieves the visible state of the PenInputPanel object.WWG
Retrieves the vertical location of the top edge of the pen input panel.WWWJ
Retrieves the horizontal location of the left edge of the pen input panel.A
Retrieves the width of the pen input panel in client coordinates.WB
Retrieves the height of the pen input panel in client coordinates.
Sets or retrieves the offset between the closest horizontal edge of the pen input panel and the closest horizontal edge of the control to which it is attached.WWW
Sets or retrieves the offset between the left edge of the pen input panel and the left edge of the control to which it is attached.WWWp
Sets or retrieves a Boolean value that specifies if the pen input panel appears when focus is set using the pen.WWJ
Sets the position of the PenInputPanel object to a static screen position.&
Sends collected ink to the recognizer.'
Forces a complete repaint of a control.WWW
When passed TRUE, the PenInputPanel object attempts to send text to the attached control through the Text Services Framework (TSF) and enables the use of the correction user interface.WW
PenInputPanel Event InterfaceWx
Occurs when input focus changes before the PenInputPanel object was able to insert user input into the attached control.WW@
Occurs when the PenInputPanel object has shown or hidden itself.WW=
Occurs when the PenInputPanel object changes between layouts.W/
Occurs when the PenInputPanel object is moving.WWW#
IHandwrittenTextInsertion interfaceWWW
IInkRecognitionResult InterfaceWWW)
Represents the result of the recognition.W"
IInkRecognitionAlternate Interface+
Returns the result string of the alternate.WWW
Returns the level of confidence - strong, intermediate, or poor - that a recognizer has in the recognition of a RecognitionAlternate object or of a gesture.WWS
Returns the baseline of a RecognitionAlternate object that exists on a single line.WWWS
Returns the midline for a RecognitionAlternate object that exists on a single line.WWWX
Returns the ascender line of a RecognitionAlternate object that exists on a single line.WWY
Returns the descender line of a RecognitionAlternate object that exists on a single line.W?
Returns the line number of the ink that makes up the alternate.WWW
IInkStrokes InterfaceWM
Contains the collection of Stroke objects that represent a single ink stroke.W
property _NewEnumW
IInkDisp Interface
property Strokes collectionWWW 
IInkExtendedProperties InterfaceWWk
Contains the ExtendedProperty objects that represent application-defined data that is stored with a stroke.WWW!
Enumerate next item in PropertiesW
IInkExtendedProperty Interfacef
Represents the ability to add your own data to a variety of objects within the Tablet PC object model.
Property's dataWWWP
Specifies the object or collection to return at the given index in a collection.WWP
Specifies the extended property to add to the collection of extended properties.WW>
Specifies the extended property to remove from the collection.?
Specifies the extended properties to clear from the collection.WWWY
Specifies whether an extended property exists within a collection of extended properties.W&
property ExtendedProperties collection
Dirty property   W
IInkCustomStrokes InterfaceWWW:
Contains a collection of user-defined Strokes collections.O
Specifies the collection of strokes to add to the collection of custom strokes.WWW]
Specifies the stroke or collection of strokes to remove from the given collection of strokes.WS
Specifies that all custom strokes be cleared from the collection of custom strokes.WWW
property CustomStrokes
Use the definition of each stroke (polyline or Bezier) to calculate the bounding box; includes the drawing attributes, such as pen width, in the calculation.W
Use the polyline of the strokes (ignore Bezier curve fitting requests) to calculate the bounding box; includes the drawing attributes in the calculation.W
Use the Bezier curve fitting line of the strokes (apply Bezier curve fitting to all strokes) to calculate the bounding box; includes the drawing attributes in the calculation.WWWA
Use only the points of the strokes to calculate the bounding box.W9
The union of a NoCurveFit request and a CurveFit request.W<
Represents the collected strokes of ink within an ink space.WW
IInkRectangle InterfaceWWW6
Represents access to a rectangle for Automation users.=
Returns or sets the left position of the InkRectangle object.W?
Returns or sets the bottom position of the InkRectangle object.WWW>
Returns or sets the right position of the InkRectangle object./
Returns or sets access to the rectangle struct.WWWM
Specifies (returns) the elements of the InkRectangle object in a single call.WJ
Specifies (sets) the elements of the InkRectangle object in a single call.
BoundingBox propertyWW
DeleteStrokes methodWW
IInkStrokeDisp InterfaceWW
Represents a single ink stroke.WWW
property BezierPointsW
IInkDrawingAttributes InterfaceWWW@
Represents the objects that are applied to ink when it is drawn.WWY
Returns or sets the width of the pen when drawing ink with this DrawingAttributes object.WZ
Returns or sets the height of the pen when drawing ink with this DrawingAttributes object.
Returns or sets the value that specifies whether Bezier smoothing is used to render ink; this means that ink will be rendered as a series of curves instead of as lines between pen sample points.
Returns or sets the value that specifies whether drawn ink will automatically get wider with increased pressure of the pen tip on the tablet surface.W
Returns or sets the value that specifies whether the foreground and background colors along the edge of the ink are blended to increase the smoothness of an ink stroke.WW4
Returns or sets the transparency value of drawn ink.WW
Black pen color.WW
Inverse of MergePen.WWT
Combination of the colors common to the background color and the inverse of the pen.WW
Inverse of CopyPen.WWWP
Combination of the colors common to both the pen and the inverse of the display.WW
Inverse of the display color.WO
Combination of the colors in the pen and in the display color, but not in both.WWW
Inverse of MaskPen.WWWA
Combination of the colors common to both the pen and the display.W
Inverse of XOrPen.+
No operation; the output remains unchanged.WWWB
Combination of the display color and the inverse of the pen color.
Pen color.B
Combination of the pen color and the inverse of the display color.3
Combination of the pen color and the display color.WWW
White pen color.WW=
Defines values for performing raster operations on drawn ink.Wq
Returns or sets how the pen color interacts with the existing background colors on the display when ink is drawn.W
Round pen tip.
Rectangular pen tip.WWH
Defines values that specify whether the pen tip is round or rectangular.WWk
Returns or sets the pen tip to use, ball or rectangle, when drawing ink with this DrawingAttributes object.WWWG
Returns the collection of application-defined data stored in an object.WWW-
Specifies the creation of a duplicate object.W
property DrawingAttributes
Ink propertyWW
ExtenedProperties collectionWW
Polyline Cusps propertyWWW
Bezier Cusps propertyW
Self Intersections propertyWWW
PacketCount propertyWW
PacketSize propertyWWW
PacketDescription property
Deleted propertyWW
method FindIntersectionsWW 
method GetRectangleIntersectionsWW
method ClipWWW
method HitTestCircleWW
method NearestPointWWW
method SplitWW*
GetPacketDescriptionPropertyMetrics method
method GetPointsWW
method SetPointsWW
method GetPacketDataWW 
method GetPacketValuesByPropertyWW 
method SetPacketValuesByPropertyWW
method GetFlattenedBezierPointsWWW
IInkTransform InterfaceWWWK
Represents a 3x3 matrix that, in turn, represents an affine transformation.WWW9
Specifies the translation to apply to the view transform.W
Specifies the amount, measured in degrees, to rotate the ink in the view transform around the specified point, or if no point is specified, the origin.WWWA
Specifies reflection in either horizontal or vertical directions.WN
Shears the stroke or strokes by the specified horizontal and vertical factors.5
Specifies the X and Y factors to scale the transform.W"
Gets the InkTransform member data."
Sets the InkTransform member data.
Returns or sets the element in the first row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the first row, second column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, first column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, second column of the affine transform matrix represented by an InkTransform object.
Returns or sets the element in the third row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the third row, second column of the affine transform matrix represented by an InkTransform object.W6
Returns or sets access to the XFORM struct (C++ only).
Transform methodWW
ScaleToRectangle methodWWW
Move methodWWW
Rotate methodW
Shear methodWW
ScaleTransform methodW
DeleteStroke methodWWW&
The ink is copied from the Ink object.#
The ink is cut from the Ink object.WWWQ
Defines values that determine what part of a stroke to remove from an Ink object.W
ExtractStrokes methodW
ExtractWithRectangle methodWWW
Clip methodWWW
Clone methodWW
HitTestCircle method W
HitTestWithRectangle methodWWW
method HitTestWithLassoWWW
CreateStrokes methodWW
AddStrokesAtRectangle methodWWB
Specifies that ink be persisted using Ink Serialized Format (ISF).G
Specifies that ink be persisted by encoding the ISF as a base64 stream.WWWi
Specifies that ink be persisted using a GIF file that contains ISF as meta-data embedded within the file.WH
Specifies that ink be persisted by using a base64 encoded fortified GIF.WW1
Defines values that specify how ink is persisted.WU
Provides the best tradeoff between save-time and storage for the typical application.WS
Use when minimizing storage space is more important than how fast the ink is saved.WWW
Use when save-time is more important than the amount of storage space used and when compatibility between versions is important.WW\
Defines values for the compression modes used to save the Ink object to a serialized format.WW
Save methodWWW
Load methodWWW
CreateStroke methodWWWW
Flag that can be used to verify whether any formats are present by checking against it.WWW^
Specifies that ink is not expected to form words, but rather will be interpreted as a picture.-
Specifies that ink be expected to form words.WA
Specifies the enhanced metafile to play to create the background.Wl
Specifies that ink be stored as a metafile, or a list of commands that can be played back to draw a graphic.WW.
Specifies the bitmap to use as the background.R
Specifies the formats that can be used for pasting, including tInk, sInk, and ISF.F
Specifies the formats that can be copied to the clipboard through Ink.+
Specifies that ink be stored as a CopyMask.WWWN
Defines values that specify the format of ink that is stored on the clipboard.
Copy the ink to the clipboard.)
Cut the ink and copy it to the clipboard.W%
Do not copy the ink to the clipboard.W~
Use delayed rendering to reduce the amount of data stored on the clipboard; the data is rendered when a paste request is made.%
Specifies that the Copy mode be used.W>
Defines values that specify the copy options of the clipboard.
ClipboardCopyWithRectangle
ClipboardCopyW
CanPasteWW
ClipboardPaste=
Returns the Ink object that contains a collection of strokes.W9
Returns the recognition result of the Strokes collection.WE
For a Strokes collection, returns the recognized text of the strokes.W
Item methodWWW7
Specifies the stroke to add to a collection of strokes.WWWF
Specifies the collection of strokes to add to a collection of strokes.M
Specifies the given Strokes collection to remove from the Strokes collection.WR
Specifies the drawing attributes of all of the strokes in a collection of strokes.
method GetBoundingBoxW
Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.W]
Specifies the stroke or collection of strokes to be scaled to fit in the specified rectangle.WE
Removes the RecognitionResult associated with the Strokes collection.W
property StrokesWW#
IInkRecognitionAlternates InterfaceWWWG
Returns the number of objects or collections contained in a collection.WWWb
Returns the collection of alternates where each alternate in the collection is on a separate line.
Returns the collection of alternates where each alternate in the collection consists of the segments with the same property values.WWW
Specifies the smallest collection of strokes that contains a given input collection of strokes, and for which the recognizer can provide alternates.WW
Returns the strokes that correspond to the smallest RecognitionAlternates collection that contains a specified range of recognized text within the alternate.W
Specifies the smallest range of recognized text for which the recognizer can return an alternate that contains a given collection of strokes.Wn
Specifies the collection of alternates that have the same value as this alternate for the given property type.o
Specifies the value of a given property of the alternate, such as the recognizer's confidence in the alternate.WWW5
Returns the best alternate of the recognition result.W\
Returns the level of confidence - strong, intermediate, or poor - of the recognition result.WW
method AlternatesFromSelectionG
Specifies the recognition result to be modified with a given alternate.WWW`
Specifies the recognition results to assign to the strokes that were used to create the results.WW
ITextInputPanel InterfaceW!
IInputPanelWindowHandle InterfaceW
ITextInputPanelRunInfo
stdole2.tlbWWW
TipAutoCompleteClientLib
TipAutoCompleteClientWWWd
ITipAutoCompleteClientWW
wireHWND,
_RemotableHandle,
cfContext
Z__MIDL_IWinTypes_0009WWW
JhInprocW
hRemoteW,
ITipAutoCompleteProvider
UpdatePendingTextWWW
bstrPendingTextW
fShowWWWd
65AdviseProviderWW
hWndFieldWWW
VpIProviderWWd
UnadviseProviderd
hUserSelectionWWWX
tagRECTWX
{leftX
topWX
rightWWWX
H{bottomWWd
PreferredRectsWW
RKprcACListWWW
prcField
tprcModifiedACListWWW
fpfShownAboveTipWd
RequestShowUIWWW
%hWndList
pfAllowShowingWW8
Microsoft TipAutoCompleteClient TypeLibrary, version 1.7WW
TipAutocompeteClient Class
ITipAutoCompleteClient
ITipAutoCompleteProviderWW
method UpdatePendingTextWW
method ShowWWW
method AdviseProviderW
method UnadviseProviderWWW
method UserSelectionWW
method PreferredRectsW
method RequestShowUIWW
