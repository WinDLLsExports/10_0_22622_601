!This program cannot be run in DOS mode.
.text
h.rdata
H.data
.pdata
HINIT
.rsrc
B.reloc
WATAUAVAWH
{(H;^
0A_A^A]A\_
|$$fD
L$XH3
L$XH3
UVWATAUH
\$PE;
D$PfD
l$PE;
L$PI;
 A]A\_^]
L$8H3
t$"u?
L$XH3
D$0fD;
D$0fD;
t$ WH
u3!D$0H
x ATH
x ATH
x ATAUAVH
 A^A]A\
WATAUAVAWH
fD9>u
ujfA;
tdfA;
 A_A^A]A\_
WATAUAVAWH
fA;L4
 A_A^A]A\_
VWATAUAVH
D9L$0
L$XE3
L$XE3
D9\<a|
D9]<a|
D9L$0
9\$0uy
L$xH3
A^A]A\_^
WATAUH
f9G:w
 A]A\_
t$ WATAUH
A]A\_
VWATH
fD9&t"D
L$8H3
@A\_^
@SUVWATAUH
|$XH;
A]A\_^][
UVWATAUAVAWH
L$8@8
D9D$X
\$hL;
gfffffffH
tL@8j
A_A^A]A\_^]
UVWATAUAVAWH
uhD8f
rbf9F
r\D9f
u-D8f
r'f9F
r!D9f
D$PE;
D$pE;
l$xE;
l$hE;
gfffffffH
l$0E3
@8h!u
@8h u
D8&ug
D8&uVE;
M9$$u
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
x ATAUAVH
 A^A]A\
L$ SUVWATAUAVAWH
D$(D8
8A_A^A]A\_^][
x ATH
H WATAUAVAWH
gfffffffH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
r|D9J
UVWATAUAVAWH
D$}8Z
A_A^A]A\_^]
D$l8\$x
UVWATAUAVAWH
A_A^A]A\_^]
x ATAUAVH
fA;Z@t
 A^A]A\
t$ WATAUAVAWH
gfffffffH
D$XfD
D$ E3
A_A^A]A\_
WATAUH
 A]A\_
WATAUH
l389^
\$0E3
A]A\_
x ATH
WATAUAVAWH
D$ E3
 t7A:
0A_A^A]A\_
WATAUH
A]A\_
x ATH
x ATH
t$ WATAVH
A^A\_
x ATH
!\$,!\$H!\$L!\$PH
WATAUH
 A]A\_
t$ WATAUAVAWH
D8f#t
 A_A^A]A\_
<@u>M
u^fD;
u1fD;
uafD;
u4fD;
x ATAUAVH
 A^A]A\
H WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
L$`fA
 A_A^A]A\_
UVWATAUAVAWH
9l$xu
0A_A^A]A\_^]
@SUVWATH
A\_^][
L$0E3
VWATAUAVH
\$`A;
D$`fD
D$`D8h
D$`D8h
\$`D9
\$`fD9
L$`E3
L$`I;
0A^A]A\_^
t$ WH
L$@E3
L$8H3
7tV-?
u!D8H
L$ SVWH
WATAUH
0A]A\_
l$ VWATAUAWH
A_A]A\_^
t$ WH
t$ WH
t$ WH
\$PL;
gfffffffI
L$8H3
WATAVH
t,@81u'
A^A\_
t.H9A
t#8A w
y!t,H
UVWATAUAVAWH
@A_A^A]A\_^]
x ATH
{ ATAUAVH
@A^A]A\
UVWATAUAVAWH
8187A
|$XA;
l$XA;
|$XA;
D$XA;
|$XA;
|$XA;
A_A^A]A\_^]
L$0E3
9T$@u&
9D$Du
8D$lu
f9D$4t?H
L$pH3
\$ UVWH
L$@E3
UVWATAUAVAWH
T$ A9W
T$ A;W
0A_A^A]A\_^]
x ATH
L$1tAA
D$1A"
WATAUH
|$x@t
PA]A\_
@SUVWATH
0A\_^][
WATAUAVAWH
 A_A^A]A\_H
L$0E3
L$pH3
D$(8187
t$ WATAUAVAWH
L$@E3
D9t$4uy
D9t$4t
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
x ATAUAVH
 A^A]A\
SUVWATAUAVAWH
D9Rnt
D$0A:
t^H;M uNL
HA_A^A]A\_^][
x ATH
t$ WATAUAVAWH
L$hD;
A99vlD
E$fE+
|(2fD
L$hA;
0A_A^A]A\_
WATAUAVAWH
fD9|$PE
G6fD9|$Pv7A
OBA;D$
 A_A^A]A\_
t$ WATAUH
H;^ u
 A]A\_
H;^ u
t$ WATAUH
 A]A\_
t$ WH
UVWATAUAVAWH
D$4@8
T$8fD
L$`H3
pA_A^A]A\_^]
8D$0t
x ATAUAVAWH
u-fE;
t:fE;
|$@A_A^A]A\
@SUVWATAUAVAW
\$XfD
jCA_A^A]A\_^][
x ATH
D$8fD
SUVWATAUAVAWH
H!\$8E3
L$(!T$ H
D$(!T$ E3
XA_A^A]A\_^][
UVWATAUAVAWH
D$(!T$ L
D$xD9pnt2I
0A_A^A]A\_^]
UVWATAUAVAWH
D$89hnt9H
H!n`A
@A_A^A]A\_^]
WATAVH
 A^A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
7D;?rP
 A_A^A]A\_
WATAUAVAWH
7D;?rP
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
D("L9
T$PE3
 A_A^A]A\_
t$ WH
L$(H3
SUVWATAUAVAWH
D$JfA;
E8c!t
E8c#t
|$ I#
xA_A^A]A\_^][
l$ VWATAUAVH
0A^A]A\_^
WATAUAVAWH
L0 fC
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
T$PE3
f;T$Hu
T$PE3
f;T$Hu
T$0f+
T$@fD
T$0fD
t$ WATAUAVAWH
D8@ t
l$0E3
u>fA;
T$@E3
u)fD9D$H
\$Hf;
T$@H;
T$PE3
f9l$Ht
T$PE3
f9l$Ht
T$PE3
f9l$Ht
@8h tmH
T$PE3
\$Hf;
T$@H;
f9l$Ht
f9l$H
T$@A;
v0fA;
v/fA;
T$PE3
f9l$Ht6H
f9l$Ht6H
\$Hf;
\$Hf;
T$PE3
\$Hf;
t$@f;
T$PE3
\$Hf;
T$@H;
T$PE3
f9l$Ht
L$@L;
tYf9t$HvRD
T$PE3
T$PE3
fD9|$Hu!H
fD9|$H
f9t$Hu
A_A^A]A\_
D8@ t
fD9@!vz
uqD8A5t
s WATAUAVAWH
T$@E3
T$@E3
D8y t
u)fD9D$H
E8~!t*E8~"t$
uAf;O!u
A_A^A]A\_
L$ UVWATAUAVAWH
d$0D8
\$(Hi
l$(E3
F'u2fA;F
&fA;F
T$8E8Z t
E8Z u
gfffffffM
l$ E:
fA;D8
A_A^A]A\_^]
VWATAUAVH
A^A]A\_^
x ATAUE3
|$0fE
x ATAUAVH
D8h(t
D8h)t
0A^A]A\
t$ WATAVH
D8` t
A^A\_
VWATH
D8` t
@A\_^
t$ WATAUH
gfffffffH
@8h)t
L$HH3
A]A\_
SVWAUH
HA]_^[
VWATAVAWH
gfffffffH
A_A^A\_^
UUUUUUUU
VWATH
 A\_^
UVWATAUAVAWH
|$(fD
fE9t$
gfffffffH
l$HfE;
T$@I;
l$HfA;
T$@I;
E9snv?A
E9pnt
fD9|$Hv\H
D8p!u
D8p t6D8
D8p!t<A
E8q!t/H
D9wDt
D9wHu
\$XE8s t
A_A^A]A\_^]
t$ WH
L$8H3
\$ L;
D8A)t
t$ WH
L$(H3
s WATAUAVAWH
gfffffff@
L$0@8
 taD:
 t'D:
D:d$ 
D8F5u
D$8@8
ukD8F5u
@8l<@
A_A^A]A\_
t$ WH
@8n tMH
UVWATAUH
D8` t
gfffffffH
L$hE3
0A]A\_^]
t$ WATAUAVAWH
D8u)t
D8p!t D8p#t
d$pM;
$usA:
A_A^A]A\_
\$XfD
\$HfD
p ATH
VWATH
D8` t
gfffffffH
@SUVWATAVH
8A^A\_^][
L$8H3
gfffffffL
L$XH3
x ATH
t$ WATAVH
 A^A\_
f9t$8
L$@E3
f9\$8tZH
x ATH
x ATH
x AUH
x ATH
WATAUH
 A]A\_
\$ UVWATAUAVAWH
L$xfD
|$XfD
|$HfD
|$0E3
gfffffffH
D$xI;
A_A^A]A\_^]
@SUVWATAUH
L$PH3
hA]A\_^][
gfffffffH
|$0E3
@SUVWATAUAVH
L$PH3
`A^A]A\_^][
@SUVWH
L$0H3
H_^][
@SVWH
L$0H3
@SUVWATH
L$0H3
@A\_^][
x ATH
UVWATAUAVAWH
D$@E3
D9|$$u
\$ E;
D9|$$u
L$@H3
PA_A^A]A\_^]
VWATH
 A\_^
VWATH
 A\_^
VWATH
 A\_^
WATAUH
 A]A\_
gfffffffH
VWATAUAVH
0A^A]A\_^
x ATH
t$ WH
D$0fD
@SUVWATAUAVAWH
Pts@:
tCE8e
d$0A8|$ 
D8"u'D8b
u!D8b
tjE8e
uyfD;
uRfD;
u+fD;
t?v4<
XA_A^A]A\_^][
x ATAUAVH
t6D8p
 A^A]A\
x ATH
@8x)t
x ATH
WATAUH
gfffffffH
 A]A\_
WATAUAVAWH
 A_A^A]A\_
gfffffffH
x ATH
D$PA;
UVWATAUAVAWH
gfffffffA
D8O'u
VUUUA
D8H)t=fA;
@A_A^A]A\_^]
x ATH
t2@8p
x ATH
tZE8a
tTE8a
tNM9Q
UVWATAUAVAWH
D$ fE
L$0H3
@A_A^A]A\_^]
UVWATAUAVAWH
D$(fE
D$)fE
L$0H3
@A_A^A]A\_^]
UVWATAUAVAWH
D$ fE
D$!fE
L$0H3
@A_A^A]A\_^]
UVWATAUAVAWH
|$`E:
f;O$s4D
f;o$r
T$`I;
 A_A^A]A\_^]
WATAUAVAWH
f;D$H
A_A^A]A\_
@SUVWATAUAVAWH
D$XfA;
\$Xf;
T$PH;
\$Xf;
T$PH;
\$XfD;
f9t$Xty
f9t$Xt
L$`E3
@8p!t*I
f9t$ht
@8p!tBI
9Xnr6
gfffffffH
A_A^A]A\_^][
VWATAUAVH
D9`jtJD
hntqH
L$`E3
E8a t@
D$`A:
0A^A]A\_^
t$ WATAUAVAWH
A8o#t
A8m#t
9hnt?H
A8E"u
L$8H3
A_A^A]A\_
l$ VWATH
 A\_^
{ ATAUAVH
D$8fA;
T$0D9s>
D$8fA;
v1fA;
v0fA;
A^A]A\
x ATH
VWATH
 A\_^
{ ATH
L$0E3
UVWATAUAVAWH
D$hE3
\$ D8
D$T~GfE;
\$PE3
t$HL;\$P
L$hH3
pA_A^A]A\_^]
x ATAUAVH
 A^A]A\
D$(E3
\$(E3
D8\$0t
D8\$8t
D$(I;
L$(I;
L$(I;
L$PfD
t$ WATAUH
fD;c$s1
L$ D+
@A]A\_
UVWATAVH
D$@H;
A^A\_^]
UVWATAUAVAWH
t$PD;
fE;&s7H
fE;&r
L$xH3
A_A^A]A\_^]
UVWATAUAVAWH
|$`D;
L$xH3
A_A^A]A\_^]
SUVWATAUAVAWH
\$@f;
l$PD;
L$0Hc
fE;&r
xA_A^A]A\_^][
@SUVWATAUAVAWH
T$P8X u
\$(f;
|$ D;
hA_A^A]A\_^][
UVWATAUAVAWH
L$@fD;
D8x u!
D8x u|H
PA_A^A]A\_^]
x ATH
l$ VWATAVAWH
D$4~<
L$8Hk
L$8D+
L$HH3
A_A^A\_^
UVWATAUH
L$`H3
pA]A\_^]
WATAUAVAWH
fA;2t
D80t@A
 A_A^A]A\_
t-D8I
L$ UVWATAUAVAWH
\$`D;
 A_A^A]A\_^]
x ATH
t$ WATAUH
D8m"t
 A]A\_
}@D8^"t
wD8^"t
s WATAUH
L$0H3
@A]A\_
WATAUAVAWH
L$PE3
D$8fA;
D$8fA;
D$8fA;
T$0I;
L$@E3
D$8fA;
D$8fA;
D$8fA;
T$0I;
D8w&t
D8w$t
D8w(t
A_A^A]A\_
WATAVH
D$-E3
T$PfD
|$HfA;
|$HfA;
T$PI;
T$PE3
t$XfA;
t$XfA;
T$`I;
D$@I;
A^A\_
WATAUAVAWH
8M#u%9
A8O#u
 A_A^A]A\_
x ATAUAVH
D8o!uC
L$PE3
D$8fA;
D$8fA;
D$8fA;
T$0I;
L$@E3
D$8fA;
D$8fA;
T$0I;
A^A]A\
UVWATAUAVAWH
D8p)t
l$NfD
|$TfD
T$0E3
t$(fD
A_A^A]A\_^]
WATAUH
@A]A\_
VWATAUAVH
A^A]A\_^
WATAUH
A]A\_
VWATAUAVH
l$(fD
A^A]A\_^
VWATAUAVH
l$(fD
A^A]A\_^
VWATH
0A\_^
VWATH
0A\_^
t$ WH
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
A9Pnv
 A_A^A]A\_
UVWATAUH
0A]A\_^]
x ATAUAVH
 A^A]A\
WATAUH
 A]A\_
x ATAUAVAW
6D9:t?E;
A_A^A]A\
UVWATAUAVAWH
D$XE3
T$4f;
f;s$A
8L$Iu
8L$Ju
8L$Ku
8L$Lu
8L$Mt2
f9D$4u
C f;s$sYE;
fD;K$r
D9kJvN
f;s$r
L$XH3
`A_A^A]A\_^]
UVWATAUAVAWH
l$@fA#
L$0E3
9hnv`A9
L$HH3
PA_A^A]A\_^]
@SUVWATAUAVAWH
u)E8t$8u"D9s
C&D9s
t.fA;
t.fA;
D8p)t
D8p!t
fD;s$sF
6t/fA;
f;S$r
f;K$s^H
D8p u!
tF<Hty<
8A_A^A]A\_^][
UVWATAUAVAWH
f;w$r
L$ fD
u6fD;
0A_A^A]A\_^]
9F vx
UVWATAUAVAWH
G.vKB
A_A^A]A\_^]
@SUVWATAUAVAWH
t4fA;
@8p!t5
@8p%u
@8p#u
@8p't
@8q!tC
@8q#t
l$(fD
l$0fD
HA_A^A]A\_^][
WATAUH
0A]A\_
@SUVWATAUAVAWH
8A_A^A]A\_^][
L$8H3
\$ UVWATAUH
A]A\_^]
t$ WATAUAVAWH
L$ fD
D$hfE
L$0E;
D8o8H
D8h)tUD8
t$fA;
t$fA;
D$pI;
Hnu0H
D$@fD
A_A^A]A\_
@SUVWATH
D$@@8
D$pA+
D$`tNA+
L$8fA
@8o t>H
A\_^][
@SUVWATAUH
\$ fD
d$XE;
L$@fA
D8g t>H
A]A\_^][
D8L$XtN
D$PD8
\$ UVWATAUAVAWH
\$XE;
D8~ uA
D9ynv%H
D8x"tm
E8|$ 
E8|$!
D8x!tUH
D8~ t<H
L$@fA
A_A^A]A\_^]
\$ UVWATAUAVAWH
D8~ uA
D9ynv%H
D8x"tm
E8|$ 
E8|$!
D8x!tMH
D8~ t<H
L$@fA
A_A^A]A\_^]
@SUVWATAUAVH
\$@fD
u2fA;
D$`I;
L$@fA
A^A]A\_^][
\$ UVWATAUAVAWH
gfffffffH
D$0D8
L$@fD
D$hD8
D8`)tTD8
L$@fD
D9`jt(H
D$ fD
D$ fD
L$(fA
A_A^A]A\_^]
\$ UVWATAUAVAWH
tHfA9o
T$PH;
L$pfA
D$XH;
A_A^A]A\_^]
x ATH
E9bnv
A9Rnv
UVWATAUAVAWH
L$0fE
@A_A^A]A\_^]
x ATAUAVH
 A^A]A\
t$ WATAUAVAWH
D$P@8
 A_A^A]A\_
D9\$0
mtaA+
VWAVH
 A^_^
UVWATAUAVAWH
T$hD8
 A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
T$(E2
D8`!t 
u#D8D
A_A^A]A\_^]
D8d$ u
D8q!t
\$ UVWATAUAVAWH
D$DtR
D$@fA)@
L$@fA;
L$PH3
`A_A^A]A\_^]
UVWATAUAVAWH
\$@fD
L$@f#
L$DfD
L$pH3
A_A^A]A\_^]
x ATH
x AUAV
D3M$H
D3E(I
D3M4H
D3E8@
D3MDH
D3EH@
D3MTH
D3EXA
D3MdH
D3Eh@
D3MtH
D3Ex@
|$0A3
@SUVWATAUAVH
L$@A+
D$@f#
0D$2f
D$A0D$3E
A^A]A\_^][
l$ VWATH
T$@E3
T$ D:
D$-D;[+sM@
K+B2T
L$PH3
l$ VWATH
D$5D9K
L$HH3
k VWATH
L$0H3
@A\_^
WATAUAVAWH
D$ fA
A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
WATAUH
VUUUL
 A]A\_
t$ WATAUAVAWH
w1@8x 
f9x!v
f9x!v
D8$0w
f9x!v
f9z!v
K+D8Q
 A_A^A]A\_
x ATH
D8 fA;
H UVWATAUAVAWH
D$@E:
gfffffffM;
gfffffffI
PA_A^A]A\_^]
gfffffffH
tafB;\
uHF:L
x ATAUAVH
0A^A]A\
\$ UVWATAUAVAWH
u"A8@
D9xnu
 T$""
L$ $?
D$!I;
L$XH3
`A_A^A]A\_^]
x ATH
fA;T$
fA;T$
fA;T$
fA;T$
H96t=H
H96t=H
H96t@H
H96t@H
WATAUAVAWH
fD9|$HA
A_A^A]A\_
HeD:J
UVWATAUH
D$XE3
L$XH3
`A]A\_^]
L$(E3
L$@H3
s WATAUAVAWH
A_A^A]A\_
t$ WH
t$ WH
\$0fD
WATAUAVAWH
gfffffffHk
 A_A^A]A\_
x ATH
D$PH9X u
L$PH;
L$ H;
L$(H;
tfH;K(u
H!{(H!{ 
f9|$8t
|$8@w
D$8H;
fA;i$s^fD;
fA;A$r
t(v6<
WATAUH
D$!D8
 A]A\_
L$HH3
L$HH3
UVWATAUAVAWH
PA_A^A]A\_^]
WATAUH
t$8fA;
T$0I;
D8h!u
D8h t7D8
A]A\_
t$ WH
@SUVWATH
L$pH3
A\_^][
@SUVWATH
A\_^][
x ATAUAVH
 A^A]A\
D$@E3
D$gf;
l$ VWATH
D$PE3
D9`nvj
D8`!t:H
UVWATAUH
D$0E3
\$WfD;
H;L$[s#L
A]A\_^]
x ATAUAVH
fG;L0
OfF9t
fD9,Hu7fE;
IfB9|
IfF9d
A^A]A\
T$0fA
T$0fA
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
@fD9,C
A_A^A]A\_^]
t$ WH
T$0E3
f9t$8vgH
D$8f;D$H
L$hH3
""""""""
""""""""
t<vE<
UVWATAUAVAWH
|$`A3
t$0A3
n3t$(A
nD3t$ A
3D$$A3
3D$0A3
n3D$,3
l$<A3
3D$ A3
D3|$$A3
3l$ A3
3D$$A3
|$@D3d$,
3D$0A3
3D$(3
3|$$A3
n3|$ 
L$PA3
d$(3D$@A
|$H3D$8A
D$,A#
L$,A3
l$$3D$PA
l$ 3D$4A
L$ A3
3D$,D3|$$
D3|$@
3D$ A
3D$8A
D3t$PD3|$4A
D3t$,A
3|$0D
3t$PA3
D3d$4A
D3d$8D
D3D$P
D3D$0A#
D3l$4A#
3t$ E3
|$ D3|$,A
3l$(E3
D3t$<
\$0A3
3D$X3
3D$LD3d$8D3d$T
3\$<A3
3\$LA3
D3l$TA
d$0A3
\$LA3
3l$DD
t$@A3
3t$HA3
3|$<A3
t$HA3
l$XA3
D3|$$A3
D3|$DA
D3D$$3
D3D$LA
L$(E3
D3T$ D3
D3L$TA
D3T$H
3T$(A3
3T$03t$L
A_A^A]A\_^]
x ATH
D$,vT2
66666666H
D$,vT2
\\\\\\\\H
uU9Y^u!
t$ WATAUAVAWH
A_A^A]A\_
@SUVWATH
A\_^][
[ UVWH
T$ fD
T$0fA
s WATAUAVAWH
A_A^A]A\_
L$ Ic
x ATE3
L$ H3
SUVWH
D$ Lc
(D$ f
L$@H3
x ATH
@SUVWATAUH
L$`H3
xA]A\_^][
VWATAUAVH
 A^A]A\_^
t$ WH
L$0H3
VWATAUAVH
t$XE3
fE;a$sBA
fA;I$r
 A^A]A\_^
\$ UVWATAUAVAWH
T$`fD
 A_A^A]A\_^]
l$ VWATAUAVH
L$`E3
L$hA:
D8i!t)
0A^A]A\_^
{ ATAUAVH
0A^A]A\
VWATAUAVH
\$`E8
0A^A]A\_^
UVWATAUH
H;MQu
H;MYu
A]A\_^]
@SUVWH
k VWATH
WATAUH
 A]A\_
x ATH
oD$ D
L$0H3
x ATAUAVAWA
A_A^A]A\
x ATAUAVAWA
A_A^A]A\
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
D$0fE
A_A^A]A\_
WATAUAVAWH
T$HfD
L$HfA
A_A^A]A\_
l$ VWAUH
UVWATAUAVAWH
A_A^A]A\_^]
x ATD
L$(H3
UVWATAUAVAWH
|$<A#
QZ^&A
@A_A^A]A\_^]
VWATAUAVH
A^A]A\_^
UVWATAUAVAWH
D$ fA
l$&A;
D$(fG;
D$,fD
T$ fA
A_A^A]A\_^]
ATAUAVH
t$PfD
 A^A]A\
D$.t]
D$ A;
VWATH
L9d; 
 A\_^
t$ WAUAWH
+t$p@
@A_A]_
WATAWH
;|$p}>H
@A_A\_
WATAWH
;|$p}=H
@A_A\_
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
UWATH
PA\_]
UVWATAUAVAWH
`A_A^A]A\_^]
WATAWH
0A_A\_
WATAUH
D$$A;
D$ A;
D9l$ 
D$$A;
D9l$ ujA;
D$$A;
A]A\_
VWATH
T$PE3
WATAUH
D$$A;
A]A\_
t$ WH
p WATAUAVAWH
A_A^A]A\_
x AUH
J9t+ u
x ATAVAWH
t$pE3
L9|$xt
0A_A^A\
x ATAUAVH
 A^A]A\
WATAUH
l$ E3
@A]A\_
WATAUH
 A]A\_
WATAUH
 A]A\_
WATAUH
 A]A\_
WATAUH
 A]A\_
x ATAUAVH
 A^A]A\
VWATAUAVH
A^A]A\_^
l$ VWATH
 A\_^
UVWATAUH
D$hfD
L$hfD
0A]A\_^]
UVWATAUH
 A]A\_^]
VWATH
0A\_^
t$ WH
WATAUH
 A]A\_
VWATAUAVH
A^A]A\_^
WATAUAVAWH
 A_A^A]A\_
|$0@8
D$0@8
9D$0t%L
WATAVH
 A^A\_
t$ WATAUAVAWH
l$4fD
gfffk
~H<!}D
l$0E3
L$8H3
A_A^A]A\_
SUVWATAUAVAWH
SD8:v
@8>twE
8A_A^A]A\_^][
x ATH
u:@8k
WATAUH
 A]A\_
x ATH
f;*s7D
\$ UVWATAUAVAWH
D$PE3
L$XD8
T$LE3
D8\$A
fD9\$Dt
A_A^A]A\_^]
WATAUH
 A]A\_
x ATAUAVH
fE;*s9A
|$8A^A]A\
UVWATAUAVAWH
uefA;
u@fA;
pA_A^A]A\_^]
t$ WATAUAVAWH
 A_A^A]A\_
|$ ATL
gfffA
|$(A\
L$ UVWATAUAVAWH
D$(M+
Ac<vw
Ac<vw
D$p@:
0A_A^A]A\_^]
t$xD:
x ATAUAVH
<dv~D
 A^A]A\
<^w~f
t$ WATAUAVAWH
|$ @8s
A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
@SVWH
UVWATAUH
A9t$nv'I
u-fD9
 A]A\_^]
x ATH
l$ VWATAUAVH
L$XE3
L$XE3
E9env;A9
 A^A]A\_^
T$0fD9
UVWATAUH
D$PE3
L$PH3
`A]A\_^]
VWATAUAVH
D$`tS
D$`r'A
0A^A]A\_^
gfffffffH
gfffffffH
x ATH
x ATAUAVH
 A^A]A\
WATAUH
0A]A\_
t$ WATAUAVAWH
0A_A^A]A\_
UVWATAUH
 A]A\_^]
t$ WATAUAVAWH
L$0H3
A_A^A]A\_
ATAUAVH
t$PfD
 A^A]A\
@SUVWATAUAVAWH
|$xfD
T$HfD;
A_A^A]A\_^][
SUVWATAUAVAWH
8A_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
fffffff
fffffff
RFOff
AdhocLinkState
InitializeAdapterCommon(), NicIFAllocateMemory fail %d times!!
RmWorkitem
SetRFPowerStateWorkItem
SetAdhocLinkStateWorkItem
LinkQualityReportTimer
InitializeTimer
InitializeAdapterWorkItem
SetCCXAssocInfoTimer
Ndis62CreateDeleteWorkitem
N62CApSendDisassocWithOldChnlWorkitem
Ndis62ContextSwitchWorkItem
PlatformSwitchDevicePciASPM = %x
PnpWorkItem
UseRxInterruptWorkItem
PNPCapabilities
RfSilentReset
AcceptAddbaReq
FwRWRF
DisableSilentReset
WepMode
HalfNMode
CckPwEnl
ScanDelay
RxReorder_PendTime
RxReorder_WinSize
RxReorder
WiFiConfg
RT2RTAggregation
MimoPs
EnableFwCalcDur
UseDriverAssingedRate
DisableRateFallBack
MPDU_Density
AMPDU_Factor
AMPDUEnable
AMSDU_MaxSize
AMSDU
ShortGI40MHz
ShortGI20MHz
BW40MHz
HT_EnableCck
RoamRetryLimit
KeepAliveLevel
LeisurePsMode
InactivePs
EnableRxImmBA
NoAck
StaEDCAParamVO
StaEDCAParamVI
StaEDCAParamBK
StaEDCAParamBE
ApEDCAParamVO
ApEDCAParamVI
ApEDCAParamBK
ApEDCAParamBE
InitGainControlMode
FragThresh
CustomerID
WdsMode
DriverDesc
LiveTime
ChnlWeight
AutoSelChnl
Dot11dEnable
SwAntennaDiversity
TurboMode
bRateAdaptive
HighPowerMechanism
Chaos
HctTest
RegSWRxDecryptFlag
RegSWTxEncryptFlag
PSPXlinkMode
LowRfdThreshold
RegTPCPolarity
bRegTxPowerControl
ProtectionImpMode
bHwParaFile
DbgRmCase
CcxOffLineDurUpLimit
CcxRm
CcxEnable
ForcedPriority
MaxSPLength
StaUapsd
PcieWork
AdhocLinkState
RFOff
PreambleMode
DtimPeriod
AH_BcnIntv
ActingAsAp
IbssBeacon
PowerSaveMode
EnablePreAuth
NetworkType
DefaultKeyId
DefaultKeyW3
DefaultKeyW2
DefaultKeyW1
DefaultKeyW0
DefaultKey3
DefaultKey2
DefaultKey1
DefaultKey0
AuthentAlg
EncAlgorithm
DataEncAlg
WirelessMode4ScanList
CtsToSelfRate
ForcedDataRate
Channel
WirelessMode
ChannelPlan
BcnDenominator
WiFi11gIbss
WiFi11bIbss
RXAntenna
TXAntenna
CornerChange
ChargePump
Bssid
NetworkAddress
Realtek Wireless LAN
STA_RSSIRoamBeaconCount
STA_LostAPRoamBeaconCount
STA_BSSEntryExpireTime
STA_AdhocStationMaxCount
Helper_InterScanTime
Helper_ScanRescheduleTime
Helper_PassiveScanChannelCount
Helper_ActiveScanChannelCount
Helper_BSSEntryMaxCount
Helper_BSSEntryExpireTime
Helper_RSSILinkQualityThreshold
HwSwRfOffD3
DGOfdmFaThreshold
InitGainState
CWinMaxMin
BoardType
ThreeWireMode
NDTEST_WEP_AP7
TcaCheckTimer
ScanTimer
JoinTimer
JoinConfirm
JoinProbeReq
AuthTimer
AsocTimer
globalKeyInfo.KeyMgntTimer
AwakeTimer
InactivePsTimer
PnPWakeUpJoinTimerCallback
DelayStartTimer
IbssStartRequestWorkItem
ApStartRequestWorkItem
DozeWorkItem
AwakeWorkItem
TbttPollingWorkItem
InactivePsWorkItem
UpdateTxPowerWorkItem
SwBwTimer
RxHandleInterruptTimer
HandleInterruptWorkItem
CountTKIPICVErrorStatistics
%s(): report retry error packets with seq(%d)
TxTsCommonInfo_SetupTimer
TxTsCommonInfo_InactTimer
TxTsAddBaTimer
TxPendingBARecordTimer
TxAdmittedBARecordTimer
RxTsCommonInfo_SetupTimer
RxTsCommonInfo_InactTimer
RxAdmittedBARecordTimer
RxPktPendingTimer
12345678123456781234567812345678
=j&&LZ66lA??~
S11b?
e##F^
t,,X.
M;;va
}{))R>
gK99r
!H88p
c!!B0
f""D~**T
V22dN::t
o%%Jr..\$
x((Pz
)w--Z
T00`P
&&Lj66lZ??~A
O44h\
s11bS
R##Fe
&''Ni
>//^q
,  @`
99rKJJ
u!!Bc
==zGdd
""Df**T~
;22dV::tN
$$Hl\\
C77nYmm
%%Jo..\r
55j_WW
g+V}+
&Lj&6lZ6?~A?
R;vM;
9rK9J
M3fU3
P<xD<
~=zG=d
"Df"*T~*
2dV2:tN:
$Hl$\
7nY7m
x%Jo%.\r.
p>|B>
a5j_5W
U(Px(
ggV}++
Lj&&lZ66~A??
h\44Q
bS11*?
Xt,,4.
RRvM;;
MMfU33
PPxD<<%
Bc!! 0
~~zG==
Df""T~**;
dV22tN::
xxJo%%\r..8$
pp|B>>q
aaj_55
UUPx((
cccc||||wwww{{{{
kkkkoooo
gggg++++
YYYYGGGG
&&&&6666????
nnnnZZZZ
RRRR;;;;
[[[[jjjj
9999JJJJLLLLXXXX
CCCCMMMM3333
PPPP<<<<
~~~~====dddd]]]]
ssss````
""""****
2222::::
$$$$\\\\
7777mmmm
llllVVVV
eeeezzzz
xxxx%%%%....
pppp>>>>
ffffHHHH
aaaa5555WWWW
UUUU((((
BBBBhhhhAAAA
QSeA~
!tX)i
='9-6d
aiKwZ
;fD4~
_jbF~T
11#?*0
,4$8_@
t\lHBW
QPeA~S
0 Umv
SbEwd
\h!T[
.6$:g
>4$8,@
p\lHtW
`3SbE
+HpXhE
pZlNr
T6$:.
 wZiK
!tI)i
`3QbE
T[$:.6
;f[4~
_TbF~
h8,4$
2Ht\l
00006666
CCCCDDDD
TTTT{{{{
####====
ffff((((
vvvv[[[[
IIIImmmm
%%%%rrrr
]]]]eeee
llllppppHHHHPPPP
FFFFWWWW
kkkk::::
AAAAOOOOgggg
tttt""""
nnnnGGGG
VVVV>>>>KKKK
yyyy    
YYYY''''
____````QQQQ
;;;;MMMM
ccccUUUU!!!!
=jLZlA~
tX.4-6
oJr\$8
LjlZ~A
sbS*?
Xt4.6-
uBc 0
DfT~;
;dVtN
Jo\r8$W
=jLZlA~
tX.4-6
oJr\$8
bPairwise key expansion
Hi There
DE A3 56 A2 CD DD 90 C7 A7 EC ED C5 EB B5 63 93 4F 46 04 52
34 AA 97 3C D4 C4 DA A4 F6 1E EB 2B DB AD 27 31 65 34 01 6F
84 98 3E 44 1C 3B D2 6E BA AE 4A A1 F9 51 29 E5 E5 46 70 F1
A9 99 3E 36 47 06 81 6A BA 3E 25 71 78 50 C2 6C 9C D0 D8 9D
0123456701234567012345670123456701234567012345670123456701234567
abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq
err dbg
err cmd
Change print range
prange
Show TX Table
txtbl
SYS ctrl
sysctrl
sys + arg
SYS dump
ractrl <Type> <R/W/P>
Ctrl rate tbl
ractrl
dbg <flag> <value>
bit oriented
Switch dbg flag
w4 <Addr> <Data> {Size}Size: num of decimal dword <4096
W mem addr by Dword
r4 <Addr> {Size}Size: num of decimal dword <4096
R mem addr by Dword
help <DIR> 
DIR list:
<1CMN> <2MANS> <3?>
Dbg cmd help
 Error dbg flag
 Error cmd string
unknow
 Cmd_Idx = 20
EEPROM operate to R/W 
 [eepr  ] <Addr> (Size)
 <Addr>: HEX 0=Read, 0x1234=Write
 (SIze): DEC 0-64.
eeprom
 Cmd_Idx = 19
Rx Path Selection Control --> Cmd_Idx = 19
 [rxPathSel] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 RxPathSelection
 Arg1 --> 0/1/2/3/4 = Enable/DbgMode/SS_TH_low/diff_TH/cck_method
 Arg1 --> 10/11/12/13 = rssi for A/B/C/D
 Arg1 --> 20/21 = PingRSSIenable/PingRSSITh
 Arg2 --> Set value, Decimal
 dbgcmd 19 0 0 0/1 --> RxPathSelection disable/enable
 dbgcmd 19 0 1 0/1 --> DbgMode OFF/ON
 dbgcmd 19 0 2 30 --> set SS_TH_low = 30
 dbgcmd 19 0 3 15 --> set diff_TH = 15
 dbgcmd 19 0 4 0/1 --> cck method version1/version2
 dbgcmd 19 0 10/11/12/13 50 --> set rssi A/B/C/D = 50
 dbgcmd 19 0 20 0/1 --> testRSSI disable/enable
 dbgcmd 19 0 21 20 --> set TestRSSITh = 20
rxPathSel
 Cmd_Idx = 18
FW Dynamic Control --> Cmd_Idx = 18
 [fwdm  ] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 DBG Mode Switch
 Arg1 --> 0/1/2~# Driver/Firmware/Original
 -------------------------
 Type=1 FW Dynamic Control --> Switch to drv dbg mode at first
 You can only input decimal arguments and a double word
 Arg1 --> Dynamic Ctrl Type
 Arg2~n --> For different DM type, you need different arguments
 FW DM CTRL 0--RX_CMD_PACKET-----------------------
 If Arg1 = 0 : RX_CMD_PACKET Switch
 -->Arg2 = 0/1 : Disable/Enable
 FW DM CTRL 1--Rate Adaptive-----------------------
 If Arg1 = 1 : Rate Adaptive Switch
 -->Arg2 = 0/1 : Disable/Enable
 FW DM CTRL 2--Debug Port Switch-----------------------
 If Arg1 = 0/1 : UART/RX_CMD
 ...... Future use 
 Cmd_Idx = 17
Force TxFwInfo --> Cmd_Idx = 17
 [ForTFI] (Arg1) (Arg2)
 -------------------------
 Arg1 --> 0/1 = Don't Force TxSubCarrier/Force
 Arg2 = Force value 
 cmd 16 0 0 -----> don't force TxSC
 cmd 16 1 2 ---> force TxSC value = 2
 -------------------------
 ...... Future use.
ForTFI
 Cmd_Idx = 16
FW Control --> Cmd_Idx = 16
 [fwctrl  ] (Arg1) (Arg2)
 -------------------------
 If you do not input type argument, we will display some FW info
 -------------------------
 Arg1 = 0(Decimal), --> You must enter rate type in Arg2
 Rate_Type = 2/3/4/5=HT_MCS BW0_SG0/BW1_SG0/BW0_SG1/BW01_SG1
 -------------------------
 Arg1 = 1(Decimal) Clear all TX rate history
 -------------------------
 Arg1 = 2(Decimal) Use TX_CMD to Control FW to collect TX Rate History
 Arg2 = 0/1(Decimal) Disable/Enable
 -------------------------
 Arg1 = 3(Decimal) Different TX Rate History Display
 Arg2 = 0/1(Decimal) UI can support/ Both pomelo and UI
 -------------------------
 Arg1 = 4(Decimal) Send RSSI to FW
 Arg2 = (Decimal) RSSI Value
 -------------------------
 Arg1 = 5(Decimal) Send TX Power Tracking event to FW
 Arg2 = (HEX) bit0-7 TX_PWR Bit 8-15 RF_Type(0/1=1T2R/2T4R)
 ...... Future use.
fwctrl
 Cmd_Idx = 15
Display TX Rate History --> Cmd_Idx = 15
 [txrahis  ] (Arg1) (Arg2)
 -------------------------
 If you do not input type argument, we will display all TX rate hostory
 -------------------------
 Arg1 = 0(Decimal), --> You must enter rate type in Arg2
 Arg2 = 0x0-0x3f(HEX), --> You must enter rate type in Arg2
 Rate_Type = HEX BIT 0-5 to displaydifferent rate type
 Rate_Type = 0/1=CCK/OFDM
 Rate_Type = 2/3/4/5=HT_MCS BW0_SG0/BW1_SG0/BW0_SG1/BW01_SG1
 -------------------------
 Arg1 = 1(Decimal) Clear all TX rate history
 -------------------------
 Arg1 = 2(Decimal) Use TX_CMD to Control FW to collect TX Rate History
 Arg2 = 0/1(Decimal) Disable/Enable
 -------------------------
 Arg1 = 3(Decimal) Different TX Rate History Display
 Arg2 = 0/1(Decimal) UI can support/ Both pomelo and UI
 ...... Future use.
txrahis
 Cmd_Idx = 14
Dynamic Control --> Cmd_Idx = 14
 [dm  ] <Type> <Arg1>
 -------------------------
 Type=0 Enable
 Arg1 --> 0/1=Disable/Enable
 dbgcmd 14 0 0 --> Disable the Bandwidth autoswitch
 dbgcmd 14 0 1 --> Enable  the Bandwidth autoswitch
 This function is default enable
 -------------------------
 Type=1 Set the threshold 40Mhz to 20Mhz
 Arg1 --> the value will set to threshold of 40Mhz to 20Mhz
 dbgcmd 14 1 20 --> Set the 40Mhz to 20Mhz threshold = 20
 dbgcmd 14 1 15 --> Set the 40Mhz to 20Mhz threshold = 15
 -------------------------
 Type=2 Set the threshold 20Mhz to 40Mhz
 Arg1 --> the value will set to threshold of 40Mhz to 20Mhz
 dbgcmd 14 2 20 --> Set the 20Mhz to 40Mhz threshold = 20
 dbgcmd 14 2 25 --> Set the 20Mhz to 40Mhz threshold = 25
 -------------------------
 Type=3 Query threshold 
 dbgcmd 14 3 --> Query all our threshold
 -------------------------
 If 20Mhz to 40Mhz threshold <= 40Mhz to 20Mhz threshold
 If 40Mhz to 20Mhz threshold >= 20Mhz to 40Mhz threshold
 Return fail
 ...... Future use 
bandctrl
 Cmd_Idx = 13
Dynamic Control --> Cmd_Idx = 13
 [dm  ] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 DIG
 Arg1 --> 0/1/2/3/=Thresh High/Low/HighPwr_High/HighPwr_Low
 Arg1 --> 4/5/6/7=DbgMode/Rssi_val/DIG Algorithm/BackOffval
 Arg1 --> 20/30=DIG Enable/DIG Disable
 Arg2 --> Set value, Decimal
 cmd 13 0 0 40 --> DIG high threshold = 40
 cmd 13 0 1 30 --> DIG low threshold = 30
 cmd 13 0 2 70 --> DIG HPWR high threshold = 70
 cmd 13 0 3 60 --> DIG HPWR low threshold = 60
 cmd 13 0 4 0/1  --> DIG DbgMode = 0/1
 cmd 13 0 5 72  --> DIG Rssi_val = 72
 cmd 13 0 6 0/1  --> DIG Algorithm by FW false alm=0/ by SW rssi=1
 cmd 13 0 7 12   --> DIG BackOff value = 12
 cmd 13 0 9 18(dec)    --> DIG Min rx gain = 0x12(18)
 cmd 13 0 10 60(dec)    --> DIG Max rx gain = 0x3c(60)
 cmd 13 0 11 500 --> DIG high false threshold = 500
 cmd 13 0 12 100 --> DIG low false threshold = 100
 cmd 13 0 20 80 --> DIG enable
 cmd 13 0 30 80 --> DIG disable
 -------------------------
 Type=1 RateAdaptive
 Arg1 --> 0/1/2=Thresh High/Low40M/Low20M
 Arg1 --> 3/4/5/6=RATR0 Value High/Middle/Low40M/Low20M
 Arg2 --> For Arg1(0-3), Decimal. For Arg1(4-7), HEX
 cmd 13 1 0 50 --> High threshold = 50~55
 cmd 13 1 1 10 --> Low threshold 40M = 10~15
 cmd 13 1 4 01234567 --> RA change high RATA0 value=0x01234567
 cmd 13 1 4 ffffffff --> RA change middle RATA0 value=0xffffffff
 -------------------------
 Type=2 RF ON OFF Control --> RF ONF OFF dbg mode
 Arg1 = 0 Control IPS, 0:Disable IPS, 1: Enable IPS
 cmd 13 2 0 0 --> Enter IPS
 cmd 13 2 0 1 --> Leave IPS
 -------------------------
 Type=3 FrameSync
 Arg1 --> 0=0xc38 monitor
 Arg2 --> Set value, Decimal
 cmd 13 3 0 0/1 --> monitor reg0xc38/disable monitor reg0xc38
 -------------------------
 Type=4 CTSToSelf
 Arg1 --> 0/1=CTSToSelf enable/Threshold
 Arg2 --> Set value, Decimal
 cmd 13 4 0 0/1 --> disable/enable CTSToSelf
 cmd 13 4 1 30 --> Th=30~35
 Cmd_Idx = 12
Write memory address by char
 [w1  ] <Addr> <Data> (Size)
 Please refer to [w4]
 Cmd_Idx = 11
Read memory address by char
 [r1  ] <Addr> (Size)
 Please refer to [r4]
 Cmd_Idx = 10
Write memory address by word --> Cmd Index=10
 [w2  ] <Addr> <Data> (Size)
 Please refer to [w4]
 Cmd_Idx = 9
Read memory address by word
 [r2  ] <Addr> (Size)
 Please refer to [r4]
 Command index = 8
Modify dedicated RF register --> Cmd Index=8
 rfm <RF-Path> <Addr_Start> (Addr_End) <Data>
 <RF-Path> : 0~3=A~D, 4=All RF path
 <Addr_Start> : HEX, 0~2E
 <Addr_End> : HEX, 0~2E
 <Data> : HEX value
 Type rfm 3 0 123 --> Modify RF-D address 0 to 0x123
 Type rfm 2 0 2e 123 --> Modify RF-C address 0~2E to 0x123
 Type rfm 4 0 2e 123 --> Modify RF-A~D address 0~2E to 0x123
 Command index = 7
Change debug print flag
 dbgf <Flag_Type> <Flag_Value>
 <Flag_Type> : Decimal --> 0--?
 <Flag_Value>: HEX --> 32 bit debug event
 Command index = 6
for utility debug page use only
 uidbg <Type>
 Type = 0x01~....
 0x01 : Print 20/40M info
 0x02 : False alarm counter
 0x03 : AMPDU info
 0x04 : Print RX status info
 0x05 : Print RX status info
 0x06 : Print RX status info2
 0x07 : Print RX status info3
 0x08 : Print CCK long/short preamble/GI
 0x09 : Print OFDM long/short preamble/GI
 0x0A : Print MCS0-7 long/short preamble/GI
 0x0B : Print MCS8-15 long/short preamble/GI
 0x0C : Print Rx SNR
 0x0D : IBSS mode debug
 0x0E : BW 20/40 Judgement
 0x0F : TX FW INFO
 0x10 : Display ISR time
 0x11 : Clear ISR time table
 0x12 : Display beacon info
 0x13 : Retry packet histogram
 0x14 : RF read/write page counters
 0x15 : Connection state log(from connected to disconnected state)
 0x16 : Display the connection mgnt information counters
 0x17 : TX statistics1
 0x18 : TX statistics2
 0x19 : EEPROM Content
 0x1A : EEPROM Tx Power Content
 0x1B : Rate Adaptive Related
 0x1C : Reset counter for endurance test
 0x1D : Different transmit packet type display
 0x1E : RX status display
 0x1F : Tx Power tracking information
 0x20 : RX reorder info
 0x21 : 
 0x22 : AMSDU info
 0x23 : DIG display
 0x24 : RF Tx/Rx register
 0x25 : General information display
 0x27 : VENDOR IE(221) INFO, MGNT FRAME Rate
 0x28 : Current RF RX path state
 0x29 : Display MAC/PHY shadow register value
 0x2A : Actions for IOT
 0x2B : Rx Path Selection
 0x2D : TxPwrTrack test
 <Type> : UI debug type
uidbg
 Command index = 5
Dump all RF register. --> Cmd Index=5
 rfd (RF-Path) (Addr_Start) (Addr_End)
 <RF-Path> : 0~3=A~D, 4=All RF path
 <Addr_Start> : HEX, 0~2E
 <Addr_End> : HEX, 0~2E
 Type rfd --> Read RF-A~D all reg
 Type rfd 3 --> Read RF-D all reg
 Type rfd 3 0 --> Read RF-D address 0 reg
 Type rfm 3 0 2e --> Read RF-D address 0~2E reg
 Type rfm 4 0 1a --> Read RF-A~D address 0~1A reg
 Command index = 4
Write NIC adapter
 [wada  ] <} <} (]
 <} : 
 <} : 
 (] : 
 Command index = 3
Read NIC adapter
 [rada  ] <} <} (]
 <} : 
 <} : 
 (] : 
 Command index = 2
Write memory address by Dword
 [w4  ] <Addr> <Data> (Size)
 <Addr> : Writable memory address. For driver --> Page 0~15?
 <Data> : HEX value 0x00000000-->0xFFFFFFFF
 (Size) : Num of decimal dword max size < 4096
 Command index = 1
Read memory address by Double Word
 [r4  ] <Addr> (Size)
 <Addr> : Readable memory address. For driver --> Page 0~15?
 (Size) : Num of decimal dword max size < 4096
 Command index = 0
Debug command help
 You can type help to print all debug command directory/index
 [help] (Directory) (Command)
 Type help <directory index> --> Print command in the directory
 If directory=100, print all command index definition.
 Type help <command> --> Print
 [xxx] --> Command string
 <xxx> --> Necessary argument
 (xxx) --> Optional argument
AMSDU Size  6K~8K
AMSDU Size  4K~6K
AMSDU Size  2K~4K
AMSDU Size  1K~2 K
AMSDU Size   < 1 K
AMPDU Number   >40
AMPDU Number 20~40
AMPDU Number 10~20
AMPDU Number  5~10
AMPDU Number   < 5
AMPDU Size 32K~64K
AMPDU Size 16K~32K
AMPDU Size  8K~16K
AMPDU Size  4K~8 K
AMPDU Size   < 4 K
40MDuplicate
40MLower
40MUpper
40MFull
20MPacket
Rcvd_HW_err
MCS_32
MCS_15
MCS_14
MCS_13
MCS_12
MCS_11
MCS_10
MCS_9
MCS_8
MCS_7 
MCS_6
MCS_5
MCS_4
MCS_3
MCS_2
MCS_1
MCS_0
OFDM_54M
OFDM_48M
OFDM_36M
OFDM_24M
OFDM_18M
OFDM_12M
OFDM_9M
OFDM_6M
CCK_11M
CCK_5.5M
CCK_2M 
CCK_1M 
Incorrect cmd index
Print Firmware CMD Table.
<1. COMMON>
<2. TX_PROCESS_CMD>
<3. RX_PROCESS_CMD>
<4. SECURITY_CMD>
<5. Unknow>
1. Type help + directory index(1~)
2. Type help + directory index(1~) + cmd_index
Ghelp 1   
common
Ghelp 1 3 
common
Uindex
1. Type dbgcmd + cmd_index + 
2. Type Cmd_String + 
Gdbgcmd 1 0 20 -->
double word
Gr2 800 20 -->
}0x800
cmd string
Pomelo
debug command table
cmd_inde 2
G[r4  ] <Addr> (Size) 
1. [r4  ] 
2. <Addr> 
3. (Size> 
Err DIR
DBG CMDs:
------------------
0x%08lX%01s
%08lX
00   02   04   06   08   0A   0C   0E
=====================================
%04lX%01s
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
===============================================
%02lX%01s
Wireless Mode=%02x
NRM_TCB=%ldx
Idle_TCB=%ld
Que-%ld NumTxDesc=%d
 RcvdRate Info --> 
, Total=%10ld,
 OK=%10ld,
 CRC=%10ld,
 ICV=%10ld
, LongGI/Preamble=%10ld,
 ShortGI/Preamble=%10ld
 %s = %ld
 Aggregation Info --> 
 AMPDU Rx Size Info --> 
 AMPDU Rx Num Info --> 
 AMSDU Rx Num Info --> 
 False alarm counter --> 
 rOFDM_PHYCounter1 = 0x%08lX
 rOFDM_PHYCounter2 = 0x%08lX
 rOFDM_PHYCounter3 = 0x%08lX
Test --> receive write adapter command
 RF-%c
Modify RF-%ld Addr%02lx~%02lx=%02lx
%s=%ld
20/40 MHZ packet
NumRx20MHzPacket=%ld
NumRx40MHzPacket=%ld
CurCntParityFail=0x%08lX
CurCntRateIllegal=0x%08lX
CurCntCrc8Fail=0x%08lX
CurAll=0x%08lX
StaCntParityFail=0x%08lX
StaCntRateIllegal=0x%08lX
StaCntCrc8Fail=0x%08lX
StaCntMcsFail=0x%08lX
StaCntOfdmFail=0x%08lX
StaCntCckFail=0x%08lX
StaCntAll=0x%08lX
%s=%ld 
Current TX AMPDU Factor(Infrastructure) = %d
 LastTxPacketRate = 0x%X 
%s,TotalRcvdPacket=%ld 
%s,RcvdOKPacket=%ld 
%s,RcvdCRCErrorPacket=%ld 
%s,LongGI/PreamblePacketNum=%ld 
%s,ShortGI/PreamblePacketNum=%ld 
 RxSNR-%c=%lddB 
 Peer_bssDesc.BssHT.bdSupportHT =%d
 Peer_bssDesc.BssQos.bdQoSMode =%ld
 pHTInfo->bEnableHT =%d
 RegWirelessMode =%x
 CurrentWirelessMode =%x
 dot11CurrentWirelessMode =%x
 bCurBW40MHz =%x
 bCurShortGI20MHz =%x
 bCurShortGI40MHz =%x
 bCurrentHTSupport =%x
 pMgntInfo->mIbss =%x
 pMgntInfo->mAssoc =%x
 pMgntInfo->pStaQos->QosCapability =%lx
 pMgntInfo->pStaQos->CurrentQosMode =%lx
 BW-20/40 Judgement:
 MAC_REG%x=0x%02lx
 PHY register.
 PHY_REG%x=0x%08lx
Operating Band=upper
Operating Band=lower
 SC=0x%02lx
 Current TX FW info
pTxFwInfo->TxRate=0x%02x
pTxFwInfo->TxHT=%d
pTxFwInfo->EnableCPUDur=%d
pTxFwInfo->Short=%d
pTxFwInfo->AllowAggregation=%d
pTxFwInfo->RxMF=%ld
pTxFwInfo->RxAMD=%ld
pTxFwInfo->RtsEnable=%d
pTxFwInfo->CtsEnable=%d
pTxFwInfo->RtsSTBC =%d
pTxFwInfo->RtsHT=%d
pTxFwInfo->RtsRate =%d
pTxFwInfo->RtsBandwidth=%d
pTxFwInfo->RtsSubcarrier =%d
pTxFwInfo->RtsShort =%d
pTxFwInfo->TxBandwidth=%d
pTxFwInfo->TxSubCarrier =%d
pTxFwInfo->TxAGCOffset=%ld
pTxFwInfo->TxAGCSign =%ld
Enter-%d=%I64d
Exit-%d=%I64d
Delta-%d=%I64d
MAX-%d=%I64d
MIN-%d=%I64d
pMgntInfo->bEnableSwBeaconTimer=%d
pDesc[BEACON_QUEUE].OWN=%ld
Rx OK Packet Small(0-500)=%I64d
Rx Retry Packet Small(0-500)=%I64d
Rx OK Packet Middle(500-1000)=%I64d
Rx Retry Packet Middle(500-1000)=%I64d
Rx OK Packet Large(>1000)=%I64d
Rx Retry Packet Large(>1000)=%I64d
 RF Write page[%ld] = %ld
 RF Read page[%ld] = %ld
 BecomeDisconnectedIndex = %lu
 BecomeDisconnectedTime[%ld] = 0x%lX %lX
 Connect but doesn't rcv Beacon Period Cnt = %lu
 Connect but doesn't rcv Data Period Cnt = %lu
 Num of OnBeacon() called = %I64u
 Num of OnBeacon_Scan() called = %I64u
 Num of OnBeacon_Join() called = %I64u
 Num of OnBeacon_Bss() called = %I64u
 Num of OnBeacon_Ibss() called = %I64u
 Num of OnDeauth() called = %lu
 Num of OnDisassoc() called = %lu
 Link status from connected to disconnected Cnt = %lu
 Infra Disconnect Roaming Start Cnt = %lu
 Infra Disconnect Roaming Fail Cnt = %lu
 Adhoc Disconnect Cnt = %lu
 Connect Resume From Roaming = %lu
 Indicate Disconnect Cnt = %lu
 FwIMR(reg0xf4) = 0x%lx
 FwISR(reg0xf8) = 0x%lx
 FwCPUCnt(reg0x120) = 0x%lx
 FwTxCnt(reg0x128) = 0x%lx
 FwRxCnt(reg0x130) = 0x%lx
 NumTxInterrupt = %I64d
 NumRxInterrupt = %I64d
 NumRxDescFilled(%d) =  %I64d
 NumRxDescReturn(%d) =  %I64d
 NumMpSendPackets() = %I64d
 NumOutOfTCB = %I64d
 NumTxDescFill(%d) =  %I64d
 NumTxDescClosed(%d) =  %I64d
 NumTransmitTCB(%d) = %I64d
 NumTransmitTCB_Available(%d) = %I64d
 NumTransmitTCB_NotAvailable(%d) = %I64d
 NumTransmitTCBInsertTcbBusyQueue(%d) = %I64d
 MCSTxPowerLevelOriginalOffset[%ld] = 0x%lx
 CCKTxPowerLevelOriginalOffset = 0x%lx
 LegacyToHTOFDMOffset = 0x%x
 Reg 0x%x = 0x%lx
 AntGainOffset[19:8](Reg 0x%x) = 0x%lx
 rTxAGC_Rate18_06(0x%x)= 0x%lx
 rTxAGC_Rate54_24(0x%x)= 0x%lx
 rTxAGC_CCK_Mcs32(0x%x)= 0x%lx
 rTxAGC_Mcs03_Mcs00(0x%x)= 0x%lx
 rTxAGC_Mcs07_Mcs04(0x%x)= 0x%lx
 rTxAGC_Mcs11_Mcs08(0x%x)= 0x%lx
 rTxAGC_Mcs15_Mcs12(0x%x)= 0x%lx
 CurrentChannel = %d
 TxPowerLevelCCK[%ld] = 0x%x
 TxPowerLevelCCK[%ld](A, C) = (0x%x, 0x%x)
 TxPowerLevelOFDM24G[%ld] = 0x%x
 TxPowerLevelOFDM24G[%ld](A, C) = (0x%x, 0x%x)
 SilentReset executed num = %ld
Tx Reset  =%ld
Rx Reset =%ld
Total Reset =%ld
Page number before reset[Bub_Bcn] =%lx
Page number before reset[VI_VO] =%lx
Page number before reset[BK_BE] =%lx
Page number before reset[Mgn_HI] =%lx
 pHalData->SystemStartTime = 0x%lX %lX
 RxResetTimeIndex = %lu
 RxResetTime[%ld] = 0x%lX %lX
 TxResetTimeIndex = %lu
 TxResetTime[%ld] = 0x%lX %lX
 NumTxOkTotal= %I64d
 NumTxErrTotal= %I64d
 NumTxRetryCount= %I64d
 NumTxMulticast= %I64d
 NumTxBroadcast= %I64d
 NumTxUnicast= %I64d
 pAdapter->RxStats.NumCMPKRXQID = %I64d
 pAdapter->RxStats.NumNotCMPKRXQID = %I64d
 pAdapter->RxStats.NumQryPhyStatus = %I64d
 pAdapter->RxStats.SignalStrength = %ld
 pAdapter->RxStats.NumQryPhyStatusCCK = %I64d
 pAdapter->RxStats.NumQryPhyStatusHT = %I64d
 pAdapter->RxStats.NumPacketMatchBSSID = %I64d
 pAdapter->RxStats.NumPacketToSelf = %I64d
 pAdapter->RxStats.NumProcessPhyInfo = %I64d
 ThermalMeter in EEPROM[0] = %d
 ThermalMeter in EEPROM[1] = %d
 TXPowerTracking enabled = %d
 TXPowercount = %d
 TXPowerTrackingInitialized = %d
 CCKTxPowerAdjustCntCh14 = %ld
 CCKTxPowerAdjustCntNotCh14 = %ld
 TxPowerCheckCnt = %ld
 TXPowerTrackingCallbackCnt = %ld
 RFA_txPowerTrackingIndex = %d
 RFC_txPowerTrackingIndex = %d
 CCKPresentAttentuation = %d dB
 RF A I/Q Amplify Gain = %ld
 RF C I/Q Amplify Gain = %ld
 Rx Reorder Enable = %x
 Rx Reorder Drop Counter = %d
 ThermalReadBackIndex = %d
 ThermalReadback Value(C/A)[%ld] = 0x%x
 AMSDU NumOutOfTCB = %I64d
 AMSDU NumOutOfBufferInTCB = %ld
 AMSDU NumOutOfTxDesc = %ld
 DefaultInitialGain[0x%x,0x%x,0x%x,0x%x] = [0x%x,0x%x,0x%x,0x%x]
 Default framesync(0x%x) = 0x%x
 DIG Enable=%d
 DIG Backoff Enable=%d
 DIG Algorithm=FW DIG by False Alarm
 DIG Algorithm=SW DIG by RSSI
 DbgMode=NA
 DbgMode=%d
 DbgMode RSSI=NA
 DbgMode RSSI=%ld
 Real RSSI=%ld
 NewDig Backoff value=NA
 NewDig Backoff value=%d
 CurPD_TH = NA
 CurPD_TH = low power state
 CurPD_TH = normal power state
 CurPD_TH = high power state
 CurCS_ratioState = NA
 CurCS_ratioState = lower CS ratio
 CurCS_ratioState = higher CS ratio
 Max Dig initial gain = 0x%x
 Min Dig initial gain = 0x%x
 Low Thresh=%ld
 High Thresh=%ld
 High PWR Low Thresh=%ld
 High PWR High Thresh=%ld
 FALSE ALARM LOW Thresh=%ld
 FALSE ALARM HIGH Thresh=%ld
 OFDM Tx, rFPGA1_TxInfo(reg0x90c) = 0x%lx
 OFDM Tx, rFPGA0_TxInfo(reg0x804) = 0x%lx
 OFDM Rx, rOFDM0_TRxPathEnable(reg0xc04) = 0x%lx
 OFDM Rx, rOFDM1_TRxPathEnable(reg0xd04) = 0x%lx
 CCK TxRx, rCCK0_AFESetting(reg0xa04) = 0x%lx
 AutoloadFailFlag = %d
 IC Version = 0x%x
 RfMode = RF_1T2R
 RfMode = RF_2T4R
 RfMode = RF_1T1R
 RfMode = Unknown
 EEPROM Type = 93C46
 EEPROM Type = 93C56
 EEPROM Type = Unknown
 Inactive Power Save = %s
 Inactive Power Save (Previous Stae)= %s
SLEEP/OFF
 pPSC->eInactivePowerState = RF %s
 pMgntInfo->RfOffReason = %lx
 pHalData->eRFPowerState = RF %s
 RF-Path[%ld]= %d
 pMgntInfo->workitem_cnt= %d
 pMgntInfo->pwrsave_cnt= %ld
 start_addr=%lx L=%ld
IS NOT
 IOT:Peer [%s] Realtek AP
FALSE
 IOT:Force AMSDU is [%s]
 IOT:EDCA Trubo is Turn [%s]
DISABLED
ENABLED
 IOT:MCS15 is [%s]
 IOT:MCS14 is [%s]
 IOT:MCS8~MCS15 is [%s]
 IOT:Use MGNT Rate [%s]
 IOT:CDD fsync is Turn [%s]
 Associate to [%d]
 IOT:Associate to Realtek AP
 IOT:Associate to Broadcom AP
 IOT:Associate to Ralink AP
 IOT:Associate to Atheros AP
 IOT:Associate to Cisco
 IOT:Associate to Unknown AP
 IOT:Associate to Marvell AP
entry index[%d],ratr_index[%d],WirelessMode[%d],Support 40M[%s],MacAddr[]
0. STA: %02X-%02X-%02X-%02X-%02X-%02X
pHalData->TxPowerTrackingWorkItem
pMgntInfo->Ssid
bDriverStopped=%d
bSurpriseRemoved=%d
DisabledFunctions=%d
pPSC->bSwRfProcessing=%d
TX_Rate =%02x
TX_Rate =
SG0 BW0
%s %s
SG0 BW1
SG1 BW0
SG1 BW1
Disable
Enable
RA: Adjustive RATR is  =%s
RA: RATR state=%d
RA: RSSI Average =%ld
RA: RATR0 High_Level =0x%08lx
RA: RSSI High Thresh =%ld
RA: H 2 L Thresh =%ld
RA: RATR0 Middle_Level =0x%08lx
RA: L 2 H Thresh for 40M =%d
RA: RSSI Low Threshold for 40M =%ld
RA: RATR0 Low_Level_40 =0x%08lx
RA: L 2 H Thresh for 20M =%d
RA: RSSI Low Threshold for 20M =%ld
RA: RATR0 Low_Level_20 =0x%08lx
 CTSToSelfEnable = %d
 CTSToSelfTH = %d
 --------Rx Path Selection --------- = -------
 OFDM Rx Reg 0x%x = 0x%lx
 CCK Rx Reg 0x%x = 0x%lx
 disabled RF = 0x%x
 cck rx path = 0x%x
 Rx Path selection = enabled
 Rx Path selection = disabled
 Rx Path selection DbgMode = enabled
 Rx Path selection DbgMode = disabled
 cck rx path sel method = version 1
 cck rx path sel method = version 2
 SS_TH_low = %d
 diff_TH = %d
 rf enable rssi th[%d] = %d
 CCK avg pwdb[%d] = %ld
 Dbg rf_rssi[%x] = %d
 Real rf_rssi[%x] = %d
[DCMD]-->Dbg commadn argc = %d  dbg_flag=%ld value=%lx
Change dbg op=%ld
  Number of ARGUMENT is less than 3
 cmd 14 0 1/0 (Enable or disable)
 Bandwidth autoswitch Disable
 bForcedTx20Mhz Disable
 Bandwidth autoswitch Enable
 Bandwidth autoswitch Enable/Disable: Fail arguments
 Number of  ARGUMENT is less than 3
 cmd 14 1 value (value is the threshold we want to set Threshold40Mhzto20Mhz)
 Bandwidth autoswitch set 40Mhz to 20Mhz threshold Fail
 Bandwidth autoswitch set 40Mhz to 20Mhz (%d) >= Threshold20Mhzto40Mhz (%ld)
 Value is out of range
 Bandwidth autoswitch set 40Mhz to 20Mhz = %ld
 Number of ARGUMENT is less than 3
 cmd 14 2 value (value is the threshold we want to set Threshold20Mhzto40Mhz)
 Bandwidth autoswitch set 20Mhz to 40Mhz threshold Fail
 Bandwidth autoswitch set 20Mhz to 40Mhz (%d) <= Threshold40Mhzto20Mhz (%ld)
 Bandwidth autoswitch set 20Mhz to 40Mhz = %ld
 ARGUMENT is not 3
 Value of UndecoratedSmoothedPWDB is %ld
 Value of Bandwidth autoswitch 40Mhz to 20Mhz is %ld
 Value of Bandwidth autoswitch 20Mhz to 40Mhz is %ld
 Usage: cmd 14 [type] [Value]
 Type 0 =>Enable this function
 Type 1 =>Modify 40Mhz to 20Mhz Threshold
 Type 2 =>Modify 20Mhz to 40Mhz Threshold
 Type 3 =>Query all the Threshold Data
 CCK-[1][2][5.5][11]=
[%ld]
[%ld]
[%ld]
[%ld]
 OFDM-[6][9][12][18][24][36][48][54]=
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
 MCS_BW0_SG0[0-15]=
 MCS_BW1_SG0[0-15]=
 MCS_BW0_SG1[0-15]=
 MCS_BW1_SG1[0-15]=
[%ld]
 %s=%ld
 BW0_SG0=0
 BW1_SG0=1
 BW0_SG1=2
 BW1_SG1=3
Unknow command
Err Arg
USAGE:
 print fw help
Argc=%d
[MANS] 
[RTOS] 
[ALM]  
[PEM]  
[CMPK] 
[RAPD] 
[TXPB] 
[QUMG] 
rtl8190Pci\PHY_REG.txt
rtl8190Pci\PHY_REG_1T1R.txt
rtl8190Pci\PHY_REG_1T2R.txt
rtl8190Pci\AGC_TAB.txt
rtl8190Pci\MACPHY_reg.txt
rtl8190Pci\MACPHY_reg_PG.txt
rtl8190Pci\main.img
rtl8190Pci\data.img
rtl8190Pci\radio_a.txt
rtl8190Pci\radio_b.txt
rtl8190Pci\radio_c.txt
rtl8190Pci\radio_d.txt
rtl8192PciE\PHY_REG.txt
rtl8192PciE\PHY_REG_1T2R.txt
rtl8192PciE\AGC_TAB.txt
rtl8192PciE\MACPHY_reg.txt
rtl8192PciE\MACPHY_reg_PG.txt
rtl8192PciE\boot.img
rtl8192PciE\data.img
rtl8192PciE\radio_a.txt
rtl8192PciE\radio_b.txt
rtl8192PciE\radio_c.txt
rtl8192PciE\radio_d.txt
rtl8192Usb\PHY_REG.txt
rtl8192Usb\PHY_REG_1T2R.txt
rtl8192Usb\AGC_TAB.txt
rtl8192Usb\MACPHY_reg.txt
rtl8192Usb\MACPHY_reg_PG.txt
rtl8192Usb\boot.img
rtl8192Usb\data.img
rtl8192Usb\radio_a.txt
rtl8192Usb\radio_b.txt
rtl8192Usb\radio_c.txt
rtl8192Usb\radio_d.txt
pHalData->UndecoratedSmoothedPWDB = 0x%x( %d)
pEntry->MacAddr =
%02X%s
pEntry->rssi = 0x%x(%d)
EntryMaxPWDB = 0x%x(%d)
EntryMinPWDB = 0x%x(%d)
FsyncTimer
BlinkTimer
SwChnlTimer
SetBWModeTimer
TxPowerTrackingWorkItem
GPIOChangeRFWorkItem
DM_RFPathCheckWorkItem
DbgCmdWorkItem
RSDSM
rtl819xp.pdb
$B-T4c
 $B34'
@ !0c
%JL$<
%JLp<
 $BQH
 $B`|<
 $cc@
 $Bel<
"H!0c
$BjD'
 $BkD<
 $Bld0
$Bo`4c
 $czP
D !0c
rULLLL
iO5'#
eL3&"
_G/# 
TLBMOD
TLBL_data
AdEL_data
ExcCode6
ExcCode7
 4TiT
 4Ti\
 4Tid
 4Til
 0@P`p
`(!$c
`(!$c
L4BK@
y4BB@<
$B:($
 $B;P<
 $BO|<
!$cS4
$BVh4c
 $B^x
@ !0c
%Jk@<
%Jk|<
%Jl4<
%JlX<
e(!&&
"H!0c
@d4Bd
@ !2"
  !'9
D !0c
[CMPK]
(((((
AAAAAA
BBBBBB
Cnsd1
ractrl
sysctrl
txtbl
prange
unknow
RTL819X-%d>
RTL819X-%d>
Err DIR
DBG CMDs:
<1.CMN> <2.?>
 year-day-hour-min-sec-10ms=
     00       04       08       0C
     ===================================
 0x%08X  
%08X 
Dbg_Flag%d=0x%08x
TXLLT
NEXT            NEXT
 Page%3d
%4d    
%4d    
TXOQT
Head    Tail    Head    Tail
Unknow command
Err Arg
USAGE:
rULLLL
iO5'#
eL3&"
_G/# 
TLBMOD
TLBL_data
AdEL_data
ExcCode6
ExcCode7
<NULL>
0123456789abcdefghijklmnopqrstuvwxyz
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
[RX] pkt_len=%d offset=%d start_addr=%08x
 4TiT
 4Ti\
 4Tid
 4Til
 4TiT
 4Ti\
 4Tid
 4Til
 4TiT
 4Ti\
 4Tid
 4Til
?kRealtek RTL8190 Wireless LAN (Mini-)PCI NIC                                     
Em|6""}
Wy~$E
u3+Rox
+2g$@
DgQP'
l_x\9|
J0A\'(
Yh"5gW
[.X U6n3
MY68L1
CYcVl
>wY&Drf
,\@~V
$l^1(
2bb["
>hsrK :
abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq
gu>t9
ZJefe
what do ya want for nothing?
Error
DOT11D
Entering a regulatory domain
Get a valid country IE
Active scan: Channels
Active scan: Max Tx Power (dBm)
Passive scan: Channels
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
'4Nhu
MmMapLockedPagesSpecifyCache
DbgPrint
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
KeInitializeEvent
KeSetEvent
_vsnprintf
KeBugCheckEx
ntoskrnl.exe
KeStallExecutionProcessor
HAL.dll
NdisFreeMemory
NdisWriteConfiguration
NdisWaitEvent
NdisResetEvent
NdisMOidRequestComplete
NdisMSetMiniportAttributes
NdisOpenConfigurationEx
NdisCloseConfiguration
NdisReadConfiguration
NdisReadNetworkAddress
NdisInitializeEvent
NdisMIndicateStatusEx
NdisGetVersion
NdisMSleep
NdisMAllocatePort
NdisMNetPnPEvent
NdisMFreePort
NdisSetTimer
NdisAllocateMemoryWithTag
NdisMAllocateSharedMemory
NdisMFreeSharedMemory
NdisMInitializeTimer
NdisMCancelTimer
NdisAllocateIoWorkItem
NdisFreeIoWorkItem
NdisQueueIoWorkItem
NdisSetEvent
NdisMSetBusData
NdisMRegisterMiniportDriver
NdisMDeregisterInterruptEx
NdisWriteErrorLogEntry
NdisAllocateMemoryWithTagPriority
NdisMGetBusData
NdisMRegisterIoPortRange
NdisMMapIoSpace
NdisMRegisterScatterGatherDma
NdisMSynchronizeWithInterruptEx
NdisMRegisterInterruptEx
NdisAllocateNetBufferListPool
NdisFreeNetBufferListPool
NdisMDeregisterMiniportDriver
NdisMAllocateNetBufferSGList
NdisMSendNetBufferListsComplete
NdisFreeMdl
NdisFreeNetBufferList
NdisMUnmapIoSpace
NdisMDeregisterIoPortRange
NdisMDeregisterScatterGatherDma
NdisAllocateMdl
NdisAllocateNetBufferAndNetBufferList
NdisMIndicateReceiveNetBufferLists
NdisMFreeNetBufferSGList
NDIS.SYS
__C_specific_handler
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Realtek Semiconductor Corporation                           
FileDescription
Realtek RTL819xP NDIS Driverr
FileVersion
2002.1.0106.2011 built by: WinDDK
InternalName
rtl819xp.sys 
LegalCopyright
Copyright (C) 2006 Realtek Semiconductor Corporation                           
OriginalFilename
rtl819xp.sys 
ProductName
Realtek RTL819xP Wireless LAN (Mini-)PCI/PCI-E NIC                                     
ProductVersion
2002.1.0106.2011
VarFileInfo
Translation
