!This program cannot be run in DOS mode.
L&Rich}
.text
hGLOBAL_I@
h.rdata
H.data
.pdata
HGLOBAL_I
HPAGE
`INIT
.rsrc
B.reloc
XDK~D
l$ ATH
t!D9e
x ATAUAVH
|$xts
|$Htm
T$PfD
tWD8l$htPH
A^A]A\
XDK~u6H
@WAVH
vJfff
L$hE3
@8t$xt
{ ATH
L$8E3
D8d$Ht
d$0D8d$@t
x)L9%p
|$ ATH
tc@8s
tc@8s
tc@8s
T$8E3
tu9sHH
UVWATAUAVAWH
@8l$SH
L$pH3
A_A^A]A\_^]
@UVAUAVAWH
L$hE3
D8|$xt
|$`D8|$pt
L$hE3
D8|$xt
|$`D8|$pt
L$hE3
D8|$xt
|$`D8|$pt
L$hE3
D8|$xt
|$`D8|$pt
A_A^A]^]
L$hE3
@8l$xt
l$`@8l$pt
L$hE3
@8l$xt
l$`@8l$pt
@UAVH
|$ E3
@SAVAWH
|$hE3
l$ fff
0A_A^[
0A_A^[
\$ VH
L$0E3
L$0E3
@SUWH
T$8E3
D$P98H
D$P98H
t$HtAH
l$@rb
VWATAUAVH
L$0Lc
@(L95
A^A]A\_^
@SAVH
\$PuWH
t$8uSH
\$ UVWH
|$ ATH
@UVWH
VWATH
L$ Lc
WATAUH
 A]A\_
WATAUH
 A]A\_
@SUWH
|$ ATH
|$ ATH
t$ WH
D$@wXH
@SATAUAVAWH
P(LcD$4A
}$fff
A_A^A]A\[
t$ WH
|$ ATAUAVH
 A^A]A\
t$0u=H
|$ ATH
\$ ATH
\$ ATH
@UWATH
 A\_]
 A\_]
\$ VH
t$0tS
@SUAVAWH
l$ E3
(A_A^][
(A_A^][
L$ Lc
L$ VAVH
H;D$0
\$pD+
l$P~b3
L$pE3
D8l$ht
l$PD8l$`t
L$XE3
D8l$ht
l$PD8l$`t
@VAVAWH
H;D$0
\$pD+
l$@~b3
PA_A^^
PA_A^^
XDK~u
H9D$ s
H9D$ s
H9D$ s
L$PE3
WATAUH
0A]A\_
H9K`tvH9KxtpH9
XDK~u
WAUAVH
9slu}D
0A^A]_
UVWAUAVH
tIL9vXtC
L$xE3
tCL9vXt=H
L$xE3
@t)L9vXt#D
t D9vlu
D9vlu
L$0E3
tWL9vXtQH
L$xE3
L$xE3
L$0E3
tCL9vXt=H
s#L9vXt
@A^A]_^]
t-H9Ch
VWATH
 A\_^H
D$ H;
D$ H;
H+\$0
L$ H9L$ H
D$HH;
D$HH;
H+\$X
L$HH9L$HH
UVWATAUAVAWH
D9vlu
L$0E3
L$0E3
@A_A^A]A\_^]
x ATH
L$ E3
L$0E3
H9D$8t
L$`E3
L$`E3
H9|$ht
L$hE3
\$PH9|$hH
T$ E3
f;D$"w
|$0E3
D$(2 
t$ WH
D$@u(
t$ WH
L$0ff
L$@E3
L$@E3
@UVWAUH
A]_^]
A]_^]
L$IE3
L$PrV
L$8E3
D$Xrh
L$XE3
A]_^]
D9-[?
D$PrS
L$0E3
D$Xr_3
L$XE3
8T$8t
@SVWH
L$@"D$8
L$@"\$8
\$ WH
\$ WH
VUUUL
VUUUA
\$ WH
gfffL
gfffL
L$hE3
L$0E3
L$hE3
L$4E3
L$hE3
\$ ff
\$ WH
\$ WH
\$ WH
L$0E3
@SVWH
T$hrJ
@SATH
D$Hrs
d$Prh
D$Xrb
d$`rO
L$@E3
D$hrg
L$hE3
L$Xrr
D$Prg
D$`rq
D$Hrg
\$0s`H
\$ u*H
\$ srH
|$ u}
L$0E3
D$8rX
\$XuG
L$8E3
D$`rs
l$Xrh
D$prb
D$hrl
D$0rb
D8-#@
D$0rP
\$@siH
@SVWH
\$0tQ<
D$8D+
\$ UVATAUAWH
$@<@A
@A_A]A\^]
$@<@@
@SUVWATH
D9d$0u
l$xu(
D9d$pu
D9d$pu.
D9d$pu
@A\_^][
@SVWH
9|$`u(
9|$`u
9|$`u+
9|$`u
9|$`u
9t$xuA
9t$xu
9t$xu
9t$xu
9t$xu?@
$@<@A
D$hrM
L$pE3
D$xr\
\$DuK
L$xE3
\$PsUH
D$8E3
D$0ra
L$0E3
D$hrk
L$PE3
L$XE3
D$`re
L$$uK
L$`E3
L$PE3
D$Xr\
|$huK
L$XE3
D$8r^
T$\uK
L$ E3
D$(r`A
L$DuK
L$(E3
L$ E3
D$(r]
t$`uE
L$(E3
D$PrV
T$(uQ
L$HE3
D$Xr[
L$XE3
D$HrT
\$XuQ
t$(Hc5
t$(sCH
|$ Hc
L$pE3
D$8rV
T$XuC
L$8E3
|$0tK
L$PE3
L$PE3
D$Xr^
T$huK
L$XE3
L$PE3
D$Xra
\$hu}
L$XE3
\$ UVWH
\$ t 
\$ UVWH
\$@tR
@SUVWATH
 A\_^][
 A\_^][
@SUVWATH
0A\_^][
0A\_^][
@SUVWATH
D$hff
0A\_^][
@SUVWATH
 A\_^][
t$ WATAUAVAWH
gfffA
gfffL
A_A^A]A\_
@SUVWATH
`A\_^][
`A\_^][
`A\_^][
r 9-xf
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
9l$8u
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
uc= N
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
`A\_^][
snD;%
-w ;=dH
y9- C
`A\_^][
L$@E3
D$xrP
D9%A%
d$Dt"H
t$ WH
L$pE3
L$pE3
SVATAUH
D$0L9-S
L$@Lc
L$@Lc
L$@Lc
L$@Lc
A]A\^[
t99q0u4H
9|$Ht`H
VAUAVH
A^A]^
@UVWH
xLE;h
D$@E3
L$4E3
D$4u+D;
D$@E3
f;,GtVH
D$@E3
D$0fA;
Px9D$4~%H
T$8D;
VWATH
P0H9s
@SUWH
d$Pt$
L$PE3
D$Pu.D;
tTH9w
\$@H9w
\$@fA
t$ WH
d$8tH
D$0E3
d$ E3
@UVWATH
(A\_^]
t$ WH
P(fff
|$0Pt
gfffA
VWATH
D$XE3
 A\_^
@SVWAVH
 }nff
XA^_^[
@SATAUAVH
L$@Lc
L$@Lc
L$@Lc
A^A]A\[
D9t$0
L$@Lc
L$<tD
D$0E3
L$8E3
VWATH
L$`E3
@A\_^
_\tlH
@SVWATAUH
L9(u,H
L9(u,H
A]A\_^[
WATAUH
0A]A\_
L$hE3
L$pE3
L$pE3
@SAUH
D$h0uH
D$(E3
D$(E3
p_^]H
t$ I;
|$(I;
|$(I;
t$ I;
tL9i<uBH9
WATAUH
3y1E3
0A]A\_
5ws=E
l$ ATAU
l$0A]A\
t$ WH
d$PE3
@SUAUH
0A]][
t$hE3
0A]][
ATAUH
D$pE3
8\$ht
\$P8\$`t
L$XE3
8\$ht
\$P8\$`t
t$8t6H
@UATH
l$0E3
t$0D;
\$ t<A
L$pE3
L$pE3
t$0Hi
@SUVWH
t$xHi
8_^][
@SUVWH
t$xHi
8_^][
L$@Hc
L$PE3
H9t$PH
t$H@8t$X
f;\$<~
f;|$:
|$ ATH
L$0E3
D$@E3
T$8H;
@SVWH
L$@E3
@8l$P
@8l$Pt
@8l$Pt
D$(taH
t @85
s@@8sPt
sHH9s
\$ UH
t$0t$H
RksampleWDM
RKSAMPLE
HARDWARE/WDMDevice
CHardware::HookInterrupt FAILED
c:\allprojects\sw_modem\hsf_hwb2\..\rksample\hardware.cpp
\REGISTRY\Machine\System\CurrentControlSet\Services\RkSample
IRQVector
IRQLevel
Init: m_PowerCallbackWorkItem failed
NumberOfIds
CODECID
CodecList
Init: SamplesPerInterrupt=%d,BufferSize=%d
Init: HWInitRegs failed in re-init
HARDWARE
Init: HWInitRegs failed
CHardware: Failed to hook Interrupt
Initial  Power Source = %s
CodecId i=%d, ven1=0x%x, ven2=0x%x, type=0x%x
WinNTInitResources check pci config
PCI config offset 0x%x=0x%x
restore PCI config offset 0x%x=0x%x
WinNTInitResources --
m_PhysMemBaseAddr 0x%x -- m_Irq 0x%x
Activate()
Deactivate()
CHardware::ArmPMEevent
CHardware::DisarmPMEevent
PCI Rev ID = 0x%x
CHardware::ModemMonitor CHECK_PME - Returning TRUE
CHardware::ModemMonitor CHECK_PME - Returning FALSE
CHardware::ModemControl RKCTL_SET_D3INPROGRESS = %d
CHardware::ModemControl RKCTL_CLEAR_PME - Returning %d
CHardware::ModemControl RKCTL_IN_DIALING_MODE 
CHardware:: **** PULSE Digit DIAL begin ****
CHardware:: **** PULSE Digit DIAL end ****
OEM: SpkrMuteDelay = %d, present = %d, polarity = %d, 3Volt = %d
OEM: wDAAType = %d
OEM: fPmeWithInt = %d
HwData: VoiceCodecPresent = %d
HwData: ModemMicGain = %d
HwData: ModemMicAttenuation = %d
HwData: DACInputSource = %d
HwData: ModemSpkDriver = %d
HwData: OSCOff = %d
HwData: Riptide = %d
HwData: WakeUpAfterClose = %d
HwData: EnableInterrupts = %d
HwData: CharlemagneHandset = %d
HwData: PDC_ADPInput = %d
HwData: PME_with_FET = %d
HwData: DC_Adjust = %d
HwData: MuteByAnalogSpeaker = %d
HwData: NT4OpenPortPatch = %d
HwData: ExternalFilter = %d
HwData: Churchill = %d
HwData: UpdateConfigSpace = %d
HwData: ExternalIA = %d
HwData: EnableAudioGPI = %d
HwData: MoonWOR = %d
HwData: SonyVioThrottle = %d
HwData: MoonDmaWatchdog = %d
HwData: DisableSpeedStep = %d
HwData: HadsetExlusive = %d
HwData: DisableWaveGenerator = %d
HwData: DspAtIrql = %d
HwData: BanisterWorkaroundDisable = %d
HwData: VIA8233 = %d
HwData: AclinkLatencyHdwEnable = %d
HwData: nVidia = %d
HwData: DisableCpuThrottle = %d
HwData: DisableHWPulseDial = %d
HwData: EnableUnMuteSpeakers = %d
HwData: EnableVoiceRxTxMix = %d
HwData: EnableAliPlusFifo = %d
HwData: Enable48KHFifo = %d
DLG: Enabled = %d, Polarity = %d, PinIndex = %d, Debounce = %d
CHardware::DisableThrottling. DisableThrottlingCounter=%d
!!! DisableThrottling. InstallPowerCallback failed
CHardware::RestoreThrottling
RestoreThrottling. DisableThrottlingCounter==0
RestoreThrottling. DynamicThrottle_Dc=%d
RestoreThrottling. DynamicThrottle_Ac=%d
CHardware::InstallPowerCallback
!!! InstallPowerCallback. new KCallback Failed
\Callback\PowerState
!!! InstallPowerCallback. pPowerCallback->Open Failed
!!! InstallPowerCallback. pPowerCallback->Subscribe Failed
CHardware::UnInstallPowerCallback
!!! CHardware::UnInstallPowerCallback pPowerCallback==0
PowerStateCallback. Calling ReallyDisableThrottling ...
PowerStateCallback. IRQL>PASSIVE_LEVEL calling ReallyDisableThrottling through workitem
CHardware::ReallyDisableThrottling
CHardware::ArmWakeOnRing(%s)
CHardware::InstallAcDcCallback
!!! InstallAcDcCallback. new KCallback Failed
!!! InstallAcDcCallback. pAcDcCallback->Open Failed
!!! InstallAcDcCallback. pAcDcCallback->Subscribe Failed
!!! InstallAcDcCallback. pAcDcCallback !=0.  No action. 
CHardware::UnInstallAcDcCallback
!!! CHardware::UnInstallAcDcCallback pAcDcCallback==0
New Power Source = %s
c:\allprojects\sw_modem\hsf_hwb2\..\rksample\basic2hw.cpp
PULSEDIAL - Started
Make Started
Break Started
READHDW returned %x
Off hook current %dma
Line resistance %d ohms
LSD voltage %d (x 1000)
Device protection activated
Off hook finished
Phone line in use
Phone line is missing
Line current loss
High AC transistor power
High DC transistor power
SSD access failure
LSD access failure
Extension pickup
Extension hangup
LSD reset or version failure
Pulse digit finished
Churchill
Basic2
%s OVP/DLG Interrupt
Failure
Testing for OVP, GPIN = %x, Pin = %x, Int = %x: %s
Start OVP debounce...
Canceling OVP debounce
Modem Codec Gain Index = %d
Voice Codec Mic Gain = %d
Buffers
Lassen/wellington, set BUFFERS OFF
EnableACPI
GetChurchillDAAType return %d, GPIN = %x
Using 28.224Mhz Xtal
Using 24.576Mhz Xtal
Using 32kHz DLL
Using 32kHz PLL
Basic2 version is %d (restored)
Basic2 version (out)
--------------- version (in) = 0x%x
--------------- version (out) = 0x%x
version is 2190 (Riesling)
version is 2200 (Wellington)
version is 2210 (Bryce)
version is 2220 (Lassen)
FALSE
SMART
Basic2 version=%d m_BoardParams.wDAAType is %s m_BoardParams.f3VoltsIA is %s
Delay before PLL/DLL start=%d
GPIO_MUTE_SPEAKER
OEM: GPIO_MUTE_SPEAKER = %d
Bryce SSDid = %d
Lassen SSDid = %d
Unknown SSD version !!
Failed to Init SOAR
HandSet: Enabled=%d, Polarity=%d, GpioNumber=%d, Lcs_Debounce_Time=%d
m_BoardParams.DlgParams.Enabled is TRUE
Allocating m_OvpDebounceTimer with %d ms timeout
Failed to allocate m_OvpDebounceTimer !!!
Failed to allocate m_pSoarTimer
OVERRUN / UNDERRUN, STATUS2=%x
Target or Master abort!!! (status =%x)
Int=%d, Samples=%d, mod128=%d, time = %d
Int=%d probably FIFO underrun !
Basic2Hardware: *** Did not call m_SamplesHandler ***
GPIO_LCS_H Interrupt: Handset  %s  HOOK
INPUT_2 Interrupt: Handset  %s  HOOK
CBasic2Hardware::BaseAddress=0x%x
CBasic2Hardware::HWGoOffHook
GPIO_RELAY_MASK = %x
FAKING  STS_RKSAMPLE_OFF_HOOK_DONE from Basic2, 0x%p
CBasic2Hardware::SetDAARelay Relay = 0x%x, val 0x%x
MuteSpeaker (%d)
UnmuteSpeaker (%d)!!!
SetSpeakerVolume (%d)
CBasic2Hardware::SetExternalSpeaker(%d) Speaker Volume=%d
B2 ModemMonitor RKMON_V92_SUPPORTED returns %s
RKMON_GET_GPIO
RKMON_GET_GPIO: Returning Mask 0x%d
Faking remote HOOK - 0x%x
Faking remote OFF HOOK
Faking remote ON HOOK
B2 RKCTL_FLASH with code %d State=%s
RKCTL_SET_OSCILATOR: Start
RKCTL_SET_OSCILATOR: Stop
RKCTL_SET_GPIO: PinsMask: 0x%d, ValuesMask: 0x%d 
RKCTL_SET_GPIO: wGetBasic2Reg Gpout: 0x%d
RKCTL_SET_GPIO: Gpout after set mask: 0x%d
RKCTL_SET_GPIO: Gpout after set const mask: 0x%d
RKCTL_SET_GPIO: Returning %d
Starting DMA with LoopBack option %s
Clearing armed PME in D0 !
InitMMXModemCodec20410() is returning FALSE
END  of  CBasic2Hardware::WakeupRegisters()
D3->D0: IOPatch m_PhysMemBaseAddr  %x -> %x
D3->D0: IOPatch Irq to : %x
D3->D0: IOPatch Command from : %x
HwBufferSwitch() TotalDelayInSamples=%d Changing Curr=%d => Target=%d Change=%d
PDC_DMA_Handler TX: *** Did not call m_SamplesHandler ***
USART1_DMA_Handler TX: *** Did not call m_SamplesHandler ***
USART1_DMA_Handler RX: *** Did not call m_SamplesHandler ***
GetDMATime: large latency observed - %d uSec, probably FIFO underrun !
GetDMATime: adding %d samples to the count, based on time measurement
**** Couldn't find ThrottleController!!!! ****
Found ThrottleController 0x71138086 IO space=%x Reg=%x
ESDWA_SavePciConfig
ESDWA_CheckPciConfig
c:\allprojects\sw_modem\hsf_hwb2\..\rksample\exthwfuncs.cpp
Caesar
Caesar/Soar
Constructor
Destructor
CAESAR IF SetACPIState(%d)
CaesarIF StartDma LoopBack mode %s
CaesarIF StartDma LoopBack false
StopDma
StopDma - performing STOP_DIGITAL_DELAY_LOOP_BACK
SetDAARelay (%d, 0x%x)
SetDAARelay SDAA_CONFIG_KOREAN_RING
GetDAARelay return 0x%x
SetSpeakerVolume (%x)  - active
SetSpeakerVolume - (0) - prev. volume is %d
SetSpeakerVolume - restore prev. volume (%x)  
SetSpeakerVolume (%x)  - return FALSE
Init - active
c:\allprojects\sw_modem\hsf_hwb2\..\rksample\caesarif.cpp
Init:  SSD version %d (enum)
Init:  case default SSD %d, set to %d (342)
SOAR Init failed
Close()
Event timeout
EnableInterrupts (empty..)
DisableInterrupts (empty..)
ModemControl: RKCTL_ADAPTIVE_OFF_HOOK = 0x%x
ModemControl: RKCTL_CAESAR_SET_LSD_REG(a 0x%x, d 0x%x)
ModemControl: ANALOG_LOOP_BACK = 0x%x
CaesarIF ModemCtrl STOP_DIGITAL_DELAY_LOOP_BACK
CaesarIF ModemCtrl RKCTL_FLASH %s
CaesarIF ModemCtrl RKCTL_SPKP_DIR
CaesarIF ModemCtrl SDAA_CONFIG_RINGPOLLING
CaesarIF ModemCtrl RKCTL_SET_KOREAN_RING_FLAG  KoreanRing=%d
Caesar/CaesarIRQEvent
Init()
CCaesarIF::ArmWakeOnRing(%s)
Rksample/PulseDialer
CDialer::PulseDial(%d) !!!
Start Dialer
Continue Dialer
PulseDialer - detected throttling ABORT DIAL!!!
********* TimerCallback reentrancy in critical section ***********
Completing Break time with Busy Loop, m_RelayBreakTime = %d, ElapsedTime = %d, DeltaTime = %d
Updating Break ElapsedTime from %d to %d
Late to complete Break time, m_RelayBreakTime = %d, ElapsedTime = %d, DeltaTime = %d
OffHook - at microsecond - %d (Elapsed = %d)
Completing Make time with Busy Loop, m_RelayMakeTime = %d, ElapsedTime = %d, DeltaTime = %d
Pulses complete. time: DMA = %d, Cpu = %d
OnHook - at microsecond - %d (Elapsed = %d)
Updating Make ElapsedTime from %d to %d
Late to complete make time, m_RelayMakeTime = %d, ElapsedTime = %d, DeltaTime = %d
Send %d Pulses
Dialing done
Completing InterDigit time with Busy Loop, m_InterDigitDelay = %d, ElapsedTime = %d, DeltaTime = %d
Updating InterDigit ElapsedTime from %d to %d
Late to complete Interdigit delay, m_InterDigitDelay = %d, ElapsedTime = %d, DeltaTime = %d
InterDigit - OnHook - at microsecond - %d (Elapsed = %d)
Dialer Idle
*** ComputeLatencies: Make %d, Break %d, InterDigit %d (percents)
*** ComputeLatencies: return 0x%x
*** CDialer::Reset ***
CDialer::SetupPulseDialing
RelayMakeTime
RelayBreakTime
InterDigitDelay
HdwDial
%s: Put: ActualCnt > m_Size
%s: Fifo Overrun: available = %d, requested = %d
%s: Write ActualCnt(%d) larger than buffersize(%d)!!!
%s: Fifo Underrun: available = %d, requested = %d
%s: Write ActualCnt larger than buffersize!!!
ERROR - fict_Put not all data fictitiously put
CFIfo::Init, RKCTL_FIFO_FACTOR
CFIfo::Init, RKCTL_FIFO_SAMPLE_MOD
Err:SashaDbg m_SilencePadSamples =%d
Err: RecoverySamplesNotWritten=%d
Err: RecoverySamplesWritten=%d
Err: SamplesNotWritten=%d
Err: - found hole
Err: - successive hole
Err: Data lost. End of Hole>9. DeltaTagCounter=%d
Err: Data lost. End of Hole==0
Err: End of Hole <=9 DeltaTagCounter=%d
L$pE3
@8t$ht
t$P@8t$`t
L$XE3
@8t$ht
t$P@8t$`t
c:\allprojects\sw_modem\sw_modules\syssrv.cpp
%s%d.
c^h$U
$,08@HPXdp
 $,08@DPXhx
,<L\l|
@$%ABCD
 !PQRSTU
%s.%d
  (%u,%03u.%u)
 + j 
 - j 
c:\allprojects\sw_modem\dspmodls\dbgscr.cpp
\Device\DeviceScrSrv0
ALL/SCRDebug Client %s was unable to unregister due to wrong IRQL
ALL/SCRDebug Client %s was unable to unregister because constructor of KLowerDevice failed
ALL/SCRDebug Client %s was unable to unregister because he failed to allocate KLowerDevice
ALL/SCRDebug Client %s was unable to unregister because DBGSRVNT returned some ERROR
Can't Read m_PrintFunc
Same instance can't register twice
Empty Path
%s Add %s
Instance already Unregistered
%s Delete %s
\Registry\Machine\System\CurrentControlSet\Services
\Registry\Machine\System\CurrentControlSet\Control
\Device\
\DosDevices\
\Device\DebugMessageDevice
SOAR Interface version, %d
SOAR code version, %d
SOAR Resources allocated, Create()
SOAR Resources released, Destroy()
SR_Init - begin Critical Section failed
SR_Init - end Critical Section failed
SR_Close - begin Critical Section failed
SR_Close - end Critical Section failed
SDAA_CONFIG_PRE_RING_CLID setting m_PreRingCidIndicatorOn to: %d 
SSD Version %d
R6, %d
R26, %d
R28, %d
R30, %d
R38, %d
R56, %d
R60, %d
R64, %d
R261, %d
330Khz duty cycle, %x
330Khz Impedance, %x
4Mhz Impedance, %x
SDAA_CONFIG_EXTRING - %d
SDAA_CONFIG_KOREAN_RING - %d
SDAA_CONTROL_VOLUME during OffHook - save the new volume %d
SDAA_CONTROL_VOLUME SetSpeakerVolume %d
Repeated SetDAARelay call skipped
ISR_Control - begin Critical Section failed
ISR_Control - end Critical Section failed
I/O Critical Section failed
D0 State
D3 State
DAC Control VM1=%d, SCM=%d LM1=%d GAIN=%d
ADC Control GAIN=%d, AM1=%d Dither=%d RXG=%d
SDAA_CONTROL_EXTRING - %d
Unknown Task
Write SSD(%x)= %x
Read SSD(%x) failed
Hal access timed out!!!
Read LSD()=%x
Read LSD(%x) failed
Write LSD(%x, %x), returned %x
bSetLSDField(%x) with null mask
bSetLSDMASK(%x) with null mask
bResetLSDMASK(%x) with null mask
Unknown packet
Script(%d) failed
ReadBuffer failed, CurScript = %x
Write NewSSD(%x)= %x
Pulse Dialing Done
UpdateDACsetting - empty
Rx gain=%x
Unknown relay code
Set Loopback
Clear Loopback
ReadHdw - empty
Ring Gain
CID Gain
Hardware make %d, break %d
Hardware pulse dialing started, %d pulse(s)
FullPower - empty
SetDMA - empty
IRQ called from REDUCE_POWER
Ultra-low power ring detection
WOR - Aborted, Bus driver already in D3
Offhook while line is in use
Offhook delayed - Ring Active
Vbatt = %d, MonADC = %d
Offhook Set Drive: LSD voltage= %dmV, Drive= %x
Final offhook LSD voltage= %dmV, Drive= %x
OffHook
OnHook data mode
OnHook status mode
Hangup due to DLG
High Current - setting SSD to high power
Normal Current - setting SSD to normal power
Offhook done
LSD Power up failed (%d)
Set Drive: LSD voltage= %dmV, Drive= %x
SOAR Initialized, Init()
LSD Version: %x
LSD Bond Option: %x
SOAR Initialization failed, Init()
LSD complete in ISR
Timer complete in ISR
DIB Error counter = 16
Pulse dial digit done
SOAR finished, Close()
Unknown hardware code
Make Time=%d, Break Time=%d, Offset=%x
Hardware pulse dialing - %d
RING_WAIT: Ring is gone
SetSpkrVolume - empty
SetSpkrSource - empty
Set Listen Mode on
Set Listen Mode off
Callback request failed
Wrong regester for pulse dialing in bSetEIRState
Set EIR on
Set EIR off
CID Reset
SSD reset - 330Khz is active
SSD reset - CID state machine is active
SSD reset - in Listen Mode
SSD reset - LSD Power is off
Listen failed to clear
Wakeup - switch to 4Mhz failed
SetSpkrVolume during OffHook %d, Don't change Volume !
Looking for Ring = 0
Looking for Ring = 1
Homer - Soft Ring
Listen failed to set
Full power ring detection
Version not supported - %d
Check Drive: LSD voltage= %dmV, Drive= %x
DAC adjusted= %d, DAC= %d TRDC= %d 
m_DAClspan is 0, Avoid division by zero
Set DAC: Volts = %d, Counts = %d
DAC hunting detected
DAC stuck detected
Wrong regester for pulse dialing in SetDAC
Wrong regester for pulse dialing in MakePulse
Wrong regester for pulse dialing in OnhookAsBreak
Wrong regester for pulse dialing in BreakPulse
Extension monitoring started
OnHook data mode - Pre Ring Indicator is OFF
OnHook data mode - Pre Ring Indicator is ON
Start LCL Monitor
LCL = 0x%x
LCL look for low
LCL look for high
RING_WAIT: Ring was detected
No line call SetSpkrVolume %d
DAC calibration failed using default %d
DCctrl1= %d, DCctrl0= %d
Initial DAC value= %d, Counts= %d
LSD(%x) = 0x%x
Init failed during TestAndWakeup
ERROR: Restart failure from TestAndWakeup
Monitor ADC calibration failed
Monitor ADC calibration=%dmV
Resistor calibration failed
Resistor calibration=%d ohms
Rfactor= %d, HRatio= %d, LRatio= %d
Hangup due to High power %d with low Rs %d
Going into low AC current mode
SSD_D0 pending interrupt
OFFHOOK - Save current Volume = %d, and Mute.
Ring Mode
CID Mode
Hardware pulse dialing setup
callback, possible read error!
Country Setting = Complex
Country Setting = 600
Country Setting = 540
AC Comp is on
AC Comp is off
Tx gain=%x
Set DAC: Vdac = %d, Count = 0x%x, Target = %d
MakeSetting = %x, Speed = %x
Low PWR+ - setting AVDD to 3.15
Clear loopback
Set loopback
Set DIB loopback
Unexpected loopback
High Current - setting AVDD to 3.45
Normal Current - setting AVDD to 3.15
Normal Current - setting AVDD to 3.3
VBatt < Vtr, VBatt adjusted to %d
Curve= %d, i= %d Rs= %d, Mode=%d
TipRing= %dmV, TotalCurrent= %dmA (measured)
TipRing= %dmV, TotalCurrent= %dmA (target)
Extension hangup
Extension pickup
Line missing: TipRing = %d
DCOff = %x, m_MonADC = %x
Start Ring
Stop Ring
Off hook
Second off hook
DAC calibration results - zero: High range= %d, Low range= %d
DAC calibration results - span: High range= %d, Low range= %d
Switching to low Vbatt mode
Vbatt = %d, Vtrdc= %d
Failed to go off hook before Vdd state
Rx DC offset= %d
Large Rs shift, Bit Mode off
Returning to normal AC current mode
High DC power, ignoring curve
Measured line conditions at %dms
Qdc power= %dmW, Vtrdc = %dmV
Iac= %dmA, Idc = %dmA
Rs= %d, Vr28 = %d
Curve slope= %d, Tolerance= %d
Vtr= %dmV, Itotal= %dmA
Vtr= %dmV, Itotal= %dmA (from curve)
Bit Mode = %d
Low DC current, ignoring curve
LSD in Reset
RunCaesarStateMachine - begin Critical Section failed
RunCaesarStateMachine - end Critical Section failed
Vbatt was %d changed to %d
Panic state
Turning GPIO IRQ on
OffhookDone call SetSpkrVolume %d
Adaptive offhook delay ... %d
Adaptive offhook stable
Adaptive offHook stopped
IRQ from unrecognized LSD version
IRQ from invalid source, ISRC = %x
Wake event
DIB Error counters full
LCL state change
\Device\MSPDHAL
Failed to Connect to the VOIP HAL Driver
Failed to Send QUERY_INTERFACE IRP to the VOIP HAL driver
Succeeded to get control interface from VOIP HAL driver
FIFO_32BITS
ATI type FIFOs (32 Bit samples)
c:\allprojects\sw_modem\rksample\csampler.cpp
LineRX
LineTX
VoiceRX
VoiceTX
Rksample
7.80.2.0
HwDriver version is %s
Call HalAdapterCommon->ModemHWInit
CSampler::HardwareRingDetected - Soft Ring turned off
Call HalAdapterCommon->ModemHWExit
Rksample_Activate - re-activation
Rksample_Activate - GetHWInstance Failed
WAIT_FOR_SPIKE
Rksample_Activate - m_NumOfIntsToWaitForSpike = %d
Rksample_Activate - Allocation of m_pDialer Failed
Rksample_Activate - m_pHW == NULL
DC_CALC_PARAMS
DC_calc values from the registry
Didn't get DC_calc values from registry - will use defaults
DC_calc DCoffset=%d CalibrationTime=%d EstimationTime=%d
SOFT_RING_PARAMS
Using ring info from the registry
Didn't get ring info from registry - will use defaults
Ring: FitlerDC=%d RingLimit=%d SwitchLimit=%d
LINE_CROSS_PARAMS
Using LINE_CROSS_PARAMS info from the registry
LineCross: count limit=%d
Rksample_Activate: failed to init the MODEM HARDWARE !
Threshold received from HW is %d
No threshold return from HW, digital delay calculation not supported
Bad Charlemagne found, will swap samples
Modem Hardware activated
f12KhzSR ENABLED
RingParams index=%d
Modem Hardware Start DMA succeed
Rksample_Activate: SUCCESS in init HARDWARE
Not Win98
EnableKmixer
Enable Kmixer.
Enable Vista.
Disable Kmixer.
m_IntCounter = %d, j = %d, m_DigitalDelay = %d
Digital loopback - spike is not found
CADMUS m_IntCounter = %d, j = %d, m_DigitalDelay = %d
CADMUS m_IntCounter = %d, j = %d, m_AMOS_RX_buf = %d, %d, %d, %d, %d, %d 
No spike found after %d Interrupts
Line cross or ring during offhook - Hang up
Line cross or ring detection count %d
Digital loopback sent RKCTL_STOP_DIGITAL_DELAY_LOOP_BACK Interrupt = %d m_DigitalDelay = %d val = %d
ReadSamples(%d)  returned %d
Work around for sharp noise on off-hook
HW_IntHandler tried to handle %d Voice TX samples
WriteSamples(%d) returned %d
ERROR TX Fifo Underrun of %d samples
CSampler::HWEventDetected - NULL event callback function!
Bus UNDERRUN DETECTED %d samples
Bus OVERRUN DETECTED %d samples
CSampler::STS_RESTART_FIFOS, m_SpeakerVolume = %d
STS_RESTART_FIFOS: SamplesAddedDelay = %d
CSampler::ModemControl STS_RESTART_FIFOS due to halt tempSpeakerVolume = %d
CSampler::STS_RESTART_FIFOS AcquireThirdPartyAudioStreams
Smart
STS_DAA_TYPE is %s
CSampler::HWEventDetected STS_BUS_LATENCY_HDW
BLLineRX
CSampler::HWEventDetected STS_BUS_LATENCY_HDW failed to init fifo
CSampler::STS_RKSAMPLE_NOLINE 
CSampler::STS_RKSAMPLE_OFF_HOOK_DONE, UnMute carp
CSampler::STS_RKSAMPLE_NOLINE cancel UnMute timer
CSampler::STS_RKSAMPLE_OFF_HOOK_DONE cancel UnMute timer
STS_RKSAMPLE_OFF_HOOK_DONE call amos
CSampler::STS_REPLACE_FIFO_VIRT_ADD
CSampler::STS_REPLACE_FIFO_VIRT_ADD - replace fifo virt add
CSampler::STS_ENABLE_ALI_PLUS_FIFO
CSampler::SetupPulseDialing Enable Maxsamplevalue to %d.
CSampler::SetDAARelay:Relay(%d), Mute carp
CSampler::SetDAARelay:Soft Ring = %d, Line cross = %d
CSampler::SetDAARelay:Relay MonitoredDaaType = %d, rc = %d
CSampler::SetDAARelay:Relay, UnMute carp
CSampler::ModemMonitor m_pHW: 0x%x, pOutBuffer: 0x%x, pBytesReturned: 0x%x
RKMOM_DELAY_RX_TX pOutBuffer = [%d], Digital delay was not calculated yet.
RKMOM_DELAY_RX_TX pOutBuffer = [%d], m_DigitalDelay = [%d]
KMixerSpkpInitialDelay
RKMON_GET_SPKR_MIC_DELAY -- get KMixerInitialSpkpDelay = %d
CSampler::ModemMonitor = %d , MicDelay = 128*48*2 (CARP)
CSampler::ModemMonitor = %d , MicDelay = %d(KMixer)
CSampler::ModemMonitor = %d , MicDelay = %d (HW Spkp)
CSampler::ModemMonitor  RKMON_DMAINTCOUNT IntCount=%d,sampleCount=%d
CSampler::ModemControl RKCTL_SESSION_TYPE %d
CSampler::ModemControl RKCTL_SET_CADMUS m_IsCadmus = %d
CSampler::ModemControl RKCTL_START_DC_CALC
CSampler::ModemControl RKCTL_DIALER_PULSE_DIAL_DONE disable Maxsamplevalue to 0.
csampler ModemCtrl RKCTL_ENABLE_POWER_CROSS_DETECTION  m_LookForLineCross=%d
CSampler::SetSpeakerVolume:Volume = %d
FALSE
CSampler::SetSpeakerVolume: m_ThirdPartyAudio is %s
CSampler::SetSpeakerVolume 0 : Calling ReleaseThirdPartyAudioStreams
CSampler::SetSpeakerVolume 0: Just Mute streams
CSampler::SetSpeakerVolume: Calling AcquireThirdPartyAudioStreams
..... skipping SetSpeakerVolume(%d), m_SessionMode = %d
CSampler::Sleep()
CSampler::Sleep() call STRMDSP_CTL_SCR_SRVICES
OffhookWACallBack
CSampler::Wakeup()
CSampler::Wakeup() m_SessionMode=%d with Option %d
SPKR_MUTE_DELAY
Silab Offhook: SPKR_MUTE_DELAY values =%d
EnableSilabOffhookNoiseWA, set timer =%d
CSampler HwBuffSwitch() Perform Tx.Get(%d)
Modem Hardware Start DMA Failed
GetHWInstance -- CHARDWARE_VERSION not compatible. Csampler = %d, Hardware = %d
UnmuteThirdPartyAudioCallBack - Timeout expired
AcquireThirdPartyAudioStreams On Win98 - Old Architecture...
AcquireThirdPartyAudioStreams using new architecture...
StrmDisp
StreamType
CSampler::AcquireThirdPartyAudioStreams -- Failed to read lStreamType from modem registry !!!
CSampler::AcquireThirdPartyAudioStreams -- get KmixerInitialDelay from the registry bIsSpkpSession = %d
CSampler::AcquireThirdPartyAudioStreams -- get KMixerSpkpInitialDelay = %d
KMixerDataInitialDelay
CSampler::AcquireThirdPartyAudioStreams -- get KMixerDataInitialDelay = %d
MaxSampleValue
CSampler::AcquireThirdPartyAudioStreams m_ThirdPartyAudioMaxSamplesValue = %d 
CSampler::AcquireThirdPartyAudioStreams -- Failed to read lMaxSampleValue from modem registry !!!
UnMuteTimerDuration
CSampler::AcquireThirdPartyAudioStreams UnMuteTimerDuration = %d 
CSampler::AcquireThirdPartyAudioStreams fail to create m_pUnmuteThirdPartyAudio . 
CSampler::AcquireThirdPartyAudioStreams -- Failed to read UnMuteTimerDuration from modem registry !!!
CSampler::Csd Start failed
CSampler::AcquireThirdPartyAudioStreams, Just need to start streams(m_UseRxAudioStream = %d)
CSampler::ReleaseThirdPartyAudioStreams
CSampler::FreeCsd delete CCsd
Rksample/DCCalc
CDCCalc::Init RxDC_Desired=%d CalibrationTimeInSamples=%d
CDCCalc::Reset
DCCALC_IDLE Done: m_SamplesInState = %d (%d)
DCCALC_ACQUIRE_RX Done: RxDC_Initial = %d, m_SamplesInState= %d
DCCALC_WAIT_TX_DELAY Done: m_SamplesInState= %d
DCCALC_ACQUIRE_MODIFIED_RX Done: RxDC_Modified = %d m_SamplesInState= %d
DCCALC_ACQUIRE_MODIFIED_RX Done: TX DC offset = %d
DCCALC_LOCKED_VERIFY: Final Rx DC = %d m_SamplesInState= %d
DCCALC Tx DC Options: %d or %d
ThirdpartyAudio/KmixerSw
Succeeded
Failed
----    ReleaseStreams %s
CGenCsd::Start
CGenCsd::Start StartStreams %s
SetSpeakerVolume (%d), m_IsSpkpSession = %d
CGenCsd::Mute : dwGain =%x
RegisterKMixer
RegisterKMixer RX success
CGenCsd::RegisterKMixer - IoGetDeviceInterfaces Rx failed
RegisterKMixer TX success
RegisterKMixer RX Use Tx
CGenCsd::RegisterKMixer - IoGetDeviceInterfaces Tx failed
CSD::AcquireAmcHalControlIFs
c:\allprojects\sw_modem\rksample\gencsd.cpp
\Device\XAudio
StreamsAquired--(%d)
CSI_FL_FROMPC : m_hTxStream(0x%x) Buffer(0x%x)
CyclicInitFrames for TX %s
CSI_FL_TOPC : m_hRxStream(0x%x) Buffer(0x%x)
CyclicInitFrames for RX %s
StreamsAquired -> Calling Stop
MICHAL StreamsAquired -> Calling SetSpeakerVolume, m_SpeakerVolume = %d
***Stream_Start for RX %s --- Stream_Start for TX %s
MICHAL StreamsAquired -> Calling SET_MIC_SPEAKER_GAIN, dwGain = %d
QueryAndInitConexantStreamDispatcher %s  m_hStreamDispatcher(0x%x)
---- Stop
----    ICSD_ReleaseStreams %s
---- m_StreamsAquired %s : m_StreamsStarted %s
CCnxtCsd::Close
CCnxtCsd::Start
CCnxtCsd::Start streams already acquired - no action.
++++  ICSD_AcquireStreams  %s
CCnxtCsd::Mute call SET_MIC_SPEAKER_GAIN !!
CCnxtCsd::Mute DELAYED !!
c:\allprojects\sw_modem\rksample\kmixersw.cpp
CKMixerSw::AcquireHWStream Failed initialization
CHwStream::~CHwStream 
~CHwStream::m_dwStreamInfo=0x%x,Virt=0x%x
ThirdpartyAudio/KmixerSw/CHwStreamRx
ThirdpartyAudio/KmixerSw/CHwStreamTx
CHwStream::Init begin
CHwStream::Init - The Filter supports %d pin types
CHwStream::Init Interface[%d]: Set %x Id: %x Flags: %x
CHwStream::Init Medium[%d]: Set %x Id: %x Flags: %x
CHwStream:: - STATUS_OBJECT_TYPE_MISMATCH
CHwStream:: - STATUS_ACCESS_DENIED
CHwStream:: - STATUS_INVALID_HANDLE
CHwStream:: - STATUS_OTHER: %x
CHwStream::Init - Failed Create Pin: status = %x
CHwStream::Init Samplerate: %x(%d), SampleSize (in Bytes): %x
CHwStream::Init m_LastPosition = %x, m_CurrentPosition = %x, m_DelayToStart = %d
CsdAudio
c:\viewers\CSD\KMixerTx.csa
c:\viewers\CSD\KMixerRx.csa
CHwStream::CyclicInitFrames %x %x %x
CHwStream::SetVolume dwLeftRight = %d, dwLevel = %d
CHwStream::QueryShutdown ulIsBusy = %d
TX, Stopping stream because IRPs are under threshold
Stopping stream due to too much Data...  Requeuing.
***** Fatal Playback Error! Resynch!
SpTX -->  ADD_SAMPLE
SpTX --> DELETE_SAMPLE
Record Detected Playback Fatal Error!  Resetting! 
Rec: Stopping stream due to insufficient Data...  Requeuing. %x
Play: Stopping stream due to too much Data...  Requeuing. %x
CSD::SendBuffer - Failed to allocate Irp
CSD::SendBuffer - Failed to allocate StreamHeader !
CSD::SendBuffer - Failed to acquire DeviceObject
**** PLAY Drift Rate Detected %x, Direction %x
OverAll Drift Rate is now %x, Total %x
**** REC Drift Rate Detected %x, Direction %x
c:\allprojects\sw_modem\dspmodls\dbgdump.inl
\Device\DmpSrvNTDevice0
ThirdpartyAudio/Csd
++++ Start
c:\viewers\CSD\VoiceTxFile.csa
c:\viewers\CSD\VoiceRxFile.csa
CCsd::Control SET_MAX_SAMPLE_VALUE = %d
\Device\CStreamDispatcher
RSDSs
CAXHWBS2.pdb
x ATAUAVH
D$`t!
|$0E3
A^A]A\
L$`H3
XDK t
H9A@t
VWATAUAVH
A^A]A\_^
WATAUH
0A]A\_
0A]A\_
t$ WH
SUVWATAVAWH
9t$@D
D;d$@
pA_A^A\_^][
@SVWH
Class
ExAllocatePool
ZwClose
RtlInitUnicodeString
PoStartNextPowerIrp
MmUnmapIoSpace
IofCompleteRequest
IoFreeIrp
PoCallDriver
ObfDereferenceObject
IofCallDriver
ZwPowerInformation
KeInitializeDpc
ExFreePool
IoAllocateWorkItem
KeInsertQueueDpc
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
ExUnregisterCallback
IoQueueWorkItem
ExAllocatePoolWithTag
ExRegisterCallback
ExCreateCallback
IoFreeWorkItem
RtlAppendUnicodeToString
IoIsWdmVersionAvailable
KeSetEvent
KeCancelTimer
KeSynchronizeExecution
KeInitializeEvent
KeWaitForSingleObject
KeClearEvent
IoGetDmaAdapter
strncpy
sprintf
KeBugCheckEx
ntoskrnl.exe
strncmp
strncat
KeInitializeTimer
RtlTimeToTimeFields
RtlUnicodeStringToAnsiString
RtlQueryRegistryValues
RtlAppendUnicodeStringToString
RtlAnsiStringToUnicodeString
RtlInitAnsiString
PsTerminateSystemThread
KeSetPriorityThread
ZwCreateKey
ZwOpenKey
ZwQueryValueKey
IoDeleteSymbolicLink
IoCreateSymbolicLink
IoCreateDevice
IoDeleteDevice
IoAttachDeviceToDeviceStack
IoAllocateIrp
IoBuildSynchronousFsdRequest
IoGetAttachedDeviceReference
PoRequestPowerIrp
KeReleaseMutex
IoCancelIrp
PoSetPowerState
RtlFreeUnicodeString
IoSetDeviceInterfaceState
IoReleaseCancelSpinLock
IoAcquireCancelSpinLock
IoDetachDevice
RtlIntegerToUnicodeString
MmMapIoSpace
ObReferenceObjectByHandle
IoConnectInterrupt
IoDisconnectInterrupt
KeSetTimer
KeSetTimerEx
IoFreeMdl
IoGetDeviceObjectPointer
IoBuildDeviceIoControlRequest
PsCreateSystemThread
KeInitializeMutex
KeRemoveEntryDeviceQueue
KeReleaseSpinLockFromDpcLevel
IoGetDeviceInterfaces
ZwCreateFile
KeResetEvent
KeDelayExecutionThread
IoGetRelatedDeviceObject
MmBuildMdlForNonPagedPool
IoAllocateMdl
KeRemoveQueueDpc
KeQueryPerformanceCounter
HAL.dll
KsSynchronousIoControlDevice
KsCreatePin
ks.sys
VS_VERSION_INFO
StringFileInfo
000004B0
CompanyName
Conexant Systems, Inc.
FileDescription
HSF_HWB2 WDM driver
FileVersion
7.80.2.0 built by: WinDDK
InternalName
HSF_HWB2.sys
LegalCopyright
Copyright Conexant Systems, Inc. 2008
OriginalFilename
HSF_HWB2.sys
ProductName
SoftK56 Modem Driver
ProductVersion
7.80.2.0
VarFileInfo
Translation
