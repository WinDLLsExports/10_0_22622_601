!This program cannot be run in DOS mode.
.text
`.text_hfh?
`.rdata
@.data
.pdata
@.didat
.DDIData
.rsrc
@.reloc
L$0H3
L$pH3
L$(H3
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
\$ WH
@SVWH
SVWAVH
8A^_^[
WAVAWH
\$8H;
A_A^_
p:_0#
WAVAWH
0A_A^_
ntelA
ineID
\$ UH
M H1E
 H3E H3E
L$ SUVWH
8_^][
L$ SUVWH
8_^][
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
SVWAVAWH
0A_A^_^[
H9\$0t
\$ UVWH
L$HH3
L$(E3
UVWAVAWH
D9|$(
t(D8=xt
A_A^_^]
t5fA9(t/I
WATAUAVAWH
A_A^A]A\_
x AVH
T$8M;
x AVH
GL;L$`
|H;D$`
WAVAWH
UUUUUUU
(t$`I
A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
t$ WATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_
t$ WATAUAVAWH
gfffffffI
fffffff
 A_A^A]A\_
t$ WATAUAVAWH
UUUUUUU
 A_A^A]A\_
SVWATAUAVAWH
0A_A^A]A\_^[
L9A s
fffffff
UUUUUUU
3333333
WAVAWH
 A_A^_
p AWH
SVWATAUAVAWH
@A_A^A]A\_^[
SVWATAUAVAWH
D$`H+
 A_A^A]A\_^[
D$pI;
VWAVH
 A^_^
WAVAWH
 A_A^_
x ATAVAWH
 A_A^A\
x AVH
r*w3I+
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
SVWAVAWH
0A_A^_^[
WAVAWH
 A_A^_
VWAVH
@A^_^
VWAVH
@A^_^
WAVAWH
A_A^_
VWAVH
@A^_^
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
fffffff
@A_A^_
WAVAWH
UUUUUUU
@A_A^_
WAVAWH
UUUUUUU
@A_A^_
WAVAWH
@A_A^_
{ AVH
UUUUUUU
M#K0M
VWATAVAW
A_A^A\_^
|$ AVH
VWAVH
 A^_^
L$HH3
UVWATAUAVAWH
<!r]H
eHD9%
0A_A^A]A\_^]
M(!u(H
M(!u(H
M(!u(H
M(!u(H
M(!u(H
L$ SW
D$0E3
|$ UH
|$ UH
D$0I;
USVWH
8_^[]
x AVH
D$@I;
x AVH
pcPZt
x AVH
prZPP
prZPP
VWAVH
l$ VWAVH
0A^_^
VATAUAVAWH
L$`fH
D$@H)L$HL
L$`fH
D$@H)L$HL
L$xH3
A_A^A]A\^
q1X\|
|$ AVH
L$0H3
WATAUAVAWH
fD9,Gt
fE9,Ft
fE9$NuD
fE9,Vt
 A_A^A]A\_
D$0E3
ug@89t`H
^ H9;t
L$0H9;t
|$ UATAUAVAWH
u.@8}
F8@88t
A_A^A]A\]
UWAVH
@A^_]
t$ WH
3D$8%
3D$8%x
t$ WH
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
WAVAWH
 A_A^_
|$ UAVAWH
H;C I
A_A^]
|$ UAVAWH
H;F I
A_A^]
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
D$8E3
UWAVH
C(H+C
S H;S(t
u%A9I
u%H!\$8H
D$@E3
SVWATAUAVAWH
A_A^A]A\_^[
UWATAVAWH
CTtrE
A_A^A\_]
VWAVH
D$`th.
L$hH3
D$0H9D$@
VWAVH
 A^_^
USVWAVAWH
A_A^_^[]
@SUVWH
D$0L;
\$ UVWH
UVWATAUAVAWH
@8=hg
ty@8=Lg
t"@8=
fA9>u
@A_A^A]A\_^]
K SVWH
f94Cu
s WAVAWH
@A_A^_
UVWAVAWH
~0H+~(H
0A_A^_^]
\$ WH
L$0L;L$8t*A
t$ WAVAWH
\$PfD
@u;L9;u$E3
0A_A^_
t$ WH
p WAVAWH
 A_A^_
\$0H;\$8t
t$ WH
UVWATAUAVAWH
@M;D$hr&M;D$pw
@I;L$hr
I;L$pv
A_A^A]A\_^]
WAVAWH
T$0L+
A_A^_
|$ UATAUAVAWH
A_A^A]A\]
UVWAVAWH
H!t$XA
D$H!D$@
A_A^_^]
VWATAVAWH
PA_A^A\_^
WAVAWH
@A_A^_
L$ WH
9\$@L
@USVWATAVH
H9KXu
CXH;O
H;C`u
A^A\_^[]
|$ ATAVAWH
fD9$ru
@A_A^A\
VWAVH
x AVH
WATAUAVAWH
H9/sDH
 A_A^A]A\_
x AVH
rHfD97w
C9fD97u,
x AVH
H9;s!
x AVH
uPH9i
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
VWAVH
t$$fD
D$0D9r
@A^_^
L$ SVWH
UVWAVAWH
 A_A^_^]
UWAVH
HcT$0HcL$4H
;Q s[
qrPv`
D$49L$8t
9L$Dt
t$ WH
{ ATAVAWH
 A_A^A\
VWAVH
 A^_^
VWAVH
 A^_^
qcPZt
|$ AVH
L#F0M
|$ AVH
L#F0M
VWATAVAWH
L#E0M
 A_A^A\_^
VWAVH
L#U0M
 A^_^
VWAVH
L#U0M
 A^_^
t@L;P
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
UVWATAUAVAWH
L#x0M
|$0H;
L#p0M
|$0H;
@A_A^A]A\_^]
t$ WH
UVWAVAWH
L$HH3
PA_A^_^]
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PM;
A_A^]
WATAUAVAWH
H9|$`t
p+Y:`
T$xH+T$hH
\$hH+
L$h=z
T$xH+
T$xH+T$hH
L$pH+L$hH
p1X\|
L$h=z
T$xH+T$hH
A_A^A]A\_
p AWH
D$hfH
D$@fH
UWAVH
RTS0H
UWAVH
RTS0H
WATAUAVAWH
 A_A^A]A\_
D$@L;
I9X(u
UAVAWH
A_A^]
fA;z*
fA9z*v$A
L$ E3
^4h&H
{ jul
L$ VWAVH
 A^_^
L$ VWAVH
 A^_^
SVWATAUAVAWH
@A_A^A]A\_^[
WATAUAVAWH
fF9$ru
D8d$(u
0A_A^A]A\_
N ;O u=3
G89F8u/H
F$H+G$u
F,H+G,H
pC_r9
)t$@H
(t$@H
pZ]<w?
t%H;^
t%H;^
t%H;^
t%H;^
t%H;^
\$@H;_
@SVWATAUAVAWH
L$ E3
A_A^A]A\_^[
@SVWATAUAVAWH
L$ E3
A_A^A]A\_^[
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
L$ E3
A_A^A]A\_
p AWH
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
@SVWATAUAVAWH
p+V~D/X
D9T$`
u_f9{
uY9{$uTD
D$( t
A_A^A]A\_^[
@SVWATAUAVAWH
p+V~D/X
L9D$pu
D9D$x@
D9D$h
@u3D9
u`fD9v
uYD9v$uSE
D$( t
A_A^A]A\_^[
x AVH
x AVH
SVWATAUAVAWH
L$ E3
9\$0v
PA_A^A]A\_^[
SVWATAUAVAWH
L$ E3
9\$0v
PA_A^A]A\_^[
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
\$ UVWH
L$HH3
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
@USVWATAUAVAWH
\$ E3
A_A^A]A\_^[]
@USVWATAVAWH
\$ E3
A_A^A\_^[]
@SUVWAVAWH
~ 1t>
A_A^_^][
@SUVWAVAWH
p+V~D/X
L$@H;
A_A^_^][
@SUVWAVH
p+V~D/X
L$@H;
A^_^][
WAVAWH
 A_A^_
x AVH
D$0H9H s
fffffff
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
\$PI;
 A_A^A]A\_
x ATAVAWH
 A_A^A\
l$ VWATAVAWH
L$0H3
A_A^A\_^
l$ VWAVH
L$@H3
WAVAWH
 A_A^_
WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
T$hH;
0A_A^A]A\_
WAVAWH
 A_A^_
WATAUAVAWH
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
0A_A^A\_^
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
\$PI;
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
D$HIk
 A_A^_
WAVAWH
D$HHk
 A_A^_
WAVAWH
 A_A^_
SVWAVAWH
0A_A^_^[
WAVAWH
 A_A^_
WAVAWH
 A_A^_
VWATAVAWH
 A_A^A\_^
l$ VWAVH
L$@H3
VWAVH
@A^_^
x ATH
H+L$(H
WAVAWH
fffffff
@A_A^_
x ATAVAWH
\$0E3
A_A^A\
x ATAVAWH
fffffff
@A_A^A\
WAVAWH
@A_A^_
WAVAWH
fffffff
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
UWATAVAWH
A_A^A\_]
L#F0M
L#G0M
L#F0M
L#F0M
WAVAWH
@A_A^_
@USVWAVH
@A^_^[]
WAVAWH
H!A0!A@H!A8H!AHH!API
A_A^_
$H<@A
$H<@A
D!L$4
D!L$8
L!L$@
D!L$H
t$ UWAVH
L$PH3
A9x@u
XX9|$(}"A
x ATAVAWH
A_A^A\
WAVAWH
A_A^_
t$ UWATAVAWH
p+V~D/X
@@H9X8t
A_A^A\_]
VWAVH
pA^_^
L$PIk
x AVH
L$ VWATAVAWH
A_A^A\_^
t$ WH
VWAVH
0A^_^
SVWAVAWH
@A_A^_^[
UWAVH
)]'H;S
p1\6y
p1\6y
t$ WH
\$ UVWAVAWH
A_A^_^]
B A3A
\$ WH
L$pH3
L$pH3
WATAUAVAWH
@8|$(
0A_A^A]A\_
L$XH3
PSV0L
VWATAVAWH
 A_A^A\_^
L$ SH
WATAUAVAWH
A_A^A]A\_
L$ SUVWAVH
0A^_^][
t$ WATAUAVAWL
G;4)r
t$PE3
G948v^I
t$HA_A^A]A\_
x AV3
E;43r
|$(A^
x ATAVAWD
F;4:r
|$8A_A^A\
@USVWATAUAVAWH
A_A^A]A\_^[]
x UATAUAVAWH
W\`.d
A_A^A]A\]
t$ WAVAWH
A98v$A
@8|$0t
A_A^_
t$ WATAUAVAWH
E9,$t
0A_A^A]A\_
t$ WAVAWH
0A_A^_
p1\6y
)I0fD9R
SUVWATAUAVAWH
L$ A;
HA_A^A]A\_^][
\$ UVWAVAWH
A_A^_^]
@SVWAVH
L$pH3
A^_^[
WATAUAVAWH
A_A^A]A\_
D$hE3
L$hH3
@SVWATAUAVAWH
D$hE3
D$PI;
A_A^A]A\_^[
L$@H3
t$ WH
L$pH3
|$ AVH
L$XE3
D$XE3
@SUVWAVH
A^_^][
\$ UVWH
@SVWH
UWATAVAWH
\$@I+
A_A^A\_]
UVWAVAWH
H!E0H!E
pA_A^_^]
@SVWAVH
A^_^[
@USVWATAUAVAWH
D$hH9
\$XI;
A_A^A]A\_^[]
@SUVWAVH
A^_^][
WATAUAVAWH
l$ E3
A_A^A]A\_
@USVWATAUAVAWH
A_A^A]A\_^[]
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
k VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
0A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
@A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
k VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
L#A(H
 A^_^
l$ VWAVH
L#A0H
 A^_^
k VWAVH
 A^_^
l$ VWAVH
 A^_^
h VWAVH
l$ VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
L#A(H
 A^_^
l$ VWAVH
L#A(H
 A^_^
k VWAVH
 A^_^
l$ VWAVH
 A^_^
l$ VWAVH
L#A@H
 A^_^
|$ AVH
D$pte
@SVWATAUAVAWH
T$HE3
D$PD9
A_A^A]A\_^[
@SUVWH
@SVWATAUAVAWH
H!L$H
pYTt}
l$HE3
tv;|$XtpL
D$P9D$Hu
DXILu
A_A^A]A\_^[
\$ UVWH
x AVH
@SVWH
L$HH3
@SVWAVAWH
A_A^_^[
UVWAVAWH
H!E0H!E
A_A^_^]
@SVWH
q[P4v
p AWH
\$`H+
p AWH
SVWATAUAVAWH
A_A^A]A\_^[
@SVWH
x UATAUAVAWH
A_A^A]A\]
x AVH
x AVH
t$ WATAUAVAWH
l$ E3
A_A^A]A\_
@SVWATAUAVAWH
T$ E3
A_A^A]A\_^[
|$ ATAVAWH
A_A^A\
@SUVWATAUAVAWH
A_A^A]A\_^][
t$ WAVAWH
L$@H3
A_A^_
H9\$0
@SVWATAUAVAWH
L$hH9L$pt^L
A_A^A]A\_^[
WATAUAVAWH
A_A^A]A\_
SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
@SVWH
L$ WH
UWATAVAWH
A_A^A\_]
SUVWATAUAVAWH
(A_A^A]A\_^][
@8:vCM
WAVAWH
p1\6y
@A_A^_H
UVWATAUAVAWH
tAH9rHt;
W\`.d
W\`.d
A_A^A]A\_^]
USVWAVH
D$ E3
@A^_^[]
D$8L;
D$8L;
D$@L;
~ H;~ t5H
0_^]H
UVWATAUAVAWH
@A_A^A]A\_^]
q9Y|U
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
D#D$0D
3D$8%
3D$8%x
t$ WH
@USVWATAUAVAWH
;D$LD
BD$LD
A_A^A]A\_^[]
prPv`
qHT6J/
t$4t9D
UATAUAVAWH
A_A^A]A\]
` UAVAWH
A_A^]
t$ WATAVH
py]rB
A^A\_
VWAVH
q"Tpq
q9^r%
qAQZ`
q)Tp/
qqX<*?
qxTvI
@SVWAUAVAWH
L$ E3
A_A^A]_^[
q T~C
UVWATAUAVAWH
A_A^A]A\_^]
ILDBH
@SUVWH
L$PH3
h_^][
UVWAVAWH
A_A^_^]
\$ UH
qy]rB
qy]rB
qC_r9
qC_r9
q{\V(7-
q{\V(7-
W\`.d
W\`.d
qAQ:b
qbT<)&
qbT<)&
qS^\w
qS^\w
q;Tt_
L$@H3
D$0E3
D$0H9
WATAUAVAWH
D9|$4t
L9|$`t
|$XE2
d$0E3
T$4E3
D8l$0u'D
|$hH+
d}CD9
9L$4tW
u%D!d$ L
pbT<)&
|$HE3
l$@wd
D9l$@t
L$@E3
D9l$@t
A_A^A]A\_
x UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
t$ WATAUAVAWH
A_A^A]A\_
SUVWATAUAVAWH
A_A^A]A\_^][
8PDt-H
@USVWATAUAVAWH
L$HH;
A_A^A]A\_^[]
D8T$(u-
VWAVH
@A^_^
VWATAVAWH
A_A^A\_^
@SVWATAVAWH
D$ E3
A_A^A\_^[
@SVWATAVAWH
D$ E3
D$ E3
A_A^A\_^[
@SVWATAUAVAWH
D$xH+
A_A^A]A\_^[
@SVWATAUAVAWH
D$|fD
E8+t.
D$0E3
d$ E3
A_A^A]A\_^[
@USWATAUAVAWH
D$ E3
A_A^A]A\_[]
H WAUAWH
A_A]_
x UATAUAVAWH
A_A^A]A\]
u0!T$ L
UVWATAUAVAWH
|$hI+
 A_A^A]A\_^]
UVWATAUAVAWH
L9{ht
A_A^A]A\_^]
VWAVH
qcPZt
qcPZt
@USVWATAUAVAWH
A_A^A]A\_^[]
|$ AVH
UVWAVAWH
D9?vK
D9?t=
v3D8x
D8x v3D8x
pA_A^_^]
@USVWATAVAWH
A_A^A\_^[]
x AVH
L$pD;
qZ_rG
pQ_Z>
K SUVWH
L$ WH
L$ UVWH
L$ WH
L$ WH
L$ WH
VWAVH
D$XE3
;D$Xr
VWAUAVAWH
A_A^A]_^
VWATAVAWH
A_A^A\_^
VWAVH
 A^_^
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
@SVWATAUAVAWH
\$0I;_
D$PI;E
A_A^A]A\_^[
UATAUAVAWH
A_A^A]A\]
VWAVH
0A^_^
VWAVH
@A^_^
WAVAWH
w`t#L
A_A^_
UWAVH
VWAVH
WATAVH
L$ E3
D8T$(u+
0A^A\_
l$ VWAVH
\$@L;
 A^_^H
q1\6y
p1\6y
UVWATAUAVAWH
L$ E3
0A_A^A]A\_^]
x AVH
UVWATAUAVAWH
u'H9u
D$PE3
t$PE3
t$PE3
D$PE3
\$PE3
D8\$V
D$PE3
D$PE3
|$PE3
|$PE3
|$PE3
|$PE3
|$PE3
D$PE3
D$PE3
D$PE3
D$XE3
L$XE3
D8\$Uu
|$PE3
trD8\$Wu
|$PE3
u+L9e
|$PE3
|$PE3
|$PE3
D9[`t;D
|$PE3
D9d$P
t$PE3
t$PE3
t$PE3
|$PE3
D9\$P
D9[`t
D9\$P
A_A^A]A\_^]
@SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
UWAVH
t$ WH
H9D$@H
D$ E3
D$@H;
ATAVAWH
A_A^A\
@USVWATAUAVAWH
u#D93t
vSH;S
C0 tUL
s0t]E
c,A94$t
A94$t
s0tBE
)L$0H9u
A_A^A]A\_^[]
x AVH
#D$p;
#|$p+
WATAUAVAWH
0A_A^A]A\_
x AVH
SUVWATAUAVAWH
L$@L!L$HI
hA_A^A]A\_^][
A9v$t!L
UVWATAUAVAWH
`A_A^A]A\_^]
@SUVWAVH
<0rEH
A^_^][
L$0H3
L$pH3
L$HH3
p{\V(7-
p{\V(7-
L$PH3
L$PH3
\$ UVWH
@USVWATAUAVAWH
<0rOI
A_A^A]A\_^[]
@SUVWATAVAWH
<0rbH
<(rVH
A_A^A\_^][
UWAVH
@A^_]
L$ UVWATAUAVAWH
u]8Ewt
A_A^A]A\_^]
x AVH
\$ UVWAVAWH
`A_A^_^]
qcPZt
|$ AVH
L#F0M
VWATAVAWH
M#W0M
 A_A^A\_^
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
t$ WATAUAVAWH
M#t$0M
 A_A^A]A\_
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
VWAVH
L#]0M
 A^_^
VWAVH
L#]0M
 A^_^
UVWATAUAVAWH
L#v0M
 A_A^A]A\_^]
VWAVH
L#E0M
 A^_^
|$ AVH
L#F0M
|$ AVH
L#G0M
Ap$"<
H;GhH
BGhH+
@SVWH
CT$0L
L$PH3
VWAVH
 A^_^
VWAVH
 A^_^
(D$ f
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
H#W0H
UVWATAUAVAWH
L#{0M
L9uHujN
dL9uHu
M#w0M
@A_A^A]A\_^]
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
H9Fhs
 A_A^A]A\_
WATAUAVAWH
H9Ghs
 A_A^A]A\_
qP[\=
L$ E3
L$PH3
qsXvW
p"U^>
p"Y:'
pr]XV
SUVWATAUAVAWH
hA_A^A]A\_^][
SUVWATAUAVAWH
hA_A^A]A\_^][
UVWATAUAVAWH
`A_A^A]A\_^]
u&!D$ L
L$8t:H
WAVAWH
 A_A^_
p AWH
VWAVH
0A^_^
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
SVWATAUAVAWH
0A_A^A]A\_^[
SVWATAUAVAWH
0A_A^A]A\_^[
WAVAWH
 A_A^_
WAVAWH
 A_A^_
x ATAVAWH
@A_A^A\
L#G0M
|$ AVH
@USVWAVH
L97u`H
L97u=
D9t$0t$
A^_^[]
VWATAVAWH
p)P2=.
d$ E3
A_A^A\_^
UVWAVAWH
 A_A^_^]
D$@H;C
WAVAWH
A_A^_
qXXVw'
@SVWATAUAVAWH
F L9l
D;d$\
D$hD9o@t
D$hD9oDt
D$hD9oHt
D9l$\v9A
D;L$\r
tLD9o@uF
t.D9k
A_A^A]A\_^[
t$ WAVAWH
t$ E3
A_A^_
t$ WAVAWH
|$ E3
A_A^_
@USVWATAVAWH
|$8E3
A_A^A\_^[]
t$ WAVAWH
r I9~
A_A^_
|$ AVH
H9:t/H
x AVH
qc\^C'L
x AVH
]`H;]htOH
L$HH3
;|$Xr
L$0A;
L$0E3
|$ UH
L$8H3
qKZ\d'
I\$@H
D$(H+
uw:AXtrI
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
9Z8tZH
0A_A^_
9T$8v
;T$8r
UVWAVAWH
`A_A^_^]
UVWAVAWH
;KHs8
A_A^_^]
)D$`3
t$ WH
L$@H3
L$@H3
|$ AVH
x AVH
H9D$`wNH
D$hM#
H9D$`w:H
L$pH;
VWAVH
t$ WH
9t$Tv!E
D;L$Tr
UWAVH
D9D$Xv
D;D$Xr
L$XD;
H9ZHuH9Z4tC
P9Z<u
H9ZPu
H9ZXu
H9Z`u
9t$Dv!E
D;L$Dr
\$ UWAVH
0A^_]
D$@H+
SVWATAUAVAWH
\$xE;
D$`H;
t(L9p
T$pA;
D$X@8
A_A^A]A\_^[
t$ WH
t$ WH
)L$pL
UUUUUUU
|$ AVH
L#F0M
VWAVH
 A^_^
VWAVH
 A^_^
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
p;Tt_
L$pH3
qcPZt
qcPZt
W H+W
L$ UVWATAUAVAWH
pIY:j/
 A_A^A]A\_^]
|$ AVH
3333333
|$ AVH
UUUUUUU
H!\$0H
t$ WATAUAVAWH
D$XHk
 A_A^A]A\_
@SVWATAUAVAWH
UUUUUUU
0A_A^A]A\_^[
SVWAVAWH
3333333
0A_A^_^[
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
SVWAVAWH
"""""""
\$pHk
D$ Ik
0A_A^_^[
\$pI;
WAVAWH
 A_A^_
x AVH
WAVAWH
@A_A^_
{ AVH
|$ AVH
x UATAUAVAWH
\$8I;
D$8H+
L$TE3
D;t$TA
D$8H+
T$8H+
T$8H+
D$X;E
A_A^A]A\]
@USVWAVAWH
A_A^_^[]
UAVAWH
pA_A^]
t$ WH
L$@H3
` UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
WAVAWH
A_A^_
x ATAVAWH
A_A^A\
t$ WH
L$@H3
x ATAVAWH
A_A^A\
t$ WH
L$@H3
` UAVAWH
A_A^]
x ATAVAWH
A_A^A\
x UATAUAVAWH
D9wXv;
D$0E97t
D9wPt
D$0E97t
D9wPt
D$0E97t
E L!u0D
E97t(H
D9wPt
A_A^A]A\]
L$PH3
VWATAVAWH
d$xM;
A_A^A\_^
t$ WH
L$xH3
WAVAWH
D$HH+
D$pI+
D$HH+
A_A^_
H;AHu>H
UWAVH
PA^_]
L$`H3
UVWATAUAVAWH
@8t$0u
A_A^A]A\_^]
VWATAVAWH
L$P;s
L;L$Xt2A
D$hH!D$xL
A_A^A\_^
QlE9QXv<I
A;QXr
@SVWAVAWH
A_A^_^[
x AVH
p AWH
p AWH
WAVAWH
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
qK^|(
{ ATAVAWH
A_A^A\
t$ AWH
t$@M+
D$`I+
t$ WH
D#D$0D
3D$8%
3D$8%x
D$ I;
x AVH
D$0Ik
L$@H3
qcPZt
L$ WH
\$ UVWAVAWH
A_A^_^]
|$ UH
\$ UVWAVAWH
A_A^_^]
WAVAWH
@A_A^_
@SWAUAVAWH
L$`H3
pA_A^A]_[
VWAUAVAWH
D$HH+
`A_A^A]_^
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
@SVWATAUAVAWH
D$0E3
D9cXt/
D9cHt/
D9c@t4
D9cTt/
D9clt-D9
9Cdt0
9Cht$
A_A^A]A\_^[
t$ WATAUAVAWH
L$`H3
pA_A^A]A\_
\$ WATAUAVAWH
A_A^A]A\_
@USVWAVAWH
A_A^_^[]
@USVWAVH
pA^_^[]
UVWAVAWH
w|D;]
A_A^_^]
@SVWATAUAVAWH
8\$Tt
A_A^A]A\_^[
@SVWATAUAVAWH
9\$hu
L$pH3
A_A^A]A\_^[
L$XH3
UUUUUUU
qIY:j/
qIY:j/
VWAVH
L#U0M
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
qcPZt
\$ UVWAVAWH
D$ E3
A_A^_^]
\$ UVWAVAWH
D$ E3
A_A^_^]
\$ UVWAVAWH
D$ E3
A_A^_^]
\$ UVWAVAWH
D$ E3
A_A^_^]
p:X\=
\$ UVWATAUAVAWH
M94$u
A_A^A]A\_^]
UWAVH
UVWATAVH
t$@H9
A^A\_^]
q[Tt=>
t$ WH
qcPZt
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
@SUVWAVAWH
HA_A^_^][
@SUVWAVH
PA^_^][
@SVWATAVAWH
A_A^A\_^[
UATAUAVAWH
A_A^A]A\]
\$ VWATAVAWH
|$0I;
L$pH3
A_A^A\_^
SVWATAUAVAWH
UUUUUUU
0A_A^A]A\_^[
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
SVWATAUAVAWH
@A_A^A]A\_^[
@USVWATAUAVAWH
A_A^A]A\_^[]
ATAVAWH
D$0E3
@A_A^A\
@SVWATAUAVAWH
A_A^A]A\_^[
H+T$`H
D$xH+D$`H
|$pL;|$xt
L$HH3
L$@D8
L$ E3
L$HH3
UATAUAVAWH
A_A^A]A\]
VWAVH
 A^_^
UWAVH
L#G0M
QXL9D
WAVAWH
 A_A^_H
L$0H;KXt
L$@L;KXt:H
L$0H;KXt
\$0H;_XtbH
|$ AVH
L#F0M
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
WAVAWH
A_A^_
WAVAWH
A_A^_
SVWATAUAVAWH
0A_A^A]A\_^[
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
@A_A^A\
UVWATAUAVAWH
pA_A^A]A\_^]
x AVH
VWATAVAWH
PA_A^A\_^
VWATAVAWH
PA_A^A\_^
VWATAVAWH
PA_A^A\_^
VWATAVAWH
PA_A^A\_^
VWATAVAWH
PA_A^A\_^
SVWATAUAVH
D$`H9D$Pu
H9\$8t"H
H9D$h
A^A]A\_^[
SVWATAUAVH
D$`H9D$Pu
H9\$8t"H
H9D$h
A^A]A\_^[
SVWATAUAVH
D$`H9D$Pu
H9\$8t"H
H9D$h
A^A]A\_^[
UVWAVAWH
@A_A^_^]
UVWAVAWH
@A_A^_^]
WAVAWH
 A_A^_
WAVAWH
\$PE3
A_A^_
WAVAWH
\$PE3
A_A^_
WAVAWH
\$PE3
A_A^_
WAVAWH
\$PE3
A_A^_
WAVAWH
\$PE3
A_A^_
t$ WAVAWH
L$XH3
A_A^_
ATAVAWH
A_A^A\
x AVH
x AVH
x AVH
UAVAWH
A_A^]
t$ UWAUAVAWH
A_A^A]_]
qp]6N
@SVWATAUAVAWH
pA_A^A]A\_^[
@SUVWATAUAVAWH
DD$pH
H9T$xH
A_A^A]A\_^][
{ AVH
x AVH
x AVH
x AVH
UVWAVAWH
A_A^_^]
|$ AVH
L#F0M
VWAVH
 A^_^
VWAVH
 A^_^
L$`H3
qZ^|;'
qZ^|;'
qZ^|;'
S4&&%
S4&&%
S4&&%
q3ZVO
q3ZVO
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
qsXvW
qB]p9>5
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
t$ UWATAVAWH
A_A^A\_]
VWAVH
UWAVH
L$pH3
@SUVWH
L$pH3
@SUVWH
L$pH3
qIY:j/
WAVAWH
\$ E3
A_A^_
WAVAWH
\$ E3
A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
pS^\w
VXH;V`t
VXH;V`t
VXH;V`t
` AUAVAWH
gfffffffI
fffffff
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
SVWATAUAVAWH
 A_A^A]A\_^[
p AWH
x ATAVAWH
0A_A^A\
SVWATAUAVH
A^A]A\_^[
SVWAVAWH
0A_A^_^[
x AVH
x AVH
tcI9Q
VXH;V`
VXH;V`
VXH;V`uVL
VXH;V`t
VXH;V`
VXH;V`
VXH;V`t
SVWATAUAVAWH
t$0D8vOt
M;uHv
D$`D8
D$`D8
D8vOH
L$ E3
A_A^A]A\_^[
D$8A8
8D$:t
q{W<0
L#F@M
{ ATAVAWH
M#O@M
\$0L;
@A_A^A\
\$0L;
M#O@M
\$0L;
fffffff
t$ UWAVH
L$ E3
|$ UH
L$ UH
L$HH3
VWAVH
 A^_^
WAVAWH
UUUUUUU
(t$`I
A_A^_
x AVH
(t$pL
L9A s
x UATAUAVAWH
A_A^A]A\]
VWAVH
@SVWAVH
A^_^[
qYTt}
@SUVWAVH
A^_^][
@SVWATAUAVAWH
H;>uBH
GHH9D$8u
GPH9D$@
A_A^A]A\_^[
@SVWATAUAVAWH
T$8I+
L;X s
`A_A^A]A\_^[
@SVWATAUAVAWH
fC94Fu
fB94Bu
@8t$@usI
CD$pI
D$8@L
A_A^A]A\_^[
x ATAVAWH
 A_A^A\
L$PH3
L$xH3
qIY:j/
UWAVH
>DXIL
PSV0H
D$@H9D$0
\$ UVWH
L$HH3
t$ WH
9rHtp
WAVAWH
 A_A^_
SVWATAUAVAWH
UUUUUUU
0A_A^A]A\_^[
t$ WATAUAVAWH
 A_A^A]A\_
@SVWATAUAVAWH
UUUUUUU
0A_A^A]A\_^[
t$ WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
x ATAVAWH
 A_A^A\
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
VWAVH
\$PHk
D$HIk
\$PI;
 A^_^
VWAVH
@A^_^
WAVAWH
0A_A^_
UVWATAUAVAWH
D#w,E
pA_A^A]A\_^]
|$ UH
WAVAWH
 A_A^_
L$@H3
UWATAVAWH
pIX2m
@A_A^A\_]
WAVAWH
 A_A^_
UVWATAUAVAWH
0A_A^A]A\_^]
:D$0t
D;L$(s
D;L$(
WAVAWH
 A_A^_
l$ VWAUAVAWH
A_A^A]_^
WATAUAVAWH
+t$x;
 A_A^A]A\_
t$ WH
t$ WAVAWH
D$ E3
@A_A^_
UVWAVAWH
A_A^_^]
@SVWH
H!L$0H
|$ UAVAWH
A_A^]
WAVAWH
 A_A^_
UVWATAUAVAWH
0A_A^A]A\_^]
USVWATAUAVAWH
L;|$Xt
H;\$0
\$HL+
|$PI;
H;\$P
A_A^A]A\_^[]
t$ WATAUAVAWH
A_A^A]A\_
L$ UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
t$4D9v|u
D$ E3
D$ E3
A_A^A]A\_^]
@SUVWH
UUUUUUU
qIX2m
qIX2m
qIX2m
VWAVH
 A^_^
VWAVH
 A^_^
UUUUUUU
|$ UH
SVWATAUAVAWH
A_A^A]A\_^[
q+V~D/X
t$ UWAVH
{ AVH
(t$`L
)t$`M
(t$`H
VWATAVAWH
H9Z sRH
uHL;J rBM
T$0D8b
H;Z r
A_A^A\_^
L9A s
VWAVH
0A^_^
WAVAWH
 A_A^_
@SVWAVAWH
D$XHc
A_A^_^[
VWATAVAWH
0A_A^A\_^
L;S r
fffffff
L$PH3
VWAVH
L$HH3
PA^_^
WAVAWH
 A_A^_
q`W2d
L$HH3
VWAVH
L$PH3
`A^_^
L$HH3
VWAVH
L$PH3
`A^_^
x AVH
WAVAWH
D$HIk
 A_A^_
@USVWAVH
A^_^[]
L$pH3
VWAVH
L$pH3
WAVAWH
 A_A^_
x AVH
L$0H3
t$ WATAUAVAWH
 A_A^A]A\_
t$ WH
VWAVH
0A^_^
q1\6y
p:ZT_
9\$4u
VWAVH
D$PH+
T$PH+
8f;;t
T$PH+
8f;;t
L$hH3
pA^_^
x AUAVAWH
 A_A^A]
WAVAWH
 A_A^_
WATAUAVAWH
wWI;H
 A_A^A]A\_
UVWATAU
A]A\_^]
|$ UH
L$8H3
|$ UH
u3E9X
u.D9Y
ugL;P
A(A9@(A
D$ H;D$(t
x ATAVAWH
 A_A^A\
x AVAWH
|$0A_A^
UVWATAUAVAWH
\$0E3
9E t"
9E$t"
D8D$0t%A
@A_A^A]A\_^]
UVWATAUAVAWH
tl99t_H
D$0E3
D$PE;
tl99t_H
D$0E3
D$PE;
D$TD;
A_A^A]A\_^]
p AWH
t$X%W
WATAWH
0A_A\_
UVWATAUAVAWH
d$hH#
D$0E3
D$0E3
D$0E3
D$lE;
T$hA;
A_A^A]A\_^]
WATAUAVAWH
\$TD8
!|$X3
E9o$E
D;P r
D;X$v
D;P r
D$xHc
D9"vB
\$PHcD$`L
D$XE;
\$PHcD$`H
D9"vB
\$PHcD$`L
L$pD;
\$PHcD$`H
A_A^A]A\_
t$ UWAWH
f9E%t
f9E#t
H WATAVH
@8l$pu
0A^A\_
UVWATAUAVAWH
!\$t!\$`A
D9\$l
D$0E3
D$0E3
L$PE;
L$dfE;
th99tZH
D9\$l
D$0E3
L$PE;
A_A^A]A\_^]
UVWATAUAVAWH
t$\A+
$D90u
D$0E3
D$0E3
D$hE;
D$0E3
D$\ugD
D$hD;
l$pD9
L$\v$H
A_A^A]A\_^]
WATAUAVAWH
9t$x@
9\$x@
 A_A^A]A\_
x UATAUAVAWH
L$,E3
L$`D;s`
4@G9$
D;|$0
t1C8t
T$(E+
t$(D;s`
t$(D;|$0v
d$4D;
\$HD:
D$PM+
D;L$0v
D9s |&
CtD9s }
A_A^A]A\]
t$ WATAUAVAWH
A_A^A]A\_
l$ VWAVH
L$@H3
IFCEH
IFCEH
IFCEH
d$ AUAVAWH
IFCEI
A9~$u
D$ A;N`
FXD9,
VXF9,
D$ E;~`
A_A^A]
IFCEH
SWAVH
IFCEH
Aon9H
0A^_[
{0`|jH
SWAWH
IFCEH
Aon9H
0A__[
UVWATAUAVAWH
D$0fD
|$8fA;
L$HH3
PA_A^A]A\_^]
x ATAVAWH
D$ E3
t$4D8
@A_A^A\
l$ VWAVH
L$@H3
L$@H3
wIH9Q
l$ VWATAUAVH
A^A]A\_^
  t-E
WATAUAVAWH
 A_A^A]A\_
x AVH
6tVE+
WATAUAVAWH
 A_A^A]A\_
|$ UH
@SUVWATAUAVAWH
(A_A^A]A\_^][
|$ AVH
x AVH
x ATAVAWH
DXBCfD
 A_A^A\
UVWATAUAVAWH
:DXBC
H+D$ u
H+D$(H
H+D$ u
H+D$(H
L$0H3
@A_A^A]A\_^]
L$ E3
SHEXH
SHDRH
RDATH
L$ E3
DXILH
L$ E3
ISG1H
OSG1H
L$ E3
OSG1H
L$ E3
PSG1H
RTS0H
L$ E3
SFI0H
x ATAVAWH
 A_A^A\
x ATAVAWH
 A_A^A\
UVWATAUAVAWH
T$ D;
D;T$ v
@8<(u
L$`H3
pA_A^A]A\_^]
UVWATAUAVAWH
\$ E3
0A_A^A]A\_^]
UVWATAUAVAWH
\$ E3
0A_A^A]A\_^]
UVWATAUAVAWH
T$ D;
D;T$ v
@8<(u
L$`H3
pA_A^A]A\_^]
\$ UVWATAUAVAWH
8sHE;
QZ^&E
A_A^A]A\_^]
x AUAVAWH
 A_A^A]
p AWH
H9T$PwhH
H+D$PL;
L+t$PL
\$ WAVAWH
CT$0H
CD$0D88
H;D$@
H;D$@
H;\$@
D$@L+
C|$0H;\$@s%I
CD$0L
D$(H;8H
L$PH3
`A_A^_
|$ dw
UVWATAUAVAWH
D9ePtyH
u19]@u,D9ePt&E
0A_A^A]A\_^]
$8< t
x AVH
t$ WATAUAVAWH
 A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
A94$v]L
A_A^A]A\_^]
UVWATAUAVAWH
A94$vPL
A_A^A]A\_^]
SUVWATAUAVAWH
D$0A;
hA_A^A]A\_^][
WATAUAVAWH
D$`E;
 A_A^A]A\_
UVWATAUAVAWH
t$D@8
\$XE3
A_A^A]A\_^]
9D$4u
WAVAWH
 A_A^_
WAVAWH
H!x !x(
 A_A^_
WAVAWH
D$(E3
0A_A^_
x ATAVAWH
0A_A^A\
@USVWAVH
A^_^[]
\$ VWAVH
WATAUAVAWH
A_A^A]A\_
L$ SVW
K SVWH
9C8rvu
9C<rlL
9S(wEu
$9S(u
9C8rxu
9C<rnL
;S(r u
&9S(r
L$@E3
UWATAVAWH
A_A^A\_]
@ 9B r
WAVAWH
 A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
D$ E3
UVWATAUAVAWH
D;@ r
D;H$v
D;@ r
A_A^A]A\_^]
t$ WATAUAVAWH
t$4D;t$`
T$4;T$`s
A_A^A]A\_
UVWATAUAVAWH
PA_A^A]A\_^]
UVWATAUAVAWH
l$P;n
`A_A^A]A\_^]
SUVWATAUAVAWH
T$`E3
d$HE3
A_A^A]A\_^][
UVWATAUAVAWH
D$@E2
D$XH9D$H
A_A^A]A\_^]
UVWAVAWH
PSV0L
@A_A^_^]
@SVWATAUAVAWH
0A_A^A]A\_^[
SVWAVAWH
0A_A^_^[
L9G8u
D9G@u
USVWATAUAVAWH
A_A^A]A\_^[]
SUVWAVH
PA^_^][
H#K0H
VWAVH
 A^_^
SUVWATAUAVAWH
T$8A:
HA_A^A]A\_^][
@USVWATAUAVAWH
D$ L3
D$ I3
t$(H+
|$(I3
A_A^A]A\_^[]
@SVWAVM
AR!H+
A^_^[
UVWATAUAVAWH
\$ H3
T$0L3
\$ M3
H;D$H
PA_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWATAUAVAWH
D$PE3
L9l$X
A_A^A]A\_^]
@SUVWAVH
L$@E3
A^_^][
qZ]<w?
x AVH
pZ]<w?
x AVH
x AVH
x AVH
L$@H3
H9Y umH
D$ E3
D$ E3
pZ_rG
t$ WH
WAVAWH
 A_A^_
t$ WAVAWH
L$PH3
A_A^_
@SUVWAVH
L$HH3
PA^_^][
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
WAVAWH
 A_A^_
@SUVWAVH
L$HH3
PA^_^][
x ATH
H+L$(H
x AVH
L$pE3
L$hE3
UVWAVAWH
PA_A^_^]
@USVWATAUAVAWH
A8@0t
H9A t
E8e0t8
A_A^A]A\_^[]
@SVWAVAWH
A_A^_^[
L$0L;O
@USVWAVH
A^_^[]
T$pE3
L$`H3
VWAVH
V0H+V(H
0A^_^
VWAVH
V0H+V(H
0A^_^
VWAVH
V0H+V(H
 A^_^
VWAVH
V0H+V(H
0A^_^
VWAVH
V0H+V(H
0A^_^
VWAVH
V0H+V(H
0A^_^
x AVH
fE94Pu
C8H;C@t
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t&H
C8H;C@t
H;S t&H
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t
C8H;C@t
H;S t
p AWH
WAVAWH
 A_A^_
WAVAWH
 A_A^_
3333333
VWAVH
"""""""
0A^_^
vb'vb'v
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
SVWATAUAVAWH
 A_A^A]A\_^[
` AUAVAWH
 A_A^A]
ATAVAWH
 A_A^A\
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
` AUAVAWH
 A_A^A]
SVWATAUAVAWH
 A_A^A]A\_^[
SVWATAUAVAWH
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
SVWATAUAVAWH
gfffffffI
3333333
 A_A^A]A\_^[
t$ WH
SVWATAUAVAWH
0A_A^A]A\_^[
x AVH
WATAUAVAWH
 A_A^A]A\_
p AWH
x ATAVAWH
0A_A^A\
x ATAVAWH
0A_A^A\
x ATAVAWH
0A_A^A\
x ATAVAWH
@A_A^A\
x ATAVAWH
0A_A^A\
WAVAWH
0A_A^_
{ ATAVAWH
0A_A^A\
{ ATAVAWH
0A_A^A\
{ ATAVAWH
0A_A^A\
{ ATAVAWH
0A_A^A\
{ ATAVAWH
@A_A^A\
{ AUAVAWH
@A_A^A]
x ATAVAWH
0A_A^A\
x AUAVAWH
fffffff
H9G(u
0A_A^A]
x ATAVAWH
A_A^A\
x ATAVAWH
A_A^A\
x AUAVAWH
fffffff
0A_A^A]
x ATAVAWH
fffffff
0A_A^A\
x ATAVAWH
0A_A^A\
x ATAVAWH
0A_A^A\
x ATAVAWH
0A_A^A\
x AVH
WAVAWH
0A_A^_
WAVAWH
0A_A^_
x AVH
{ AVH
WAVAWH
UUUUUUU
0A_A^_
WAVAWH
fffffff
0A_A^_
WAVAWH
0A_A^_
WAVAWH
fffffff
0A_A^_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
WAVAWH
fffffff
0A_A^_
WAVAWH
0A_A^_
x AVH
WAVAWH
0A_A^_
WAVAWH
0A_A^_
WAVAWH
@A_A^_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
M#K@I
WATAUAVAWH
w\I;H
 A_A^A]A\_
t#8BOt
UVWAVAWH
E@D!}8L
E@D!}8L
E@D!}8L
E@D!}8L
E@D!}8L
E@D!}8L
E@D!}8L
E@D!}8L
 A_A^_^]
VWAVH
fD94Pu
H;Q w
 A^_^
t?L9A
t?L9A(t9H
tcI9Q
tcI9Q
t?L9A
tcI9Q
\$ H;
H;\$(t
USVWATAUAVAWH
<IM9D
A_A^A]A\_^[]
USVWAVH
0A^_^[]
VWAVH
 A^_^
\$ UVWATAUAVAWH
\$hH;_
|$0;E 
A_A^A]A\_^]
L$8E3
D;L$h
D$(E3
USVWATAVAWH
"""""""
M@@8yLuW
9x vG
@A_A^A\_^[]
t$ WAVAWH
0A_A^_
UVWAVAWH
}8D8~Qt(E3
ILDBI
`A_A^_^]
p WATAUAVAWH
D$`L;D$ht"I
D$HL;D$Pt$I
D$`L;D$ht"I
D$HL;D$Pt$I
A_A^A]A\_
VWAVH
0A^_^
@SVWAVH
XA^_^[
t$ UWAVH
A(;B(u
x UATAUAVAWH
d$@I;
SPH+SHH
SPH+SHH
D9v`vV
P H+P
P H+P
H;U8t A
d$PH;_
|$pH;]
D$pD;x`
l$pH;
|$@E3
l$PI;
D8t$Ht
A_A^A]A\]
@USVWATAUAVAWH
D;|$x
H9:tM
D;t$X
H9]Ht
9\$XvxD
D;t$Xr
9D$xv_
;\$xr
A_A^A]A\_^[]
WAVAWH
t$0E3
H!t$ !
A_A^_
t$ WAVAWH
vb'vb'v
0A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
@USVWATAUAVAWH
hA_A^A]A\_^[]
L$XH3
\$ H;\$(t8H
H;~Hv
(t$ H
A0H;B
I ;L$ t!I
H;A u
|$ AVH
UVWATAUAVAWH
M9,$A
t!D8kYu
L$ A;
L9j t
L9j8t
0A_A^A]A\_^]
UVWAVAWH
@A_A^_^]
UVWAVAWH
 A_A^_^]
l$ VWAVH
\$ I;^
L$8H3
@A^_^
@USVWATAUAVAWH
A>f;F
A?f;D^
CL$@I
A_A^A]A\_^[]
H+S@H
@8yJt
@8yLt
D;\$0t%A
VWAVH
0A^_^
|$ UAVAWH
E t1I
C H9C
C H9C
0A_A^]
t$ WAVAWH
0A_A^_
x UATAUAVAWH
D$(I;
L9j t
D8l$ u
l$0E3
d$0E3
l$`E3
D;L$8
A_A^A]A\]
UVWATAUAVAWH
T$ fI
I H9H t
D9`0u
A H9EPt
0A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
@USVWATAUAVAWH
l$@E3
\$0H;\$8t+H
t$0E3
D;L$@
t$ I;
D$(D8hL
L$0E3
t!D8k\u
\$ E8
tvD8k\ueH
M;yPI
|$0E3
\$ E;
A_A^A]A\_^[]
L$ UWAVH
U L9u8
0A^_]
WAVAWH
D;L$0
A_A^_
Z@M9Z8u
A89~ v&H
VWATAVAWH
E9w v+A
E;w r
A_A^A\_^
H9B8u
9n v-H
AH;n r
A89u v(H
UVWATAUAVAWH
`A_A^A]A\_^]
L#F@M
L#F@M
t$ WAVAWH
8I#~@H
 A_A^_
t$ WAVAWH
8I#~@H
 A_A^_
VWAVH
L#EPM
 A^_^
t$ WH
VWAVH
L#E@M
 A^_^
L#G@M
t$ WAVAWH
H#]@H
 A_A^_
VWAVH
L#E@M
 A^_^
t$ WATAUAVAWH
0M#u@M
 A_A^A]A\_
t$ WH
L#G@M
H;Q u
{ ATAVAWH
M#O@M
\$0L;
@A_A^A\
\$0L;
M#O@M
\$0L;
{ AUAVAWH
M#M@M
\$0H;
@A_A^A]
\$0H;
M#M@M
\$0H;
{ ATAVAWH
M#O@M
\$0L;
@A_A^A\
\$0L;
M#O@M
\$0L;
H;SHv
H;SHv
H;SHv
et^A+
et^A+
VWAVH
PA^_^
t$ WAVAWH
A_A^_
@USVWATAVAWH
A_A^A\_^[]
t$ W3
x AVH
HkUPlH
 H;Mhu
H;Uhu
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
UVWATAUAVAWH
PA_A^A]A\_^]
SUVWATAUAVAWH
XA_A^A]A\_^][
SUVWATAUAVAWH
XA_A^A]A\_^][
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x ATAVAWH
l$HM#
D$PH#
|$8A_A^A\
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x ATAVAWH
l$HM#
D$PH#
|$8A_A^A\
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVAWH
t$@M#
D$HH#
|$0A_A^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
3L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
3L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
3L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
T$0M#
D$8H#
T$0M#
D$8H#
T$0M#
D$8H#
T$0M#
D$8H#
x ATAVAWH
t$HM#
D$PH#
|$8A_A^A\
T$0M#
D$8H#
T$0M#
D$8H#
x ATAVAWH
t$HM#
D$PH#
|$8A_A^A\
T$0M#
D$8H#
|$0M#
D$8H#
x AVH
|$8M#
D$@H#
|$(A^
|$0M#
D$8H#
|$0M#
D$8H#
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVAWH
l$@M#
D$HH#
|$0A_A^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
T$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x ATAVAWH
l$HM#
D$PH#
|$8A_A^A\
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x ATAVAWH
l$HM#
D$PH#
|$8A_A^A\
x AVH
|$8M#
D$@H#
|$(A^
x AVH
|$8M#
D$@H#
|$(A^
x AVAWH
l$@M#
D$HH#
|$0A_A^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3L$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
L$ VWATAUAVAWH
l$`L#
D$hH#
L3D$8M
l$HA_A^A]A\_^
x ATAVAWH
|$HM#
D$PH#
|$8A_A^A\
x ATAUAVAWH
|$PL#
D$XH#
|$@A_A^A]A\
T$0M#
D$8H#
T$0M#
D$8H#
T$0M#
D$8H#
T$0M#
D$8H#
x AVAWH
l$@M#
D$HH#
|$0A_A^
T$0M#
D$8H#
|$0M#
D$8H#
x AVAWH
l$@M#
D$HH#
|$0A_A^
T$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
|$0M#
D$8H#
x ATAUAVAW
|$@A_A^A]A\
UVWATAUAVAWH
\$hD;
A_A^A]A\_^]
x ATAUAVAW
|$@A_A^A]A\
x ATAUAVAW
|$@A_A^A]A\
UVWATAUAVAWH
\$hD;
A_A^A]A\_^]
x ATAUAVAW
|$@A_A^A]A\
VWAVH
UVWAVAWH
|: tv
D9{|u
L$PH3
`A_A^_^]
L$ H3
{ ATAVAWH
@8|$|
A_A^A\
\$ UVWH
@SUVWAUAVAWH
@A_A^A]_^][
UWAVH
WATAUAVAWH
D$(fA
T$(A;
0A_A^A]A\_
@SUVWAVH
L$hH3
pA^_^][
@SUVWAVAWH
L$`H3
xA_A^_^][
SUVWATAUAVAWH
D$XD+
D$PA+
D$PA+
A_A^A]A\_^][
\$ UVWATAUAVAWH
D$ A;
|$8A;
L$XH3
`A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
R u7D
R@u1D
R`u+D
R u5D
R@u/D
R`u)D
VWAUAVAWH
A_A^A]_^
UVWATAUAVAWH
B @uc
pA_A^A]A\_^]
t$ WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
D$ A;
|$8A;
L$XH3
`A_A^A]A\_^]
@USVWAVAWH
A_A^_^[]
UAVAWH
A_A^]
t$ WAVAWH
D$HA;
 A_A^_
t$ WATAUAVAWH
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
@SVWATAUAVAWH
0A_A^A]A\_^[
WAVAWH
\$PHi
D$HIi
 A_A^_
\$PI;
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
\$PI;
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
WAVAWH
 A_A^_
ukHcA
B(9A(u
B,9A,u
B09A0u
WAVAWH
#H98t
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
SVWATAUAVAWH
\$ E3
A_A^A]A\_^[
qpZ<X>
USVWATAUAVAWH
~T$$H
D$,E3
t$8E3
D!t$@
)M0fI
~T$0f
~T$HE3
;D$,t
T$X+T$(D
D$PE3
D9|$ u
A_A^A]A\_^[]
UWAVH
SWAUAVAWH
@A_A^A]_[
SWAUAVAWH
@A_A^A]_[
SWAUAVAWH
@A_A^A]_[
WAVAWH
9|$`v+
 A_A^_
L#R@H
H#WPH
L#_`H
WAVAWH
B(E98L
D;}Lr
 A_A^_
WAVAWH
 A_A^_
@SVWATAUAVAWH
A_A^A]A\_^[
SVWATAUAVAWH
A_A^A]A\_^[
WATAUAVAWH
M#~ M
A_A^A]A\_
SVWAVAWH
A_A^_^[
SVWAVAWH
A_A^_^[
WATAUAVAWH
A_A^A]A\_
SVWAVAWH
A_A^_^[
SVWAVAWH
A_A^_^[
WAVAWH
0A_A^_
WAVAWH
0A_A^_
@SUVWAVH
A^_^][
@USVWATAUAVAWH
A_A^A]A\_^[]
@SVWATAUAVAWH
A_A^A]A\_^[
WAVAWH
A_A^_
@SVWATAUAVAWH
D$HE3
L#,;I
A_A^A]A\_^[
L$0E3
L$0E3
UVWATAUAVAWH
)t$0H
\$ E3
(t$0H
@A_A^A]A\_^]
VWAUAVAWH
A_A^A]_^
@SVWAVAWH
A_A^_^[
x ATAVAWH
A_A^A\
WAVAWH
A_A^_
|$XtcH
|$Xt]H
L9L$ 
H9D$ 
p AWH
x AVH
x AVH
x AVH
H9K u
UVWATAUAVAWH
rUH;1wTE
p T~C
A_A^A]A\_^]
UVWATAUAVAWH
u7D9Q
u1D9R
D$ A3G 
A_A^A]A\_^]
SVWATAUAVAWH
I9] u
D8t$@u
I9E(r
l$tD9
d$PD;t$`
GdtRH
D$`A9O
p`W2d
p`W2d
u 9\$ht
9\$\u
T$XD9A
\$AD9I
D9d$xw
D9d$Hv
\$xA9E
l$Hu5
D$XD;
L$hD;
l$pA;
u"9L$dt
9L$\u
T$D8KHt&9KLt
H9KPu
\$AD9
\$AD9I
9L$Hw
D$hD;
\$Hu4
L$\D;
L$dD;
l$pA;
\$DA;_xt
A9Gxv
8D$Au
8\$@u
A9_`r
9\$`t
A_A^A]A\_^[
WATAVH
0A^A\_
UVWAVAWH
p`W2d
E@9E0
p`W2d
PA_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
` AUAVAWH
 A_A^A]
ATAVAWH
D$ A;
@A_A^A\
@SVWATAUAVAWH
I9F0r
A_A^A]A\_^[
UVWATAUAVAWH
@A_A^A]A\_^]
H9D$`s
H9D$`s
@USVWATAUAVAWH
A_A^A]A\_^[]
VWATAVAWH
A_A^A\_^
l$ VWATAVAWH
H;L$0v
L$XH3
A_A^A\_^
@USVWATAUAVAWH
xA_A^A]A\_^[]
x ATH
UVWATAUAVAWH
D9.v+D
9G0v2
A_A^A]A\_^]
UVWATAUAVAWH
9L$xt7
E9>v,D
H;\$Ht_
A_A^A]A\_^]
\$ UVWATAUAVAWH
E !D$4H
;D$0s
A_A^A]A\_^]
@SVWAUAVAWH
A_A^A]_^[
UVWATAUAVAWH
;N<sI
w";F(r
;N,sK
D9n@u'D9
D9nTu#D9
D$pD9
D9/vNH
A_A^A]A\_^]
UVWATAUAVAWH
xqIcT$
A_A^A]A\_^]
UVWATAUAVAWH
A9X(t
L$xE;M
L$pI;
A_A^A]A\_^]
UVWATAUAVAWH
wDA9G
w>E9w
A_A^A]A\_^]
qkT^w
VWAVH
VWAVH
VWATAVAWH
0A_A^A\_^
VWATAVAWH
0A_A^A\_^
VWATAVAWH
0A_A^A\_^
VWATAVAWH
0A_A^A\_^
@USVWATAUAVAWH
|$PA;
D: E;
D$ E3
d$@Mk
l$ E3
D$@E9~ u:A
QE9~ uKA
t$ E3
A_A^A]A\_^[]
|$ UAVAWH
A_A^]
qj^:k
qj^:k
qj^:k
qj^:k
(t$@H
qj^:k
(t$@H
qj^:k
qj^:k
@USVWATAVAWH
pA_A^A\_^[]
qq\PU
qq\PU
qq\PU
qq\PU
qq\PU
qq\PU
qq\PU
@USVWATAUAVAWH
A_A^A]A\_^[]
@SUVWAVH
L$XH3
`A^_^][
VWAVH
@A^_^
@USVWATAUAVAWH
d$ E3
A_A^A]A\_^[]
VWAVH
@USVWAVH
A^_^[]
t$ WH
qCY6n
@USVWAVH
A^_^[]
x AVH
|$ UH
|$ UH
@SUVWAVH
L$`H3
pA^_^][
t$ WH
|$ UATAUAVAWH
l$ E3
D$lE9
D$xE3
D$lA;
A_A^A]A\]
H!|$ E3
t$ WH
t$ WH
t$ WH
t$ WH
t$ WH
qX[XQ
VWAVH
VWAVH
@A^_^
qS]Ry
q(\<~
t$ WH
t$ WH
t$ WH
VWAVH
@A^_^
(|$ H
\$ UVWAVAWH
T$0Hc
A_A^_^]
t$ WH
t$ WH
qkT^w
VWAVH
@A^_^
VWATAVAWH
A_A^A\_^
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
L$ E3
pA_A^A]A\_^]
VWATAVAWH
A_A^A\_^
t$ WH
t$ WH
t$ WH
x ATAUAVH
H!\$ L
H!\$ L
H!\$ L
H!\$ L
H!\$ L
H!\$ L
@A^A]A\
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
qxRv 6
p WAVAWH
0A_A^_
p WAVAWH
0A_A^_
q!W2m
p WAVAWH
0A_A^_
q!W2m
@USVWATAUAVAWH
T$0@8
A u0H
A_A^A]A\_^[]
x UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
WAVAWH
A_A^_
L$`H3
|$ AVH
L#G0M
VWATAVAWH
L#F0M
 A_A^A\_^
UVWATAUAVAWH
L#s0M
@A_A^A]A\_^]
\$0L;
L#u0M
\$0L;
L$`H3
api-ms-win-security-lsalookup-ansi-l2-1-0.dll
Fdxgi.dll
ext-ms-win-dx-d3dkmt-dxcore-l1-1-0.dll
ext-ms-win-dx-d3dkmt-dxcore-l1-1-1.dll
ext-ms-win-ntuser-uicontext-ext-l1-1-0.dll
ext-ms-win-wer-reporting-l1-1-0.dll
ext-ms-win-dxcore-l1-1-0.dll
AhdJ!
D4FhKG
^>i[D
.?3V1
#!+)31;9
)#1+93A
9#A+I
$xlWF
Unknown exception
bad allocation
bad array new length
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
:RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
onecore\internal\sdk\inc\wil\Staging.h
WilStaging_02
string too long
map/set too long
D3D12DDI_INTERFACE_VERSION_R0
D3D12DDI_BUILD_VERSION_LATEST_R0
D3D12DDI_INTERFACE_VERSION_R1
D3D12DDI_BUILD_VERSION_0010
D3D12DDI_BUILD_VERSION_0011
D3D12DDI_BUILD_VERSION_0012
D3D12DDI_BUILD_VERSION_0013
D3D12DDI_BUILD_VERSION_0014
D3D12DDI_BUILD_VERSION_0015
D3D12DDI_INTERFACE_VERSION_R2
D3D12DDI_BUILD_VERSION_0020
D3D12DDI_BUILD_VERSION_0021
D3D12DDI_BUILD_VERSION_0022
D3D12DDI_BUILD_VERSION_0023
D3D12DDI_BUILD_VERSION_0024
D3D12DDI_BUILD_VERSION_0025
D3D12DDI_BUILD_VERSION_0026
D3D12DDI_BUILD_VERSION_0027
D3D12DDI_BUILD_VERSION_0028
D3D12DDI_INTERFACE_VERSION_R3
D3D12DDI_BUILD_VERSION_0030
D3D12DDI_BUILD_VERSION_0031
D3D12DDI_BUILD_VERSION_0032
D3D12DDI_BUILD_VERSION_0033
D3D12DDI_BUILD_VERSION_0034
D3D12DDI_INTERFACE_VERSION_R4
D3D12DDI_BUILD_VERSION_0040
D3D12DDI_BUILD_VERSION_0041
D3D12DDI_BUILD_VERSION_0042
D3D12DDI_BUILD_VERSION_0043
D3D12DDI_INTERFACE_VERSION_R5
D3D12DDI_BUILD_VERSION_0050
D3D12DDI_BUILD_VERSION_0051
D3D12DDI_BUILD_VERSION_0052
D3D12DDI_BUILD_VERSION_0053
D3D12DDI_BUILD_VERSION_0054
D3D12DDI_INTERFACE_VERSION_R6
D3D12DDI_BUILD_VERSION_0060
D3D12DDI_BUILD_VERSION_0061
D3D12DDI_BUILD_VERSION_0062
D3D12DDI_BUILD_VERSION_0063
D3D12DDI_BUILD_VERSION_0064
D3D12DDI_BUILD_VERSION_0065
D3D12DDI_INTERFACE_VERSION_R7
D3D12DDI_BUILD_VERSION_0072
D3D12DDI_BUILD_VERSION_0073
D3D12DDI_BUILD_VERSION_0074
D3D12DDI_BUILD_VERSION_0075
D3D12DDI_BUILD_VERSION_0076
D3D12DDI_INTERFACE_VERSION_R8
D3D12DDI_BUILD_VERSION_0080
D3D12DDI_BUILD_VERSION_0081
D3D12DDI_BUILD_VERSION_0082
D3D12DDI_BUILD_VERSION_0083
D3D12DDI_BUILD_VERSION_0084
D3D12DDI_BUILD_VERSION_0086
D3D12DDI_BUILD_VERSION_0088
D3D12DDI_BUILD_VERSION_0089
D3D12DDI_BUILD_VERSION_0090
D3D12DDI_BUILD_VERSION_0091
D3D12DDI_BUILD_VERSION_0092
DestroyContext
AutoDebugName
buffer_overrun
buffer_overlap
D3D Error %08x: (%d@%d) at %p - %s
D3D12SDKVersion
D3D12 SDKLayers dll in the D3D12SDKPath does not match the D3D12SDKVersion of D3D12 Core dll.
D3D12 SDKLayers dll does not match the D3D12SDKVersion of D3D12 Core dll.
Graphics tools for Windows 10 need to be installed.
D3D12 SDKLayers dll not found at D3D12SDKPath.
Using the D3D12 SDKLayers dll requires that the latest SDKLayers for Windows 10 is installed.
DXGIDebug.dll
SelectAdapter
Failed to find matching DDI versions
Driver returned invalid pipeline caps
Get3DPipelineLevel
D3D12RegisterLayers
D3D12TranslateCreateDevice
SetD3DDebugLayerStartupOptions
D3D12SDKLayers.dll
ext-ms-win-ntuser-uicontext-ext-l1-1-0
Existing singleton device already removed.
Existing singleton device feature level too low
Hardware feature level not high enough
DredWatson
DredAutoBreadcrumbs
DredPageFault
DredBreadcrumbContext
RequireSDKLayers
DXGIGetDebugInterface
D3D12CreateDevice: Unrecognized D3D_FEATURE_LEVEL (%#x) for MinimumFeatureLevel.
D3D12CreateDevice: MinimumFeatureLevel must be at least D3D_FEATURE_LEVEL_11_0 or D3D_FEATURE_LEVEL_*_CORE for a D3D12 device.
D3D12CreateDevice: pAdapter must support the IDXGIAdapter or IDXCoreAdapter interface.
D3D12GetDebugInterface: This method requires the D3D12 SDK Layers for Windows 10, but they are not present on the system.
D3DDriverVerifier.dll
invalid unordered_map<K, T> key
Local\SM0:%lu:%lu:%hs
vector too long
unordered_map/set too long
invalid hash bucket count
N9,X 
1E"*o
6F$XH
Rak!i
[L/RD
 {kp9m
CB2:fF
DestroyPagingQueueCB
CreatePagingQueue
CreateContextVirtual (SynchronizationOnly)
Buffer resources do not have layout.  Only D3D12_BARRIER_LAYOUT_UNDEFINED may be specified.
Resources using D3D12_BARRIER_LAYOUT_RESOLVE_SOURCE must have SampleCount > 1.
Resources using D3D12_BARRIER_LAYOUT_RESOLVE_DEST must have SampleCount = 1, unless programmable MSAA hardware tier 1 or greater is supported.
D3D12_BARRIER_LAYOUT_SHADING_RATE_SOURCE cannot be used when variable rate shading is not supported.
Resources on D3D12_HEAP_TYPE_UPLOAD heaps support only D3D12_RESOURCE_STATE_GENERIC_READ or D3D12_RESOURCE_STATE_RESOLVE_SOURCE.
D3D12_RESOURCE_STATES has an invalid combination of state bits.
D3D12_RESOURCE_STATES has reserved bits set.
Resources in the D3D12_RESOURCE_STATE_RESOLVE_SOURCE state must have SampleCount > 1.
Resources on D3D12_HEAP_TYPE_READBACK heaps support only D3D12_RESOURCE_STATE_COMMON, D3D12_RESOURCE_STATE_COPY_DEST or D3D12_RESOURCE_STATE_RESOLVE_DEST. 
D3D12_RESOURCE_STATES has bits that mismatch support required from the D3D12_RESOURCE_DIMENSION.
D3D12_RESOURCE_STATES has bits that mismatch support required from D3D12_RESOURCE_FLAGS.
Resources in the D3D12_RESOURCE_STATE_RESOLVE_DEST state must have SampleCount = 1, unless programmable MSAA hardware tier 1 or greater is supported.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then the resource layout must be either D3D12_TEXTURE_LAYOUT_ROW_MAJOR or D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE.
D3D12_RESOURCE_DESC::Layout is invalid for the current device, because it does not support standard swizzle. D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE can only be used when either D3D12_FEATURE_DATA_D3D12_OPTIONS::StandardSwizzle64KBSupported is TRUE,or the D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER flag is set.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is %x.  D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER must be specified if and only if D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set.
D3D12_RESOURCE_DESC::Format is invalid.  The value is %s.  When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set, the format cannot be YUV or planar.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then ResourceDesc.MipLevels must be 1.  ResourceDesc.MipLevels is %u
A texture resource cannot be created on a D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK heap. Investigate CopyTextureRegion to copy texture data in CPU accessible buffers, or investigate D3D12_HEAP_TYPE_CUSTOM and WriteToSubresource for UMA adapter optimizations.
A buffer resource cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_BUFFERS flag.
A buffer cannot be created on a D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK heap when either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS is used.
D3D12_RESOURCE_DESC::Layout is invalid for the current device, because it does not support standard swizzle (D3D12_FEATURE_DATA_D3D12_OPTIONS::StandardSwizzle64KBSupported is FALSE). For cross-adapter-shared textures on such devices, D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLErequires that the follow flags not be set: D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL, D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS.
D3D12_RESOURCE_DESC::Layout can be D3D12_TEXTURE_LAYOUT_ROW_MAJOR only when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER or when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_TEXTURE2D and the D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER flag is set.Dimension is %s.  Layout is %s. Cross adapter is %sset.
A texture resource without either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES flag.
A texture resource with either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set cannot be created on a heap with the D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES flag.
This resource cannot be created on this heap, due to unsatisfied resource alignment requirements. The resource must be aligned to %I64u. The heap must also be aligned to a value greater to or equal than the resource. The heap is aligned to %I64u, and the resource offset in the heap is %I64u.
D3D12_RESOURCE_DESC::Format is not supported with D3D12_HEAP_FLAG_ALLOW_DISPLAY at the current feature level. Format = %s, FeatureLevel is %s.
When D3D12_HEAP_FLAGS has D3D12_HEAP_FLAG_ALLOW_DISPLAY set, the following D3D12_RESOURCE_DESC members must be as follows: Dimension must be D3D12_RESOURCE_DIMENSION_TEXTURE2D, Alignment must be 0, DepthOrArraySize must be 1 or 2, MipLevels must be 1, SampleDesc.Count must be 1, SampleDesc.Quality must be 0, Layout must be D3D12_TEXTURE_LAYOUT_UNKNOWN (or ROW_MAJOR for cross-adapter heaps), and Flags must not have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL or D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY or D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
-disableHashCheck
[O'J0
[:ta@
tp|yj
JM\,T
;vE:T
nS`;)
U$@LG
%;kQn
Wgeneric
Placed 
Unnamed 
ID3D12Resource: 
Committed 
Reserved 
, Dimension=Buffer, Size=
Format=
, MipLevels=
, Dimension=Texture2D, Width=
, ArraySize: 
, Dimension=Texture1D, Width=
, Depth: 
, Dimension=Texture3D, Width=
, Height=
s/Wh!
, Type=DEFAULT
Unnamed ID3D12Heap: Size=
, Type=CUSTOM
, Type=UPLOAD
, Type=READBACK
bad cast
, UniqueId=0x
Invalid measurements action provided.
Invalid mode provided.
DISABLE_BACKGROUND_WORK, DISABLE_PROFILING_BY_SYSTEM, and COMMIT_RESULTS_HIGH_PRIORITY require developer mode.
Can only signal completion event when committing results.
Present
hFileMapping must be a committed memory region that is not uncached. hFileMapping = 0x%p, SEC_RESERVE = %u, SEC_NOCACHE = %u.
QuerySection on hFileMapping failed. hFileMapping = 0x%p.
hFileMapping is NULL.
hFileMapping must have CPU write access. hFileMapping = 0x%p.
hFileMapping must be 4GiB or less. hFileMapping = 0x%p, allocation size = %Iu.
pAddress must be equal to the base address of an allocated memory region. pAddress = 0x%p, base address containing pAddress = 0x%p.
VirtualQuery on pAddress failed. pAddress = 0x%p.
pAddress is NULL.
OpenExistingHeap is only supported when all the pages in the heap have the same access protection. Protection for the page starting at 0x%p was %I32u, did not match the base page protection %I32u
pAddress must point to a memory region that can be written without PAGE_NOCACHE. pAddress = 0x%p, region address = 0x%p, region size = %Iu, writeable = %u, PAGE_NOCACHE = %u.
pAddress must point to a committed memory region. pAddress = 0x%p, region address = 0x%p, region size = %Iu, MEM_RESERVE = %u, MEM_FREE = %u.
OpenExistingHeap is only supported when D3D12_FEATURE_DATA_EXISTING_HEAP::Supported is TRUE. 
pAddress must point to a memory region that is 4GiB or less. pAddress = 0x%p, allocation size = %Iu.
OpenExistingHeap is only supported when all the pages in the heap have the same state. State for the page starting at 0x%p was %I32u, did not match the base page state %I32u
ext-ms-win-dx-d3dkmt-dxcore-l1-1-1
HoXO9E
Invalid data size specified (%u). Expected %u for reflection property %u.
Unrecognized reflection property specified (%u).
When ID3D12CompatibilityDevice::CreateSharedHeap is invoked, the heap flags must not contain D3D12_HEAP_MISC_SHARED_CROSS_ADAPTER.
When ID3D12CompatibilityDevice::CreateSharedHeap is invoked, the heap flags must contain D3D12_HEAP_MISC_SHARED.
Invalid compatibility flags provided to ID3D12CompatibilityDevice::CreateSharedHeap.
Too many bits set in the specified node mask (0x%x).  No more than 1 bit may be set.
CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPES failed
CheckFeatureSupport for D3D12_FEATURE_PROTECTED_RESOURCE_SESSION_TYPE_COUNT failed
The specified node index is beyond the node count of the device. NodeIndex: %d, NodeCount: %d
The specified protection type is not supported by driver.
Invalid D3D12_PROTECTED_RESOURCE_SESSION_FLAGS specified
GetCopyableFootprints does not support buffers with width (%llu) larger than UINT_MAX.
FirstSubresource and/ or NumSubresources are invalid for the corresponding resource. The resource only has %u subresources, while FirstSubresource is %u and NumSubresources is %u.
D3D12_HEAP_PROPERTIES::CPUPageProperty is unrecognized. The value is %d.
D3D12_HEAP_PROPERTIES::Type is unrecognized. The value is %d.
pHeapProperties is NULL!
pDesc is NULL!
D3D12_HEAP_FLAGS has recognized flags set. The value is 0x%x, and the following flags are unrecognized: 0x%x.
D3D12_HEAP_PROPERTIES::MemoryPoolPreference is unrecognized. The value is %d.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_DISPLAY for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_HARDWARE_PROTECTED for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_DENY_BUFFERS for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE must be used with D3D12_MEMORY_POOL_L1.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_UNKNOWN cannot be used with D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_TYPE_CUSTOM is not supported by D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_FLAGS can't specify D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS for D3D_FEATURE_LEVEL_1_0_CORE devices.
D3D12_HEAP_PROPERTIES is invalid. D3D12_MEMORY_POOL_UNKNOWN must be used when creating heaps that are not D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. D3D12_CPU_PAGE_PROPERTY_UNKNOWN must be used when creating heaps that are not D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_PROPERTIES is invalid. Only D3D12_MEMORY_POOL_L0 can be used on UMA architectures. Use CheckFeatureSupport with D3D12_FEATURE_ARCHITECTURE1 to understand architectural capabilities.
D3D12_HEAP_PROPERTIES is invalid. D3D12_MEMORY_POOL_UNKNOWN cannot be used with D3D12_HEAP_TYPE_CUSTOM.
D3D12_HEAP_FLAGS has invalid flag combinations set. When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set, all the following must not be set: D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES = %u, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES = %u, and D3D12_HEAP_FLAG_DENY_BUFFERS = %u.
When creating a committed resource, D3D12_HEAP_FLAGS must not have either D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES, nor D3D12_HEAP_FLAG_DENY_BUFFERS set. These flags will be set automatically to correspond with the committed resource type.
D3D12_HEAP_FLAGS has invalid flag combinations set. D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH may not be set with CPU inaccessible heaps, which is defined by D3D12_HEAP_PROPERTIES.
D3D12_HEAP_FLAGS has invalid flag combinations set. D3D12_HEAP_FLAG_SHARED may not be set when creating CPU accessible heaps, which is defined by D3D12_HEAP_PROPERTIES. But, some shared CPU accessible heaps can be accomplished through OpenExistingHeap. See MSDN for more details.
D3D12_RESOURCE_HEAP_TIER_2
D3D12_RESOURCE_HEAP_TIER_1
D3D12_HEAP_PROPERTIES is invalid. VisibleNodeMask must contain CreationNodeMask
D3D12_HEAP_FLAGS has invalid flag combinations set. The following flags may not all be set simultaneously. Exactly one must be left unset, or all may be left unset when the adapter supports D3D12_RESOURCE_HEAP_TIER_2 or creating a heap in conjunction with D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER: D3D12_FEATURE_DATA_D3D12_OPTIONS::ResourceHeapTier = %s, D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER = %u, D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES = %u, D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES = %u, and D3D12_HEAP_FLAG_DENY_BUFFERS = %u.
If D3D12_HEAP_FLAG_ALLOW_DISPLAY is set then the heap type may not be D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set and the heap type is D3D12_HEAP_TYPE_CUSTOM, then CPUPageProperty must be D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE and MemoryPoolPreference must be D3D12_MEMORY_POOL_L0.  CPUPageProperty is set to %s.  MemoryPoolPreference is set to %s.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then the heap type may not be D3D12_HEAP_TYPE_UPLOAD or D3D12_HEAP_TYPE_READBACK.
If D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set then D3D12_HEAP_FLAG_SHARED must be set also.
D3D12_MEMORY_POOL_MAX_VALID
D3D12_MEMORY_POOL_L1
D3D12_MEMORY_POOL_L0
D3D12_MEMORY_POOL_UNKNOWN
D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE
D3D12_CPU_PAGE_PROPERTY_UNKNOWN
D3D12_CPU_PAGE_PROPERTY_MAX_VALID
D3D12_CPU_PAGE_PROPERTY_WRITE_BACK
D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS fails when D3D12_FEATURE_DATA_CROSS_NODE::AtomicShaderInstructions is FALSE, the heap type is D3D12_HEAP_TYPE_DEFAULT, and VisibleNodeMask contains bits not in the CreationNodeMask. These properties suggest the application is trying to use shader atomic instructions to memory on an LDA peer. That only works when the hardware supports AtomicShaderInstructions.
If D3D12_HEAP_FLAG_ALLOW_DISPLAY is set, and D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is not set, and the heap type is D3D12_HEAP_TYPE_CUSTOM, then CPUPageProperty must be D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE and MemoryPoolPreference must be D3D12_MEMORY_POOL_L0 on UMA, or L1 otherwise.  CPUPageProperty is set to %s.  MemoryPoolPreference is set to %s.
D3D12_HEAP_FLAGS may only have D3D12_HEAP_FLAG_ALLOW_DISPLAY set when used with CreateCommittedResource.
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS fails when the heap type allows CPU access; but isn't D3D12_HEAP_TYPE_CUSTOM. These properties suggest the application may be trying to use shader atomic instructions with CPU interlocked operations%s. Not all hardware supports atomics with CPU interlocked operations%s.
 or to memory on another LDA peer
 nor with shader atomics running on an LDA peer. See D3D12_FEATURE_DATA_CROSS_NODE::AtomicShaderInstructions
D3D12_HEAP_DESC::Alignment is invalid. The value is %I64u, and it must be either 0 (for automatic alignment to 64KiB), 64KiB, or 4MiB for MSAA resources.
D3D12_HEAP_DESC::SizeInBytes is invalid. The size is %I64u, and it must be less than %I64u and non-zero.
D3D12_HEAP_TYPE is unrecognized. The value is %d.
D3D12_HEAP_TYPE is invalid. It cannot be D3D12_HEAP_TYPE_CUSTOM when requesting translation to custom properties.
RDescs is too large. The value is %u, and it must be less than or equal to %u.
D3D12_RESOURCE_DESC::Flags has unrecognized bits. The value is 0x%x, and the unrecognized bits are 0x%x.
D3D12_RESOURCE_DESC::Layout is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Format is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Dimension is unrecognized. The value is %u.
D3D12_RESOURCE_DESC::Height and D3D12_RESOURCE_DESC::DepthOrArraySize must be 1 when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Height = %u and DepthOrArraySize = %u.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Buffers must have this field set to %I64u (aka. %s) or 0.
The only resource dimension supported by D3D_FEATURE_LEVEL_1_0_CORE devices is BUFFER.
D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and D3D12_RESOURCE_DESC::DepthOrArraySize cannot be 0. The minimum value is 1. Width = %I64u, Height = %u, and DepthOrArraySize = %u.
D3D12_RESOURCE_DESC::Layout must be D3D12_TEXTURE_LAYOUT_ROW_MAJOR when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Layout = %s.
D3D12_RESOURCE_DESC::SampleDesc must be { Count: 1, Quality: 0 } when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. SampleDesc = { %u, %u }.
D3D12_RESOURCE_DESC::Format must be DXGI_FORMAT_UNKNOWN when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. Format = %s.
D3D12_RESOURCE_DESC::MipLevels must be 1 when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER. MipLevels = %u.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::MiscFlag cannot have D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::MiscFlag cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large for the D3D12_RESOURCE_DESC::Dimension and FeatureLevel. Width = %I64u and must be <= %u, Height = %u and must be <= %u, DepthOrArraySize = %u and must be <= %u, Dimension = %s, and FeatureLevel = %s.
pOptimizedClearValue must be NULL when D3D12_RESOURCE_DESC::Dimension is D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_RESOURCE_DESC::MipLevels must be 0 or <= %u when the largest texture dimension, D3D12_RESOURCE_DESC::%s, is %I64u. MipLevels is %u.
DepthOrArraySize
Height
Width
D3D12_RESOURCE_DESC::Format is not supported with D3D12_RESOURCE_DESC::Dimension at the current feature level. Format = %s, Dimension = %s, FeatureLevel is %s.
D3D12_RESOURCE_DESC::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
A sampler feedback DXGI_FORMAT was specified, but the device reports D3D12_SAMPLER_FEEDBACK_TIER_NONE.
auto calculated from resource dimensions to be 
D3D12_RESOURCE_DESC::SampleDesc::Count cannot be 0.
D3D12_RESOURCE_DESC::MipLevels must be 1 when D3D12_RESOURCE_DESC::Format is %s, at the current feature level. MipLevels is %s%u. FeatureLevel is %s.D3D12_FEATURE_DATA_FORMAT_SUPPORT::Support1 does not include D3D12_FORMAT_SUPPORT1_MIP when calling CheckFeatureSupport with D3D12_FEATURE_FORMAT_SUPPORT.
Textures created with certain Formats must align the resource dimensions properly. D3D12_RESOURCE_DESC::Format is %s. D3D12_RESOURCE_DESC::Width is %I64u, and must be a multiple of %u. D3D12_RESOURCE_DESC::Height is %u, and must be a multiple of %u.
The well-known multisample quality patterns are not supported. The device must support D3D_FEATURE_LEVEL_10_1 or greater, and multisampling for the particular format and sample count. Well-known multisample quality patterns can only be used with D3D12_RESOURCE_DESC::SampleDesc::Count equal to 1, 2, 4, 8, or 16. But, support for each sample count value and format must still be verified. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %s, FeatureLevel is %s, D3D12_RESOURCE_DESC::Format is %s. D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::NumQualityLevels is %u when calling CheckFeatureSupport with D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS%s.
DXGI_CENTER_MULTISAMPLE_QUALITY_PATTERN
DXGI_STANDARD_MULTISAMPLE_QUALITY_PATTERN
D3D12_RESOURCE_DESC::SampleDesc::Count must be 1 when number of mip levels is not 1, or Dimension is not D3D12_RESOURCE_DIMENSION_TEXTURE2D. SampleDesc::Count is %u, MipLevels is %s%u, and Dimension is %s.
A multisampled resource cannot set D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS in D3D12_RESOURCE_DESC::Flags.DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
A multisampled resource must have either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
The multisample quality value is not supported. Support for each sample count value and format must be verified. DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u, D3D12_RESOURCE_DESC::Format is %s. D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::NumQualityLevels is %u when calling CheckFeatureSupport with D3D12_FEATURE_MULTISAMPLE_QUALITY_LEVELS%s.
 and D3D12_FEATURE_DATA_MULTISAMPLE_QUALITY_LEVELS::Flags set to D3D12_MULTISAMPLE_QUALITY_LEVELS_FLAG_TILED_RESOURCE
D3D12_TEXTURE_LAYOUT_UNKNOWN
D3D12_RESOURCE_DESC::Layout is invalid due to interactions with other resource properties. When it is D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE, D3D12_RESOURCE_DESC::Format can not be one of the DXGI_FORMAT_R32G32B32_TYPELESS group, D3D12_RESOURCE_DESC:Flags cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set, and D3D12_RESOURCE_DESC::SampleDesc::Count must be 1. Format is %s, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is %s set, and Count is %u.
A multisampled resource cannot set D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS in D3D12_RESOURCE_DESC::Flags.DXGI_SAMPLE_DESC::Count is %u, DXGI_SAMPLE_DESC::Quality is %u.
D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE
D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE
D3D12_TEXTURE_LAYOUT_ROW_MAJOR
D3D12_RESOURCE_DESC::MipLevels is invalid.  The value is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, MipLevels must be 1.
D3D12_RESOURCE_DESC::Dimension is invalid.  The value is %s.  D3D12_TEXTURE_LAYOUT_ROW_MAJOR is only supported with D3D12_RESOURCE_DIMENSION_BUFFER or D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. When D3D12_RESOURCE_DESC::Layout is %s, the Alignment field must be either %I64u (aka. %s) or 0.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is 0x%x.  The D3D12 device being used only supports copies to/from row major textures.  Neither D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET nor D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS may be set.
D3D12_RESOURCE_DESC::Flags is invalid.  The value is 0x%x.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag cannot be set.
D3D12_RESOURCE_DESC::SampleDesc is invalid.  Count is %u, quality is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the sample count must be 1, and the sample quality must be 0.
D3D12_RESOURCE_DESC::DepthOrArraySize is invalid.  The value is %u.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, DepthOrArraySize must be 1.
D3D12_DEFAULT_MSAA_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_SMALL_MSAA_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_RESOURCE_DESC::Format is invalid.  The value is %s.  When D3D12_RESOURCE_DESC::Layout is D3D12_TEXTURE_LAYOUT_ROW_MAJOR, the format cannot be YUV.
D3D12_SMALL_RESOURCE_PLACEMENT_ALIGNMENT
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Resources with D3D12_RESOURCE_DESC::Flags with either D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET or D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL must set Alignment equal to %I64u (aka. %s), or 0.
D3D12_RESOURCE_DESC::Alignment cannot be 64KB, since D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large. 64KB alignment requires the most detailed mip level be theoretically 4MB or smaller. A 64KB tile shape for %s and %s is %u texels wide, %u texels high, and %u texels deep. When Width = %I64u, Height = %u, and Depth = %u, the number of tiles needed is %I64u, while 64 tiles is the maximum.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. MSAA resources must have this field set to %I64u (aka. %s), %I64u (aka. %s), or 0.
D3D12_RESOURCE_DESC::Alignment cannot be 4KB, since D3D12_RESOURCE_DESC::Width, D3D12_RESOURCE_DESC::Height, and/ or D3D12_RESOURCE_DESC::DepthOrArraySize are too large. 4KB alignment requires the most detailed mip level be theoretically 64KB or smaller. A 4KB tile shape for %s and %s is %u texels wide, %u texels high, and %u texels deep. When Width = %I64u, Height = %u, and Depth = %u, the number of tiles needed is %I64u, while 16 tiles is the maximum.
D3D12_RESOURCE_DESC::Alignment cannot be 4096 for planar formats.
D3D12_RESOURCE_DESC::Alignment is invalid. The value is %I64u. Non-MSAA resources must have this field set to %I64u (aka. %s), %u (aka. %s), or 0.
D3D12_DEFAULT_RESOURCE_PLACEMENT_ALIGNMENT
FALSE
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE and most resource flags cannot be created when the tiled resource capabilities do not support full orthogonality for %s. D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s. D3D12_FEATURE_DATA_D3D12_OPTIONS5::SRVOnlyTiledResourceTier3 is %s. The following flags are not supported, unless TiledResourcesTier is D3D12_TILED_RESOURCES_TIER_3 or greater: D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET = %u. D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL = %u. D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS = %u. 
The D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE layout cannot be used on a device that does not support tiled resources. CheckFeatureLevel with D3D12_FEATURE_D3D12_OPTIONS indicates D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s.
D3D12_TILED_RESOURCES_TIER_3
D3D12_TILED_RESOURCES_TIER_2
D3D12_TILED_RESOURCES_TIER_1
D3D12_TILED_RESOURCES_TIER_NOT_SUPPORTED
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE cannot be created when the tiled resource capabilities do not support D3D12_RESOURCE_DESC::Dimension of %s. D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s. D3D12_FEATURE_DATA_D3D12_OPTIONS5::SRVOnlyTiledResourceTier3 is %s.
D3D12_TILED_RESOURCES_TIER_4
Textures with layout D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE cannot be created when the D3D12_RESOURCE_DESC::Format does not support tiled resources. Format is %s. D3D12_FORMAT_SUPPORT2_TILED is not set for D3D12_FEATURE_FORMAT_SUPPORT.
On a device with Tier 1 Tiled Resources support, Tiled Resources cannot be created with both more than one array slice and any mipmap that has a dimension not a multiple of a tile in extent. For the Tiled Resource being created, Mip [%u] has (width=%u, height=%u) while the tile dimension for the given format is (width=%u, height=%u). 
The Dimensions are too large for a Tiled Resource with multiple array slices on device with Tier 1 level of support. At this Tier, resources with multiple array slices cannot have individual array slices larger than 2^24 - 1 (%I64u) bytes in virtual address space. The requested surface dimensions padded to tile size require roughly %I64u bytes.
Textures cannot be used as unordered access resources when the feature level is less than D3D_FEATURE_LEVEL_11_0. D3D12_RESOURCE_DESC::Dimension is %s. D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS set. FeatureLevel is %s.
The D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE layout cannot be used on a Texture1D resource (these can't be tiled). 
On a device with Tier 2 & 3 Tiled Resources support, Tiled Resources cannot be created with both more than one array slice and any mipmap that has a dimension less than a tile in extent. For the Tiled Resource being created, Mip [%u] has (width=%u, height=%u) while the tile dimension for the given format is (width=%u, height=%u). Hardware support in this area was not able to be standardized in time to be included in D3D.
A texture that has D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as a depth stencil, or cast to a format that could be used as a depth stencil. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set with D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET, D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS, nor D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS.
A texture that has D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as a render target, or cast to a format that could be used as a render target. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
A texture that has D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS set in D3D12_RESOURCE_DESC::Flags must be created with a format that either can be used as unordered access, or cast to a format that could be used as unordered access. FeatureLevel is %s. D3D12_RESOURCE_DESC::Format is %s.%s
D3D12_RESOURCE_DESC::Flags can only combine D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY with these flags: 0x%x.  Unsupported flags specified: 0x%x.
D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, but the D3D12_RESOURCE_DESC::Format specified does not support D3D12_FORMAT_SUPPORT1_DECODER_OUTPUT Format = %s.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set if the device does not support video.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE set without D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL, D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY or D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::MipLevels == 1.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::Layout == D3D12_TEXTURE_LAYOUT_UNKNOWN.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY for D3D12_RESOURCE_DIMENSION_TEXTURE2D.
When D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, you must also set the following flags: 0x%x. Missing flags: 0x%x.
It is invalid to specify pOptimizedClearValue when D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY.
When D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, you must also set the following flags: 0x%x. Missing flags: 0x%x.
D3D12_RESOURCE_DESC::Flags can only combine D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY with these flags: 0x%x.  Unsupported flags specified: 0x%x.
D3D12_RESOURCE_DESC::Flags cannot have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set if the device does not support video.
It is invalid to specify pOptimizedClearValue when D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::MipLevels == 1.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DESC::Layout == D3D12_TEXTURE_LAYOUT_UNKNOWN.
D3D12_RESOURCE_DESC::Flags can only have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY for D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_CLEAR_VALUE::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
D3D12_CLEAR_VALUE::Format is unrecognized. The value is %u.
pOptimizedClearValue must be NULL when D3D12_RESOURCE_DESC::Dimension is not D3D12_RESOURCE_DIMENSION_BUFFER and neither D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET nor D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL are set in D3D12_RESOURCE_DESC::Flags.
D3D12_CLEAR_VALUE::Format must belong to the same format cast group as D3D12_RESOURCE_DESC::Format. D3D12_CLEAR_VALUE::Format = %s, D3D12_RESOURCE_DESC::Format = %s.
D3D12_CLEAR_VALUE::Format must be equal to D3D12_RESOURCE_DESC::Format, when the resource format is not a typeless format. D3D12_CLEAR_VALUE::Format = %s, D3D12_RESOURCE_DESC::Format = %s.
D3D12_CLEAR_VALUE::Format cannot be a typeless format. A fully qualified format must be supplied. Format = %s.
D3D_FEATURE_LEVEL_9_2
D3D_FEATURE_LEVEL_9_1
D3D_FEATURE_LEVEL_1_0_CORE
When D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET is set in D3D12_RESOURCE_DESC::Flags, D3D12_CLEAR_VALUE::Format must be valid to be used as a render target. FeatureLevel is %s. D3D12_CLEAR_VALUE::Format is %s.
D3D_FEATURE_LEVEL_11_0
D3D_FEATURE_LEVEL_10_1
D3D_FEATURE_LEVEL_10_0
D3D_FEATURE_LEVEL_9_3
D3D_FEATURE_LEVEL_12_2
D3D_FEATURE_LEVEL_12_1
D3D_FEATURE_LEVEL_12_0
D3D_FEATURE_LEVEL_11_1
D3D12_CLEAR_VALUE::DepthStencil::Depth is outside the valid range of 0.0f to 1.0f. Depth = %f.
When D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is set in D3D12_RESOURCE_DESC::Flags, D3D12_CLEAR_VALUE::Format must be valid to be used as a depth stencil. FeatureLevel is %s. D3D12_CLEAR_VALUE::Format is %s.
An invalid sampler feedback mip region was specified; the Depth field must be equal to 0 or 1.
An invalid sampler feedback mip region was specified. Mip region width and height must be a power-of-two number greater than or equal to 4, less than or equal to half the size of most detailed mip of the paired texture.
There was an attempt to create a sampler feedback map with non-UNKNOWN Layout. Sampler feedback maps must have UNKNOWN resource layout.
There was an attempt to create a sampler feedback map with SampleDesc.Quality != 0. Sampler feedback maps must have SampleDesc.Quality == 0.
There was an attempt to create a sampler feedback map with SampleDesc.Count > 1. Sampler feedback maps must be single-sampled; that is, they have sample count 1.
There was an attempt to create a sampler feedback map was an invalid dimension. Sampler feedback maps must have dimension TEXTURE2D.
Nonzero values for sampler feedback mip region were used, but the resource format does not support sampler feedback.
Sampler feedback maps must be created with the ALLOW_UNORDERED_ACCESS flag.
D3D12_RESOURCE_DIMENSION_TEXTURE2D
D3D12_RESOURCE_DIMENSION_TEXTURE1D
D3D12_RESOURCE_DIMENSION_BUFFER
D3D12_RESOURCE_DIMENSION_UNKNOWN
Unrecognized
D3D12_RESOURCE_DIMENSION_MAX_VALID
D3D12_RESOURCE_DIMENSION_TEXTURE3D
Cannot cast from planar format %s.
pCastableFormats must be NULL
D3D12_RESOURCE_DESC::Dimension is invalid. The value is %s.
Cannot cast to planar format %s.
Cannot cast from %s with unit size %u to %s with unit size %.
D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE
D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE
D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT
D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED
unknown
D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH
SeIncreaseBasePriorityPrivilege
OSG14
SV_Position
PSV0P
DXIL(
mJ@4!
DXBC_
RDEFl
RD11<
Microsoft (R) HLSL Shader Compiler 10.0.10011.0
SHEX 
DXBC)
PSV08
DXILP
kz#+c
RDEFL
Microsoft (R) HLSL Shader Compiler 6.4.9840.0
OSGN,
SV_Position
SHDR<
STATt
FUnrecognized cache kinds.
Attempting to enable already-enabled caches.
Unrecognized control flags.
Must pass nonzero flags for both cache kinds and control.
Cannot specify enable and disable at the same time.
Developer mode must be enabled to use this API.
Attempting to disable already-disabled caches.
,Description must be provided.
Invalid mode specified. Must be either MEMORY or DISK.
(~ghLL&R/
!Identifier is reserved.
MaximumValueFileSizeBytes must be less than 1GiB (%u), %u specified. Use 0 to use the default value.
Application-managed shader caches are currently disabled.
Invalid flags specified.
Driver uses indexable swizzle patterns, but returned an out of range ColumnOffset.
Driver doesn't respond to D3D12DDICAPS_MEMORY_ARCHITECTURE Caps.
Driver failed D3D12DDICAPS_TYPE_0022_TEXTURE_LAYOUT Caps with NULL pInfo.
D3DDriverVerifier.dll
RetrieveVerifierInterface
Driver failed D3D12DDICAPS_TYPE_TEXTURE_LAYOUT1 Caps with NULL pInfo.
Input layout for slot %u is invalid, as there is not a correct alignment for all of its members at any offset.
SOFTWARE\Microsoft\Cryptography
OpenSyncObject
OpenKeyedMutex
MachineGuid
Removing device due to bad UMD error.
UMD reported application bug.
UMD reported device removed.
D3D12: Removing Device.
QueryAdapterInfo (KMTQAITYPE_DRIVERVERSION)
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::DeviceDependentSwizzleCount too large.
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::DeviceDependentLayoutCount too large.
UMD reported error while device is removed.
Driver set D3D12DDICAPS_MEMORY_ARCHITECTURE::CacheCoherent TRUE along with D3D12DDICAPS_MEMORY_ARCHITECTURE::UMA FALSE. CacheCoherent is only a property of UMA systems, which don'tbenefit from the usage of write-combine.
Driver set D3D12DDICAPS_MEMORY_ARCHITECTURE::IOCoherent FALSE on an x86 or amd64 system.PCIe support IOCoherence, and the hardware must use it. UMA systems must set TRUE, to avoid the runtimeflushing the CPU cache manually.
Driver set D3D12DDICAPS_TEXTURE_LAYOUT::SupportsRowMajorTexture but not DXGK_VIDMMCAPS::CrossAdapterResourceTexture.
QueryAdapterInfo (KMTQAITYPE_CROSSADAPTERRESOURCE_SUPPORT)
Driver set pfnOpenHeapAndResource to NULL.
Driver set pfnCalcPrivateOpenedHeapAndResourceSizes to NULL.
Driver set pfnDestroyHeapAndResource to NULL.
Driver set pfnCalcPrivateHeapAndResourceSizes to NULL.
Driver set pfnCheckResourceAllocationInfo to NULL.
Driver set pfnCreateHeapAndResource to NULL.
Driver must set pfnMapHeap and pfnUnmapHeap to non-NULL.
Driver failed D3D12DDICAPS_TEXTURE_LAYOUT or D3D12DDICAPS_TEXTURE_LAYOUT_SETS Caps.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::BaseOffsetAlignment either too large, 0, or to a non-pow2 value.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps[ 0 ]::MaxElementSize to 0.
Driver set pfnCheckExistingResourceAllocationInfo to NULL.
Driver set pfnCheckSubresourceInfo to NULL.
Driver failed D3D12DDICAPS_TYPE_0022_CPU_PAGE_TABLE_FALSE_POSITIVES Caps.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_CAPS::Flags incorrect. D3D12DDI_ROW_MAJOR_LAYOUT_FLAG_DEPTH_PITCH_4_8_16_HEIGHT_MULTIPLE must be set along with D3D12DDI_ROW_MAJOR_LAYOUT_FLAG_FLEXIBLE_DEPTH_PITCH.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::DepthPitchAlignment either too large, 0, or to a non-pow2 value.
Driver set D3D12DDI_ROW_MAJOR_LAYOUT_SUB_CAPS::SubCaps::PitchAlignment either too large, 0, or to a non-pow2 value.
Driver returned non-zero D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::AdditionalDataSize for a resource with a known layout.
Driver returned non-zero D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::AdditionalDataHeaderSize for a resource with a known layout.
Driver returned unexpected D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::ResourceDataSize for a resource with a known layout.
Driver responded with invalid bits to D3D12DDICAPS_TYPE_0022_CPU_PAGE_TABLE_FALSE_POSITIVES Caps.
QueryAdapterInfo (KMTQAITYPE_PHYSICALADAPTERDEVICEIDS)
DllGetClassObject
D3DSCache.dll
Driver returned unexpected D3D12DDI_RESOURCE_ALLOCATION_INFO_0022::Layout for a resource with a known layout.
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ResourceHeapTier.
Driver reported invalid WriteBufferImmediate support flags.
Driver did not respond to D3D12DDICAPS_TYPE_D3D12_OPTIONS caps query
ForceComputeOnlyDevice
Driver did not set valid WaveLaneCountMin/Max or TotalLaneCount via D3D12DDICAPS_TYPE_SHADER caps query
Driver did not respond to D3D12DDICAPS_TYPE_SHADER caps query
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ViewInstancingTier.
Driver filled out an invalid value in D3D12DDI_D3D12_OPTIONS_DATA::ProgrammableSamplePositionsTier.
FL 12+ driver incorrectly does not report support for typed UAV load additional formats.
FL12+ driver incorrectly did not report support for resource binding tier 2+.
FL12+ driver incorrectly did not report support for tiled resources tier 2+.
FL11.1 driver doesn't support logic ops
Driver did not respond to D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query with a list of supported shader models.
Driver did not respond to D3D12DDICAPS_TYPE_ARCHITECTURE_INFO caps query
FL 12.1+ driver incorrectly does not report support for Raster Order Views (ROVs).
FL12.1+ driver incorrectly did not report support for conservative rast tier 1+.
Drivers that expose AtomicInt64OnTypedResource, AtomicInt64OnGroupShared, AtomicInt64OnDescriptorHeapResource, DerivativesInMeshAndAmplificationShaders or WaveMMATier must expose shader model 6.6.
Driver cannot have gaps in reported support for release shader models in D3d12DDICAPS_TYPE_0011_SHADER_MODELS caps query.
Driver did not report any supported shader models in D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query
For now, driver must include shader model 5.1 support in the list of shader models returned via D3D12DDICAPS_TYPE_0011_SHADER_MODELS caps query.
Drivers that support variable shading rate tier 2+ must expose shader model 6.4.
Drivers that support mesh shader 1.0 must expose shader model 6.5.
Drivers that support sampler feedback tier 1.0 must expose shader model 6.5.
Drivers that support raytracing tier 1.1 must expose shader model 6.5.
Drivers that report BarycentricsSupported = TRUE must expose shader model 6.1.
Drivers that support D3D12DDI_VIEW_INSTANCING_TIER_1 or greater must expose shader model 6.1.
Drivers that support Native16BitOps must expose shader model 6.2.
Drivers that support raytracing must expose shader model 6.3.
MSAA quality for parent != child
Driver claimed MSAA support when it shouldn't
Driver did not correctly respond to D3D12DDICAPS_TYPE_0050_HARDWARE_SCHEDULING_CAPS caps query.
Driver did not correctly respond to D3D12DDICAPS_TYPE_0023_UMD_BASED_COMMAND_QUEUE_PRIORITY caps query.
No nodes are exposed at the API
More than 32 nodes are exposed at the API
QueryAdapterInfo (KMTQAITYPE_PHYSICALADAPTERCOUNT)
MSAA quality reported to be 0
Driver specified unrecognized cross-node sharing tier
Driver specified duplicate API index in node remapping
Driver specified invalid API index in node remapping
Driver specified a non-identity node remapping with more than 1 API-visible node
Driver reported TIER_NOT_SUPPORTED despite implementing DDI table.
Driver reported TIER_1 or greater Render Pass support despite not implementing DDI table.
Driver specified unrecognized Render Pass tier
Driver specified incompatible cross-node sharing tier
QueryAdapterInfo (KMTQAITYPE_QUERY_GPUMMU_CAPS)
QueryAdapterInfo (KMTQAITYPE_WDDM_2_0_CAPS)
QueryAdapterInfo (KMTQAITYPE_DIRECTFLIP_SUPPORT)
QueryAdapterInfo (KMTQAITYPE_ADAPTERTYPE)
FL12.2+ driver incorrectly did not report support for shader model at least 6_5
MaxGPUVirtualAddressBitsPerResource error
Driver set MaxGPUVirtualAddressBitsPerResource to 0.
GetCaps (D3D12DDICAPS_TYPE_GPUVA_CAPS)
FL12.2+ driver incorrectly did not report support for sampler feedback tier at least 0.9
FL12.2+ driver incorrectly did not report support for mesh shader tier at least 1
FL12.2+ driver incorrectly did not report support for variable rate shading tier at least 2
FL12.2+ driver incorrectly did not report support for raytracing tier at least 1.1
FL12.2+ driver incorrectly did not report support for root signature version at least 1.1
FL12.2+ driver incorrectly did not report support for conservative rasterization tier at least 3
FL12.2+ driver incorrectly did not report support for tiled resource tier at least 3
FL12.2+ driver incorrectly did not report support for resource binding tier at least 3
FL12.2+ driver incorrectly did not report support for wave ops
FL12.2+ driver incorrectly did not report at least 40 bits of GPU virtual address bits
FL12.2+ driver incorrectly did not report support for direct, compute, and bundle WriteBufferImmediate support.
FL12.2+ driver incorrectly did not report support for depth bounds testing
FL12.2+ driver incorrectly did not report support for the CastingFullyTypedFormatSupported capability
FL12.2+ driver incorrectly did not report support for the CopyQueueTimestampQueriesSupported capability
FL12.2+ driver incorrectly did not report support for the VPAndRTArrayIndexFromAnyShaderFeedingRasterizerSupportedWithoutGSEmulation capability
FL12.2+ driver incorrectly did not report support for output merger logic ops
BackgroundThreadCount
Driver reported VRS TIER_1 or greater, but did not provide a valid tile size.
Driver reported VRS TIER_2, but did not provide a valid nonzero tile size.
FL12.2+ driver incorrectly did not report support for 64-bit integer shader ops
DisableImplicitMGPU
dxilconv.dll
ReportRetailValidationError error
ForegroundThreadCount
Invalid queue type specified.
Device does not have Video Encode capabilities, see CheckFeatureSupport.
Device does not have Video Process capabilities, see CheckFeatureSupport.
Device does not have Video decode capabilities, see CheckFeatureSupport.
No vertex shader specified.
Device does not have Video Command capabilities, see CheckFeatureSupport.
Invalid queue flags specified.
Invalid queue priority specified.
Hull Shader to Domain Shader linkage error: Signatures for %s entry [%i] have different names. The Hull Shader outputs '%s', while the Domain Shader inputs '%s'.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are different lengths. The signatures for both Patch Constant Data and Control Points between Hull Shader and Domain Shader must match exactly. This is a stricter requirement than the linkage between other shader stages.
Control Points
Patch Constant Data
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' in each signature have different component masks, when they must bet identical. This is a stricter requirement than the linkage between other shader stages.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' has mismatched data types between the output stage and input stage.
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' is defined for mismatched hardware registers between the output stage and input stage.
Hull Shader to Domain Shader linkage error: Signatures for %s entry [%i] have different semantic indices. The Hull Shader outputs '%s%d', while the Domain Shader inputs '%s%d'.
Input Assembler
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' in each signature have different min precision levels, when they must bet identical. 
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' is always read by the Domain Shader, but never written by the Hull Shader (even though the semantic is present in its output signature).
Hull Shader to Domain Shader linkage error: Signatures for %s between stages are incompatible. Semantic '%s' has different System Value defined for the input vs output stages.
Geometry Shader
Domain Shader
Hull Shader
Vertex Shader
SV_VertexID
Mesh Shader
Amplification Shader
Pixel Shader
SV_SampleIndex
SV_IsFrontFace
SV_PrimitiveID
SV_InstanceID
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' is defined for mismatched hardware registers between the output stage and input stage.
%s - %s linkage error: Signatures between stages are incompatible. The input stage requires Semantic/Index (%s,%d) as input, but it is not provided by the output stage.
SV_Barycentrics
SV_Coverage
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' of the input stage has a hardware register component mask that is not a subset of the output of the previous stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' of the input stage has a hardware register component mask that does not match the output of the previous stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' has a different system value defined in the output stage vs input stage.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' has mismatched data types between the output stage and input stage.
%s stage inputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
%s stage validation metadata required for PSOs used with view instancing is missing or invalid.
%s - %s linkage error: Signatures between stages are incompatible. Semantic '%s' in each signature have different min precision levels, when they must bet identical. 
%s - %s linkage error: Stages are incompatible with each other. Semantic '%s' is always read by the downstream shader, but never written by the upstream shader (even though the semantic is present in its output signature).
%s stage validation metadata required for PSOs used with view instancing is invalid or incorrect version.
Internal runtime error validating %s stage in a PSOs used with view instancing.
%s stage patch constant inputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
%s stage outputs do not fit within maximum vertex size of %d components when accounting for expansion of components that are dependent on ViewID by the declared ViewInstanceCount (%d), based on the compiler's component packing rules.
The Vertex Shader expects application provided input data (which is to say data other than hardware auto-generated values such as VertexID or InstanceID). Therefore an Input Assembler object is expected, but none is bound.
Invalid primitive topology type.
Invalid index buffer properties.
No vertex shader or mesh shader specified.
Mismatched Control Point counts. Current Hull Shader defines output Control Point count per patch of %d, but the current Domain Shader expects Control Point count of %d.
When using tessellation, the primitive topology type must be D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH
When using tesselation, both the Hull Shader and Domain Shader must be set.  Otherwise, both must be NULL.
When using amplification shader, the mesh shader must be set as well.
Mismatched Tessellator Domain. Current Hull Shader declares %s domain, but Domain Shader declares %s domain.
IsoLine
When ForcedSampleCount RasterizerState is > 0 (%d specified), a DepthStencilView cannot be bound. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), Depth and Stencil must be disabled in the DepthStencil state. Rendering results are undefined across different hardware. 
Rasterizer State MultisampleEnable cannot be set to TRUE when drawing lines to a RenderTarget or DepthStencil that has a CENTER multisample pattern and more than one sample.
Pixel Shader with sample-frequency execution cannot be used with RenderTarget or DepthStencil that has a CENTER multisample pattern and more than one sample.
Mismatched topology. The Rasterization Unit has Conservative Rasterization enabled (D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON is set), and primtive type at the Rasterizer is not compatibile (only triangles are compatible). The last stage before the Rasterizer (%s) sets the following primitive type: %s
When ForcedSampleCount RasterizerState is > 1 (%d specified), any RenderTargetViews bound must have sample count 1 (%d specified) and quality level 0 or D3D11_STANDARD_MULTISAMPLE_PATTERN or D3D11_CENTER_MULTISAMPLE_PATTERN (%d specified). Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), the Pixel Shader cannot be configured to execute at sample-frequency. Rendering results are undefined across different hardware. 
When ForcedSampleCount RasterizerState is > 0 (%d specified), the Pixel Shader cannot output depth. Rendering results are undefined across different hardware. 
Failed to determine format support for format %d
Dual Source Blending (use of D3D12_BLEND_SRC1_COLOR, D3D12_BLEND_INV_SRC1_COLOR, D3D12_BLEND_SRC1_ALPHA or D3D12_BLEND_INV_SRC1_ALPHA in the Blend Desc) means only a single RenderTarget may be bound and must be a slot 0. The PSO description indicates that there will be a RenderTarget bound to slot %d
SV_Depth
Pixel Shader is using SV_InnerCoverage system value while the Rasterization Unit has Conservative Rasterization disabled (D3D12_CONSERVATIVE_RASTERIZATION_MODE_OFF is set). SV_InnerCoverage is only valid with Conservative Rasterization enabled.
Pixel Shader output '%s%d' has type that is NOT unsigned int, while the corresponding Output Merger RenderTarget slot [%d] has logic op enabled.  This happens to be well defined: the raw bits output from the shader will simply be interpreted as UINT bits in the blender without any data conversion.  This warning is to check that the application developer really intended to rely on this behavior.
The render target format at slot %d is format (%s).  This format does not support logic ops. The Pixel Shader output signature indicates this output could be written, and the Blend State indicates logic op is enabled for this slot.
Pixel Shader output '%s%d' has type that is NOT float, while the corresponding Output Merger RenderTarget slot [%d] has blending enabled.  This happens to be well defined: the raw bits output from the shader will simply be interpreted as float bits in the blender without any data conversion.  This warning is to check that the application developer really intended to rely on this behavior.
The render target format at slot %d is (%s).  this format does not support blending. The Pixel Shader output signature indicates this output could be written, and the Blend State indicates blending is enabled for this slot.
Pixel Shader output '%s%d' has signed integer type, while the corresponding RenderTarget slot [%d] has component(s) of some other type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has unsigned integer type, while the corresponding RenderTarget slot [%d] has component(s) of some other type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' has float type, while the corresponding RenderTarget slot [%d] has format (%s) with component(s) of signed or unsigned integer type.  This happens to be well defined: the raw bits output from the shader starting from the least significant bit will simply be dumped to the output storage without any data conversion. This warning is to check that the application developer really intended to rely on this behavior.
Pixel Shader output '%s%d' is writing to %d components, while the corresponding RenderTarget slot [%d] has format (%s) with %d component(s). This results in undefined contents in the unwritten channels of the render target.
The declared input primitive type in the current Geometry Shader does not match the input topology.
The declared input primitive type in the current Geometry Shader does not match the current Tessellator output topology (defined by the Hull Shader).
The depth stencil unit or pixel shader expects a Depth Stencil View, but the PSO indicates that none will be bound. This is OK, as reads of an unbound Depth Stencil View are defined to return 0; and writes are discarded. It is also possible the developer knows the data will not be used anyway. This is only a problem if the developer actually intended to bind a Depth Stencil View here.
The Pixel Shader expects a Render Target View bound to slot %d, but the PSO indicates that none will be bound. This is OK, as writes of an unbound Render Target View are discarded. It is also possible the developer knows the data will not be used anyway. This is only a problem if the developer actually intended to bind a Render Target View here.
The specified sample count or quality is not supported with the render target format in slot %u
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but the input topology type is patch.  You need either a Hull Shader and Domain Shader, or a Geometry Shader.
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but Patch Control Points are output from the Geometry Shader.
Rasterization Unit is enabled (PixelShader is not NULL or Depth/Stencil test is enabled and RasterizedStream is not D3D12_SO_NO_RASTERIZED_STREAM) but position is not provided by the last shader before the Rasterization Unit.
Mesh shader stage validation metadata required for PSOs used with view instancing is missing or invalid.
The specified RasterizedStream (%u) is not output by the GS.  If there is a GS, then RasterizedStream must be one of the streams emmitted by the GS. Otherwise RasterizedStream must be 0 or D3D12_SO_NO_RASTERIZED_STREAM.
No render target or depth-stencil formats are specified.  Sample count must be 0 or 1, sample quality must be 0.
The specified sample count or quality is not supported with the specified depth-stencil format
triangle
The output size of the mesh shader exceeds the limit when per-view attributes are expanded. The total size needed for all vertex attributes (%d) times the number of vertices aligned to 32 (%d) plus the total size needed for all primitive attributes (%d) times the number of primitives aligned to 32 (%d), is currently (%d) but must not exceed 32,768
There are %d bytes of groupshared allocated, and %d of those are multiplied across %d views, there are a total of %d bytes of groupshared allocated, which exceeds the limit of %d
The output size of the Amplification shader (%d) doesn't match the input payload size for the mesh shader (%d).
The output size of the mesh shader exceeds the limit when per-view attributes are expanded. The total size needed for all vertex and primitive attributes (%d)plus the total amplification shader payload size (%d), is currently (%d) but must not exceed 48,128
Amplification shader stage validation metadata required for PSOs used with view instancing is missing or invalid.
Since the mesh shader specifies output topology of %s, if the PSO desc ALSO specifies a primitive topology (even though not necessary to do), it must be %s to match the mesh shader.  Since the topologies don't match, behavior is undefined.  Earlier runtimes didn't validate this, so this error isn't explicitly failing PSO create.  But this really should be considered an application error.
D3D12: SetStablePowerState is only available when the D3D SDK layers are installed.
Query count must be greater than 0.
Invalid query heap type.
Root parameter index (%u) exceeds number of parameters (%u) in the root signature.
Root parameter {slots, offset} must be increasing.
SetStablePowerState
D3D12: SetStablePowerState is only available when developer mode is enabled.
Root parameter slot (%u) is of the wrong parameter type.  Expected %s.
Root parameter slot (%u) was declared to hold (%u) constants.  The command signature expects a minimum size of (%u).
Overflow added Num32BitValuesToSet (%u) to DestOffsetIn32BitValues (%u)
Root parameter slot (%u) was not declared to hold constants.
A command signature must contain 1 Draw/Dispatch/DispatchMesh/DispatchRay command.
Unexpected parameter type.
D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH_RAYS can't be used in a command signature unless the device supports D3D12_RAYTRACING_TIER_1_1+.
A command signature must contain exactly 1 Draw/Dispatch/DispatchMesh/DispatchRays command.  That command must come last.
Vertex buffer changes are disallowed when the command signature contains a parameter of type D3D12_INDIRECT_ARGUMENT_TYPE_DISPATCH/DISPATCH_RAYS.
Index buffer cannot be defined more than once.
Index buffer changes are only allowed when the command signature contains a parameter of type D3D12_INDIRECT_ARGUMENT_TYPE_DRAW_INDEXED.
A root signature should be specified if and only if the command signature indicates that root arguments will be changed.
constant buffer view
Root constant changes must change at least 1 value.
Vertex buffer slot %u is defined more than once.
Invalid vertex buffer slot.
Command signature byte stride (%u bytes) is not large enough.  Required size is (%u bytes).
Command signature byte stride must be a multiple of 4 bytes.
unordered access view
shader resource view
Only Committed Resources, Heaps, Fences, or Protected Sessions can have a shared handle. pObject points to none of these DeviceChild types.
pHandle cannot be NULL.
pObject cannot be NULL.
Command signature byte stride (%u bytes) must be a multiple of 4.
NtQueryObject
pObject points to a resource that is not a committed resource. Only committed resources can have a shared handle.
pObject points to a fence that was not created with the D3D12_FENCE_FLAG_SHARED flag.
pObject points to a committed resource or a heap that was not created with the D3D12_HEAP_FLAG_SHARED flag.
DxgkSharedSyncObject
DxgkSharedProtectedSessionObject
ExtractBundleObject
DxgkSharedBundleObject
WaitForSynchronizationObjectFromGpu
WaitForSynchronizationObjectFromCpu
MakeResident/ReclaimResources failed with E_PENDING, but WaitMask was set to 0.
DxgkSharedResource
Content Protection Streaming GetCaps failed due to out of memory.
Invalid Content Protection Resources options reported, using default
Content Protection Resources GetCaps failed due to out of memory.
SignalSynchronizationObjectFromGpu2
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPE_COUNT.
Invalid flags reported in D3D12DDICAPS_TYPE_0030_PROTECTED_RESOURCE_SESSION_SUPPORT::Support.
Failed GetCaps for D3D12DDICAPS_TYPE_0030_PROTECTED_RESOURCE_SESSION_SUPPORT.
Invalid Content Protection Streaming options reported, using default
GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES must return at least D3D12DDI_PROTECTED_RESOURCES_SESSION_HARDWARE_PROTECTED when D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED is reported.
GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES returned an unsupported GUID.
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPES.
Failed GetCaps for D3D12DDICAPS_TYPE_0074_PROTECTED_RESOURCE_SESSION_TYPE_COUNT reported zero types when driver previously reported D3D12_PROTECTED_RESOURCE_SESSION_SUPPORT_FLAG_SUPPORTED.
Object provided does not have a non-NT shared handle.
Resource provided was not shared by D3D11, or with a D3D11 desc.
Object provided was not a resource.
SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock
AllowDevelopmentWithoutDevLicense
D3D12: DeveloperMode disabled while device running in a mode that expected it to be on.
Object provided is not shared.
neither VS, CS nor MS specified
both VS and CS specified
PFND3D12DDI_GET_SUPPORTED_EXTENDED_FEATURES_0020 returned an invalid D3D12DDI_FEATURE_0020.
SOFTWARE\Policies\Microsoft\Windows\Appx
No Root Signature found in the pipeline desc or in any bound Shader bytecode
Compute ShaderAmplification Shader
both MS and VS, HS, DS, GS, or CS specified
AS specified without MS
MS specified with StreamOutput
Graphics pipeline state object uses input-assembler, but the root signature does not have the D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT flag set
MS is not compatible with legacy Input Layout
Root signature of %s doesn't match the root signature of %s
D3D12 Device Removed Extended Data
ext-ms-win-wer-reporting-l1-1-0
Graphics pipeline state mixes shader model 6.0 or above with 5.1 or below.
Graphics pipeline state object uses stream-output, but the root signature does not have the D3D12_ROOT_SIGNATURE_FLAG_ALLOW_STREAM_OUTPUT flag set
VEN_%04X
D3DDRED2
d3ddredDataPresent
GpuManufacturer
0x%08X
%d.%d.%d.%d
AppName
DeviceExecutionState
DeviceRemovedReason
GpuDriverVersion
CreateGpuSynchronizationContext
AppVer
%u.%u.%u.%u
Unknown
pObject points to a committed resource or a heap that is protected or has a keyed mutex. This is not supported when sharing to the host.
Only Committed Resources, Heaps, or Fences can have be shared to the host. pObject points to none of these DeviceChild types.
Render Pass DDI table retrieval failed.
Render Pass DDI table retrieval failed due to out of memory.
When ID3D12CompatibilityDevice::CreateSharedResource is invoked, the heap flags must contain D3D12_HEAP_MISC_SHARED.
CreateKeyedMutexFence
CreateKeyedMutex
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, the NT handle flag may not be set in the D3D11 flags if a non-NT handle is requested.
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, the keyed mutex property must match between the D3D11 flags and D3D12 compatibility flags.
Invalid compatibility flags provided to ID3D12CompatibilityDevice::CreateSharedResource.
When ID3D12CompatibilityDevice::CreateSharedResource is invoked with heap flags containing D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER, no compatibility shared flags may be used.
Invalid format specified (%s) for sharing with D3D11. To check if a format is valid, query a D3D11 device for D3D11_FORMAT_SUPPORT2_SHAREABLE.
D3D11 CPU access flags (0x%x) were provided to ID3D12CompatibilityDevice::CreateSharedResource which are not supported by the D3D12 heap properties.
D3D11 bind flags (0x%x) were provided to ID3D12CompatibilityDevice::CreateSharedResource which are not supported by the D3D12 resource desc.
When D3D11 flags are passed to ID3D12CompatibilityDevice::CreateSharedResource, they must contain either D3D11_RESOURCE_MISC_SHARED or D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource layout must be D3D12_TEXTURE_LAYOUT_ROW_MAJOR.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource dimension must be D3D12_RESOURCE_DIMENSION_TEXTURE2D.
pResourceDesc is NULL!
The resource doesn't fit onto the heap at the HeapOffset. The resource size is %I64u. The heap size is %I64u. The HeapOffset is %I64u.
pHeap is NULL!
When D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS is set in CreateCommittedResource, the resource flags must contain D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS. Otherwise, it suggests a waste of a constrained system resource.
When D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER is set in CreateCommittedResource, the resource format must be displayable (D3D12_FORMAT_SUPPORT1_DISPLAY).  To use other formats, use CreatePlacedResource instead.
D3D12_RESOURCE_DESC::Layout must be D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE when creating reserved resources.
D3D12_RESOURCE_DESC::Dimension cannot be D3D12_RESOURCE_DIMENSION_TEXTURE1D when creating reserved resources.
Reserved resources cannot be created on a device that does not support tiled resources. CheckFeatureLevel with D3D12_FEATURE_D3D12_OPTIONS indicates D3D12_FEATURE_DATA_D3D12_OPTIONS::TiledResourcesTier is %s.
OpenAdapter12
LoadUMD
Driver update in progress.
EnableDriverVerifier
D3DDriverVerifier
InstanceThunks
QAI (CHECKDRIVERUPDATESTATUS)
OpenAdapterFromLuid
QAI (UMDRIVERNAME)
QueryAdapterInfoCb2 (DriverPrivate)
QueryAdapterInfoCb2 (Registry)
GetMultisampleMethodList
CreateHwQueue
InitD3DDriverVerifier2
User/kernel-mode driver mismatch
QueryAdapterInfoCb
QueryAdapterInfoCb2 (Unknown)
DestroyDevice
Escape
DestroyAllocation2 - StandardAllocation
CreateAllocation2 - StandardAllocation
DestroyHwQueue
SignalSynchronizationObjectFromCpu
CreateDevice
pfnCreateDevice
Removing device due to driver error.
Device hung. See g_D3D12PageFaultState.
Device hung.
Device reset.
SetQueuedLimit
QueryAdapterInfo (IsXbox)
Removing device.
Removing device due to driver-reported app error.
ShareObjects
OpenNtHandleFromName
OpenSyncObjectNtHandleFromName
QueryResourceInfoFromNtHandle
Device stopped.
Kernel memory failure. Device reset.
Kernel memory failure. There might be a memory leak.
Failed to produce DRED Watson dump
DestroySynchronizationObject
Reserved flags given to AllocateCb
Reserved fields in D3D12DDI_ALLOCATION_INFO_0022 were not zero.
CreateAllocation2
QueryResourceInfo
OpenResourceNtHandle
OpenResource
DestroyAllocation
QueryAllocationResidency
Reserved flags given to RenderCb
D3DDDICB_RENDER::BroadcastContext array must contain contexts that are all associated with the same command queue.
D3DDDICB_RENDER::BroadcastContext array may not contain contexts that belong to a scheduling group.
GetAllocationPriority
Allocation append failed. Resource handle likely stale.
DestroyAllocation2
SetAllocationPriority
Reserved flags given to EscapeCb
Driver couldn't change frame latency
Reserved flags given to CreateContextCb
Render
Reserved flags given to LockCb
Unlock
Reserved flags given to CreateHwQueueCB
Driver is not allowed to create a global Hw queue for a context which is owned by a command queue or scheduling group.
Device DestroyHwQueueCB called with command queue context/HwQueue.
Reserved flags given to SubmitCommandToHwQueueCb
CreateSynchronizationObject
Reserved flags given to CreateSynchronizationObject2Cb
CreateSynchronizationObject2
Device DestroyContextCb called with queue context.
WaitForSynchronizationObject2
Reserved flags given to SignalSynchronizationObjectCb
SignalSynchronizationObject
Reserved flags given to SignalSynchronizationObject2Cb
SubmitCommandToHwQueue
SubmitWaitForSyncObjectsToHwQueue
SubmitSignalSyncObjectsToHwQueue
WaitForSynchronizationObject
PFND3D12DDI_CREATE_PROTECTED_SESSION_CB_0030 called more than once for hRTProtectedSession.
CreateProtectedSession
PinResources
UnpinResources
SignalSynchronizationObject2
SetDisplayPrivateDriverFormat
OfferAllocations
ReclaimAllocations2
InvalidateCache
MapGpuVirtualAddress
ReserveGpuVirtualAddress
FreeVirtualAddress
SignalSynchronizationObjectFromGpu
DestroyPagingQueue
Lock2
Unlock2
D3DDDICB_SUBMITCOMMAND::NumPrimaries is too large. Only half the available array may be used by driver.
SubmitCommand
UpdateAllocationProperty
Driver does not have OpenAdapter entrypoint
UpdateVirtualAddress
D3DDDICB_SUBMITCOMMAND::BroadcastContextCount is too large.
D3DDDICB_SUBMITCOMMAND::BroadcastContext array must contain contexts that are all associated with the same command queue.
D3DDDICB_SUBMITCOMMAND::BroadcastContext array may not contain contexts that belong to a scheduling group.
>list too long
CreateContextVirtual
Evict
MakeResident
CreateContext
Pass experiment DDI table retrieval failed due to out of memory.
Pass experiment DDI table retrieval failed.
Node mask mismatch between graphics root signature and command list.
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_SUPPORT returned invalid configuration flags
Invalid D3D12DDI_VIDEO_DECODE_SUPPORT_FLAG reported by driver.
Invalid D3D12DDI_VIDEO_DECODE_CONFIGURATION_FLAG reported by driver.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM returned invalid D3D12DDI_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS_0041.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a BinCount >= 64.
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_SUPPORT returned invalid tier
Driver reported an invalid D3D12DDI_VIDEO_DECODE_TIER.
Driver reported Support for a DecodeTier > D3D12DDI_VIDEO_DECODE_TIER_0020_1, but that support is not enabled.
Driver reported Support for a DecodeTier > D3D12DDI_VIDEO_DECODE_TIER_0020_2, but that support is not enabled.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid D3D12DDI_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS_0053.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid supported size range.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned values indicating no support, but did not set all values to indicate no support.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR_SIZE returned zero for both MotionVectorHeapMemoryPoolL0Size and MotionVectorHeapMemoryPoolL1Size.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a Pow2 BinCount.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM must report a CounterBitDepth of 16, 24, or 32.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0041_DECODE_HISTOGRAM.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_MOTION_ESTIMATOR returned invalid D3D12DDI_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS_0053.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned an invalid D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned an invalid D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS must set Read or Write Flags for D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_0063_RESOURCE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS reported a Resource parameter type for the CAPS_INPUT, CAPS_OUTPUT, or DEVICE_EXECUTE_OUTPUT stage.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETER_COUNT must not fail for a supported Command ID.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETER_COUNT must have ParameterPacking of 1, 2, 4, or 8. 
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned a failure for a parameter set it claimed to support.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS returned a nullptr for a parameter name.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_PROFILE_LEVEL_DATA_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_LEVEL_SETTING_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_OUTPUT_RESOLUTION_RATIOS_COUNT_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_OUTPUT_RESOLUTION_DATA_0080_2.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_PARAMETERS must set None Flags for parameters whose type is not D3D12DDI_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_0063_RESOURCE.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_CAPS returned an invalid failure code.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_SIZE returned an invalid failure code.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_DATA_0080.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_DATA_0083_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0083_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0082_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_INPUT_FORMAT_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_RATE_CONTROL_MODE_DATA_0080.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_INTRA_REFRESH_MODE_DATA_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_DATA_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_PROFILE_DESC.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_LEVEL_SETTING.
Driver reported D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAG_0080_GENERAL_SUPPORT_OK set and D3D12DDI_VIDEO_ENCODER_VALIDATION_FLAG_0080_RATE_CONTROL_CONFIGURATION_NOT_SUPPORTED off.
 but there are required rate control configurations active that are reported as no supported in the SupportFlags
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_DATA_0080_2.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA.
Driver reported an invalid D3D12_VIDEO_ENCODER_VALIDATION_FLAGS.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS_0080.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0080_ENCODER_RESOURCE_REQUIREMENTS.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_HEAP_SIZE_DATA_0080_2.
Video GetCaps failed due to out of memory.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA_0082_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_SUPPORT_FLAGS_0082_0.
Driver reported an invalid D3D12DDI_VIDEO_ENCODER_PROFILE_DESC_0080_2.
Failed GetCaps for D3D12DDICAPS_VIDEO_ENCODER_SUPPORT_DATA_LATEST.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported more than one D3D12DDI_COMMAND_QUEUE_FLAG.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported a non-Video D3D12DDI_COMMAND_QUEUE_FLAG.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported CommandQueueFlags that do not match the registered CommandQueueFlags.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0053_FEATURE_AREA_SUPPORT.
Invalid Video options reported, using default
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMAND_COUNT.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS.
One of the COMMAND_INFO returned from D3D12DDICAPS_TYPE_VIDEO_0063_EXTENSION_COMMANDS reported GUID_NULL.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_PROFILE_COUNT.
PFND3D12DDI_VIDEO_GET_DECODE_PROFILE_COUNT_0020 returned no supported profiles.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_PROFILES.
D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_PROFILES reported an unsupported profile GUID.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_PROCESS_PROTECTED_RESOURCES.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_PROCESS_PROTECTED_RESOURCES returned invalid support flags.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_MOTION_ESTIMATOR_PROTECTED_RESOURCES.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_MOTION_ESTIMATOR_PROTECTED_RESOURCES returned invalid support flags.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 reported an unrecognized bitstream encryption.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 must report support for at least D3D12_VIDEO_DECODE_BITSTREAM_ENCRYPTION_NONE.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_PROFILE_FORMAT_COUNT.
PFND3D12DDI_VIDEO_GET_DECODE_FORMAT_COUNT_0020 must report at least one format for supported decode profile and encryption guid pairs when using D3D12_VIDEO_FRAME_CODED_INTERLACE_FORMAT_NONE .
Failure when retrieving D3D12DDICAPS_TYPE_VIDEO_0020_PROCESS_MAX_INPUT_STREAMS.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0032_DECODE_BITSTREAM_ENCRYPTION_SCHEME_COUNT.
PFND3D12DDI_VIDEO_GET_BITSTREAM_ENCRYPTION_SCHEME_COUNT_0020 reported zero bitstream encryption schemes.  It must support at least D3D12_VIDEO_DECODE_BITSTREAM_ENCRYPTION_NONE.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_BITSTREAM_ENCRYPTION_SCHEMES.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_FORMATS.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0020_DECODE_FORMATS reported a format that doesn't support video.
Failed GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_DECODE_PROTECTED_RESOURCES.
GetCaps for D3D12DDICAPS_TYPE_VIDEO_0072_DECODE_PROTECTED_RESOURCES returned invalid support flags.
CDevice::CreateVideoEncoder arguments are not correct Invalid encoder flags: %d Invalid maximum ME precision: %d Invalid codec: %d Invalid profile: %d Invalid codec configuration: %d Invalid input format: %d
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Direct mode temporal not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Constrained intraprediction not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Adaptive 8x8 transform not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - CABAC encoding not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Call to CheckFeatureCaps (D3D12_FEATURE_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT, ...) returned failure or not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments not supported - DisableDeblockingFilterConfig (value: %d) has to be within defined range.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments not supported - DisableDeblockingFilterConfig (value %d) not allowed by DisableDeblockingFilterSupportedModes 0x%x cap reporting.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Direct mode spatial not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Asymetric motion partition not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Asymetric motion partition is required to be set.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Transform skipping is not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Constrained intra-prediction use is not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Call to CheckFeatureCaps (D3D12_FEATURE_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT, ...) returned failure or not supported for Codec HEVC -  MinLumaSize %d - MaxLumaSize %d -  MinTransformSize %d - MaxTransformSize %d - Depth_inter %d - Depth intra %d
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Disable deblocking across slice boundary mode not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - Intra slice constrained mode not supported.
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION arguments are not supported - SAO Filter mode not supported.
D3D12_VIDEO_ENCODER_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT,...) for the given input returned failure or not supported.
The specified video extension command id is not supported.  See  D3D12_FEATURE_VIDEO_EXTENSION_COMMANDS.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::SizeRange is invalid. SizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s) is not supported with Motion Estimation.  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::BlockSize(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::Precision(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
CheckFeatureSupport Failed
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::SizeRange is invalid. SizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s) is not supported with Motion Estimation.  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::BlockSize(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::Precision(%u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::SizeRange(%u, %u, %u, %u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
Motion Vector Heap creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
Video Decoder creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
D3D12_VIDEO_MOTION_ESTIMATOR_DESC::SizeRange(%u, %u, %u, %u) is not supported with Motion Estimation for D3D12_VIDEO_MOTION_ESTIMATOR_DESC::NodeMask(0x%x) or D3D12_VIDEO_MOTION_ESTIMATOR_DESC::InputFormat(%s).  See D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR.
Motion Estimator creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not correct Invalid heap flags: %d Invalid codec: %d Invalid profile: %d Invalid level: %d Invalid resolution count: %d Invalid resolution list: %d
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or level not supported.
D3D12_VIDEO_ENCODER_HEAP_DESC arguments are not supported - pResolutionList contains resolutions that do not satisfy the constraints specified in CheckFeatureSupport - D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
The data size of the structure passed in D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION.pH264Config. does not match the expected size of D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264 Expected size: %d Received size: %d
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264 structure arguments are not valid.
The data size of the structure passed in D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION.pHEVCConfig. does not match the expected size of D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC Expected size: %d Received size: %d
D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC structure arguments are not valid.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.Flags must be a valid combination of D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAGS values.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CQP cannot be null.
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CQP. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP Expected size: %d Received size: %d
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.Mode must be a valid value of D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE.
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_QVBR cannot be null.
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_QVBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR Expected size: %d Received size: %d
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CBR cannot be null.
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_CBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR Expected size: %d Received size: %d
The value in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_VBR cannot be null.
The data size of the structure passed in D3D12_VIDEO_ENCODER_RATE_CONTROL.ConfigParams.pConfiguration_VBR. does not match the expected size of D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR Expected size: %d Received size: %d
Video Processor creation args D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC::DestinationSizeRange is invalid for input stream index %d.
Use ID3D12VideoDevice::CheckFeatureSupport to query for D3D12_FEATURE_VIDEO_PROCESS_SUPPORT to check for support.
Video Processor creation args failed.  %s  hr = 0x%x
Video processor creation args specified zero inputs in NumInputStreams.
Video Processor creation args D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC::SourceSizeRange is invalid for input stream %d.
Video processor creation args for input stream index %d requested an output size range that is not supported by the driver. %s
Video processor creation args requestion an AlphaFillMode that is not supported by driver.. %s  If the driver does not reportD3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_FILL, AlphaFillMode must be D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_OPAQUE.
Video processor creation args for input stream index %d requested luma key, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_LUMA_KEY.
Video processor creation args are not supported.  %s
Video processor creation args for input stream index %d indicate a DeinterlaceMode that is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS.
Video processor creation args for input stream index %d set EnableAutoProcessing to TRUE, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS.
Use D3D12_FEATURE_VIDEO_PROCESS_REFERENCE_INFO to check for support.
Video Processor creation args failed .  %s  hr = 0x%x
Video processor creation args for input stream index %d requested an unsupported stero format.  %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_STEREO.
Video processor creation args for input stream index %d requested orientation support and that is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_ROTATION and D3D12_VIDEO_PROCESS_FEATURE_FLAG_FLIP.
Video processor creation args for input stream index %d set EnableAlphaBlending, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_BLENDING.
Video processor creation args for input stream index %d SourceAspectRatio != DestinationAspectRatio, but this feature is not supported by the driver. %s  See D3D12_VIDEO_PROCESS_FEATURE_FLAG_PIXEL_ASPECT_RATIO.
Decoder heap creation args failed ID3D12VideoDevice::CheckFeatureSupport for D3D12_FEATURE_VIDEO_DECODE_SUPPORT. hr = 0x%x
Video Processor creation args specified a number of past frames or future frames that does not match driver requirements for these features.  %s  hr = 0x%x
Video Processor creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_PROCESS_PROTECTED_RESOURCES indicates protected resources are not supported.
Decoder heap creation args are not supported.  Use ID3D12VideoDevice::CheckFeatureSupport to query for D3D12_FEATURE_VIDEO_DECODE_SUPPORT to check for support.
Video Decoder Heap creation args specified a non-nullptr ID3D12ProtectedResourceSession, but the D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES indicates protected resources are not supported. hr = 0x%x
Invalid InputSample dimensions specified.  Width cannot be 0 or exceed %d.  Height cannot be 0 or exceed %d.  InputSample.Width = %d, InputSample.Height = %d
Invalid OutputStereoFormat specified.  Enum value %d is not a valid D3D12_VIDEO_FRAME_STEREO_FORMAT.
Invalid InputSample ColorSpace specified.  Enum value %d is not a valid DXGI_COLOR_SPACE.
Invalid InputFieldType specified.  Enum value %d is not a valid D3D12_VIDEO_FIELD_TYPE.
Invalid InputStereoFormat specified.  Enum value %d is not a valid D3D12_VIDEO_FRAME_STEREO_FORMAT.
Invalid OutputFormat ColorSpace specified.  Enum value %d is not a valid DXGI_COLOR_SPACE.
Unsupported Decode Profile Specified.  Use ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_PROFILES to retrieve a list of supported profiles.
Unsupported BitstreamEncryption value specified.
Invalid InterlaceType specified.
Unsupported DecodeFormat Specified.  Use ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_FORMATS to discovert the list of supported profiles for a given D3D12_VIDEO_DECODE_CONFIGURATION.
Invalid decoder dimensions specified.
GetTrackedWorkloadStatistics
ResetTrackedWorkloadStatistics
UpdateTrackedWorkload
GetAvailableTrackedWorkloadIndex
Timestamp Readback Buffer
Tracked Workload Fence
CreateTrackedWorkload
DestroyTrackedWorkload
D3D12CoreAutoBreadcrumbsHeap
D3D12CoreAutoBreadcrumbsBuffer
dBBigabigabiga
CreateContextCb or CreateContextVirtualCb called outside of queue creation.
Driver targeted HwQueue against context belonging to different queue.
SubmitPresentToHwQueue
Driver provided too many contexts for present.
AcquireKeyedMutex
ReleaseKeyedMutex
Driver targeted HwQueue against scheduling group that this command queue does not belong to.
Cannot mix HwQueue scheduling with context scheduling. This command queue does not own the HwQueue's requested context, but owns software contexts.
QueryClockCalibration
Driver didn't provide any HwQueues for a hardware scheduling command queue present.
Bundle
Image
Video Decode
Video Process
Unnamed ID3D12CommandQueue: Type=
Direct
Compute
Cannot mix HwQueue scheduling with context scheduling. This command queue owns HwQueues without owning their contexts, and cannot accept a software context.
Video Encode
SetContextSchedulingPriority
SetContextInProcessSchedulingPriority
Reserved flags given to CreateContextCb or CreateContextVirtualCb
A bundle cannot be passed to ExecuteCommandLists.
Command lists must have matching type to queue.
Command lists must be closed before execution.
Command lists must be successfully closed before execution.
Node mask mismatch between command list and command queue.
Up to %d swapchains can be written to by a single ExecuteCommandLists call. 
UpdateTileMappings
CopyTileMappings
UpdateTileMappings does not work with cross-adapter shared heaps. 
Removing Command List: %s
Driver set pfnCopyTiles to NULL.
Driver set pfnCopyBufferRegion to NULL.
Driver didn't call pfnSetCommandListDDITableCb or called it with invalid D3D12DDI_HRTTABLE at command list creation, defaulting to stubbed DDIs.
Unnamed ID3D12GraphicsCommandList: Type=
Contexts for scheduling groups must be hardware scheduled.
OpenProtectedSessionFromNtHandle
deque<T> too long
invalid string position
Unnamed ID3D12PipelineState: 
NumDescriptors=
Unnamed ID3D12DescriptorHeap: Type=
CBV_SRV_UAV
Sampler
Access parameter must be GENERIC_ALL.
CreateBundleObject
OpenSyncObjectFromNtHandle2
DestroyProtectedSession
QueryProtectedSessionStatus
Invalid SlopeScaledDepthBias value: %f
Invalid DepthBiasClamp value: %f
, 1, 4, 8, 16
When MultisampleEnable is TRUE (controlling antialiased line algorithm, despite the misleading name), and the Feature Level is less than D3D_FEATURE_LEVEL_11_1, ForcedSampleCount cannot be 1
CullMode has an unrecognized value.
FillMode has an unrecognized value.
Unrecognized D3D12_CONSERVATIVE_RASTERIZATION_MODE specified in pRasterizerDesc: ConservativeRaster = %d.
FillMode must be D3D12_FILL_MODE_SOLID when ConservativeRaster is D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON: FillMode = D3D12_FILL_MODE_WIREFRAME, ConservativeRaster = D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON.
DepthFunc has an unrecognized value.
DepthWriteMask has an unrecognized value.
, 1, 4, 8
Device does not support Conservative Rasterization (pRasterizerDesc specifies D3D12_CONSERVATIVE_RASTERIZATION_MODE_ON).
Invalid ForcedSampleCount value: %d.  Valid value(s) on this device: 0%s.
BackFace.StencilDepthFailOp has an unrecognized value.
BackFace.StencilFailOp has an unrecognized value.
BackFace.StencilFunc has an unrecognized value.
BackFace.StencilPassOp has an unrecognized value.
FrontFace.StencilDepthFailOp has an unrecognized value.
FrontFace.StencilFailOp has an unrecognized value.
FrontFace.StencilFunc has an unrecognized value.
FrontFace.StencilPassOp has an unrecognized value.
DestBlend[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
SrcBlend[ %d ] does not equal SrcBlend[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
DestBlend[ %d ] does not equal DestBlend[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
DestBlend[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
Alpha blend factor is not supported on this device.
Device does not support the Depth Bounds Test (DepthBoundsTestEnable is set to TRUE). To check for support, check device caps via the CheckFeatureSupport() API
SrcBlend[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
SrcBlend[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
SrcBlendAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
SrcBlendAlpha[ %d ] is trying to use a D3D11_BLEND value (0x%x) that manipulates color, which is invalid.
DestBlendAlpha[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
SrcBlendAlpha[ %d ] does not equal SrcBlendAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
BlendOp[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND_OP.
MIN or MAX are invalid for BlendOp when Dual-Source blending.
SrcBlendAlpha[ %d ] is trying to use a dual source blending operation, value (0x%x), which is not valid for any other render target slot other than 0.
BlendOp[ %d ] does not equal BlendOp[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
BlendOpAlpha[ %d ] does not equal BlendOpAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
BlendOpAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND_OP.
RenderTargetWriteMask[ %d ] can only have the least significant 4 bits set. Value provided is 0x%x.
Dual-source color blending cannot be used when BlendEnable is set for a RenderTarget above 0.Specifically, to use Dual-source color blending, it must only be used on RenderTarget 0 with BlendEnable set only on RenderTarget 0.
DestBlendAlpha[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_BLEND.
DestBlendAlpha[ %d ] is trying to use a D3D11_BLEND value (0x%x) that manipulates color, which is invalid.
MIN or MAX are invalid for BlendOpAlpha when Dual-Source blending.
DestBlendAlpha[ %d ] does not equal DestBlendAlpha[ %d ] and D3D10.1 hardware is not supported. When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, any enabled render target blending must use the same blending configuration.
View instance flags (%u) set to unknown value.
D3D12_VIEW_INSTANCING_DESC can only be used in the pipeline state if the device supports shader model 6.1 or greater.
Device does not support view instancing. View instance count (%u) is greater than 1, but hardware tier is D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED.
Device does not support view instancing. D3D12_VIEW_INSTANCING_FLAG_ENABLE_VIEW_INSTANCE_MASKING is set but hardware tier is D3D12_VIEW_INSTANCING_TIER_NOT_SUPPORTED.
LogicOpEnable and IndependentBlendEnable cannot both be set to true.
LogicOpEnable cannot be set true on the current device.
LogicOp[ %d ] has an unrecognized value (0x%x), which is not a member of D3D11_LOGIC_OP.
LogicOpEnable and BlendEnable cannot both be set to true.
A View of a Buffer cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a Format must be supplied.
The ViewDimension in the View Desc incompatible with the type of the Resource.
The Format (%#x, %s) is invalid, when creating a View; because it is a typeless format
The Format (%#x, %s) cannot be used, when creating a View of a Buffer.
This operation is not supported on a compute only device.
View instance count (%u) is greater than the allowed maximum instance count (%u)
A RenderTargetView cannot be created from a NULL Resource and NULL Desc.
The Format (%#x) is unrecognized.
The resource format (%s) and view format (%s) differ in float vs non-float component interpretation - this type of format casting is not supported.
The Format (%#x, %s) is invalid when creating a View; it is not a fully qualified format within the same family as the Format of the Resource (%#x, %s).
The Format (%#x, %s) is invalid when creating this View; using this format indicates to use the format of the Resource, however the Resource does not have a fully typed format: (%#x, %s).
The Format (%#x, %s) is invalid when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s).
The Format (%#x, %s) cannot be used with a Tiled Resource.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %I64u, inclusively, in order that the View fit on the Buffer. In addition, the NumElements may not be larger than %d for feature level %s.
The view format (%#x, %s) was not specified in the list of castable formats. The resource %s was created with an explicit format cast list
A View cannot be created using a NULL Desc, when the Resource was created with a typeless Format. Default Desc parameters cannot be used, as a fully qualified Format must be supplied.
For the resource format %s, when making a D3D view, the format name for the view can't be %s.  See documentation for the set of valid view format names for this resource format, determining which how the resource (or part of it) will appear to shader.
Views of video formats cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a View format must be supplied, not the same as the underlying video format.The View format is needed to indicate how the video surface (or part of it) will appear to shaders - see documentation.
The video format %s does not support RenderTargetViews. For this format, specifying D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET when the surface created actually only allows the surface to be used for video processor decode output.  For some other video formats (depending on device Feature Level as well), D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET does allow both video processor decode output and RenderTargetView output, but not in this case.
The Plane Slice %d cannot be used when the resource format is %s and the view format is %s.  See documentation for the set of valid view format names for this resource format, determining which how the resource (or part of it) will appear to shader.
The Format (%#x, %s) cannot be used, when creating a View of a Texture1D.
The Format (%#x, %s) is invalid, when creating a View; it is not a fully qualified Format castable from the Format of the Resource (%#x, %s).
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. 
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The base resource was created as a multisample resource.  You must specify D3D12_RTV_DIMENSION_TEXTURE2DMS instead of D3D12_RTV_DIMENSION_TEXTURE2D.
The Dimensions of the View are invalid due to at least one of the following conditions. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Format (%#x, %s) cannot be used, when creating a View of a Texture3D.
The base resource was created as a multisample resource.  You must specify D3D12_RTV_DIMENSION_TEXTURE2DMSARRAYinstead of D3D12_RTV_DIMENSION_TEXTURE2DARRAY.
The view format (%#x, %s) is invalid. The view format and resource format (%#x, %s) must be from the same format family.
The Format (%#x, %s) is invalid when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s), unless the resource is a DXGI swap chain back buffer.
The Format (%#x, %s) cannot be used, when creating a View of a Texture2D.
The PlaneSlice %d is invalid when the resource format is %s and the view format is %s.  Only Plane Slice 0 is valid when creating a view on a non-planar format.
A DepthStencilView cannot be created of a Buffer nor Texture3D Resource.
A DepthStencilView cannot be created from a NULL Resource and NULL Desc.
The base resource was created as a multisample resource.  You must specify D3D11_DSV_DIMENSION_TEXTURE2DMS instead of D3D11_DSV_DIMENSION_TEXTURE2D.
The Dimensions of the View are invalid due to at least one of the following conditions.  FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The format (%#x, %s) cannot be used with a RenderTarget view. 
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %u) must be between 0 and MipLevels-1 of the Texture Resource, %u, inclusively. FirstWSlice (value = %u) must be between 0 and the Depth size of the Mip Level, %u, inclusively. With the current FirstWSlice, WSize (value = %u) must be between 1 and %u, inclusively, or -1 to default to all slices from FirstWSlice, in order that the View fit on the Texture.
A RenderTargetView cannot be created of a Resource that did not specify the RENDER_TARGET MiscFlag.
The format (%#x, %s) cannot be used with a RenderTarget view because this particular graphics implementation doesn't support this format. 
The D3D12_DSV_FLAG_READ_ONLY_DEPTH flag was set in the Flags field. This is not valid, because the format (%#x, %s) does not have a D component.
A non-zero Flags field (%#x) is not valid, unless the GetFeatureLevel returns D3D_FEATURE_LEVEL_11_0 or greater.
Pointer %I64u is incorrectly aligned.  Device requires alignment be a multiple of %u.
The D3D12_DSV_FLAG_READ_ONLY_STENCIL flag was set in the Flags field. This is not valid, because the format (%#x, %s) does not have a S component.
The format (%#x, %s) cannot be used with a DepthStencil view.
The base resource was created as a multisample resource.  You must specify D3D11_DSV_DIMENSION_TEXTURE2DMSARRAYinstead of D3D11_DSV_DIMENSION_TEXTURE2DARRAY.
There were unrecognized flags specified in the DepthStencilView Flags field. The flags value was %#x, while the valid flags are limited to %#x.
A DepthStencilView cannot be created of a Resource that did not specify D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL.
Size of %u exceeds maximum constant buffer view size of %u.
Size of %u is invalid.  Device requires SizeInBytes be a multiple of %u.
D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE invalid on a device that does not support raytracing.
When ViewDimension is D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, pResource must be NULL, since the resource location comes from a GPUVA in pDesc.
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, the address (%I64u) must be aligned to %d bytes.
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, the format must be DXGI_FORMAT_UNKNOWN.
A ShaderResourceView cannot be created from a NULL Resource and NULL Desc.
Shader4ComponentMapping is set to an invalid value.  To create a valid value use the D3D12_ENCODE_SHADER_4_COMPONENT_MAPPING(Src0,Src1,Src2,Src3) macro with a value from the D3D12_SHADER_COMPONENT_MAPPING enum in each entry.  Or, for a default 1:1 component mapping, simply use D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x).
The ViewDimension in the View Desc is incompatible with the type of the Resource.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 do not support typed buffer views.  Only raw and structured buffer views are supported.
Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) for raw buffers.
Invalid Buffer SRV Flags combination: (%#x)
The Format (%#x, %s) is invalid, when creating a View; it is a typeless format
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 only support creating shader resource views on resources created from default heaps.
For D3D12_SRV_DIMENSION_RAYTRACING_ACCELERATION_STRUCTURE, Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) (the field is actually unused).
When creating a RAW Shader Resource View, the offset of the first element from the start of the buffer must be a multiple of %d bytes.  Thus, FirstElement (%d) must be a multiple of %d since each element is 4 bytes.
When creating a RAW Shader Resource View, the format must be DXGI_FORMAT_R32_TYPELESS.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer StructuredByteStride to be 2 or a multiple of 4 (%d specified)
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer FirstElement and NumElements to be a multiple of 2 (0 is allowed) when StructureByteStride is 2, to keep the base address 4 byte aligned. FirstElement=%d and NumElements=%d specified
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture. FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride %d, FirstElement (value = %Id) must be between 0 and the maximum offset of the Buffer, %Id, inclusively. With the current FirstElement, NumElements (value = %Id) must be between 1 and %Id, inclusively, in order that the View fit on the Buffer.
The Format (%#x, %s) is invalid, when creating a View of a Structured Buffer; it must be DXGI_FORMAT_UNKNOWN.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %Id) must be between 0 and the maximum offset of the Buffer, %Id, inclusively. With the current FirstElement, NumElements (value = %Id) must be between 1 and %Id, inclusively, in order that the View fit on the Buffer.
Shader4ComponentMapping must be D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING (%#x) for structured buffers.
When the StructuredByteStride is nonzero, no SRV Flags are allowed.
When GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less, a ShaderResourceView cannot be created for a multisample resource when it is has the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
The base resource was created as a multisample resource. You must specify D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY or D3D12_SRV_DIMENSION_TEXTURE2DMS.
The format (%#x, %s) cannot be used with a ShaderResource view.
The Dimensions of the View are invalid. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, or -1 to default to all mips from MostDetailedMip, inclusively, in order that the View fit on the Texture.
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture. First2DArrayFace (value = %d) must be between 0 and ArraySize-6 of the Texture Resource, %d, inclusively.
The Dimensions of the View are invalid due to at least one of the following conditions. MostDetailedMip (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. With the current MostDetailedMip, MipLevels (value = %d) must be between 1 and %d, inclusively, or -1 to default to all mips from MostDetailedMip, in order that the View fit on the Texture.
Texture cube arrays cannot be created when GetFeatureLevel returns D3D_FEATURE_LEVEL_10_0 or less.
The Format (%#x, %s) cannot be used, when creating a View of a TextureCube.
Counter UAVs require a non-NULL pResource.
Counter resources must be buffers.
CounterOffsetInBytes must be a multiple of D3D12_UAV_COUNTER_PLACEMENT_ALIGNMENT (%u).
Counter UAVs require a non-NULL D3D12_UNORDERED_ACCESS_VIEW_DESC.
An UnorderedAccessView cannot be created from a NULL Resource and NULL Desc.
A ShaderResourceView cannot be created of a Resource that did specify the D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE MiscFlag.
Counter UAVs are only supported on buffers.
The ViewDimension in the View Desc is incompatible with the type of the Resource or View.
When creating a Counter Unordered Access View, the StructureByteStride on the view must be non-zero.
A View of a non-Structured Buffer cannot be created using a NULL Desc. Default Desc parameters cannot be used, as a Format must be supplied.
When creating a RAW Shader Resource View, the offset of the first element from the start of the buffer must be a multiple of %u bytes.  Thus, FirstElement (%I64u) must be a multiple of %u since each element is 4 bytes.
When creating a RAW Unordered Access View, the format must be DXGI_FORMAT_R32_TYPELESS.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 only support creating unordered access views on resources created from default heaps.
CounterOffsetInBytes must not exceed the counter resource size.
Invalid Buffer.Flags. 
When pCounterResource is NULL, D3D12_BUFFER_UAV::CounterOffsetInBytes must be 0
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming StructureByeStride %d, FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %u, inclusively, in order that the View fit on the Buffer.
Devices with feature level D3D_FEATURE_LEVEL_CORE_1_0 require structured buffer FirstElement and NumElements to be a multiple of 2 (0 is allowed) when StructureByteStride is 2, to keep the base address 4 byte aligned. FirstElement=%I64u and NumElements=%u specified
The Dimensions of the View are invalid. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.
The Dimensions of the View are invalid due to at least one of the following conditions. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.  FirstArraySlice (value = %d) must be between 0 and ArraySize-1 of the Texture Resource, %d, inclusively. With the current FirstArraySlice, ArraySize (value = %d) must be between 1 and %d, inclusively, or -1 to default to all slices from FirstArraySlice, in order that the View fit on the Texture.
The Format (%#x, %s) is invalid when creating a typed View; it is a typeless format
The Format (%#x, %s) cannot be used when creating a typed View of a Buffer.
When StructureByteStride is not 0, the UAV Flag D3D12_BUFFER_UAV_FLAG_RAW cannot be specified.
The Dimensions of the View are invalid due to at least one of the following conditions. Assuming this Format (%#x, %s), FirstElement (value = %I64u) must be between 0 and the maximum offset of the Buffer, %I64u, inclusively. With the current FirstElement, NumElements (value = %u) must be between 1 and %u, inclusively, in order that the View fit on the Buffer.
A UnorderedAccessView cannot be created of a Resource that did not specify the D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS Flag.
The format (%#x, %s) cannot be used with a Typed Unordered Access View.  This is because the current graphics implementation does not even support this Format.  Therefore this format does not support Unordered Access Views. Use CheckFormatSupport to check Format support.
There was an attempt to create a sampler feedback UAV on a device with SAMPLER_FEEDBACK_TIER_NOT_SUPPORTED.
A UnorderedAccessView cannot be created with a counter Resource that did not specify the D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS Flag.
The Dimensions of the View are invalid.  MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively.
The Format (%#x, %s) is invalid, when creating a View; the Resource was already created with a fully qualified Format, which is not castable (%#x, %s).
The format (%#x, %s) cannot be used with a Typed Unordered Access View.
The Dimensions of the View are invalid. MipSlice (value = %d) must be between 0 and MipLevels-1 of the Texture Resource, %d, inclusively. FirstWSlice (value = %d) must be between 0 and the Depth size of the Mip Level, %d, inclusively. With the current FirstWSlice, WSize (value = %d) must be between 1 and %d, or -1 to default to all slices from MipSlice, inclusively, in order that the View fit on the Texture.
A NULL pSamplerDesc was specified.
When creating a sampler feedback UAV, the targeted resource depth/array size needs to match the feedback resource depth/array size. Targeted resource DepthOrArraySize: %u, feedback resource DepthOrArraySize: %u.
Filter unrecognized.
MINIMUM or MAXIMUM filters not supported by the device. To see if the device supports this call CheckFeatureSupport with D3D12_FEATURE_D3D12_OPTIONS and check for TiledResourcesTier support of Tier 2+.
When creating a sampler feedback UAV, the targeted resource width needs to match the feedback resource width. Targeted resource width: %u, feedback resource width: %u.
This API requires a valid sampler feedback map format; the passed-in resource has format %s.
When creating a sampler feedback UAV, the targeted resource mip count needs to match the feedback resource mip count. Targeted resource MipLevels: %u, feedback resource MipLevels: %u.
When creating a sampler feedback UAV, the targeted resource height needs to match the feedback resource height. Targeted resource height: %u, feedback resource height: %u.
ComparisonFunc unrecognized.
MaxAnisotropy must be in the range [%d to %d].  %d specified.
MaxLOD be in the range [-INF to +INF].  %f specified.
MinLOD be in the range [-INF to +INF].  %f specified.
AddressV unrecognized.
AddressU unrecognized.
MipLODBias must be in the range [%f to %f].  %f specified.
AddressW unrecognized.
D3D12_DESCRIPTOR_HEAP_DESC.Type set to %d - invalid desciptor heap type. 
D3D12_DESCRIPTOR_HEAP_DESC.Flags cannot include D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE when D3D12_DESCRIPTOR_HEAP_DESC.Type is D3D12_DESCRIPTOR_HEAP_TYPE_RTV or D3D12_DESCRIPTOR_HEAP_TYPE_DSV.
D3D12_RESOURCE_BINDING_TIER_2
D3D12_RESOURCE_BINDING_TIER_1
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, but the limit for shader visible sampler heaps is %d 
D3D12_DESCRIPTOR_HEAP_DESC.Flags - invalid flags, must be 0 or D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE. 
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, device supports D3D12_RESOURCE_BINDING_TIER_2 which limits shader visible descriptor heap size to %d.
D3D12_DESCRIPTOR_HEAP_DESC.NumDescriptors %d, device supports D3D12_RESOURCE_BINDING_TIER_1 which limits shader visible descriptor heap size to %d.
 at the Pixel Shader stage
 at the Geometry Shader stage
 at the Mesh Shader stage
 at the Amplification Shader stage
 at the Vertex Shader stage
D3D12_RESOURCE_BINDING_TIER_3
 at the Domain Shader stage
 at the Hull Shader stage
Samplers
Root Signature flag D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE can only be set on devices that support raytracing.
Root Signature Parameter [%d], Descriptor Table Range [%d], for %s, specifies -1 for NumDescriptors, which means an unbounded array size.  This is not supported for %s on a %s level device.
Root descriptors created at D3D_FEATURE_LEVEL_1_0_CORE must not use sampler descriptor ranges.
Root signatures at D3D_FEATURE_LEVEL_1_0_CORE must not use D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS flag since bounds checking isn't supported.
Root Signature declares %d UAVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature declares %d Samplers total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature declares %d CBVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature size exceeds maximum of %d 32-bit units (with system reserved space for tools enabled - not counting that, applications only have %d available).  Costs in units: Descriptor Tables cost %d each, Root CBVs cost %d each, Root SRVs cost %d each, Root UAVs cost %d each, and Root Constants cost 1 per 32-bit value.
This root signature has %d static sampler(s), but static samplers are not supported in D3D_FEATURE_LEVEL_1_0_CORE.
Root Signature declares %d SRVs total across all parameters%s. This number cannot exceed %d for a %s level device.
Root Signature size exceeds maximum of %d 32-bit units.  Costs in units: Descriptor Tables cost %d each, Root CBVs cost %d each, Root SRVs cost %d each, Root UAVs cost %d each, and Root Constants cost 1 per 32-bit value.
Unnamed Object
(nullptr)
R32G32B32A32_FLOAT
R32G32B32A32_TYPELESS
R32G32B32A32_SINT
R32G32B32A32_UINT
UNKNOWN
R16G16B16A16_FLOAT
R16G16B16A16_TYPELESS
R16G16B16A16_UINT
R16G16B16A16_UNORM
R32G32B32_FLOAT
R32G32B32_TYPELESS
R32G32B32_SINT
R32G32B32_UINT
R32G32_SINT
R32G32_UINT
D32_FLOAT_S8X24_UINT
R32G8X24_TYPELESS
R16G16B16A16_SINT
R16G16B16A16_SNORM
R32G32_FLOAT
R32G32_TYPELESS
R11G11B10_FLOAT
R10G10B10A2_UINT
R8G8B8A8_UNORM
R8G8B8A8_TYPELESS
X32_TYPELESS_G8X24_UINT
R32_FLOAT_X8X24_TYPELESS
R10G10B10A2_UNORM
R10G10B10A2_TYPELESS
R16G16_FLOAT
R16G16_TYPELESS
R16G16_UINT
R16G16_UNORM
R8G8B8A8_UINT
R8G8B8A8_UNORM_SRGB
R8G8B8A8_SINT
R8G8B8A8_SNORM
R32_UINT
R32_FLOAT
R24G8_TYPELESS
R32_SINT
R16G16_SINT
R16G16_SNORM
D32_FLOAT
R32_TYPELESS
R8G8_UINT
R8G8_UNORM
R8G8_SINT
R8G8_SNORM
R24_UNORM_X8_TYPELESS
D24_UNORM_S8_UINT
R8G8_TYPELESS
X24_TYPELESS_G8_UINT
R16_SNORM
R16_UINT
R8_TYPELESS
R16_SINT
R16_FLOAT
R16_TYPELESS
R16_UNORM
D16_UNORM
R1_UNORM
A8_UNORM
R8G8_B8G8_UNORM
R9G9B9E5_SHAREDEXP
R8_UINT
R8_UNORM
R8_SINT
R8_SNORM
BC2_UNORM
BC2_TYPELESS
BC3_TYPELESS
BC2_UNORM_SRGB
BC1_TYPELESS
G8R8_G8B8_UNORM
BC1_UNORM_SRGB
BC1_UNORM
BC5_TYPELESS
BC4_SNORM
BC5_SNORM
BC5_UNORM
BC3_UNORM_SRGB
BC3_UNORM
BC4_UNORM
BC4_TYPELESS
B8G8R8A8_TYPELESS
R10G10B10_XR_BIAS_A2_UNORM
B8G8R8X8_TYPELESS
B8G8R8A8_UNORM_SRGB
B5G5R5A1_UNORM
B5G6R5_UNORM
B8G8R8X8_UNORM
B8G8R8A8_UNORM
BC7_UNORM
BC7_TYPELESS
BC7_UNORM_SRGB
BC6H_TYPELESS
B8G8R8X8_UNORM_SRGB
BC6H_SF16
BC6H_UF16
420_OPAQUE
R10G10B10_7E3_A2_FLOAT
B4G4R4A4_UNORM
B4G4R4X4_UNORM
B5G5R5X1_UNORM
L16_UNORM
L8_UNORM
D16_UNORM_S8_UINT
R10G10B10_6E4_A2_FLOAT
X16_TYPELESS_G8_UINT
R16_UNORM_X8_TYPELESS
B10G10R10A2_UNORM
R10G10B10A2_UNORM_SRGB
L8A8_UNORM
R10G10B10X2_SNORM
R10G10B10X2_UINT
ASTC_5X4_UNORM
ASTC_5X4_TYPELESS
ASTC_5X4_FLOAT
ASTC_5X4_UNORM_SRGB
ASTC_4X4_UNORM
ASTC_4X4_TYPELESS
ASTC_4X4_FLOAT
ASTC_4X4_UNORM_SRGB
ASTC_6X5_UNORM
ASTC_6X5_TYPELESS
ASTC_6X5_FLOAT
ASTC_6X5_UNORM_SRGB
ASTC_5X5_UNORM
ASTC_5X5_TYPELESS
ASTC_5X5_FLOAT
ASTC_5X5_UNORM_SRGB
ASTC_8X5_UNORM
ASTC_8X5_TYPELESS
ASTC_8X5_FLOAT
ASTC_8X5_UNORM_SRGB
ASTC_6X6_UNORM
ASTC_6X6_TYPELESS
ASTC_6X6_FLOAT
ASTC_6X6_UNORM_SRGB
ASTC_8X8_UNORM
ASTC_8X8_TYPELESS
ASTC_8X8_FLOAT
ASTC_8X8_UNORM_SRGB
ASTC_8X6_UNORM
ASTC_8X6_TYPELESS
ASTC_8X6_FLOAT
ASTC_8X6_UNORM_SRGB
ASTC_10X6_UNORM
ASTC_10X6_TYPELESS
ASTC_10X6_FLOAT
ASTC_10X6_UNORM_SRGB
ASTC_10X5_UNORM
ASTC_10X5_TYPELESS
ASTC_10X5_FLOAT
ASTC_10X5_UNORM_SRGB
ASTC_10X10_UNORM
ASTC_10X10_TYPELESS
ASTC_10X10_FLOAT
ASTC_10X10_UNORM_SRGB
ASTC_10X8_UNORM
ASTC_10X8_TYPELESS
ASTC_10X8_FLOAT
ASTC_10X8_UNORM_SRGB
ASTC_12X12_UNORM
ASTC_12X12_TYPELESS
ASTC_12X12_FLOAT
ASTC_12X12_UNORM_SRGB
ASTC_12X10_UNORM
ASTC_12X10_TYPELESS
ASTC_12X10_FLOAT
ASTC_12X10_UNORM_SRGB
SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE
SAMPLER_FEEDBACK_MIN_MIP_OPAQUE
breakc
continue
callc
break
discard
continuec
default
endloop
endif
endswitch
emit_then_cut
deriv_rtx
deriv_rty
label
resinfo
round_ne
sample_b
sample
sample_d
sample_l
round_pi
round_ni
round_z
sincos
sample_c_lz
sample_c
switch
dcl_outputtopology
dcl_inputprimitive
dcl_input_ps
dcl_maxout
dcl_output
dcl_input
dcl_input_ps_sgv
dcl_input_sgv
dcl_output_siv
dcl_input_ps_siv
dcl_temps
dcl_output_sgv
dcl_sampler
dcl_constantbuffer
dcl_input_siv
dcl_resource
gather4
samplepos
emit_stream
dcl_indexrange
dcl_indexableTemp
sampleinfo
dcl_globalFlags
dcl_function_table
dcl_function_body
bufinfo
dcl_interface
emit_then_cut_stream
cut_stream
dcl_stream
fcall
gather4_po
gather4_c
gather4_po_c
deriv_rtx_fine
deriv_rtx_coarse
deriv_rty_fine
deriv_rty_coarse
firstbit_hi
countbits
firstbit_shi
firstbit_lo
f16tof32
f32tof16
usubb
uaddc
hs_decls
swapc
hs_fork_phase
hs_control_point_phase
bfrev
dcl_tessellator_output_primitive
dcl_tessellator_partitioning
dcl_hs_fork_phase_instance_count
dcl_hs_max_tessfactor
dcl_input_control_point_count
hs_join_phase
dcl_tessellator_domain
dcl_output_control_point_count
dcl_tgsm_raw
dcl_uav_structured
dcl_resource_raw
dcl_tgsm_structured
dcl_thread_group
dcl_hs_join_phase_instance_count
dcl_uav_raw
dcl_uav_typed
ld_structured
store_raw
atomic_and
store_structured
ld_uav_typed
dcl_resource_structured
ld_raw
store_uav_typed
atomic_imin
atomic_imax
atomic_umin
atomic_umax
atomic_xor
atomic_or
atomic_iadd
atomic_cmp_store
imm_atomic_xor
imm_atomic_or
imm_atomic_cmp_exch
imm_atomic_exch
imm_atomic_consume
imm_atomic_alloc
imm_atomic_and
imm_atomic_iadd
eval_snapped
eval_centroid
eval_sample_index
imm_atomic_imin
imm_atomic_imax
imm_atomic_umin
imm_atomic_umax
dcl_gsinstances
abort
debug_break
dmovc
gather4_s
ld_uav_typed_s
ldms_s
ld_structured_s
ld_raw_s
gather4_po_s
gather4_c_s
gather4_po_c_s
sample_c_cl_s
sample_d_cl_s
check_access_fully_mapped
sample_c_lz_s
sample_l_s
sample_b_cl_s
sample_cl_s
D3DBehaviors
Software\Microsoft\Direct3D\Direct3D12
NumDescriptors cannot be 0 (descriptor table slot [%u], root parameter [%u]).
Samplers cannot be mixed with other resource types in a descriptor table (root parameter [%u]).
Overflow for shader register range: BaseShaderRegister=%u, NumDescriptor=%u; (descriptor table slot [%u], root parameter [%u]).
Cannot append range with implicit lower bound after an unbounded range (descriptor table slot [%u], root parameter [%u]).
D3DSerializeRootSignature: unsupported root signature version (%u)
Unsupported RangeType value %u (descriptor table slot [%u], root parameter [%u]).
Descriptor range (descriptor table slot [%u], root parameter [%u]) overlaps with another incompatible descriptor range.
SAMPLER
VERTEX
Overflow for descriptor range (descriptor table slot [%u], root parameter [%u])
Root parameter [%u] descriptor table entry [%u] specifies RegisterSpace=%#x, which is invalid since RegisterSpace values in the range [%#x,%#x] are reserved for system use.
(root parameter [%u], visibility %s, descriptor table slot [%u])
Root parameter [%u] specifies RegisterSpace=%#x, which is invalid since RegisterSpace values in the range [%#x,%#x] are reserved for system use.
GEOMETRY
DOMAIN
AMPLIFICATION
PIXEL
D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE combined with other flag(s) that don't make sense (root signature flags %x).
Unsupported bit-flag set (root signature flags %x).
Unsupported ShaderVisibility value %u (root parameter [%u]).
D3D12_ROOT_SIGNATURE_FLAG_LOCAL_ROOT_SIGNATURE not supported if device does not support raytracing (root signature flags %x).
(static sampler [%u], visibility %s)
(root parameter [%u], visibility %s)
Shader register range of type %s %s overlaps with another shader register range %s.
(root parameter[%u], visibility %s, descriptor table slot [%u])
Descriptor range flags cannot specify more than one DATA_* flag at a time (descriptor range flags %x).
Sampler descriptor ranges can't specify DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS, since there are no bounds to check (descriptor range flags %x).
Unsupported bit-flag set (root descriptor flags %x).
Descriptor range flags cannot specify DESCRIPTORS_VOLATILE with the DATA_STATIC flag at the same time (descriptor range flags %x). DATA_STATIC_WHILE_SET_AT_EXECUTE is fine to combine with DESCRIPTORS_VOLATILE, since DESCRIPTORS_VOLATILE still requires descriptors don't change during execution. 
Unsupported bit-flag set (descriptor range flags %x).
Local root signatures only support shader visibility flag D3D12_SHADER_VISIBILITY_ALL.  ShaderVisibility value: %u (root parameter [%u]).
Sampler descriptor ranges can't specify DATA_* flags since there is no data pointed to by samplers (descriptor range flags %x).
Descriptor range flags cannot specify more than one DESCRIPTOR_* flag at a time (descriptor range flags %x).
A Shader is declaring a resource object as a texture using a register mapped to a root descriptor SRV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
Shader sampler descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
A Shader is declaring a typed UAV using a register mapped to a root descriptor UAV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Unsupported ParameterType value %u (root parameter %u)
Root descriptor flags cannot specify more than one DATA_* flag at a time (root descriptor flags %x).
Local root signatures only support shader visibility flag D3D12_SHADER_VISIBILITY_ALL.  ShaderVisibility value: %u (static sampler [%u]).
Unsupported ShaderVisibility value %u (static sampler [%u]).
Shader uses sampler descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_SAMPLER_HEAP_DIRECTLY_INDEXED flag.
Shader uses resource descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED flag.
A shader is using atomic int64 operations on a descriptor heap resource (ShaderRegister=%u, RegisterSpace=%u), which the device does not support. Check the AtomicInt64OnDescriptorHeapResourceSupported capability via the CheckFeatureSupport() API.
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u ) is not fully bound in root signature
Shader UAV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
A Shader is declaring a structured UAV with counter using a register mapped to a root descriptor UAV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
Shader has root bindings but root signature uses a DENY flag to disallow root binding access to the shader stage.
Shader CBV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in root signature
Shader UAV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader SRV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader has root bindings but root signature uses a DENY flag to disallow root binding access to the shader stage.
Shader CBV descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Shader uses sampler descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_SAMPLER_HEAP_DIRECTLY_INDEXED flag.
Shader uses resource descriptor heap indexing, but root signature is missing the D3D12_ROOT_SIGNATURE_FLAG_CBV_SRV_UAV_HEAP_DIRECTLY_INDEXED flag.
A Shader is declaring a resource object as a texture using a register mapped to a root descriptor SRV (ShaderRegister=%u, RegisterSpace=%u).  SRV or UAV root descriptors can only be Raw or Structured buffers.
Shader sampler descriptor range (BaseShaderRegister=%u, NumDescriptors=%u, RegisterSpace=%u) is not fully bound in a root signature.
Static sampler: AddressW unrecognized.
Static sampler: AddressV unrecognized.
Static sampler: MaxAnisotropy must be in the range [%d to %d].  %d specified.
Static sampler: MipLODBias must be in the range [%f to %f].  %f specified.
Static sampler: MINIMUM or MAXIMUM filters not supported by the device. To see if the device supports this call CheckFeatureSupport with D3D12_FEATURE_D3D12_OPTIONS and check for TiledResourcesTier support of Tier 2+.
Static sampler: A NULL pSamplerDesc was specified.
Static sampler: AddressU unrecognized.
Static sampler: Filter unrecognized.
Static sampler: MinLOD be in the range [-INF to +INF].  %f specified.
Static sampler: ComparisonFunc unrecognized.
ID3D12Device::CreateRootSignature: The specified root signature contains at least one descriptor range which was declared both unbounded (NumDescriptors == UINT_MAX) and static (missing D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_VOLATILE or containing D3D12_DESCRIPTOR_RANGE_FLAG_DESCRIPTORS_STATIC_KEEPING_BUFFER_BOUNDS_CHECKS). This combination is ignored and treated as DESCRIPTORS_VOLATILE. To enable static descriptor driver optimizations or debug validation, specify a bounded descriptor table size.
D3DSerializeRootSignature: unknown root parameter type (%u)
D3D Background Thread %d
MostRecentApplication
%s\%s
dxcore.dll
IsDeveloperModeEnabled
api-ms-win-appmodel-unlock-l1-1-0.dll
RtlInitUnicodeString
NtQuerySection
Ntdll.dll
RtlIsCriticalSectionLockedByThread
ShaderCache_FreeValue
ShaderCache_FindValue
ShaderCache_Flush
ShaderCache_AddValue
ShaderCache_Destroy
ShaderCache_Create
ShaderCache_Delete
ShaderCache_GetDesc
D3DSCache.dll
ShaderCache_Clear
KernelBase.dll
BaseFormatObjectAttributes
dxilconv.dll
DxcCreateInstance
_VEN_%X&DEV_%X&SUBSYS_%X&REV_%X
bad_weak_ptr
D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_PIPELINE_CONFIG/_CONFIG1
D3D12_STATE_SUBOBJECT_TYPE_RAYTRACING_SHADER_CONFIG
D3D12_STATE_SUBOBJECT_TYPE_LOCAL_ROOT_SIGNATURE
D3D12_STATE_SUBOBJECT_TYPE_GLOBAL_ROOT_SIGNATURE
closesthit
D3D12_STATE_SUBOBJECT_TYPE_STATE_OBJECT_CONFIG
D3D12_STATE_SUBOBJECT_TYPE_NODE_MASK
intersection
anyhit
invalid bitset position
%s can not be called on a resource created with the CreateReservedResource API. The CPU page mapping is not kept in-sync with the GPU tile mapping configuration.
%s cannot be called for buffers.
%s can not be called on a resource associated with a heap that has the CPU page properties of D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE. Heaps of the type D3D12_HEAP_TYPE_DEFAULT should be assumed to have these properties.
ReadFromSubresource
WriteToSubresource
%sSubresource is too large for the resource. The value is %u, when the resource only has %u subresources.
The coordinates in p%sBox are not aligned properly for the resource format. When the format is %s, left & right must be a multiple of %u and top & bottom must be a multiple of %u. left is %u, right is %u, top is %u, and bottom is %u.
The box extends past, at least, one the edges of the subresource. p%sBox right is %u, bottom is %u, and back is %u. But, %sSubresource %u only has %u width, %u height, and %u depth.
p%sBox was empty, but probably was not intended. The resulting behavior is well-defined to result in no copy. The left, top, and front coordinates must be less then the corresponding right, bottom, and back coordinates to avoid specifying an empty box. left is %u, right is %u, top is %u, bottom is %u, front is %u, and back is %u.
Map and Unmap can not be called on a resource created with the CreateReservedResource API. The CPU page mapping is not kept in-sync with the GPU tile mapping configuration.
%s can not be called on a resource when it is either multisampled, is one of a few exceptional formats, has D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL set in D3D12_RESOURCE_DESC::Flags, has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set in D3D12_RESOURCE_DESC::Flags, has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set in D3D12_RESOURCE_DESC::Flags, is a volume texture with multiple mip levels & an opaque layout or strides,  or is a sampler feedback resource. The resource layout is %s, which is %sopaque. The resource format is %s, which is %ssupported. The resource dimension is %s, has %u samples, has %u mip levels, The D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL is %sset. The D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY is %sset. The D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY is %sset. 
A pointer to resource data cannot be obtained when the resource has an opaque memory layout or opaque strides. ppData must be NULL in order to use WriteToSubresource and ReadFromSubresource. The resource layout is %s, which is opaque.
Map and Unmap can not be called on a resource associated with a heap that has the CPU page properties of D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE. Heaps of the type D3D12_HEAP_TYPE_DEFAULT should be assumed to have these properties.
Subresource is out of range. It is %u, and the resource only has %u subresources.
%s must be NULL or specify an empty range when %s is invoked for a resource with an opaque layout or opaque strides. The resource layout is %s, which is opaque. %s is%s NULL.
pWrittenRange
pReadRange
Unmap
%s is not NULL, not empty, and specifies an area past the subresource extent. D3D12_RANGE::Begin is %I64u, D3D12_RANGE::End is %I64u, and subresource %u has only %I64u bytes.
If the source resource has a protected resource session, the destination resource must have a protected resource session.
The argument resource cannot be a protected resource.
Argument and count resources must be buffers.
The count resource cannot be a protected resource.
Argument buffer overflow.
Node mask mismatch between descriptor heap and command list.
Node mask mismatch between bundle and command list.
Argument buffer & count buffer offsets must be 4 byte aligned.
ExecuteIndirect can only be called on a bundle when the count buffer is set to NULL, and the command signature contains exactly 1 parameter (which must be a Draw, DrawIndexed, Dispatch or DispatchRays).
BeginRenderPass called during an existing Render Pass.
Driver set invalid sync interval override.
EndRenderPass called without corresponding BeginRenderPass.
BeginRenderPass called without D3D12_RENDER_PASS_FLAG_RESUMING_PASS after a suspended Render Pass.
If no count buffer is specified, the count buffer offset must be 0.
Count buffer overflow.
ExecuteIndirect does not support Draw* operations on a compute command list.
Node mask mismatch between command signature and command list.
Mismatch between suspending and resuming Render Pass flags.
Mismatch between suspending and resuming Render Pass Depth Stencil desc.
An invalid parameter was passed to RSSetShadingRateImage
An invalid parameter was passed to RSSetShadingRate
Mismatch between suspending and resuming Render Pass Render Target desc at index %u.
NumRenderTargets varies between the suspending and resuming render passes.
Resuming Render Pass contains depth buffer, but suspending Render Pass does not.
Suspending Render Pass contains depth buffer, but resuming Render Pass does not.
ID3D12VideoEncodeCommandList::ResolveMotionVectorHeap encountered and invalid argument.
ID3D12VideoEncodeCommandList::EncodeFrame encountered an error.
ID3D12VideoEncodeCommandList::EncodeFrame was passed invalid arguments.
ID3D12VideoDecodeCommandList::DecodeFrame encountered an invalid argument.
Command list recording ran out of memory.
ID3D12VideoEncodeCommandList::EstimateMotion encountered and invalid argument.
ID3D12VideoProcessCommandList::ProcessFrame encountered and invalid argument.
EndTrackedWorkload
SuspendTrackedWorkload
ExecuteExtensionCommand
BeginTrackedWorkload
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata was passed invalid arguments.
The commandlist cannot have a protected session active while using ResolveEncoderOutputMetadata.
ResumeTrackedWorkload
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata encountered an error.
DecodeFrame2
ProcessFrames
OMSetStencilRef
DecodeFrame1
ResolveMotionVectorHeap
InitializeExtensionCommand
ProcessFrames1
ClearState
AtomicCopyBufferUINT64
ResolveSubresourceRegion
ResolveSubresource
AtomicCopyBufferUINT
RSSetScissorRects
OMSetBlendFactor
IASetPrimitiveTopology
RSSetViewports
Predication resource must be a buffer.
BeginQuery is not supported with D3D12_QUERY_TYPE specified.  Examples include D3D12_QUERY_TYPE_TIMESTAMP and D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS.
Invalid operation type.
AlignedBufferOffset must be a multiple of 8.
Close fails because the command list has an open Render Pass. Render Passes must be ended within the Command List they begin.
CopyResource
Command list closing ran out of memory.
Close fails because the command list has queries outstanding.
StartElement/ElementCount exceeds range of query heap.
Destination resource must be a buffer.
AlignedDestinationBufferOffset is not a multiple of 8.
AlignedDestinationBufferOffset/ElementCount exceeds range destination buffer.
AlignedBufferOffset is too large.
The source resource cannot be a protected resource.
Predication is not supported by this command list type.
When no resource is specified, AlignedBufferOffset must be 0, and the operation must be D3D12_PREDICATION_OP_EQUAL_ZERO.
Video Extension is not supported on this command list type.
It is invalid to call SetProtectedResourceSession on a command list when the command list has outstanding BeginQuery.  Call EndQuery before SetProtectedResourceSession.
Node mask mismatch between pipeline state and command list.
Command list out of memory translating arguments.
The specified query heap type is not supported for resolve on the given command list type.
Query type does not match query heap type.
Node mask mismatch between protected resource session and command list.
Node mask mismatch between query heap and command list.
Node mask mismatch between compute root signature and command list.
Node mask mismatch between tracked workload and command list.
Node mask mismatch between state object and command list.
The protected resource session of an input argument did not match the protected resource state of the command list.
A single command list cannot write to multiple buffers within a particular swapchain.
Only 8 swapchains can be written to by a single command list.
The specified query type is not supported on the given command list type
Query index is out of range.
Command list types other than copy cannot issue queries against a COPY_QUEUE_TIMESTAMP query heap.
A copy command list cannot issue queries against a standard timestamp query heap. Copy command lists may only issue timetamp queries against COPY_QUEUE_TIMESTAMP query heaps.
Resources in state D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE cannot be transitioned to another state.
Resources cannot be transitioned into state D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE.
Invalid subresource index.
Before and after states must be different.
NULL pointer specified.
D3D12_RESOURCE_STATES has invalid flags for video process command list.
D3D12_RESOURCE_STATES has invalid flags for video encode command list.
D3D12_RESOURCE_STATES has invalid flags for copy command list.
D3D12_RESOURCE_STATES has invalid flags for video decode command list.
D3D12_RESOURCE_STATES has invalid flags for 3D command list.
D3D12_RESOURCE_STATES has invalid flags for compute command list.
CopyTextureRegion
CopyBufferRegion
CopyTiles
OMSetRenderTargets
ExecuteBundle
ClearRenderTargetView
ExecuteIndirect
InitializeMetaCommand
EndRenderPass
BeginRenderPass
BuildRaytracingAccelerationStructure
ExecuteMetaCommand
EmitRaytracingAccelerationStructurePostbuildInfo
RSSetShadingRateImage
RSSetShadingRate
CopyRaytracingAccelerationStructure
SetDescriptorHeaps
SetComputeRootSignature
SetPipelineState
SetComputeRootShaderResourceView
SetComputeRootUnorderedAccessView
SetComputeRoot32BitConstants
SetComputeRootConstantBufferView
SetComputeRootDescriptorTable
SetComputeRoot32BitConstant
SetGraphicsRootSignature
SetGraphicsRootDescriptorTable
IASetVertexBuffers
SOSetTargets
SetGraphicsRootUnorderedAccessView
IASetIndexBuffer
SetGraphicsRootConstantBufferView
SetGraphicsRootShaderResourceView
SetGraphicsRoot32BitConstant
SetGraphicsRoot32BitConstants
DrawInstanced
SetViewInstanceMask
SetPipelineState1
OMSetDepthBounds
SetSamplePositions
Dispatch
DrawIndexedInstanced
ClearUnorderedAccessViewUint
ClearDepthStencilView
ClearUnorderedAccessViewFloat
DispatchRays
WriteBufferImmediate
DispatchMesh
DecodeFrame
DiscardResource
ResourceBarrier
EstimateMotion
SetProtectedResourceSession
ResolveEncoderOutputMetadata
EncodeFrame
Barrier
BeginQuery
ResolveQueryData
EndQuery
SetPredication
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pInputArguments->HWLayoutMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pOutputArguments->ResolvedLayoutMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pInputArguments cannot be null.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not correct - pOutputArguments cannot be null.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS::ResolvedLayoutMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer must be a buffer.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata Failure on call to CheckFeatureSupport(D3D12_FEATURE_VIDEO_ARCHITECTURE,...).
The resource in D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS.ResolvedLayoutMetadata.pBuffer must be a buffer.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments warning - Buffer offset alignment for HWLayoutMetadata.pBuffer specified in InputArguments.HWLayoutMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments warning - Buffer offset alignment for ResolvedLayoutMetadata.pBuffer specified in OutputArguments.ResolvedLayoutMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - EncodedPictureEffectiveResolution does not satisfy the constraints specified in CheckFeatureSupport - D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL,...) for the given input returned failure or profile not supported.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT,...) for the given input returned failure or not supported.
The D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS::HWLayoutMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS.HWLayoutMetadata.pBuffer.
ID3D12VideoEncodeCommandList::ResolveEncoderOutputMetadata arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pEncoder cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame Failure on call to CheckFeatureSupport(D3D12_FEATURE_VIDEO_ARCHITECTURE,...).
ID3D12VideoEncodeCommandList arguments are not correct - NodeMasks in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->EncoderOutputMetadata.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->Bitstream.pBuffer cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->pInputFrame cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pHeap cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments cannot be null.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.Flags.
ID3D12VideoEncodeCommandList arguments are not correct - Profiles in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList arguments are not correct - Codecs in Encoder and EncoderHeap must be the same.
ID3D12VideoEncodeCommandList::EncodeFrame validation failure - Error produced while validating encoder heap resolution list - HRESULT: %x.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct  Target resolution must be within the associated heap allowed resolution list.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.IntraRefreshConfig.Mode.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->SequenceControlDesc.CodecGopSequence.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - ...PictureControlCodecData.p<Codec>PicData cannot be null.
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA.pHEVCPicData. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA.pH264PicData. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264 Expected size: %d Received size: %d
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA.pSlicesPartition_H264. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES Expected size: %d Received size: %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid pInputArguments->PictureControlDesc.Flags.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - Invalid D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM::FrameStartOffset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM::pBuffer.
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must be a buffer.
The resource in D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM must not be a reserved resource.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - If SelectedLayoutMode is not D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_FULL_FRAME.then FrameSubregionsLayoutData.pSlicesPartition_<codec> must be set with the associated configuration
The data size of the structure passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA.pSlicesPartition_HEVC. does not match the expected size of D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES Expected size: %d Received size: %d
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::InputFrameSubresource exceeds the number of subresources for D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::pInputFrame must not be a reserved resource.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS::EncoderOutputMetadata.Offset exceeds the size of the buffer specified D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must be a buffer.
The resource in D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS.EncoderOutputMetadata.pBuffer must not be a reserved resource.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->pInputFrame must NOT have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
The reference frame at index %d has a format of %s that does not match the encoder which has a format of %s.
The reference frame at index %d is smaller than the current PictureTargetResolution.  PictureTargetResolution.Width: %d, PictureTargetResolution.Height: %d, Resource Width: %I64u, Resource Height: %d
The input frame is smaller than the requested PictureTargetResolution.  PictureTargetResolution.Width: %d, PictureTargetResolution.Height: %d, Resource Width: %I64u, Resource Height: %d
The subresource for reference frame at index %d has MipLevels != 1 which is not supported with EncodeFrame.
D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS::InputFrameSubresource must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The input frame has a format of %s that does not match the encoder which has a format of %s.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not valid - Rate control modes that use a QP map, require a non-null QP Map . passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_<Codec>.pRateControlQPMap
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->ReconstructedPicture.pReconstructedPicture MUST have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pInputArguments->PictureControlDesc.ReferenceFrames.ppTexture2Ds MUST ALL have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not correct - pOutputArguments->ReconstructedPicture.pReconstructedPicture cannot be null.if D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAG_USED_AS_REFERENCE_PICTURE is set
The NodeMask of the ID3D12VideoEncoder is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12VideoEncoderHeap is not supported by the NodeMask of this command list.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - IDR or I Frames must not contain references information.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForP (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - B frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL0ReferencesForB or D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL1ReferencesForB are reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - adaptive_ref_pic_marking_mode_flag is set but RefPicMarkingOperationsCommandsCount or pRefPicMarkingOperationsCommands are not set correctly.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - P or B frames are not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.capMaxDPBCapacity is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - P frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL0ReferencesForP is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Long term references detected in picture control used for this frame but not enabled in associated encoder, please see D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ENABLE_LONG_TERM_REFERENCES.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of LTR in L0/L1 lists (%d) exceeds maximum supported number of LTRs (%d) for current frame
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - P frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.MaxL0ReferencesForP is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - B frame not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.MaxL0ReferencesForB or D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264.MaxL1ReferencesForB are reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of LTR in L0/L1 lists (%d) exceeds maximum supported number of LTRs (%d) for current frame
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - P or B frames are not supported as D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC.capMaxDPBCapacity is reporting zero.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForB (%d) or Number of L1 elements (%d) for P frame exceeded respect to MaxL1ReferencesForB (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - H264 Picture control structure - Indices in L0 or L1 lists are out of bounds, exceeding the ReferenceFramesReconPictureDescriptorsCount size.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForP (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of L0 elements (%d) for P frame exceeded respect to MaxL0ReferencesForB (%d) or Number of L1 elements (%d) for P frame exceeded respect to MaxL1ReferencesForB (%d).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - IDR or I Frames must not contain L0/L1 references information.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - IDR or I Frames must not use frame references from the DPB (Check the IsRefUsedByCurrentPic flag setting in DPB descriptor).
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - Number of reference pictures addressable by L0 and L1 lists according to caps (MaxLXReferencesForX) exceeds maximum MaxDPBCapacity reported. Max L0 size for P: %d Max L0 size for B: %d Max L1 size: %d Max number of adressable unique frames in DPB between L0 and L1 lists: %d Reported maximum DPB size %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - ReferenceFrames.NumTexture2Ds does not match with ReferenceFramesReconPictureDescriptorsCount.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Number of unique elements in L0 + L1 lists (%d) has to be exactly the same as the number of DPB entries marked as IsRefUsedByCurrentPic (%d) for current frame.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - HEVC Picture control structure - Indices in L0 or L1 lists are out of bounds, exceeding the ReferenceFramesReconPictureDescriptorsCount size.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - DPB descriptors for the current picture have temporal layers indices higher than the current picture temporal layer index.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - Number of distinct reference pictures indexed from L0 and L1 lists into ReferenceFramesReconPictureDescriptorsCount exceeds maximum MaxDPBCapacity reported Current DPB size: %d Reported maximum DPB size %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - ReferenceFramesReconPictureDescriptors has (%d) entries but the selected codec supports at most (%d) entries.
ID3D12VideoEncodeCommandList::EncodeFrame arguments not supported - DPB descriptors have indices set in ReconstructedPictureResourceIndex out of bounds respect to ReferenceFramesReconPictureDescriptorsCount (%d).
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support for resolution when querying feature checks: D3D12_FEATURE_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_CODEC.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_SUPPORT,...) for the given input returned failure.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_SUPPORT,...) returned the following flags ValidationFlags: 0x%x SupportFlags: 0x%x
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] log2_max_frame_num_minus4 or m_log2_max_pic_order_cnt_lsb_minus4 have a bigger frame address range than MaxDPBCapacity reported in D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Values allowed for pic_order_cnt_type are 0 or 2.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_INTRA_REFRESH_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 2 for GOPS with only I Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support when querying feature check: D3D12_FEATURE_VIDEO_ENCODER_RATE_CONTROL_MODE.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 0 for GOPS with B Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Invalid pic_order_cnt_type should be 2 for GOPS with only I and P Frames
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] No support for resolution when querying feature checks: D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_MODE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_CONFIGURATION_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INPUT_FORMAT_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_CONFIGURATION_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Individual feature query calls for input arguments for D3D12_FEATURE_DATA_VIDEO_ENCODER_SUPPORT are (0x%x) but combined support check returned (0x%x). This might be due to mutually exclusive features that are supported individually but not together. Please check the following configuration areas for such restrictions.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_GOP_STRUCTURE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RESOLUTION_NOT_SUPPORTED_IN_LIST.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INTRA_REFRESH_MODE_NOT_SUPPORTED.
D3D12: [D3D12_FEATURE_VIDEO_ENCODER_SUPPORT] Conflicting individual support and combined support checks for configuration area: D3D12_VIDEO_ENCODER_VALIDATION_FLAG_SUBREGION_LAYOUT_MODE_NOT_SUPPORTED.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_QP_RANGE was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_VBV_SIZES was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_DELTA_QP was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregion layout reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode was D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_FRAME_ANALYSIS requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Resolution reconfiguration was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Intra refresh duration specified (%d). exceeds the maximum supported number of intra refresh frames duration %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number specified (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_SUBREGIONS_PER_FRAME exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number inferred (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_SQUARE_UNITS_PER_SUBREGION_ROW_UNALIGNED exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Subregions number inferred (%d) for frame subregions mode . D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_ROWS_PER_SUBREGION exceeds the maximum supported number of subregions %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Rate control optional mode was requested but it's not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Buffer offset alignment for EncoderOutputMetadata.pBuffer specified in OutputArguments.EncoderOutputMetadata.Offset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Buffer offset access alignment for Bitstream.pBuffer specified in Bitstream.FrameStartOffset is different than advised in encoder caps. Current buffer offset: %d Required alignment reported: %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - CheckFeatureSupport(D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS,...) for the given input returned failure or not supported.
ID3D12VideoEncodeCommandList::EncodeFrame arguments warning - Output buffer size for EncoderOutputMetadata.pBuffer is less than advised in encoder caps. Current buffer size: %d Maximum size reported %d
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - Intra refresh index specified (%d). exceeds the intra refresh frames duration specified %d. IR index range is [0..IntraRefreshDuration)
ID3D12VideoEncodeCommandList::EncodeFrame arguments are not supported - The QP Map passed in passed in D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_<Codec>.pRateControlQPMap must have a size of ceil(FramePixelWidth/QPMapRegionPixelsSize) * ceil(FramePixelHeight/QPMapRegionPixelsSize)) where the QPMapRegionPixelsSize is reported in the support queries or the current resolution being used.
The PixelWidth(%u) and PixelHeight(%u) could not be used with the SizeRange (%u, %u, %u, %u) of the pMotionVectorHeap.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate is invalid or specifies a region larger than D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D.  D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT::PixelWidth / BlockSize = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT::PixelHeight / BlockSize = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.X = %llu D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.Y = %u D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.Z = %u pMotionVectorTexture2D Width = %u pMotionVectorTexture2D Height = %u 
The NodeMask of the ID3D12MotionEstimator is not supported by the NodeMask of this command list.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::MotionVectorCoordinate.SubresourceIndex exceeds the number of subresources for the associated resource.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D has MipLevels != 1 which is not supported with EstimateMotion.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D must not be a reserved resource.
D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT::pMotionVectorTexture2D has a format of %s.  It must have a format of DXGI_FORMAT_R16G16_SINT or DXGI_FORMAT_R16G16_SNORM.
The BlockSize(%u) of the ID3D12VideoMotionEstimator does not match the BlockSize(%u) for the ID312VideoMotionVectorHeap.
The Precision(%u) of the ID3D12VideoMotionEstimator does not match the Precision(%u) for the ID312VideoMotionVectorHeap.
The InputFormat(%s) of the ID3D12VideoMotionEstimator does not match the InputFormat(%s) for the ID312VideoMotionVectorHeap.
D3D12_FEATURE_VIDEO_ARCHITECTURE::%sSubresourceIndex exceeds the number of subresources for the associated resource.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D has MipLevels != 1 which is not supported with EstimateMotion.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must not be a reserved resource.
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D has a Width(%u) and Height(%u) that is not within the SizeRange (%u, %u, %u, %u) of the ID3D12VideoMotionEstimator.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::p%sTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
Input
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D Format(%s) does not match the InputFormat(%s) of the ID3D12VideoMotionEstimator.
D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pReferenceTexture2D Width(%u) and Height(%u) do not match D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::pInputTexture2D Width(%u) and Height(%u).
Reference
The subresource for D3D12_VIDEO_MOTION_ESTIMATOR_INPUT::%sSubresourceIndex must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The NodeMask of the ID3D12VideoMotionEstimator is not supported by the NodeMask of this command list.
The NodeMask of the ID3D12MotionVectorHeap is not supported by the NodeMask of this command list.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must not be a reserved resource.
If stereo is not enabled, then D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[1] must have a nullptr for pTexture2d and have the Subresource set to 0.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D has a Format %s that does not match the D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC::Format %s of the video processor.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::TargetRectangle must have top >= 0, bottom > top, left >= 0, and right > left. TargetRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::TargetRectangle must fit within the bounds of the destination resource. Destination Resource - width: %d, height: %d.  TargetRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D has MipLevels != 1 which is not supported with ProcessFrame.
The subresource for D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].pTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS::OutputStream[%d].Subresource exceeds the number of subresources for the associated resource.
Video Processor Creation arguments specified %d input streams, but the call to ID3D12VideoProcessCommandList::ProcessFrames only specified %d input streams
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.SourceRectangle specifies a width or height that exceeds the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::SourceSizeRange. SourceRectangle - top: %d, left: %d, bottom: %d, right: %d SourceSizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
When D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::EnableOrientation is FALSE, D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.Orientation must specify D3D12_VIDEO_PROCESS_ORIENTATION_DEFAULT.
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.DesintationRectangle specifies a width or height that exceeds the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::DestinationSizeRange. DestinationRectangle - top: %d, left: %d, bottom: %d, right: %d DestinationSizeRange - MaxWidth: %d MinWidth: %d MaxHeight: %d MinHeight: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must have top >= 0, bottom > top, left >= 0, and right > left. SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
The input stream at index %d has a StereoFormat of D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE.When the StereoFormat is D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE, both D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::InputStreamstereo views must either be null or non-null.
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Transform.DestinationRectangle must have top >= 0, bottom > top, left >= 0, and right > left. DestinationRectangle - top: %d, left: %d, bottom: %d, right: %d
When D3D12_FEATURE_VIDEO_ARCHITECTURE::IOCoherent is false, D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.  For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].Subresource exceeds the number of subresources for the associated resource.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D must not be a reserved resource.
When D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS[%d]::Flags contains invalid bits.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D has a Format %s that does not match the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::Format %s of the video processor.
pFutureSubresources
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] has a Format %s that does not match the D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::Format %s of the video processor.
ppFutureFrames
pPastSubresources
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must fit within the bounds of the source resource. D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D - width: %d, height: %d.  SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
ppPastFrames
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].pTexture2D has MipLevels != 1 which is not supported with ProcessFrame.
The subresource for D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS::Transform.SourceRectangle must fit within the bounds of the source resource. D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] - width: %d, height: %d.  SourceRectangle - top: %d, left: %d, bottom: %d, right: %d
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] has MipLevels != 1 which is not supported with ProcessFrame.
The subresource for D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM.   For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] exceeds the number of subresources for the associated resource.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC[%d]::InputStream[%d].ReferenceSet.%s[%d] must not be a reserved resource.
DXVA_PicParams_H264
DXVA_PicParams_H264_MVC
Post processing operations are not supported in D3D12 Video.
The D3D12_VIDEO_DECODE_FRAME_ARGUMENT::Size for D3D12_VIDEO_DECODE_ARGUMENT_TYPE_PICTURE_PARAMETERS is incorrect.  Actual: %d Expected: sizeof(%s)==%d.
DXVA_PicParams_VP8
DXVA_PicParams_HEVC
DXVA_PicParams_VP9
DXVA_PictureParameters
DXVA_PicParams_MPEG4_PART2
The subresource for reference frame at index %d exceeds the number of subresources for the associated resource.
The subresource for reference frame at index %d must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
The reference frame at index %d must not be a reserved resource.
The reference frame at index %d must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The reference frame at index %d must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
Invalid D3D12_VIDEO_DECODE_ARGUMENT_TYPE: %d
The reference frame at index %d is smaller than the matching decoder heap.  Decoder Heap Width: %d, Decoder Heap Height: %d, Resource Width: %I64u, Resource Height: %d
The decoder heap requires resources with D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY, but the reference frame at index %d does not have it.
The reference frame at index %d has a format of %s that does not match the decoder heap which has a format of %s.
The current decoder heap must have a D3D12_VIDEO_DECODE_CONFIGURATION that matches the decoder.
The decoder heaps associated with a decode frame call must all be the same unless the decode profile is D3D12_VIDEO_DECODE_PROFILE_VP9 or D3D12_VIDEO_DECODE_PROFILE_VP9_10BIT_PROFILE2 and the decoder supports D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_ALLOW_RESOLUTION_CHANGE_ON_NON_KEY_FRAME.The heap associated with reference frame at index %d does not match the current decode heap.
The decoder heap requires has D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED, but the reference frame at index %d does not have a height that is >= to the aligned decode height.
The decoder heap must have a D3D12_VIDEO_DECODE_CONFIGURATION that matches the decoder, but the reference frame at index %d does not match.
The bitstream size must be specified in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Size and cannot be zero.
The D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Offset + D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Size exceeds the size of the buffer specified D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::pBuffer.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM::Offset must be D3D12_VIDEO_DECODE_MIN_BITSTREAM_OFFSET_ALIGNMENT byte aligned.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must be a buffer.
The resource in D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM must not be a reserved resource.
The subresource for reference frame at index %d has MipLevels != 1 which is not supported with DecodeFrame.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::OutputSubresource must specify PlaneSlice 0 of a planar resource for the chosen ArraySlice.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
The D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::OutputSubresource exceeds the number of subresources for D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must have a resource dimension of D3D12_RESOURCE_DIMENSION_TEXTURE2D.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must not be a reserved resource.
The decoder heap requires has D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED, but %s does not have a height that is >= to the aligned decode height.
%s is smaller than the matching decoder heap.  Decoder Heap Width: %d, Decoder Heap Height: %d, Resource Width: %I64u, Resource Height: %d
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D
%s has a format of %s that does not match the decoder heap which has a format of %s.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.Enable is TRUE, but D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.pReferenceTexture2D is nullptr.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.pReferenceTexture2D
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D must not have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY.  If the decoder heap requires resources with D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY, you must use decode output conversion to produce two outputs.
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion is not supported by driver.  The D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.OutputWidth or the D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.OutputHeight is not supported by the OutputSizeRange reported in D3D12_VIDEO_SCALE_SUPPORT.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::pOutputTexture2D is smaller than the output size requested in D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArguments.  D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArgumentsOutputWidth: %d, D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::ConversionArgumentsOutputHeight: %d, Resource Width: %I64u, Resource Height: %d
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion is not supported by driver.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT.
The decode output conversion specified by D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Conversion failed the support check with driver.  See ID3D12VideoDevice::CheckFeatureSupport with D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT.
The resource in OutputArguments.Histograms[%d].pBuffer must not be a reserved resource.
The resource in OutputArguments.Histograms[%d].pBuffer must be a buffer.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Histograms[%d] a component enabled but that component is is not supported by driver.  See D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM for capability checks.
CheckFeatureSupport for D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM failed.
The resource in OutputArguments.Histograms[%d].Offset must be D3D12_VIDEO_DECODE_MIN_HISTOGRAM_OFFSET_ALIGNMENT byte aligned.
D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS::Histograms[%d].Offset of %I64u and histogram size of %I64u exceeds the size of the histogram output buffer %I64u.  See D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM for capability checks.
The resource in OutputArguments.Histograms[%d].pBuffer must have heap type D3D12_HEAP_TYPE_DEFAULT, D3D12_HEAP_TYPE_UPLOAD, or D3D12_HEAP_TYPE_CUSTOM. For D3D12_HEAP_TYPE_CUSTOM, CPUPageProperty must not be equal to D3D12_CPU_PAGE_PROPERTY_WRITE_BACK.See D3D12_FEATURE_VIDEO_ARCHITECTURE.
When encoding sampler feedback, the source resource needs to be a compatible format- e.g., R8_UINT or DXGI_FORMAT_UNKNOWN. The passed-in format was %s.
When encoding sampler feedback, the destination resource needs to be a sampler feedback format. The passed-in format was %s.
When transcoding MipRegionUsed sampler feedback, the source resource must have the same mip level count as the destination. The source resource mip level count is %u, and the destination mip level count is %u.
The dimensions of the source and destination resources do not match.
When decoding MinMip sampler feedback, the destination resource must have 1 mip level. Destination resource mip level count : %u.
When transcoding sampler feedback, the source and destination array sizes must match.
When decoding sampler feedback, the source resource needs to be a sampler feedback format. The passed-in format was %s.
When decoding sampler feedback, the destination resource needs to be a compatible format- e.g., R8_UINT or UNKNOWN. The passed-in format was %s.
When encoding MinMip sampler feedback, the source resource must have 1 mip level. Source resource mip level count : %u.
When encoding MipRegionUsed sampler feedback, the source resource must have the same mip level count as the destination. The source resource mip level count is %u, and the destination mip level count is %u.
When mode is set to D3D12_RESOLVE_MODE_DECOMPRESS, sample quality of destination resource must be match sample quality of source resource.
When encoding sampler feedback, the source subresource must have sample count 1, quality 0. Source resource sample count : %u, quality %u.
The destination region extends past the end of the destination resource. With DstY = %u, pSrcRect's height = %u will exceed height of destination resource = %u.
Destination resource sample count : %u, and Source resource sample count : %u, but when mode is set to D3D12_RESOLVE_MODE_DECOMPRESS, sample count of destination resource must be equal to sample count of source resource. 
pSrcRect.top = %u and pSrcRect.bottom = %u, and top must be less than bottom.
The destination region extends past the end of the destination resource. With DstX = %u, pSrcRect's width = %u will exceed width of destination resource = %u.
Source or destination subresource index is out of bounds.
pSrcRect.left = %u and pSrcRect.right = %u, and left must be less than right
The specified format is not compatible with the destination resource. Format:%s, Destination Resource Format:%s
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
The specified format %s does not support MSAA resolve. Only fully typed non integer and non stencil formats are allowed, except for formats DXGI_FORMAT_R24_UNORM_X8_TYPELESS and DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS which are allowed since these have R fully typed and are non integer.
The specified format is not compatible with the source resource. Format:%s, Source Resource Format:%s
The specified format is unrecognized. The value is %u.
The specified format %s does not support MSAA resolve. Only render target and depth stencil fully typed formats are allowed, except for formats DXGI_FORMAT_R24_UNORM_X8_TYPELESS, DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS, DXGI_FORMAT_X24_TYPELESS_G8_UINT and DXGI_FORMAT_X32_TYPELESS_G8X24_UINT, which are allowed since these have a fully typed component.
When decoding sampler feedback, the destination subresource must have sample count 1, quality 0. Destination resource sample count : %u, quality %u.
Destination resource sample count: %u, and Source resource sample count: %u. The destination resource sample count must be 1, and the source resource sample count must be >= 2.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY flag.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL flag.
The destination resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY flag.
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY flag.
The source resource is not allowed to have the D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY flag.
D3D12_SUBRESOURCE_FOOTPRINT::Format is unrecognized. The value is %u.
D3D12_SUBRESOURCE_FOOTPRINT::Format is not supported at the current feature level. Format = %s and FeatureLevel is %s.
D3D12_TEXTURE_COPY_LOCATION::Type can not be D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT and used with a resource that is a texture. The resource must be D3D12_RESOURCE_DIMENSION_BUFFER.
D3D12_PLACED_SUBRESOURCE_FOOTPRINT::Offset must be a multiple of %u (aka. D3D12_TEXTURE_DATA_PLACEMENT_ALIGNMENT) when UnrestrictedBufferTextureCopyPitchSupported is false. Offset is %I64u.
D3D12_TEXTURE_COPY_LOCATION::Type can not be D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX and used with a resource that is D3D12_RESOURCE_DIMENSION_BUFFER. D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX can only be used with textures.
D3D12_TEXTURE_COPY_LOCATION::Subresource is too large for the associated resource. The value is %u, when the resource only has %u subresources.
D3D12_TEXTURE_COPY_LOCATION::Type is unrecognized. The value is %d.
The region specified by D3D12_TEXTURE_COPY_LOCATION:PlacedFootprint extends past the end of the buffer it is placed on. The size required by PlacedFootprint is %I64u, as the fields of PlacedFootprint::Placement are as follows: RowPitch is %u, Height is %u, and Format is %s. PlacedFootprint::Offset is %I64u, which requires the buffer to have %I64u bytes; but the buffer only has %I64u bytes.
D3D12_SUBRESOURCE_FOOTPRINT::Format may not be a DXGI_FORMAT_R32G8X24_TYPELESS or DXGI_FORMAT_R24G8_TYPELESS family format. These formats are planar.  Use DXGI_FORMAT_R32_TYPELESS for plane 0 (Depth) and DXGI_FORMAT_R8_TYPELESS for plane 1 (stencil).  See GetCopyableFootprints.Format = %s
D3D12_SUBRESOURCE_FOOTPRINT::RowPitch must be greater or equal to the pitch implied by the width. RowPitch is %u, and must be greater or equal to %u when D3D12_SUBRESOURCE_FOOTPRINT::Width is %u and D3D12_SUBRESOURCE_FOOTPRINT::Format is %s.
D3D12_SUBRESOURCE_FOOTPRINT::RowPitch must be a multiple of %u (aka. D3D12_TEXTURE_DATA_PITCH_ALIGNMENT) when UnrestrictedBufferTextureCopyPitchSupported is false.
D3D12_SUBRESOURCE_FOOTPRINT::Width, D3D12_SUBRESOURCE_FOOTPRINT::Height, and D3D12_SUBRESOURCE_FOOTPRINT::Depth cannot be 0. The minimum value is 1. Width = %u, Height = %u, and Depth = %u.
D3D12_SUBRESOURCE_FOOTPRINT::Width, D3D12_SUBRESOURCE_FOOTPRINT::Height, and/ or D3D12_SUBRESOURCE_FOOTPRINT::Depth are too large for the implied dimensionality and FeatureLevel. Width = %u and must be <= %u, Height = %u and must be <= %u, Depth = %u and must be <= %u, Dimension = %s, and FeatureLevel = %s.
D3D12_SUBRESOURCE_FOOTPRINT::Format is not supported at the current feature level with the dimensionality implied by the D3D12_SUBRESOURCE_FOOTPRINT::Height and D3D12_SUBRESOURCE_FOOTPRINT::Depth. Format = %s, Dimension = %s, Height = %u, Depth = %u, and FeatureLevel is %s.
Textures created with certain Formats must align the resource dimensions properly. D3D12_SUBRESOURCE_FOOTPRINT::Format is %s. D3D12_SUBRESOURCE_FOOTPRINT::Width is %u, and must be a multiple of %u. D3D12_SUBRESOURCE_FOOTPRINT::Height is %u, and must be a multiple of %u.
pSrcBox was empty, but probably was not intended. The resulting behavior is well-defined to result in no copy. The left, top, and front coordinates must be less then the corresponding right, bottom, and back coordinates to avoid specifying an empty box. left is %u, right is %u, top is %u, bottom is %u, front is %u, and back is %u.
The coordinates in pSrcBox are not aligned properly for the format used with the source. When the format is %s, left & right must be a multiple of %u and top & bottom must be a multiple of %u. left is %u, right is %u, top is %u, and bottom is %u.
The destination resource multisampling properties must equal the source resource. The destination resource has %u samples and %u quality. The source resource has %u samples and %u quality. 
The destination coordinates are not aligned properly for the format used with the destination. When the format is %s, DstX must be a multiple of %u and DstY must be a multiple of %u. DstX is %u and DstY is %u.
The source resource cannot be on a D3D12_HEAP_TYPE_READBACK heap.
The destination resource cannot be on a D3D12_HEAP_TYPE_UPLOAD heap.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. The source subresource has %u height, %u width, %u depth, and %u samples. The destination subresource has %u height, %u width, %u depth, and %u samples.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. DstX, DstY, and DstZ must be 0. The source subresource %u samples. The destination subresource has %u samples. DstX is %u, DstY is %u, and DstZ is %u.
The source box extends past, at least, one the edges of the source subresource. pSrcBox right is %u, bottom is %u, and back is %u. But, the source subresource only has %u width, %u height, and %u depth.
The source and destination resource formats are incompatible. The source format is %s and the destination format is %s. Some non-obvious formats are considered equivalent: BC[1|4] ~= R16G16B16A16|R32G32, BC[2|3|5|6|7] ~= R32G32B32A32, and R9G9B9E5_SHAREDEXP ~= R32.
The destination region extends past, at least, one of the edges of the destination subresource. When the destination format is %s, the source format is %s, DstX is %u, DstY is %u, DstZ is %u and the effective SrcBox width is %u, height is %u, and depth is %u, the operation requires the destination subresource to have %u width, %u height, and %u depth. But the destination subresource only has %u width, %u height, and %u depth.
If the source resource D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, the destination resource D3D12_RESOURCE_DESC::Flags must also have D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY set, and vice versa.
If the source resource D3D12_RESOURCE_DESC::Flags has D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, the destination resource D3D12_RESOURCE_DESC::Flags must also have D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY set, and vice versa.
Resources with either DXGI_SAMPLE_DESC::Count greater than 1 or that use D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL can only copy the entire subresource at a time, where the subresource dimensions must match. pSrcBox must be NULL, or specify the entire subresource. The source subresource %u samples. The destination subresource has %u samples. pSrcBox left is %u, top is %u, front is %u, and all must be 0; right is %u, bottom is %u, and back is %u. But, the source subresource has %u width, %u height, and %u depth.
Source and Destination subresources cannot be the same when doing a copy operation. Copies with the same resource are allowed as long as the subresource indices are different Src and Dst subresources are both: %d
The destination region extends past the end of the destination resource. When DstOffset is %I64u and NumBytes is %I64u, the operation requires the destination buffer to have %I64u bytes, but it only has %I64u.
The source region extends past the end of the source resource. When SrcOffset is %I64u and NumBytes is %I64u, the operation requires the source buffer to have %I64u bytes, but it only has %I64u.
The destination resource must be D3D12_RESOURCE_DIMENSION_BUFFER. It is %s.
The source resource must be D3D12_RESOURCE_DIMENSION_BUFFER. It is %s.
The subresource range at index %u is invalid. Subresource must be 0 for buffers. Subresource is %u.
The subresource range at index %u is invalid. Subresource must be between 0 and the number of subresources, %u. Subresource is %u.
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.End must be either UINT64_MAX or between Range.Begin+1 and the end of the resource, %I64u. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
The dependent resource is NULL at index %u.
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX when Subresource is D3D12_RESOURCE_BARRIER_ALL_SUBRESOURCES. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
AtomicCopyBufferUINT64 can only be used on UMA architectures.
Both DstOffset and SrcOffset must be naturally aligned to guarentee atomic memory operations. DstOffset = %I64u, SrcOffset = %I64u.
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX for textures with the following layouts: D3D12_TEXTURE_LAYOUT_ROW_MAJOR, D3D12_TEXTURE_LAYOUT_UNKNOWN. Layout is %s, Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. For textures with D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE, both Range coordinates must commonly be aligned to tile size. However, Range.End may be set to UINT64_MAX in order to specify the last subresource tile.Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. Range.Begin must be less than Range.End. Range.End must be either UINT64_MAX or between Range.Begin+1 and the end of the subresource, %I64u. Subresource is %u, Range.Begin is %I64u, and Range.End is %I64u.
The subresource range at index %u is invalid. GetResourceTiling failed when called on it. 
The subresource range at index %u is invalid. The Range must be from 0 to UINT64_MAX for subresources that are within the packed mips. Subresource is %u, which is mip level %u. The resource has %u mip levels which are not packed. Range.Begin is %I64u, and Range.End is %I64u.
ion called with an invalid SDKPaSetSDKConfigurat
ProcessInfo
UTCReplace_AppSessionGuid
schemaVersion
DredWatsonReport
UTCReplace_AppSessionGuid
PartA_PrivTags
schemaVersion
deviceId
DoDredWatsonResult
WerSubmitResult
HasHeapDump
NewCookieNumTries
NewCookieDurationInDays
SM51Usage
UTCReplace_AppSessionGuid
schemaVersion
CreateStateObjectUsage
UTCReplace_AppSessionGuid
schemaVersion
deviceId
adapterLuid
hresult
D3D12EnableExperiments
UTCReplace_AppSessionGuid
schemaVersion
NumFeatures
FeatureGUIDs
OhrEnableResult
BasicEventOnce
UTCReplace_AppSessionGuid
EventsMask
schemaVersion
TextureUINTViewUsage
UTCReplace_AppSessionGuid
schemaVersion
format
TextureLayoutUsage
UTCReplace_AppSessionGuid
schemaVersion
textureLayout
Texture420OpaqueUsage
UTCReplace_AppSessionGuid
schemaVersion
HeapUsage
UTCReplace_AppSessionGuid
schemaVersion
heapFlags
CreateCommandListNodeMask
UTCReplace_AppSessionGuid
schemaVersion
deviceId
appAdapterMask
ImplicitMultiGPU
UTCReplace_AppSessionGuid
schemaVersion
deviceId
ddiDisableFlagSet
implicitPhysicalAdapterMask
RemoveDevice
UTCReplace_AppSessionGuid
schemaVersion
deviceId
reasonHR
adapterLuid
kernelDeviceExecutionState
HasDredPageFaultOutput
HasDredAutoBreadcrumbsOutput
RemoveCommandList
UTCReplace_AppSessionGuid
schemaVersion
deviceId
messageId
message
CreateDevice
UTCReplace_AppSessionGuid
schemaVersion
deviceId
driverType_in
featureLevel_in
hwFeatureLevel_out
adapterLuid
driverDDIVersion
extendedFeatureVersions
image
video
shaderCaching
passExperiment
contentProtectionResources
contentProtectionStreaming
raytracingPrototype
metaCommand
renderPass
downlevelSupport
pinResources
DredSystemEnabled
DredAutoBreadcrumbsEnabled
DredPageFaultEnabled
DredWatsonDumpEnabled
DredBreadcrumbContextEnabled
D3D12SDKVersion
Microsoft.Windows.Graphics.D3D12Dred
Microsoft.Windows.Graphics.D3D12
d3d12core.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.text_hf
.text_hf$x
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.tls$
.tls$ZZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.DDIData
.rsrc$01
.rsrc$02
$f(l.\0-
Z<^8`
 V"|$\&B(B*B,2.20
2\4n8
LookupPrivilegeValueA
CreateDXGIFactory2
WerReportSubmit
WerReportCreate
WerReportSetParameter
WerReportAddDump
WerReportCloseHandle
DXCoreCreateAdapterFactory
d3d12core.dll
D3D12GetInterface
D3D12SDKVersion
_Thrd_hardware_concurrency
?_Xout_of_range@std@@YAXPEBD@Z
?_Throw_C_error@std@@YAXH@Z
?_Xlength_error@std@@YAXPEBD@Z
_Mtx_destroy_in_situ
_Mtx_lock
_Mtx_init_in_situ
_Mtx_unlock
_Cnd_destroy_in_situ
_Mtx_trylock
msvcp_win.dll
_initterm
_initterm_e
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__C_specific_handler
__std_terminate
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vsprintf_s
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__beginthreadex
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__fdclass
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__stricmp
_o__wcsicmp
_o_atoi
_o_ceil
_o_ceilf
_o_free
_o_isdigit
_o_log2
_o_malloc
_o_mbsrtowcs
_o_mbstowcs
_o_terminate
_o_tolower
_o_wcscpy_s
__current_exception
__current_exception_context
memset
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
GetModuleFileNameA
VirtualProtect
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
VirtualFree
GetCurrentProcess
ReleaseSemaphore
GetModuleHandleExW
OutputDebugStringA
GetModuleFileNameW
EventUnregister
LeaveCriticalSection
GetProcessMitigationPolicy
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
GetSystemDirectoryW
RtlCaptureStackBackTrace
MultiByteToWideChar
EventSetInformation
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
QueryPerformanceFrequency
OpenSemaphoreW
HeapReAlloc
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
K32GetModuleInformation
CreateThreadpoolTimer
LoadLibraryW
HeapAlloc
EventRegister
IsApiSetImplemented
GetProcAddress
CreateMutexExW
LocalFree
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
EventWriteTransfer
GetModuleHandleW
FreeLibrary
DebugBreak
GetTickCount
LoadLibraryExW
IsDebuggerPresent
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
IsProcessorFeaturePresent
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
EtwEventWriteTransfer
RegOpenKeyExW
RegGetValueW
RegCloseKey
CLSIDFromString
QuirkIsEnabled
LoadLibraryA
GetSystemInfo
PrivilegeCheck
OpenProcessToken
RegOpenKeyExA
GetWriteWatch
VirtualQuery
UnmapViewOfFile
MapViewOfFile
WerUnregisterCustomMetadata
GetFileVersionInfoSizeW
GetFileVersionInfoW
WerRegisterCustomMetadata
VerQueryValueW
CreateThread
SetEvent
CoTaskMemFree
CoTaskMemAlloc
AllocateLocallyUniqueId
GetFileVersionInfoSizeExW
GetFileVersionInfoExW
CreateEventA
VirtualAlloc
GetNativeSystemInfo
RegQueryValueExA
SetThreadDescription
SetThreadPriority
DuplicateHandle
GetCurrentThread
CreateFileA
GetFileSize
RegEnumKeyExA
ResetEvent
SetThreadpoolWait
RegNotifyChangeKeyValue
CreateThreadpoolWait
WaitForThreadpoolWaitCallbacks
CloseThreadpoolWait
CreateFileW
GetFileTime
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-apiquery-l2-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
ntdll.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-memory-l1-1-1.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-core-version-l1-1-1.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-3.dll
api-ms-win-core-file-l1-1-0.dll
?_Xbad_function_call@std@@YAXXZ
_Thrd_id
?egptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?eback@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?gptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?epptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?pptr@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?pbase@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEBAPEAGXZ
?setf@ios_base@std@@QEAAHHH@Z
?setstate@?$basic_ios@GU?$char_traits@G@std@@@std@@QEAAXH_N@Z
?_Syserror_map@std@@YAPEBDH@Z
?width@ios_base@std@@QEAA_J_J@Z
?fill@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAGXZ
?rdbuf@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAPEAV?$basic_streambuf@GU?$char_traits@G@std@@@2@XZ
?sputc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAAGG@Z
?_Pninc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAPEAGXZ
?widen@?$ctype@G@std@@QEBAGD@Z
?flags@ios_base@std@@QEBAHXZ
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?_Getcat@?$ctype@G@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
??1_Lockit@std@@QEAA@XZ
??0_Lockit@std@@QEAA@H@Z
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?id@?$ctype@G@std@@2V0locale@2@A
??Bid@locale@std@@QEAA_KXZ
?_Osfx@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAXXZ
?sync@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAHXZ
?good@ios_base@std@@QEBA_NXZ
?uncaught_exception@std@@YA_NXZ
?_Unlock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?flush@?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV12@XZ
?tie@?$basic_ios@GU?$char_traits@G@std@@@std@@QEBAPEAV?$basic_ostream@GU?$char_traits@G@std@@@2@XZ
?_Lock@?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAAXXZ
?width@ios_base@std@@QEBA_JXZ
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@_K@Z
?sputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@QEAA_JPEBG_J@Z
?xsputn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEBG_J@Z
??1?$basic_ios@GU?$char_traits@G@std@@@std@@UEAA@XZ
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG0@Z
?setg@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
??1?$basic_streambuf@GU?$char_traits@G@std@@@std@@UEAA@XZ
?imbue@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAXAEBVlocale@2@@Z
?setbuf@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAPEAV12@PEAG_J@Z
?setp@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXPEAG00@Z
?xsgetn@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JPEAG_J@Z
?uflow@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAAGXZ
?gbump@?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAAXH@Z
?showmanyc@?$basic_streambuf@GU?$char_traits@G@std@@@std@@MEAA_JXZ
??1?$basic_ostream@GU?$char_traits@G@std@@@std@@UEAA@XZ
??0?$basic_streambuf@GU?$char_traits@G@std@@@std@@IEAA@XZ
??0?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAA@PEAV?$basic_streambuf@GU?$char_traits@G@std@@@1@_N@Z
??0?$basic_ios@GU?$char_traits@G@std@@@std@@IEAA@XZ
??6?$basic_ostream@GU?$char_traits@G@std@@@std@@QEAAAEAV01@I@Z
?_Throw_Cpp_error@std@@YAXH@Z
_Thrd_join
_Cnd_do_broadcast_at_thread_exit
_Cnd_signal
_Cnd_init_in_situ
_Cnd_wait
_Cnd_broadcast
wcsncmp
strnlen
wcsnlen
wcsrchr
__std_type_info_compare
wcsstr
ResolveDelayLoadedAPI
DelayLoadFailureHook
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
_CxxThrowException
memchr
memcmp
memcpy
memmove
.?AVResultException@wil@@
.?AVexception@CheckedReader@RDAT@hlsl@@
.?AV_com_error@@
.?AVbad_alloc@std@@
.?AVexception@std@@
.?AVbuffer_overlap@CheckedReader@RDAT@hlsl@@
.?AVbuffer_overrun@CheckedReader@RDAT@hlsl@@
.?AVbad_array_new_length@std@@
.?AV<lambda_4624d571017b56a7d18e145eb849261c>@@
.?AV<lambda_de7c2625511a75339d0f1e40893e07bb>@@
.?AV<lambda_e66fad0f604fbfe06add1d62729bd66c>@@
.?AV<lambda_925731a4eaffcccb5f1d0975928aa71d>@@
.?AV<lambda_e82f3d99b1b74f0c3b37f1da01ad484e>@@
.?AV<lambda_89d7a26bf26be98ed95b884088cc638a>@@
.?AV<lambda_40adbc9fa07deb5ef668bfaa338630f9>@@
.?AV<lambda_80b094ce3044dd30644bc562789c6f53>@@
.?AV<lambda_6cb55fc56a425dcfd373016746227919>@@
.?AV<lambda_7d3e0d0bc72dadaab548b2e06ccf54ae>@@
.?AVbad_cast@std@@
.?AVsystem_error@std@@
.?AV_System_error@std@@
.?AVruntime_error@std@@
.?AV<lambda_b65c6fcca25d50d0897268e056a05b0f>@@
.?AV<lambda_eb8a97e0a6955d183344dd5062639e40>@@
.?AV<lambda_e3c7577833eeedba5a939b839a85ef35>@@
.?AV<lambda_3bfdb2808ba56e9680826dfcf6bafb4e>@@
.?AV<lambda_6eda4431c6aaaae69ab3dc36e8270d98>@@
.?AV<lambda_c7d36569a2360db735fe993bb06c5a5d>@@
.?AV<lambda_d9916cbeb8f7e17be18c70b3a0d281ba>@@
.P6AJIPEBX_KAEBU_GUID@@PEAPEAXPEAX@Z
.?AV<lambda_38e60cf59018bb444c5cbd20487e6975>@@
.?AV<lambda_4db03f2ab48e19afb39fc51dcf2eef71>@@
.?AV<lambda_ecc1b7bb1083690d1d227bc4cd039e64>@@
.?AV<lambda_212cd76d73b02ce5d738ec4621ac8f7b>@@
.?AV<lambda_61b24ed9b9cc9e7cd782890725155536>@@
.?AV<lambda_54c206a289603bdf5e96a79c009a5552>@@
.?AV<lambda_6ec4088a4232f5d7ce5752fb3fbab369>@@
.?AV<lambda_74ed42b44d87a450139875e5ba1612db>@@
.?AV<lambda_61a3c4f9118312613482791627ae2364>@@
.?AV<lambda_6b9049a5fb48288e4f2d57807de0a459>@@
.?AV<lambda_594620a4bd5433479e9e269498796c52>@@
.?AV<lambda_97112cb906075e19ca9d597ea021fad8>@@
.?AV<lambda_5c4b98ff37ebed00c60df9db78750b45>@@
.?AV<lambda_4919bd2c3b72ab9017382c4b7137dcb5>@@
.?AV<lambda_47031636167e28feeeaf3f30fac1ade1>@@
.?AV<lambda_671deb1d5c71166b26d5f86104812d7c>@@
.?AVlength_error@std@@
.?AVbad_weak_ptr@std@@
.?AUDeleter@CShaderCache@@
.?AV<lambda_79c516b52db05f295842e3858ef5d16b>@@
.?AVtype_info@@
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Direct3D 12 Core Runtime
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
D3D12Core.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
D3D12Core.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Start
DCStart
Log Always
D3D_FEATURE_LEVEL_9_1
D3D_FEATURE_LEVEL_9_2
D3D_FEATURE_LEVEL_9_3
D3D_FEATURE_LEVEL_10_0
D3D_FEATURE_LEVEL_10_1
D3D_FEATURE_LEVEL_11_0
D3D12DDI_FEATURE_0020_UNKNOWN
D3D12DDI_FEATURE_0020_CORE
D3D12DDI_FEATURE_0020_VIDEO
D3D12DDI_FEATURE_0020_PASS_EXPERIMENT
D3D12DDI_FEATURE_0021_SHADERCACHING
D3D12DDI_FEATURE_0030_CONTENT_PROTECTION_RESOURCES
D3D12DDI_FEATURE_0030_CONTENT_PROTECTION_STREAMING
D3D12DDI_FEATURE_0033_METACOMMAND
D3D12DDI_FEATURE_0043_RENDER_PASS
D3D12_RESOURCE_DIMENSION_UNKNOWN
D3D12_RESOURCE_DIMENSION_BUFFER
D3D12_RESOURCE_DIMENSION_TEXTURE1D
D3D12_RESOURCE_DIMENSION_TEXTURE2D
D3D12_RESOURCE_DIMENSION_TEXTURE3D
D3D12_TEXTURE_LAYOUT_UNKNOWN
D3D12_TEXTURE_LAYOUT_ROW_MAJOR
D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE
D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE
Immutable Heap: Placed Resource (many placed resources can be immutably joined with a fully created heap)
Implicit Heap: Committed Resource
Implicit Resource: An API Heap.
Reserved Resource: Page-mapped to one or more heaps, or nothing at all.
Immutable Resource: Placed texture on a reserved buffer which is page-mapped to one or more heaps, or nothing at all.
DXGI_FORMAT_UNKNOWN
DXGI_FORMAT_R32G32B32A32_TYPELESS
DXGI_FORMAT_R32G32B32A32_FLOAT
DXGI_FORMAT_R32G32B32A32_UINT
DXGI_FORMAT_R32G32B32A32_SINT
DXGI_FORMAT_R32G32B32_TYPELESS
DXGI_FORMAT_R32G32B32_FLOAT
DXGI_FORMAT_R32G32B32_UINT
DXGI_FORMAT_R32G32B32_SINT
DXGI_FORMAT_R16G16B16A16_TYPELESS
DXGI_FORMAT_R16G16B16A16_FLOAT
DXGI_FORMAT_R16G16B16A16_UNORM
DXGI_FORMAT_R16G16B16A16_UINT
DXGI_FORMAT_R16G16B16A16_SNORM
DXGI_FORMAT_R16G16B16A16_SINT
DXGI_FORMAT_R32G32_TYPELESS
DXGI_FORMAT_R32G32_FLOAT
DXGI_FORMAT_R32G32_UINT
DXGI_FORMAT_R32G32_SINT
DXGI_FORMAT_R32G8X24_TYPELESS
DXGI_FORMAT_D32_FLOAT_S8X24_UINT
DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS
DXGI_FORMAT_X32_TYPELESS_G8X24_UINT
DXGI_FORMAT_R10G10B10A2_TYPELESS
DXGI_FORMAT_R10G10B10A2_UNORM
DXGI_FORMAT_R10G10B10A2_UINT
DXGI_FORMAT_R11G11B10_FLOAT
DXGI_FORMAT_R8G8B8A8_TYPELESS
DXGI_FORMAT_R8G8B8A8_UNORM
DXGI_FORMAT_R8G8B8A8_UNORM_SRGB
DXGI_FORMAT_R8G8B8A8_UINT
DXGI_FORMAT_R8G8B8A8_SNORM
DXGI_FORMAT_R8G8B8A8_SINT
DXGI_FORMAT_R16G16_TYPELESS
DXGI_FORMAT_R16G16_FLOAT
DXGI_FORMAT_R16G16_UNORM
DXGI_FORMAT_R16G16_UINT
DXGI_FORMAT_R16G16_SNORM
DXGI_FORMAT_R16G16_SINT
DXGI_FORMAT_R32_TYPELESS
DXGI_FORMAT_D32_FLOAT
DXGI_FORMAT_R32_FLOAT
DXGI_FORMAT_R32_UINT
DXGI_FORMAT_R32_SINT
DXGI_FORMAT_R24G8_TYPELESS
DXGI_FORMAT_D24_UNORM_S8_UINT
DXGI_FORMAT_R24_UNORM_X8_TYPELESS
DXGI_FORMAT_X24_TYPELESS_G8_UINT
DXGI_FORMAT_R8G8_TYPELESS
DXGI_FORMAT_R8G8_UNORM
DXGI_FORMAT_R8G8_UINT
DXGI_FORMAT_R8G8_SNORM
DXGI_FORMAT_R8G8_SINT
DXGI_FORMAT_R16_TYPELESS
DXGI_FORMAT_R16_FLOAT
DXGI_FORMAT_D16_UNORM
DXGI_FORMAT_R16_UNORM
DXGI_FORMAT_R16_UINT
DXGI_FORMAT_R16_SNORM
DXGI_FORMAT_R16_SINT
DXGI_FORMAT_R8_TYPELESS
DXGI_FORMAT_R8_UNORM
DXGI_FORMAT_R8_UINT
DXGI_FORMAT_R8_SNORM
DXGI_FORMAT_R8_SINT
DXGI_FORMAT_A8_UNORM
DXGI_FORMAT_R1_UNORM
DXGI_FORMAT_R9G9B9E5_SHAREDEXP
DXGI_FORMAT_R8G8_B8G8_UNORM
DXGI_FORMAT_G8R8_G8B8_UNORM
DXGI_FORMAT_BC1_TYPELESS
DXGI_FORMAT_BC1_UNORM
DXGI_FORMAT_BC1_UNORM_SRGB
DXGI_FORMAT_BC2_TYPELESS
DXGI_FORMAT_BC2_UNORM
DXGI_FORMAT_BC2_UNORM_SRGB
DXGI_FORMAT_BC3_TYPELESS
DXGI_FORMAT_BC3_UNORM
DXGI_FORMAT_BC3_UNORM_SRGB
DXGI_FORMAT_BC4_TYPELESS
DXGI_FORMAT_BC4_UNORM
DXGI_FORMAT_BC4_SNORM
DXGI_FORMAT_BC5_TYPELESS
DXGI_FORMAT_BC5_UNORM
DXGI_FORMAT_BC5_SNORM
DXGI_FORMAT_B5G6R5_UNORM
DXGI_FORMAT_B5G5R5A1_UNORM
DXGI_FORMAT_B8G8R8A8_UNORM
DXGI_FORMAT_B8G8R8X8_UNORM
DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM
DXGI_FORMAT_B8G8R8A8_TYPELESS
DXGI_FORMAT_B8G8R8A8_UNORM_SRGB
DXGI_FORMAT_B8G8R8X8_TYPELESS
DXGI_FORMAT_B8G8R8X8_UNORM_SRGB
DXGI_FORMAT_BC6H_TYPELESS
DXGI_FORMAT_BC6H_UF16
DXGI_FORMAT_BC6H_SF16
DXGI_FORMAT_BC7_TYPELESS
DXGI_FORMAT_BC7_UNORM
DXGI_FORMAT_BC7_UNORM_SRGB
DXGI_FORMAT_AYUV
DXGI_FORMAT_Y410
DXGI_FORMAT_Y416
DXGI_FORMAT_NV12
DXGI_FORMAT_P010
DXGI_FORMAT_P016
DXGI_FORMAT_420_OPAQUE
DXGI_FORMAT_YUY2
DXGI_FORMAT_Y210
DXGI_FORMAT_Y216
DXGI_FORMAT_NV11
DXGI_FORMAT_AI44
DXGI_FORMAT_IA44
DXGI_FORMAT_P8
DXGI_FORMAT_A8P8
DXGI_FORMAT_B4G4R4A4_UNORM
DXGI_FORMAT_R10G10B10_7E3_A2_FLOAT
DXGI_FORMAT_R10G10B10_6E4_A2_FLOAT
DXGI_FORMAT_D16_UNORM_S8_UINT
DXGI_FORMAT_R16_UNORM_X8_TYPELESS
DXGI_FORMAT_X16_TYPELESS_G8_UINT
DXGI_FORMAT_B5G5R5X1_UNORM
DXGI_FORMAT_B4G4R4X4_UNORM
DXGI_FORMAT_L8_UNORM
DXGI_FORMAT_L16_UNORM
DXGI_FORMAT_L8A8_UNORM
DXGI_FORMAT_R10G10B10A2_UNORM_SRGB
DXGI_FORMAT_R10G10B10X2_UINT
DXGI_FORMAT_R10G10B10X2_SNORM
DXGI_FORMAT_B10G10R10A2_UNORM
DXGI_FORMAT_P208
DXGI_FORMAT_V208
DXGI_FORMAT_V408
SetMarker
BeginEvent
EndEvent
DrawInstanced
DrawIndexedInstanced
ExecuteIndirect
Dispatch
CopyBufferRegion
CopyTextureRegion
CopyResource
CopyTiles
ResolveSubresource
ClearRenderTargetView
ClearUnorderedAccessView
ClearDepthStencilView
ResourceBarrier
ExecuteBundle
Present
ResolveQueryData
BeginSubmission
EndSubmission
DecodeFrame
ProcessFrames
AtomicCopyBufferUINT
AtomicCopyBufferUINT64
ResolveSubresourceRegion
WriteBufferImmediate
DecodeFrame1
SetProtectedResourceSession
DecodeFrame2
ProcessFrames1
BuildRaytracingAccelerationStructure
EmitRaytracingAccelerationStructurePostbuildInfo
CopyRaytracingAccelerationStructure
DispatchRays
InitializeMetaCommand
ExecuteMetaCommand
EstimateMotion
ResolveMotionEstimatorData
SetPipelineState1
InitializeExtensionCommand
ExecuteExtensionCommand
DispatchMesh
EncodeFrame
ResolveEncoderOutputMetadata
Barrier
Marker Log Type None
Marker Log Type Profile
Command List Type Direct
Command List Type Bundle
Command List Type Compute
Command List Type Copy
Command List Type Video Decode
Command List Type Video Process
Command List Type Video Encode
D3D12_HEAP_TYPE_UNKNOWN
D3D12_HEAP_TYPE_DEFAULT
D3D12_HEAP_TYPE_UPLOAD
D3D12_HEAP_TYPE_READBACK
D3D12_HEAP_TYPE_CUSTOM
D3D12_CPU_PAGE_PROPERTY_UNKNOWN
D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE
D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE
D3D12_CPU_PAGE_PROPERTY_WRITE_BACK
D3D12_MEMORY_POOL_UNKNOWN
D3D12_MEMORY_POOL_L0
D3D12_MEMORY_POOL_L1
D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV
D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER
D3D12_DESCRIPTOR_HEAP_TYPE_RTV
D3D12_DESCRIPTOR_HEAP_TYPE_DSV
D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES
D3D12_QUERY_HEAP_TYPE_OCCLUSION
D3D12_QUERY_HEAP_TYPE_TIMESTAMP
D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS
D3D12_QUERY_HEAP_TYPE_SO_STATISTICS
D3D12_QUERY_HEAP_TYPE_VIDEO_DECODE_STATISTICS
D3D12_QUERY_HEAP_TYPE_JPEG
D3D12_QUERY_HEAP_TYPE_PIPELINE_STATISTICS1
D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_NONE
D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_FIELD_BASED
D3D12_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8
D3D12_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16
D3D12_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL
D3D12_SHADER_CACHE_MODE_MEMORY
D3D12_SHADER_CACHE_MODE_DISK
D3D12_VIDEO_ENCODER_FLAG_NONE
D3D12_VIDEO_ENCODER_CODEC_H264
D3D12_VIDEO_ENCODER_CODEC_HEVC
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_MAXIMUM
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_FULL_PIXEL
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_HALF_PIXEL
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_QUARTER_PIXEL
D3D12_VIDEO_ENCODER_HEAP_FLAG_NONE
D3D12_FEATURE_THREADING_DRIVER_CONCURRENT_CREATES
D3D12_FEATURE_DOUBLES_DOUBLE_PRECISION_FLOAT_SHADER_OPS
D3D12_FEATURE_D3D10_X_HARDWARE_OPTIONS_COMPUTE_SHADERS_PLUS_RAW_AND_STRUCTURED_BUFFERS_VIA_SHADER_4_X
D3D10DDI_CREATEDEVICE_FLAG_DISABLE_EXTRA_THREAD_CREATION
D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET
D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL
D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS
D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE
D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER
D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS
D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY
D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY
D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT
D3D12_HEAP_FLAG_SHARED
D3D12_HEAP_FLAG_DENY_BUFFERS
D3D12_HEAP_FLAG_ALLOW_DISPLAY
D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER
D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES
D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES
D3D12_HEAP_FLAG_HARDWARE_PROTECTED
D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH
D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS
D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE
D3D12_COMMAND_LIST_SUPPORT_FLAG_DIRECT
D3D12_COMMAND_LIST_SUPPORT_FLAG_BUNDLE
D3D12_COMMAND_LIST_SUPPORT_FLAG_COMPUTE
D3D12_COMMAND_LIST_SUPPORT_FLAG_COPY
D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_DECODE
D3D12_COMMAND_LIST_SUPPORT_FLAG_VIDEO_PROCESS
D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE
D3D12_SHADER_CACHE_FLAG_NONE
D3D12_SHADER_CACHE_FLAG_DRIVER_VERSIONED
D3D12_SHADER_CACHE_FLAG_USE_WORKING_DIR
CRIMh
WEVTD
CHAN0
Microsoft-Windows-Direct3D12/Analytic
Microsoft-Windows-Direct3D12/Logging
Microsoft-Windows-Direct3D12/PerfTiming
MAPS0
VMAPD
VMAP\
BMAP,
VMAP<
VMAP4
VMAP<
BMAPT
VMAP<
VMAP$
VMAPL
VMAP<
VMAP4
VMAP,
BMAP\
VMAP<
VMAPL
VMAP$
BMAPD
VMAP$
VMAP$
BMAP,
VMAP$
VMAP4
D3D10DDICreateDeviceFlags
D3D12CommandListSupportFlags
D3D12CommandListType
D3D12CommandQueueFlags
D3D12CpuPageProperty
D3D12DescriptorHeapFlags
D3D12DescriptorHeapType
D3D12FeatureSupport
D3D12FrameCodedInterlaceType
D3D12HeapFlags
D3D12HeapType
D3D12MemoryPool
D3D12MotionEstimatorPrecision
D3D12MotionEstimatorSearchBlockSize
D3D12ProtectedResourceSessionFlags
D3D12QueryHeapType
D3D12ResourceDimension
D3D12ResourceFlags
D3D12ResourceHeapType
D3D12ShaderCacheFlags
D3D12ShaderCacheMode
D3D12TextureLayout
D3D12_VIDEO_ENCODER_CODEC
D3D12_VIDEO_ENCODER_FLAGS
D3D12_VIDEO_ENCODER_HEAP_FLAGS
D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE
D3DExtendedFeature
D3DFeatureLevel
DXGIFormat
MarkerAPI
MarkerLogType
TTBLd
EventData
pObject
CchDebugObjectName
DebugObjectName
pObject
CchDebugObjectName
DebugObjectName
EventData
pObject
CchDebugObjectName
DebugObjectName
pObject
CchDebugObjectName
DebugObjectName
TEMP$
EventData
pObject
CchOldDebugObjectName
OldDebugObjectName
CchNewDebugObjectName
NewDebugObjectName
pObject
CchOldDebugObjectName
OldDebugObjectName
CchNewDebugObjectName
NewDebugObjectName
TEMP$
EventData
pObject
CchOldDebugObjectName
OldDebugObjectName
CchNewDebugObjectName
NewDebugObjectName
pObject
CchOldDebugObjectName
OldDebugObjectName
CchNewDebugObjectName
NewDebugObjectName
EventData
pID3D12Device
FeatureLevel
hKMAdapter
hUMAdapter
UMAdapterVersion
hKMDevice
UMDeviceVersion
pID3D12Device
FeatureLevel
hKMAdapter
hUMAdapter
UMAdapterVersion
hKMDevice
UMDeviceVersion
EventData
pID3D12Device
NumExtendedFeatures
ComplexData
pExtendedFeatures
pID3D12Device
NumExtendedFeatures
pExtendedFeatures
ExtendedFeature
Enabled
ExtendedFeatureVersion
TEMP(
EventData
pID3D12Device
pID3D12Resource
hUMResource
Dimension
Width
Height
Depth
MipLevels
ArraySize
PlaneCount
Format
SampleCount
SampleQuality
Layout
Flags
HeapType
pHeap
ImmutableHeapOffset
PlacedAlignment
PlacedSize
NumTilesForResource
NumPackedMips
NumTilesForPackedMips
pImmutableBuffer
ImmutableBufferOffset
pID3D12Device
pID3D12Resource
hUMResource
Dimension
Width
Height
Depth
MipLevels
ArraySize
PlaneCount
Format
SampleCount
SampleQuality
Layout
Flags
HeapType
pHeap
ImmutableHeapOffset
PlacedAlignment
PlacedSize
NumTilesForResource
NumPackedMips
NumTilesForPackedMips
pImmutableBuffer
ImmutableBufferOffset
EventData
SemaphoreHandle
AdjustValue
PresentCount
SemaphoreHandle
AdjustValue
PresentCount
TEMP,
EventData
BufferSize
Buffer
BufferSize
Buffer
EventData
pThis
pThis
EventData
pID3D12CommandList
APISequenceNumber
Metadata
DataSize
pID3D12CommandList
APISequenceNumber
Metadata
DataSize
TEMP<
EventData
CPUFrequency
FirstAPISequenceNumber
pID3D12CommandList
CPUTimeHigh
ThreadIDCount
ThreadIDs
DataSize
CPUFrequency
FirstAPISequenceNumber
pID3D12CommandList
CPUTimeHigh
ThreadIDCount
ThreadIDs
DataSize
TEMPL
EventData
pID3D12DeviceContext
pID3D12DeviceContext
EventData
pID3D12CommandQueue
ContextCount
Contexts
LoopIteration
SubmitCommandCBSequence
FirstAPISequenceNumberHigh
CompletedAPISequenceNumberSize
CompletedAPISequenceNumber
pID3D12CommandList
pID3D12CommandQueue
ContextCount
Contexts
LoopIteration
SubmitCommandCBSequence
FirstAPISequenceNumberHigh
CompletedAPISequenceNumberSize
CompletedAPISequenceNumber
pID3D12CommandList
TEMPp
EventData
hHwQueue
RenderCbSequence
HwQueueProgressFenceId
Precision
HistoryBufferSize
HistoryBuffer
hHwQueue
RenderCbSequence
HwQueueProgressFenceId
Precision
HistoryBufferSize
HistoryBuffer
EventData
InsertionAPISequenceNumber
pID3D12CommandList
Index
MarkerDescription
InsertionAPISequenceNumber
pID3D12CommandList
Index
MarkerDescription
EventData
pID3D12Device
pCommandQueue
ContextCount
UMDContexts
Priority
Flags
NodeMask
pID3D12Device
pCommandQueue
ContextCount
UMDContexts
Priority
Flags
NodeMask
TEMPH
EventData
pID3D12Device
pID3D12CommandList
SequenceNumber
pID3D12Device
pID3D12CommandList
SequenceNumber
TEMP|
P+^?[
EventData
pID3D12CommandQueue
pID3D12CommandList
pID3D12CommandQueue
pID3D12CommandList
EventData
pID3D12Device
pID3D12Fence
pDXGKFence
pID3D12Device
pID3D12Fence
pDXGKFence
TEMP 
$$5X,
EventData
pID3D12CommandQueue
Metadata
DataSize
pID3D12CommandQueue
Metadata
DataSize
EventData
pID3D12CommandQueue
pID3D12CommandQueue
EventData
pID3D12Device
pID3D12CommandAllocator
pID3D12Device
pID3D12CommandAllocator
W?UjB
EventData
pID3D12Device
pID3D12GraphicsPipelineState
pID3D12Device
pID3D12GraphicsPipelineState
TEMP 
EventData
pID3D12Device
pID3D12DescriptorHeap
NumDescriptors
Flags
NodeMask
pID3D12Device
pID3D12DescriptorHeap
NumDescriptors
Flags
NodeMask
EventData
pID3D12Device
pID3D12RootSignature
NodeMask
pID3D12Device
pID3D12RootSignature
NodeMask
EventData
pID3D12Device
pID3D12Heap
SizeInBytes
Alignment
CPUPageProperty
MemoryPoolPreference
CreationNodeMask
VisibleNodeMask
Flags
pID3D12ConjoinedResource
hKMAllocation
hKMResource
pID3D12Device
pID3D12Heap
SizeInBytes
Alignment
CPUPageProperty
MemoryPoolPreference
CreationNodeMask
VisibleNodeMask
Flags
pID3D12ConjoinedResource
hKMAllocation
hKMResource
EventData
pID3D12Device
pID3D12QueryHeap
Count
NodeMask
pID3D12Device
pID3D12QueryHeap
Count
NodeMask
EventData
pID3D12Device
pID3D12CommandSignature
ByteStride
NumArgumentDescs
NodeMask
pID3D12Device
pID3D12CommandSignature
ByteStride
NumArgumentDescs
NodeMask
TEMPt
EventData
pID3D12Device
pID3D12PipelineLibrary
pID3D12Device
pID3D12PipelineLibrary
EventData
pID3D12Device
pID3D12VideoProcessor
NodeMask
pID3D12Device
pID3D12VideoProcessor
NodeMask
TEMPt
EventData
pID3D12Device
pID3D12VideoDecoder
NodeMask
DecodeProfile
BitstreamEncryption
InterlaceFormat
pID3D12Device
pID3D12VideoDecoder
NodeMask
DecodeProfile
BitstreamEncryption
InterlaceFormat
EventData
pID3D12Device
pID3D12VideoDecoderHeap
NodeMask
DecodeProfile
BitstreamEncryption
InterlaceFormat
DecodeWidth
DecodeHeight
MaxDecodePictureBufferCount
FrameRate
BitRate
pID3D12Device
pID3D12VideoDecoderHeap
NodeMask
DecodeProfile
BitstreamEncryption
InterlaceFormat
DecodeWidth
DecodeHeight
MaxDecodePictureBufferCount
FrameRate
BitRate
EventData
pID3D12Device
pID3D12VideoMotionEstimator
NodeMask
InputFormat
BlockSize
Precision
MaxWidthInBlocks
MaxHeightInBlocks
MinWidthInBlocks
MinHeightInBlocks
pID3D12Device
pID3D12VideoMotionEstimator
NodeMask
InputFormat
BlockSize
Precision
MaxWidthInBlocks
MaxHeightInBlocks
MinWidthInBlocks
MinHeightInBlocks
EventData
pID3D12Device
pID3D12VideoMotionVectorHeap
NodeMask
InputFormat
BlockSize
Precision
MaxWidthInBlocks
MaxHeightInBlocks
MinWidthInBlocks
MinHeightInBlocks
pID3D12Device
pID3D12VideoMotionVectorHeap
NodeMask
InputFormat
BlockSize
Precision
MaxWidthInBlocks
MaxHeightInBlocks
MinWidthInBlocks
MinHeightInBlocks
EventData
pID3D12Device
pID3D12VideoEncoder
NodeMask
EncoderFlags
EncoderCodec
InputFormat
MotionEstimationPrecision
pID3D12Device
pID3D12VideoEncoder
NodeMask
EncoderFlags
EncoderCodec
InputFormat
MotionEstimationPrecision
TEMPt
EventData
pID3D12Device
pID3D12VideoEncoderHeap
NodeMask
EncoderHeapFlags
pID3D12Device
pID3D12VideoEncoderHeap
NodeMask
EncoderHeapFlags
TEMPl
EventData
pID3D12Device
pID3D12VideoExtensionCommand
NodeMask
CommandId
pID3D12Device
pID3D12VideoExtensionCommand
NodeMask
CommandId
EventData
pID3D12Device
pObject
NumVirtualAddressInfos
ComplexData
pVirtualAddressInfos
NumKMTInfos
ComplexData
pKMTInfos
pID3D12Device
pObject
NumVirtualAddressInfos
pVirtualAddressInfos
NumKMTInfos
pKMTInfos
PhysicalAdapterIndex
StartAddress
EndAddress
PhysicalAdapterIndex
hKMAllocation
Offset
TEMPl
EventData
pID3D12Device
pID3D12CommandAllocator
pID3D12CommandList
pID3D12Device
pID3D12CommandAllocator
pID3D12CommandList
pUJ1P
EventData
Index
ThreadId
Message
Index
ThreadId
Message
TEMPd
EventData
pID3D12Device
pID3D12CommandPool
pID3D12Device
pID3D12CommandPool
EventData
pID3D12Device
pID3D12CommandRecorder
supportFlags
pID3D12Device
pID3D12CommandRecorder
supportFlags
TEMPh
EventData
pID3D12Device
pID3D12CommandRecorder
pID3D12CommandList
pID3D12Device
pID3D12CommandRecorder
pID3D12CommandList
EventData
hKMResource
hUMSharedResource
hKMResource
hUMSharedResource
TEMPd
EventData
pID3D12Device
pID3D12StateObject
pID3D12Device
pID3D12StateObject
EventData
pID3D12Device
pID3D12MetaCommand
CommandId
pID3D12Device
pID3D12MetaCommand
CommandId
TEMPd
EventData
pID3D12Device
pID3D12ProtectedResourceSession
NodeMask
Flags
pID3D12Device
pID3D12ProtectedResourceSession
NodeMask
Flags
TEMPt
EventData
pID3D12Device
pID3D12LifetimeTracker
pID3D12Device
pID3D12LifetimeTracker
TEMPt
EventData
pID3D12Device
pID3D12SchedulingGroup
pID3D12Device
pID3D12SchedulingGroup
EventData
pID3D12Device
pID3D12Decoder
ComplexData
CurrPic
NumRefPicListEntries
ComplexData
RefPicList
pID3D12OutputTexture2D
OutputSubresource
pReferenceTexture2D
ReferenceSubresource
NumReferences
ComplexData
ReferenceTexture2Ds
ComplexData
Subresource Indicies
ComplexData
Reference Decoder Heaps
pID3D12Device
pID3D12Decoder
CurrPic
NumRefPicListEntries
RefPicList
pID3D12OutputTexture2D
OutputSubresource
pReferenceTexture2D
ReferenceSubresource
NumReferences
ReferenceTexture2Ds
Subresource Indicies
Reference Decoder Heaps
Index7Bits
AssociatedFlag
bPicEntry
Index7Bits
AssociatedFlag
bPicEntry
ppTexture2Ds
pSubresources
ppHeaps
TEMPP
EventData
EventData
EventData
pID3D12Device
pID3D12Device
EventData
pID3D12CommandQueue
CommandListCount
pID3D12CommandList
pID3D12CommandQueue
CommandListCount
pID3D12CommandList
TEMPl
EventData
pID3D12CommandList
pID3D12Resource
pID3D12CommandList
pID3D12Resource
EventData
Identifier
Flags
MaximumInMemoryCacheSizeBytes
MaximumInMemoryCacheEntries
MaximumValueFileSizeBytes
Version
Identifier
Flags
MaximumInMemoryCacheSizeBytes
MaximumInMemoryCacheEntries
MaximumValueFileSizeBytes
Version
MPeY-E
EventData
pCommandList
pCommandQueue
BreadcrumbCount
LastBreadcrumbValue
Breadcrumbs
BreadcrumbContextsCount
BreadcrumbIndex
ContextString
pCommandList
pCommandQueue
BreadcrumbCount
LastBreadcrumbValue
Breadcrumbs
BreadcrumbContextsCount
BreadcrumbIndex
ContextString
eY$QE
EventData
pID3D12Device
pID3D12TrackedWorkload
hKMTrackedWorkload
pID3D12Device
pID3D12TrackedWorkload
hKMTrackedWorkload
PRVAP
Microsoft-Windows-Direct3D12
win:Info
win:Start
win:Stop
win:DC_Start
LEVL8
win:LogAlways
Device
D3DSupplemental
Destruction
Marker
RuntimeMarker
RuntimeDroppedCall
CustomDriverMarker
CommandQueue
CommandList
ExecuteCommandList
Fence
CommandAllocator
GraphicsPipelineState
DescriptorHeap
RootSignature
QueryHeap
CommandSignature
PipelineLibrary
VideoDecoder
VideoProcessor
Resource
AllocationInfo
CommandAllocatorUnacquire
VideoDecoderHeap
ExtendedFeatureVersion
JournalEntry
CommandPool
CommandRecorder
CommandRecorderAcquire
CommandRecorderUnacquire
CreateHeapSharedHandle
StateObject
MetaCommand
ProtectedResourceSession
LifetimeTracker
SchedulingGroup
VideoMotionEstimator
VideoMotionVectorHeap
DecodePictureLists
BackgroundWork
VideoExtensionCommand
HistoryBufferCompletion
TrackWrittenResource
ShaderCacheSession
TrackedWorkload
VideoEncoder
VideoEncoderHeap
Names
Devices
Resources
Markers
RenderOperationMarkers
DriverCustomMarkers
BundleMarkers
ObjectLifetime
JournalEntries
DecodeInfo
EVNTh
hiQTc
z.l}4
;?Ngm
{.:0T
L@.M$
!yMA"^V
ks63lu
U7'!v
J85$[R
e(sWWwZ
0?Z`R 
I[.nt
i!~u[
%\AlaO?
Kj?>x
hEo5dm
)#e@q
Q1!AZ
n!+Racq
1sYj~w
8>?K4c=
g>>Z]D
 V_hf
*$V}l
~K04gB;
Sw|; 0;
kI|mh
+I#Eu,
s1CFA
s-Sy,0N
F;_MY 
2uUIZ?
CEo,jvX
*WvJO
GFJe.
3N,hvT
I|_Q~
bJB6Q
FpE=9;"
3RHUQ
[V[y.
l"R|q
Ueye:
@#"YL
3jI|k]
ImCVp
z^Qeo;%
7Hfr=
+f|Cn
G_~@H
YE#pa
Q7^3k
Pum'R
C%P i
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,531ga63upCaKfOWSkzoQ6yKuCQ7U8JeuHOM17c7fYm8=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
-)aTGN<
UymoN
20220506222303.878Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190515Z
230228190515Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service0
U-/*b
F,n7D
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
N"4A>
jg{i8c
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220506195700Z
20220507195700Z0t0:
1,0*0
1(0&0
4MFFKz
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
t/m4(#
TAC`KW
