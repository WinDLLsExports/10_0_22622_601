!This program cannot be run in DOS mode.
0Rich
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
q*Z~:
q*Z~:
SVWAVH
8A^_^[
w|H9{
;@8:t
D$HE3
SVWAVH
\$px#H+
8A^_^[
VWAVH
\$px I+
@A^_^
WAVAWH
\$ A;
0A_A^_
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
\$ UH
 H3E H3E
LcA<E3
HcQ<H
\$ UVWATAUAVAWH
D9l$(|
D$,D8-
t(D8-
UVWAVAWH
D9|$(
t(D8=
A_A^_^]
tAfA9(t;H
fA9,@u
p AWH
x AVH
q*Z~:
UVWAVAWH
H!\$8H
H!\$@I
A_A^_^]
UVWAVAWH
H!\$8H
H!\$@I
H!_(H!_0H!_8H!_@M
A_A^_^]
l$ VWAVH
L$0E3
L$0fD
L$ UVWATAUAVAWH
pA_A^A]A\_^]
D97t<A
A8_8t
x AVH
\$ UVWAVAWH
t,D8="
L9{Hu
A_A^_^]
\$ VWAVH
D$0H;
u%H!\$8H
D$@E3
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
@A_A^A]A\_^]
L$ SUVWH
L$hH+
f9,Cu
(_^][
WAVAWH
}0H+}(H
0A_A^_
@SUVWAVAWH
{8D8{@uXL9?u$E3
L$8H3
HA_A^_^][
p WAVAWH
 A_A^_
VWAVH
 A^_^
WATAUAVAWH
T$0L+
A_A^A]A\_
x UATAUAVAWH
C @8}Wu
A_A^A]A\]
UVWATAUAVAWH
T$dfD
D$hfE
D+D$x
D+D$xD
A_A^A]A\_^]
t$ WH
t$ WH
WAVAWH
rHfD9?w
C9fD9?u,
 A_A^_
WATAUAVAWH
f9,Au
f9,Ou
fD9t}
 A_A^A]A\_
WATAUAVAWH
f9,Qu
H9/sDH
 A_A^A]A\_
L$ SVWH
L$ SVWAVH
(A^_^[
t$ WAVAWH
0A_A^_
VWATAVAWH
 A_A^A\_^
x UAVAWH
T$0H+
L$0fD
HcD$$HcL$ H
A_A^]
{ ATAVAWH
 A_A^A\
x AVH
WAVAWH
 A_A^_
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PL;
A_A^]
t$ WH
kPt3L
WAVAWH
u$D9=
t&D9=OG
u$D9=$G
y$D9=
y;D9=
y-D9=.F
@A_A^_
WAVAWH
D9={D
D9=YD
u$D9=
t&D9=
u$D9=
r&D9=
y$D9=MC
y;D9=
y-D9=
D9=,B
y;D9=
p+X4'6T
D9=TA
@A_A^_
WAVAWH
D9=+@
u$D9=
t&D9=
u$D9=
y$D9=V?
y;D9=
p3V|s
y-D9=
D9=B>
D9={=
@A_A^_
WAVAWH
u$D9=
t&D9=
u$D9=|<
y$D9=J<
y;D9=
y-D9=
D9=6;
D9=o:
@A_A^_
UAVAWH
@A_A^]
qcPZt
qcPZt
UAVAWH
@A_A^]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ SVWH
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
qr]P+
q+X4'6T
q3V|s
9qL~,3
thLcG
x ATAVAWH
0A_A^A\
q3UZ"
` AVH
q3UZ"
VWATAVAWH
)D$ f
0A_A^A\_^
VWATAVAWH
)D$ f
0A_A^A\_^
qcPZt
x ATAVAWH
H;{ r
 A_A^A\
t$ WAVAWH
0A_A^_
VWAVH
H!{P3
 A^_^
x AVH
x ATAVAWH
H+Y E3
 A_A^A\
WAVAWH
A;FLu
 A_A^_
x ATAVAWH
HcoPH
0A_A^A\
AP;AL}
L$ USVWAVAWH
|$ Hc
A_A^_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
SUVWATAUAVAWH
9w|~ME3
hD9%p
8A_A^A]A\_^][
|E;wP
|$ AVH
VWAVH
0A^_^
|$ AVH
OHcFPH
9qL~,3
9qL~,3
9qL~,3
tNLcC
thLcG
thLcG
thLcG
thLcG
t$ WAVAWH
L$xH3
A_A^_
VWAVH
 A^_^
SVATAUAVAWH
HA_A^A]A\^[
` AVH
VWATAVAWH
)D$ f
0A_A^A\_^
VWATAVAWH
)D$ f
0A_A^A\_^
VWATAVAWH
)D$ f
0A_A^A\_^
|$ AVH
x AVH
p WATAUAVAWH
0A_A^A]A\_
VWAVH
0A^_^
VWAVH
@A^_^
UVWATAUAVAWH
 A_A^A]A\_^]
WAVAWH
@A_A^_
SVATAUAVAWH
HA_A^A]A\^[
UVWATAUAVAWH
t$PA!^PI
A_A^A]A\_^]
VWATAVAWH
)D$ f
0A_A^A\_^
t$ WATAUAVAWH
t'D9-j
<GfD;/u
u'D9-
 A_A^A]A\_
UVWATAUAVAWH
t$xA!^PI
A_A^A]A\_^]
ATAVAWH
(D$ f
@A_A^A\
VWAVH
(D$ H
@A^_^
x AVH
t0D95-
t;D95
\$ UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
D9%w|
c8t1L
D9%9|
y<D9%
D9%~z
0A_A^A\
UWAVH
t'D95
D!t$ L
PA^_]
WAVAWH
0A_A^_
x AVH
x AVH
x ATAVAWH
A_A^A\
WATAUAVAWH
t'D95Rj
u'D95
0A_A^A]A\_
UWAUAVAWH
psXxh
A_A^A]_]
@wItA
u"A9B,
!\$ L
E9Q(H
E9Q,H
@VWATAVAWH
@A_A^A\_^
VWAVH
|$`H!|$XH
H!t$hH
0A^_^
WAVAWH
\$XD;
 wJt?A
wFt-A
0A_A^_
l$ VWAVH
0A^_^
UVWATAUAVAWH
t'D95
6D9%4T
@A_A^A]A\_^]
UVWATAUAVAWH
@A_A^A]A\_^]
UVWAVAWH
595DP
0A_A^_^]
l$ VWAVH
0A^_^
l$ VWAVH
0A^_^
UVWAVAWH
uDD9=
D9=`J
 A_A^_^]
VWAVH
t$`H9w
0A^_^
qcPZt
qcPZt
WATAUAVAWH
 A_A^A]A\_
t$ WAVAWH
0A_A^_
x AVH
UATAUAVAWH
wpt$D
D9%`A
D9%4A
4FfD;&u
4FfD;&t&
4FfD;&u
D9%a?
4FfD;&u
t'D9%,>
D9%s=
uHD9%x<
D9%(<
D9%M;
tSD9%
uUD9%5:
yZD9%
D9%T9
D9%;9
A_A^A]A\]
WAVAWH
{PH!{`H
 A_A^_
WAVAWH
D$hH!_`H!_hH!_pH!_x
 A_A^_
WATAUAVAWH
 D9%>3
 D9%r2
 A_A^A]A\_
VWAUAVAWH
0A_A^A]_^
L$@H3
x ATAVAWH
A_A^A\
WAVAWH
A_A^_
trH;x
x AVH
p;WtC
WATAUAVAWH
T$(E3
A_A^A]A\_
@USVWAVAWH
A_A^_^[]
x AVH
WAVAWH
H+Y E3
 A_A^_
WAVAWH
A;FLu
 A_A^_
WAVAWH
A;FLu
 A_A^_
WAVAWH
A;FLu
 A_A^_
WAVAWH
A;FLu
 A_A^_
VWAVH
 A^_^
t#9-D
WAVAWH
0A_A^_
VWAVH
 A^_^
x AVH
^0;~,snH
x AVH
WAVAWH
0A_A^_
VWAVH
L$8H3
@A^_^
@USVWAUAVAWH
A_A^A]_^[]
ATAVAWH
 A_A^A\
x AVH
x ATAVAWH
0A_A^A\
WAVAWH
 A_A^_
AP;AL}
AP;AL}
AP;AL}
AP;AL}
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ SVWAVH
(A^_^[
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
WATAUAVAWH
|$H9-
A_A^A]A\_
WAVAWH
0A_A^_
t$ WAVAWH
0A_A^_
WAVAWH
 A_A^_
l$ VWATAVAWH
D$8E3
t'D9%_
tkD9%
fF9$Au
fF9$Au
fF9$Au
u"D9%
L$8H3
A_A^A\_^
qsY:q
t&9=-
qh^0`'
UWATAVAWH
(t$`L
A_A^A\_]
VWAVH
0A^_^
u'H9{`t!9=
u'H9{pt!9=
t#9=,
t#9=\
UVWATAUAVAWH
@A_A^A]A\_^]
t$ WATAUAVAWH
t'D9-
<GfD;/u
u'D9-i
yAD9-
 A_A^A]A\_
u'H9{`t!9=
u'H9{ht!9=
VWAVH
u;9-c
.9o$t
G,9l8
 A^_^
WAVAWH
@A_A^_
u'H9{xt!9=
|E;w(w@H
u'H9{xt!9=
u'H9{ht!9=
UWATAVAWH
(t$`L
A_A^A\_]
t#9=\
t#9=L
u'H9{pt!9=
t#9=L
\Z(&|
t#9=|
UWAVH
u/95]
@A^_]
UWAVH
u/95j}
@A^_]
u'H9{ht!9=[{
p WATAUAVAWH
t'D9-
M9/u'D9-"z
u$D9-
u"D9-
D9-qx
 A_A^A]A\_
q Z0X&
t#9=|u
t!9=5u
t#9=lt
t$ WH
UWAVH
D95Ep
y.D95
y"D95
D95uo
WAVAWH
0A_A^_
9qL~,3
thLcG
VWATAVAWH
)D$ f
0A_A^A\_^
x AVH
t$ WATAUAVAWH
)D$ f
0A_A^A]A\_
WAVAWH
D9=n^
0A_A^_
@SVWATAUAVAWH
(9=^Z
U9='Z
L$xH3
A_A^A]A\_^[
WAVAWH
A;FLu
 A_A^_
AP;AL}
L$ USVWAVAWH
|$ Hc
A_A^_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
UWAVH
VWAVH
0A^_^
H9_Xu!9
t$ UWAVH
q!^Tm
UWAVH
9qL~,3
9s|~,3
thLcG
thLcG
H9:t-
qsZ<x
VWATAVAWH
)D$ f
0A_A^A\_^
|$ AVH
L$@E3
x AVH
VWATAVAWH
)D$ f
0A_A^A\_^
WAVAWH
0A_A^_
{hH9/tjH
H9kxtN
WAVAWH
0A_A^_
x AVH
x AVH
H!{hH
H!{PH
D9K(v0H
D;K(r
WAVAWH
0A_A^_
@USVWATAUAVAWH
L$PD9-
D$@Hc
tD9-m
/D9-(
A_A^A]A\_^[]
WAVAWH
A;FLu
 A_A^_
WAVAWH
A;FLu
 A_A^_
VWATAVAWH
9o(v>
 A_A^A\_^
q)V8_
AP;AL}
AP;AL}
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
x UATAUAVAWH
u7D9%
BD9%t
A_A^A]A\]
!\$ L
VWAVH
0A^_^
VWAVH
0A^_^
L$ USVWAVAWH
|$ Hc
A_A^_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
x UAVAWH
A_A^]
q2UZA
UWAVH
UVWATAUAVAWH
u$D95*
y6D95
@A_A^A]A\_^]
UVWATAUAVAWH
u&D9=
u*D9=
9~tt~E
^`!~tH
uE9=(
PA_A^A]A\_^]
UVWATAUAVAWH
u$D9=
y4D9=
@A_A^A]A\_^]
VWAVH
0A^_^
t$ WH
@USVWATAVAWH
PA_A^A\_^[]
u#95o
x AVH
SVWAUAVAWH
t$(D;
xA_A^A]_^[
VWAVH
 A^_^
WAVAWH
 A_A^_
x AVH
t,D95.
tPD95
y D95
x AWH
qjUtR
UVWATAUAVAWH
t$D9-C
u'D9-
u9D9-
H9*t=A
D$0E3
@A_A^A]A\_^]
t$ WAVAWH
u&9=s
0A_A^_
WAVAWH
0A_A^_
SVWAUAVAWH
A_A^A]_^[
@USVWATAVAWH
u'D95
A_A^A\_^[]
x AVH
x AVH
WAVAWH
0A_A^_
x AVH
uTD9G`u'D9
x ATAVAWH
A_A^A\
l$ VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
y=9=c~
0A^_^
VWAVH
0A^_^
WATAUAVAWH
t&9-lz
C(9ktu8H
 A_A^A]A\_
WAVAWH
A_A^_
WAVAWH
psXxh
@A_A^_
t$ WH
L$ H;
L$0H3
@USVWATAVAWH
y-D9%
psXxh
D9%^q
D9%Lq
u*D9%
y.D9%
EX9EHu
9EPt H
`A_A^A\_^[]
D9%yn
WAVAWH
|$h9|$P|
0A_A^_
t$ WH
qcTXZ
qcPZt
us9D$0t99
x UATAVH
D;3v,H
t#95Ah
A^A\]
t$ WATAUAVAWH
D9->d
D9-Eb
"D9-(b
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
VWAVH
 A^_^
9Ypu#9
t$ WH
x AVH
L$0H3
x AVH
UVWATAUAVAWH
y'D9=
D9="S
D9=}R
D9=PP
D9=nO
D9=$O
A_A^A]A\_^]
` UAVAWH
A_A^]
@USVWAVH
A^_^[]
x AVH
L$@H3
L$0H3
L$0H3
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
@USVWATAVAWH
D9=T;
D9}Hu
D9=y:
y@D9=N:
0A_A^A\_^[]
D$`E3
WAVAWH
@A_A^_
Qp0? 
q3T0I
x AVH
qx]|M
9qL~,3
thLcG
t$ UWAUAVAWH
A_A^A]_]
qHT<c
VWATAVAWH
)D$ f
0A_A^A\_^
VWATAVAWH
)D$ f
0A_A^A\_^
VWAVH
\$@t 
 A^_^
VWAVH
|$Ht#9
 A^_^
VWAVH
 A^_^
qcPZt
WAVAWH
A;FLu
 A_A^_
AP;AL}
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
x UATAUAVAWH
u595G
A_A^A]A\]
l$ VWAVH
0A^_^
x AVH
WAVAWH
@A_A^_
WAVAWH
u$D9=
t&D9=
r&D9=
y>D9=
@A_A^_
WAVAWH
u$D9=J
t&D9=
y>D9=
@A_A^_
x AVH
WAVAWH
@A_A^_
WAVAWH
@A_A^_
x AVH
WAVAWH
@A_A^_
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
qy]8R
|$ AVH
9sd~9E3
@SUVWATAUAVAWH
\$p9~d
(A_A^A]A\_^][
D$xE3
D$@E3
SVWAVH
(A^_^[
t$ WH
VWATAVAWH
)D$ f
0A_A^A\_^
9sd~>3
t$ WAVAWH
0A_A^_
l$ VWATAVAWH
9FPt/
 A_A^A\_^
l$ VWATAVAWH
9FPt&9=x
u)9=-
 A_A^A\_^
VWAVH
0A^_^
x ATAVAWH
 A_A^A\
T$8H9
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
Y4[&i
qCQ:S
VWAVH
0A^_^
WAVAWH
0A_A^_
t$ WATAUAVAWH
D9oht6H
D9-Kp
y D9-Io
D9-in
A_A^A]A\_
UWATAVAWH
D9%cg
A_A^A\_]
x ATAVAWH
9_pu{
 A_A^A\
WAVAWH
 A_A^_
x ATAVAWH
9Xhte
 A_A^A\
x ATAVAWH
9XXte
 A_A^A\
x ATAVAWH
9X`te
 A_A^A\
x ATAVAWH
tn9_pui9XP
 A_A^A\
q(_<L
UVWAVAWH
y/D9=;S
D9=)S
A_A^_^]
x AVH
VWAUAVAWH
0A_A^A]_^
\$ UVWATAUAVAWH
t'D9-
D9-~J
y4D9-/J
y/D9-
A_A^A]A\_^]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
VWATAVAWH
u(D95
KSQLA
 A_A^A\_^
x AVH
t$ WH
VWAUAVAWH
uMD9=
D9=y<
tlD9-
D$ E3
D9-l:
D9-K:
D9=":
@A_A^A]_^
VWAVH
 A^_^
y#9-[4
x AVH
x AVH
tq9_pul9XDtO
x AVH
to9_pujH
UWAVH
t&9-r
D$XfA
H9l$Xt
 A^_]
x AVH
tq9_pul9XLtO
x AVH
t&9-h
y#9-'
x AVH
tN9_puI9X<t?
t&9=C
UWAVH
t&9-"
D$XfA
H9l$Xt
 A^_]
UWAVH
D$XfA
H9l$Xt
 A^_]
x AVH
x AVH
y-9-B
UVWAVAWH
y/D9=
A_A^_^]
x AVH
t&9opu!9-R
x AVH
x AVH
x AVH
x AVH
|$ ATAVAWH
u59=d
D$H9=
d$PD;%p
A_A^A\
VWATAVAWH
 A_A^A\_^
WATAUAVAWH
uT9=S
A_A^A]A\_
9|$hu 9=U
t#9=t
TINIt#9=!
D$XH;
HQERA
L$TA+
UVWATAUAVAWH
u$D9=
GD9=m
l$ VWAVH
 A^_^
t$ WH
VWAVH
 A^_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
VWAVH
 A^_^
t$ WAVAWH
 A_A^_
@USVWAVH
A^_^[]
u+9=|
uD9=+
SVWATAUAVAWH
L$`H;
|$TK9|
8TINIt
t-9=c
t 9=;
u19=W
\$@E3
9|$Pt
A_A^A]A\_^[
x AVH
x AVH
qcPZt
qcPZt
UWAVH
H9\$@
L$HE3
t_9\$HtY
 A^_]
@USVWAVH
A^_^[]
t$ WATAUAVAWH
A_A^A]A\_
@USVWATAVAWH
A_A^A\_^[]
@USVWAVAWH
A_A^_^[]
@USVWATAVAWH
A_A^A\_^[]
@USWH
\$ UVWH
\$ UVWAVAWH
A_A^_^]
@USWH
@USVWAVH
A^_^[]
\$ UVWH
t$ UWAWH
\$ UVWH
@USVWATAUAVAWH
D!d$$D!d$(L
D9-ko
D9-Ym
D9-/m
A_A^A]A\_^[]
fD9,Fu
\$ UH
@USVWAVAWH
A_A^_^[]
\$ UH
@USVWATAUAVAWH
D$ E3
A_A^A]A\_^[]
UVWAVAWH
D9=Rd
fD9=Yc
A_A^_^]
D9=Sb
@USVWAVAWH
A_A^_^[]
\$ UVWH
UWAVH
@USVWATAVAWH
A_A^A\_^[]
\$ UVWH
x ATAVAWH
@A_A^A\
@USVWAVH
A^_^[]
L$@E3
@USVWAVH
A^_^[]
x UATAUAVAWH
D9-6U
"D9-NS
D9-$S
A_A^A]A\]
TINIH
TINIH
ulD9-
BD9-BP
\$ UVWH
@USWH
E5tsH
\$ UVWATAUAVAWH
D9-wI
D9-XI
D9->I
A_A^A]A\_^]
fD9,Fu
@USWH
|$ UH
@USWH
@USWH
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
0A_A^_
t$ AWH
WAVAWH
 A_A^_
\$ UVWH
D$ E3
H USVWATAUAWH
A_A]A\_^[]
@USVWH
X_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
tLH9=\
t$ WH
uUD95
WAVAWH
0A_A^_
SVWAVAWH
 A_A^_^[
@USVWAVH
A^_^[]
SVWAVH
HA^_^[
 !"#$%&
,-./0
12345
86887
x AVH
@USVWAVAWH
A_A^_^[]
@USVWAVH
A^_^[]
tRLcC
\$ VWATAVAWH
L$0E3
t&D9%
D9c`u$D9%|
_L9cHt$D9%R
u8D9%
L$PH3
`A_A^A\_^
VWATAVAWH
)D$ f
0A_A^A\_^
t$ WAVAWH
!\$(!\$,H
0A_A^_
L$HH3
WAVAWH
A;FLu
 A_A^_
AP;AL}
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
H!{HH
@USVWAVH
`A^_^[]
L$ USVWATAUAVH
A^A]A\_^[]
thLcG
t$ UWATAVAWH
d$@E3
d$8E3
fD9 t
d$@E3
d$@E3
u,D9%
A_A^A\_]
u+9-B
VWATAVAWH
y"D9=
|$@E3
|$8E3
A_A^A\_^
VWAVH
y"D95
|$@E3
t$8E3
VWAVH
|$@E3
t$8E3
|$ AVH
x AVH
u3D95=
UWAVH
p[SzK/
q"]~|'
UWAVH
p[SzK/
VWAVH
 A^_^
UAVAWH
t'D9=
psXxh
xbD9=L
A_A^]
WATAUAVAWH
k0t+L
y>D9-@
y?D9-
0A_A^A]A\_
x ATAVAWH
u)D9%v
u&D9%
y>D9%X
uYD9%
@A_A^A\
WAVAWH
0A_A^_
WAVAWH
 A_A^_
UWAVH
@A^_]
u#95`
t$(E3
t$ E3
qcPZt
qcPZt
9klu89-
y29-^
tE9jP
x AVH
WATAUAVAWH
A_A^A]A\_
up9{lt/
9_lu&9
H9yxtA
u#9='
x AVH
|$ UAVAWH
(H!u A
ui95t
@A_A^]
@USVWAVAWH
A_A^_^[]
WAVAWH
A;FLu
 A_A^_
UWATAUAVH
A^A]A\_]
UATAUAVAWH
D9.u5H
y)D9-u
t}D9.u
D9.tU
D9-n}
D9-K}
A_A^A]A\]
t$ WH
VWATAVAWH
t'D9%
y'D9%
D9d$ t'D9%bw
u'D9%
t'D9%
D9fdu$D9%
t$D9%cv
y4D9%!v
D$xE3
D9%wu
0A_A^A\_^
@USVWAVAWH
A_A^_^[]
AP;AL}
WATAUAVAWH
D9odu'D9-"p
t'D9-
M9.tBH
A_A^A]A\_
WATAUAVAWH
9_du&9
uUD95Wk
A_A^A]A\_
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
H USVWATAUAWH
A_A]A\_^[]
x AVH
D95ab
D9wdu$D95(b
t8D95
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
VWAVH
D$hE3
L$hH;
0A^_^
x AVH
UAVAWH
p[SzK/
A_A^]
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
x AVH
VWAVH
*wQtG
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
q:S0C
UWATAVAWH
t'D9%
u6D9%o3
y5D9%
D9%&2
u(D9%
u9D9%V1
M9&u"D9%
0A_A^A\_]
VWATAVAWH
9{lu#9=
h0u59=
t#9=%.
 A_A^A\_^
@USVWAVH
A^_^[]
qASrD
x AVH
x AVH
x AVH
UAVAWH
p[SzK/
A_A^]
9{lu29=
UVWAVAWH
9wdu595Z
0A_A^_^]
UWATAVAWH
t'D9%
psXxh
x_D9%|
t$D9%]
y>D9%
y7D9%
A_A^A\_]
WAVAWH
du$D9=
t5D9={
 A_A^_
x AVH
WAVAWH
du$D9=
t5D9=
 A_A^_
x AVH
WAVAWH
du$D9=E
t5D9=
 A_A^_
WAVAWH
du$D9=
t5D9=
 A_A^_
WAVAWH
du$D9=
t5D9=
 A_A^_
x AVH
x AVH
x AVH
t$ WAVAWH
9}pt$
 A_A^_
VWAVH
 A^_^
WATAUAVAWH
u&95;
 A_A^A]A\_
q8_zk
x AVH
t$ UWAVH
9Opt$
UWATAVAWH
D9cdu$D9%
t$D9%W
t8D9%*
 D9%:
A_A^A\_]
L$ UVWATAUAVAWH
u!D9-
 A_A^A]A\_^]
L$ USVWAVAWH
|$ Hc
A_A^_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
x AVH
H!nPH
L$ USVWAVAWH
|$ Hc
A_A^_^[]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAVAWH
|$ Hc
A_A^A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
UWAVH
qX^4g
t$ UWAVH
x UATAUAVAWH
y9D9%0
A_A^A]A\]
H USVWATAUAWH
A_A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
p0\:#7
qcPZt
9qL~,3
thLcG
SVWAVAWH
D$pH9
t$xI9
|$hI9
0A_A^_^[
VWATAVAWH
)D$ f
0A_A^A\_^
SVWATAUAVAWH
t$`A9^0u'9
d$XE;f0
\$ E3
A_A^A]A\_^[
s WAVAWH
\$ E3
A_A^_
WATAUAVAWH
0A_A^A]A\_H
x ATAVAWH
t$ E3
0A_A^A\H
qi[P%6
q[SzK/
VWAVH
0A^_^
VWATAVAWH
)D$ f
0A_A^A\_^
VWAVH
0A^_^
x AVH
UVWATAUAVAWH
u%954v
A_A^A]A\_^]
t$ WAVAWH
0A_A^_
WAVAWH
{0D9s,
,vM;|
0A_A^_
WAVAWH
0A_A^_
t$ WATAUAVAWH
t&D9-Re
y$D9-
t'D9-
D9-6d
tBD9-
D9-ec
tBD9-%c
D9-`b
tBD9-
tBD9-
A_A^A]A\_
x AWH
x AVH
WAVAWH
A;FLu
 A_A^_
u29-!V
SVWATAUAVAWH
`A_A^A]A\_^[
\$ UVWATAUAVAWH
D9-1Q
u4D9-
A_A^A]A\_^]
x AVH
UVWATAUAVAWH
EX9E@
`A_A^A]A\_^]
x AVH
SVWATAUAVAWH
t$@9=
`A_A^A]A\_^[
AP;AL}
x AVH
H USVWATAUAWH
A_A]A\_^[]
WATAUAVAWH
@A_A^A]A\_
l$ VWAVH
u&9=)7
0A^_^
l$ VWAVH
0A^_^
qAV2t'
x AVH
t#9=`2
UVWAVAWH
u&9=^0
0A_A^_^]
x ATAVAWH
0A_A^A\
x AVH
SVWAVH
(A^_^[
x AVH
G,9G0s$
x AVH
9~,vh
A9=Z'
K8H99t
VWAVH
VWAVH
0A^_^
WAVAWH
 uFD9y
 A_A^_H
SVAVH
 A^^[
9C0v!H
K8H91t
9{,v#
L$ USVWATAUAVH
|$ Hc
A^A]A\_^[]
H USVWATAWH
A_A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
L$ USVWATAUAVH
A^A]A\_^[]
x AVH
8RIFFuw
WAVEuoK
=datau
tPL9A
D$(E3
{@t H
x AVH
x AVH
p AWH
x AVH
x AVH
 e_/F
bad allocation
generic
unknown error
iostream
iostream stream error
system
invalid string position
string too long
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
KDqxk
a V|5
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
onecore\internal\sdk\inc\wil/Staging.h
WilStaging_02
Local\SM0:%lu:%lu:%hs
ACASRTerminalEvent
CFileTerminalEvent
CToneTerminalEvent
CTTSTerminalEvent
FireEvent - enter
FireEvent - bad call pointer
FireEvent - Don't expose this call %p
FireEvent - tapi object is NULL
FireEvent - could not createinstance
FireEvent - put_Call failed
FireEvent - put_Terminal failed
FireEvent - put_ErrorCode failed
FireEvent - could not get IDispatch %lx
FireEvent - exit - returing SUCCESS
CASRTerminalEvent[%p] - enter
CASRTerminalEvent - finish
~CASRTerminalEvent[%p] - enter
~CASRTerminalEvent - releasing m_pCallInfo %p
~CASRTerminalEvent - releasing m_pTerminal %p
~CASRTerminalEvent - finish
get_Call[%p] - enter
get_Call - bad pointer passed in
get_Call - finish
get_Terminal[%p] - enter
get_Terminal - bad pointer passed in
get_Terminal - finish
get_Error[%p] - enter
get_Error - bad pointer passed in
get_Error - finish. hr = [%lx]
put_Terminal[%p] - enter
put_Terminal - bad pointer passed in
put_Terminal - finished
put_Call[%p] - enter
put_Call - bad pointer passed in
put_Call - finished
put_ErrorCode[%p] - enter. hr = [%lx]
put_ErrorCode - finished
     File Terminal State -------------> %d
     File Terminal Event Cause -------> %d
     File Terminal -------------------> %p
FireEvent - filtering out this event [%lx]
FireEvent - put_Track failed
FireEvent - put_State failed
FireEvent - put_Cause failed
CFileTerminalEvent[%p] - enter
CFileTerminalEvent - finish
~CFileTerminalEvent[%p] - enter
~CFileTerminalEvent - releasing m_pCallInfo %p
~CFileTerminalEvent - releasing m_pParentFileTerminal %p
~CFileTerminalEvent - releasing m_pFileTrack %p
~CFileTerminalEvent - finish
get_State[%p] - enter
get_State - bad pointer passed in
get_State - finish. state = [%lx]
get_Cause[%p] - enter
get_Cause - bad pointer passed in
get_Cause - finish. cause = [%lx]
get_Track[%p] - enter
get_Track - bad pointer passed in
get_Track - finish
put_Track[%p] - enter
put_Track - bad pointer passed in
put_Track - finished
put_State[%p] - enter. State = [%x]
put_State - finished
put_Cause[%p] - enter. Cause = [%x]
put_Cause - finished
CToneTerminalEvent[%p] - enter
CToneTerminalEvent - finish
~CToneTerminalEvent[%p] - enter
~CToneTerminalEvent - releasing m_pCallInfo %p
~CToneTerminalEvent - releasing m_pTerminal %p
~CToneTerminalEvent - finish
CTTSTerminalEvent[%p] - enter
CTTSTerminalEvent - finish
~CTTSTerminalEvent[%p] - enter
~CTTSTerminalEvent - releasing m_pCallInfo %p
~CTTSTerminalEvent - releasing m_pTerminal %p
~CTTSTerminalEvent - finish
[%s] %s::%s
%s:[%02u:%02u:%02u.%03u,tid=%x:] [%s] %s::
[%s] (%p) %s::%s
%s:[%02u:%02u:%02u.%03u,tid=%x:] [%s] (%p) %s::
Initialize - Alloc m_szName failed
Initialize - name is NULL
FinalRelease ACD Group - %S
FinalRelease ACD Group - exit
SetActive  - Set Group To Active
SetActive  - Already Active
SetInactive  - Set Group To Inactive
SetInactive  - Already Inactive
Group inactive
UpdateQueueArray - enter
UpdateQueueArray - Queue Name   : %S
UpdateQueueArray - Queue Handle : %d
UpdateQueueArray - create new Queue
UpdateQueueArray - Added Queue to list
UpdateQueueArray - Initialize Queue failed
UpdateQueueArray - QueryInterface ITQueue failed
UpdateQueueArray - Create Queue failed
UpdateQueueArray - Queue Object exists for this entry
UpdateQueueArray - LineGetQueuelist failed
UpdateQueueArray - exit
EnumerateQueues - enter
EnumerateQueues - could not create enum
EnumerateQueues - bad ppEnumQueue pointer
EnumerateQueues - exit
get_Queues - enter
get_Queues - could not get IDispatch interface
get_Queues - could not initialize collection
get_Queues - could not create collection
get_Queues - bad pVariant pointer
get_Queues - exit
Name - enter
Name - bad Name pointer
Name - exit
FireEvent - pACDGroup is an invalid pointer
FireEvent - Could not get disp interface of ACDGroupEvent object
FireEvent - Could not create ACDGroupEvent object
FireEvent - exit
(Event)ACDGroup - enter
(Event)ACDGroup -bad ppGroup pointer
(Event)ACDGroup - exit
Event - enter
Event - bad pEvent pointer
Event - exit
Remove - enter
Remove - out of memory
Remove - VariantCopy failed - %lx
Remove - exit
Add - enter
Add - out of memory
Add - VariantCopy failed - %lx
Add - exit
new__Enum - enter
new__Enum - exit
Initialize - out of memory
CTapiCollection
get_Count - exit
get_Count - enter
get_Item - exit
get_Item - enter
[%s] %s::%s  Returned[%lx] %s
CACDGroupEvent
Initialize - exit
 Returned[%lx] %s
[%s] (%p) %s::%s  Returned[%lx] %s
Initialize - enter
CACDGroup
MSPEventCallback - Matched handle %p to Address object %p
MSPEventCallback - Couldn't enqueue event
MSPEventCallback - Couldn't match handle %p to Address object 
IsSubEventValid - exit %d
SetTapiSrvAddressEventMask - Enter
GetTapiSrvEventMask returns %x
GetTapiSrvLineStateMask returns %x
GetTapiSrvAddrStateMask returns %x
CEventMasks::SetTapiSrvAddressEventMask - failed TapiSrv 0x%08x
SetTapiSrvAddressEventMask - Exit 0x%08x
SetTapiSrvCallEventMask - Enter. call handle[%lx]
CEventMasks::SetTapiSrvCallEventMaskr - TapiSrv failed 0x%08x
SetTapiSrvCallEventMask - Exit 0x%08x
get_State enter
get_State - bad pointer
get_State exit - return %lx
get_AddressName enter
   ppName --------->%p
get_AddressName - bad pointer
get_AddressName exit - return E_OUTOFMEMORY
get_AddressName exit - return %lx
get_ServiceProviderName enter
get_ServiceProviderName - bad pointer
get_ServiceProviderName - alloc ppName failed
get_ServiceProviderName - exit - return SUCCESS
get_ServiceProvideName - LineGetProviderList returned %lx
get_ServiceProviderName - alloc m_szProviderName failed
get_ServiceProviderName - could not find provider in list
get_ServiceProviderName - failed to allocate memory for provider name string
get_ServiceProviderName exit - return %lx
get_TAPIObject enter
get_TAPIObject - bad pointer
get_TAPIObject exit - return %lx
GetTapi - returning [%p]
InternalCreateCall enter
InternalCreateCall - could not create call instance
InternalCreateCall failed - Call object failed init - %lx
InternalCreateCall - tapi object shut down. cannot create call
InternalCreateCall exit - return S_OK
CreateCall enter
CreateCall - bad pointer
CreateCall - bad string
CreateCall - InternalCreateCall failed hr = %lx
CreateCall - saving call failed
CreateCall exit - return SUCCESS
get_Calls enter
get_Calls - bad pointer
get_Calls - could not create collection
get_Calls - could not initialize collection
get_Calls - could not get IDispatch interface
get_Calls - exit - return %lx
EnumerateCalls enter
   ppCallEnum----->%p
EnumerateCalls - bad pointer
EnumerateCalls - could not create enum
EnumerateCalls exit - return %lx
FinalRelease[%p] - enter
dynamic cast operation failed
FinalRelease - m_szAddressName is [%ls]
FinalRelease - unregistering callback
FinalRelease - exit
CreateWaveMSPObject - enter
CreateWaveMSPObject failed to CoCreate - %lx
CreateWaveMSPObject - exit
wave/in/out
LineGetID failed for waveinout device - %lx
wave/in
LineGetID failed for wavein device - %lx
wave/out
LineGetID failed for waveout device - %lx
Initialize - alloc pAddressName failed
Initialize - couldn't load LINE resource
%s %d
%s - %s %d
Initialize[%p] enter
   hLineApp ---------->%lx
   dwAPIVersion ------>%lx
   dwDeviceID -------->%lx
   dwAddressID ------->%lx
   pDevCaps ---------->%p
Initialize - has an msp
Initialize - has private object
Initialize - supports callhubs
Initialize - supports callhub tracking
Initialize - supports full duplex wave
Initialize - supports wave/out device
Initialize - supports wave/in device
Initialize - supports wave device
Initialize failed to open the line
SetTapiSrvAddressEventMask failed 
Initialize - CreateMSPObject return %lx
Initialize - failed to create wave msp object - %lx
Initialize - can't create MSP event
Initialize - Map MSP handle %p to Address object %p
Initialize - RegisterWaitForSingleObject failed
Initialize - failed to initialize msp object - %lx
Initialize - LineGetAddressCaps failed - return %lx
Initialize - exit LineGetAddressCaps failed
Initialize - alloc m_szAddress failed
Initialize - exit alloc m_szAddress failed
CAddress - Address is '%ls'
Initialize - SaveAddressName failed %lx
Initialize - exit SaveAddressName failed
CAddress - m_szAddressName is '%ls'
Initialize - exit S_OK
get_MediaTypes enter
   plMediaType ------->%p
get_MediaTypes - bad pointer
QueryMediaType enter
   lMediaType--------->%lx
   pbSupport---------->%p
QueryMediaType - inval pointer
QueryMediaType exit - return success
AddCallNotification - pAddressLine is NULL
AddCallNotification - LineOpen failed %lx
AddCallNotification - SetTapiSrvAddressEventMask failed 0x%08x
AddCallNotification - LineCreateMSPInstance failed %lx
AddCallNotification - LineSetCallHubTracking failed %lx
AddCallNotification - AddNotificationLine failed %lx
FindOrOpenALine - enter
Found a line that is already open
FindOrOpenALine - exit
Did not find an already open line
FindOrOpenALine - alloc pLine failed
FindOrOpenALine - Opening a line
FindOrOpenALine - LineOpen failed %lx
FindOrOpenALine - SetTapiSrvAddressEventMask failed 0x%08x
FindOrOpenALine - LineCreateMSPInstance failed %lx
FindOrOpenALine - LineSetCallHubTracking failed %lx
FindOrOpenALine - AddNotificationLine failed %lx
MaybeCloseALine - enter
MaybeCloseALine - exception accessing address line's handle
MaybeCloseALine - Calling LineClose
MaybeCloseALine - Not calling line close - decrementing number of addresses using line
MaybeCloseALine - exit
SCHT - FindOrOpen failed %lx
SCHT - LSCHT failed %lx
CreatForwardInfoObject - enter
CreateForwardInfoObject - bad pointer
Create forward object failed
CreateForwardobject failed - %lx
CreateForwardObject - exit success
Forward - bad pForwardInfo
Forward - Need consultation call
Forward - invalid call
Forward - FindOrOpen failed - %lx
Forward failed sync - %lx
Forward failed async - %lx
Forward - Exit
get_CurrentForwardInfo - enter
get_CurrentForwardInfo - QueryInterface failed - %lx
get_CurrentForwardInfo - LineGetAddressStatus failed 
get_CurrentForwardInfo - FindOrOpen failed
get_CurrentForwardInfo - failed to create
get_CurrentForwardInfo - exit
get_DialableAddress - Enter
get_DialableAddress - bad pointer
SysAllocString Failed
get_DialableAddress - Exit
put_MessageWaiting - Enter
put_MessageWaiting - findoropen failed %lx
put_MessageWaiting failed sync - %lx
put_MessageWaiting failed async - %lx
put_MessageWaiting - Exit
get_MessageWaiting - Enter
get_MessageWaiting - bad pointer
FindOrOpenALine failed - %lx
LineGetDevStatus failed - %lx
get_MessageWaiting - Exit
put_DoNotDisturb - Enter
put_DoNotDisturb - FindOrOpen failed %lx
put_DND - linefoward failed sync - %lx
put_DND - linefoware failed async - %lx
put_DoNotDisturb - Exit
get_DoNotDisturb - Enter
pfDoNotDisturb - bad pointer
get_DND - FindOrOpen failed %lx
get_DND - not supported
get_DND - LineGetAddressStatus failed - %lx
get_DoNotDisturb - Exit
get_AddressCapability - Enter
get_AddressCapability - bad pointer
get_AddressCapability - could not get addresscaps
get_AddressCap - could not get devcaps - %lx
get_AddressCaps - could not update caps - %lx
get_AddressCapability - bad addrcap
get_AddressCapability - Exit - result - %lx
get_AddressCapabilityString - Enter
get_AddressCapabilityString - bad pointer
get_AddressCapabilityString - SysAllocString Failed
get_AddressCapabilityString - invalid cap
get_AddressCapabilityString - Exit - result - %lx
CreateBstrCollection - can't create collection - exit 0x%lx
CreateBstrCollection - QI for IDispatch on collection failed - exit 0x%lx
CreateBstrCollection - Initialize on collection failed - exit 0x%lx
CreateBstrCollection - placing IDispatch value %p in variant
CreateBstrCollection - exit S_OK
CreateBstrEnumerator - Could not create enumerator object, 0x%lx
CreateBstrEnumerator - query enum interface failed, 0x%lx
CreateBstrEnumerator - init enumerator object failed, 0x%lx
CreateBstrEnumerator - exit S_OK
get_CallTreatments - Enter
get_CallTreatments - Exit - result - %lx
EnumerateCallTreatments - Enter
EnumerateCallTreatments - Exit - result - %lx
get_CompletionMessages - Enter
get_CompletionMessages - Exit - result - %lx
EnumerateCompletionMessages - Enter
EnumerateCompletionMessages - Exit - result - %lx
get_DeviceClasses - Enter
get_DeviceClasses - bad pointer
get_DeviceClasses - out of memory
get_DeviceClasses - got '%ws'
get_DeviceClasses - unable to create collection
get_DeviceClasses - no device classes
get_DeviceClasses - Exit - result - %lx
EnumerateDeviceClasses - Enter
EnumerateDeviceClasses - bad pointer
EnumerateDeviceClasses - out of memory
EnumerateDeviceClasses - got '%ws'
EnumerateDeviceClasses - unable to create enum
EnumerateDeviceClasses - no device classes
EnumerateDeviceClasses - unable to create enumeration
EnumerateDeviceClasses - Exit - result - %lx
HandleLineDevStateMessage
%s - enter. tapi[%p]
%s - LINEDEVSTATE_REINIT
%s: CTAPI is NULL! - exit
%s - exit
%s: CTAPI is NULL for LINEDEVSTATE_TRANSLATECHANGE! - exit
Can't process LINE_LINEDEVSTATE message
  - cannot find hLine %lx
LINE_LINEDEVSTATE message not handled - %lx
Unknown LINE_LINEDEVSTATE message - %lx
%s - exit.
HandleAddressStateMessage - not handled %lx
HandleAddressStateMessage - Unknown %lx
This event is filtered - %lx
Could not create AddressEvent object - %lx
Could not get disp interface of AddressEvent object %lx
CAddressEvent - FinalRelease
get_Address - bad pointer
get_Terminal - bad pointer
get_Terminal - wrong event
get_Event - bad pointer
CAddressDevSpecificEvent::FireEvent - enter
CAddressDevSpecificEvent::FireEvent - failed to create CAddressDevSpecificEvent. hr = %lx
CAddressDevSpecificEvent::FireEvent - failed to create get ITAddress interface from address. hr = %lx
CAddressDevSpecificEvent::FireEvent - Could not get disp interface of AddressEvent object %lx
CAddressDevSpecificEvent::FireEvent - exit, hr = %lx
CAddressDevSpecificEvent - enter
CAddressDevSpecificEvent - exit
~CAddressDevSpecificEvent - enter
~CAddressDevSpecificEvent - exit
get_Address - enter
get_Address - bad pointer at [%p]
get_Address - enter. address[%p]
get_Call - enter
get_Call - bad pointer at [%p]
get_Call - no call
get_Call - enter. call [%p]. hr = %lx
get_lParam1 - enter
get_lParam1 - bad pointer at %p
get_lParam1 - exit. p1[%ld]
get_lParam2 - enter
get_lParam2 - bad pointer at %p
get_lParam2 - exit. p2[%ld]
get_lParam3 - enter
get_lParam3 - bad pointer at %p
get_lParam3 - exit. p3[%ld]
get_NumRingsNoAnswer - bad pointer
SetForwardType - enter
SetForwardType - exit - %lx
SetForwardType2 - enter
ForwardType has more than one bit set
Forward destaddress cannot be NULL
Forward destaddress invalid
Forward type needs calleraddress
Forward calleraddress invalid
Could not alloc dest in put_Forward
Could not calloc caller in put_Forward
SetForwardType2 - exit - success
get_ForwardTypeDest - enter
Bad pointer in get_ForwardTypeDest
OutOfMemory in get_ForwardTypeDest
get_ForwardTypeDest - exit
get_ForwardTypeDestinationAddressType - enter
Bad pointer in get_ForwardTypeDestinationAddressType
get_ForwardTypeDestinationAddressType - exit
get_ForwardTypeCaller - enter
Bad pointer in get_ForwardTypeCaller
OutOfMemory in get_ForwardTypeCaller
get_ForwardTypeCallerAddressType - enter
Bad pointer in get_ForwardTypeCallerAddressType
get_ForwardTypeCallerAddressType - exit
GetForwardType - enter
GetForwardType - exit
GetForwardType2 - enter
GetForwardType2 - exit
Clear - enter
Clear - exit
CreateForwardList - OutOfMemory
TranslateAddress - enter
TranslateAddress - Do address translation
TranslateAddress - LineTranslateAddress failed
TranslateAddress - No address translation
TranslateAddress - success
TranslateAddress - Bad pointer
TranslateAddress - Initialize TranslateInfo object failed
TranslateAddress - Create TranslateInfo object failed
TranslateAddress -pAddressToTranslate invalid
TranslateAddress - Bad ppTranslated Pointer
TranslateAddress - exit
TranslateDialog - enter:%p
TranslateDialog - exit - return %lx
EnumerateLocations - enter
EnumerateLocations - Bad Pointer
EnumerateLocations - Added LocationInfo object to enum
EnumerateLocations - Init LocationInfo object failed
EnumerateLocations - Create LocationInfo object failed
EnumerateLocations - LineGetTranslateCaps failed
EnumerateLocations - could not create enum
EnumerateLocations - exit
get_locations - bad pointer
get_Locations - could not create collection
get_locations - enumerate locations failed
get_Locations - could not get IDispatch interface
get_Locations exit - return success
EnumerateCallingCards - enter
EnumerateCallingCards - Bad Pointer
EnumerateCallingCards - Added CallingCard object to enum
EnumerateCallingCards - Init CallingCard object failed
EnumerateCallingCards - Create CallingCard object failed
EnumerateCallingCards - LineGetTranslateCaps failed
EnumerateCallingCards - could not create enum
EnumerateCallingCards - exit
get_CallingCard - bad pointer
get_CallingCards - could not create collection
get_CallingCards - enumerate callingcards failed
get_CallingCards - could not get IDispatch interface
get_CallingCards exit - return success
GetPhoneArrayFromTapiAndPrune enter
GetPhoneArrayFromTapiAndPrune - bad pointer
GetPhoneArrayFromTapiAndPrune - found matching phone - %p
GetPhoneArrayFromTapiAndPrune - exit - return %lx
get_Phones enter
get_Phones - bad pointer
get_Phones - could not create collection
get_Phones - could not get IDispatch interface
get_Phones - could not initialize collection
get_Phones - exit - return %lx
EnumeratePhones - enter
   ppEnumPhone----->%p
EnumeratePhones - bad pointer
EnumeratePhones - failed to create phone enumeration. exception thrown.
EnumeratePhones - could not create enum
EnumeratePhones - exit - return %lx
get_PreferredPhones enter
get_PreferredPhones - bad pointer
get_PreferredPhones - could not create collection
get_PreferredPhones - could not get IDispatch interface
get_PreferredPhones - could not initialize collection
get_PreferredPhones - exit - return %lx
EnumeratePreferredPhones - enter
EnumeratePreferredPhones - bad pointer
EnumeratePreferredPhones - could not create enum
EnumeratePreferredPhones - exit - return %lx
GetPhoneFromTerminal - enter
GetPhoneFromTerminal - bad pointer
GetPhoneFromTerminal - got terminal wave id %d
GetPhoneFromTerminal - exit - return %lx
put_EventFilter - enter
put_EventFilter - This event can't be set: %x, return E_INVALIDARG
get_EventFilter - enter
get_EventFilter - invalid VARIANT_BOOL pointer, return E_POINTER
get_EventFilter - This event can't be set: %x, return E_INVALIDARG
get_EventFilter - GetSubEventFlag failed, return 0x%08x
get_EventFilter - exit S_OK
DeviceSpecific - enter
DeviceSpecific - pbDataArray is NULL. E_INVALIDARG
DeviceSpecific - dwSize is 0. E_INVALIDARG
DeviceSpecific - bad array passed in [%p] of size %ld
DeviceSpecific - unreadable call pointer [%p]
DeviceSpecific - exception casting call pointer to a call object, bad call [%p]
DeviceSpecific - could not get call object from call pointer -- bad call pointer argument [%p]
DeviceSpecific - no call handle. hr = TAPI_E_INVALCALLSTATE
DeviceSpecific - FindOrOpenALine failed. hr = %lx
DeviceSpecific - exit. hr = %lx
DeviceSpecificVariant - enter
DeviceSpecificVariant - MakeBufferFromVariant failed. hr = %lx
DeviceSpecificVariant - exit. hr = %lx
NegotiateExtVersion - enter
NegotiateExtVersion - output arg [%p] not writeable
NegotiateExtVersion - negotiated version %ld
NegotiateExtVersion - exit. hr = %lx
Initialize - Alloc m_szDisplayableString failed
Initialize - Alloc m_szDialableString failed
FinalRelease - enter
get_CurrentCountryCode - enter
get_CurrentCountryCode - Bad Pointer
get_CurrentCountryCode - exit
get_DestinationCountryCode - enter
get_DestinationCountryCode - Bad Pointer
get_DestinationCountryCode - exit
get_TranslationResults - enter
get_TranslationResults - Bad Pointer
get_TranslationResults - exit
get_DialableString - enter
get_DialableString - Bad Pointer
get_DialableString - exit
get_DisplayableString - enter
get_DisplayableString - Bad Pointer
get_DisplayableString - exit
Initialize - Alloc m_szCardName failed
Initialize - Alloc m_szSameAreaDialingRule failed
Initialize - Alloc m_szLongDistanceDialingRule failed
Initialize - Alloc m_szInternationalDialingRule failed
get_PermanentCardID - enter
get_PermanentCardID - Bad Pointer
get_PermanentCardID - exit
get_NumberOfDigits - enter
get_NumberOfDigits - Bad Pointer
get_NumberOfDigits - exit
get_Options - enter
get_Options - Bad Pointer
get_Options - exit
get_CardName - enter
get_CardName - Bad Pointer
get_CardName - exit
get_SameAreaDialingRule - enter
get_SameAreaDialingRule - Bad Pointer
get_SameAreaDialingRule - exit
get_LongDistanceDialingRule - enter
get_LongDistanceDialingRule - Bad Pointer
get_LongDistanceDialingRule - exit
get_InternationalDialingRule - enter
get_InternationalDialingRule - Bad Pointer
get_InternationalDialingRule - exit
Initialize - Alloc m_szCityCode  failed
Initialize - Alloc m_szLocalAccessCode failed
Initialize - Alloc m_szLongDistanceAccessCode failed
Initialize - Alloc m_szTollPrefixList failed
Initialize - Alloc m_szCancelCallWaitingCode failed
get_PermanentLocationID - enter
get_PermanentLocationID - Bad Pointer
get_PermanentLocationID - exit
get_CountryCode - enter
get_CountryCode - Bad Pointer
get_CountryCode - exit
get_CountryID - enter
get_CountryID - Bad Pointer
get_CountryID - exit
get_PreferredCardID - enter
get_PreferredCardID - Bad Pointer
get_PreferredCardID - exit
get_LocationName - enter
get_LocationName - Bad Pointer
gget_LocationName - exit
get_CityCode - enter
get_CityCode - Bad Pointer
get_CityCode - exit
get_LocalAccessCode - enter
get_LocalAccessCode - Bad Pointer
get_LocalAccessCode - exit
get_LongDistanceAccessCode - enter
get_LongDistanceAccessCode - Bad Pointer
get_LongDistanceAccessCode - exit
get_TollPrefixList - enter
get_TollPrefixList - Bad Pointer
get_TollPrefixList - exit
get_CancelCallWaitingCode - enter
get_CancelCallWaitingCode - Bad Pointer
get_CancelCallWaitingCode - exit
get_LineID - enter
get_LineID - bad pointer
get_LineID - exit
get_AddressID - enter
get_AddressID - bad pointer
get_AddressID - exit
CreateMSPCall - MSPAddress::CreateMSPCall threw an exception
HandleSendMSPDataMessage - enter
HandleSendMSPDataMessage - couldn't find call %X
HandleSendMSPDataMessage - failed to find address Object %lx
HandleSendMSPDataMessage - exit. hr = %lx
HandleSendTSPData - enter pEvent %p
HandleSendTSPData - bad event structure
HandleSendTSPData - Matched handle %X to Call object %p
HandleSendTSPData - address line[%p] hCall[%lx]
HandleSendTSPData - Couldn't match handle %X to Call object. hr = %lx
HandleSendTSPData - no address lines on the address. E_UNEXPECTED
HandleSendTSPData - finish hr = %lx
HandleLineDevSpecificMessage - enter
HandleLineDevSpecificMessage - FindAddressObject failed to find matching address. searching for call
HandleLineDevSpecificMessage - FindAddressObject failed to find matching call. 
HandleLineDevSpecificMessage - call does not have an address. hr = %lx
HandleLineDevSpecificMessage - exception using address. address pointer bad
HandleLineDevSpecificMessage - no address
HandleLineDevSpecificMessage - exit. 
HandleMSPAddressEvent - bad event
HandleMSPCallEvent - Matched handle %X to Call object %p
HandleMSPCallEvent - Couldn't match handle %X to Call object 
HandleMSPCallEvent - bad event
HandleMSPTTSTerminalEvent - pEvent  is NULL
HandleMSPTTSTerminalEvent - can't cast the address %p to ITAddress
HandleMSPTTSTerminalEvent - Matched handle %X to Call object %p
HandleMSPTTSTerminalEvent - Couldn't match handle %X to Call object 
HandleMSPTTSTerminalEvent - CFileTerminalEvent::FireEvent failed. hr = %lx
HandleMSPASRTerminalEvent - pEvent  is NULL
HandleMSPASRTerminalEvent - can't cast the address %p to ITAddress
HandleMSPASRTerminalEvent - Matched handle %X to Call object %p
HandleMSPASRTerminalEvent - Couldn't match handle %X to Call object 
HandleMSPASRTerminalEvent - CFileTerminalEvent::FireEvent failed. hr = %lx
HandleMSPToneTerminalEvent - pEvent  is NULL
HandleMSPToneTerminalEvent - can't cast the address %p to ITAddress
HandleMSPToneTerminalEvent - Matched handle %X to Call object %p
HandleMSPToneTerminalEvent - Couldn't match handle %X to Call object 
HandleMSPToneTerminalEvent - CFileTerminalEvent::FireEvent failed. hr = %lx
HandleMSPFileTerminalEvent - pEvent  is NULL
HandleMSPFileTerminalEvent - can't cast the address %p to ITAddress
HandleMSPFileTerminalEvent - Matched handle %X to Call object %p
HandleMSPFileTerminalEvent - Couldn't match handle %X to Call object 
HandleMSPFileTerminalEvent - CFileTerminalEvent::FireEvent failed. hr = %lx
HandleMSPPrivateEvent - can't cast the address %p to ITAddress
HandleMSPPrivateEvent - Matched handle %X to Call object %p
HandleMSPPrivateEvent - Couldn't match handle %X to Call object 
ReleaseEvent -  enter
ReleaseEvent -  finished
Alloc failed in MSP event
GetID - bad string
GetID - bad size
GetID - bad pointer
GetDevConfig -  enter
GetDevConfig - bad DeviceClass string
GetDevConfig - bad size
GetDevConfig - bad buffer pointer
GetDevConfig -  exit
SetDevConfig - enter
SetDevConfig - bad string pointer
SetDevConfig - dwSize = 0
SetDevConfig - bad pointer
SetDevConfig - exit
ConfigDialog - enter
ConfigDialog - bad string pointer
ConfigDialog - exit
ConfigDialogEdit - enter
ConfigDialogEdit - bad string pointer
ConfigDialogEdit - dwSize = 0
ConfigDialogEdit - bad pointer
ConfigDialogEdit - bad size
ConfigDialogEdit - bad buffer pointer
ConfigDialogEdit - exit
HandleLineCloseMessage - enter
HandleLineCloseMessage - FindAddressObject failed. exiting... 
HandleLineCloseMessage - exception getting callback instance from line struc
HandleLineCloseMessage - found registration, firing event
HandleLineCloseMessage AddressLine %p not found. calling maybeclosealine
HandleLineCloseMessage - exit
GetIDsOfNames - found %S on ITAddress
GetIDsOfNames - found %S on ITAddressCapabilities
GetIDsOfNames - found %S on ITMediaSupport
GetIDsOfNames - found %S on ITAddressTranslation
GetIDsOfNames - found %S on ITLegacyAddressMediaControl
GetIDsOfNames - found %S on our aggregated MSP Address
GetIDsOfNames - Didn't find %S on our iterfaces
Invoke - dispidMember %X
Invoke - exit
IsValidAddressLine - unreadeable memory at [%p]
IsValidAddressLine -- exception while addreffing the line
IsValidAddressLine returning TRUE
IsValidAddressLine returning FALSE
SetEventFilterMask - enter. dwEventFilterMask[%lx]
SetEventFilterMask exit S_OK
SetSubEventFlag - enter. event [%lx] subevent[%lx] enable?[%d]
SetSubEventFlag exit 0x%08x
GetSubEventFlag enter
GetSubEventFlag exit 0x%08x
SetSubEventFlagToCalls enter
SetSubEventFlagToCalls exit 0x%08x
GetSubEventsMask - enter
GetSubEventsMask - exit %ld
RegisterNotificationCookie - adding cookie %lx to m_NotificationCookies list
RegisterNotificationCookie - failed to add a cookie to m_NotificationCookies list - alloc failure
RemoveNotificationCookie - removing cookie %lx from m_NotificationCookies list
UnregisterAllCookies entering. this[%p]
UnregisterAllCookies removing handle %lx
UnregisterAllCookies - no corresponfing registeritem for cookie 0x%lx
UnregisterAllCookies - cookie 0x%lx is of type 0x%lx, not RA_ADDRESS
UnregisterAllCookies - removing call notification for cookie 0x%lx
UnregisterAllCookies exiting
AddressOnTapiShutdown - enter
AddressOnTapiShutdown - invalid call pointer[%p] in the call array
AddressOnTapiShutdown - unreadable call pointer[%p] in the call array
AddressOnTapiShutdown - unregistering the MSPEventCallback callback
AddressOnTapiShutdown - finish
CCall[%p] - enter
CCall - exit
get__NumEnum - enter
get__NewEnum - exit
~CCall[%p] - enter
~CCall - exit
InternalRelease - enter m_dwRef = %ld
InternalRelease - final
Hash Table Remove: key %p 
Hash Table Remove: key %p - obj %p
InternalRelease - m_bReleased is TRUE. dwR[%ld]
CCall
InternalRelease - exit. refcount %ld
FinalRelease() - enter
FinalRelease() - exit
CLocationInfo
CCallingCard
CAddressTranslationInfo
CForwardInfo
CAddressDevSpecificEvent
CAddressEvent
CTapiBstrCollection
FRelease - dwRefCount[%ld]
list<T> too long
AddNotificationLine - failed to add to m_AddressLinesPtrList list - alloc failure
AddressLineStruct
AddRef - dwRefCount[%ld]
CAddress
CEventMasks
Find - Hash Table returning E_FAIL on Find(NULL)
CHashTable
Find - Hash Table found: key %p - obj %p
Initialize - Alloc m_szAgentUserName failed
Initialize - Agent Name is NULL
Initialize - Alloc m_szAgentID failed
Initialize - Agent ID is NULL
Initialize - Alloc m_szPIN failed
Initialize - Agent PIN is NULL
Initialize Agent - %S, %S
FinalRelease Agent - %S
FinalRelease Agent - exit
UpdateInfo - enter
UpdateInfo - AgentState is invalid %d - setting to AS_UNKNOWN
UpdateInfo - NextAgentState is invalid %d - setting to AS_UNKNOWN
UpdateInfo - call to lineGetAgentInfo failed async
UpdateInfo - call to lineGetAgentInfo failed
UpdateInfo - exit
EnumerateAgentSessions - enter
EnumerateAgentSessions - ppEnumAgentSessions %p
EnumerateAgentSessions - could not create enum
EnumerateAgentSessions - bad ppEnumAgentSession pointer
EnumerateAgentSessions - exit
get_AgentSessions - enter
get_AgentSessions - could not get IDispatch interface
get_AgentSessions - could not initialize collection
get_AgentSessions - could not create collection
get_AgentSessions - bad pVariant pointer
get_AgentSessions - exit
RegisterAgentEvents - enter
RegisterAgentEvents - exit
RegisterAgentSessionEvents - enter
RegisterAgentSessionEvents - exit
CreateSessionWithPIN - enter
CreateSessionWithPIN - failed, PIN is NULL
CreateSessionWithPIN - invalid pPIN pointer
CreateSessionWithPIN - invalid ppAgentSession pointer
CreateSessionWithPIN - Agent not created by CreateAgentWithID()
CreateSessionWithPIN - exit
CreateSession - enter
CreateSession - invalid ppAgentSession pointer
CreateSession - exit
InternalCreateSession - enter
InternalCreateSession - create new session
InternalCreateSession - failed to initialize new object
InternalCreateSession - failed to query interface
InternalCreateSession - createInstance failed for COM object
InternalCreateSession - LineCreateAgentSession failed async
InternalCreateSession - LineCreateAgentSession failed
InternalCreateSession - Failed to open a line for the target Address
InternalCreateSession - invalid Destination Address
InternalCreateSession - invalid ACDGroup
InternalCreateSession - exit
ID - enter
ID - Agent not created by CreateAgentWithID()
ID - bad pID pointer
ID - exit
User - enter
User - bad ppUser pointer
User - exit
put_State - enter
put_State - lineSetAgentStateEx failed async
put_State - lineSetAgentStateEx failed
put_State - exit
get_State - enter
get_State - bad pAgentState pointer
get_State - exit
put_MeasurementPeriod - enter
put_MeasurementPeriod - call to LineSetAgentMeasurementPeriod failed async
put_MeasurementPeriod - call to LineSetAgentMeasurementPeriod failed
put_MeasurementPeriod - exit
get_MeasurementPeriod  - enter
get_MeasurementPeriod - Object update failed
get_MeasurementPeriod -bad pulPeriod pointer
get_MeasurementPeriod - exit
OverallCallrate - enter
get_OverallCallRate - Object update failed
get_OverallCallRate - bad pcyCallrate pointer
OverallCallrate - exit
NumberOfACDCalls - enter
get_NumberOfACDCalls - Object update failed
get_NumberOfACDCalls - bad pulCalls pointer
NumberOfACDCalls - exit
NumberOfIncomingCalls - enter
get_NumberOfIncomingCalls - Object update failed
get_NumberOfIncomingCalls - bad pulCalls pointer
NumberOfIncomingCalls - exit
NumberOfOutgoingCalls - enter
get_NumberOfOutgoingCalls - Object update failed
get_NumberOfOutgoingCalls - bad pulCalls pointer
NumberOfOutgoingCalls - exit
TotalACDTalkTime - enter
get_TotalACDTalkTime - Object update failed
get_TotalACDTalkTime - bad pulTalkTime pointer
TotalACDTalkTime - exit
TotalACDCallTime - enter
get_TotalACDCallTime - Object update failed
get_TotalACDCallTime - bad pulCallTime pointer
TotalACDCallTime - exit
TotalWrapUpTime - enter
get_TotalWrapUpTime - Object update failed
get_TotalWrapUpTime - bad pulWrapUpTime pointer
TotalWrapUpTime - exit
put_PIN - enter
put_PIN - Overwrite exising PIN
put_PIN - ClientAlloc m_szPIN failed
put_PIN - failed, PIN is NULL
put_PIN - invalid pointer
put_PIN - exit
(Event)FireEvent - Could not get disp interface of AgentEvent object
(Event)FireEvent - Could not create AgentEvent object
(Event)FireEvent - exit
(Event)Agent - enter
(Event)Agent - bad ppAgent pointer
(Event)Agent - exit
CAgentEvent
CAgent
AddAddress - enter
AddAddress - bad address pointer
AddAddress - pITAddress is NULL
AddAddress - address already in the array. doing nothing
AddAddress - failed to add address to the array
AddAddress - exit
getHLine - enter
getHLine(%8x) - exit
FinalRelease AgentHandler - %S
FinalRelease AgentHandler - exit
FindAgent %u
UpdateGroupArray - enter
UpdateGroupArray - Number of entries: %u
UpdateGroupArray - create new Group
UpdateGroupArray - Initialize Group succeededed
UpdateGroupArray - Added Group to Array
UpdateGroupArray - Initialize Group failed
UpdateGroupArray - QueryInterface failed
UpdateGroupArray - Create Group failed
UpdateGroupArray - Group Object exists for this entry
UpdateGroupArray - Group has gone from the proxy
UpdateGroupArray - lineGetGroupList failed - empty list
UpdateGroupArray - lineGetGroupList failed
UpdateGroupArray - exit
CreateAgent - enter
CreateAgent - InternalCreateAgent failed
CreateAgent - Bad ppAgent Pointer
CreateAgent - exit
CreateAgentWithID - enter
CreateAgentWithID - InternalCreateAgent failed
CreateAgentWithID - Bad PIN pointer
CreateAgentWithID - ID is Empty String
CreateAgentWithID - Bad ID pointer
CreateAgentWithID - Bad ppAgent Pointer
CreateAgentWithID - exit
InternalCreateAgent - enter
InternalCreateAgent - create new Agent Handler
InternalCreateAgent - Added Agent to array
InternalCreateAgent - Initialize Agent failed
InternalCreateAgent - QueryInterface failed
InternalCreateAgent - GetUserNameW failed
InternalCreateAgent - ClientAlloc pszName failed
InternalCreateAgent - Create Agent failed
InternalCreateAgent - LineCreateAgent failed async
InternalCreateAgent - LineCreateAgent failed
InternalCreateAgent - exit
EnumerateACDGroups - enter
EnumerateACDGroups - could not create enum
EnumerateACDGroups - bad ppEnumACDGroup ponter
EnumerateACDGroups - exit
get_ACDGroups - enter
get_ACDGroups - could not get IDispatch interface
get_ACDGroups - could not initialize collection
get_ACDGroups - could not create collection
get_ACDGroups - bad pVariant pointer
get_ACDGroups - exit
EnumerateUsableAddresses - enter
EnumerateUsableAddresses - could not initialize enum
EnumerateUsableAddresses - could not create enum
EnumerateUsableAddresses - bad ppEnumAddress pointer
EnumerateUsableAddresses - exit
get_UsableAddresses - enter
get_UsableAddresses - could not get IDispatch interface
get_UsableAddresses - could not initialize collection
get_UsableAddresses - could not create collection
get_UsableAddresses - bad pVariant pointer
get_UsableAddresses - exit
Hash Table insert: dwCount >= m_dwEntriesPerTable
Hash Table insert: key %p - obj %p - tapi %p
CAgentHandler
Initialize - enter, sessionhandle :%d
FinalRelease session %d
UpdateInfo - AgentSessionState is invalid %d - setting to ASST_NOT_READY
UpdateInfo - NextAgentSessionState is invalid %d - setting to ASST_NOT_READY
UpdateInfo - call to lineGetAgentSessionInfo failed async
UpdateInfo - call to lineGetAgentSessionInfo failed
AverageTimeToAnswer - enter
get_AverageTimeToAnswer - Object update failed
get_AverageTimeToAnswer - bad pulAnswerTime pointer
AverageTimeToAnswer - exit
LongestTimeToAnswer - enter
get_LongestTimeToAnswer - Object update failed
get_LongestTimeToAnswer - bad pulAnswerTime pointer
LongestTimeToAnswer - exit
ACDCallRate - enter
get_ACDCallRate - Object update failed
get_ACDCallRate - bad pcyCallrate pointer
ACDCallRate - exit
AverageWrapUpTime - enter
get_AverageWrapUpTime - Object update failed
get_AverageWrapUpTime - bad pulAverageWrapUpTime pointer
AverageWrapUpTime - exit
get_TotalWrapUpTime - bad pulTotalWrapUpTime pointer
AverageCallTime - enter
get_AverageCallTime - Object update failed
get_AverageCallTime - bad pulAverageCallTime pointer
AverageCallTime - exit
TotalCallTime - enter
get_TotalCallTime - Object update failed
get_TotalCallTime - bad pulTotalCallTime pointer
TotalCallTime - exit
AverageTalkTime - enter
get_AverageTalkTime - Object update failed
get_AverageTalkTime - bad pulAverageTalkTime pointer
AverageTalkTime - exit
TotalTalkTime - enter
get_TotalTalkTime - Object update failed
get_TotalTalkTime - bad pulTotalTalkTime pointer
TotalTalkTime - exit
NumberOfCalls - enter
get_NumberOfCalls - Object update failed
get_NumberOfCalls - bad pulNumberOfCalls pointer
NumberOfCalls - exit
SessionDuration - enter
get_SessionDuration - Object update failed
get_SessionDuration - bad pulSessionDuration pointer
SessionDuration - exit
SessionStartTime - enter
get_SessionStartTime - Object update failed
get_SessionStartTime - bad dateSessionStart pointer
SessionStartTime - exit
get_State - bad pSessionState pointer
put_State - lineSetAgentSessionState failed async
put_State - lineSetAgentSessionState failed
ACDGroup - enter
get_ACDGroup - bad ppACDGroup pointer
ACDGroup - exit
Address - enter
get_Address - bad ppAddress pointer
Address - exit
Agent - enter
get_Agent - bad ppAgent pointer
Agent - exit
(Event)FireEvent - Could not get disp interface of AgentSessionEvent object
(Event)FireEvent - Could not create AgentSessionEvent object
(Event)Session - enter
(Event)Session - bad ppSession pointer
(Event)Session - exit
CAgentSessionEvent
CAgentSession
    pAddress ---------> %p
    pszDestAddress ---> %p
    DestAddress is ---> %ls
    CallPrivilege ----> %d
    bNeedToNotify ----> %d
    hCall ------------> %lx
Initialize - - bad address pointer
Initialize - CreateMSPCall failed
ExternalFinalRelease - enter
ExternalFinalRelease: Deallocating Addditional call
Deallocating call
ExternalFinalRelease - LineDeallocateCall failed
ExternalFinalRelease - exit
CallOnTapiShutdown - enter
CallOnTapiShutdown - exit
MyBasicCallControlQI - enter
The application is not the owner of this call
so it cannot access the BCC interface
The application owns this call, so it can access the BCC interface
MyBasicCallControlQI - exit
CreateMSPCall - enter
CreateMSPCall - cant get IUnk - %lx
CreateMSPCall failed, %x
CreateMSPCall - exit - returning %lx
DialConsultCall - enter
     bSync ---> %d
DialConsultCall - FindOrOpenALine failed - %lx
DialConsultCall - LineDial failed - %lx
DialConsultCall - exit - return SUCCESS
OnDisconnect - enter
OnDisconnect - finish
CreateConference - enter
CreateConference - no call hub. returning E_UNEXPECTED
CreateConference - LineGetCallStatus failed %lx
CreateConference - Trying to setupConference
CreateConference - LineSetupConference failed - %lx
CreateConference - LineSetupConference completed OK
CreateConference - lineDeallocateCall failed - %lx
CreateConference - No CallHub
CreateConference - exit
AddToConference - enter
AddToConference - no call hub. returning E_UNEXPECTED
AddToConference - the callhub does not have a conference controller. E_UNEXPECTED
AddToConference - conf controller does not have a valid conf call handle. E_UNEXPECTED
AddToConference - LineGetCallStatus failed %lx
AddToConference - LinePrepareAddToConference completed OK
AddToConference - LinePrepareAddToConference failed async
AddToConference - LinePrepareAddToConference failed
AddToConference - exit
WaitForCallState - enter
WaitForCallState - Waiting for state %d
     state is currently %d for call %p
WaitForCallState - Reached required state
WaitForCallState - Did not reach required state
WaitForCallState - exit
OneStepTransfer - enter
OneStepTransfer - resizecallparams failed %lx
OneStepTransfer - LineSetupTransfer completed OK
OneStepTransfer -  Consultation call connected
OneStepTransfer - Consultation call failed to connect
OneStepTransfer - exit
ProcessNewCallState
       dwCallState----->%lx
       dwDetail-------->%lx
       pCallState------>%p
       pCallStateCause->%p
ProcessNewCallState - ignoring LINECALLSTATE_OFFERING message as this is ISDN & needs a lineAccept
ProcessNewCallState - trying to go to OFFERING from bad state
ProcessNewCallState - ignoring LINECALLSTATE_ACCEPTED message 
ProcessNewCallState - trying to go to INPROGRESS from bad state
ProcessNewCallState - invalid state going to CONNECTED
ProcessNewCallState - ignoring message
ProcessNewCallState - LINECALLSTATE_UNKNOWN, so ignoring message
ProcessNewCallState - exit
       *pCallState------->%lx
       *pCallStateCause-->%lx
FindConferenceControllerCall - controller is %p 
FindConferenceControllerCall - call handle %lx does not currently exist
FindExistingCalls - LineGetConfRelatedCalls failed 
OnConference - This is the consult call being conferenced 
OnConference - This is the initial call being conferenced 
OnConference -  Couldn't find conference CallHub 
OnConference - Couldn't find conference controller 
CallStateEvent - enter hCall %lx
CallStateEvent: pParams->OpenContext %p
CallStateEvent - pLine is NULL
CallStateEvent: pLine %p
CallStateEvent  - This is a conference controller call, so hide it
CCall::Changing call state :%p
CCall::Changing call state to disconnect:%p
CallStateEvent - ProcessNewCallState returned %lx - ignoring message
CallStateEvent - LineGetCallInfo returned %lx
CallStateEvent - can't set new mediamode
CallStateEvent - new call media modes is %lx
Notifying app of call
CallNotificationEvent failed %lx
Firing CallStateEvent
CallStateEvent - fire event failed %lx
CallStateEvent - exit - return SUCCESS
GetAddRefMyAddressLine - enter.
GetAddRefMyAddressLine - no address line
GetAddRefMyAddressLine - no address
GetAddRefMyAddressLine - not one of the address' lines
GetAddRefMyAddressLine - finish. pLine = %p
GetAddRefAddressLine - enter. dwAddressLineHandle[0x%lx]
GetAddRefAddressLine - no address
GetAddRefAddressLine - no address line
GetAddRefAddressLine - not one of the address' lines
GetAddRefAddressLine - finish. pLine = %p
ReleaseAddressLine - enter. pLine[%p]
ReleaseAddressLine - no address
ReleaseAddressLine - MaybeCloseALine failed. hr = %lx
ReleaseAddressLine - finish. hr = %lx
GetCallBackInstance - enter. dwAddressLineHandle = 0x%lx
GetCallBackInstance - bad pointer[%p]
HandleMonitorToneMessage - pLine is NULL
HandleMonitorToneMessage: pLine %p
HandleMonitorToneMessage - exception while accessing pLine[%p]
HandleMonitorToneMessage - ReleaseAddressLine failed. hr = %lx
ReleaseAddressLine - finish. lCallbackInstance[0x%lx]
MediaModeEvent - enter. pParams->OpenContext %lx
MediaModeEvent - GetCallBackInstance failed. hr = %lx
MediaModeEvent - exit. hr = %lx
CheckAndCreateFakeCallHub - could not creat callhub %lx
CCall::m_pCallHub -created:%p:%p
CCall::SetCallhub:%p:%p
CCall::m_pCallHub -set:%p:%p
SetCallHub - call %p changing hub from %p to %p
HandleCallStateMessage - failed to find Call Object %lx
HandleCallInfoMessage - LINECALLINFOSTATE_CALLID callhub change
HandleCallInfoMessage - Call %p > old Hub handle:%lx > new handle:%lx
HandleCallInfoMessage - LINECALLINFOSTATE_CALLID callhub not changed
HandleCallInfoMessage - LINECALLINFOSTATE_CALLID LineGetHubRelatedCalls failed %lx
HandleCallInfoMessage - failed to find Call Object %lx
Unhandled LINECALLINFOSTATE_QOS message
Unhandled LINECALLINFOSTATE_MONITORMODES message
Unhandled LINECALLINFOSTATE_DIALPARAMS message
Unhandled LINECALLINFOSTATE_TERMINAL message
Unhandled LINECALLINFOSTATE_DISPLAY message
HandleMonitorDigitsMessage - enter
HandleMonitorDigitsMessage: pParams->OpenContext %lx
HandleMonitorDigitsMessage - GetCallBackInstance failed. hr = %lx
HandleMonitorDigitsMessage - callbackinstance[%lx]
HandleMonitorDigitsMessage - failed to find Call Object %lx
HandleMonitorToneMessage: pParams->OpenContext %lx
HandleMonitorToneMessage - GetCallBackInstance failed. hr = %lx
HandleMonitorToneMessage -  lCallbackInstance 0x%lx
HandleMonitorMediaMessage - failed SetMediaType 0x%08x
HandleMonitorMediaMessage - failed to find Call Object %lx
HandleLineGenerateMessage: pParams->OpenContext %lx
HandleLineGenerateMessage - GetCallBackInstance failed. hr = %lx
HandleLineGenerateMessage - lCallbackInstance %lx
HandleLineGenerateMessage - failed to find Call Object %lx
HandleGatherDigitsMessage - failed to find Call Object %lx
GatherDigitsEvent - enter. pParams->OpenContext[%lx]
GatherDigitsEvent - failed to get callback instance
GatherDigitsEvent - lCallbackInstance %lx
GatherDigitsEvent - GatherDigitsQueue is empty
GatherDigitsEvent - bad digits string
Can't get callinfo while in idle state
RefreshCallInfo - linegetcallinfo failed - %lx
ResizeCallParams - enter
ResizeCallParams - finish. no call params. invalid state for this function call
ResizeCallParams - finish. sufficient size
ResizeCallParams - alloc failed
ResizeCallParams - finish.
SendUserUserInfo - invalid buffer
LineSendUserUserInfo failed - %lx
SaveUserUserInfo - invalid buffer
SaveUserUserInfo - can't resize call params - %lx
MakeBufferFromVariant - Variant not array or not byte
MakeBufferFromVariant - Variant array is NULL
MakeBufferFromVariant - Variant dims != 1 - %d
MakeBufferFromVariant - get bound failed
MakeBufferFromVariant - bounds invalid
MakeBufferFromVariant - Alloc failed
FillVariantFromBuffer - failed to allocate safearray
HandleLineQOSInfoMessage - failed to find Call Object %lx
ResetCallParams - enter.
ResetCallParams - finish.
FinishSettingUpCall - enter
FinishSettingUpCall - m_t3Call.hCall != NULL
FinishSettingUpCall - finish
Connect - reached connected state
Connect - exit bSync - return SUCCESS
Connect - did not reach connected state
Connect - LineDrop failed %lx
Connect - exit bSync - return S_FALSE
DialAsConsultationCall - Consultation makeCall failed
DialAsConsultationCall - DialConsultCall failed
DialAsConsultationCall - Failed to get to CS_INPROGRESS (dialtone) on consult call
DetectDigits - enter
DetectDigits - need a call first
DetectDigits - exit - return %lx
GenerateDigits - enter
GenerateDigits - exit - return %lx
GenerateDigits2 - enter
GenerateDigits2 - bad string
GenerateDigits2 - need call first
GenerateDigits2 - exit - return %lx
GatherDigits - enter
GatherDigits - bad string
GatherDigits - need a call first
GatherDigits - out of memory
GatherDigits - unable to add to queue
GatherDigits - unable to remove from queue
GatherDigits - exit - return %lx
DetectTones - enter
DetectTones - invalid pointer
DetectTones - need a call first
DetectTones - exit - return %lx
DetectTonesByCollection - enter
DetectTonesByCollection - bad pointer
DetectTonesByCollection - get_Count failed - return %lx
DetectTonesByCollection - out of memory
DetectTonesByCollection - get_Item failed - %lx
DetectTonesByCollection - expected VT_DISPATCH
DetectTonesByCollection - bad variant
DetectTonesByCollection - QI failed - %lx
DetectTonesByCollection - **** Tone %d ****
DetectTonesByCollection - AppSpecific %d
DetectTonesByCollection - Duration %d
DetectTonesByCollection - Frequency1 %d
DetectTonesByCollection - Frequency2 %d
DetectTonesByCollection - Frequency3 %d
DetectTonesByCollection - exit - return %lx
GenerateTone - enter
GenerateTone - need call first
GenerateTone - exit - return %lx
GenerateCustomTones - enter
GenerateCustomTones - invalid pointer
GenerateCustomTones - need call first
GenerateCustomTones - exit - return %lx
GenerateCustomTonesByCollection - enter
GenerateCustomTonesByCollection - bad pointer
GenerateCustomTonesByCollection - get_Count failed - return %lx
GenerateCustomTonesByCollection - out of memory
GenerateCustomTonesByCollection - get_Item failed - %lx
GenerateCustomTonesByCollection - expected VT_DISPATCH
GenerateCustomTonesByCollection - bad variant
GenerateCustomTonesByCollection - QI failed - %lx
GenerateCustomTonesByCollection - **** Tone %d ****
GenerateCustomTonesByCollection - CadenceOff %d
GenerateCustomTonesByCollection - CadenceOn %d
GenerateCustomTonesByCollection - Frequency %d
GenerateCustomTonesByCollection - Volume %d
GenerateCustomTonesByCollection - exit - return %lx
CreateDetectToneObject enter
CreateDetectToneObject - bad pointer
CreateDetectToneObject - could not create CDetectTone
CreateDetectToneObject - could not get IDispatch interface
CreateDetectToneObject - exit - return %lx
CreateCustomToneObject enter
CreateCustomToneObject - bad pointer
CreateCustomToneObject - could not create CCustomTone
CreateCustomToneObject - could not get ITCustomTone interface
CreateCustomToneObject - exit - return %lx
GetID - enter
GetID - idle call, invalid call state
GetID - weird call state!!!
GetID - exit - return %lx
GetIDAsVariant - enter
GetIDAsVariant - bad string
GetIDAsVariant - bad variant pointer
GetIDAsVariant - failed to get device id. hr = %lx
GetIDAsVariant - failed to put device id into a variant. hr = %lx
GetIDAsVariant - exit
SetMediaType - enter
SetMediaType - invalid hCall
SetMediaType - exit - return %lx
MonitorMedia - enter
MonitorMedia - invalid hCall
MonitorMedia - exit - return %lx
GetIDsOfNames - found %S on ITCallInfo
GetIDsOfNames - found %S on ITBasicCallControl
GetIDsOfNames - found %S on ITLegacyCallMediaControl
GetIDsOfNames - found %S on our aggregated MSP Call
HandleAcceptToAlert - lineAccept failed async
HandleAcceptToAlert - lineAccept failed sync
OnOffering - enter
OnOffering - queueing PRIVATE_ISDN__ACCEPTTOALERT message.
OnOffering - exit. hr = %lx
RequestTerminal - enter
RequestTerminal - exit  bstrTerminalClassGUID invalid, returns E_INVALIDARG
RequestTerminal - exit  ppTerminal invalid, returns E_POINTER
RequestTerminal -> StaticTerminal
RequestTerminal -> DynamicTerminal
RequestTerminal - exit 0x%08x
SelectTerminalOnCall - enter
SelectTerminalOnCall - exit  pTerminal invalid, returns E_POINTER
SelectTerminalOnCall - SingleTrack terminal
SelectTerminalOnCall - SelectSingleTerminalOnCall exit with 0x%08x
SelectTerminalOnCall - SelectMultiTerminalOnCall failed
SelectTerminalOnCall - exit 0x%08x
UnselectTerminalOnCall - enter
UnselectTerminalOnCall - exit  pTerminal invalid, returns E_POINTER
UnselectTerminalOnCall - SingleTrack terminal
UnselectTerminalOnCall - UnSelectSingleTerminalFromCall exit 0x%08x
UnselectTerminalOnCall - MultiTrack terminal
UnselectTerminalOnCall - UnSelectMultiTerminalOnCall exit 0x%08x
UnselectTerminalOnCall - exit 0x%08x
SelectSingleTerminalOnCall - Enter
SelectSingleTerminalOnCall - exit pTerminal invalid, returns E_POINTER
SelectSingleTerminalOnCall - exit terminal IN USE, returns E_UNEXPECTED
SelectSingleTerminalOnCall - exit  GetStreamControl failed, returns E_UNEXPECTED
SelectSingleTerminalOnCall - exit  EnumerateStreams failed, returns 0x%08x
SelectSingleTerminalOnCall - pStream->SelectTerminal failed. 0x%08x
SelectSingleTerminalOnCall - exit 0x%08x
SelectMultiTerminalOnCall - enter
SelectMultiTerminalOnCall - exit EnumerateTrackTerminals failed, returns 0x%08x
SelectMultiTerminalOnCall - exit QI for Terminal failed, returns 0x%08x
SelectMultiTerminalOnCall - exit get_MediaType failed, returns 0x%08x
SelectMultiTerminalOnCall - FIRST LOOP ENTER
SelectMultiTerminalOnCall - FIRST LOOP IN
SelectMultiTerminalOnCall - select terminal on stream (%ld, %ld)
SelectMultiTerminalOnCall - FIRST LOOP EXIT
SelectMultiTerminalOnCall - SECOND LOOP ENTER
SelectMultiTerminalOnCall - SECOND LOOP IN
SelectMultiTerminalOnCall - SECOND LOOP REALYIN
SelectMultiTerminalOnCall - create terminal on stream (%ld, %ld) failed
SelectMultiTerminalOnCall - select terminal on stream (%ld, %ld) failed
SelectMultiTerminalOnCall - SelectSingleTerminal SUCCEEDED
SelectMultiTerminalOnCall - SECOND LOOP EXIT
SelectMultiTerminalOnCall - Select at least one existing track terminal
SelectMultiTerminalOnCall - Create and select at least one track terminal
SelectMultiTerminalOnCall - Create and/or select no track terminal
SelectMultiTerminalOnCall - exit 0X%08X
IsRightStream - enter
IsRightStream - exit pStream failed, returns E_POINTER
IsRightStream - exit IStream::get_MediaType failed, returns 0x%08x
IsRightStream - exit IStream::get_Direction failed, returns 0x%08x
IsRightStream - exit ITTerminal::get_MediaType failed, returns 0x%08x
IsRightStream - exit ITTerminal::get_Direction failed, returns 0x%08x
IsRightStream - exit media types unmatched, returns E_FAIL (S=0x%08x,T=0x%08x)
IsRightStream - exit directions unmatched, returns E_FAIL (S=0x%08x,T=0x%08x)
IsRightStream - exit, matched (M=0x%08x, D=0x%08x)
GetStreamIndex - enter (%ld, %ld)
GetStreamIndex - exit %d
UnSelectSingleTerminalFromCall - enter
UnSelectSingleTerminalFromCall - exit  GetStreamControl failed, returns E_UNEXPECTED
UnSelectSingleTerminalFromCall - exit EnumerateStreams failed, returns 0x%08x
UnSelectSingleTerminalFromCall - pStream->UnselectTerminal returns 0x%08x
UnSelectSingleTerminalFromCall - exit 0x%08x
UnSelectMultiTerminalFromCall - enter
UnSelectMultiTerminalFromCall - exit EnumerateTrackTerminals failed, returns 0x%08x
UnSelectMultiTerminalFromCall - NextTerminalBegin 
UnSelectMultiTerminalFromCall - IsTerminalSelected failed all method will failed hrUnselect=0x%08x
UnSelectMultiTerminalFromCall - the terminal wasn't selected on a stream, goto the next terminal hrUnselect=0x%08x
UnSelectMultiTerminalFromCall - the terminal wasn't unselected from the stream, goto the next terminal hrUnselect=0x%08x
UnSelectMultiTerminalFromCall - NextTerminalEnd hrUnselect=0x%08x
UnSelectMultiTerminalFromCall - exit 0x%08x
IsStaticGUID - enter
IsStaticGUID - exit CLSIDFromString failed, returns FALSE
IsStaticGUID - exit (%d)
CreateStaticTerminal - enter
CreateStaticTerminal - exitQueryInterface for ITTerminalSupport failed, returns 0x%08x
CreateStaticTerminal - exitCLSIDFromString failed, returns 0x%08x
CreateStaticTerminal - exitCLSID_MicrophoneTerminal unmatched, returns E_UNEXPECTED
CreateStaticTerminal - exitCLSID_SpeakersTerminal unmatched, returns E_UNEXPECTED
CreateStaticTerminal - exitCLSID_VideoInputTerminal unmatched, returns E_UNEXPECTED
CreateStaticTerminal - exittry to create a dynamic terminal, returns E_UNEXPECTED
CreateStaticTerminal -> ITterminalSupport::GetDefaultStaticTerminal
CreateStaticTerminal - exit 0x%08x
CreateDynamicTerminal - enter
CreateDynamicTerminal - exitQueryInterface for ITTerminalSupport failed, returns 0x%08x
CreateDynamicTerminal -> ITTerminalSupport::CreateTerminal
CreateDynamicTerminal - exit 0x%08x
put_EventFilter - exit 0x%08x
get_EventFilter - invalid VARIANT_BOOL pointer , return E_POINTER
SetSubEventFlag - enter
SetSubEventFlag - exit 0x%08x
IsTerminalSelected - enter
IsTerminalSelected - get_MediaType failed. Exit 0x%08x, %d
IsTerminalSelected - get_Direction failed. Exit %0x%08x, %d
IsTerminalSelected - MT=%d, Dir=%d
IsTerminalSelected - exit  GetStreamControl failed, returns E_UNEXPECTED, %d
IsTerminalSelected - exit  EnumerateStreams failed, returns 0x%08x, %d
IsTerminalSelected - exit  get_MediaType failed, returns 0x%08x, %d
IsTerminalSelected - exit  EnumerateTerminals failed, returns 0x%08x, %d
IsTerminalSelected - exit S_OK Selected=%d
put_AppSpecific - enter
put_AppSpecific - exit - S_OK
get_AppSpecific - enter
get_AppSpecific - bad pointer
get_AppSpecific - exit - S_OK
put_Duration - enter
put_Duration - exit - S_OK
get_Duration - enter
get_Duration - bad pointer
get_Duration - exit - S_OK
put_Frequency - enter
put_Frequency - invalid index
put_Frequency - exit - S_OK
get_Frequency - enter
get_Frequency - bad pointer
get_Frequency - invalid index
get_Frequency - exit - S_OK
put_CadenceOn - enter
put_CadenceOn - exit - S_OK
get_CadenceOn - enter
get_CadenceOn - bad pointer
get_CadenceOn - exit - S_OK
put_CadenceOff - enter
put_CadenceOff - exit - S_OK
get_CadenceOff - enter
get_CadenceOff - bad pointer
get_CadenceOff - exit - S_OK
put_Volume - enter
put_Volume - exit - S_OK
get_Volume - enter
get_Volume - bad pointer
get_Volume - exit - S_OK
CCustomTone
CDetectTone
handleAgentStatusMessage - LINEAGENTSTATUSEX_UPDATEINFO
handleAgentStatusMessage - LINEAGENTSTATUSEX_STATE
handleAgentStatusMessage - invalid state %d - setting to AS_UNKNOWN
handleAgentStatusMessage - can't find agent%d
handleAgentStatusMessage - can't find Agent Handler
handleAgentSessionStatusMessage - LINEAGENTSESSIONSTATUS_UPDATEINFO
handleAgentSessionStatusMessage - LINEAGENTSESSIONSTATUS_STATE
handleAgentSessionStatusMessage - invalid state %d - setting to ASST_NOT_READY
handleAgentSessionStatusMessage - can't find session %d
handleAgentSessionStatusMessage - can't find Agent Handler
handleQueueStatusMessage - LINEQUEUESTATUS_UPDATEINFO
handleQueueStatusMessage - can't find Queue %d
handleQueueStatusMessage - can't find Agent Handler
handleGroupStatusMessage - LINEGROUPSTATUS_NEWGROUP
handleGroupStatusMessage - LINEGROUPSTATUS_GROUPREMOVED
handleProxyStatusMessage - message %02X %02X %02X
handleProxyStatusMessage - LINEPROXYSTATUS_OPEN %02X
handleProxyStatusMessage - LINEPROXYSTATUS_CLOSE %02X
handleProxyStatusMessage - Unknown message
handleProxyStatusMessage - UpdateAgentHandlerArray successfully
handleProxyStatusMessage - UpdateAgentHandlerArray unsuccessfully
MyCallCenterQI - enter
MyCallCenterQI - exit
CheckForRequiredProxyRequests - enter
CheckForRequiredProxyRequests - no proxy of type %02X
CheckForRequiredProxyRequests - LineGetProxyStatus failed
CheckForRequiredProxyRequests - exit
UpdateAgentHandlerArray - enter
UpdateAgentHandlerArray - tapi object must be initialized first
UpdateAgentHandlerArray - LineGetAgentCaps
UpdateAgentHandlerArray - create new Agent Handler
UpdateAgentHandlerArray - Added AgentHandler to list
UpdateAgentHandlerArray - Initialize AgentHandler failed
UpdateAgentHandlerArray - Create AgentHandler failed
UpdateAgentHandlerArray - Agent Handler exists for this proxy
UpdateAgentHandlerArray - LineGetAgentCaps failed
UpdateAgentHandlerArray - CheckForRequiredProxyRequests failed
UpdateAgentHandlerArray - Removing one AgentHandler %s from AgentHandlerTable
UpdateAgentHandlerArray - Removing one AgentHandler from AgentHandlerTable
UpdateAgentHandlerArray - exit
EnumerateAgentHandlers - enter
EnumerateAgentHandlers - tapi object must be initialized first
EnumerateAgentHandlers - could not create enum
EnumerateAgentHandlers - bad ppEnumAgentHandler pointer
EnumerateAgentHandlers - exit
get_AgentHandlers - enter
get_AgentHandlers - tapi object must be initialized first
get_AgentHandlers - could not get IDispatch interface
get_AgentHandlers - could not initialize collection
get_AgentHandlers - could not create collection
get_AgentHandlers - bad pVariant pointer
get_AgentHandlers - exit
CTAPI
Create - enter
     CallState -------------> %d
     CallStateEventCause ---> %d
     CallStateEventMask ---> %ld
CallStateEvent - could not get IDispatch %lx
     ppCallInfo ---> %p
get_Call - bad pointer
get_Call - exit - returing %lx
     pCallState ---> %p
get_State - exit - returing %lx
get_Cause - enter
     pCEC ---> %p
get_Cause - bad pointer
get_Cause - exit - returning %lx
get_CallbackInstance - bad pointer
     CallNotification -------------> %d
FireEvent - Don't expose this  call %p
CallNotificationEvent - could not get IDispatch %lx
CallNotificationEvent - FinalRelease
get_CallbackInstance bad pointer
get_MediaMode - bad pointer
     CallInfochangeEventMask ---> %ld
Could not create CallInfoStateChange object - %lx
Could not get disp interface of CallInfoStateChange object %lx
FireEvent exit - This event is filtered - %lx
CallMediaEvent - could not get IDispatch %lx
get_Error - bad pointer
get_Stream - bad pointer
DigitDetectionEvent - could not get IDispatch %lx
get_Call - exit - return SUCCESS
get_Digit - enter
get_Digit - bad pointer
get_Digit - exit - return SUCCESS
get_DigitMode - enter
get_DigitMode - bad pointer
get_DigitMode - exit - return %lx
get_TickCount - enter
get_TickCount - exit - return %lx
get_CallbackInstance - enter
get_CallbackInstance - exit - return %lx
get_GenerationTermination - enter
get_GenerationTermination - exit - return %lx
CDigitsGatheredEvent - could not get IDispatch %lx
get_Digits - enter
get_Digits - bad pointer
get_Digits - exit - return SUCCESS
get_GatherTermination - enter
get_GatherTermination - bad pointer
get_GatherTermination - exit - return SUCCESS
get_TickCount - bad pointer
get_TickCount - exit - return SUCCESS
get_CallbackInstance - exit - return SUCCESS
CToneDetectionEvent - could not get IDispatch %lx
get_AppSpecific - exit - return SUCCESS
CToneDetectionEvent
CDigitGatheredEvent
CDigitGenerationEvent
CDigitDetectionEvent
CCallMediaEvent
CCallInfoChangeEvent
CQOSEvent
CCallNotificationEvent
CCallStateEvent
Clear - enter 
Clear - disconnect conf controller call
Clear - exit  
   ppEnumCalls----->%p
EnumCalls - bad pointer
EnumerateCalls exit - return S_OK
   pVariant ------->%p
get_Calls - invalid pointer
get_Calls exit - return S_OK
get_NumCalls - bad pointer
get_State - invalid pointer
CCallHub - FinalRelease - enter - this %p - hCallHub - %lx
CCallHub - FinalRelease - exit
FindExistingCalls - LineGetHubRelatedCalls failed %lx
FindExistingCalls - callhub doesn't match
FindExistingCalls - call handle %lx does not current exist
FindExistingCalls - can't get callinfo interface
CreateTapisrvCallHub - enter
  hCallHub ---> %lx
CreateTapisrvCallHub - createinstance failed
CreateTapisrvCallHub - exit
CreateFakeCallHub - enter
CreateFakeCallHub - failed to create a callhub -- exception
CreateFakeCallHub - createinstance failed
CreateFakeCallHub - invalid param
CreateFakeCallHub - exit
CCallHub::CheckForIdle -Entered :%p
CCallHub::CheckForIdle -Exited :%p
CCallHub::SetState -Entered :%p
CCallHub::SetState -Exited :%p
CallHubEvent - could not create object
CallHubEvent - could not get dispatch interface
get_CallHub - bad pointer
HandleCallHubClose %lx
CreateConferenceController - enter
CreateConferenceController - could not create call instance
CreateConferenceController - exit
InternalRelease - m_dwRef %d
InternalRelease - final OK dwR %d
InternalRelease - final failed dwR %d
InternalRelease - not final dwR %d
CCallHubEvent
CCallHub
BSTRFromUnalingedData - enter
BSTRFromUnalingedData - allocating aligned memory of size[%ld]
BSTRFromUnalingedData - failed to allocate aligned memory
BSTRFromUnalingedData - exit. bstrResult[%p]
Finish - enter
Wrong value passed for finish mode
Finish - LineCompleteTransfer failed async
Finish - LineCompleteTransferr failed
A conference can't be finished as a transfer
Finish - LineAddToConference failed async
Finish - LineAddToConference failed
Finish - GetConferenceControllerCall failed
Finish - GetCallHub failed
Finish - Not flagged as transfer OR conference
Finish - exit
RemoveFromConference - enter
RemoveFromConference - LineRemoveFromConference failed async
RemoveFromConference - LineRemoveFromConference failed
RemoveFromConference - exit
     ppAddress ---> %p
get_Address - invalid pointer
get_Address - exit - return %lx
get_CallState - enter
get_CallState - invalid pointer
get_CallState - exit - return success
get_Privilege - enter
     pPrivilege ---> %p
get_Privilege - bad pointer
get_Privilege - exit - return SUCCESS
get_MediaTypesAvailable enter
   plMediaTypesAvail ------->%p
get_MediaTypesAvailable - bad pointer
Connect - enter
Connect - call is not in IDLE state - cannot call connect
Connect - FindOrOpenALine failed - %lx
Connect - LineMakeCall failed - %lx
Connect - exit - return SUCCESS
Answer - enter
Answer - call not in offering state
Answer - LineAnswer failed %lx
Answer - exit - return %lx
Disconnect - enter
     DisconnectCode ---> %d
Disconnect - invalid state
Disconnect - invalid hCall
Disconnect - AdditionalCall - LineDrop failed %lx
Disconnect - AdditionalCall - WaitForReply failed %lx
Disconnect - LineDrop failed %lx
Disconnect - WaitForReply failed %lx
Disconnect - exit - return %lx
Hold - enter
     bHold ---> %d
Hold - lineHold failed async
Hold - lineHold failed
Hold - lineUnhold failed async
Hold - lineUnhold failed
Hold - exit
HandoffDirect - enter
     pApplicationName ---> %p
HandoffDirect - AppName pointer invalid
HandoffDirect - LineHandoff failed
HandoffDirect - exit
HandoffIndirect - enter
     lMediaType ---> %d
HandoffIndirect - invalid mediatype
HandoffIndirect - LineHandoff failed
HandoffIndirect - exit
Conference - enter
     pCall ---> %p
     bSync ---> %hd
Conference - bad call pointer
Conference - invalid Call pointer (same call & consult call)
Conference - No Call Hub
Conference - invalid Call pointer
Conference - exit
Transfer - enter
Transfer - invalid Call pointer
Transfer - exit
Transfer - invalid Call pointer (same call & consult call)
Transfer - LineGetCallStatus failed - %lx
Transfer - Trying Two Step Transfer
Transfer - LineSetupTransfer completed OK
Transfer - LineSetupTransfer failed async
Transfer - LineSetupTransfer failed
BlindTransfer - enter
     pDestAddress ---> %p
BlindTransfer - bad pDestAddress
BlindTransfer - lineBlindTransfer failed async
BlindTransfer - lineBlindTransfer failed
BlindTransfer - exit
ParkDirect - enter
ParkDirect - bad pParkAddress
Park - exit
ParkIndirect - enter
Park - Bad return Pointer
LineParkIndirect - failed sync - %lx
ParkIndirect - BSTRFromUnalingedData Failed
ParkIndirect - LinePark failed async
ParkIndirect - exit
SwapHold - enter
SwapHold - invalid Call pointer
SwapHold - LineSwapHold failed async
SwapHold - LineSwapHold failed
SwapHold - exit
Unpark - enter
Unpark - call is not in IDLE state - cannot call Unpark
Unpark - couldn't open a line
Unpark - exit
Unpark - LineUnpark failed async
Unpark - LineUnpark failed sync
get_CallHub - enter
get_CallHub - exit - return %lx
Pickup - enter
Pickup - bad pGroupID
Pickup - we already have a call handle
Pickup - exit
Pickup - couldn't open a line
Pickup - LinePickup failed async
Pickup - LinePickup failed sync
Dial - enter
Dial - pDestAddress %ls
Dial - bad pDestAddress
Dial - fail sync - %lx
Dial - exit - return %lx
get_CallerIDAddressType - enter
get_CallerIDAddressType - bad pointer
get_CallerIDAddressType - invalid call state
get_CallerIDAddressType - addresstype %lx
get_CallerIDAddressType - exit
get_CalledIDAddressType - enter
get_CalledIDAddressType - bad pointer
get_CalledIDAddressType - invalid call state
get_CalledIDAddressType - addresstype %lx
get_CalledIDAddressType - exit
get_ConnectedIDAddressType - enter
get_ConnectedIDAddressType - bad pointer
get_ConnectedIDAddressType - invalid call state
get_ConnectedIDAddressType - addresstype %lx
get_ConnectedIDAddressType - exit
get_RedirectionIDAddressType - enter
get_RedirectionIDAddressType - bad pointer
get_RedirectionIDAddressType - invalid call state
get_RedirectionIDAddressType - addresstype %lx
get_RedirectionIDAddressType - exit
get_RedirectingIDAddressType - enter
get_RedirectingIDAddressType - bad pointer
get_RedirectingIDAddressType - invalid call state
get_RedirectingIDAddressType - addresstype %lx
get_RedirectingIDAddressType - exit
get_BearerMode - enter
get_BearerMode - bad pointer
get_BearerMode - not available
get_BearerMode - exit
put_BearerMode - enter
put_BearerMode - failed async
put_BearerMode - failed sync
put_BearerMode - exit
get_Origin - enter
get_Origin - bad pointer
get_Origin - RefreshCallInfo failed - %lx
get_Origin - exit
get_Reason - enter
get_Reason - bad pointer
get_Reason - linegetcallinfo failed - %lx
get_Reason - exit
get_CallerIDName - enter
get_CallerIDName - bad pointer
get_CallerIDName - could not get callinfo
get_CallerIDName - out of memory
get_CallerIDName - no info avail
get_CallerIDName - exit
get_CallerIDNumber - enter
get_CallerIDNumber - bad pointer
get_CallerIDNumber - could not get callinfo
get_CallerIDNumber - out of memory
get_CallerIDNumber - no info avail
get_CallerIDNumber - exit
get_CalledIDName - enter
get_CalledIDName - bad pointer
get_CalledIDName - could not get callinfo
get_CalledIDName - out of memory
get_CalledIDName - no info avail
get_CalledIDName - exit
get_CalledIDNumber - enter
get_CalledIDNumber - bad pointer
get_CalledIDNumber - could not get callinfo
get_CalledIDNumber - out of memory
get_CalledIDNumber - no info avail
get_CalledIDNumber - exit
get_ConnectedIDName - enter
get_ConnectedIDName - bad pointer
get_ConnectedIDName - could not get callinfo
get_ConnectedIDName - out of memory
get_ConnectedIDName - no info avail
get_ConnectedIDName - exit
get_ConnectedIDNumber - enter
get_ConnectedIDNumber - bad pointer
get_ConnectedIDNumber - could not get callinfo
get_ConnectedIDNumber - out of memory
get_ConnectedIDNumber - no info avail
get_ConnectedIDNumber - exit
get_RedirectionIDName - enter
get_RedirectionIDName - bad pointer
get_RedirectionIDName - could not get callinfo
get_RedirectionIDName - out of memory
get_RedirectionIDName - no info avail
get_RedirectionIDName - exit
get_RedirectionIDNumber - enter
get_RedirectionIDNumber - bad pointer
get_RedirectionIDNumber - could not get callinfo
get_RedirectionIDNumber - out of memory
get_RedirectionIDNumber - no info avail
get_RedirectionIDNumber - exit
get_RedirectingIDName - enter
get_RedirectingIDName - bad pointer
get_RedirectingIDName - could not get callinfo
get_RedirectingIDName - out of memory
get_RedirectingIDName - no info avail
get_RedirectingIDName - exit
get_RedirectingIDNumber - enter
get_RedirectingIDNumber - bad pointer
get_RedirectingIDNumber - could not get callinfo
get_RedirectingIDNumber - out of memory
get_RedirectingIDNumber - no info avail
get_RedirectingIDNumber - exit
get_CalledPartyFriendlyName - enter
get_CalledPartyFriendlyName - badpointer
get_CalledPartyFriendlyName - out of memory 1
get_CalledPartyFriendlyName - not available
get_CalledPartyFriendlyName - can't get callinfo - %lx
get_CalledPartyFriendlyName - out of memory
get_CalledPartyFriendlyName2 - not available
get_CalledPartyFriendlyName - exit
put_CalledPartyFriendlyName - bad pointer
put_CalledPartyFriendlyName - can only be called before connect
put_CalledPartyFriendlyName - can't resize cp - %lx
get_Comment - enter
get_Comment - badpointer
get_Comment - out of memory 1
get_Comment1 - not available
get_Comment - can't get callinfo - %lx
get_Comment - out of memory
get_Comment - not available
get_Comment - exit
put_Comment - bad pointer
put_Comment - can only be called before connect
put_Comment - can't resize cp - %lx
GetUserUserInfo - enter
GetUserUserInfo - bad size pointer
GetUserUserInfo - bad buffer pointer
GetUserUserInfo - out of memory
GetUserUserInfo - can't get callinfo - %lx
GetUserUserInfo - exit
SetUserUserInfo - enter
SetUserUserInfo - exit - return %lx
put_UserUserInfo - enter
put_UUI - MakeBuffer failed - %lx
put_UserUserInfo - exit - return %lx
get_UserUserInfo - enter
get_UserUserInfo - bad pointer
get_UUI - GetUUI failed %lx
get_UserUserInfo - exit - return %lx
ReleaseUserUserInfo - enter
LineReleaseUserUserInfo failed - %lx
ReleaseUserUserInfo - exit
get_AppSpecific - can't get callinf - %lx
get_AppSpecific - exit
put_AppSpecific - not call's owner. returning TAPI_E_NOTOWNER
put_AppSpecific - Can't set app specific until call is made
put_AppSpecific - exit. hr = %lx
GetDevSpecificBuffer - enter
GetDevSpecificBuffer - bad dword pointer
GetDevSpecificBuffer - bad pointer
GetDevSpecificBuffer - out of memory
GetDevSpecificBuffer - can't get callinf - %lx
get_DevSpecificBuffer - exit
SetDevSpecificBuffer - enter
SetDevSpecificBuffer - bad pointer
SetDevSpecificBuffer - only when call is idle
SetDevSpecificBuffer - can't resize callparams - %lx
SetDevSpecificBuffer - exit
get_DevSpecificBuffer - enter
get_DevSpecificBuffer - bad pointer
get_DevSpecificBuffer - GetDevSpecificBuffer failed - %lx
get_DevSpecificBuffer - fillvariant failed -%lx
put_DevSpecificBuffer - enter
put_DevSpecificBuffer - can't make buffer - %lx
put_DevSpecificBuffer - Set failed - %lx
put_DevSpecificBuffer - exit
SetCallParamsFlags - enter
Can't set callparams flags
SetCallParamsFlags - exit
GetCallParamsFlags - enter
GetCallParamsFlags - bad pointer
GetCallParamsFlags - can't get callinfo - %lx
GetCallParamsFlags - exit
put_DisplayableAddress - enter
put_DisplayableAddress - invalid pointer
Displayable address can only be set before call is made
put_DisplayableAddress - resize failed - %lx
put_DisplayableAddress - exit
get_DisplayableAddress - enter
get_DisplayableAddress - badpointer
get_DisplayableAddress - out of memory 1
get_DisplayableAddress - can't get callinfo - %lx
get_DisplayableAddress - out of memory
get_DisplayableAddress - not available
get_DisplayableAddress - exit
GetCallDataBuffer - enter
GetCallDataBuffer - bad size pointer
GetCallDataBuffer - bad buffer pointer
GetCallDataBuffer - version # [0x%lx] less than TAPI_VERSION2_0
GetCallDataBuffer - out of memory
GetCallDataBuffer - can't get callinfo - %lx
GetCallDataBuffer - exit
SetCallDataBuffer - enter
SetCallDataBuffer - bad pointer
SetCallDataBuffer - unsupported api version
SetCallDataBuffer - failed async
SetCallDataBuffer - failed sync
SetCallDataBuffer - exit
SetCallDataBuffer - can't resize callparams - %lx
get_CallDataBuffer - enter
get_CallDataBuffer - bad pointer
get_CallDataBuffer - failed - %lx
get_CallDataBuffer - fillvariant failed -%lx
get_CallDataBuffer - exit
put_CallDataBuffer - enter
put_CallDataBuffer - can't make buffer - %lx
put_CallDataBuffer - Set failed - %lx
put_CallDataBuffer - exit
get_CallingPartyID - enter
get_CallingPartyID - badpointer
get_CallingPartyID - call must be idle
get_CallingPartyID - out of memory 1
put_CallingPartyID - enter
put_CallingPartyID - invalid pointer
callingpartyid can only be set before call is made
put_CallingPartyID - resize failed - %lx
put_CallingPartyID - exit
get_CallTreatement - invalid pointer
get_CallTreatment - must be on call
get_CallTreatment - can't get callinfo - %lx
put_CallTreatment - enter
put_CallTreatment - must make call first
put_CallTreatment failed - %lx
put_CallTreatment - failed - %lx
put_CallTreatment - exit
put_MinRate - enter
put_MinRate - invalid call state
put_MinRate - exit
get_MinRate - enter
get_MinRate - bad pointer
get_MinRate - exit
put_MaxRate - enter
put_MaxRate - invalid call state
put_MaxRate - exit
get_MaxRate - bad pointer
get_MaxRate - enter
get_MaxRate - exit
put_CountryCode - enter
put_CountryCode - exit - success
get_CountryCode - bad pointer
SetQOS - invalid pMediaType
get_CallId - enter
get_CallId - bad pointer
get_CallId - RefreshCallInfo failed - %lx
get_CallId - exit
get_RelatedCallId - enter
get_RelatedCallId - bad pointer
get_RelatedCallId - RefreshCallInfo failed - %lx
get_RelatedCallId - exit
get_CompletionId - enter
get_CompletionId - bad pointer
get_CompletionId - RefreshCallInfo failed - %lx
get_CompletionId - exit
get_NumberOfOwners - enter
get_NumberOfOwners - bad pointer
get_NumberOfOwners - RefreshCallInfo failed - %lx
get_NumberOfOwners - exit
get_NumberOfMonitors - enter
get_NumberOfMonitors - bad pointer
get_NumberOfMonitors - RefreshCallInfo failed - %lx
get_NumberOfMonitors - exit
get_Trunk - enter
get_Trunk - bad pointer
get_Trunk - RefreshCallInfo failed - %lx
get_Trunk - exit
GetHighLevelCompatibilityBuffer - enter
GetHighLevelCompatibilityBuffer - bad size pointer
GetHighLevelCompatibilityBuffer - bad buffer pointer
GetHighLevelCompatibilityBuffer - out of memory
GetHighLevelCompatibilityBuffer - can't get callinfo - %lx
GetHighLevelCompatibilityBuffer - exit
SetHighLevelCompatibilityBuffer - enter
SetHighLevelCompatibilityBuffer - bad pointer
SetHighLevelCompatibilityBuffer - only when call is idle
SetHighLevelCompatibilityBuffer - can't resize callparams - %lx
SetHighLevelCompatibilityBuffer - exit
get_HighLevelCompatibilityBuffer - enter
get_HighLevelCompatibilityBuffer - bad pointer
get_HighLevelCompatibilityBuffer - fillvariant failed -%lx
get_HighLevelCompatibilityBuffer - exit
put_HighLevelCompatibilityBuffer - enter
put_HighLevelCompatibilityBuffer - Set failed - %lx
put_HighLevelCompatibilityBuffer - can't make buffer - %lx
put_HighLevelCompatibilityBuffer - exit
GetLowLevelCompatibilityBuffer - enter
GetLowLevelCompatibilityBuffer - bad size pointer
GetLowLevelCompatibilityBuffer - bad buffer pointer
GetLowLevelCompatibilityBuffer - out of memory
GetLowLevelCompatibilityBuffer - can't get callinfo - %lx
GetLowLevelCompatibilityBuffer - exit
SetLowLevelCompatibilityBuffer - enter
SetLowLevelCompatibilityBuffer - bad pointer
SetLowLevelCompatibilityBuffer - only when call is idle
SetLowLevelCompatibilityBuffer - can't resize callparams - %lx
SetLowLevelCompatibilityBuffer - exit
get_LowLevelCompatibilityBuffer - enter
get_LowLevelCompatibilityBuffer - bad pointer
get_LowLevelCompatibilityBuffer - fillvariant failed -%lx
get_LowLevelCompatibilityBuffer - exit
put_LowLevelCompatibilityBuffer - enter
put_LowLevelCompatibilityBuffer - Set failed - %lx
put_LowLevelCompatibilityBuffer - can't make buffer - %lx
put_LowLevelCompatibilityBuffer - exit
GetChargingInfoBuffer - enter
GetChargingInfoBuffer - bad size pointer
GetChargingInfoBuffer - bad buffer pointer
GetChargingInfoBuffer - can't get callinfo - %lx
GetChargingInfoBuffer - out of memory
GetChargingInfoBuffer - exit
get_ChargingInfoBuffer - enter
get_ChargingInfoBuffer - bad pointer
get_ChargingInfoBuffer - fillvariant failed -%lx
get_ChargingInfoBuffer - exit
get_Rate - enter
get_Rate - bad pointer
get_Rate - RefreshCallInfo failed - %lx
get_Rate - exit
get_CallInfoLong - enter
get_CallInfoLong - exit - return %lx
put_CallInfoLong - enter
Cannot set MEDIATYPESAVAILABLE
Cannot set CALLERIDIADDRESSTYPE
Cannot set CALLEDIDIADDRESSTYPE
Cannot set CONNECTEDIDIADDRESSTYPE
Cannot set REDIRECTIONIDIADDRESSTYPE
Cannot set REDIRECTINGIDIADDRESSTYPE
Cannot set ORIGIN
Cannot set REASON
Cannot set CALLID
Cannot set RELATEDCALLID
Cannot set COMPLETIONID
Cannot set NUMBEROFOWNERS
Cannot set NUMBEROFMONITORS
Cannot set TRUNK
Cannot set RATE
Cannot set MONITORDIGITMODES
Cannot set MONITORMEDIAMODES
put_CallInfoLong - exit - return %lx
get_CallInfoString - enter
get_CallInfoString - invalid type
get_CallInfoString - exit - return %lx
put_CallInfoString - enter
put_CallInfoString - unsupported CALLINFO_STRING constant - %lx
put_CallInfoString - invalid type
put_CallInfoString - exit - return %lx
get_CallInfoBuffer - enter
get_CallInfoBuffer - invalid type
get_CallInfoBuffer - exit
put_CallInfoBuffer - enter
put_CallInfoBuffer - CHARGINGINFOBUFFER not supported
put_CallInfoBuffer - invalid type
put_CallInfoBuffer - exit
GetCallInfoBuffer - enter
GetCallInfoBuffer - invalid type
GetCallInfoBuffer - exit
SetCallInfoBuffer - enter
SetCallInfoBuffer - CHARGINGINFOBUFFER not supported
SetCallInfoBuffer - invalid type
SetCallInfoBuffer - exit
put_GenerateDigitDuration - enter
Can't set generate digit duration
put_GenerateDigitDuration - exit
get_GenerateDigitDuration - enter
get_GenerateDigitDuration - bad pointer
get_GenerateDigitDuration - can't get callinfo - %lx
get_GenerateDigitDuration - exit
get_MonitorDigitModes - enter
get_MonitorDigitModes - bad pointer
get_MonitorDigitModes - invalid call state
get_MonitorDigitModes - can't get callinfo - %lx
get_MonitorDigitModes - exit
get_MonitorMediaModes - enter
get_MonitorMediaModes - bad pointer
get_MonitorMediaModes - invalid call state
get_MonitorMediaModes - can't get callinfo - %lx
get_MonitorMediaModes - exit
CreateHandleTableEntry - enter. nEntry %Iu
CreateHandleTableEntry - handle table does not exist.
CreateHandleTableEntry - completed. returning [0x%lx]
DeleteHandleTableEntry - enter. dwHandle 0x%lx
DeleteHandleTableEntry - handle table does not exist.
DeleteHandleTableEntry - the handle is 0. Returning.
DeleteHandleTableEntry - finished.
GetHandleTableEntry - enter. dwHandle 0x%lx
GetHandleTableEntry - handle table does not exist.
GetHandleTableEntry - succeeded. returning 0x%Ix
AsynchronousCallTimeout initialized to %d
gdwTapi3RetryProcessingSleep initialized to %ld
gdwTapi3SyncWaitTimeOut initialized to %ld
DLL_PROCESS_ATTACH, _CRT_INIT() failed
tapi3
DLL_PROCESS_ATTACH
DLL_PROCESS_ATTACH, TlsAlloc() failed
DLL_PROCESS_ATTACH, InitializeCriticalSection failed
DLL_PROCESS_ATTACH, gpCallHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpCallHashTable alloc failed
DLL_PROCESS_ATTACH, gpCallHashTable init failed
DLL_PROCESS_ATTACH, gpLineHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpLineHashTable alloc failed
DLL_PROCESS_ATTACH, gpLineHashTable init failed
DLL_PROCESS_ATTACH, gpCallHubHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpCallHubHashTable alloc failed
DLL_PROCESS_ATTACH, gpCallHubHashTable init failed
DLL_PROCESS_ATTACH, gpAgentHandlerHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpAgentHandlerHashTable alloc failed
DLL_PROCESS_ATTACH, gpAgentHandlerHashTable init failed
DLL_PROCESS_ATTACH, gpPhoneHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpPhoneHashTable alloc failed
DLL_PROCESS_ATTACH, gpPhoneHashTable init failed
DLL_PROCESS_ATTACH, gpHandleHashTable constructor threw an exception
DLL_PROCESS_ATTACH, gpHandleHashTable alloc failed
DLL_PROCESS_ATTACH, gpHandleHashTable init failed
DLL_PROCESS_ATTACH, gpLineAsyncReplyList constructor threw an exception
DLL_PROCESS_ATTACH - gpLineAsyncReplyList alloc failed
DLL_PROCESS_ATTACH, gpPhoneAsyncReplyList constructor threw an exception
DLL_PROCESS_ATTACH - gpPhoneAsyncReplyList alloc failed
DLL_PROCESS_ATTACH, gpRetryQueue constructor threw an exception
DLL_PROCESS_ATTACH - gpRetryQueue alloc failed
DLL_PROCESS_DETACH
_CRT_INIT() failed
QueueCallbackEvent - enter
 hDevice ----> %lx
 Msg   ----> %lx
 Param1 ---> %lx
 Param2 ---> %lx
 Param3 ---> %lx
QueueCallbackEvent - out of memory - losing message
QueueCallbackEvent - New pParams is ----> %p
QueueCallbackEvent - overflow/underflow calculating alloc size
DequeueCallbackEvent - enter
DequeueCallbackEvent - failed to pop from gCallbackEventPtrList
DequeueCallbackEvent - IsBadReadPtr *ppCallBackEvent
DequeueCallbackEvent - no more messages
CallbackThread: enter
CallbackThread: CoInitialize failed
tapi3.dll
CallbackThread: gbExitThread
CallbackThread: Wait for event
CallbackThread: The DequeueCallbackEvent returned a wrong value
CallbackThread: event type is CALLBACKTYPE_RAW_ASYNC_MESSAGE
CallbackThread: asyncevent type not handled %x
CallbackThread: event type is CALLBACKTYPE_TAPI_EVENT_OBJECT
GetFunctionIndex: function %p is not found in the array of functions!
GetFunctionIndex: function %p mapped to index %d.
AsyncEventsThread: enter
AsyncEventsThread: CoInitialize failed 
AsyncEventsThread - failed to signal hStartupEvent event. LastError = 0x%lx
AsyncEventsThread: invalid param for dwBufSize
AsyncEventsThread: exit requested
AsyncEventsThread: CoWaitForMultipleHandles failed!!! hr=0x%x
AsyncEventsThread: Retry Queue signalled
AsyncEventsThread: exit requested.
AsyncEventsThread: rpc exception %d handled
AsyncEventsThread: allocating larger event buf (size=x%x)
AsyncEventsThread: failed to allocate memory for a larger event buffer
AsyncEventsThread: failed to allocate memory.
AsyncEventsThread: msg=%ld, hDevice=x%x, OpenContext =x%lx, p1=x%lx, p2=x%lx, p3=x%lx, pInitData=%p
AsyncEventsThread: LINE_CREATEDIALOGINSTANCE
LoadLibraryW(%hs) failed, err=%u
GetProcAddr(TUISPI_providerGenericDialog) failed
AsyncEventsThread: LINE_SENDDIALOGINSTANCEDATA
AsyncEventsThread: pInitInst is NULL. discarding msg
AsyncEventsThread: misaligned pInitInst[%p]. discarding msg
AsyncEventsThread: pInitData[%p] points to unreadable memory. discarding msg
AsyncEventsThread: Bad pInitInst[%p], key[%ld] discarding msg
AsyncEventsThread: exception. bad pInitData[%p]
AsyncEventsThread: LINE_PROXYREQUEST
AsyncEventsThread: failed to allocate memory for proxy request
AsyncEventsThread: failed to allocate memory for proxy request.
AsyncEventsThread: calling postprocessing function,function index (pAsyncEventMsg->fnPostProcessProcHandle) = [%d]
AsyncEventsThread: calling ProcessMessage()
AsyncEventsThread: ProcessMessage() did not succeed. requeueing...
AsyncEventsThread: ProcessMessage() - failed to requeue item
AsyncEventsThread: exit
More func args than MAX_TAPI_FUNC_ARGS in dofunc
Bad lpdword in dofunc
DoFunc: Bad hxxxapp [NULL] in dofunc
DoFunc: Bad hxxxapp [%p] in dofunc
DoFunc: Bad hxxxapp2 in dofunc (0x%08lx)
DoFunc: Bad hWnd in dofunc
DoFunc: error, lpGet_SizeToFollow !followed by Size
Bad get struct/size in dofunc
Bad get size/struct2 in dofunc
DoFunc: error, lpSet_SizeToFollow !followed by Size
Bad set size/struct in dofunc
Nomem set size/struct in dofunc
Bad pointer in get size/struct in dofunc
DoFunc: rpcException # %d
DoFunc: back from srv- return code=0x%08lx
DoFunc: lpGet_SizeToFollow MemCopy failed
DoFunc: lpGet_Struct MemCopy failed
CoCreate failed for MSP on dwDeviceID %ld - error %lx
GetMSPClsid failed on dwDeviceID %lx
LoadUIDll: GetProcAddress(%ls,%s) failed, err=%u
LoadLibraryW(%ls) failed, err=%u
Mem alloc failed (for mod name) size:0x%08lx
GetModuleFileNameA failed, err=%u
GetModuleFileNameW failed, err=%u
CreateThreadsAndStuff: enter
CreateThreadsAndStuff: failed to allocate gpAsyncEventsThreadParams
CreateThreadsAndStuff: failed to allocate gpAsyncEventsThreadParams->pBuf
CreateThreadsAndStuff - failed to create ghAsyncRetryQueueEvent event
CreateThreadsAndStuff - failed to create hThreadStartupEvent event. LastError= 0x%lx
CreateThreadsAndStuff: failed to allocate AsyncEventsThread
CreateThreadsAndStuff: AsyncEventsThread exited
CreateThreadsAndStuff: failed waiting tor AsyncEventsThread initialization
CreateThreadsAndStuff: failed to create CallbackThread
CreateThreadsAndStuff: exit
NewInitialize - enter
NewInitialize: failed to allocate m_pLineInitData
NewInitialize: handle for m_pLineInitData = [0x%lx]
NewInitialize: failed to create handle
NewInitialize: lineInitialize succeeded. m_hLineApp %p
NewInitialize: lineInitialize failed. 
NewInitialize: failed to allocate m_pPhoneInitData
NewInitialize: handle for m_pPhoneInitData = [0x%lx]
NewInitialize: phoneInitialize succeeded. m_hPhoneApp %p
NewInitialize: phoneInitialize failed. 
NewInitialize - exit, result=0x%lx
LineBlindTransfer: bad lpszDestAddress: 0x%p
lineClose: line - %lx  lResult %lx
lineClose: removing address line handle [%lx] from the handle table
lineCompleteCallPostProcess: enter
dwP1=x%lx, dwP2=x%lx, dwP3=x%lx, dwP4=x%lx
lineCompleteCallPostProcess: failed to write to [%p]: LINEERR_INVALPOINTER
Calling TUISPI_lineConfigDialog...
LineConfigDialogEditW exit - return E_OUTOFMEMORY
Calling TUISPI_lineConfigDialogEdit...
lineDeallocateCall - hCall = 0x%08lx
lineDevSpecificPostProcess: enter
lineDevSpecificPostProcess: failed to copy memory to [%p] from [%p]:  LINEERR_INVALPOINTER
lineDevSpecificPostProcess: exit
Bad lpszDestAddress in lineDial
lineGatherDigitsWPostProcess: enter
lineGatherDigitsWPostProcess: failed to write %lx digits to memory [%p]
Bad lpszDestAddress in lineGatherDigitsW
Alloc failed in LineGetAddressStatus
Alloc failed 2 in LineGetAddressStatus
LineGetAgentCaps failed - buffer to small
LineGetAgentCaps - repeat ClientAlloc failed
LineGetAgentCaps - WaitForReply failed
LineGetAgentCaps - failed sync
LineGetCallInfo: NULL hCall
LineGetDevConfig exit - return E_OUTOFMEMORY
LineGetDevConfig exit - return %lx
LineGetID - enter
   hLine --------->%lx
   hCall ----------->%lx
   dwSelect -------->%lx
   ppDeviceID ------>%p
   lpszDeviceClass ->%p
midi/in
midi/out
LineGetID exit - return LINEERR_NOMEM
LineGetID - WaveStringIdToDeviceId failed
LineGetID exit - return %lx
LineGetLineDevStatus - alloc failed
LineGetProxyStatus - alloc failed
lineMakeCallPostProcess: enter
lineMakeCallPostProcess: failed to write handle %lx to memory location %p. returning LINEERR_INVALPOINTER
LineNegotiateAPIVersion: hLineApp %u
LineOpen: pt3Line %p -- invalid ptr 
LinePark - enter
LinePark failed - buffer too small
LinePark - repeat ClientAlloc failed
LinePark - repeat CreateHandleTableEntry failed
LinePark - exit
lineSetupConfPostProcess: enter
lineSetupConfPostProcess: hConfCall [%lx] hConsultCall [%lx] lphConfCall [%p] lphConsultCall [%p]
lineSetupConfPostProcess: failed to set memory at %p or at %p
PhoneClose - enter. hPhone[%u] CleanOnError[%d]
PhoneClose - removing phone's hash table entry
PhoneClose - exit. hr = %lx
phoneDevSpecificPostProcess: enter
phoneDevSpecificPostProcess: failed to copy %ld(10) bytes, %p -> %p.PHONEERR_INVALPOINTER
PhoneGetDisplay - enter
   hPhone ---------->%lx
   ppDisplay ------->%p
PhoneGetDisplay exit - return E_OUTOFMEMORY
PhoneGetDisplay exit
PhoneGetID - enter
PhoneGetID exit - return LINEERR_NOMEM
PhoneGetID - WaveStringIdToDeviceId failed
PhoneGetID exit - return %lx
gpLineAsyncReplyList->addRequest failed
gpPhoneAsyncReplyList->addRequest failed
CheckTapisrvCallhub - hCallHub: %lx
CheckTapisrvCallhub - found hCall %lx
CheckTapisrvCallhub - returned callhub doesn't match
CheckTapisrvCallhub - LineGetHubRelatedCallsfailed
CheckTapisrvCallhub - exit
In ProcessMessage - MsgType:%x
CreateTapisrvCallHub failed in LINE_APPNEWCALLHUB
LINE_REPLY
gpLineAsyncReplyList->addReply failed
PHONE_REPLY
gpPhoneAsyncReplyList->addReply failed
conference controller call:%d.
conference controller call.
Ignoring call with wrong address id
midl_user_allocate: enter, size=x%x
midl_user_free: enter, p=x%p
AllocClientResources - enter
OpenSCManager failed, err=%u
TAPISRV
OpenService failed, err=%u
Tapisrv running
ERROR: Tapisrv stuck SERVICE_START_PENDING
ERROR: Tapisrv stuck SERVICE_STOP_PENDING
Starting tapisrv (NT)...
StartService(TapiSrv) failed, err=%u
error, service status=%d
AllocClientResources: failed to allocate 0x%lx characters for pszUserName
AllocClientResources: GetUserName failed. LastError = 0x%lx
AllocClientResources: UserName [%S]
AllocClientResources: GetComputerName failed. LastError = 0x%lx
AllocClientResources: ComputerName [%S]
tapsrvlpc
ncalrpc
RpcStringBindingCompose failed: err=%d, szNetAddr='%s'
RpcBindingFromStringBinding failed, err=%d, szBinding='%s'
AllocCliRes: calling ClientAttach...
AllocCliRes: ClientAttach returned x%x. ghAsyncEventsEvent[%p]
AllocCliRes: ClientAttach caused except=%d
AllocCliRes: ClientAttach failed, result=x%x
AllocClientResources: exit, returning x%x
NewShutdown - enter
NewShutdown - finish
FinalTapiCleanup - enter
FinalTapiCleanup - ghAsyncEventsThread
FinalTapiCleanup - ghCallbackThread
NewShutdown: calling TUISPI_providerGenericDialogData...
NewShutdown: TUISPI_providerGenericDialogData returned
FinalTapiCleanup - exit
ClientAlloc: Overflow trying to alloc (0x%lx) bytes!!
ClientAlloc: LocalAlloc (x%lx) failed, err=x%lx
----- ClientFree: ptr = NULL!
FreeClientResources - enter
FreeClientResources - exit
TAPI3.DLL
UIThread: enter (tid=%d)
tapi32.dll
UIThread: calling TUISPI_providerGenericDialog...
UIThread: TUISPI_providerGenericDialog returned (tid=%d)
UIThread: exit (tid=%d)
lineGetGroupList failed - buffer too small
lineGetGroupList - repeat ClientAlloc failed
lineGetGroupList - failed to create a handle
lineGetGroupList - WaitForReply failed
lineGetGroupList - failed sync
lineGetGroupList - completed hr %lx
lineGetQueueList - enter
lineGetQueueList failed - buffer to small
lineGetQueueList - repeat ClientAlloc failed
lineGetQueueList - failed sync
lineGetQueueList - finished hr = %lx
lineShutdown
lineInitializeExW
LoadTapi32 - getprocaddres failed 1
tapi3helper
LoadTapi32 - lineinit failed
Could not load TAPI32.DLL
tapiRequestMakeCallW
Could not get the address of tapimakecall
tapimakecall failed - %lx
LineTranslateDialog - load tapi32 failed
lineTranslateDialogW
LineTranslateDialog - getprocaddress failed 2
LineTranslateDialog failed - %lx
lineTranslateAddress - enter
lineTranslateAddress - load tapi32 failed
lineTranslateAddressW
lineTranslateAddress - getprocaddress failed 2
lineTranslateAddress - ClientAlloc failed
LineGetTranslateCaps failed - buffer to small
lineTranslateAddress - repeat ClientAlloc failed
lineTranslateAddress - exit
LineGetTranslateCaps - enter
LineGetTranslateCapsg - load tapi32 failed
lineGetTranslateCapsW
LineGetTranslateCaps - getprocaddress failed 2
LineGetTranslateCaps - ClientAlloc failed
LineGetTranslateCaps - repeat ClientAlloc failed
LineGetTranslateCaps - exit
WaveStringIdToDeviceId (%S, %S) - enter
WaveStringIdToDeviceId (%S, %S) - failed
CTAPI[%p] - enter
CTAPI - finish
~CTAPI[%p] - enter
~CTAPI - finish
tapiui.dll
http://www.microsoft.com/
6; expires = Sat, 12-Sep-2099 00:00:00 GMT
signal CAsyncRequest %d 
addReply - Create Semaphore failed
addReply- failed - because of alloc failure
wait CAsyncRequest %d 
wait CAsyncRequest %d WaitForSingle object returned WAIT_ABANDONED
wait CAsyncRequest %d WaitForSingle object returned WAIT_TIMEOUT
wait CAsyncRequest %d WaitForSingle object returned WAIT_FAILED, LastError = %d
create CAsyncRequest - CreateSemaphore failed
create CAsyncRequest %d 
Could not alloc for CAsyncRequestReply
addRequest - Create Semaphore failed
CAsyncReplyList
addRequest- failed - because of alloc failure
CAsyncRequestReply
delete CAsyncRequest %d 
TAPI3
Software\Microsoft\Windows\CurrentVersion\Telephony
TUISPI_lineConfigDialogEdit
TUISPI_lineConfigDialog
TUISPI_providerGenericDialogData
TUISPI_providerGenericDialog
Tapi3SyncWaitTimeOut
Tapi3RetryProcessingSleep
AsynchronousCallTimeout
Tapi32RequestRetryTimeout
Tapi32MaxNumRequestRetries
Initialize enter
Initialize exit
GetConnectionInterface - bad pointer
GetCPC - bad pointer
Advise[%p] called
Advise - bad pointer
Advise - bad IUnknown
Advise - not initialized
Advise - advise already called
Advise failed - pCD == NULL
Advise - IUnknown bad
Advise generated cookie [%lx]
Advise - RegisterInterfaceInGlobal failed - %lx
Advise - exit
Unadvise[%p] - enter. Cookie: [%lx]
Unadvise - immediate 
Unadvise - %ld threads in get
Unadvise - RevokeInterfaceFromGlobal failed - hr = %lx
Unadvise - no global interface table
Unadvise - cp does not match 
Unadvise - cp not registered 
Unadvise - exit
EnumConnections - bad pointer
FinalRelease - calling unadvise
GrabEventCallback - GetInterfaceFromGlobal suceeded [%p]
GrabEventCallback - GetInterfaceFromGlobal failed - hr = %lx
GrabEventCallback - already marked for delete
GrabEventCallback - no event
GrabEventCallback - already released
GrabEventCallback - exit
CTAPIConnectionPoint
QDI bad pDispIn
QDI bad ppDispOut
QDI bad bstr
QDI invalid IID
CDispatchMapper
GetIDsOfNames - found %S on ITPhone
GetIDsOfNames - found %S on ITAutomatedPhoneControl
InternalAddRef - dwR %d
Open - enter
Open - phone in use
Open - invalid privilege
Open - PhoneOpen returned failure - exit 0x%08x
Open - exit S_OK
Close - enter
Close - phone not open - return S_OK
Close - exit - return %lx
get_Addresses - enter
get_Addresses - bad pointer
get_Addresses - could not enumerate addresses from tapi - return %lx
get_Addresses - could add address to array
get_Addresses - could not create collection
get_Addresses - could not get IDispatch interface
get_Addresses - could not initialize collection
get_Addresses - exit - return %lx
EnumerateAddresses - enter
EnumerateAddresses - bad pointer
EnumerateAddresses - could not enumerate addresses from tapi - return %lx
EnumerateAddresses - could add address to array
EnumerateAddresses - could not create enum - return %lx
EnumerateAddresses - could not initialize enum - return %lx
EnumerateAddresses - exit - return %lx
get_PreferredAddresses - enter
get_PreferredAddresses - bad pointer
get_PreferredAddresses - could not enumerate addresses from tapi - return %lx
get_PreferredAddresses - could add address to array
get_PreferredAddresses - could not create collection
get_PreferredAddresses - could not get IDispatch interface
get_PreferredAddresses - could not initialize collection
get_PreferredAddresses - exit - return %lx
EnumeratePreferredAddresses - enter
EnumeratePreferredAddresses - bad pointer
EnumeratePreferredAddresses - could not enumerate addresses from tapi - return %lx
EnumeratePreferredAddresses - could add address to array
EnumeratePreferredAddresses - could not create enum - return %lx
EnumeratePreferredAddresses - could not initialize enum - return %lx
EnumeratePreferredAddresses - exit - return %lx
get_PhoneCapsLong - bad pointer
get_PhoneCapsLong - enter
get_PhoneCapsLong - could not get phonecaps
get_PhoneCapsLong - bad pclCap
get_PhoneCapsLong - exit - return %lx
get_PhoneCapsString - bad pointer
get_PhoneCapsString - enter
get_PhoneCapsString - could not get phonecaps - %lx
get_PhoneCapsString - bad pcsCap
get_PhoneCapsString - SysAllocString failed - E_OUTOFMEMORY
get_PhoneCapsString - exit - return S_OK
get_Terminals - enter
get_Terminals - bad pointer
get_Terminals - got terminal wave id %d
get_Terminals - could add terminal to array
get_Terminals - could not get terminal direction - %lx
get_Terminals - could not get terminal media type - %lx
get_Terminals - could not create collection
get_Terminals - could not get IDispatch interface
get_Terminals - could not initialize collection
get_Terminals - exit - return %lx
EnumerateTerminals - enter
EnumerateTerminals - bad pointer
EnumerateTerminals - could not create enum - return %lx
EnumerateTerminals - could not initialize enum - return %lx
EnumerateTerminals - exit - return %lx
get_ButtonMode - enter
get_ButtonMode - bad pointer
get_ButtonMode - phone not open
get_ButtonMode - bad button mode
get_ButtonMode - exit - return %lx
put_ButtonMode - enter
put_ButtonMode - phone is not open - exit TAPI_E_PHONENOTOPEN
put_ButtonMode - wrong phone privilege - exit TAPI_E_NOTOWNER
put_ButtonMode - failed to get button info
put_ButtonMode - PhoneGetButtonInfo returned a bad memory block
put_ButtonMode - bad ButtonMode
put_ButtonMode - put_ButtonMode - return %lx
put_ButtonText - enter
exit E_POINTER
put_ButtonText - invalid parameter
put_ButtonText - phone is not open - exit TAPI_E_PHONENOTOPEN
put_ButtonText - wrong phone privilege - exit TAPI_E_NOTOWNER
put_ButtonText - failed to get button info
put_ButtonText - PhoneGetButtonInfo returned a bad memory block
put_ButtonText - failed to allocate memory for the new structure
put_ButtonText - exit - return %lx
get_PhoneCapsBuffer[%p] - enter
get_PhoneCapsBuffer - bad pointer
get_PhoneCapsBuffer - failed to get phone caps buffer
get_PhoneCapsBuffer - failed to copy phone caps buffer to a variant
get_PhoneCapsBuffer - exit - return S_OK
GetPhoneCapsBuffer - enter
GetPhoneCapsBuffer - bad pointer
GetPhoneCapsBuffer - could not get phonecaps
GetPhoneCapsBuffer - could not allocate memory for the output buffer
GetPhoneCapsBuffer - unknown capability type %x
GetPhoneCapsBuffer - exit - return S_OK
get_Display - enter
get_Display - bad pointer
get_Display - phone not open
get_Display - failed to get display. hr = %lx
get_Display - failed to get the size of the buffer needed for the display. LastError = %lx
get_Display - failed to allocate memory for lpWideCharStr
get_Display - failed to convert string to wchar. last error %lx
get_Display - failed to allocate memory for bstr
get_Display - unsupported string format
get_Display - tapisrv returned unrecognized string type %lx
get_Display - exit - return %lx
SetDisplay - enter
SetDisplay - invalid parameter
SetDisplay - phone not open
SetDisplay - exit - return %lx
get_ButtonFunction - enter
get_ButtonFunction - bad pointer
get_ButtonFunction - phone not open
get_ButtonFunction - bad button function
get_ButtonFunction - exit - return %lx
put_ButtonFunction - enter
put_ButtonFunction - phone is not open - exit TAPI_E_PHONENOTOPEN
put_ButtonFunction - wrong phone privilege - exit TAPI_E_NOTOWNER
put_ButtonFunction - failed to get button info - %lx
put_ButtonFunction - PhoneGetButtonInfo returned a bad memory block
put_ButtonFunction - bad ButtonFunction
put_ButtonFunction - exit - return %lx
get_ButtonText - enter
get_ButtonText - bad pointer
get_ButtonText - phone not open
get_ButtonText - SysAllocString Failed
get_ButtonText - button has no text
get_ButtonText - exit - return %lx
get_ButtonState - enter
get_ButtonState - bad pointer
get_ButtonState - phone not open
get_ButtonState - failed to get get button info
get_ButtonState - bad button state
get_ButtonState - exit - return %lx
get_LampMode - enter
get_LampMode - bad pointer
get_LampMode - phone not open
get_LampMode  - failed to get lamp mode - %lx
get_LampMode - bad lamp mode received from tapisrv
get_LampMode - exit - return S_OK
put_LampMode - enter
put_LampMode - phone is not open - exit TAPI_E_PHONENOTOPEN
put_LampMode - wrong phone privilege - exit TAPI_E_NOTOWNER
put_LampMode - unknown lamp mode
put_LampMode - exit - return %lx
get_HookSwitchState - enter
get_HookSwitchState - invalid hookswitch
get_HookSwitchState - bad pointer
get_HookSwitchState - phone not open
get_HookSwitchState - could not get phonecaps - %lx
get_HookSwitchState - bad HookSwitchDevice
get_HookSwitchState - bad dwHookSwitchMode
get_HookSwitchState - exit - return %lx
put_HookSwitchState - enter
put_HookSwitchState - invalid hookswitch
put_HookSwitchState - phone is not open - exit TAPI_E_PHONENOTOPEN
put_HookSwitchState - wrong phone privilege - exit TAPI_E_NOTOWNER
put_HookSwitchState - could not get phonecaps - %lx
put_HookSwitchState - bad HookSwitchMode
put_HookSwitchState - bad HookSwitchDevice
put_HookSwitchState - exit - return %lx
put_RingMode - enter
put_RingMode - phone is not open - exit TAPI_E_PHONENOTOPEN
put_RingMode - wrong phone privilege - exit TAPI_E_NOTOWNER
put_RingMode - PhoneGetRing failed
put_RingMode - exit - return %lx
get_RingMode - enter
get_RingMode - bad pointer
get_RingMode - phone not open
get_RingMode - exit - return %lx
put_RingVolume - enter
put_RingVolume - phone is not open - exit TAPI_E_PHONENOTOPEN
put_RingVolume - wrong phone privilege - exit TAPI_E_NOTOWNER
put_RingVolume - PhoneGetRing failed
put_RingVolume - exit
get_RingVolume - enter
get_RingVolume - bad pointer
get_RingVolume - phone not open
get_RingVolume - exit - return %lx
get_Privilege - phone not open
get_Privilege - exit - return %lx
   hPhoneApp --------->%lx
tapi/line
   dwNumLineDeviceIDs -->%lx
Initialize - PhoneOpen failed %lx
Initialize - CreateTimerQueue failed %lx
Initialize - CreateEvent failed %lx
FinalRelease enter, this %p
FinalRelease - exit, this %p
UpdatePhoneCaps - dynamic cast operation failed
UpdatePhoneCaps - GetBuffer failed - %lx
UpdatePhoneCaps - PhoneGetDevCaps failed - %lx
InvalidatePhoneCaps - dynamic cast operation failed
IsPhoneOnAddress - UpdatePhoneCaps failed %lx
IsPhoneOnAddress - QueryInterface IID_ITTerminalSupport failed %lx
IsPhoneOnAddress - QueryInterface IID_ITMediaSupport failed %lx
IsPhoneOnAddress - get_MediaTypes failed %lx
IsPhoneOnPreferredAddress - dynamic cast failed
IsPhoneUsingWaveID - matched phone wave capture id %d
IsPhoneUsingWaveID - matched phone wave render id %d
IsPhoneUsingWaveID - PhoneOpen failed %lx
HandlePhoneDevSpecificMessage - enter
HandlePhoneDevSpecificMessage - FindPhoneObject failed to find matching phone.
HandlePhoneDevSpecificMessage - exit. 
HandlePhoneButtonMessage - enter
HandlePhoneButtonMessage - bad phone handle
HandlePhoneButtonMessage - exit
HandlePhoneStateMessage - enter
HandlePhoneStateMessage - bad phone handle
HandlePhoneStateMessage - bad HookSwitchMode
HandlePhoneStateMessage - PHONE_STATE %lx event not handled
HandlePhoneStateMessage - exit
HandlePhoneCloseMessage - enter
HandlePhoneCloseMessage - bad phone handle
HandlePhoneCloseMessage - exit
Automation_CallState - enter
Automation_CallState - phone[%p]
Automation_CallState - selected call [%p]
Automation_CallState - current phone state [%d]
FALSE
Automation_CallState - phone control enabled [%s]
Automation_CallState - new call state [%d]
Automation_CallState - CS_IDLE
Automation_CallState - CS_INPROGRESS
Automation_CallState - CS_CONNECTED
Automation_CallState - CS_DISCONNECTED
Automation_CallState - CS_OFFERING
Automation_CallState - Answer failed %08x
Automation_CallState - CS_HOLD
Automation_CallState - CS_QUEUED
Automation_CallState - new phone state [%d]
Automation_CallState - exit
Automation_EndOfNumberTimeout - enter
Automation_EndOfNumberTimeout - exit
Automation_ButtonDown - enter
Automation_ButtonDown - '%s'
Automation_ButtonDown - '#'
Automation_ButtonDown - VOLUMEUP
Automation_ButtonDown - Volume: %d
Automation_ButtonDown - CreateTimerQueueTimer failed - %lx
Automation_ButtonDown - VOLUMEDOWN
Automation_ButtonDown - PBF_SEND
Automation_ButtonDown - exit
Automation_ButtonUp - enter
Automation_ButtonUp - CreateTimerQueueTimer failed - %lx
Automation_ButtonUp - VOLUMEUP
Automation_ButtonUp - VOLUMEDOWN
Automation_ButtonUp - exit
Automation_OnHook - enter
Automation_OnHook - Phone is already in onhook state!
Automation_OnHook - Disconnect failed %08x
Automation_OnHook - exit
Automation_OffHook - enter
Automation_OffHook - Answer failed %08x
Automation_OffHook - exit
ToneTimerCallback - enter
ToneTimerCallback - exit
DTMFTimerCallback - enter
DTMFTimerCallback - exit
RingTimerCallback - enter
RingTimerCallback - PhoneGetRing failed - %lx
RingTimerCallback - exit
VolumeTimerCallback - enter
VolumeTimerCallback - Volume: %lx
VolumeTimerCallback - SetVolume failed - %lx
VolumeTimerCallback - GetVolume failed - %lx
VolumeTimerCallback - exit
AutoEndOfNumberTimerCallback - enter
AutoEndOfNumberTimerCallback - exit
GetPhoneWaveRenderID - got phone wave render id %d
GetPhoneRenderWaveID - PhoneGetID failed %08x
GetPhoneRenderWaveID - PhoneOpen failed %08x
OpenWaveDevice - enter
OpenWaveDevice - Initialize failed %08x
OpenWaveDevice - OpenWaveDeviceForRing failed %08x
OpenWaveDevice - GetPhoneWaveRenderID failed %08x
OpenWaveDevice - OpenWaveDeviceForTone failed %08x
OpenWaveDevice - OpenMixerDevice failed %08x
OpenWaveDevice - exit
CloseWaveDevice - enter
CloseWaveDevice - exit
AutomatedPhoneControlQI - enter
The application does not have this phone open
so it cannot access the AutomatedPhoneControl interface
The application does not have owner privilege
UpdatePhoneCaps failed 0x%lx
The phone does not have PCL_GENERICPHONE capability
AutomatedPhoneControlQI - exit
StartTone - enter
StartTone - invalid tone type - exit E_INVALIDARG
StartTone - negative argument - exit E_INVALIDARG
StartTone - phone is not open - exit TAPI_E_PHONENOTOPEN
StartTone - wrong phone privilege - exit TAPI_E_NOTOWNER
StartTone - CreateTimerQueueTimer failed - %lx
StartTone - exit 0x%08x
StartTone - exit S_OK
StopTone - enter
StopTone - phone is not open - exit TAPI_E_PHONENOTOPEN
StopTone - wrong phone privilege - exit TAPI_E_NOTOWNER
StopTone - exit - return %lx
get_Tone - enter
get_Tone - bad parameter - exit E_POINTER
get_Tone - phone is not open - exit TAPI_E_PHONENOTOPEN
get_Tone - exit S_OK
StartRinger - enter
StartRinger - negative argument - exit E_INVALIDARG
StartRinger - phone is not open - exit TAPI_E_PHONENOTOPEN
StartRinger - wrong phone privilege - exit TAPI_E_NOTOWNER
StartRinger - exit 0x%08x
StartRinger - CreateTimerQueueTimer failed - %lx
StartRinger - exit S_OK
StopRinger - enter
StopRinger - phone is not open - exit TAPI_E_PHONENOTOPEN
StopRinger - wrong phone privilege - exit TAPI_E_NOTOWNER
StopRinger - exit 0x%08x
StopRinger - exit S_OK
get_Ringer - enter
get_Ringer - bad parameter - exit E_POINTER
get_Ringer - phone not open
get_Ringer - exit S_OK
put_PhoneHandlingEnabled - enter
put_PhoneHandlingEnabled - phone is not open - exit TAPI_E_PHONENOTOPEN
put_PhoneHandlingEnabled - wrong phone privilege - exit TAPI_E_NOTOWNER
put_PhoneHandlingEnabled - a call is selected - exit TAPI_E_INUSE
put_PhoneHandlingEnabled - PhoneGetHookSwitch failed - %lx
put_PhoneHandlingEnabled - exit S_OK
get_PhoneHandlingEnabled - enter
get_PhoneHandlingEnabled - bad parameter - exit E_POINTER
get_PhoneHandlingEnabled - phone is not open - exit TAPI_E_PHONENOTOPEN
get_PhoneHandlingEnabled - exit S_OK
put_AutoEndOfNumberTimeout - enter
put_AutoEndOfNumberTimeout - negative argument - exit E_INVALIDARG
put_AutoEndOfNumberTimeout - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoEndOfNumberTimeout - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoEndOfNumberTimeout - exit S_OK
get_AutoEndOfNumberTimeout - enter
get_AutoEndOfNumberTimeout - bad parameter - exit E_POINTER
get_AutoEndOfNumberTimeout - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoEndOfNumberTimeout - exit S_OK
put_AutoDialtone - enter
put_AutoDialtone - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoDialtone - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoDialtone - exit S_OK
get_AutoDialtone - enter
get_AutoDialtone - bad parameter - exit E_POINTER
get_AutoDialtone - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoDialtone - exit S_OK
put_AutoStopTonesOnOnHook - enter
put_AutoStopTonesOnOnHook - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoStopTonesOnOnHook - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoStopTonesOnOnHook - exit S_OK
get_AutoStopTonesOnOnHook - enter
get_AutoStopTonesOnOnHook - bad parameter - exit E_POINTER
get_AutoStopTonesOnOnHook - exit S_OK
put_AutoStopRingOnOffHook - enter
put_AutoStopRingOnOffHook - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoStopRingOnOffHook - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoStopRingOnOffHook - exit S_OK
get_AutoStopRingOnOffHook - enter
get_AutoStopRingOnOffHook - bad parameter - exit E_POINTER
get_AutoStopRingOnOffHook - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoStopRingOnOffHook - exit S_OK
put_AutoKeypadTones - enter
put_AutoKeypadTones - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoKeypadTones - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoKeypadTones - exit S_OK
get_AutoKeypadTones - enter
get_AutoKeypadTones - bad parameter - exit E_POINTER
get_AutoKeypadTones - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoKeypadTones - exit S_OK
put_AutoKeypadTonesMinimumDuration - enter
put_AutoKeypadTonesMinimumDuration - negative argument - exit E_INVALIDARG
put_AutoKeypadTonesMinimumDuration - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoKeypadTonesMinimumDuration - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoKeypadTonesMinimumDuration - exit S_OK
get_AutoKeypadTonesMinimumDuration - enter
get_AutoKeypadTonesMinimumDuration - bad parameter - exit E_POINTER
get_AutoKeypadTonesMinimumDuration - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoKeypadTonesMinimumDuration - exit S_OK
put_AutoVolumeControl - enter
put_AutoVolumeControl - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoVolumeControl - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoVolumeControl - exit S_OK
get_AutoVolumeControl - enter
get_AutoVolumeControl - bad parameter - exit E_POINTER
get_AutoVolumeControl - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoVolumeControl - exit S_OK
put_AutoVolumeControlStep - enter
put_AutoVolumeControlStep - invalid argument - exit E_INVALIDARG
put_AutoVolumeControlStep - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoVolumeControlStep - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoVolumeControlStep - exit S_OK
get_AutoVolumeControlStep - enter
get_AutoVolumeControlStep - bad parameter - exit E_POINTER
get_AutoVolumeControlStep - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoVolumeControlStep - exit S_OK
put_AutoVolumeControlRepeatDelay - enter
put_AutoVolumeControlRepeatDelay - invalid argument - exit E_INVALIDARG
put_AutoVolumeControlRepeatDelay - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoVolumeControlRepeatDelay - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoVolumeControlRepeatDelay - exit S_OK
get_AutoVolumeControlRepeatDelay - enter
get_AutoVolumeControlRepeatDelay - bad parameter - exit E_POINTER
get_AutoVolumeControlRepeatDelay - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoVolumeControlRepeatDelay - exit S_OK
put_AutoVolumeControlRepeatPeriod - enter
put_AutoVolumeControlRepeatPeriod - invalid argument - exit E_INVALIDARG
put_AutoVolumeControlRepeatPeriod - phone is not open - exit TAPI_E_PHONENOTOPEN
put_AutoVolumeControlRepeatPeriod - wrong phone privilege - exit TAPI_E_NOTOWNER
put_AutoVolumeControlRepeatPeriod - exit S_OK
get_AutoVolumeControlRepeatPeriod - enter
get_AutoVolumeControlRepeatPeriod - bad parameter - exit E_POINTER
get_AutoVolumeControlRepeatPeriod - phone is not open - exit TAPI_E_PHONENOTOPEN
get_AutoVolumeControlRepeatPeriod - exit S_OK
UnselectAllPreviouslySelectedTerminals - enter
UnselectAllPreviouslySelectedTerminals - failed to reset enumerator %p - hr = 0x%08x. Not unselecting terminals.
UnselectAllPreviouslySelectedTerminals - cannot unselect terminal %p on ITBCC2 %p - hr = 0x%08x. Continuing...
UnselectAllPreviouslySelectedTerminals - normal exit
SelectDefaultTerminalsOnCall - enter
SelectDefaultTerminalsOnCall - cannot get call's address - exit 0x%08x
SelectDefaultTerminalsOnCall - cannot enum phone's terminals - exit 0x%08x
SelectDefaultTerminalsOnCall - cannot get call's ITBasicCallControl2 interface - exit 0x%08x
SelectDefaultTerminalsOnCall - cannot select terminal %p on ITBCC2 %p - unselecting other terminals
SelectDefaultTerminalsOnCall - exit 0x%08x
SelectDefaultTerminalsOnCall - exit S_OK
UnselectDefaultTerminalsOnCall - enter
UnselectDefaultTerminalsOnCall - cannot get call's address - exit 0x%08x
UnselectDefaultTerminalsOnCall - cannot enum phone's terminals - exit 0x%08x
UnselectDefaultTerminalsOnCall - cannot get call's ITBasicCallControl2 interface - exit 0x%08x
UnselectDefaultTerminalsOnCall - cannot unselect terminal %p on ITBCC2 %p
UnselectDefaultTerminalsOnCall - exit S_OK
SelectCall - enter
SelectCall - exit E_POINTER
SelectCall - cannot get call privilege - exit 0x%08x
SelectCall - wrong call privilege - exit TAPI_E_NOTOWNER
SelectCall - cannot get call state - exit 0x%08x
SelectCall - call is disconnected - exit TAPI_E_INVALCALLSTATE
SelectCall - another call already selected - exit TAPI_E_INUSE
SelectCall - phone is not open - exit TAPI_E_PHONENOTOPEN
SelectCall - wrong phone privilege - exit TAPI_E_NOTOWNER
SelectCall - failed to select terminals - exit 0x%08x
SelectCall - exit
InternalUnselectCall - enter
InternalUnselectCall - call was not selected; exit TAPI_E_CALLNOTSELECTED
InternalUnselectCall - phone is not open - exit TAPI_E_PHONENOTOPEN
InternalUnselectCall - wrong phone privilege - exit TAPI_E_NOTOWNER
InternalUnselectCall - UnselectDefaultTerminalsOnCall %p failed - %lx
InternalUnselectCall - exit S_OK
UnselectCall - enter
UnselectCall - returning E_POINTER
UnselectCall - InternalUnselectCall failed 0x%lx
UnselectCall - exit S_OK
EnumerateSelectedCalls enter
EnumerateSelectedCalls - returning E_POINTER
EnumerateSelectedCalls - could not create enum - exit 0x%08x
EnumerateSelectedCalls - phone is not open - exit TAPI_E_PHONENOTOPEN
EnumerateSelectedCalls exit - hr = 0x%08x
get_SelectedCalls enter
   pVariant----->%p
get_SelectedCalls - returning E_POINTER
get_SelectedCalls - phone is not open - exit TAPI_E_PHONENOTOPEN
get_SelectedCalls - could not add call to array; exit E_OUTOFMEMORY
get_SelectedCalls - could not create Collection - exit 0x%08x
get_SelectedCalls - could not get IDispatch interface
get_SelectedCalls - could not init Collection - exit 0x%08x
get_SelectedCalls exit - hr = 0x%08x
DeviceSpecific - phone not open. TAPI_E_PHONENOTOPEN
FireEvent enter
Tapi object is invalid - %lx
The user didn't set the mask for TE_PHONEEVENT. Don't fire the event to app  - %lx
Could not create PhoneEvent object - %lx
Could not get disp interface of PhoneEvent object - %lx
Out of memory allocating phone number
FireEvent exit - return S_OK
CPhoneEvent - FinalRelease
get_Phone - bad pointer
get_ButtonState - wrong event
get_HookSwitchState - wrong event
get_HookSwitchDevice - bad pointer
get_HookSwitchDevice - wrong event
get_RingMode - wrong event
get_ButtonLampId - bad pointer
get_ButtonLampId - wrong event
get_NumberGathered - bad pointer
get_NumberGathered - wrong event
get_NumberGathered - out of memory
get_Call - wrong event
get_Call - NULL call pointer
CPhoneDevSpecificEvent::FireEvent - enter
CPhoneDevSpecificEvent::FireEvent - failed to create CPhoneDevSpecificEvent. hr = %lx
CPhoneDevSpecificEvent::FireEvent - failed to get ITPhone interface from phone. hr = %lx
CPhoneDevSpecificEvent::FireEvent - Could not get disp interface of AddressEvent object %lx
CPhoneDevSpecificEvent::FireEvent - exit. hr = %lx
CPhoneDevSpecificEvent - enter
CPhoneDevSpecificEvent - exit
get_Phone - enter
get_Phone - bad pointer at [%p]
get_Phone- enter. phone[%p]
CPhoneDevSpecificEvent
CPhoneEvent
InternalRelease - pLineHashTable->Remove failed
CPhone
     pCall -----------> %p
     pAddress --------> %p
     pCallHub --------> %p
     pEventInterface -> %p
     EventCode -------> %lX
This private event is filtered
FireEvent - could not get IDispatch 
FireEvent - exit 
get_Address - exit 
get_Call - exit 
     ppCallHub ---> %p
get_CallHub - no callhub
get_CallHub - exit 
get_EventInterface - enter
     pEventInterface ---> %p
get_EventInterface - bad pointer
get_EventInterface - exit 
get_EventCode - enter
get_EventCode - bad pointer
get_EventCode - exit 
CPrivateEvent
UpdateInfo - call to LineGetQueueInfo failed async
UpdateInfo - call to LineGetQueueInfo failed
FinalRelease Queue - %S
FinalRelease Queue - exit
put_MeasurementPeriod - call to LineSetQueueMeasurementPeriod failed async
put_MeasurementPeriod - call to LineSetQueueMeasurementPeriod failed
get_MeasurementPeriod  - Object update failed
get_MeasurementPeriod  - bad pulPeriod pointer
get_MeasurementPeriod  - exit
TotalCallsQueued  - enter
get_TotalCallsQueued  - Object update failed
get_TotalCallsQueued  - bad pulCalls pointer
TotalCallsQueued  - exit
CurrentCallsQueued  - enter
get_CurrentCallsQueued  - Object update failed
get_CurrentCallsQueued  - bad pulCalls pointer
CurrentCallsQueued  - exit
TotalCallsAbandoned  - enter
get_TotalCallsAbandoned - Object update failed
get_TotalCallsAbandoned  - bad pulCalls pointer
TotalCallsAbandoned  - exit
TotalCallsFlowedIn  - enter
get_TotalCallsFlowedIn - Object update failed
get_TotalCallsFlowedIn  - bad pulCalls pointer
TotalCallsFlowedIn  - exit
TotalCallsFlowedOut  - enter
get_TotalCallsFlowedOut - Object update failed
get_TotalCallsFlowedOut  - bad pulCalls pointer
TotalCallsFlowedOut  - exit
LongestEverWaitTime  - enter
get_LongestEverWaitTime - Object update failed
get_LongestEverWaitTime  - bad pulWaitTime pointer
LongestEverWaitTime  - exit
CurrentLongestWaitTime  - enter
get_CurrentLongestWaitTime - Object update failed
get_CurrentLongestWaitTime  - bad pulWaitTime pointer
CurrentLongestWaitTime  - exit
AverageWaitTime  - enter
get_AverageWaitTime - Object update failed
get_AverageWaitTime  - bad pulWaitTime pointer
AverageWaitTime  - exit
FinalDisposition  - enter
get_FinalDisposition - Object update failed
get_FinalDisposition  - bad pulCalls pointer
FinalDisposition  - exit
FireEvent - pQueue is an invalid pointer
FireEvent - Could not get disp interface of QueueEvent object
FireEvent - Could not create QueueEvent object
(Event)Queue - enter
(Event)Queue - bad ppQueue pointer
(Event)Queue - exit
CQueueEvent
CQueue
get_RegistrationInstance - bad pointer
get_RequestMode - bad pointer
get_DestAddress - bad pointer
get_DestAddress - SysAllocString Failed
get_AppName - bad pointer
get_AppName - SysAllocString Failed
get_CalledParty - bad pointer
get_CalledParty - SysAllocString Failed
get_Comment - bad pointer
get_Comment - SysAllocString Failed
RequestEvent - could not get IDispatch %lx
HandleLineRequest - enter
LineGetRequest failed - %lx
HandleLineRequest - destAddress: %S
HandleLineRequest - AppName    : %S
HandleLineRequest - CalledParty: %S
HandleLineRequest - Comment    : %S
HandleLineRequest - about to fire event
HandleLineRequest - fire event result %d
HandleLineRequest - exit
CRequestEvent
AllocateAndInitializeHandleTable - entered
AllocateAndInitializeHandleTable() heap already exists
AllocateAndInitializeHandleTable() handle table already exists
AllocateAndInitializeHandleTable() failed to allocate private heap. using process's heap
AllocateAndInitializeHandleTable failed to get process's heap
AllocateAndInitializeHandleTable failed to create handle table
AllocateAndInitializeHandleTable - succeeded
ShutdownAndDeallocateHandleTable - entered
ShutdownAndDeallocateHandleTable heap does not exist
ShutdownAndDeallocateHandleTable handle table does not exist
ShutdownAndDeallocateHandleTable destroying heap
ShutdownAndDeallocateHandleTable not destroyng current heap -- used process's heap
ShutdownAndDeallocateHandleTable - succeeded
Shutdown - release GIT
AllocateInitializeAllCaches - enter
AllocateInitializeAllCaches - already initialized. nothing to do
AllocateInitializeAllCaches - already initialized
AllocateInitializeAllCaches - m_pAddressCapCache constructor threw an exception
AllocateInitializeAllCaches - failed to allocate m_pAddressCapCache
AllocateInitializeAllCaches - failed to initialize m_pAddressCapCache. hr = %lx
AllocateInitializeAllCaches - m_pLineCapCache constructor threw an exception
AllocateInitializeAllCaches - failed to allocate m_pLineCapCache
AllocateInitializeAllCaches - failed to initialize m_pLineCapCache. hr = %lx
AllocateInitializeAllCaches - m_pPhoneCapCache constructor threw an exception
AllocateInitializeAllCaches - failed to allocate m_pPhoneCapCache
AllocateInitializeAllCaches - failed to initialize m_pPhoneCapCache. hr = %lx
AllocateInitializeAllCaches - finish
FreeAllCaches - enter
FreeAllCaches - freeing AddressCapCache
FreeAllCaches - freeing LineCapCache
FreeAllCaches - freeing PhoneCapCache
FreeAllCaches - exit
Already initialized - return S_FALSE
Initialize failed to create handle table
AllocClientResources failed - %lx
Initialize - cocreate git failed - %lx
Initialize - failed to create and initialize caches
Initialize - NewInitialize returned %lx
new CTAPIConnectionPoint failed
initialize CTAPIConnectionPoint failed
Initialize exit - return SUCCESS
get_Addresses enter
get_Addresses - tapi object must be initialized first
get_Addressess exit - return %lx
EnumerateAddresses enter
EnumerateAddresses - tapi object must be initialized first
EnumerateAddresses exit - return %lx
GetPhoneArray enter
GetPhoneArray - tapi object must be initialized first
GetPhoneArray - bad pointer
GetPhoneArray exit - return %lx
RegisterCallHubNotifications - enter
RCHN - tapi object must be initialized first
RCHN - callhub notify on
RCHN - callhub notify off
RegisterCallHubNotifications - exit - success
SetCallHubTracking - enter
SCHT - tapi object must be initialized first
SCHT - invalid address array - return %lx
SCHT - out of memory
SCHT failed %lx on address %lx
SCHT failed %lx on address %p
SetCallHubTracking - exit - success
RegisterCallNotifications - enter
RegisterCallNotifications - tapi object must be initialized first
RegisterCallNotifications - invalid plRegister
RegisterCallNotifications - bad address
RegisterCallNotifications - fMonitor and/or fOwner must be true
RegisterCallNotifications - bad mediamodes
RegisterCallNotifications - Alloc registrationarray failed
RegisterCallNotifications - AddCallNotification failed
RegisterCallNotifications- failed - because of alloc failure
RegisterCallNotifications - failed to create a handle for REGISTERITEM object %p
RegisterCallNotifications - Mapped handle %lx (to be returned as cookie) to REGISTERITEM object %p
RegisterCallNotifications - return %lx
UnregisterNotifications - enter. Cookie %lx
UnregNot - tapi object must be initialized first
UnregisterNotifications - Matched cookie %lx to REGISTERITEM object %p
UnregNot - invalid pRegisterItem returned from the handle table search
UnregisterNotifications - invalid lRegister
Invalid interface in unregisternotifications
UnregisterNotifications - exit - success
get_CallHubs enter
get_CallHubs - tapi object must be initialized first
get_CallHubs - bad pointer
get_CallHubs - could not create collection
get_CallHubs - could not initialize collection
get_CallHubs - could not get IDispatch interface
get_CallHubss exit - return %lx
EnumerateCallHubs enter
EnumerateCallHubs - tapi object must be initialized first
EnumerateCallHubs - bad pointer
EnumerateCallHubs - could not create enum - return %lx
EnumerateCallHubs exit - return %lx
EnumConnectionPoints enter
EnumConnectionPointer exit - return %lx
FindConnectionPoint enter
FindConnectionPoint - bad pointer
FindConnectionPoint - tapi object must be initialized first
FindConnectionPoint - do not support this riid
FindConnectionPoint - Success
CreateAllAddressesOnAllLines enter
CreateAddressesOnSingleLine: entered.
CreateAddressesOnSingleLine: LineNegotiateAPIVersion failed on device %d
CreateAddressesOnSingleLine: LineNegotiateAPIVersion returned version %lx
CreateAddressesOnSingleLine: LineGetDevCaps failed for device %d
CreateAddressesOnSingleLine: Device %d has no addressess - will assume 1 address
tapi/providerid
CreateAddressesOnSingleLine: get_ServiceProviderName - LineGetID returned %lx
CreateAddressesOnSingleLine: CreateInstance - Address - threw
CreateAddressesOnSingleLine: CreateInstance - Address - failed - %lx
CreateAddressesOnSingleLine: failed for device %d, address %d
CreateAddressesOnSingleLine: completed.
CreateAllPhones enter
CreatePhone - phoneNegotiateAPIVersion failed on device %d
CreatePhone - phoneNegotiateAPIVersion returned version %lx
CreatePhone - CreateInstancefailed - because of alloc failure
CreatePhone - CreateInstance failed - %lx
CreatePhone failed for device %d
Shutdown[%p] - enter
Shutdown - enter
Shutdown - already shutdown - return S_FALSE
Shutdown - phone array contains a bad phone pointer
Shutdown - address array contains a bad address pointer
Shutdown - address array contains a bad address pointer.
Shutdown - exit
Returning NULL array
Array - not an array
Array - invalid array
Array - has 0 dim
Array - has > 1 dim - will only use 1
Event[%p] - enter. Event[0x%x]
Event - This Event not Enabled %x
Event queued
Event queuing Failed
EventFire - enter
EventFire - fire on ITTAPIEventNotification
EventFire - can't fire event on IDispatch
EventFire - fire on IDispatch
EventFire - exit
get_PrivateTAPIObjects - enter
get_PrivateTAPIObjects - exit E_NOTIMPL
EnumeratePrivateTAPIObjects - enter
EnumeratePrivateTAPIObjects - return E_NOTIMPL
RegisterRequestRecipient - enter
RegisterRequestRecipient - tapi object must be initialized first
SetAssistedTelephonyPriority - enter
SetAssistedTelephonyPriority - exit - return %lx
SetApplicationPriority - enter
SetApplicationPriority - exit - return %lx
put_EventFilter - Unknown Event type in mask %x
put_EventFilter - exitCopyEventFilterMaskToAddresses failed. Returns 0x%08x
put_EventFilter - mask changed %x to %x
put_EventFilter - exit 
get_EventFilter - bad plFilterMask pointer
get_EventFilter - exit 
get_Phones - tapi object must be initialized first
EnumeratePhones - tapi object must be initialized first
CreateEmptyCollectionObject enter
CreateEmptyCollectionObject - bad pointer
CreateEmptyCollectionObject - could not create CTapiCollection
CreateEmptyCollectionObject - could not get ITCollection2 interface
CreateEmptyCollectionObject - exit - return %lx
DoLineRemove - enter - dwDeviceID %d
DoLineRemove - found matching address - %p
DoLineRemove - removing address %p
DoLineRemove - exiting
DoPhoneRemove - enter - dwDeviceID %d
DoPhoneRemove - failed to cast ptr %p to a phone object
DoPhoneRemove - found matching phone - %p
DoPhoneRemove - removing phone %p
DoPhoneRemove - exiting
GetTapiObjectFromAsyncEventMSG - entered
GetTapiObjectFromAsyncEventMSG - could not recover pInitData
GetTapiObjectFromAsyncEventMSG - tapi pointer [%p] does not point to readable memory
GetTapiObjectFromAsyncEventMSG - CTAPI::FindTapiObject did not find the tapi object [%p]
GetTapiObjectFromAsyncEventMSG - exit. pTapi %p
HandleLineCreate - enter
HandleLineCreate - tapi object not present [%p]
HandleLineCreate - exit
HandleLineRemove - enter
HandleLineRemove - tapi object not present [%p]
HandleLineRemove - exit
HandlePhoneCreate - enter
HandlePhoneCreate - tapi object not present [%p]
HandlePhoneCreate - exit
HandlePhoneRemove - enter
HandlePhoneRemove - tapi object not present [%p]
HandlePhoneRemove - exit
FireEvent - CTAPI is NULL! - exit
     TapiObjectEventMask ---> %ld
Could not create TapiObjectEvent object - %lx
Could not get disp interface of TapiObjectEvent object %lx
HandleReinit - enter
GetIDsOfNames - found %S on ITTAPI
GetIDsOfNames - found %S on ITTAPICallCenter
GetIDsOfNames - Call Center not initialized
GetIDsOfNames - Call Center initialized
CopyEventFilterMaskToAddresses enter
CopyEventFilterMaskToAddresses exit 0x%08x
CTAPI::IsValidTapiObject enter[%p]
CTAPI::IsValidTapiObject - object not readabe
CTAPI::IsValidTapiObject - object not in the array
CTAPI::IsValidTapiObject - object in in the array but addref threw
CTAPI::IsValidTapiObject -- finish. the object is valid
CAddress[%p] - enter
CAddress - exit
CPhone[%p] - enter
CPhone - finished
~CAddress[%p] - enter
~CAddress - exit
InternalRelease - m_AddressLinesPtrList size %d 
~CPhone[%p] - enter
~CPhone - finished
CTapiObjectEvent
Hash Table Flush: key %p - obj %p - tapi %p
QueueEvent - enter
QueueEvent - out of memory for new entry - losing message
QueueEvent - out of memory for pEventCopy - losing message
QueueEvent - can't queue -- the queue is closed
QueueEvent - out of memory - losing message
QueueEvent - Queued pEntry ----> %p
                    pEvent ----> %p
RequeueEvent - enter
RequeueEvent - attemped to requeue after the queue was closed
RequeueEvent - out of memory - losing message
RequeueEvent - Requeuing pEntry is ----> %p
               Requeuing pEvent is ----> %p
               Requeuing count is  ----> %lx
DequeueEvent - enter
DequeueEvent - pop m_RetryQueueList failed
DequeueEvent - returning %p
DequeueEvent - no event
ProcessQueue - enter dwCount----> %lx
ProcessQueue - msg=%d, hDev=x%x, p1=x%x, p2=x%x, p3=x%x, pInitData=%p
ProcessQueue - sucessfully processed event message ----> %p
ProcessQueue - used all retries, deleting event message ----> %p
ProcessQueue - requeued item. Sleeping for %ld ms
ProcessQueue - exit
OpenForNewEntries - enter
OpenForNewEntries - exit
CloseForNewEntries - enter
CloseForNewEntries - exit
MyLoadString - alloc failed
MyLoadString - LoadString failed - %lx
EnableDebuggerTracing
EnableConsoleTracing
EnableFileTracing
ConsoleTracingMask
Software\Microsoft\Tracing\%s
TRACELogRegister - logging configured
TRACELogDeRegister - disabling logging
%s:[%02u:%02u:%02u.%03u,tid=%x:] [%s] 
[%s] %s
 Returned[%lx] %hs
[%hs] %hs  Returned[%lx] %s
ERROR
WARN 
INFO 
TRACE
EVENT
 ??? 
CStructCache
CRetryQueue
atlthunk.dll
AtlThunk_AllocateData
AtlThunk_InitData
AtlThunk_DataToCode
AtlThunk_FreeData
RSDSF{
tapi3.pdb
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zzzdbg
.xdata
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.rsrc$01
.rsrc$02
 (08@HPX`hpx
tapi3.DLL
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
__CxxFrameHandler4
??_V@YAXPEAX@Z
_vsnwprintf
memcpy_s
??3@YAXPEAX@Z
_purecall
??1exception@@UEAA@XZ
??0exception@@QEAA@XZ
??0exception@@QEAA@AEBV0@@Z
_vsnprintf_s
memmove_s
_vsnprintf
__C_specific_handler
wcsrchr
_wcsicmp
strstr
malloc
_callnewh
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
?what@exception@@UEBAPEBDXZ
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UEAA@XZ
_amsg_exit
_initterm
ATL.DLL
GetUserNameW
RegOpenKeyExA
RegQueryValueExA
RegCloseKey
OpenSCManagerA
OpenServiceA
QueryServiceStatus
CloseServiceHandle
StartServiceA
ADVAPI32.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
GetModuleHandleExW
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
HeapAlloc
GetProcAddress
CreateMutexExW
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
GetLocalTime
lstrlenA
OutputDebugStringA
InitializeCriticalSection
lstrlenW
LocalFree
SetEvent
UnregisterWaitEx
CompareStringW
lstrcmpiW
CreateEventA
RegisterWaitForSingleObject
UnregisterWait
Sleep
MultiByteToWideChar
GetACP
WideCharToMultiByte
TlsAlloc
TlsSetValue
CreateMutexA
TlsFree
TlsGetValue
LoadLibraryA
FreeLibraryAndExitThread
ExitThread
LoadLibraryW
CreateThread
FreeLibrary
GetModuleHandleA
GetVersion
GetModuleFileNameW
WaitForMultipleObjectsEx
CreateSemaphoreA
GetComputerNameW
LocalAlloc
FormatMessageA
CreateTimerQueue
DeleteTimerQueue
DeleteTimerQueueTimer
GetTickCount
CreateTimerQueueTimer
TryEnterCriticalSection
ChangeTimerQueueTimer
VirtualAlloc
GetSystemInfo
RaiseException
GetCurrentProcess
HeapCreate
HeapDestroy
FindResourceA
LoadResource
LockResource
VirtualFree
LoadLibraryExA
EncodePointer
DecodePointer
FlushInstructionCache
InterlockedPushEntrySList
InterlockedPopEntrySList
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
KERNEL32.dll
OLEAUT32.dll
I_RpcExceptionFilter
RpcStringBindingComposeA
RpcBindingFromStringBindingA
RpcBindingFree
RpcStringFreeA
NdrClientCall3
RPCRT4.dll
IsWindow
GetSystemMetrics
IsDlgButtonChecked
SetDlgItemTextA
GetActiveWindow
DialogBoxParamA
LoadStringA
SetWindowLongPtrA
EndDialog
LoadStringW
USER32.dll
InternetSetCookieA
InternetGetCookieA
WININET.dll
waveInMessage
waveOutMessage
midiInMessage
midiOutMessage
waveOutReset
waveOutPrepareHeader
waveOutWrite
waveOutOpen
waveOutClose
mixerOpen
mixerGetLineControlsA
mixerClose
mixerSetControlDetails
mixerGetControlDetailsA
WINMM.dll
TraceVprintfExA
TraceRegisterExA
TraceDeregisterA
rtutils.dll
CoCreateFreeThreadedMarshaler
CoCreateInstance
StringFromIID
CoTaskMemFree
CoTaskMemAlloc
CLSIDFromString
CoInitializeEx
CoWaitForMultipleHandles
CoUninitialize
IIDFromString
api-ms-win-core-com-l1-1-0.dll
InitializeCriticalSectionAndSpinCount
__RTDynamicCast
memcmp
memset
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@@
.?AUITCallInfo@@
.?AV?$CComObject@VCCall@@@ATL@@
.?AUITQueue@@
.?AV?$CComObject@VCQueue@@@ATL@@
.?AUITAddress@@
.?AVCAddress@@
.?AUITPhone@@
.?AVCPhone@@
.?AUITForwardInformation@@
.?AVCForwardInfo@@
.?AUITBasicCallControl@@
.?AVCCall@@
.?AUITTAPI@@
.?AVCTAPI@@
.?AV?$CComObject@VCAddress@@@ATL@@
.?AUITACDGroup@@
.?AV?$CComObject@VCACDGroup@@@ATL@@
.?AUITAgent@@
.?AV?$CComObject@VCAgent@@@ATL@@
.?AUITCallHub@@
.?AVCCallHub@@
.?AUITAgentHandler@@
.?AV?$CComObject@VCAgentHandler@@@ATL@@
.?AV?$__base@$$A6A_NPEAX_K01I@Z@__function@wistd@@
.?AV?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@
.?AV?$CComObjectRootEx@VCComMultiThreadModelNoCS@ATL@@@ATL@@
.?AV?$CComObject@VCTTSTerminalEvent@@@ATL@@
.?AV?$CComObject@VCToneTerminalEvent@@@ATL@@
.?AV?$CComObject@VCFileTerminalEvent@@@ATL@@
.?AV?$CComObject@VCASRTerminalEvent@@@ATL@@
.?AV?$IDispatchImpl@UITTTSTerminalEvent@@$1?IID_ITTTSTerminalEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCTTSTerminalEvent@@VCComMultiThreadModel@ATL@@@@
.?AVCTTSTerminalEvent@@
.?AV?$IDispatchImpl@UITToneTerminalEvent@@$1?IID_ITToneTerminalEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCToneTerminalEvent@@VCComMultiThreadModel@ATL@@@@
.?AVCToneTerminalEvent@@
.?AV?$IDispatchImpl@UITFileTerminalEvent@@$1?IID_ITFileTerminalEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCFileTerminalEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AVCFileTerminalEvent@@
.?AV?$IDispatchImpl@UITASRTerminalEvent@@$1?IID_ITASRTerminalEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCASRTerminalEvent@@VCComMultiThreadModel@ATL@@@@
.?AVCASRTerminalEvent@@
.?AUITToneTerminalEvent@@
.?AUITASRTerminalEvent@@
.?AUITTTSTerminalEvent@@
.?AUITFileTerminalEvent@@
.?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@
.?AVCComObjectRootBase@ATL@@
.?AUIDispatch@@
.?AVCObjectSafeImpl@@
.?AUIObjectSafety@@
.?AUIUnknown@@
.?AVCACDGroupEvent@@
.?AV?$CTAPIComObjectRoot@VCACDGroupEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITACDGroupEvent@@$1?IID_ITACDGroupEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITACDGroupEvent@@
.?AVCQueue@@
.?AV?$CTAPIComObjectRoot@VCQueue@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITQueue@@$1?IID_ITQueue@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCollection@@
.?AV?$CComObject@VCACDGroupEvent@@@ATL@@
.?AV?$CComObject@V?$CTapiCollection@UITQueue@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITQueue@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITQueue@@@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumQueue@@UITQueue@@$1?IID_IEnumQueue@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumQueue@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumQueue@@UITQueue@@$1?IID_IEnumQueue@@3U_GUID@@B@@
.?AV?$IDispatchImpl@UITCollection2@@$1?IID_ITCollection2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCollection2@@
.?AUIEnumQueue@@
.?AV?$CComObject@V?$CSafeComEnum@UIEnumVARIANT@@$1?IID_IEnumVARIANT@@3U_GUID@@BUtagVARIANT@@V?$_Copy@UtagVARIANT@@@ATL@@VCComMultiThreadModel@6@@@@ATL@@
.?AV?$CSafeComEnum@UIEnumVARIANT@@$1?IID_IEnumVARIANT@@3U_GUID@@BUtagVARIANT@@V?$_Copy@UtagVARIANT@@@ATL@@VCComMultiThreadModel@6@@@
.?AV?$CComObject@V?$CComEnum@UIEnumVARIANT@@$1?IID_IEnumVARIANT@@3U_GUID@@BUtagVARIANT@@V?$_Copy@UtagVARIANT@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@
.?AV?$CComEnum@UIEnumVARIANT@@$1?IID_IEnumVARIANT@@3U_GUID@@BUtagVARIANT@@V?$_Copy@UtagVARIANT@@@ATL@@VCComMultiThreadModel@6@@ATL@@
.?AV?$CComEnumImpl@UIEnumVARIANT@@$1?IID_IEnumVARIANT@@3U_GUID@@BUtagVARIANT@@V?$_Copy@UtagVARIANT@@@ATL@@@ATL@@
.?AUIEnumVARIANT@@
.?AV?$CComObject@V?$CComEnum@UIEnumBstr@@$1?_GUID_35372049_0bc6_11d2_a033_00c04fb6809f@@3U__s_GUID@@BPEAGV_CopyBSTR@@VCComMultiThreadModel@ATL@@@ATL@@@ATL@@
.?AV?$CComEnum@UIEnumBstr@@$1?_GUID_35372049_0bc6_11d2_a033_00c04fb6809f@@3U__s_GUID@@BPEAGV_CopyBSTR@@VCComMultiThreadModel@ATL@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumPhone@@UITPhone@@$1?IID_IEnumPhone@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumPhone@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumPhone@@UITPhone@@$1?IID_IEnumPhone@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITPhone@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITPhone@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITPhone@@@@
.?AV?$CComObject@V?$CTapiCollection@UITCallingCard@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITCallingCard@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITCallingCard@@@@
.?AV?$CComObject@VCCallingCard@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumCallingCard@@UITCallingCard@@$1?IID_IEnumCallingCard@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumCallingCard@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumCallingCard@@UITCallingCard@@$1?IID_IEnumCallingCard@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITLocationInfo@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITLocationInfo@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITLocationInfo@@@@
.?AV?$CComObject@VCLocationInfo@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumLocation@@UITLocationInfo@@$1?IID_IEnumLocation@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumLocation@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumLocation@@UITLocationInfo@@$1?IID_IEnumLocation@@3U_GUID@@B@@
.?AV?$CComObject@VCAddressTranslationInfo@@@ATL@@
.?AV?$CComObject@VCAddressDevSpecificEvent@@@ATL@@
.?AV?$CComObject@VCAddressEvent@@@ATL@@
.?AV?$CComObject@V?$CSafeComEnum@UIEnumBstr@@$1?_GUID_35372049_0bc6_11d2_a033_00c04fb6809f@@3U__s_GUID@@BPEAGV_CopyBSTR@@VCComMultiThreadModel@ATL@@@@@ATL@@
.?AV?$CComEnumImpl@UIEnumBstr@@$1?_GUID_35372049_0bc6_11d2_a033_00c04fb6809f@@3U__s_GUID@@BPEAGV_CopyBSTR@@@ATL@@
.?AV?$CSafeComEnum@UIEnumBstr@@$1?_GUID_35372049_0bc6_11d2_a033_00c04fb6809f@@3U__s_GUID@@BPEAGV_CopyBSTR@@VCComMultiThreadModel@ATL@@@@
.?AV?$CComObject@VCTapiBstrCollection@@@ATL@@
.?AV?$CComObject@VCForwardInfo@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumCall@@UITCallInfo@@$1?IID_IEnumCall@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumCall@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumCall@@UITCallInfo@@$1?IID_IEnumCall@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITCallInfo@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITCallInfo@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITCallInfo@@@@
.?AV?$IDispatchImpl@UITCallingCard@@$1?IID_ITCallingCard@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCCallingCard@@VCComMultiThreadModel@ATL@@@@
.?AVCCallingCard@@
.?AV?$IDispatchImpl@UITLocationInfo@@$1?IID_ITLocationInfo@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCLocationInfo@@VCComMultiThreadModel@ATL@@@@
.?AVCLocationInfo@@
.?AV?$IDispatchImpl@UITForwardInformation2@@$1?IID_ITForwardInformation2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCForwardInfo@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAddressDeviceSpecificEvent@@$1?IID_ITAddressDeviceSpecificEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCAddressDevSpecificEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AVCAddressDevSpecificEvent@@
.?AV?$IDispatchImpl@UITAddressEvent@@$1?IID_ITAddressEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCAddressEvent@@VCComMultiThreadModel@ATL@@@@
.?AVCAddressEvent@@
.?AUIEnumCallingCard@@
.?AUITCallingCard@@
.?AUIEnumLocation@@
.?AUITLocationInfo@@
.?AUITForwardInformation2@@
.?AUITAddressDeviceSpecificEvent@@
.?AUITAddressEvent@@
.?AUIEnumBstr@@
.?AUIEnumCall@@
.?AUIEnumPhone@@
.?AVCTapiBstrCollection@@
.?AV?$IDispatchImpl@UITCollection@@$1?IID_ITCollection@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AVCAddressTranslationInfo@@
.?AV?$CTAPIComObjectRoot@VCAddressTranslationInfo@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAddressTranslationInfo@@$1?IID_ITAddressTranslationInfo@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITAddressTranslationInfo@@
.?AV?$CTAPIComObjectRoot@VCCall@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@V?$ITCallInfo2Vtbl@VCCall@@@@$1?IID_ITCallInfo2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITCallInfo2Vtbl@VCCall@@@@
.?AUITCallInfo2@@
.?AV?$IDispatchImpl@V?$ITBasicCallControl2Vtbl@VCCall@@@@$1?IID_ITBasicCallControl2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITBasicCallControl2Vtbl@VCCall@@@@
.?AUITBasicCallControl2@@
.?AV?$IDispatchImpl@V?$ITLegacyCallMediaControl2Vtbl@VCCall@@@@$1?IID_ITLegacyCallMediaControl2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITLegacyCallMediaControl2Vtbl@VCCall@@@@
.?AUITLegacyCallMediaControl2@@
.?AUITLegacyCallMediaControl@@
.?AVCAgentEvent@@
.?AV?$CTAPIComObjectRoot@VCAgentEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAgentEvent@@$1?IID_ITAgentEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITAgentEvent@@
.?AVCAgentSession@@
.?AV?$CTAPIComObjectRoot@VCAgentSession@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAgentSession@@$1?IID_ITAgentSession@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITAgentSession@@
.?AV?$CComObject@VCAgentEvent@@@ATL@@
.?AV?$CComObject@VCAgentSession@@@ATL@@
.?AV?$CComObject@V?$CTapiCollection@UITAgentSession@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITAgentSession@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITAgentSession@@@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumAgentSession@@UITAgentSession@@$1?IID_IEnumAgentSession@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumAgentSession@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumAgentSession@@UITAgentSession@@$1?IID_IEnumAgentSession@@3U_GUID@@B@@
.?AUIEnumAgentSession@@
.?AVCACDGroup@@
.?AV?$CTAPIComObjectRoot@VCACDGroup@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITACDGroup@@$1?IID_ITACDGroup@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AVCAgent@@
.?AV?$CTAPIComObjectRoot@VCAgent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAgent@@$1?IID_ITAgent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CComObject@V?$CTapiCollection@UITAddress@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITAddress@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITAddress@@@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumAddress@@UITAddress@@$1?IID_IEnumAddress@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumAddress@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumAddress@@UITAddress@@$1?IID_IEnumAddress@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITACDGroup@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITACDGroup@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITACDGroup@@@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumACDGroup@@UITACDGroup@@$1?IID_IEnumACDGroup@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumACDGroup@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumACDGroup@@UITACDGroup@@$1?IID_IEnumACDGroup@@3U_GUID@@B@@
.?AUIEnumAddress@@
.?AUIEnumACDGroup@@
.?AVCAgentSessionEvent@@
.?AV?$CTAPIComObjectRoot@VCAgentSessionEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAgentSessionEvent@@$1?IID_ITAgentSessionEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITAgentSessionEvent@@
.?AV?$CComObject@VCAgentSessionEvent@@@ATL@@
.?AV?$CComObject@VCCustomTone@@@ATL@@
.?AV?$CComObject@VCDetectTone@@@ATL@@
.?AVCDetectTone@@
.?AV?$CTAPIComObjectRoot@VCDetectTone@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITDetectTone@@$1?IID_ITDetectTone@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITDetectTone@@
.?AVCCustomTone@@
.?AV?$CTAPIComObjectRoot@VCCustomTone@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITCustomTone@@$1?IID_ITCustomTone@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCustomTone@@
.?AVCAgentHandler@@
.?AV?$CTAPIComObjectRoot@VCAgentHandler@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITAgentHandler@@$1?IID_ITAgentHandler@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CComObject@V?$CTapiCollection@UITAgentHandler@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITAgentHandler@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITAgentHandler@@@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumAgentHandler@@UITAgentHandler@@$1?IID_IEnumAgentHandler@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumAgentHandler@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumAgentHandler@@UITAgentHandler@@$1?IID_IEnumAgentHandler@@3U_GUID@@B@@
.?AUIEnumAgentHandler@@
.?AV?$CComObject@VCToneDetectionEvent@@@ATL@@
.?AV?$CComObject@VCDigitsGatheredEvent@@@ATL@@
.?AV?$CComObject@VCDigitGenerationEvent@@@ATL@@
.?AV?$CComObject@VCDigitDetectionEvent@@@ATL@@
.?AV?$CComObject@VCCallMediaEvent@@@ATL@@
.?AV?$CComObject@VCCallInfoChangeEvent@@@ATL@@
.?AV?$CComObject@VCQOSEvent@@@ATL@@
.?AV?$CComObject@VCCallNotificationEvent@@@ATL@@
.?AV?$CComObject@VCCallStateEvent@@@ATL@@
.?AVCCallStateEvent@@
.?AV?$CTAPIComObjectRoot@VCCallStateEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITCallStateEvent@@$1?IID_ITCallStateEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCallStateEvent@@
.?AVCCallNotificationEvent@@
.?AV?$CTAPIComObjectRoot@VCCallNotificationEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITCallNotificationEvent@@$1?IID_ITCallNotificationEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCallNotificationEvent@@
.?AVCQOSEvent@@
.?AV?$CTAPIComObjectRoot@VCQOSEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITQOSEvent@@$1?IID_ITQOSEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITQOSEvent@@
.?AVCCallInfoChangeEvent@@
.?AV?$CTAPIComObjectRoot@VCCallInfoChangeEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITCallInfoChangeEvent@@$1?IID_ITCallInfoChangeEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCallInfoChangeEvent@@
.?AVCCallMediaEvent@@
.?AV?$CTAPIComObjectRoot@VCCallMediaEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITCallMediaEvent@@$1?IID_ITCallMediaEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCallMediaEvent@@
.?AVCDigitDetectionEvent@@
.?AV?$CTAPIComObjectRoot@VCDigitDetectionEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITDigitDetectionEvent@@$1?IID_ITDigitDetectionEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITDigitDetectionEvent@@
.?AVCDigitGenerationEvent@@
.?AV?$CTAPIComObjectRoot@VCDigitGenerationEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITDigitGenerationEvent@@$1?IID_ITDigitGenerationEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITDigitGenerationEvent@@
.?AVCDigitsGatheredEvent@@
.?AV?$CTAPIComObjectRoot@VCDigitsGatheredEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITDigitsGatheredEvent@@$1?IID_ITDigitsGatheredEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITDigitsGatheredEvent@@
.?AVCToneDetectionEvent@@
.?AV?$CTAPIComObjectRoot@VCToneDetectionEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITToneDetectionEvent@@$1?IID_ITToneDetectionEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITToneDetectionEvent@@
.?AV?$CComObject@VCCallHubEvent@@@ATL@@
.?AV?$CComObject@VCCallHub@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCCallHub@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITCallHub@@$1?IID_ITCallHub@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AVCCallHubEvent@@
.?AV?$CTAPIComObjectRoot@VCCallHubEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AV?$IDispatchImpl@UITCallHubEvent@@$1?IID_ITCallHubEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITCallHubEvent@@
.?AV?$CComContainedObject@VCRequest@@@ATL@@
.?AV?$CComContainedObject@VCDispatchMapper@@@ATL@@
.?AV?$CComContainedObject@VCTAPI@@@ATL@@
.?AV?$CComAggObject@VCRequest@@@ATL@@
.?AV?$CComObject@VCRequest@@@ATL@@
.?AV?$CComAggObject@VCDispatchMapper@@@ATL@@
.?AV?$CComObject@VCDispatchMapper@@@ATL@@
.?AV?$CComAggObject@VCTAPI@@@ATL@@
.?AV?$CComObject@VCTAPI@@@ATL@@
.?AV?$CComObjectCached@VCComClassFactory@ATL@@@ATL@@
.?AVCComClassFactory@ATL@@
.?AUIClassFactory@@
.?AV?$CTAPIComObjectRoot@VCTAPI@@VCComMultiThreadModel@ATL@@@@
.?AV?$CComCoClass@VCTAPI@@$1?CLSID_TAPI@@3U_GUID@@B@ATL@@
.?AV?$IDispatchImpl@UIConnectionPointContainer@@$1?IID_IConnectionPointContainer@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUIConnectionPointContainer@@
.?AV?$IDispatchImpl@V?$ITapi2Vtbl@VCTAPI@@@@$1?IID_ITTAPI2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITapi2Vtbl@VCTAPI@@@@
.?AUITTAPI2@@
.?AV?$IDispatchImpl@V?$ICallCenterVtbl@VCTAPI@@@@$1?IID_ITTAPICallCenter@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ICallCenterVtbl@VCTAPI@@@@
.?AUITTAPICallCenter@@
.?AV?$IProvideClassInfo2Impl@$1?CLSID_TAPI@@3U_GUID@@B$1?DIID_ITTAPIDispatchEventNotification@@3U2@B$1?LIBID_TAPI3Lib@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUIProvideClassInfo2@@
.?AUIProvideClassInfo@@
.?AVCDispatchMapper@@
.?AV?$CTAPIComObjectRoot@VCDispatchMapper@@VCComMultiThreadModel@ATL@@@@
.?AV?$CComCoClass@VCDispatchMapper@@$1?CLSID_DispatchMapper@@3U_GUID@@B@ATL@@
.?AV?$IDispatchImpl@UITDispatchMapper@@$1?IID_ITDispatchMapper@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITDispatchMapper@@
.?AVCScriptSecurityDialog@@
.?AV?$CDialogImpl@VCScriptSecurityDialog@@@ATL@@
.?AVCDialogImplBase@ATL@@
.?AVCWindow@ATL@@
.?AVCMessageMap@ATL@@
.?AVCRequest@@
.?AV?$CTAPIComObjectRoot@VCRequest@@VCComMultiThreadModel@ATL@@@@
.?AV?$CComCoClass@VCRequest@@$1?CLSID_RequestMakeCall@@3U_GUID@@B@ATL@@
.?AV?$IDispatchImpl@UITRequest@@$1?IID_ITRequest@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITRequest@@
.?AVCTAPIObjectSafety@@
.?AVCPromptedObjectSafety@@
.?AVCObjectWithSite@@
.?AUIObjectWithSite@@
.?AV?$CComObject@V?$CTapiTypeEnum@UIEnumConnections@@UtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@$1?IID_IEnumConnections@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumConnections@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiTypeEnum@UIEnumConnections@@UtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@$1?IID_IEnumConnections@@3U_GUID@@B@@
.?AUIEnumConnections@@
.?AV?$CComObject@VCPhoneDevSpecificEvent@@@ATL@@
.?AV?$CComObject@VCPhoneEvent@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumTerminal@@UITTerminal@@$1?IID_IEnumTerminal@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumTerminal@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumTerminal@@UITTerminal@@$1?IID_IEnumTerminal@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITTerminal@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITTerminal@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITTerminal@@@@
.?AV?$IDispatchImpl@UITPhoneDeviceSpecificEvent@@$1?IID_ITPhoneDeviceSpecificEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCPhoneDevSpecificEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AVCPhoneDevSpecificEvent@@
.?AV?$IDispatchImpl@UITPhoneEvent@@$1?IID_ITPhoneEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCPhoneEvent@@VCComMultiThreadModelNoCS@ATL@@@@
.?AVCPhoneEvent@@
.?AUITPhoneDeviceSpecificEvent@@
.?AUITPhoneEvent@@
.?AUIEnumTerminal@@
.?AV?$CComObject@VCPrivateEvent@@@ATL@@
.?AVCPrivateEvent@@
.?AV?$CTAPIComObjectRoot@VCPrivateEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITPrivateEvent@@$1?IID_ITPrivateEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITPrivateEvent@@
.?AVCQueueEvent@@
.?AV?$CTAPIComObjectRoot@VCQueueEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITQueueEvent@@$1?IID_ITQueueEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITQueueEvent@@
.?AV?$CComObject@VCQueueEvent@@@ATL@@
.?AV?$CComObject@VCRequestEvent@@@ATL@@
.?AVCRequestEvent@@
.?AV?$CTAPIComObjectRoot@VCRequestEvent@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@UITRequestEvent@@$1?IID_ITRequestEvent@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AUITRequestEvent@@
.?AV?$CComObject@VCTapiObjectEvent@@@ATL@@
.?AV?$CComObject@V?$CTapiCollection@UIDispatch@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIDispatch@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UIDispatch@@@@
.?AV?$CComObject@VCPhone@@@ATL@@
.?AV?$CComObject@V?$CTapiEnum@UIEnumCallHub@@UITCallHub@@$1?IID_IEnumCallHub@@3U_GUID@@B@@@ATL@@
.?AV?$CTAPIComObjectRoot@UIEnumCallHub@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiEnum@UIEnumCallHub@@UITCallHub@@$1?IID_IEnumCallHub@@3U_GUID@@B@@
.?AV?$CComObject@V?$CTapiCollection@UITCallHub@@@@@ATL@@
.?AV?$CTAPIComObjectRoot@UITCallHub@@VCComMultiThreadModel@ATL@@@@
.?AV?$CTapiCollection@UITCallHub@@@@
.?AV?$CComObject@VCTAPIConnectionPoint@@@ATL@@
.?AV?$IDispatchImpl@UITTAPIObjectEvent2@@$1?IID_ITTAPIObjectEvent2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$CTAPIComObjectRoot@VCTapiObjectEvent@@VCComMultiThreadModel@ATL@@@@
.?AVCTapiObjectEvent@@
.?AUITTAPIObjectEvent2@@
.?AUITTAPIObjectEvent@@
.?AUIEnumCallHub@@
.?AVCTAPIConnectionPoint@@
.?AV?$CTAPIComObjectRoot@VCTAPIConnectionPoint@@VCComMultiThreadModel@ATL@@@@
.?AUIConnectionPoint@@
.?AV?$CTAPIComObjectRoot@VCAddress@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@V?$ITAddress2Vtbl@VCAddress@@@@$1?IID_ITAddress2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITAddress2Vtbl@VCAddress@@@@
.?AUITAddress2@@
.?AV?$IDispatchImpl@V?$ITAddressCapabilitiesVtbl@VCAddress@@@@$1?IID_ITAddressCapabilities@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITAddressCapabilitiesVtbl@VCAddress@@@@
.?AUITAddressCapabilities@@
.?AV?$IDispatchImpl@V?$ITMediaSupportVtbl@VCAddress@@@@$1?IID_ITMediaSupport@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITMediaSupportVtbl@VCAddress@@@@
.?AUITMediaSupport@@
.?AV?$IDispatchImpl@V?$ITAddressTranslationVtbl@VCAddress@@@@$1?IID_ITAddressTranslation@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITAddressTranslationVtbl@VCAddress@@@@
.?AUITAddressTranslation@@
.?AV?$IDispatchImpl@V?$ITLegacyAddressMediaControl2Vtbl@VCAddress@@@@$1?IID_ITLegacyAddressMediaControl2@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITLegacyAddressMediaControl2Vtbl@VCAddress@@@@
.?AUITLegacyAddressMediaControl2@@
.?AUITLegacyAddressMediaControl@@
.?AV?$CTAPIComObjectRoot@VCPhone@@VCComMultiThreadModel@ATL@@@@
.?AV?$IDispatchImpl@V?$ITPhoneVtbl@VCPhone@@@@$1?IID_ITPhone@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITPhoneVtbl@VCPhone@@@@
.?AV?$IDispatchImpl@V?$ITAutomatedPhoneControlVtbl@VCPhone@@@@$1?IID_ITAutomatedPhoneControl@@3U_GUID@@B$1?LIBID_TAPI3Lib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@
.?AV?$ITAutomatedPhoneControlVtbl@VCPhone@@@@
.?AUITAutomatedPhoneControl@@
REGISTRY
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft TAPI3
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
TAPI3.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
TAPI3.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
TAPI.TAPI.1 = s 'TAPI Class'
CLSID = s '{21D6D48E-A88B-11D0-83DD-00AA003CCABD}'
TAPI.TAPI = s 'TAPI Class'
CurVer = s 'TAPI.TAPI.1'
NoRemove CLSID
ForceRemove {21D6D48E-A88B-11D0-83DD-00AA003CCABD} = s 'TAPI Class'
ProgID = s 'TAPI.TAPI.1'
VersionIndependentProgID = s 'TAPI.TAPI'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Both'
DispatchMapper.DispatchMapper.1 = s 'DispatchMapper Class'
CLSID = s '{E9225296-C759-11d1-A02B-00C04FB6809F}'
DispatchMapper.DispatchMapper = s 'DispatchMapper Class'
CurVer = s 'DispatchMapper.DispatchMapper.1'
NoRemove CLSID
ForceRemove {E9225296-C759-11d1-A02B-00C04FB6809F} = s 'DispatchMapper Class'
ProgID = s 'DispatchMapper.DispatchMapper.1'
VersionIndependentProgID = s 'DispatchMapper.DispatchMapper'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Both'
RequestMakeCall.RequestMakeCall.1 = s 'RequestMakeCall Class'
CLSID = s '{AC48FFE0-F8C4-11d1-A030-00C04FB6809F}'
RequestMakeCall.RequestMakeCall = s 'RequestMakeCall Class'
CurVer = s 'RequestMakeCall.RequestMakeCall.1'
NoRemove CLSID
ForceRemove {AC48FFE0-F8C4-11d1-A030-00C04FB6809F} = s 'RequestMakeCall Class'
ProgID = s 'RequestMakeCall.RequestMakeCall.1'
VersionIndependentProgID = s 'RequestMakeCall.RequestMakeCall'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Both'
WAVEfmt 
7?7+;
6.Y?. 
'C>$%>
O$%*'
t>K0}
7.I?9 ~
2',=r$'
H,1 m
) $*$
v-Y6>
'2i7d
G.)+#
=2`=J
h"I"$
S7o6c
Y'#7_
l<Z4W
WAVEfmt 
dataz
\ `=U8!
5;>Q#
m7k=r!
7+S%K
W,R(3
WAVEfmt 
P 1,-
S/b#D
x$x6S##
0w?(%X
}+j!y
WAVEfmt 
)W?E%
)u=Y#
 X9G&/
%P>H(
'g?`'
E%RIFF
WAVEfmt 
&*]<Y*J
]5>2-
Y!<=S5:
R3x4q
`1S1f
Q"z>r5
7,:<L(
RIFFf
WAVEfmt 
dataB
# ?</@
1H># w
M52:#
:"0>T/
#&;^)
WAVEfmt 
;7#;<
!?{.i
;7)%`
&38)y
N.|!w
!*?3+
^>O-k
O.=5H
WAVEfmt 
%c?s1w
_"?<o0k
2#=1 J
/=L5<
-12?V%^
3 %.c
w'L,H
WAVEfmt 
data^
w!6;~)9
'n>;(
T.d'z
h8\9k
&!9Z"%
 a<v-0
g%>1n
O2H/V
RIFFp
WAVEfmt 
dataL
p00>,
P8m"v
K"F,"
0#j/6
3-;2_
K5h#x
RIFF,
WAVEfmt 
1d>] R
u9D8"
(2>3)<
:3R%M
i9r1'
+>i4l
WAVEfmt 
 _?L(
\-v>C
j5';6
o+<3x
RIFF(
WAVEfmt 
Z$c2U
72!-@
c8%09
:(,?7
#4>["N
|%}6@
K%I ~
F*\:%
WAVEfmt 
datar
N2@<3
,#o3u
K499*
U8,)Z
WAVEfmt 
=-w:y
u7+82
RIFFp
WAVEfmt 
dataL
Z)V01
x,*>S
04 0a
+>w,M
k:X-I
RIFFd
WAVEfmt 
data@
f.68o<
5k:g9
/05V5b0
-h*W"T
 |+V2
*7,<)
,u4>7
RIFFd
WAVEfmt 
data@
6f?c<;.
4i2<&
0N=W>
;>5p$@
6e?c<;.
4j2;&
0N=V>
;>5o$@
RIFFd
WAVEfmt 
data@
6f?c<;.
4i2<&
0N=W>
;>5p$@
6e?c<;.
4j2;&
0N=V>
;>5o$@
RIFFf
WAVEfmt 
dataB
a!Z/c7R8
!>1h:
0N4>1
a!Z/c7R8
!>1h:
0N4>1
a!Z/c7S8
!>1h:
0N4>1
a![/c7R8
!>1g:
0N4>1
RIFFd
WAVEfmt 
data@
RIFFh8
WAVEfmt 
dataD8
/p*| ,
]0='g
.-]+1
F3,K&
;!e/O$
'5`7&
Z(G4u1
m)q%C
%@Kwd
Tm%FYC
a V@8
stdole2.tlbWWW
TAPI3Lib
ITCollection
0vCountWWW
lCountWW
zItem
IndexWWW
spVariant
xA_NewEnum
ppNewEnumWWWd
ITMediaPlaybackWd
+7PlayList
pPlayListVariant
eITMediaRecordWWW
FileName
pbstrFileNameWWW,
ITCollection2WWW,
rAddW,
RemoveWW
ITCallStateEvent
3ITCallInfoWWX
8"(ITAddressWWW
84?ADDRESS_STATEWWW
AS_INSERVICE
AS_OUTOFSERVICEWX
StateWWW
'pAddressStateWWWX
AddressNameW
BppNameWWX
}ServiceProviderNameW 
ITTAPIWW 
NInitializeWW 
aShutdown 
AddressesWWW
IEnumAddress
ppElementsWW
pceltFetched
>ResetWWW
CloneWWW
ppEnumWW 
"EnumerateAddressesWW
ppEnumAddressWWW 
RegisterCallNotificationsWWW
pAddress
fMonitor
?fOwnerWW
WlMediaTypesW
AulCallbackInstanceWWW
plRegisterWW 
UnregisterNotificationsW
lRegisterWWW 
CallHubs
FIEnumCallHubL
aITCallHubWWWL
ClearWWW
JIEnumCallWWWL
EnumerateCallsWW
J,ppEnumCallWWL
cvCallsWWW
pCallsWWL
NumCalls
plCallsW
CALLHUB_STATEWWW
CHS_ACTIVEWW
CHS_IDLE
pStateWW 
>EnumerateCallHubsWWW
ppEnumCallHubWWW 
SetCallHubTrackingWW
pAddressesWW
bTrackingWWWx
IEnumUnknownx
RemoteNextWW
rgeltWWW 
EnumeratePrivateTAPIObjectsW
ppEnumUnknownWWW 
PrivateTAPIObjectsWW 
RegisterRequestRecipient
MlRegistrationInstanceWWW
lRequestMode
fEnableW 
CSetAssistedTelephonyPriority
pAppFilename
fPriorityWWW 
*SetApplicationPriorityWW
lMediaTypeWW 
EventFilterW
ZplFilterMaskX
TAPIObjectWW
ppTapiObject
ITBasicCallControlWW
ConnectW
BfSyncWWW
AnswerWW@
DISCONNECT_CODEW@
DC_NORMALWWW@
0umDC_NOANSWERW@
7DC_REJECTEDW
RDisconnectWW
fHoldWWW
HandoffDirectWWW
wpApplicationName
HandoffIndirectW
ConferenceWW
/pCallWWW
Transfer
BlindTransferWWW
pDestAddress
SwapHold
TParkDirectWW
2pParkAddress
ParkIndirect
ppNonDirAddressW
UnparkWW
YQOS_SERVICE_LEVELWWW
:QSL_NEEDEDWW
6QSL_IF_AVAILABLE
0\9QSL_BEST_EFFORTW
9SetQOSWW
ServiceLevel
PickupWW
W-pGroupID
cDial
FINISH_MODEW
0$iFM_ASTRANSFERWWW
FM_ASCONFERENCEW
FinishWW
finishModeWW
RemoveFromConferenceX
:xCreateCallWW
3lAddressType
ppCallWW
|yppCallEnumWWX
MDialableAddressW
=SpDialableAddressl
8BuITForwardInformationl
NumRingsNoAnswer
nkplNumRingsWWl
SetForwardTypeWW
ForwardTypeW
eOpCallerAddressWWl
ForwardTypeDestinationWW
YppDestAddressWWWl
ForwardTypeCallerWWW
ppCallerAddressWl
#GetForwardTypeWW
ppDestinationAddressX
CreateForwardInfoObjectW
&rppForwardInfoWWWX
ForwardW
pForwardInfoX
CurrentForwardInfoWWX
MessageWaitingWW
pfMessageWaitingX
s$DoNotDisturb
pfDoNotDisturbWW
AddressW
<ppAddressWWW
{CALL_STATEWW
CS_IDLEW
07<CS_INPROGRESSWWW
0F(CS_CONNECTED
CS_DISCONNECTEDW
#CS_OFFERINGW
0 iCS_HOLDW
0seCS_QUEUEDWWW
CS_LASTITEMW
kCallStateWWW
6pCallStateWW4
8T\CALL_PRIVILEGEWW4
0J<CP_OWNER4
0vKCP_MONITORWW
PrivilegeWWW
pPrivilegeWW
CallHubW
uppCallHubWWW
8hmCALLINFO_LONGWWW
<CIL_MEDIATYPESAVAILABLEW
CIL_BEARERMODEWW
CIL_CALLERIDADDRESSTYPEW
%CIL_CALLEDIDADDRESSTYPEW
RCIL_CONNECTEDIDADDRESSTYPEWW
CIL_REDIRECTIONIDADDRESSTYPE
0n,CIL_REDIRECTINGIDADDRESSTYPE
CIL_ORIGINWW
CIL_REASONWW
CIL_APPSPECIFICW
mCIL_CALLPARAMSFLAGSW
CIL_CALLTREATMENTWWW
CIL_MINRATEW
CIL_MAXRATEW
CIL_COUNTRYCODEW
0;_CIL_CALLIDWW
)CIL_RELATEDCALLIDWWW
0E<CIL_COMPLETIONID
CIL_NUMBEROFOWNERSWW
CIL_NUMBEROFMONITORS
CIL_TRUNKWWW
CIL_RATE
UCIL_GENERATEDIGITDURATIONWWW
0LXCIL_MONITORDIGITMODESWWW
CIL_MONITORMEDIAMODESWWW
CallInfoLong
plCallInfoLongValWWW
8D?CALLINFO_STRINGW
0|*CIS_CALLERIDNAME
CIS_CALLERIDNUMBERWW
CIS_CALLEDIDNAME
0NxCIS_CALLEDIDNUMBERWW
CIS_CONNECTEDIDNAMEW
CIS_CONNECTEDIDNUMBERWWW
 CIS_REDIRECTIONIDNAMEWWW
CIS_REDIRECTIONIDNUMBERW
iCIS_REDIRECTINGIDNAMEWWW
CIS_REDIRECTINGIDNUMBERW
vCIS_CALLEDPARTYFRIENDLYNAMEW
CIS_COMMENTW
CIS_DISPLAYABLEADDRESSWW
CIS_CALLINGPARTYIDWW
CallInfoStringWW
%ppCallInfoString`
CALLINFO_BUFFERW`
CIB_USERUSERINFO`
0AUCIB_DEVSPECIFICBUFFERWWW`
CIB_CALLDATABUFFERWW`
CIB_CHARGINGINFOBUFFERWW`
`CIB_HIGHLEVELCOMPATIBILITYBUFFER`
0DTCIB_LOWLEVELCOMPATIBILITYBUFFERW
>CallInfoBufferWW
ppCallInfoBuffer
hGetCallInfoBufferWWW
pdwSizeW
Z SetCallInfoBufferWWW
dwSizeWW
pCallInfoBufferW
ReleaseUserUserInfoW
KtCall
ppCallInfoWW
CALL_STATE_EVENT_CAUSEWW
CEC_NONE
CEC_DISCONNECT_NORMALWWW
0 *CEC_DISCONNECT_BUSYW
CEC_DISCONNECT_BADADDRESSWWW
CEC_DISCONNECT_NOANSWERW
0#NCEC_DISCONNECT_CANCELLED
CEC_DISCONNECT_REJECTEDW
XCEC_DISCONNECT_FAILEDWWW
cCEC_DISCONNECT_BLOCKEDWW
CauseWWW
CallbackInstance
plCallbackInstanceWW(
ITCallNotificationEventW
CALL_NOTIFICATION_EVENTW
CNE_OWNERWWW
CNE_MONITORW
CNE_LASTITEM(
EventWWW
<pCallNotificationEventWW
ITTAPIEventNotificationWT
TAPI_EVENTWWT
TE_TAPIOBJECTWWWT
XTE_ADDRESSWWT
|TE_CALLNOTIFICATIONWT
TE_CALLSTATET
TE_CALLMEDIAT
TE_CALLHUBWWT
ITE_CALLINFOCHANGEWWWT
TE_PRIVATEWWT
=TE_REQUESTWWT
TE_AGENTT
TE_AGENTSESSIONWT
FTE_QOSEVENTWT
STE_AGENTHANDLERWT
\TE_ACDGROUPWT
TE_QUEUET
TE_DIGITEVENTWWWT
"TE_GENERATEEVENTT
TE_ASRTERMINALWWT
TE_TTSTERMINALWWT
TE_FILETERMINALWT
TE_TONETERMINALWT
0 1TE_PHONEEVENTWWWT
TE_TONEEVENTT
@TE_GATHERDIGITSWT
TE_ADDRESSDEVSPECIFICWWWT
TE_PHONEDEVSPECIFICW
myTapiEventWWW
@pEventWW
!ITBasicAudioTerminal
VolumeWW
plVolume
VBalanceW
plBalanceWWW
ITCallHubEventWW
CALLHUB_EVENTWWW
+CHE_CALLJOIN
gCHE_CALLLEAVEWWW
sCHE_CALLHUBNEWWW
CHE_CALLHUBIDLEW
CHE_LASTITEM
8rkITForwardInformation2WWW
SetForwardType2W
DestAddressTypeW
CallerAddressTypeWWW
 fGetForwardType2W
4pDestAddressType
=pCallerAddressTypeWW
ForwardTypeDestinationAddressTypeWWW
JiForwardTypeCallerAddressTypeH
8?(ITAddressCapabilitiesWWW
ADDRESS_CAPABILITYWW
0qXAC_ADDRESSTYPESW
AC_BEARERMODESWW
AC_MAXACTIVECALLSWWW
SAC_MAXONHOLDCALLSWWW
AC_MAXONHOLDPENDINGCALLS
AC_MAXNUMCONFERENCEW
AC_MAXNUMTRANSCONFWW
YAC_MONITORDIGITSUPPORTWW
AC_GENERATEDIGITSUPPORTW
AC_GENERATETONEMODES
AC_GENERATETONEMAXNUMFREQWWW
AC_MONITORTONEMAXNUMFREQ
AC_MONITORTONEMAXNUMENTRIESW
AC_DEVCAPFLAGSWW
09yAC_ANSWERMODESWW
AC_LINEFEATURESW
AC_SETTABLEDEVSTATUS
AC_PARKSUPPORTWW
AC_CALLERIDSUPPORTWW
xAC_CALLEDIDSUPPORTWW
1AC_CONNECTEDIDSUPPORTWWW
AC_REDIRECTIONIDSUPPORTW
%AC_REDIRECTINGIDSUPPORTW
AC_ADDRESSCAPFLAGSWW
AC_CALLFEATURES1
AC_CALLFEATURES2
0pXAC_REMOVEFROMCONFCAPSWWW
GAC_REMOVEFROMCONFSTATEWW
AC_TRANSFERMODES
AC_ADDRESSFEATURESWW
AC_PREDICTIVEAUTOTRANSFERSTATESW
AC_MAXCALLDATASIZEWW
AC_LINEIDWWW
HAC_ADDRESSID
0XKAC_FORWARDMODESW
AC_MAXFORWARDENTRIES
$AC_MAXSPECIFICENTRIESWWW
AC_MINFWDNUMRINGSWWW
EAC_MAXFWDNUMRINGSWWW
AC_MAXCALLCOMPLETIONSWWW
AC_CALLCOMPLETIONCONDITIONSW
AC_CALLCOMPLETIONMODESWW
AC_PERMANENTDEVICEID
JAC_GATHERDIGITSMINTIMEOUTWWW
_AC_GATHERDIGITSMAXTIMEOUTWWW
IAC_GENERATEDIGITMINDURATIONW
0'#AC_GENERATEDIGITMAXDURATIONW
AC_GENERATEDIGITDEFAULTDURATIONWH
AddressCapabilityWWW
AddressCapWW
plCapability
ADDRESS_CAPABILITY_STRINGWWW
ACS_PROTOCOL
ACS_ADDRESSDEVICESPECIFICWWW
ACS_LINEDEVICESPECIFICWW
 ACS_PROVIDERSPECIFIC
ACS_SWITCHSPECIFICWW
0eMACS_PERMANENTDEVICEGUIDWH
AddressCapabilityStringW
AddressCapString
ppCapabilityStringWWH
jsCallTreatmentsWWt
IEnumBstrWWW
C:ppStringsWWWH
EnumerateCallTreatmentsW
ppEnumCallTreatmentWH
gCompletionMessagesWWH
EnumerateCompletionMessagesW
ppEnumCompletionMessageWH
PDeviceClassesWWWH
REnumerateDeviceClassesWW
.NppEnumDeviceClassWWW
ITQOSEventWW<
QOS_EVENTWWW<
QE_NOQOS<
QE_ADMISSIONFAILUREW<
QE_POLICYFAILURE<
9QE_GENERICERRORW<
QE_LASTITEMW
pQosEventWWW
MediaTypeWWW
plMediaTypeW
8i.ITAddressEventWW
ADDRESS_EVENTWWW
AE_STATE
AE_CAPSCHANGEWWW
AE_RINGINGWW
AE_CONFIGCHANGEW
AE_FORWARDWW
AE_NEWTERMINALWW
RAE_REMOVETERMINALWWW
~AE_MSGWAITON
AE_MSGWAITOFFWWW
AE_LASTITEMWh
8ITTerminalWWh
TERMINAL_STATEWW
~TS_INUSE
bTS_NOTINUSEW
pTerminalStateWW0
zTERMINAL_TYPEWWW0
TT_STATICWWW0
6TT_DYNAMICWWh
TerminalType
pTypeWWWh
TerminalClassWWW
ppTerminalClassW
YTERMINAL_DIRECTIONWW
0;aTD_CAPTUREWW
TD_RENDERWWW
TD_BIDIRECTIONAL
_TD_MULTITRACK_MIXEDW
TD_NONEWh
&DirectionWWW
pDirectionWW
B-Terminal
ppTerminalWW
DITAddressDeviceSpecificEvent
lParam1W
pParam1W
lParam2W
pParam2W
lParam3W
pParam3W\
ITCallMediaEvent
87}CALL_MEDIA_EVENT
CME_NEW_STREAMWW
CME_STREAM_FAILW
CME_TERMINAL_FAILWWW
CME_STREAM_NOT_USEDW
CME_STREAM_ACTIVEWWW
CME_STREAM_INACTIVEW
0G*CME_LASTITEM
pCallMediaEventW\
ErrorWWW
lphrError$
ITStream
pTDW$
StartStreamW$
z PauseStreamW$
qStopStreamWW$
SelectTerminalWW
pTerminalWWW$
O"UnselectTerminal
IEnumTerminalWWW$
EnumerateTerminalsWW
ppEnumTerminalWW$
_KTerminalsWWW
pTerminalsWW\
StreamWW
ppStream
CALL_MEDIA_EVENT_CAUSEWW
CMC_UNKNOWNW
ACMC_BAD_DEVICEWW
0BkCMC_CONNECT_FAIL
0IsCMC_LOCAL_REQUESTWWW
0#=CMC_REMOTE_REQUESTWW
CMC_MEDIA_TIMEOUTWWW
BCMC_MEDIA_RECOVEREDW
CMC_QUALITY_OF_SERVICEWW
<pCauseWWP
8mMITTAPIObjectEventWWW
TAPIOBJECT_EVENT
TE_ADDRESSCREATE
0O2TE_ADDRESSREMOVE
TE_REINITWWW
0F~TE_TRANSLATECHANGEWW
cTE_ADDRESSCLOSEW
0CNTE_PHONECREATEWW
TE_PHONEREMOVEWW
>ITTAPIObjectEvent2WW|
qITPhoneW
PHONE_PRIVILEGEW
0Q5PP_OWNER
PP_MONITORWW|
Open|
CloseWWWD
vPHONECAPS_LONGWWD
PCL_HOOKSWITCHESD
PCL_HANDSETHOOKSWITCHMODESWWD
PCL_HEADSETHOOKSWITCHMODESWWD
pPCL_SPEAKERPHONEHOOKSWITCHMODESWD
PCL_DISPLAYNUMROWSWWD
PCL_DISPLAYNUMCOLUMNSWWWD
PCL_NUMRINGMODESD
+PCL_NUMBUTTONLAMPSWWD
PCL_GENERICPHONE|
`PhoneCapsLongWWW
WpclCapWW
PHONECAPS_STRING
PCS_PHONENAMEWWW
PCS_PHONEINFOWWW
BPCS_PROVIDERINFO|
PhoneCapsStringW
pcsCapWW
ppCapability
TPHONE_BUTTON_MODEWWW
PBM_DUMMYWWW
mPBM_CALL
9PBM_FEATUREW
PBM_KEYPADWW
PBM_LOCALWWW
PBM_DISPLAYW|
^ButtonModeWW
lButtonIDWWW
SpButtonModeWp
8\qPHONE_BUTTON_FUNCTIONWWWp
PBF_UNKNOWNWp
PBF_CONFERENCEWWp
PBF_TRANSFERp
PBF_DROPp
PBF_HOLDp
_PBF_RECALLWWp
PBF_DISCONNECTWWp
PBF_CONNECTWp
0y6PBF_MSGWAITONWWWp
PBF_MSGWAITOFFWWp
PBF_SELECTRINGWWp
PBF_ABBREVDIALWWp
PBF_FORWARDWp
PBF_PICKUPWWp
PBF_RINGAGAINWWWp
PBF_PARKp
PBF_REJECTWWp
00fPBF_REDIRECTp
PBF_MUTEp
zPBF_VOLUMEUPp
0[7PBF_VOLUMEDOWNWWp
PBF_SPEAKERONWWWp
PBF_SPEAKEROFFWWp
JPBF_FLASHWWWp
PBF_DATAONWWp
^PBF_DATAOFFWp
PBF_DONOTDISTURBp
PBF_INTERCOMp
zPBF_BRIDGEDAPPWWp
uPBF_BUSYp
PBF_CALLAPPWp
2PBF_DATETIMEp
?PBF_DIRECTORYWWWp
0sTPBF_COVERWWWp
PBF_CALLIDWWp
dPBF_LASTNUMWp
PBF_NIGHTSRVp
cPBF_SENDCALLSWWWp
PBF_MSGINDICATORp
PBF_REPDIALWp
^PBF_SETREPDIALWWp
PBF_SYSTEMSPEEDWp
PBF_STATIONSPEEDp
PBF_CAMPONWWp
PBF_SAVEREPEATWWp
YPBF_QUEUECALLWWWp
PBF_NONEp
0>?PBF_SEND|
VButtonFunctionWW
pButtonFunctionW|
ButtonTextWW
ppButtonText
PHONE_BUTTON_STATEWW
PBS_UPWW
PBS_DOWN
PBS_UNKNOWNW
PBS_UNAVAILW|
ButtonStateW
pButtonState8
PHONE_HOOK_SWITCH_DEVICE8
PHSD_HANDSET8
PHSD_SPEAKERPHONEWWW8
PHSD_HEADSET
PHONE_HOOK_SWITCH_STATEW
BPHSS_ONHOOKW
GPHSS_OFFHOOK_MIC_ONLYWWW
PHSS_OFFHOOK_SPEAKER_ONLYWWW
`PHSS_OFFHOOK|
HookSwitchStateWl9
BZHookSwitchDevice
pHookSwitchState|
RingMode
mplRingModeWW|
RingVolumeWW
$JplRingVolume
PHONECAPS_BUFFER
PCB_DEVSPECIFICBUFFERWWW|
xeGetPhoneCapsBufferWW
pcbCapsW
SppPhoneCapsBufferWWW|
pfPhoneCapsBufferW
pVarBufferWWd
8D3PHONE_LAMP_MODEWd
0^lLM_DUMMYd
LM_OFFWWd
]LM_STEADYWWWd
LM_WINKWd
]LM_FLASHd
LM_FLUTTERWWd
LM_BROKENFLUTTERd
0,XLM_UNKNOWNWW|
LampMode
lLampIDW
3pLampModeWWW|
DisplayW
pbstrDisplay|
SetDisplayWW
xLlColumnW
bstrDisplayW|
PreferredAddressesWW|
EnumeratePreferredAddressesW|
DeviceSpecificWW
pParamsW|
YDeviceSpecificVariantWWW
varDevSpecificByteArrayW|
5NegotiateExtVersionW
lLowVersionW
XlHighVersion
plExtVersion
+WPhoneWWW
ppPhoneW
ITAddressTranslation,
8_iITAddressTranslationInfo,
DialableStringWW
4CppDialableString,
DisplayableStringWWW
.ppDisplayableStringW,
CurrentCountryCodeWW
CountryCodeW,
{DestinationCountryCodeWW,
mTranslationResultsWW
xplResultsWWW
TranslateAddress
pAddressToTranslateW
lCardWWW
lTranslateOptionsWWW
ppTranslated
TranslateDialogW
hwndOwnerWWW
pAddressInWW
KIEnumLocationWWW
#ITLocationInfoWW
PermanentLocationIDW
plLocationID
$plCountryCodeWWW
)CountryIDWWW
plCountryIDW
OptionsW
plOptionsWWW
PreferredCardIDW
plCardID
LocationName
ppLocationNameWW
`CityCode
ppCodeWW
LocalAccessCodeW
LongDistanceAccessCodeWW
1TollPrefixListWW
ppTollListWW
msCancelCallWaitingCodeWWW
EnumerateLocationsWW
FppEnumLocationWW
^LocationsWWWX
IEnumCallingCard
ITCallingCardWWW
PermanentCardIDW
NumberOfDigitsWW
plDigits
CardName
ppCardNameWW
QSameAreaDialingRuleW
ppRuleWW
_LongDistanceDialingRuleW
InternationalDialingRule
EnumerateCallingCardsWWW
nppEnumCallingCardWWW
CallingCards 
ITAgentW
IEnumAgentSessionWWW
ITAgentSessionWW
AgentWWW
FppAgentWL
ITACDGroupWW
IEnumQueueWW
ITQueueW
cMeasurementPeriodWWW
plPeriod
TotalCallsQueued
CurrentCallsQueuedWW
TotalCallsAbandonedW
UTotalCallsFlowedInWW
TotalCallsFlowedOutW
LongestEverWaitTimeW
plWaitTimeWW
CurrentLongestWaitTimeWW
AverageWaitTimeW
FinalDispositionL
wEnumerateQueuesW
ppEnumQueueWL
QueuesWW
!ACDGroup
wppACDGroupWWx
8XiAGENT_SESSION_STATEWx
EASST_NOT_READYWWx
ASST_READYWWx
ASST_BUSY_ON_CALLWWWx
ASST_BUSY_WRAPUPx
[ASST_SESSION_ENDEDWW
pSessionStateWWW
SessionStartTime
/8pdateSessionStartWWW
F%SessionDurationW
plDurationWW
NumberOfCallsWWW
%PTotalTalkTimeWWW
plTalkTimeWW
AverageTalkTimeW
TotalCallTimeWWW
yplCallTimeWW
AverageCallTimeW
TotalWrapUpTimeW
plWrapUpTime
EZAverageWrapUpTimeWWW
ACDCallRateW
pcyCallrateW
3LongestTimeToAnswerW
plAnswerTime
)AverageTimeToAnswerW 
EnumerateAgentSessionsWW
ppEnumAgentSessionWW 
CreateSessionWWW
pACDGroupWWW
ppAgentSessionWW 
CreateSessionWithPIN
pPIN 
]IDWW
ppID 
ppUserWW
.AGENT_STATEW
6AS_NOT_READY
QAS_READY
*AS_BUSY_ACDW
AS_BUSY_INCOMING
AS_BUSY_OUTGOING
AS_UNKNOWNWW
;pAgentStateW 
[OverallCallRateW 
NumberOfACDCalls 
<[NumberOfIncomingCallsWWW 
NumberOfOutgoingCallsWWW 
TotalACDTalkTime 
NqTotalACDCallTime 
AgentSessionsWWW@
5ITAgentEvent
AGENT_EVENTW
AE_NOT_READY
AE_READY
AE_BUSY_ACDW
AE_BUSY_INCOMING
+AE_BUSY_OUTGOING
AE_UNKNOWNWW
8FEITAgentSessionEventW
SessionW
ppSessionWWWl 
AGENT_SESSION_EVENTWl 
ASE_NEW_SESSIONWl 
ASE_NOT_READYWWWl 
0>sASE_READYWWWl 
ASE_BUSYl 
ASE_WRAPUPWWl 
ASE_ENDW
ITACDGroupEventW
GroupWWW
VppGroupW4!
!ACDGROUP_EVENTWW4!
ACDGE_NEW_GROUPW4!
0IbACDGE_GROUP_REMOVEDW
8e0ITQueueEvent
QueueWWW
o%ppQueueW
ACDQUEUE_EVENTWW
ACDQE_NEW_QUEUEW
ACDQE_QUEUE_REMOVEDW`"
ITTAPICallCenter
8&-IEnumAgentHandlerWWW(#
wITAgentHandlerWW(#
_2CreateAgentW(#
ceCreateAgentWithIDWWW
8}~IEnumACDGroupWWW(#
EnumerateACDGroupsWW
ppEnumACDGroupWW(#
LEnumerateUsableAddresses(#
DACDGroupsWWW(#
tUsableAddressesW`"
.EnumerateAgentHandlersWW
<ppEnumHandlerWWW`"
;AgentHandlersWWW
8iuITAgentHandlerEventW
AgentHandler
ppAgentHandlerWWT$
AGENTHANDLER_EVENTWWT$
AHE_NEW_AGENTHANDLERT$
AHE_AGENTHANDLER_REMOVED
8ITCallInfoChangeEventWWW
CALLINFOCHANGE_CAUSE
CIC_OTHERWWW
CIC_DEVSPECIFICW
CIC_BEARERMODEWW
CIC_RATE
CIC_APPSPECIFICW
hCIC_CALLIDWW
3CIC_RELATEDCALLIDWWW
CIC_ORIGINWW
CIC_REASONWW
CIC_COMPLETIONID
CIC_NUMOWNERINCR
CIC_NUMOWNERDECR
wCIC_NUMMONITORSW
KCIC_TRUNKWWW
PCIC_CALLERID
CIC_CALLEDID
CIC_CONNECTEDIDW
.CIC_REDIRECTIONIDWWW
CCIC_REDIRECTINGIDWWW
CIC_USERUSERINFO
CIC_HIGHLEVELCOMPWWW
CIC_LOWLEVELCOMP
PCIC_CHARGINGINFO
CIC_TREATMENTWWW
1CIC_CALLDATA
 CIC_PRIVILEGEWWW
/CIC_MEDIATYPEWWW
CIC_LASTITEM
8i|ITRequestEventWW
]nRegistrationInstance
plRegistrationInstanceWW
RequestModeW
)plRequestModeWWW
DestAddressW
KpAppNameW
ppAppNameWWW
2CalledPartyW
ppCalledPartyWWW
HsCommentW
ppCommentWWW
ITMediaSupportWW
MediaTypesWW
ANplMediaTypes
QueryMediaTypeWW
pfSupportWWWH&
ITTerminalSupportWWWH&
\bStaticTerminalsWH&
UJEnumerateStaticTerminals
ppTerminalEnumeratorH&
$DynamicTerminalClassesWW
IEnumTerminalClassWW
RIpElementsWWWH&
EnumerateDynamicTerminalClassesW
hppTerminalClassEnumeratorWWWH&
CreateTerminalWW
{pTerminalClassWWH&
GetDefaultStaticTerminal
ITTerminalSupport2WW
ZPluggableSuperclassesWWWt'
YIEnumPluggableSuperclassInfo
zITPluggableTerminalSuperclassInfoWWW
pNameWWW
CLSIDWWW
pCLSIDWW
EnumeratePluggableSuperclassesWW
ppSuperclassEnumeratorWW
)#PluggableTerminalClasses
bstrTerminalSuperclassWW<(
IEnumPluggableTerminalClassInfoW
ITPluggableTerminalClassInfo
CompanyW
pCompany
VersionW
pVersion
pMediaTypesW
EnumeratePluggableTerminalClassesWWW
iidTerminalSuperclassWWW
ppClassEnumeratorWWW
ITStreamControlW
"UCreateStream
=_tdWW
RemoveStream
pStreamWh)
IEnumStreamW
EnumerateStreams
ppEnumStream
gStreamsW
ITSubStreamControlWW0*
ITSubStreamW0*
StartSubStreamWW0*
PauseSubStreamWW0*
N{StopSubStreamWWW
ppITStreamWW
CreateSubStreamW
6ppSubStreamW
1LRemoveSubStreamW
ApSubStreamWW
IEnumSubStreamWW
EnumerateSubStreamsW
:ppEnumSubStreamW
SubStreamsWW
ITLegacyAddressMediaControlW
GetIDWWW
pDeviceClass
ppDeviceIDWW
GetDevConfig
ppDeviceConfigWW
7SetDevConfig
pDeviceConfigWWW\+
ITLegacyAddressMediaControl2
wireHWND$,
_RemotableHandle$,
cfContext
Z__MIDL_IWinTypes_0009WWW
JhInprocW
hRemoteW$,
uWWW\+
ConfigDialog\+
~ConfigDialogEdit
&dwSizeIn
pDeviceConfigInW
$pdwSizeOutWW
ppDeviceConfigOutWWW
5ITLegacyCallMediaControl
DetectDigits
BDigitModeWWW
GenerateDigitsWW
pDigitsW
C'SetMediaType
PMonitorMediaP-
ITLegacyCallMediaControl2WWWP-
GenerateDigits2W
lDurationWWWP-
GatherDigits
lNumDigitsWW
pTerminationDigitsWW
lFirstDigitTimeoutWW
lInterDigitTimeoutWW
~TAPI_DETECTTONEW
dwAppSpecificWWW
dwDurationWW
dwFrequency1
dwFrequency2
dwFrequency3P-
DetectTonesW
pToneListWWW
flNumTonesWWWP-
+DetectTonesByCollectionW
RspDetectToneCollectionWWW
TAPI_TONEMODEWWW
TTM_RINGBACK
cTTM_BUSY
TTM_BEEP
TTM_BILLINGWP-
GenerateTone
ToneMode|.
TAPI_CUSTOMTONEW|.
98dwFrequencyW|.
dwCadenceOnW|.
dwCadenceOff|.
]dwVolumeP-
%GenerateCustomTonesWP-
TGenerateCustomTonesByCollectionW
pCustomToneCollectionWWW
ITDetectTone
AppSpecificW
plAppSpecificWWW
Duration
FrequencyWWW
\plFrequencyWP-
CreateDetectToneObjectWW
ppDetectToneD/
hITCustomToneD/
CadenceOnWWW
plCadenceOnWD/
CadenceOffWW
LplCadenceOffP-
CreateCustomToneObjectWW
<)ppCustomToneP-
)GetIDAsVariantWW
bstrDeviceClassW
rpVarDeviceID
ITDigitDetectionEventWWW
DigitWWW
}pucDigit
pDigitModeWW
@TickCountWWW
plTickCountW
NITDigitGenerationEventWW
GenerationTerminationWWW
plGenerationTerminationWp0
ITDigitsGatheredEventWWWp0
DigitsWW
ppDigits
TAPI_GATHERTERMW
TGT_BUFFERFULLWW
ITGT_TERMDIGITWWW
0>2TGT_FIRSTTIMEOUT
TGT_INTERTIMEOUT
04oTGT_CANCELWWp0
GatherTerminationWWW
pGatherTerminationWW81
ITToneDetectionEvent
8<aITPrivateEventWW
?EventCodeWWW
v(plEventCodeW
EventInterfaceWW
9kpEventInterfaceW
ITAddress2WW
PhonesWW
pPhonesWd2
IEnumPhoneWW
EnumeratePhonesW
uppEnumPhoneW
GGetPhoneFromTerminal
PreferredPhonesW
EnumeratePreferredPhones
lSubEventWWW
pEnableW
8mVITTAPI2W
]CreateEmptyCollectionObjectW
RppCollection,3
ITMultiTrackTerminal,3
TrackTerminalsWW,3
EnumerateTrackTerminalsW,3
GCreateTrackTerminalW
TerminalDirectionWWW,3
MediaTypesInUseW
plMediaTypesInUseWWW,3
p DirectionsInUseW
'oplDirectionsInUsedWW,3
RemoveTrackTerminalW
nLpTrackTerminalToRemoveWW
vITStaticAudioTerminalWWW
WaveIdWW
OOplWaveId
YITBasicCallControl2W
RequestTerminalW
bstrTerminalClassGUIDWWW
Z>SelectTerminalOnCall
UnselectTerminalOnCallWWX4
ITAutomatedPhoneControlW
tPHONE_TONEWW
PT_KEYPADZEROWWW
0yuPT_KEYPADONE
PT_KEYPADTWO
dPT_KEYPADTHREEWW
PT_KEYPADFOURWWW
PT_KEYPADFIVEWWW
PT_KEYPADSIX
PT_KEYPADSEVENWW
bPT_KEYPADEIGHTWW
PT_KEYPADNINEWWW
PT_KEYPADSTARWWW
PT_KEYPADPOUNDWW
PT_KEYPADAWW
PT_KEYPADBWW
PT_KEYPADCWW
PT_KEYPADDWW
PT_NORMALDIALTONEWWW
PT_EXTERNALDIALTONEW
0f$PT_BUSYW
PT_RINGBACKW
0C~PT_ERRORTONE
PT_SILENCEWWX4
StartToneWWWX4
ToneX4
StopTone
pToneWWWX4
bEStartRingerW
lRingModeWWWX4
StopRingerWWX4
RingerWW
$pfRingingWWWX4
<#PhoneHandlingEnabled
*pfEnabledWWWX4
AutoEndOfNumberTimeoutWW
plTimeoutWWWX4
oAutoDialtoneX4
AutoStopTonesOnOnHookWWWX4
5AutoStopRingOnOffHookWWWX4
AutoKeypadTonesWX4
2sAutoKeypadTonesMinimumDurationWWX4
FAutoVolumeControlWWW
fEnabledX4
<AutoVolumeControlStepWWW
plStepSizeWWX4
AutoVolumeControlRepeatDelay
&9plDelayWX4
]YAutoVolumeControlRepeatPeriodWWWX4
SelectCallWW
!fSelectDefaultTerminalsWX4
QUnselectCallX4
EnumerateSelectedCallsWWX4
SelectedCallsWWW 5
ITMediaControlWW 5
StartWWW 5
4Stop 5
PauseWWW
TERMINAL_MEDIA_STATE
PTMS_IDLE
0KfTMS_ACTIVEWW
TMS_PAUSEDWW
TMS_LASTITEM 5
NMediaStateWW
pTerminalMediaStateW
ITFileTrackWL6
w_AMMediaTypeL6
majortypeWWWL6
^`subtypeWL6
bFixedSizeSamplesWWWL6
bTemporalCompressionL6
lSampleSizeWL6
formattypeWWL6
pUnkL6
cbFormatL6
pbFormat
7#FormatWW
ControllingTerminalW
ppControllingTerminalWWW
8MxITScriptableAudioFormatW
Channels
FSamplesPerSecWWW
*AvgBytesPerSecWW
BlockAlignWW
BitsPerSampleWWW
FormatTagWWW
2XAudioFormatForScriptingW
=ppAudioFormatWWW
nEmptyAudioFormatForScripting
ITCallInfo2Wx7
ITFileTerminalEventWx7
TrackWWW
ppTrackTerminalW
9FT_STATE_EVENT_CAUSE
FTEC_NORMALW
7FTEC_END_OF_FILE
0GTFTEC_READ_ERRORW
>FTEC_WRITE_ERROR
phrErrorCode@8
ITToneTerminalEventW
8!0ITASRTerminalEventWW
ITTTSTerminalEventWWl9
8uBITPhoneEvent
8P_PHONE_EVENTW
PE_DISPLAYWW
0rBPE_LAMPMODEW
PE_RINGMODEW
PE_RINGVOLUMEWWW
0EiPE_HOOKSWITCHWWW
PE_CAPSCHANGEWWW
PE_BUTTONWWW
PE_CLOSE
0gtPE_NUMBERGATHEREDWWW
0qWPE_DIALINGWW
PE_ANSWERWWW
PE_DISCONNECTWWW
PE_LASTITEMW
,&pDeviceWl9
ButtonLampId
plButtonLampIdWWl9
RNumberGatheredWW
ppNumber4:
ITPhoneDeviceSpecificEventWW
ITLegacyWaveSupportW
FULLDUPLEX_SUPPORTWW
NFDS_SUPPORTEDWWW
%FDS_NOTSUPPORTED
FDS_UNKNOWNW
IsFullDuplex
pSupport`;
fITTAPIDispatchEventNotificationW
TAPI(<
nDispatchMapperWW
{ITDispatchMapper
QueryDispatchInterfaceWW
GpInterfaceToMapW
gmppReturnedInterfaceW
RequestMakeCallWT=
ITRequestWWWT=
4MakeCall
!\pAppName
P)pCalledParty
_pComment
80\TapiConstantsWWW
CLSID_String_VideoWindowTerm
CLSID_String_VideoInputTerminalW
CLSID_String_HandsetTerminal
oCLSID_String_HeadsetTerminal
>CLSID_String_SpeakerphoneTerminalWWW
CLSID_String_MicrophoneTerminalW
CLSID_String_SpeakersTerminalWWW
CLSID_String_MediaStreamTerminal
CLSID_String_FileRecordingTerminalWW
CLSID_String_FilePlaybackTerminalWWW
0-`TAPIPROTOCOL_String_PSTN
TAPIPROTOCOL_String_H323
TAPIPROTOCOL_String_MulticastWWW
LINEADDRESSTYPE_PHONENUMBERW
LINEADDRESSTYPE_SDPW
0cVLINEADDRESSTYPE_EMAILNAMEWWW
"LINEADDRESSTYPE_DOMAINNAMEWW
LINEADDRESSTYPE_IPADDRESSWWW
LINEDIGITMODE_PULSEW
LINEDIGITMODE_DTMFWW
LINEDIGITMODE_DTMFENDWWW
TAPIMEDIATYPE_AUDIOW
CTAPIMEDIATYPE_VIDEOW
TAPIMEDIATYPE_DATAMODEMW
TAPIMEDIATYPE_G3FAXW
dTAPIMEDIATYPE_MULTITRACK
Microsoft TAPI 3.0 Type LibraryWWW
TAPI 3.0 ITCollection interfaceWWW&
Returns number of items in collection.2
Given an index, returns an item in the collection.)
returns an enumerator for the collection.W
ITMediaPlayback InterfaceW
property PlayListW
ITMediaRecord InterfaceWWW
propery FileNameWW
property FileNameW 
TAPI 3.1 ITCollection2 interfaceWW
Adds an item to the collection.WWW$
Removes an item from the collection.WW#
TAPI 3.0 ITCallStateEvent InterfaceWWW
TAPI 3.0 ITCallInfo interfaceW
TAPI 3.0 ITAddress interfaceWW
property State
property AddressNameWW
property ServiceProviderNameWW
TAPI 3.0 ITTAPI interfaceW
Initialize
ShutdownWW
property Addresses
TAPI 3.0 IEnumAddress interfaceWWW
method EnumerateAddressesW 
method RegisterCallNotificationsWW
method UnregisterNotifications
property CallHubsW
TAPI 3.0 IEnumCallHub interfaceWWW
TAPI 3.0 ITCallHub interfaceWW
method ClearWW
TAPI 3.0 IEnumCall interfaceWW
method EnumerateCallsW
property Calls
property NumCallsW
method EnumerateCallHubsWW
method SetCallHubTrackingW
property PrivateTAPIObjectsWWW
method RegisterRequestRecipientWWW#
method SetAssistedTelephonyPriorityWWW
method SetApplicationPriorityW
property EventFilterWW
property TAPIObjectWWW%
TAPI 3.0 ITBasicCallControl interfaceW
method Connect
method AnswerW
method DisconnectW
method HoldWWW
method HandoffDirectWW
method HandoffIndirect
method ConferenceW
method TransferWWW
method BlindTransferWW
method SwapHoldWWW
method ParkDirectW
method ParkIndirectWWW
method UnparkW
method SetQOSW
method PickupW
method DialWWW
method FinishW
method RemoveFromConferenceWWW
method CreateCallW
property DialableAddressWW'
TAPI 3.0 ITForwardInformation InterfaceWWW
property NumRingsNoAnswerW
method SetForwardTypeW
property ForwardTypeDestinationWWW
property ForwardTypeCaller
method CreateForwardInfoObject
method Forward
property MessageWaitingWWW
property DoNotDisturbW
property AddressWW
property CallState
property Privilege
property CallHubWW
property CallInfoLongW
property CallInfoStringWWW
property CallInfoBufferWWW
method ReleaseUserUserInfo
property CallW
property Cause
property CallbackInstanceW*
TAPI 3.0 ITCallNotificationEvent interface
property Event*
TAPI 3.0 ITTAPIEventNotification Interface
method EventWW'
TAPI 3.0 ITBasicAudioTerminal interfaceWWW
property VolumeWWW
property BalanceWW!
TAPI 3.0 ITCallHubEvent InterfaceW(
TAPI 3.1 ITForwardInformation2 InterfaceWW
method SetForwardType2*
property ForwardTypeDestinationAddressType%
property ForwardTypeCallerAddressTypeW(
TAPI 3.0 ITAddressCapabilities interfaceWW
property AddressCapability 
property AddressCapabilityStringWW
property CallTreatmentsWWW
TAPI 3.0 IEnumBstr interfaceWW
property CompletionMessagesWWW
property DeviceClasses
TAPI 3.0 ITQOSEvent InterfaceW
property MediaType!
TAPI 3.0 ITAddressEvent interfaceW
TAPI 3.0 ITTerminal interfaceW
property NameW
property TerminalTypeW
property TerminalClass
property Direction
property TerminalW/
TAPI 3.1 ITAddressDeviceSpecificEvent interfaceWWW
property lParam1WW
property lParam2WW
property lParam3WW#
TAPI 3.0 ITCallMediaEvent InterfaceWWW
property Error
ITStream interface
method StartStream
method PauseStream
method StopStreamW
method SelectTerminalW
method UnselectTerminalWWW 
TAPI 3.0 IEnumTerminal InterfaceWW
property Terminals
property StreamWWW$
TAPI 3.0 ITTAPIObjectEvent InterfaceWW%
TAPI 3.1 ITTAPIObjectEvent2 interfaceW
TAPI 3.1 ITPhone interface
method OpenWWW
method CloseWW
property PhoneCapsLong
property PhoneCapsStringWW
method EnumerateTerminalsW
property ButtonModeWWW
property ButtonFunctionWWW
property ButtonTextWWW
property ButtonStateWW
property HookSwitchStateWW
property RingModeW
property RingVolumeWWW
method GetPhoneDevCapsBufferWW
property PhoneCapsBufferWW
property LampModeW
property DisplayWW
method SetDisplayW
property PreferredAddressesWWW"
method EnumeratePreferredAddresses
method DeviceSpecificW
method DeviceSpecificVariantWW
method NegotiateExtVersion
property Phone'
TAPI 3.0 ITAddressTranslation InterfaceWWW+
TAPI 3.0 ITAddressTranslationInfo InterfaceWWW
property Dialable StringWW
property Displayable StringWWW$
property Current country/region CodeWW(
property Destination country/region CodeWW
property Translation ResultsWW
method TranslateAddressWWW
method TranslateDialog 
TAPI 3.0 IEnumLocation interfaceWW!
TAPI 3.0 ITLocationInfo InterfaceW
property Permanent Location ID
property Country CodeW
property Country IDWWW
property OptionsWW!
property Preferred Credit Card IDW
property Location Name
property City/Area CodeWWW
property Local Access Code"
property Long Distance Access Code
property Toll Prefix ListW!
property Cancel Call Waiting CodeW
method EnumerateLocationsW
property Locations#
TAPI 3.0 IEnumCallingCard interfaceWWW 
TAPI 3.0 ITCallingCard InterfaceWW
property Permanent Card ID
property Number Of DigitsW
property Card Name
property Same Area Dialing RuleWWW#
property Long Distance Dialing RuleWWW#
property International Dialing RuleWWW
method EnumerateCallingCardsWW
property CallingCardsW
TAPI 3.0 ITAgent interface$
TAPI 3.0 IEnumAgentSession interfaceWW!
TAPI 3.0 ITAgentSession interfaceW
property Agent
TAPI 3.0 ITACDGroup interfaceW
TAPI 3.0 IEnumQueue interfaceW
TAPI 3.0 ITQueue interface
property MeasurementPeriod
property TotalCallsQueuedW
property CurrentCallsQueuedWWW
property TotalCallsAbandonedWW
property TotalCallsFlowedInWWW
property TotalCallsFlowedOutWW
property LongestEverWaitTimeWW
property CurrentLongestWaitTimeWWW
property AverageWaitTimeWW
property FinalDispositionW
method EnumerateQueues
property QueuesWWW
property ACDGroupW
property SessionStartTimeW
property SessionDurationWW
property NumberOfCalls
property TotalTalkTime
property AverageTalkTimeWW
property TotalCallTime
property AverageCallTimeWW
property TotalWrapUpTimeWW
property AverageWrapUpTime
property ACDCallRateWW
property LongestTimeToAnswerWW
property AverageTimeToAnswerWW
method EnumerateAgentSessionsW
method CreateSessionWW
method CreateSessionWithPINWWW
property IDWWW
property UserW
property OverallCallRateWW
property NumberOfACDCallsW
property NumberOfIncomingCalls
property NumberOfOutgoingCalls
property TotalACDTalkTimeW
property TotalACDCallTimeW
property AgentSessions
TAPI 3.0 ITAgentEvent interfaceWWW&
TAPI 3.0 ITAgentSessionEvent interface
property SessionWW"
TAPI 3.0 ITACDGroupEvent interface
property Group
TAPI 3.0 ITQueueEvent interfaceWWW
property Queue#
TAPI 3.0 ITTAPICallCenter interfaceWWW$
TAPI 3.0 IEnumAgentHandler interfaceWW!
TAPI 3.0 ITAgentHandler interfaceW
property CreateAgentWW
property CreateAgentWithID 
TAPI 3.0 IEnumACDGroup interfaceWW
method EnumerateACDGroupsW
method EnumerateUsableAddressesWWW
property ACDGroups
property UsableAddressesWW
method EnumerateAgentHandlersW
property AgentHandlers&
TAPI 3.0 ITAgentHandlerEvent interface
property AgentHandlerW(
TAPI 3.0 ITCallInfoChangeEvent InterfaceWW
property Callback Instance!
TAPI 3.0 ITRequestEvent InterfaceW
property RegistrationInstanceW
property RequestModeWW
property DestAddressWW
property AppNameWW
property CalledPartyWW
property CommentWW!
TAPI 3.0 ITMediaSupport interfaceW
property MediaTypesWWW
method QueryMediaTypeW$
TAPI 3.0 ITTerminalSupport interfaceWW
property StaticTerminalsWW
method EnumerateStaticTerminalsWWW
property DynamicTerminalClassesWWW%
TAPI 3.0 IEnumTerminalClass interfaceW&
method EnumerateDynamicTerminalClasses
method CreateTerminalW
method GetDefaultStaticTerminalWWW%
TAPI 3.1 ITTerminalSupport2 interfaceW
property PluggableSuperclasses/
TAPI 3.1 IEnumPluggableSuperclassInfo interfaceWWW4
TAPI 3.1 ITPluggableTerminalSuperclassInfo interfaceWW
method get_NameWWW
method get_CLSIDWW%
method EnumeratePluggableSuperclassesW!
property PluggableTerminalClassesW2
TAPI 3.1 IEnumPluggableTerminalClassInfo interface/
TAPI 3.1 ITPluggableTerminalClassInfo interfaceWWW
method get_Company
method get_Version
method get_TerminalClassWW
method get_DirectionWW
method get_MediaTypesW(
method EnumeratePluggableTerminalClassesWW
ITStreamControl interfaceW
method CreateStreamWWW
method RemoveStreamWWW
IEnumStream interfaceW
property StreamsWW
ITSubStreamControl interfaceWW
ITSubStream interfaceW
method CreateSubStream
method RemoveSubStream
IEnumSubStream interfaceWW
property SubStreamsWWW.
TAPI 3.0 ITLegacyAddressMediaControl Interface/
TAPI 3.1 ITLegacyAddressMediaControl2 InterfaceWWW+
TAPI 3.0 ITLegacyCallMediaControl InterfaceWWW
method DetectDigitsWWW
method GenerateDigitsW
method SetMediaTypeWWW
method MonitorMediaWWW,
TAPI 3.1 ITLegacyCallMediaControl2 InterfaceWW
method GenerateDigits2
method GatherDigitsWWW
method DetectTones
method DetectTonesByCollection
method GenerateToneWWW
method GenerateCustomTones&
method GenerateCustomTonesByCollection
TAPI 3.1 ITDetectTone InterfaceWWW
property AppSpecificWW
property DurationW
property Frequency
method CreateDetectToneObjectW
TAPI 3.1 ITCustomTone InterfaceWWW
property CadenceOn
property CadenceOffWWW
method CreateCustomToneObjectW
method GetIDAsVariantW(
TAPI 3.0 ITDigitDetectionEvent interfaceWW
property Digit
property DigitMode
property TickCount)
TAPI 3.0 ITDigitGenerationEvent interfaceW
property GenerationTermination(
TAPI 3.1 ITDigitsGatheredEvent InterfaceWW
property DigitsWWW
property GatherTermination'
TAPI 3.1 ITToneDetectionEvent InterfaceWWW!
TAPI 3.0 ITPrivateEvent InterfaceW
property EventCode
property EventInterfaceWWW
TAPI 3.1 ITAddress2 interfaceW
property PhonesWWW
TAPI 3.1 IEnumPhone InterfaceW
method EnumeratePhones
method GetPhoneFromTerminalWWW
property PreferredPhonesWW
method EnumeratePreferredPhonesWWW
method EventFilter
TAPI 3.1 ITTAPI2 interface"
method CreateEmptyCollectionObject
ITMultiTrackTerminal Interface
property TrackTerminalsWWW
method EnumerateTrackTerminals
method CreateTrackTerminal
property MediaTypesInUseWW
property DirectionsInUseWW
method RemoveTrackTerminal(
TAPI 3.1 ITStaticAudioTerminal InterfaceWW
property WaveIdWWW&
TAPI 3.0 ITBasicCallControl2 interface
method RequestTerminal
method SelectTerminalOnCallWWW
method UnselectTerminalOnCallW*
TAPI 3.1 ITAutomatedPhoneControl interface
method StartToneWW
method StopToneWWW
property ToneW
method StartRinger
method StopRingerW
property RingerWWW
property PhoneHandlingEnabledW
property AutoEndOfNumberTimeoutWWW
property AutoDialtoneW
property AutoStopTonesOnOnHook
property AutoStopRingOnOffHook
property AutoKeypadTonesWW'
property AutoKeypadTonesMinimumDurationWWW
property AutoVolumeControl
property AutoVolumeControlStep%
property AutoVolumeControlRepeatDelayW&
property AutoVolumeControlRepeatPeriod
method SelectCallW
method UnselectCallWWW
method EnumerateSelectedCallsW
property SelectedCalls
ITMediaControl InterfaceWW
method StartWW
method StopWWW
method PauseWW
property MediaStateWWW
ITFileTrack InterfaceW
property FormatWWW
property ControllingTerminalWW*
TAPI 3.0 ITScriptableAudioFormat Interface
property ChannelsW
property SamplesPerSec
property AvgBytesPerSecWWW
property BlockAlignWWW
property BitsPerSample
property FormatTag 
property AudioFormatForScriptingWW%
property EmptyAudioFormatForScriptingW
TAPI 3.1 ITCallInfo2 interface&
TAPI 3.0 ITFileTerminalEvent interface
property Track&
TAPI 3.0 ITToneTerminalEvent interface%
TAPI 3.0 ITASRTerminalEvent interfaceW%
TAPI 3.0 ITTTSTerminalEvent interfaceW
TAPI 3.1 ITPhoneEvent InterfaceWWW
property HookSwitchDeviceW
property ButtonLampIdW
property NumberGatheredWWW-
TAPI 3.1 ITPhoneDeviceSpecificEvent interfaceW
ITLegacyWaveSupportWWW2
TAPI 3.0 ITTAPIDispatchEventNotification Interface
TAPI 3.0 TAPI ObjectWW
TAPI 3.0 DispatchMapper Object#
TAPI 3.0 ITDispatchMapper interfaceWWW
QueryDispatchInterface
TAPI 3.0 RequestMakeCall ObjectWWW
TAPI 3.0 ITRequest InterfaceWW
method MakeCallWWW
TAPI 3.0 Constants
{F7438990-D6EB-11D0-82A6-00AA00B5CA1B}
{AAF578EC-DC70-11D0-8ED3-00C04FB6809F}
{AAF578EB-DC70-11D0-8ED3-00C04FB6809F}
{AAF578ED-DC70-11D0-8ED3-00C04FB6809F}
{AAF578EE-DC70-11D0-8ED3-00C04FB6809F}
{AAF578EF-DC70-11D0-8ED3-00C04FB6809F}
{AAF578F0-DC70-11D0-8ED3-00C04FB6809F}
{E2F7AEF7-4971-11D1-A671-006097C9A2E8}
{521F3D06-C3D0-4511-8617-86B9A783DA77}
{0CB9914C-79CD-47DC-ADB0-327F47CEFB20}
{831CE2D6-83B5-11D1-BB5C-00C04FB6809F}
{831CE2D7-83B5-11D1-BB5C-00C04FB6809F}
{831CE2D8-83B5-11D1-BB5C-00C04FB6809F}
p&^f'&
REGISTRY
TYPELIB
en-US
