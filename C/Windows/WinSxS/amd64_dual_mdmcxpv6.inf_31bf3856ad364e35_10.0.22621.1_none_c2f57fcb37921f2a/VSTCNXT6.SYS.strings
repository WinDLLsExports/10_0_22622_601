!This program cannot be run in DOS mode.
(Rich
.text
h_LTEXT
h.rdata
H.data
.pdata
H_LDATA
PAGESER
`INIT
.rsrc
B.reloc
D$7FurI
L$8H3
t$ WATAUAVAWH
A_A^A]A\_
tU<#u
UVWATAUAVAWH
D$hE3
L9Z tFA:
L$hH3
pA_A^A]A\_^]
($`< u
($`< u
$`< u
L9\$(D
T$ I;
x AUH
L$ L+
8L$ tqH
 @8(t8
8L$ t%H
 @8(u
D$XL+
L$ H+
L$Xud
t$ WH
T$8uqH
l$ VH
x ATAUAWH
 A_A]A\
\$ L;
{ AUH
D$!Hc
L$0H3
L$0E3
|$ ATAUAVH
A^A]A\
{ ATH
D$PV34
D$8tVH
D$HthH
6t,<Vu2
D$8tVH
WATAUH
0A]A\_
x ATH
t&9-6|
D$X 3
L$(H3
T$ E3
9T$Pv
9T$Ps
f#L$Pf;
` AUAVAWH
L$XH3
A_A^A]
{ AUH
 t<fA
@t;fA
L$HH3
T$PE3
x ATAUAVH
0A^A]A\
x ATH
fD9d7
WATAUAVAWH
        L
 A_A^A]A\_
WATAWH
gfffA
D$!Hc
L$@H3
A_A\_
gfffA
gfffA
L$0H3
WATAVH
 A^A\_
L$pH3
UVWATAUAVAWH
t$HL;
pA_A^A]A\_^]
L$ UVWATAUAVAWH
l$pfE
0A_A^A]A\_^]
WATAUH
0A]A\_
x ATAUAWH
 A_A]A\
t$huiH
WATAUH
@A]A\_
` AUH
L$hE3
        E3
SUVWATH
PA\_^][
x ATH
WATAUH
tvD9%
 A]A\_
T$XE3
D;D$0u
D9D$0u~9=
u9=YC
L$0H3
p AWH
x AVH
L$0H3
x ATAVAWH
0A_A^A\
K WATAUAVAWH
A_A^A]A\_
x ATAUAVH
 A^A]A\
H WATAUAVAWH
0A_A^A]A\_
x ATH
t$ WH
VWATH
@A\_^
(00-FF)
L$ H+
T$0H+
;\$8sSL
D;d$4t
L$PH3
wQtEA+
ttHcL$@
L$@uVH
HcL$@H
D$(E3
L$(H3
H SUVWATAUAVH
 A^A]A\_^][
x ATA
gfffA
x AVH
x ATH
L$>u,H9
UVWATAUH
atCA+
PA]A\_^]
w3tuA
WATAUAVAWH
A_A^A]A\_
t$0E3
t$@ujH
w3tLA
wHtaA
|$ ATH
\u0D9
L$ E3
h AWH
t$ WH
D$Dfff
D$03333
D$8fff
L$HH3
L$HH3
WATAUH
L$xE3
9D$pA
;D$Ht
PA]A\_
;D$Pt
;D$Xt
UVWATAUAVAWH
 A_A^A]A\_^]
9D$0t
;D$0t
;D$0t
VWATAUAVH
@trD9%
D9%7M
@trD9%
A^A]A\_^
\$ WH
VtLE;
t$ WH
x ATAUAVH
A^A]A\
t$ WH
T$0fA
@SVWH
VWATAUAVH
A^A]A\_^
|9=P 
D$`ujH
WATAUAVAWH
t$xM+
 A_A^A]A\_
x ATH
|$(L+
|$0Ju
D$HtUH
D$Ht\H
|$`H;
WATAUH
D$8tNH
D$8tQH
D$HtQH
D$XtQH
D$htQH
D$htbH
D$XtnH
A]A\_
t$ WATAUAVAWH
6t5<Vu;
A_A^A]A\_
 u`f;
;D$0u
;D$8t
\$0u&
9D$0s
x AWH
9|$0u
WATAUH
 A]A\_H
WATAUAVAWH
D$XtSH
D$ A#
|$(E3
D9d$dt
T$ E3
D$XtUH
A_A^A]A\_
VWATH
tz95d
 A\_^
x ATAVAWH
 A_A^A\
D9\$8u(
D$ Hk
D$ Hk
L$ Hk
D$ Hk
D$ Hk
L$ Hk
D$ Hk
D$ Hk
T$ Hk
L$(9D
D$ Hk
D$ Hk
D$ Hk
;D$@s
x ATH
WATAUAVAWH
0tTA+
6tAA+
A_A^A]A\_
x ATH
7t1A+
WATAVH
A^A\_
x ATH
0tLA+
8t@A+
D$(`m
D$ `m
t$ WATAUAVAWH
0A_A^A]A\_
t$ WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
v}f9]
 A_A^A]A\_
UVWATAUAVAWH
fD;.r
fD;.uK
u$@8l$iu
 A_A^A]A\_^]
x ATAUAVH
fD;&s4L
fD;&r
fD;&r
 A^A]A\
x ATAUAVH
fA;,$sA
fE;,$r
t$pt9
0A^A]A\
t$ WATAUAVAWH
vwf9]
8\$Pu
u*f9]
 A_A^A]A\_
t$ WATAUAVAWH
fA91vsH
fA;.r
fA;.uG
fA;.r
 A_A^A]A\_
t$ WATAUAVAWH
vrfA98v%
fA98D
fE;,$
 A_A^A]A\_
<PuCL
UVWATAUAVAWH
f9t$p
f;\$ps
9t$xt!H
fD;l$p
 A_A^A]A\_^]
UVWATAUAVAWH
uxfA98
fA;4$r
fA9,$v,9
fA;4$r
fA98D
D$pu{L
D$pt)H
|$ fA
fE;<$fD
0A_A^A]A\_^]
D$89\$8
T$8fA
T$8fA
T$8fA
T$8fA
WATAUAVAWH
,fD;M
 A_A^A]A\_
WATAUAVAWH
fA;6s6
sJfA;6s1A
B8<(t
F8$(u
 A_A^A]A\_
ATAUAVH
u`f9]
 A^A]A\
VWATAUAWH
T$PvW
|$HE3
A_A]A\_^
` AUH
x AUA
|$(A]
D$#fA
|$ ATH
D$Pt{9
T$0E3
T$0E3
VWATH
L$0H3
@A\_^
x ATH
D$(tEH
f9l$P
:D$Hu
l$ VWATH
L$`E8
D9d$`
L$`t>M9
L$`E;
D$`A)
0A\_^
D$8tVH
D$8tVH
VWATAUAVH
t$HE3
L!l$(I
uML!l$(L
t L!l$(L
t!D8m
A^A]A\_^
D$8teH
D$8taH
D$8t]H
D$8tWH
L$`fA
L$`fA
L$`fA
L$`fA
L$`fA
L$`fA
D$8t[H
D$8tWH
D$8tWH
D$8tkH
T$9t\A
D$8tTH
k VWATH
@A\_^
D$8tVH
D$8tVH
D$8tVH
D$8taH
VWATH
D$8tZH
T$8H!t$(L
L$pH3
WATAUH
D$8tsH
L#D$X
A]A\_
WATAUH
D$8tgH
A]A\_
D$8t[H
D$8tWH
VWATAUAWH
L$hH3
A_A]A\_^
t$ WATAUAVAWH
H!t$83
A_A^A]A\_
D$(tFH
t$ WATAUAVAWH
D$`@:
D$a@:
D$e@:
D$n@:
D$r@:
D$`@:
D$a@:
D$j@:
D$u@:
D$l@:
D$b@:
D$t@:
D$g@:
D$w@:
D$p@:
D$v@:
D$h@:
D$i@:
D$c@:
D$d@:
D$k@:
D$m@:
D$o@:
D$q@:
D$s@:
D$f@:
A_A^A]A\_
l$ VWATAUAVAWH
A_A^A]A\_^
x ATAUAVH
MS=V32B
MS=V22B
MS=B212
MS=B103
@t(D9
L$hH3
A^A]A\
usfE3
u%fE3
WATAUAVAWH
l$XfA
 A_A^A]A\_
WATAUAVAWH
t$`fA
 A_A^A]A\_
D$8 t5
!|$ D
!|$$L
L$@H3
D$35@
!|$(H
L$PH3
WATAUH
C8H;C s
f;K`rp
u>fD9cdv7
fD9kb
KrfA;
f9CzsDH
S~fA;
klfA+
fD9cdv
Clf9Cn
uWfD9cdvPfD9kdu 
fD9kb
fD9cxv
 A]A\_
Krt!I
fA9CzsGI
f9CzsHH
f9CzsdH
fD9[tu
HduGfA
fA;@dA
fA;xd
f9Apr+
C|f9Cps
CdfE;
CvfE;
I\f9Jz
B^f9Bb
u8fD9Btu
f9Jzr
 f;Q|f
AxvHA
ClfA9Cnu
A^f9Absrf
C^f9Cbs
WATAUAVAWH
D$YH;
D$YH;
tAfE;
t#fA+
 A_A^A]A\_
|$ AUH
D$P-H
|$QtFH
T$PfA
x AUH
|$88t
|$8Zt
|$8\t
x AVH
x ATH
L$XH3
VWATAUAVH
 A^A]A\_^
D$Pu$E
T$0fA
VWAUAVAWH
D$PA*
 A_A^A]_^
x ATH
\$PueA8
L$0uHA
WAUAVH
 A^A]_
WAUAVH
 A^A]_
L$0H3
<dtT<u
T$0fA
T$0fA
` AUH
:\$@t9
WATAUAVAWH
 A_A^A]A\_
L$@E3
D$8tVH
h VWATAUAWH
uID9%&U
u D9%}M
D9%]M
D9%SK
)B0D9
)B0D9
D$Ht<H
L9d$Ht
D9%cI
D9%WI
A_A]A\_^
l$ WH
9t$DtPH
x ATAUAWH
0A_A]A\
x ATH
|$ ATH
D$\z(
{ AUH
l$ VWATAUAWH
D$dA"
D$dA"
L$dE3
A_A]A\_^
WATAUH
 A]A\_
WATAUAVAWH
tqD9-
tqD9-
 A_A^A]A\_
l$ VWATAUAVH
A^A]A\_^
` AUH
H!L$0
H!L$0
WATAUAVAWH
T$0E3
t~9-*
A_A^A]A\_
9/u'H
WATAUAVAWH
 A_A^A]A\_
\uxA;
t$ WATAUAVAWH
A_A^A]A\_
u,D9=
;D9=1
t!D9d$pt
t2D9=o
@SUVWATAUAVH
A^A]A\_^][
T$ H+
t$ WH
VWATH
@A\_^
VWATAUAVH
A^A]A\_^
.tTA+
8tTA+
CtTA+
KtdA+
StTA+
\tTA+
etTA+
ltdA+
ttTA+
c AUH
L$`E3
L$XH3
UWAUH
PA]_]
90t\H
x ATAUAVH
 A^A]A\
VWATAUAWH
L$8H3
A_A]A\_^
l$ VWATH
L$hE3
9l$`uu9=qJ
#9=nC
@A\_^
x ATH
|$ ATH
T$PE3
WAUAVH
u|9=S!
 A^A]_
u:9-N
A8(t'9-%
l$ VWATH
L$hE3
@A\_^
x ATH
l$ VH
L$XE3
x ATAUAVH
 A^A]A\
` AUH
x ATH
UVWATAUAVAWH
l$ E;
<#tB<*t7</~,<9~ <@~$<D~
L$(H3
0A_A^A]A\_^]
x AVH
x ATAVAWH
 A_A^A\
x AVH
T$ fA
D$6f9A
D$@E3
x ATH
D$(t<H
D$(t<H
WATAUAVAWH
!ugD+
 A_A^A]A\_
x ATAUAVH
0A^A]A\
l$ VWATAUAVH
A^A]A\_^
D$ u~H
(D$ L
VWATH
D$@E3
 A\_^
D$(u}E
ATAUAWH
@A_A]A\
h AVH
WATAUAVAWH
|$LupH
A_A^A]A\_
t$ WATAUAVAWH
D9=_m
0A_A^A]A\_
At %s
%s ( %d ms)
TerminateReadFirmwareMode 
FirmWarePimDTE - Start, Count = %d
FirmWarePimDTE - PSYS->FirmwareBufIndex = %d
FirmWarePimDTE - ESCAPE
FirmWarePimDTE end loop - i = %d PSYS->FirmwareBufIndex = %d
InitReadFirmwareMode - Start
InitReadFirmwareMode - PSYS->FirmwareBuf was allocated
InitReadFirmwareMode - XOFF threshold = %d, XON threshold = %d
@@@@ ProcessEEPROMPrograming - value of file size = %d
ProcessEEPROMPrograming - InitReadFirmwareMode returned %d
ParseStarCmd - value of file size cCmd_Buff=%s, Star_Exclamation_Array=0x%x
ATH1 setting pcd Country=0x%x, ath1=%d, offhook=%d
ATH:: in MOH session - DISCONNECT.
DoHangup - Termination cause - ATH
ATO:: in MOH session - IGNORE.
ATO:: in MOH session - RECONNECT.
ACTIVE PROFILE:
STORED PROFILE 0:
56000
33600
SoftK56_B2.1_V2.00.09Pdc
Oct 15 2008 # 17:51:27
 FLASH
 HAND
 LOOP
 DSVD
 VRPI
 V8bis
 RAMDSP
 AVALID
 AJACK
SoftK56 
V.22bis
V.23 CC
V.23 SC
V.26bis
V.26ter
V.27ter
V.29 HD
V.32bis
V.34 HD
K56FLEX
V.32terbo
Unknown
DIAG <2A4D3263 0=10>
DIAG <2A4D3263 1=
DIAG <2A4D3263 2=
DIAG <2A4D3263 3=
DIAG <2A4D3263 4="
DIAG <2A4D3263 5="
DIAG <2A4D3263 10=
DIAG <2A4D3263 13=
DIAG <2A4D3263 14=
DIAG <2A4D3263 15=
DIAG <2A4D3263 16=
DIAG <2A4D3263 17=
DIAG <2A4D3263 18=
DIAG <2A4D3263 20=
DIAG <2A4D3263 21=
DIAG <2A4D3263 26=
DIAG <2A4D3263 30=
DIAG <2A4D3263 32=
DIAG <2A4D3263 34=
DIAG <2A4D3263 40=
DIAG <2A4D3263 41=
DIAG <2A4D3263 42=
DIAG <2A4D3263 43=
DIAG <2A4D3263 44=
DIAG <2A4D3263 45=
DIAG <2A4D3263 50=
DIAG <2A4D3263 51=
DIAG <2A4D3263 52=
DIAG <2A4D3263 53=
DIAG <2A4D3263 54=
DIAG <2A4D3263 55=
DIAG <2A4D3263 56=
DIAG <2A4D3263 57=
DIAG <2A4D3263 58=
DIAG <2A4D3263 59=
DIAG <2A4D3263 60=
DIAG <2A4D3263 61=
SPACE
DIAG <2A4D3263 BA=
DIAG <2A4D3263 BB=
DIAG <2A4D3263 BC=
DIAG <2A4D3263 BD=
DIAG <2A4D3263 BE=
DIAG <2A4D3263 BF=
DIAG <2A4D3263 F5=
DIAG <2A4D3263 F7=
DIAG <2A4D3263 F9=
DIAG <2A4D3263 FA=
DIAG <2A4D3263 FB=
DIAG <2A4D3263 FD=
DIAG <2A4D3263 1=0>
DIAG <2A4D3263 60=1>
<VERSION=10>
<CALL SETUP RESULT=
Detected No Dial Tone
Detected Fast Busy Tone
Detected Busy Tone
Detected Voice Tone
Detected Data Answer Tone
Detected Data Calling Tone
Detected Fax Answer Tone
Detected Fax Calling Tone
Detected V.8bis Tone
Detected No Recognizable Tone
<MULTIMEDIA MODE=
Data Only
Fax Only
Voice Only
Voice View
Video-telephony
<DTE-DCE MODE=
Async data
V.80 transparent synchronous
V.80 framed synchronous
<V.8 CM octet string="
<V.8 JM octet string="
<RX SIG POWER DB=
, TX SIG POWER DB=
, S/N RATIO DB=
<NORMALIZED MEAN SQUARED ERROR=
<NEAR ECHO LOSS=
<FAR ECHO LOSS=
<FAR ECHO DELAY=
<ROUND TRIP DELAY=
<V.34 INFO bit map =
<TX MOD=
, TX SYMBOL RATE=
, TX CARRIER FREQ=
<RX MOD=
, RX SYMBOL RATE=
, RX CARRIER FREQ=
<TX FIRST DATA RATE=
, RX FIRST DATA RATE=
<CARRIER LOSS=
, RATE RENEG=
<RETRAINS REQ=
, RETRAINS DET=
<TX FINAL RATE=
, RX FINAL RATE=
<PROTOCOL NEGOTIATION=
<EC FRAME SIZE=
<EC LINK TIMEOUTS=
<EC LINK NAKS=
<COMPRESSION NEGOTIATION=
V42BIS
<COMPRESSION DICTIONARY SIZE=
<TX FLOW CONTROL=
<RX FLOW CONTROL=
<TX CHARS SENT FROM DTE=
<RX CHARS SENT TO DTE=
<TX CHARS LOST=
<RX CHARS LOST=
<TX FRAME COUNT=
<RX FRAME COUNT=
<TX FRAME ERROR COUNT=
<RX FRAME ERROR COUNT=
<CALL WAITING EVENT COUNT=
<LSD Vdd=
, Power Bits=
<V8BIS FLEX VERSION=
, V8BIS DSP VERSION=
<RATE RENEG REQ=
, RATE RENEG DET=
<HIGH PASS FILTER ENABLED=
<ROBBED BIT PATTERN=
<DIGITAL PAD DETECTED=
, DIGITAL LOSS ESTIMATE=
<Cnt1=
, Det1=
, Res1=
<EQM=
, TRAINING EQM SUM=
<NEGOTIATION TIME=
<CALL SETUP RESULT=No previous call>
<TERMINATION CAUSE=No previous call>
AT PARSER faking remote  hook %d, 0x%x
AT PARSER faking remote On hook
AT PARSER faking remote Off hook
AT PARSER  remote off hook fake returned %d
@@ Test session ID: %d @@
NV92CW
RHOOK
SESSIONID
<TERMINATION CAUSE=
Undefined
No previous call
Call in progress
Inactivity timer expired
DTR drop
Blacklisted
Delayed
S7 Expired
No Dial Tone
Voice
Carrier lost
Training failed
No common mode
Retrain failed
GSTN cleardown
Fax detected
Key abort
Frame reject
No error control established
Protocal violation
n400 exceeded
Negotiation failed
Disconnect frame
Lost sync
Call Waiting Detected
Extension Offhook
DAA Fault Signal Detected
Modem On Hold Timeout Expired
Pulse Dialing Latencies Detected
BUSY Tone Detected
T35CODE WORD T35Code = [0x%x] (%d) T.35 Region Code
NAME char cInter = [%s] Region Name
INTCODE char cIntCode = [%s] Region International Access Code
TXLEVEL BYTE TxDataLevelMin     = [0x%x] (%d)
TXLEVEL BYTE TxDataLevelMax     = [0x%x] (%d)
TXLEVEL BYTE TxDataLevelDefault = [0x%x] (%d)
TXLEVEL BYTE TxFaxLevelMin      = [0x%x] (%d)
TXLEVEL BYTE TxFaxLevelMax      = [0x%x] (%d)
TXLEVEL BYTE TxFaxLevelDefault  = [0x%x] (%d)
TXLEVEL BYTE TxVoiceLevelMin    = [0x%x] (%d)
TXLEVEL BYTE TxVoiceLevelMax    = [0x%x] (%d)
TXLEVEL BYTE TxVoiceLevelDefault= [0x%x] (%d)
TXLEVEL char TxLvlAdj           = [0x%x] (%d)
TXLEVEL BYTE LowDialLevel       = [0x%x] (%d)
TXLEVEL BYTE HighDialLevel      = [0x%x] (%d)
RELAYS WORD Relays[%d] = [0x%x] (%d)
PULSE BYTE PulseDialMode    = [0x%x] (%d)
PULSE BYTE PulseMapAmperP0  = [0x%x] (%d)
PULSE BYTE PulseMapAmperP1  = [0x%x] (%d)
PULSE BYTE PulseMapAmperP2  = [0x%x] (%d)
PULSE BYTE PulseMapAmperP3  = [0x%x] (%d)
PULSE char PulseMakeOffset  = [0x%x] (%d)
PULSE char PulseBreakOffset = [0x%x] (%d)
PULSE BYTE PulseSetupTime   = [0x%x] (%d)
PULSE BYTE PulseClearTime   = [0x%x] (%d)
PULSE WORD PulseInterd      = [0x%x] (%d)
RING BYTE RingMaxFrequency       = [0x%x] (%d)
RING BYTE RingMinFrequency       = [0x%x] (%d)
RING WORD RingStable             = [0x%x] (%d)
RING WORD MinTimeBeforeAnswering = [0x%x] (%d)
RING WORD MinDelayBtwnRings      = [0x%x] (%d)
RING WORD MaxDelayBtwnRings      = [0x%x] (%d)
SREG BYTE SregLimits SREG[%d] lo [%d] hi [%d] default [%d]
DTMF WORD DTMFOnTime     = [0x%x] (%d) mSec
DTMF WORD DTMFInterdigit = [0x%x] (%d) mSec
FILTER WORD Primary FilterType       = [0x%x] (%d)
FILTER WORD Primary Biquad1[0]       = [0x%x] (%d)
FILTER WORD Primary Biquad1[1]       = [0x%x] (%d)
FILTER WORD Primary Biquad1[2]       = [0x%x] (%d)
FILTER WORD Primary Biquad1[3]       = [0x%x] (%d)
FILTER WORD Primary Biquad1[4]       = [0x%x] (%d)
FILTER WORD Primary Biquad2[0]       = [0x%x] (%d)
FILTER WORD Primary Biquad2[1]       = [0x%x] (%d)
FILTER WORD Primary Biquad2[2]       = [0x%x] (%d)
FILTER WORD Primary Biquad2[3]       = [0x%x] (%d)
FILTER WORD Primary Biquad2[4]       = [0x%x] (%d)
FILTER WORD Primary LpFBK            = [0x%x] (%d)
FILTER WORD Primary LpGain           = [0x%x] (%d)
FILTER WORD Primary ThreshU          = [0x%x] (%d)
FILTER WORD Primary ThreshL          = [0x%x] (%d)
FILTER WORD Primary Biquad1_PreF[0]  = [0x%x] (%d)
FILTER WORD Primary Biquad1_PreF[1]  = [0x%x] (%d)
FILTER WORD Primary Biquad1_PreF[2]  = [0x%x] (%d)
FILTER WORD Primary Biquad1_PreF[3]  = [0x%x] (%d)
FILTER WORD Primary Biquad1_PreF[4]  = [0x%x] (%d)
FILTER WORD Primary Biquad2_PreF[0]  = [0x%x] (%d)
FILTER WORD Primary Biquad2_PreF[1]  = [0x%x] (%d)
FILTER WORD Primary Biquad2_PreF[2]  = [0x%x] (%d)
FILTER WORD Primary Biquad2_PreF[3]  = [0x%x] (%d)
FILTER WORD Primary Biquad2_PreF[4]  = [0x%x] (%d)
FILTER BOOL Primary SqDisState       = [0x%x] (%d)
FILTER WORD Alternate FilterType       = [0x%x] (%d)
FILTER WORD Alternate Biquad1[0]       = [0x%x] (%d)
FILTER WORD Alternate Biquad1[1]       = [0x%x] (%d)
FILTER WORD Alternate Biquad1[2]       = [0x%x] (%d)
FILTER WORD Alternate Biquad1[3]       = [0x%x] (%d)
FILTER WORD Alternate Biquad1[4]       = [0x%x] (%d)
FILTER WORD Alternate Biquad2[0]       = [0x%x] (%d)
FILTER WORD Alternate Biquad2[1]       = [0x%x] (%d)
FILTER WORD Alternate Biquad2[2]       = [0x%x] (%d)
FILTER WORD Alternate Biquad2[3]       = [0x%x] (%d)
FILTER WORD Alternate Biquad2[4]       = [0x%x] (%d)
FILTER WORD Alternate LpFBK            = [0x%x] (%d)
FILTER WORD Alternate LpGain           = [0x%x] (%d)
FILTER WORD Alternate ThreshU          = [0x%x] (%d)
FILTER WORD Alternate ThreshL          = [0x%x] (%d)
FILTER WORD Alternate Biquad1_PreF[0]  = [0x%x] (%d)
FILTER WORD Alternate Biquad1_PreF[1]  = [0x%x] (%d)
FILTER WORD Alternate Biquad1_PreF[2]  = [0x%x] (%d)
FILTER WORD Alternate Biquad1_PreF[3]  = [0x%x] (%d)
FILTER WORD Alternate Biquad1_PreF[4]  = [0x%x] (%d)
FILTER WORD Alternate Biquad2_PreF[0]  = [0x%x] (%d)
FILTER WORD Alternate Biquad2_PreF[1]  = [0x%x] (%d)
FILTER WORD Alternate Biquad2_PreF[2]  = [0x%x] (%d)
FILTER WORD Alternate Biquad2_PreF[3]  = [0x%x] (%d)
FILTER WORD Alternate Biquad2_PreF[4]  = [0x%x] (%d)
FILTER BOOL Alternate SqDisState       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress FilterType       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1[0]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1[1]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1[2]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1[3]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1[4]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2[0]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2[1]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2[2]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2[3]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2[4]       = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress LpFBK            = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress LpGain           = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress ThreshU          = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress ThreshL          = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1_PreF[0]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1_PreF[1]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1_PreF[2]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1_PreF[3]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad1_PreF[4]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2_PreF[0]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2_PreF[1]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2_PreF[2]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2_PreF[3]  = [0x%x] (%d)
FILTER WORD VoiceToneACallProgress Biquad2_PreF[4]  = [0x%x] (%d)
FILTER BOOL VoiceToneACallProgress SqDisState       = [0x%x] (%d)
THRESHOLD WORD DialThresh    = [0x%x] (%d)
THRESHOLD WORD AltDialThresh = [0x%x] (%d)
THRESHOLD WORD WDialThresh   = [0x%x] (%d)
THRESHOLD WORD AltWDialThresh= [0x%x] (%d)
THRESHOLD WORD ProgThresh    = [0x%x] (%d)
THRESHOLD WORD AltProgThresh = [0x%x] (%d)
RLSD DWORD XrthOffset = [0x%x] (%d)
TONE WORD DialStable     = [0x%x] (%d)
TONE WORD WDialStable    = [0x%x] (%d)
TONE WORD AnswerStable   = [0x%x] (%d)
TONE WORD ProgressStable = [0x%x] (%d)
TIMING WORD InterCallDelay1 = [0x%x] (%d)
TIMING WORD InterCallDelay2 = [0x%x] (%d)
TIMING WORD InterCallDelay3 = [0x%x] (%d)
TIMING WORD BillingDelay    = [0x%x] (%d)
CADENCE BYTE ToneCadence_NumberOfPhases   = [0x%x] (%d)
CADENCE DWORD DialtoneParams lMin[%d] = [0x%x] (%d)
CADENCE DWORD DialtoneParams lMax[%d] = [0x%x] (%d)
CADENCE DWORD DialtoneParams lNumIntervalsNeeded = [0x%x] (%d)
CADENCE DWORD BusyParams lMin[%d] = [0x%x] (%d)
CADENCE DWORD BusyParams lMax[%d] = [0x%x] (%d)
CADENCE DWORD BusyParams lNumIntervalsNeeded = [0x%x] (%d)
CADENCE DWORD RingbackParams lMin[%d] = [0x%x] (%d)
CADENCE DWORD RingbackParams lMax[%d] = [0x%x] (%d)
CADENCE DWORD RingbackParams lNumIntervalsNeeded = [0x%x] (%d)
CADENCE DWORD CongestionParams lMin[%d] = [0x%x] (%d)
CADENCE DWORD CongestionParams lMax[%d] = [0x%x] (%d)
CADENCE DWORD CongestionParams lNumIntervalsNeeded = [0x%x] (%d)
BLACKLISTING BYTE BlstAction_NoDialTone  = [0x%x] (%d)
BLACKLISTING BYTE BlstAction_KeyAbort    = [0x%x] (%d)
BLACKLISTING BYTE BlstAction_Busy        = [0x%x] (%d)
BLACKLISTING BYTE BlstAction_NoConnection= [0x%x] (%d)
BLACKLISTING BYTE BlstAction_NoAnswer    = [0x%x] (%d)
BLACKLISTING BYTE BlstAction_VoiceAnswer = [0x%x] (%d)
BLACKLISTING WORD BlackListingDelay1     = [0x%x] (%d)
BLACKLISTING WORD BlackListingDelay2     = [0x%x] (%d)
BLACKLISTING WORD BlackListingDelay3     = [0x%x] (%d)
BLACKLISTING WORD BlackListingDelay4     = [0x%x] (%d)
BLACKLISTING WORD BlackListingCount1     = [0x%x] (%d)
BLACKLISTING WORD BlackListingCount2     = [0x%x] (%d)
BLACKLISTING FLAGS:
fPermanantBlst
 = [%d]
fResetOnSuccess
 = [%d]
fDistictFailures = [%d]
fFlag0Spare3
 = [%d]
fFlag0Spare4
 = [%d]
fFlag0Spare5
 = [%d]
fFlag0Spare6
 = [%d]
fFlag0Spare7
 = [%d]
CALLERID BYTE Cid_TYPE= [0x%x] (%d)
FLAGS:
fAltDialToneFilter     = [%d]
fAltCallProgressFilter = [%d]
fAltWToneFilter        = [%d]
fAltWAfterIntCodeFilter= [%d]
fFlag0Spare4           = [%d]
fFlag0Spare5           = [%d]
fFlag0Spare6           = [%d]
fFlag0Spare7           = [%d]
fEnforceDialTone       = [%d]
fEnforceCallingToneorCI= [%d]
fEnforceGuardTone      = [%d]
fEnforceBusyTone       = [%d]
fUseS7whenW            = [%d]
fHangupOnCallWaiting   = [%d]
fFlag1Spare6           = [%d]
fFlag1Spare7           = [%d]
fDisableATH1           = [%d]
fDisablePulseAfterTone = [%d]
fAllowPulseDialing     = [%d]
fAllowDTMFabcd         = [%d]
fEnableBlacklisting    = [%d]
fLongToneIsBusy        = [%d]
fSelectUlaw            = [%d]
fNoBellMode            = [%d]
fSwissComma            = [%d]
fDtmfCompensation      = [%d]
fKoreanRing            = [%d]
fPowerCrossDetAth1     = [%d]
fPowerCrossDetOffhook  = [%d]
fFlag3Spare5           = [%d]
fFlag3Spare6           = [%d]
fFlag3Spare7           = [%d]
SPEEDADJUST:
BYTE cV90RxAgressSpeedIndex = [0x%02x] (%d)
BYTE cV90TxRateSpeedIndex   = [0x%02x] (%d)
BYTE cV34RxAgressSpeedIndex = [0x%02x] (%d)
BYTE cV34TxRateSpeedIndex   = [0x%02x] (%d)
BYTE cPCMUpstreamRate       = [0x%02x] (%d)
Termination cause - Fax Inactive TimeOut ( Calling DoHangup) 
FCLASS
(0,1)
ChangeMohSupportRtn:: fail - Not V92/CW.ValidFlag == 0 
ChangeMohSupportRtn:: fail - BO_MOH
ChangeQCSupportRtn:: fail - BO_QC
ChangeUpStreamSupportRtn:: fail - BO_UpStream
+PMHR: 
SmsModeRtn:: SMS is %d
SmsModeRtn:: SMS is disabled in BondOption - return FALSE
SmsAnsRtn:: User input is %d 
SmsTxMsgRtn:: SMS Tx msg is %d
Carol 1 2 3
Liat 4, 5, 6!
SmsMsg[0] is %c
SmsMsg[1] is %c
Behazlacha - !!.
This is a Tx test
Unimplemented Test
No PnP ID specified
Unexpected PnP ID
Less interrupts than expected
More interrupts than expected
No GPIO pins to test
Unexpected GPIO value
Loop Current Test Failed
No dial tone detected
Dial tone detected after dialing
No phone number entered
Near echo is too high
Near echo is too low
Background noise is too high
DC value is too low
DC value is too high
No rings detected
Insufficient number of rings
No connection established
Crystal frequency deviation is too high
ABORTED
<FAILURE REASON: 
<DIAL STRING: 
<TEST: CONNECTION>
<PARAMETERS: 
<REGION: 
<TEST: DIALTONE>
<TEST: DMA AND INTERRUPT>
<NUMBER OF INTERUPTS: 
<TEST: GPIO>
<GPIO VALUE: 
<TEST: RING DETECTION>
<RING(S): 
<TEST: PNP ID>
<PARAMETERS: %s, %X, %X, %X, %X>
FUNC_02
<BACKGROUND NOISE: -
 dBm>
In BGTest_DialComplete routine
In BGTest_DialCompleteAbort routine
In the BGTest_DialToneDetected routine
In the BGTest_DialToneAbort routine
<TEST: BACKGROUND NOISE>
<TEST: LOOP CURRENT>
Pipe command LOOP CURRENT entered
Loop Current event occured
<LOOP CURRENT: 
In PipeLoopCurrentAbort routine
<TEST: DIAL>
In the PipeDial_DialToneDetected routine
In the PipeDial_DialToneAbort routine
In PipeDial_DialComplete routine
In PipeDial_DialCompleteAbort routine
Dial Test Failed: Dialing did not complete before timeout
In PipeDial_DetectSilence routine
In PipeDial_DetectSilence_CheckDialTone routine
In PipeDial_DetectSilence_DialToneDetected routine
In PipeDial_DetectSilence_Abort routine
In PipeDial_DetectSilence_Result routine and result=%d
In PipeDial_Delay routine
In PipeNe_Completed routine
DPAL_INFO_RX_SIGNAL_POWER= %d dbm
<NEAR ECHO: -
In PipeNe_DialComplete routine
In PipeNe_DialCompleteAbort routine
In the PipeNe_DialToneDetected routine
In the PipeNe_DialToneAbort routine
<TEST: NEAR ECHO>
TestNearEcho skip dialing...
CONNECT
CRYSTAL
PNPID
(254)
BlstTableUpdateTimeStamp time=%d
Method2:Failure[type=%d].nFailTime[tries=%d]=%d
Method2: first=%d, last=%d, delay=%d
Method2: nBlstDelay=%d
 xx  -  
 No.    Phone Number
----   --------------
 No.    Phone Number     Delay
----   --------------   -------
     - 
NO BLIST for  %d
FirstFailed time= %d
Tries = %d, failed time=%d
CtyFileName
Tone OFF Time = %d ms
Tone ON  Time = %d ms
Index wrapped,i=%d,index=%d
index wrapped, Current Counter=%d
Tone Validated, counter=%d,i=%d
InitDetectContinuous i=%d,time=%d,min=%d,max=%d
DLGSignalDetected - hangup call!
in DC_Calibration
No LineCurrent times: %d
No LineCurrent: %x
over LineCurrent times: %d
over LineCurrent: %x
Offhook, setting power cross detection
GoOffHook - start monitoring DLG detection
start DC_Calibration
EndFlash - start monitoring DLG detection
Onhook, clear power cross detection
Free DC_Calibration
DIALTONE detected
ValidateLastDigit - Checking last digit information 0x%x
                    Comparing with registry information 0x%x
ValidateLastDigit - ABORT due to Make latency violation
ValidateLastDigit - ABORT due to Break latency violation
ValidateLastDigit - ABORT due to InterDigit latency violation
ValidateLastDigit - NO latency violation
We're about to wake up DialCompleteRoutine
DialStringInPointer :: Calling SMS routine
CallProgressCadTONEA started.
billingDealy set to %d
DelayedSetSpeaker
GoToConnectedState: hangup: CurrRxEff: %d, MinRx: %d, MaxRx: %d, CurrTx: %d, MinTx: %d, MaxTx, %d
************** CONNECTED **********
Detected BUSY tone
Termination cause - BUSY
InitRingDetect:: after MOH - Disconnect - set a timer for 10sec.
DROF = 
DRON = 
DetectedRing - skipping first ring
RingOn=%d,RingCycle=%d,SoftRing=%d
RINGBACK TONE detected
UnrestrictDialRtn - Not restricted already, returning immediatly
UnrestrictDialRtn - Good Serial opening HW restriction
UnrestrictDialRtn - BAD PASS (%x) - HW restricted dial not canceled
UnrestrictDialRtn - Good Pass opening light restriction
UnrestrictDialRtn - Failed - light restricted dial not canceled (Pass=%x)
RestrictedDialGetSerial - Not restricted , returning immediatly
RestrictedDialGetSerial - Displaying %s
StartCED
StopCED
+F34: 
StartActiveVoice + VTR
VOICE DIALTONE detected
VOICE BUSYTONE detected
VOICE RINGBACK TONE detected
DTMFGoAway:: Setting mask DP_ENABLE_DATA_RX
SetupCidRx - PSYS->bNonV92MohInUse: %d, type2=%d
SetupCidRx:: CID_DTMF_TYPE 
SetupCidRx CLID type 1
SetupCidRx cidtimer =%d
setting 3000 for EscapeWait
EscapeWait threadid=%d
Caller ID - EscapeWait
Caller ID - EscapeWait - Calling 
PutRemoteModemOnHold
EndCid
EndCid Num of Bytes: %d
CLID buffer is empty !!!!. Nothing to report
-=-=-=-=-=-= noCLIDReport -=-=-=-=-=-=
UsFormatClid: Type=%d, Chksum=%d, Frame=%d, Len=%d, CidSetting=%d
UsFormatClid: CidSetting == 0, not reporting
DATE = 
TIME = 
NMBR = 
NAME = 
TYPE = 
MESG = 
UsFormatClid: CID string=%s
MESG =  
UsFormatClid: Invalid CidSetting %d
-=-=-=-=-=-= usCLIDReport -=-=-=-=-=-=
JapanFormatClid: CidSetting == 0, not reporting
DATE = 9999
TIME = 9999
NMBR =  
NAME =  
JapanFormatClid: Invalid CidSetting %d
-=-=-=-=-=-= JapanesseCLIDReport -=-=-=-=-=-=
FrenchFormatClid: Type=%d, Chksum=%d, Frame=%d, Len=%d
FrenchFormatClid: CidSetting == 0, not reporting
DATE =  
TIME =  
ABSR = OUT-OF-AREA CALL
ABSR = PRIVATE CALL
TYPE =  
FrenchFormatClid: Invalid CidSetting %d
-=-=-=-=-=-= FrenchCLIDReport -=-=-=-=-=-=
-=-=-=-=-=-= Report CLID -=-=-=-=-=-=
Calling timer to reset Pre Ring CID detection
-=-=-=-=-=-= End of Report CLID -=-=-=-=-=-=
-=-=-=-=-=-= GotCidDTMF DPAL_CB_STATUS_DTMF_OFF stop looking for DTMF-=-=-=-=-=-=
-=-=-=-=-=-= GotCidDTMF %c -=-=-=-=-=-=
-=-=-=-=-=-= EndCidDTMF -=-=-=-=-=-=
-=-=-=-=-=-= No Cid -=-=-=-=-=-=
-=-=-=-=-=-= Cid = %s -=-=-=-=-=-=
Setting Pre Ring CLID
Pre Ring CLID Not supported: Inf: %d, VCID: %d
-=-=-=-=-=-= CSetupPreRingCLIDIndication %d -=-=-=-=-=-=
VCIDRtn - Calling SetupPreRingCLIDIndication with TRUE
UseCurrentRegion
00-FF
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\Telephony\Locations
Location
Country
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\Telephony
CurrentID
Locations
NextID
NumEntries
\Registry\User\Control Panel
Locale
International
\Registry\Machine\System\CurrentControlSet\Control
TranslateToCaribbean
Digital Line Detected
MOH timeout expired
Termination cause - %s, code=0x%x
V8B_Status is 0x%x
Max TxRate: 31200 for this call
LONG PHASE 2 bit is set. Configuring QC to not use profile.
wdpsetdata:: PSYS->eFastConnMode = %d
K56 %sNegotiated By V8Bis
************** AUTO/FORCED MODE **********
Stop adaptive offhook algorithm
Open V90 fast modulation (after v8b)
Open V34 modulation in V92 mode (after v8b)
bV42SkipToXID = %d
Starting AUTO MODE training
Starting FORCED MODE training
GotV8BisTone
QC:: with profile
QC:: without profile
wdpV8bisSendTone:: set defaultDataTxLevel to %d
Calling dpBeginClearDown
cbRemoteRetrainRearm - set DSP_RETRAIN to FALSE
cbRetrainRenegRearm - set DSP_RETRAIN to FALSE
cbRemoteRetrain - set DSP_RETRAIN to TRUE
cbRemoteRenegotiateRearm - set DSP_RETRAIN to FALSE
cbRemoteRenegotiate - set DSP_RETRAIN to TRUE
>>>beginLmon DSP_RETRAIN is TRUE
>>>beginLmon DSP_RETRAIN is FALSE
wdpSetSpeakerPhone Stop adaptive offhook algorithm
wdpFlash
OnHook
OffHook
wdpFlash:: %s
dtePutMsg: %s
dtePutNumw: %d 
dtePutDwordHex: 0x%x
DELAYED
DELAYED 
+FCERROR
<CONNECTION: 
+MRR: 
Connection time is %d ms
+ILRR: 
************** SpeedFromIndex found at %d for %d rate %d
***** $MC DteBreakSignal with value: (%d), Break Enabled: (%d) *******
LAMP detected, setspeaker
>>>>V42,total=%d,throughput=%dcps, nodata=%d
<<<v42,total=%d,throughput=%dcps, oR=%d
N400 exceeded, request reneg
NO EC, setspeaker
ERROR in EC_WriteComm: lost %d bytes
EC_SetDpMode: oldComMode = %d, newComMode = %d
EC_DecodeV42DC: copy command
PDCProtocolFile
GSMProtocolFile
ExtProtoCallback - %d
epLib.c RING DETECTED %d
DELAYED: 
\Device\
DPAL_CB_EVENT_DIAL_DIGIT data=%d
Processing DPAL_CB_BACKGROUND_NOISE event %d
after V8:: bV42SkipToXID = %d
after V8:: choose DP_V8_MOD_MASK_V34_FAST
Event V8 Chosen DataPump - %s
** PSYS->bV42SkipToXID = %d **
** CHOSEN_DATA_PUMP:: SetupComMode to  HDLC_Mode **
** CHOSEN_DATA_PUMP:: SetupComMode to  ASYNC_V14_Mode **
- Activating V8 Chosen datapump
Event V8 End %s %s
HAL EventCallBack - HANG UP
************** DPAL_CB_STATUS_CALL_WAITING_RESPONSE polarity = %d*********
** AnsPcm Timeout:: PSYS->V8ModulationMask = 0x%x **
** AnsPcm Timeout:: V8Parms.V8ModulationMask = 0x%x **
** Winac Got DPAL_CB_EVENT_OFF_HOOK_DONE 
** Winac Got DPAL_CB_EVENT_OFF_HOOK_DONE - Starting DC CALC
** Winac Got DPAL_CB_EVENT_EXTENTION_HOOK_STATE - with value %d
** Winac Got DPAL_CB_LOOP_CURRENT - with value %d
HALWinacCallback - Events Queue Is Full (no room for event %d)
** GoToCONNECTED:: RENEG detected DSP_RETRAIN=TRUE
** GoToCONNECTED:: RENEG not found 
MOH/QC/US are diabled -> disable V92
0,1,1.0,8,80
0,1,8,80
0,1,8
0,1,80
Restricted Dialing - Shuffling Relays
19,"M1S1",08841900,0C841800,0B84386D
18,"M1S",08841900,0C841800,0B84386D
17,"MS1",08841900,0C841800,0B84386D
16,"MS", 9A811A18,9A811A18,9A811A18
15,"HT",08841900,0C841800,0B84386D
14,"H",10000000,10000000,10000000
13,"M1S1T",08841900,0C841800,0B84386D
12,"M1ST",08841900,0C841800,0B84386D
11,"M1",10000000,10000000,10000000
10,"MS1T",08841900,0C841800,0B84386D
9,"S1T",08841900,0C841800,0B84386D
8,"S1",10000000,10000000,10000000
7,"MST",08841900,0C841800,0B84386D
6,"M",10000000,10000000,10000000
5,"ST",08841900,0C841800,0B84386D
4,"S",10000000,10000000,10000000
3,"LT",00000000,00000000,00000000
2,"L",18800100,1C800000,10800000
1,"T",08841900,0C841800,0B84386D
0,"",10000000,00000000,00000000
(200-3000),(0,200-3000),(0-255)
StartLineMonitor 
Reneg completed, signal v42
Disconnect frame received, disable AS tone detection
DPAL_CONTROL_UPDATE_BLER - Total EC Rx Frames = %d, Total errors = %d
++ DoReneg, modulation already knows that there is a problem ++
++ DoReneg GotXID = TRUE -- do nothing
++ DoReneg GotXID = FALSE -- force reneg
++ DoReneg GotXID = FALSE -- force retrain
Winac/Controller
Winac
Winac/Parser
Winac/V92
Winac/V42
Winac/RestrictedDial
Winac/WInacIF
Winac/WInacIF/R3
Winac/RegionParams
Winac/Cadence
ModemColdStart - ReadSmartCountryParams flag = %d
ModemColdStart - wInitOEMFlags flag = %d, lIscadmus = %d
WINAC_EC_CONNECTED_RESOLUTION = %d
after wInitCountryParameters LowDialLevel=[0x%x] (%d) HighDialLevel=[0x%x] (%d)
FALSE
ModemColdStart - PSYS->bV92Supported = %s
PSYS->wDAAType = %d
SI3054_DAA = %d SI3055_DAA = %d
SupportedCpuFreqChange AC (0x%x) DC (0x%x)
Current country is %s 
UseCurrentRegion is 0x%x 
** StartIdle **
** StartIdle done
** StartConnectedEC:: ComMode should stay HDLC **
** StartConnectedEC:: SetupComMode to  ASYNC_V14_Mode **
D3 in progress, skip timing request
----- OEMFlags 0 -----
OEMFlags->fDigitalSpeakerForDataAndFax = %d
OEMFlags->fAnalogSpeaker = %d
OEMFlags->fDataFaxRemoteTAM = %d
OEMFlags->fDataFaxVoiceView = %d
OEMFlags->fLCSPresent = %d
OEMFlags->f3VoltIA = %d
OEMFlags->fRemHangupPresent = %d
OEMFlags->fSpkMuteHWPresent = %d
----- OEMFlags 1 -----
OEMFlags->fReadCountryFromSwitch = %d
OEMFlags->fLegacy = %d
OEMFlags->fPME_Enable = %d
OEMFlags->fPME_Without_INTA = %d
OEMFlags->fCountryNoneSelect = %d
OEMFlags->fSpkMuteHWPolarity = %d
OEMFlags->fLocalSpkBoostTAM = %d
OEMFlags->fMicSpkControl = %d
----- OEMFlags 2 -----
OEMFlags->fNEC_ACPI = %d
OEMFlags->fDisForceLAPMWhenNoV8bis = %d
OEMFlags->fDosSupportDisabled = %d
OEMFlags->fDosCheckBoxSupport = %d
OEMFlags->fCIDHandsetMode = %d
OEMFlags->fExtOffHookHWPresent = %d
OEMFlags->fLAN_Modem_Support = %d
OEMFlags->fPortCloseConnected = %d
----- OEMFlags 3 -----
OEMFlags->fFullGPIO = %d
OEMFlags->fUseINPUT1ForDLG = %d
OEMFlags->fIsCadmus = %d
OEMFlags->fV42ThrottleDisable = %d
OEMFlags->fV92WithoutProfile = %d
OEMFlags->fV23AnswerDis = %d
OEMFlags->fDialSkipS6 = %d
OEMFlags->fFxCallCadFlag = %d
----- OEMFlags 4 -----
OEMFlags->fEnableSuspendWhenConnectedOn2K = %d
OEMFlags->fDisableSuspendWhenConnectedOnXP = %d
OEMFlags->fSkipReportingFirstRing = %d
----- OEMFlags end -----
End of Test
Termination cause - Percentt Key abort( Calling DoHangup) 
No Blacklist
ATH1 enabled
ParamOne = %d 
ParamTwo = %d 
Test commands
-------------
DTMF: %TT0x (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, *, #, A , B, C, D)
FSK:  %TT1x (V21Ch1, V21Ch2, V23Ch1, V23Ch2, Bell103Ch1, Bell103Ch2)
QAM:  %TT2x (V22Org, V22Ans, Bell212Org, Bell212Ans, V22BisOrg,
             V22BisAns, V32@4800, V32Bis@7200, V32@9600, V.32Bis@12000,
             V32Bis@14400)
MISC: %TT3x (Silence, 2100Hz, Dummy, 1300Hz, 1100Hz)
FAX:  %TT4x (Dummy, V27@2400, V27@4800, V29@7200, V29@9600, V17@7200LT,
             V17@7200ST, V17@9600LT,V17@9600ST, V17@12000LT, V17@12000ST,
             V17@14400LT, V17@14400ST)
V.34: %TT5xyz
           x(2400, 4800, 7200, 9600, 12000, 14400, 16800, 19200, 21600,
             24000, 26400, 28800, 31200, 33600)
           y(2400, 2743, 2800, 3000, 3200, 3429)
           z(Upper Band Filter: 0...A)
V.92: %TT6x
           x(Bit rate: 00(=24000)...12(=48000))
TEST: %TT9xy
           x(Recieve,Transmit)
           y(Dummy, BoardTest:Phase1, BoardTest:Phase2, BoardTest:SelfTest)
             Dummy, Spikes, Triangles, 80Hz)
Percentt Active, disable Adaptive Offhook 
** WAIT_FOR_1ST_55 ** 0x%x
** WAIT_FOR_MARK ** 0x%x
** GET_CARRIER_SIGNAL ** 0x%x
** GET_MSG_TYPE ** 0x%x
** GET_LENGTH_BYTE ** 0x%x
** GET_MSG_BODY ** 0x%x
** GET_CHECKSUM ** 0x%x
** REPORT_CID ** 
** WAIT FOR DLE ** 0x%x
** WAIT FOR SOH ** 0x%x
** GET_MSG_BODY ** CRC=0x%x
** REPORT_CID **
** CID CALLBACK WITH INVALID STATE %d **
ECPimDP - FROM_DP_PIM returns HOSTTOHAL_BUFFER_FULL
Termination cause - V80 eot( Calling DoHangup) 
HALTOHOST_BAD_CRC_EOF/HALTOHOST_ABORT_EOF/HALTOHOST_RX_OVERRUN
HALTOHOST_GOOD_EOF - bBadFrame
XZBBC=
ASTB=
Updating TerminationCause to: %d(no NoPreviousCallorCallInProgress
Updating TerminationCause to: %d
Updating callSetupRes to: %d
RShellNt_CloseModem - PendingWakeIrp was canceled
RShellNt_CloseModem - PendingWakeIrp was NOT canceled
MsCurrentCountry
Try to release third party audio streams from within the context it was allocated
Third party audio streams are released
RX Throughput is %d bps
NVRamHead
NVRamBody
NVRamZHead
NVRamZBody
FILTER
AT+MS
FLAGS
TXLEVEL BYTE SILABDTMF_COMP_LEVEL  LowDialLevel   = [0 0x%x] [1 0x%x]  [2 0x%x]  [3 0x%x] 
TXLEVEL BYTE SILABDTMF_COMP_LEVEL  HighDialLevel   = [0 0x%x] [1 0x%x]  [2 0x%x]  [3 0x%x] 
DTMF_COMP_LEVEL
SREGS
V25TER
\oem\ati
S1 -> %s
S2 -> %s
S3 -> %s
S4 -> %s
SW -> %s
DW -> %s
SPKR_MUTE_DELAY
PlaybackDestination
EnableKmixer
AUDIO_AEC
TONEPARAMS
CONSTTONEPARAMS
AT_MISC_DEF
MISC_VOICE_PARMS
VOLUME_AMPLIFICATION_PARMS
\Region
Current
\Region\
 in REGISTRY_ReadNewRegion LowDialLevel=[0x%x] (%d) HighDialLevel=[0x%x] (%d)
T35CODE
REFERENCE
TRUE == RetReference LowDialLevel=[0x%x] (%d) HighDialLevel=[0x%x] (%d)
TRUE == RetT35Code LowDialLevel=[0x%x] (%d) HighDialLevel=[0x%x] (%d)
\oem\ATPLUSID
\Blst
NUMBER
FAILURE
COLLBLST
CADENCE
PROPERTIES
\ATPUD
ATPUD
CALLWAITING_PARMS
RshellNt_SetD3
RshellNt_SetD3 done!
RshellNt_SetD0
DAAType
SmartDAAParams
SmartDAAParamsK3
SmartDAAParamsHal
DLG_PARAMS
VIA_PARAMS
PLL_DELAY
JCID_RING
HandSet_PARAMS
CONTROLLER_THREAD_TIMER_RESOLUTION_EC_CONNECTED
DC_CALC_PARAMS
HwData
AT_MISC_CELL_DEF
RegionList
QC_PARAMS_01
QC_CONF
FAST_CONN_PARAMSX
QC_PARAMS_01
COPY_CTY
\Registry\Machine\Software
%s00%d
%s0%d
PDCR4032
NVRAM_ReadRestrictedParams reading from new location %s, bytes %d
NVRAM_ReadRestrictedParams - Reading new returned %d
NVRAM_ReadRestrictedParams - Reading from old key
DspInfo\FILTERS
NVRAM_ReadRestrictedParams reading from old location %s, bytes %d
NVRAM_ReadRestrictedParams - Reading new key returned %d
NVRAM_ReadRestrictedParams - Writing to new key, value: %s, size: %d returned %d
NVRAM_ReadRestrictedParams - Writing to new old, value: %s, size: %d returned %d
NVRAM_ReadRestrictedParams - New key is corrupted, deleting and leaving old key
\DspInfo\FILTERS
\Registry\Machine\Software\PDCR4032
CPU_FREQ_CHANGE
CPU_FREQ_CHANGE_REVB
Previous
Region
OFF_HOOK_CONVERGENCE_DURATION
in REGISTRY_GetRegionParams IsBaseProfile = %x
\Profile\
INTCODE
SMART_TXLEVEL
d=%x LowDialLevel= [0x%x] (%d) HighDialLevel= [0x%x] (%d)
SILABRELAYS
Relays[1] = %x PSYS->wDAAType = %d
SMART_RELAYS
TXLEVEL
RELAYS
PULSE
SMART_DTMF
THRESHOLD
TIMING
BLACKLISTING
CALLERID
RShellNt NO CALLER ID - Setting format list to only 0
RShellNt CALLER ID SUPPORTED - Setting format list to all options 0,1,2
CALLERID2
SPEEDADJUST
PULSE_ABORT
CALL_WAITING
V92_CONTROL
V92_OGC
a LowDialLevel=[0x%x] (%d) HighDialLevel=[0x%x] (%d)
b=%x c=%x d=%x e=%x f=%x g=%x h=%x i=%x j=%x k=%x
l=%x m=%x n=%x o=%x p=%x q=%x r=%x s=%x t=%x u=%x
v=%x w=%x x=%x y=%x
02163595229#63595229
LAL - Timer_Terminate_Test
LAL - Terminate_Test
LAL - Inside AT%T1 or AT%T8
MS=V22
MS=V21
MS=V32
MS=V34
MS=V56
MS=V90
MS=V92
LAL - Terminate_Test, returning modulation to %s
%s,%d,%d,%d,%d,%d%c
LAL - Terminate_Test, ERROR Previous modulation wasn't correctly set
LAL - Terminate_Test, Previous modulation was V23, not changing
MS=V23C,0%c
+A8I: 
+A8C: 
+A8A: 
+A8J: 
+A8M: 
Send CRe Tone
dpWaitForQCA
CRd Tone Detected
Receiver - Got Bad Frame
Receiver - Got MS MSG
Receiver - Got NAK
wait for QCA 500ms more
Fallback to Non-QC V8bis
Fallback to Non-QC V8bis (after long timeout)
CRe Tone Detected
SentCRdState
**** End Of V8Bis ****
**** Init V8Bis ****
Send CRd Tone
dpSendQCTone:: bSendQC = %d
V8bis:: LAPM = %d
StopWaitingForQCA
DetectV8bisMsg == TRUE
cV8bisRxMsg == QCA_MSG
Got QCA2d
Got QC2d
Got QCA2a
Got QCA2a A2A enable
Got QCA2a A2A disable
Got QC2a
Got QC2a A2A enable 
Got QC2a A2A disable 
AnsAm Detected
AnsAm off detected. Stopping TONEq
AnsAm off detected. waiting for TONEq to be sent for 50 ms
QCSentState
QCSentState:: calling dpWaitForQCA (bV8bisFrameDetected is FALSE)
QCASentState
QCSentState:: calling dpWaitForQCA
SentANSAM
TONEqDetected:: 1st
TONEqDetected:: 2nd - start modulation
SendTONEq
TONEq Sent for 50 ms, waiting for AnsAm off
Stop TONEq
Transmitter -Sending NonStandartInfo
V8bisTx NS_InfoLen = 0x%x
V8bisTx NS_CountryCode = 0x%x
V8bisTx NS_ProviderLen = 0x%x
V8bisTx NS_ManufactureID[0] = 0x%x
V8bisTx NS_ManufactureID[1] = 0x%x
V8bisTx NS_LicenseeCode = 0x%x
V8bisTx NS_ProductCapabilities = 0x%x
V8bisTx NS_FlexVersion = 0x%x
V8bisTx NS_DSPVersion = 0x%x
V8bisTx NS_ALawSupport = 0x%x
DetectV8bisMsg new frame.
In V8B_Parse_Msg 
V8B_Parse_Msg::cMessageType = 0x%x 
Receiver - Got Unknown Message Type: %X
Receiver - Got ACK1
Receiver - Got NAK1
Receiver - Got NAK3
Receiver - Got QCA2/QC2 
Receiver - Parsing NonStandartInfo
V8BisRx NS_CountryCode - 0x%x
V8BisRx NS_ProviderLen - 0x%x
V8BisRx NS_ManufactureID[0] - 0x%x
V8BisRx NS_ManufactureID[1] - 0x%x
V8BisRx NS_LicenseeCode - 0x%x
V8BisRx NS_ProductCapabilities - 0x%x
V8BisRx NS_FlexVersion - 0x%x
New uLaw/ALaw/Server Firmware Rev Byte = 0x%x
Server Controller Revision is = 0x%x
Server is an ALaw server.
Server is a ULaw server.
Server Forces Client's ULaw/ALaw Selection
Server Does Not Force ULaw/ALaw Selection
** ReinitVoice ::  DP_STOP_DATA_RX_TX
** InitVoiceVTX ::  DP_STOP_DATA_RX_TX
** InitVoiceVRX ::  DP_STOP_DATA_RX_TX
** InitVoiceVTR ::  DP_STOP_DATA_RX_TX
** InitVoiceVTR ::  VOICEIDLE
** InitVoiceFlow 
VoicePrintEventCode - %c
VoicePrintEventCode - 0x%x
SendDLEStatusCode - %c
SendDLEStatusCode - 0x%x
ERROR
-SRC:
Called # - %s
Time Training Started - %d
Time Training Ended - %d
Initial EQM - %d
Protocol negotiated - LAPM
Protocol negotiated - ALT
Protocol negotiated - None
Local Retrains - %d
Remote Retrains - %d
Local Renegs - %d
Remote Renegs - %d
MOH requests - %d
MOH Holds - %d
Running on Win2000 OS
start set country parameters
RKCTL_SET_KOREAN_RING_FLAG =0x%x
wInitRestrictedDialingParams - can't read registry entry - Restricting
wInitRestrictedDialingParams - Read registry entry
wInitRestrictedDialingParams - Decoded data successfully
wInitRestrictedDialingParams - EnableVoice=%d, EnableFax=%d
wInitRestrictedDialingParams - PrefixSize=%d, FreeDigits=%d
wInitRestrictedDialingParams - Shuffling Gpio pins %d and %d
wInitRestrictedDialingParams - Got %d dial strings
wInitRestrictedDialingParams - Str%d: %s
wInitRestrictedDialingParams - Got %d blocked dial strings
wInitRestrictedDialingParams - BlockedStr%d: %s
wInitRestrictedDialingParams - Hw Has EEROM (read magic %x)
wInitRestrictedDialingParams - Hw Magic matches Winac Magic
wInitRestrictedDialingParams - EEROM Serial match registry serial, Not Restricting
wInitRestrictedDialingParams - EEROM Serial (%x) doesn't match registry serial, Restricting
wInitRestrictedDialingParams - Failed to read EEROM Serial, Restricting
wInitRestrictedDialingParams - Generated random password (%x)
Found Magic 0x%x, hard coded: 0x%x
wInitRestrictedDialingParams - registry magic match Winac magic, Not Restricting
wInitRestrictedDialingParams - registry magic doesn't match Winac magic, Restricting
wSetSpeaker() ATM1:KillEC=%d,ECActive=%d,Atm1_wa=%d
************** END OF AUTO/FORCED Mode **********
Start RLSD Monitor Modulation %s
Starting DataPump %s
V32BIS TransmitTimeOut = %d ms
Closing DataPump %s
 1270 tone detected
 980 tone detected
%d ms Timer Expired
%d ms Timer expired
Starting 1650 tone generation
Starting 980 tone detection
Start Timer %d ms
Start 1270 Tone detection
AutoSilenceAfterAnsDone
%d ms time out expired
elapsed time from ANS end untill SilenceAfterAns timer started - %d
Continue V8 AutoMode 
%d ms timer expired
USB1 Time > %d ms 
ANS Time > %d ms
ANS Time < %d ms
Start AnsAm Monitoring
Start ANS Monitoring
Starting 1300 Tone Det
Starting 1650 Tone Det
Starting 2225 Tone Det
Start USB1 Monitoring
Start AC Monitoring
2225 Tone Detected
Start S1 SB1 Monitoring
Closing 1650 Tone Detector
Closing 2225 Tone Detector
Closing 1300 Tone Detector
Closing ANS DET
Event S1 SB1 detected Polarity = %d
Event S1 SB1 already handled - ignored
Event AA detectedPolarity = %d
Event CM detectedPolarity = %d
*** MOH:: Free the OnHold timer.***
Save ANSpcm = %d (ANSWER)
Save ANSpcm = %d (CALLER)
Event USB1 detectedPolarity = %d
Event AC detectedPolarity = %d
Event AnsAM detectedPolarity = %d
Event Ans detectedPolarity = %d
1650 Tone Detcted
Starting Modulation %s
Start Monitoring RLSD
ForceModulationActivate
Starting 1650 Tone Detector
Start Monitoring 1650 Tone Detection
CloseAnsDP
Start Monitrong Ans off
Start Monitrong AnsAM off
Starting %d ms Timeout
Starting ANS DET DataPump
Start Monitoring Ans Detection
Start Monitoring AnsAM Detection
Starting ANS GEN DataPump
IsDriverLoaded
\REGISTRY\Machine\Software\CXT
WinAcNtPowerSystemWorkingCompletion (system state %d) - request device state %d
WinAcNtHandlePowerSystemIrp - passing down IRP for system state
WinAcNtWakeCancel
WinAcNtWakeCompletion, status = 0x%x
UpdateWORCapabilities - Printing original capabilities...
pDevExt->DeviceStateMap[%d] = %d
pDevExt->SystemWake = %d
pDevExt->DeviceWake = %d
CpuC3StatesChangesControlActivate ZwPowerInformation read AllowPromotion 0x%x, AllowDemotion = 0x%x
Disable
Enable
CpuC3StatesChangesControlActivate PowerMode %s - %s Changes TargetPolicyAllowPromotion =0x%x TargetPolicyAllowDemotion=0x%x
UNKNOWN
CpuFreqChangesControl PowerMode %s - %s Changes
Saving AC=0x%x
Saving DC=0x%x
PwrApplyPolicy ZwPowerInformation read DynamicThrottle 0x%x, Status = 0x%x
PwrApplyPolicy PowerMode %s - %s Changes Curr=0x%x Target=0x%x
PwrApplyPolicy ZwPowerInformation set DynamicThrottle 0x%x, Status = 0x%x
PwrStateCallback - Calling DisableThrottling ...
PwrStateCallback - bad IRQL
CpuFreqChangesControlClose
PwrSubscribePowerChangeNotification - subscribe %s fail due to wrong IRQL
\Callback\PowerState
FAILED
CpuFreqChangesControlInit - Create power change CB %s
Failed
PwrSubscribePowerChangeNotification %s
PwrSubscribePowerChangeNotification - unsubscribe %s
ModemConfigure(RKCFG_MOH_RESUME_OVERRIDE)
ModemConfigure(CSDIAG_CFG_MOH_REJECT_OVERRIDE)
ModemConfigure(CSDIAG_CFG_MOH_ACCEPT_OVERRIDE)
ModemConfigure(RKCFG_MOH_OGCINIT_OVERRIDE)
ModemConfigure(RKCFG_MOH_OGCDONE_OVERRIDE)
RKCTL_START_SMS_RX (TRUE)
RKCTL_START_SMS_RX:: SMS is disabled in BondOption - return FALSE
RKCTL_START_SMS_SUSCRIBE (TRUE)
RKCTL_START_SMS_SUSCRIBE:: SMS is disabled in BondOption - return FALSE
RKCTL_START_SMS_TX (TRUE)
RKCTL_START_SMS_TX:: SMS is disabled in BondOption - return FALSE
RKCTL_SMS_TX_RECEIPT (ENABLE)
RKCTL_SMS_TX_RECEIPT (DISABLE)
 ModemControl(RKCTL_SMS_SEND_MESSAGE) - %s
 ModemControl(RKCTL_SMS_PHONE_NUMBERS) - %s
 ModemControl(MOH_LOCAL_ACCEPT)
 ModemControl(MOH_LOCAL_IGNORE)
 ModemControl(MOH_LOCAL_RECONNECT)
 ModemControl(MOH_LOCAL_DISCONNECT)
ModemControl(RKCTL_MOH_ENABLE) Setting to %d
ModemControl(RKCTL_MOH_ENABLE) ERROR = Invalid value %d
ModemControl(RKCTL_UPSTREAM_ENABLE) Setting to %d
ModemControl(RKCTL_MOH_LOCAL_TIMEOUT) Setting to %d
ModemControl(RKCTL_MOH_CW_SETTINGS) Setting to %d
ModemControl(RKCTL_V44_COMPRESSION_MODE) Setting to %d
ModemControl(RKCTL_V44_COMPRESSION_NEGOTIATION) Setting to %d
ModemControl(RKCTL_V44_CAPABILITY) Setting to %d
ModemControl(RKCTL_V44_TX_DICTIONARY_SIZE) Setting to %d
ModemControl(RKCTL_V44_RX_DICTIONARY_SIZE) Setting to %d
ModemControl(RKCTL_V44_MAX_TX_STRING) Setting to %d
ModemControl(RKCTL_V44_MAX_RX_STRING) Setting to %d
ModemControl(RKCTL_V44_MAX_TX_HISTORY) Setting to %d
ModemControl(RKCTL_V44_MAX_RX_HISTORY) Setting to %d
ModemControl(RKCTL_QC_DISABLE) Setting to %d
ModemControl(RKCTL_CW_DETECTED) with value to %d
ModemControl RKCTL_QC_PROFILE_DELETION
ModemControl RKCTL_QC_PROFILE_DELETION Succesful
ModemControl RKCTL_QC_PROFILE_DELETION because of wrong MS mode (%d)
ModemControl RKCTL_QC_PROFILE_WRITE
ModemControl RKCTL_OUTGOING_CALL_REQ
ModemControl RKCTL_GO_OFF_HOOK
ModemControl RKCTL_GO_ON_HOOK
ModemControl(RKCTL_ENABLE_CLID2) Setting to %d
Clid II Disabled in cty, keeping disabled
ModemControl(RKCTL_SET_CID) Setting to %d
CLID 1 is disabled in the CTY
ModemControl(RKCTL_OGC_ENABLED) Setting to %d
ERROR: ModemControl(RKCTL_OGC_ENABLED) Wrong Value %d
 Caller ID - %s
RKCTL_SILAB_CALLERID_STRING  request returning rc %d
RKCTL_SILAB_CALLERID_STRING with REPORT_ON_HOLD_TIMEOUT: timeout = %d
ModemControl of code %d returning FALSE
ModemMonitor(RKMON_CALL_WAITING_ALERT) %s
RKMON_MOH_CLID_ENABLED - returned FALSE
RKMON_MOH_CLID_ENABLED - returned %d
RKMON_NONV92_CW_ENABLED - returned FALSE
RKMON_NONV92_CW_ENABLED - returned %d
RKMON_MOH_ACCEPT_OVERRIDE - returned FALSE
RKMON_MOH_ACCEPT_OVERRIDE - returned %s, %d
RKMON_MOH_REJECT_OVERRIDE - returned FALSE
RKMON_MOH_REJECT_OVERRIDE - returned %s, %d
RKMON_MOH_RESUME_OVERRIDE - returned FALSE
RKMON_MOH_RESUME_OVERRIDE - returned %s, %d
RKMON_MOH_OGCINIT_OVERRIDE - returned FALSE
RKMON_MOH_OGCINIT_OVERRIDE - returned %s, %d
RKMON_MOH_OGCDONE_OVERRIDE - returned FALSE
RKMON_MOH_OGCDONE_OVERRIDE - returned %s, %d
RKMON_MOH_OVERRIDES_ENABLED - returned %d
RKMON_GET_TEST_RX_BUFFER %s
RKMON_GET_TEST_RX_BUFFER - bad buffer size. %d/%d
7.80.2.0
RKMON_CALLER_ID_STRING request returning rc %d
RKMON_CALLER_ID_STRING no cid available
RKMON_SMS_PICK_UP_MESSAAGE
RKMON_SMS_SUPPORTED (TRUE)
RKMON_SMS_SUPPORTED: SMS is disabled in BondOption
ModemMonitor returning false - Unkmown code %d
==============================================================
RKMON_CALLER_ID_STRING returning FALSE because of BAD case: %d
Sdk2KModemControl - Translation Returning False for code %d 
Sdk2KModemControl - Not a Winac code - calling sdpModemControl
Sdk2KModemConfigure - 
Sdk2KModemConfigure - Authorized: %d
Sdk2KModemConfigure - Code: %d
Sdk2KModemConfigure - Winac code: %d, value %d
Sdk2KModemConfigure - DP code: %d, value %d
Received CSDIAG_CTRL_SMS_TX_RECEIPT
Updating CSDIAG_TRAP_RLSD_DETECTED: %d
\Device\ConexantDiagnosticsServer
SDK exachange function table failed
SDK exachange function table failed pDevExt->DiagServerLoaded = FALSE
SDK Connection succeeded - Requesting Configurations
ERROR: SDK2K connection failed - IoGetDeviceObjectPointer %s
Updating Diagnostic State with DiagCode: %d
Updating Fallback Reason with value: %d
Updating Diagnostic State of %d with code: %d
 UpdateSDKConfigurationBitMask with location %d - Actual Mask %d
==================================
SendSDKConfigurationBitMask %d
OnClientEvent called %d
 UpdateSDKConfigurationBitMask - SDK Func Table is NULL - Not calling SDK
==========================
Switching Moh Method to %d
Updating MohState to: %d
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ConvertDtmfActionValToString Buffer Size: %d
ERROR ConvertDtmfActionValToString Wrong Buffer size
ERROR ConvertDtmfActionValToString returning TRUE
ERROR ConvertDtmfActionValToString returning FALSE, no DTMF action found
ERROR: RKCFG_ENABLE_OVERRIDES_rtn wrong buffer size. Returning FALSE 
RKCFG_ENABLE_OVERRIDES_rtn
RKCFG_ENABLE_OVERRIDES_rtn. Set to 0 - Returning to factory defaults
RKCFG_ENABLE_OVERRIDES_rtn. Set to 1.
ERROR: RKCFG_ENABLE_OVERRIDES_rtn invalid value. Returning FALSE 
NotifySdkToTakeSms
EventMOHResponse: Polarity=%d, MOHState=%d
Remote Response Timed Out, Disconnecting
** MOH_STATE_NOT_SUPPORTED (remote requested hold) **
************** Remote Requested MOH *********
*** Remote Req hold:: Timeout = %d sec ***
*** Remote Req hold:: Timeout = 0 (Nack) ***
*** Remote Req hold:: Timeout = NEVER_TIMEOUT ***
**** Remote Request Disconnect *****
**** Remote Request Reconnect *****
************** Remote Requested Reconnect(Ignore) *********
remote requested disconnect
******** remote closed the data modulation. *******
******** Start Reconnect (Ignore). *******
Modulation reported disconnect
*** EventMOHResponse: at unexpected State ***
Flash Off Hook
Fake CW - a dummy Flash
Flash On Hook
** ReturnFromHoldState:: calling  EC_Bg ** 
******** StartCallWaitingDetection ******** 
Checking for MOH support
Modem On Hold - Supported
Modem On Hold - Not Supported (by remote side)
Modem On Hold - Not Supported
-=-=-=-=-=-=-=-=-=-=-=-=-=-
- MOH parameters:
- AS Frequency
= %d 
- AS Bandwidth
= %d 
- AS CycleTime
= %d 
- MOH Method      = %d 
- bHandsetExclusive      = %d 
- fHangupOnCallWaiting   = %d
- Caller ID type 2       = %d
- bNonV92CwAlert Enabled = %d
- bTakeSdkOverrideAsValid= %d
- Flash Time = %d (S29*10)
- Moh Flash Time = %d, S29 = %d
*** Not looking for AS, MohDetectCw bit == 0 ***
RestoreConnection (After Ack):: Start timer for 12sec.
RestoreConnection - Ignore (After Nack):: Start timer for 12sec.
MOH - RestoreConnection.
Starting DP_V8 - Local requested OnHold.
MOH Disconnect after Nack.
MOH Disconnect after Ack. 
Fake CW - a dummy FlashBack
ResumeOGCSession
Resumming is done with DTMFS, so Resume as normal
Setting Dial Tone Detector
Setting timer to stop looking for ATV25
Setting ATV25 Detector
ClearConfAADetectors 
Do Second Flash
OGCResumeAsCOnfAA
Do First Flash
 Non - V92 Connection Ignoring ModemControl(MOH_LOCAL_RECONNECT)
************** ResumeModemSession **********
************** MOH Modulation Disconnect *********
Starting DP_V8 - Remote requested OnHold
 Non - V92 Connection Disconnecting without clearing down
User Decision: Disconnect
User Decision: Disconnect after hold (Method= Automatic)
User Decision: Disconnect after hold (Method= Manual)
User Decision: Disconnect after hold (Method= Normal - No handset Exclusive)
 UserDecisionResume
 UserDecisionResume - Calling OGC Resume
 UserDecisionResume - Calling Normal Resume
 Non - V92 Connection Ignoring ModemControl(MOH_LOCAL_ACCEPT)
UserDecisionAccept:: PSYS->MOHState == %d
User Decision: Accept (Method= Automatic)
User Decision: Accept (Method= Manual)
User Decision: Accept (Method= Normal - No handset Exclusive)
 Non - V92 Connection Ignoring ModemControl(MOH_LOCAL_IGNORE)
UserDecisionIgnore: Invalid MOHState %d
************** UserDecisionIgnore *********
IgnoreCallWaiting ...
IgnoreCallWaiting: Start timer for %d msec.
!!!!! Monitor RKMON_ON_HOLD_TIMEOUT Failed !!!!!
*** Remote response came - Modem set to Auto Ignore  ***
*** Remote response - Ack ***
*** ON_HOLD_TIMEOUT = %d ***
*** Remote response - Nack ***
**** CW ALERT For Non V92 Connection ****
PutRemoteModemOnHold: Invalid state (MOHState=%d), returning
PutRemoteModemOnHold:: call PutModemOnHold in 50ms
Modem On Hold: Auto Disconnecting Call
Modem On Hold: Auto Ignoring Call
PutRemoteModemOnHold: MOHState=%d
No Caller ID Available
PutRemoteModemOnHold: Waiting for remote decision, CallWaitingResolution: %d
*** CAS Detected ***
*** start CID ***
*** NoCWCID ***
NoCWCID: Closing CAS Det
***** AS Detected *****
Disconnect frame received, ignore AS tone
MOH not supported (bMOHSupport=%d)
MOH Not Supported - Start CLID detection
MOH Not Supported - Restoring modulation
mohstate=%d, none=%d
** MOHState != MOH_STATE_NONE - don't start MOH **
~~ MohDetectCWClid ~~
ASDetected: Not looking for CID (no Cid_TYPE)
ASDetected: Not looking for CID (Invalid CAS Definition)
Opening V23 to detect caller ID
CASDetectionTime = %d
***** MOH:: ANSAM was detected - no need to Flash *****
In OGCPutModemOnHold
RequestOutGoingCall: Request denied (OgcEnable==0)
RequestOutGoingCall: returning TRUE
CALL WAITING
FakeCallWaiting: Bad arguments to at~cw
FakeCallWaiting
EmulateCallWaitingResponse:: Accept
EmulateCallWaitingResponse:: Disconnect
EmulateCallWaitingResponse:: Ignore
EmulateCallWaitingResponse:: Reconnect
Resuming AS Detection
PerformSwitchActions: MOHCurrentSwitchAction=%d #!@&%^$?
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Outgoing Call Init action %d
Accepting CW (%d Actions)
Outgoing Call Done action %d
Resuming CW (%d Actions)
Ignore furthere signals (%d Actions)
Invalid CallWaitingDecision %d
Action %d: NOP
Action %d: FLASH (On hook time=%d)
Action %d: SLEEP (%d ms)
Action %d: DTMF (inter digit delay = %d)
Setting timer for Inter Digit Delay
Action %d: Invalid Action (%d)
DTMFcompleted
SendDTMF: Invalid Digit %d
SendDTMF: Sending DTMF %c
Moh - GetSwitchActionTime returning: %d
-=-=-= Start CAS Detector -=-=-=-
LookForCAS: MOHCurrentCASAction=%d #!@&%^$?
-=-=-= CAS Detector -=-=-=-
Action %d: SEND_DTMF
Action SEND_DTMF, duration=%d ms
Action %d: Send Dual Tone
Send Dual Tone not implemented, treated as NOP
Action %d: Receive DTMF
Action %d: Receive Dual Tone
Look for Freq1=%d, Freq2=%d, Duration=%d
LookForDTMF: Invalid Digit %d
Looking for DTMF %c
Received DTMF %c
Received Dual Tone: Freq1=%d, Freq2=%d, Duration=%d
In ToneDetected: I shouldn't be here ^%&@!#%$
PSYS->CWSetting set to CW_SET_HANG_UP (PCW=1)
********* HANGING UP CONNECTION ********
Changing Non V92 Moh Support to %d
MohOverrideActionFromSdk - Stream is %s
MohOverrideActionFromSdk - ERROR Overrides from SDK are DISABLED. Aborting
MohOverrideActionFromSdk - ERROR Len is too big (%d). Truncating
MohOverrideActionFromSdk - 0 Lenght valid string, Setting 3rd Action to NOP
MohOverrideActionFromSdk - ConvertStringToBinary returned %d
MohOverrideActionFromSdk - ERROR Invalid DTMFS (%d). Aborting
MohOverrideActionFromSdk - Overriding action 0 with FLASH, duration 0
MohOverrideActionFromSdk - Overriding action 1 with SLEEP, duration %d
MohOverrideActionFromSdk - Overriding action 2 with DTMF, values %d
V42DCinit
SessionID
V42DC Started.
V42DCshutdown
V42DC Stopped.
V42DCRunCmd: State:%s, Event:%s.
V42DCSendCmd: State:%s, Event:%s.
V42DCSendCmd: Local command sent
V42DCSendCmdCont: State:%s, Event:%s.
V42DCGotLocalCommand: DiagCode:0x%x, Type:0x%x.
DecodeRestrictedInfo - Bad CRC in encoded structure
CheckCRCs - CRC test passed
OpenLightRestrcition - Light restriction opened successfully
OpenLightRestrcition - Can't write to registry, Failed to open light restriction
OpenLightRestrcition - Failed to read registry entry
OpenHwRestriction - Hw restriction opened successfully
OpenHwRestriction - Can't write to registry, Failed to open Hw restriction
OpenHwRestriction - Failed to read registry entry
CheckNumber - Blocking voice call
CheckNumber - Allowing Voice call.
CheckNumber - Blocking fax call
CheckNumber - Allowing FAX call.
CheckNumber - Blocked Number, Blocking call
CheckNumber - Blocking call (possible semicolon trick)
CheckNumber - Blocking call, no match found for %s
CheckNumber - Allowing call, Found match for %s
CheckNumber - Allowing call. DialStrLen=%d, MaxFreeDigits=%d
IsDialStrInBlockList - %s is in the block list, Blocking call
TerminateTest
LassoEventDetected
FROM_DP_PIM %d %d %s %d
Detected RING 
Detected DTMF %d
TimerTimedOut
Last DTMF %d
Installing Thread for Event Monitoring
Start Event Monitoring
Setting timer with timeout %d
RKCTL_LOOP_BACK_TRANSMIT_DATA - PSYS->cLassoTxBuff %s
Stop Ring Function  %d
Callback Function  0%x
LAsso SetD3
LAsso SetD0
ModemControl RKCTL_DTMF_TONE_DETECT with TimeOut: %d
ModemControl RKCTL_CTRL_START_RING_DETECTOR with TimeOut: %d
ModemControl RKCTL_START_TONE_DETECTOR
ModemControl RKCTL_SINGLE_TONE_GENERATE START
ModemControl RKCTL_SINGLE_TONE_GENERATE STOP
ModemControl RKCTL_DTMF_TONE_GENERATE with digit: %d
RKCTL_LOOP_BACK_TRANSMIT_DATA  %s
RKCTL_SET_POWER_TYPE - POWER_TYPE_S3
RKCTL_SET_POWER_TYPE -  POWER_TYPE_S0
StartSmsSupport
StartSmsSupport-after DP_WAKEUP
StartSmsSupport-after OFFHOOK
StartSmsSupport-after looking for CAS
SmsCASDetected
Exit SmsCASDetected
ReportSMS
ReportSMS Num of Bytes: %d
SMS buffer is empty !!!!. Nothing to report
Exit ReportSMS
EndSms
EndSms after ONHOOK
OK END
Ending with error. eSMSState is %d
END WITH ERROR
SMSSendDTMF
SMSSendDTMF: Invalid Digit %d
SMSSendDTMF: Sending DTMF *%c*, SmsMsgIndex is [%d]
SMSSendDTMF :: need to Notify
Exit SMSSendDTMF UserData = %d 
SendDTMFDone
bNotify is FALSE
SendDTMFDone::Starting EndSms in 1s
SendDTMFDone::Wait for user input
Exit SendDTMFDone with bNotify = %d
CalSMSChksum
CalSMSChksum 0x%x
SendDTMFStream
SendDTMFStream :: default
SmsPrepareDigitList
SMS_SEND_OFF_LINE_SERVIECE_ID
index=%d, i=%d,0x%x
set smsMsgIndex 0,i=%d
SMS_SEND_ON_LINE_SERVIECE_ID
SMS_TEMP_SEND_USER_SELECTION 
SMS_SEND_LINK_LAYER_ACK D1
SMS_SEND_LINK_LAYER_NAK D0
SMS_SEND_DATA
ReceiveAddLen %d
DataLength %d, SmsTxMsgSize %d
Receipt enabled in stream
Receipt disabled in stream
prepare phone number %d, i=%d
First letter [%c]
**prepare message index=%d,i=%d, [%c]
set smsMsgIndex to 0 i=%d, SmsTxMsgSize=%d
SmsGetDigitFromChar [%c]
**SMS WAIT_FOR_55** 0x%x
** SMS WAIT_FOR_MARK ** 0x%x
SMS CONNECT
** SMS GET_MSG_TYPE ** 0x%x
** SMS GET_LENGTH_BYTE ** 0x%x
** SMS GET_MSG_NUMBER ** 0x%x
** SMS GET_LAYER3_MSG_COM_CODE ** 0x%x
** SMS_GET_QUERY_CPE  ** 0x%x
** SMS_GET_UPLOAD_COMMAND  ** 0x%x
** SMS ENDING_SMS ** 0x%x,(0x%x) %d
** SMS GET_LAYER3_MSG_LENGTH ** 0x%x
** SMS GET_LAYER3_MSG_MARK ** 0x%x
** SMS GET_LAYER3_MSG_PART_NUMBER ** 0x%x
** SMS GET_LAYER3_QUERY_TYPE ** 0x%x
Illegal SMS QUERY TYPE ** 0x%x
** SMS GET_LAYER3_RETURN_METHORD ** 0x%x
** SMS GET_LAYER3_MSG_BODY ** 0x%x
** GET_CHECKSUM ** curComCode= 0x%x
** SMS downloading ** 0x%x
** GET_CHECKSUM ** BAD 0x%x
** SMC service query ** 0x%x
** SMS uploading ** 0x%x
** SMS information query ** 0x%x
** SMS END_SMS ** 
** SMS END_SMS send ACK and exit** 
** SMS END_SMS in else** 
** default state ** 
x ATH
9|$$t
9|$(t
9|$,t
9|$0t
V(9n,
9l$ u
9l$$u
9l$,u
9l$0u
9l$4u
VWATAUAVH
D'|tv~y
fA;,$r
 A^A]A\_^
VWATH
 A\_^
WATAUH
 A]A\_
L$(H3
tkfD;
WATAUAVAWH
D9w4A
fD9wtA
fD9wt
fD9wtA
\$PH+
 A_A^A]A\_
\$0H+
\$0H+
\$0H+
y,Ht!
t$ WH
x5t H
VWATH
f90~~H
 A\_^
x ATH
WATAUH
 A]A\_
x ATH
x ATH
D$ f;
L$ u+
L$ A:
D:D$ r
l$ WH
L$8H3
x ATH
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
f9w,t
f9w.t
sJf9w
@8sCt
f9G s
t$8$ 
B(E8HCu
E8HFu
WATAUH
 A]A\_
CD8CNv
u#fA;
i(t}@8i
u:@8k
CM8CKu8
I7D:I.
CM8CKt,
C4:C.s$
y<Suu
{;@tF
E"H3E
fA;T@puR
A H3A
@=A:@Ou
<`uyf9Ylt
f9WlH
A:P8u
AM8AKt
H/A8@Ms
P/A:@Ks
A:PKs
@KA:@/u
A:@Pu
A8@#u
WATAUH
 A]A\_
fD9.D
fD9.D
B5D8BMu
BA:BPu
B#8BAu
D$(sH
VWATAUAWH
 A_A]A\_^
x ATAUAVH
fD9ot
8Cxt D
 A^A]A\
t$ E3
D$(sE3
STt0@
[5A8[Mu
CAA:CPu
C#A8CAu
RDGetCommStatus retrain while disconnect  - HALTING V42
RDGetUDInfo  cUDTermination=%d
v42_detection (originator mode) - start sending ODP
v42_detection (originator mode) - start LAPM negotiation
v42_detection (answer mode) - start LAPM negotiation
v42_det_ans - HDLC detected - starting LAPM negotiation
v42_det_ans - synch detected - start MNP negotiation
v42_det_ans - ODP detected - start sending ADP
v42_det_ans - detection timer expired - start V14
v42_det_ans - detection timer expired - drop connection
v42_ans_adp - HDLC detected - start LAPM negotiation
v42_ans_adp - synch detected - start MNP negotiation
v42_ans_adp - timer expired - start V14
v42_ans_adp - timer expired - drop connection
send_odp_chk - ADP / HDLC detected - starting LAPM negotiation
send_odp_chk - start V14
>>>>send_odp_chk - retraining
send_odp_chk - retrain occurred, reset det timer
send_odp_chk - DET_TIMER expired, trying to fallback to MNP
send_odp_chk - DET_TIMER expired, starting V14
send_odp_chk - DET_TIMER expired, drop connection
v42_halt
v42_reset
v42_init
v42_start
run_link_disc timeout 500ms
v42_hangup
CompDir = %d
DictSize = %d
StrLen   = %d
TxDictSize = %d, RxDictSize = %d
TxStrLen   = %d, RxStrLen   = %d
TxHistSize = %d, RxHistSize = %d
parse_v42_xid:: Rx XID [%d] - 0x%x
parse_v42_xid:: V.42 DC is enabled Ver. = %d
DISC_LINK_FLG set call v42_hangup
N400 exceeded, retx_cnt=0x%x, set error count, lmon will start reneg
N400 exceeded, retx_cnt=0x%x, waiting for DISC
Hanging up without sending disconnect frame - NEGOTIATION_FLG = 0x%x, wait_reg = 0x%x
GOT UA FRMR, WAIT_SABME DISC_LINK_FLG set 
get_u_frame WAIT_DISC, GOT UA, DISC_LINK_FLG set
WAIT_SABME, got DM DISC_LINK_FLG set 
WAIT_DISC, got DM DISC_LINK_FLG set 
get_u_frame DISC_TYPE, set UA_F1
lapm_v42_tx XID_F0 [%d] - 0x%x
lapm_v42_tx XID_P0 [%d] - 0x%x
lapm_v42_tx DM_F1 [%d] - 0x%x
lapm_v42_tx UA_F1 [%d] - 0x%x
lapm_v42_tx FRMR_F0 [%d] - 0x%x
lapm_v42_tx DISC_P1 [%d] - 0x%x
lapm_v42_tx SABME_P1 [%d] - 0x%x
lapm_v42_tx UI_F0 [%d] - 0x%x
DISC_LINK_PENDING...
(0 - Remote goes offhook, 1 - Remote goes on hook)
(0 - Accept,1 - Disconnect ,2 - Ignore ,3 - Reconnect)
0,1,2,3
(1 - Fake Call Waiting, 2 - Fake Call Waiting Without Flashes)
(0,1)
(0-255)
0-ffffffff
(0,1,2,3,8)
0,1,2,3,8
0-100000
%***2<<<<<<<<<
V42DC
 !"#$%&'()*++,,,---.
 0@HPX`dhlptx|
"%)-27<BIPXakv
,[1K6
ADH~OqW/`
0123456789ABCDEF
0123456789
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789ABCD#*
0123456789ABCD#*
Conexant WINAC Modem
Conexant
WINAC Modem Rev 0.9
CONEXANT;DPCM;8
Conexant Mid
Conexant MMid
Conexant MRid
Manufacturer ID
Model ID
Revision ID
Serial Number ID
Global Object ID
+GCAP: +DS,+ES,+FCLASS,+MS
(0-9)
(0 - Carol 1 2 3 , 1 - Liat 4,5,6! , 2 - Behazlacha - !!. (good luck in hebrew), 3 - This is a Tx test)
(0,1 - Rx ,2 - Tx, 3 - Subscrib)
(00-3F),(0,1)
00-3F|0,1
(0000-FFFF)
0000-FFFF
(0,1),(0-60)
0,1|0-60
1,"UNSIGNED PCM",8,0,(7200,8000),(0),(0)
         128,"8-BIT LINEAR",8,0,(7200,8000),(0),(0)
         129,"ADPCM",4,0,(7200,8000),(0),(0)
         130,"UNSIGNED PCM",8,0,(7200,8000),(0),(0)
         131,"ULAW",8,0,(7200,8000),(0),(0)
         132,"ALAW",8,0,(7200,8000),(0),(0)
         133,"LINEAR",16,0,(7200,8000),(0),(0)
1,128,129,130,131,132,133|7200,8000|0|0
(820-4096),(6144-7372), 8192
410-2048|3072-3690
(0,200-3000),(0,200-3000),(0-255)
0,200-3000|0,200-3000|0-255|0,1,2,3,4,5,6,7,8,9,A,B,C,D,*,#,!|0-255|0,1,2,3,4,5,6,7,8,9,A,B,C,D,*,#,!
0-500
(0,127,128,129),(0-255)
0,127,128,129|0-255
(0-19,128-131)
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,128,129,130,131
(0),(0)
3,24,48,72,73,74,96,97,98,121,122,145,146
(0-14),(0-14),(0-2),(0-14),(0-14)
0-14|0-14|0-2|0-14|0-14
(V21,V22,V22B,V23C,V32,V32B,V34),(0,1),(0,75-33600),(0,75-33600),(0,75-33600),(0,75-33600)
V21,V22,V22B,V23C,V32,V32B,V34|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600
(B103,B212,V21,V22,V22B,V23C,V32,V32B,V34),(0,1),(0,75-33600),(0,75-33600),(0,75-33600),(0,75-33600)
B103,B212,V21,V22,V22B,V23C,V32,V32B,V34|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600
(V21,V22,V22B,V23C,V32,V32B,V34,K56,V90,V92),(0,1),(0,75-56000),(0,75-56000),(0,75-56000),(0,75-56000)
V21,V22,V22B,V23C,V32,V32B,V34,V90,V92|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,25333,26667,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,46667,48000,49333,50667,52000,53333,5466756000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,25333,26667,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,46667,48000,49333,50667,52000,53333,5466756000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(V21,V22,V22B,V23C,V32,V32B,V34,V90,V92),(0,1),(0,75-33600),(0,75-33600),(0,75-56000),(0,75-56000)
V21,V22,V22B,V23C,V32,V32B,V34,V90,V92|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(V21,V22,V22B,V23C,V32,V32B,V34,V90),(0,1),(0,75-33600),(0,75-33600),(0,75-56000),(0,75-56000)
V21,V22,V22B,V23C,V32,V32B,V34,V90|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90),(0,1),(75-33600),(75-33600),(75-56000),(75-56000)
B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90,V92),(0,1),(75-33600),(75-33600),(75-56000),(75-56000)
B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90,V92|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90,V92),(0,1),(0,75-56000),(0,75-56000),(0,75-56000),(0,75-56000)
B103,B212,V21,V22,V22B,V23C,V32,V32B,V34,V90,V92|0,1|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,25333,26667,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,46667,48000,49333,50667,52000,53333,5466756000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,25333,26667,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,46667,48000,49333,50667,52000,53333,5466756000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000|0,75,300,600,1200,2400,4800,7200,9600,12000,14400,16800,19200,21600,24000,26400,28800,31200,33600,32000,34000,36000,38000,40000,42000,44000,46000,48000,50000,52000,54000,56000,28000,29333,30667,32000,33333,34667,36000,37333,38667,40000,41333,42667,44000,45333,42667,44000,45333,46667,48000,49333,50667,52000,53333,54667,56000
(0-13)
(0-2)
(0,1,3)
0,1,3
(0,1,2)
0,1,2
(20-7000),(10-5000),(0)
20-7000|10-5000|0
(0,1,2,4,8,10,18)
0,1,2,4,8,10,18
(0,2400,4800,9600,19200,38400,57600,115200)
0,2400,4800,9600,19200,38400,57600,115200
(0-2),(0-2)
0-2|0-2
(0-6),(0-3)
0-6|0-3
(0-255),(0-1)
0-255|0-1
0-255
(0),(0),(0)
0|0|0
(0),(0),(0,1),,(0),(0),(255),
0|0|0,1||0|0|255||
(0-4,6),(0-4),(0-6,8)
0,1,2,3,4,6|0-4|0,1,2,3,4,5,6,8
(0-1),(0-1),(0)
0-1|0-1|0
(0-3),(0-1),(0-2),(256-16384),(256-16384),(32-255),(32-255),(512-65534),(512-65534)
0-3|0-1|0-2|256-16384|256-16384|32-255|32-255|512-65534|512-65534
(0-3),(0),(512-4096),(6-250)
0-3|0|512-4096|6-250
(1,6),(1,5),(1),(0,1),(1,6),(1)
1,6|1,5|21,C1|0,1|||||
(2000-25550), (10000,65534), (0-65534)
2000-25550|10000,65534|0-65534
2000-25500|1-65534
(0,2000-25500), (10-400), (0-600), (0-600)
0,2000-25500|10-400|0-600|0-600
(2000-65534), (0,2000-65534), (2000-65534)
2000-65534|0,2000-65534|2000-65534
(2000-65534),(20-200)
2000-65534|20-200
(PCI,USB,HDA),(0000-FFFF),(0000-FFFF),(0000-FFFF),(0000-FFFF)
PCI,USB,HDA|0-ffff|0-ffff|0-ffff|0-ffff
(2000-25500), (1-65534)
2000-25500|1-65534|
(0000-FFFF),(0000-FFFF)
0000-FFFF|0000-FFFF
(10-65534)
10-65534
(2000-65534)
2000-65534
(2000-25500), (10000-65534), (1000-65534)
2000-25500|10000-65534|1000-65534
0-255
0,1,2
0,1,2, 128, 129 ,130
0,1,2,3,4,8,16,24,48
(0,1,2,3)
0-FFFFFFFF
((0),(1-7),(1-7))
0-0|1-7|1-7
(0-FF)
(0,1)
PDC_DATA
PDC_CTRL
RECORD
V29_TX
V29_RX
V27TER_TX
V27TER_RX
V17_TX
V17_RX
BELL212A
BELL103
K56FLEX
V32BIS
CID_V23
V22BIS
HDPLX_V21
RING_DET
PULSE_DIALER
CR_TONE_GEN
CR_TONE_DET
ANS_GEN
ANS_DET
DTMF_GEN
DTMF_DET
TONE_GEN
TONE_DET
RESTRICTED
+MCR: V92
+MCR: V90
+MCR: K56
+MCR: V34
+MCR: V32B
+MCR: V32
+MCR: V23C
+MCR: V22B
+MCR: V22
+MCR: V21
+MCR: B212
+MCR: B103
+FRH:3
+ER: ALT-CELLULAR
+ER: ALT
+ER: LAPM
+ER: NONE
+DR: NONE
+DR: V44 RD
+DR: V44 TD
+DR: V44
+DR: V42B RD
+DR: V42B TD
+DR: V42B
+DR: MNP5
+FCERROR
BLACKLISTED
DELAYED
NO ANSWER
NO DIALTONE
ERROR
NO CARRIER
V42DC_EV_ERROR
V42DC_EV_RMT_CMD_DONE
V42DC_EV_RMT_CMD_RP
V42DC_EV_RMT_CMD_CN
V42DC_EV_RMT_CMD
V42DC_EV_RMT_RSP_MAX
V42DC_EV_RMT_RSP_TO
V42DC_EV_RMT_RSP_NF
V42DC_EV_RMT_RSP_F
V42DC_EV_LOCAL_CMD
V42DC_EV_NONE
V42DC_ST_DISABLED
V42DC_ST_DUPLEX
V42DC_ST_LRSPPENDING
V42DC_ST_LCMDSENT
V42DC_ST_IDLE
CAX_CNXT.pdb
HSFXSDK
GENERIC
+GCAP: +DS, +ES, +FCLASS, +MS
CONEXANT
RC56HCF
Revision ID
Global Object ID
Serial Number ID
CONEXANT
RC56HCF
Revision ID
Rockwell International
8000-8002,0001-07FF,FFFF
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
            !!!!!!!!!!!!""""""""""""############$$$$$$$$$$$$%%%%%%%%%%%%&&&&&&&&&&&&''''''''''''((((((((((((
)*+,-6
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
!!#$""!! 
!!!!!!!
VWATH
@A\_^
UVWATAUAVAWH
@A_A^A]A\_^]
:;t+L;
VWATH
!\$PH!\$HH!
H!\$ 
x ATAUAVH
at-A+
<,t<</v
 A^A]A\
WATAUH
 A]A\_
f!|$HI
@8|$0@
x ATH
D8%;3
t$ WH
t$ WH
t$ WATAUAVAWH
A8t$Dt
D$`@8
0A_A^A]A\_
D$(E3
L$ E3
L$ E3
D$(ttD
x ATH
l$ VWATH
 A\_^
VWATH
 A\_^
H96u H
VWATH
 A\_^
UVWATAUH
 A]A\_^]
SUVWATAUAVAWH
E8{DtL
D8|$ t;H
D8|$<
L$0D)
L9|$(
D8|$!t@H
hA_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
fD95m
\$`fD
\$PfD
A_A^A]A\_^]
WATAUAVAWH
^0toH
0A_A^A]A\_
L$0E3
x ATH
t$ WATAUAVAWH
L9ghu
0A_A^A]A\_
WATAUAVAWH
tvD95
tvD95s
0A_A^A]A\_
t$ WATAUAVAWH
toD9%
0A_A^A]A\_
x ATAUAVH
@A^A]A\
t$ WAVAWH
A_A^_
RegionList
Region
UseCurrentRegion
T35CODE
[REGION]
\Profile
\Region
\Profile\
\Region\
\SystemRoot\system32\Drivers\
Winac_Kmos_Thread_Priority
Winacisa
Winacpci
Winachsf
SERIALCOMM
In WinAcNtStartPurge routine and fPurgeOptionForIBMThinkpad=%d
%s ( %d ms)
DosDevices
\Device\
DisablePMTab
\REGISTRY\Machine\System\CurrentControlSet\Control\Class\
IRP_MN_WAIT_WAKE
IRP_MN_WAIT_WAKE - bus driver did not set a cancel routine
IRP_MN_WAIT_WAKE - bus driver has set a cancel routine
IRP_MN_QUERY_POWER - return 0x%x
IRP_MN_SET_POWER (device state) - current state is %d, switching to state %d
WinAcNtSetPowerD0 - returned with status 0x%x...
WinAcNtSetPowerD0 - calling RshellNt_SetD0...
WinAcNtSetPowerD3 - calling RshellNt_SetD3...
WinAcNtSendWaitWake - start...
WinAcNtSendWaitWake - requested IRP_MN_WAIT_WAKE with system state = %d...
WinAcNtSendWaitWake - Printing capabilities...
pDevExt->DeviceStateMap[%d] = %d
pDevExt->SystemWake = %d
pDevExt->DeviceWake = %d
WinAcNtSendWaitWake - status = 0x%x...
IOCTL_SERIAL_INTERNAL_DO_WAIT_WAKE
IOCTL_SERIAL_INTERNAL_CANCEL_WAIT_WAKE
PreConfig
AttachedTo
PortName
RtlAnsiStringToUnicodeString
ZwReadFile
RtlInitUnicodeString
RtlIntegerToUnicodeString
RtlAppendUnicodeToString
RtlInitAnsiString
RtlFreeUnicodeString
ZwCreateFile
ZwClose
RtlAppendUnicodeStringToString
RtlCopyUnicodeString
RtlUnicodeStringToInteger
ZwQueryInformationFile
ZwDeleteKey
ZwEnumerateKey
ZwOpenKey
IoIsWdmVersionAvailable
KeWaitForSingleObject
IofCallDriver
IoBuildSynchronousFsdRequest
KeInitializeEvent
ObfDereferenceObject
IoGetDeviceObjectPointer
KeReleaseSemaphore
KeReleaseSpinLock
IoAcquireCancelSpinLock
KeAcquireSpinLockRaiseToDpc
KeSetTimerEx
IoCancelIrp
KeDelayExecutionThread
KeInsertQueueDpc
KeQueryTimeIncrement
strncat
ExSetTimerResolution
IoReleaseCancelSpinLock
PsCreateSystemThread
IofCompleteRequest
KeInitializeSemaphore
ObReferenceObjectByHandle
IoFreeIrp
IoAllocateIrp
KeSetTimer
RtlWriteRegistryValue
IoCreateSymbolicLink
IoDisconnectInterrupt
KeCancelTimer
MmLockPagableDataSection
RtlDeleteRegistryValue
IoDeleteSymbolicLink
KeRemoveQueueDpc
IoDeleteDevice
MmUnlockPagableImageSection
MmUnmapIoSpace
PsTerminateSystemThread
KeSetPriorityThread
KeInitializeTimer
IoGetDeviceProperty
IoRegisterDeviceInterface
IoSetDeviceInterfaceState
KeSetEvent
KeInitializeDpc
IoDetachDevice
IoAttachDeviceToDeviceStack
PoCallDriver
IoOpenDeviceRegistryKey
IoCreateDevice
ExUnregisterCallback
KeClearEvent
ZwPowerInformation
PoRequestPowerIrp
PoSetPowerState
PoStartNextPowerIrp
ExRegisterCallback
ExCreateCallback
IoBuildDeviceIoControlRequest
RtlUnicodeStringToAnsiString
RtlFreeAnsiString
ExAllocatePool
ExFreePool
RtlQueryRegistryValues
ZwSetValueKey
ZwQueryValueKey
KeBugCheckEx
ntoskrnl.exe
VS_VERSION_INFO
StringFileInfo
000004B0
CompanyName
Conexant Systems, Inc.
FileDescription
HSF_CNXT driver
FileVersion
7.80.2.0 built by: WinDDK
InternalName
HSF_CNXT.sys
LegalCopyright
Copyright Conexant Systems, Inc. 2008
OriginalFilename
HSF_CNXT.sys
ProductName
SoftK56 Modem Driver
ProductVersion
7.80.2.0
VarFileInfo
Translation
