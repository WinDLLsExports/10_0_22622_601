!This program cannot be run in DOS mode.
Richy
.text
`PAGE
`PAGECMRC
`.rdata
@.data
.pdata
@.rsrc
@.reloc
UVWAVAWH
A_A^_^]
D$ E3
|$ AVH
I0D9p
@SVWH
H!|$XH!|$`
L$PH3
UVWATAUAVAWH
H!l$p3
H!\$xE3
0A_A^A]A\_^]
UVWATAUAVAWH
H!l$p3
H!\$xE3
0A_A^A]A\_^]
UVWATAUAVAWH
H!l$p3
H!\$xE3
0A_A^A]A\_^]
x UATAUAVAWH
A_A^A]A\]
E fD9
\$Pf9
H fA;
D$@E3
|$dD8D$4uJL9E
9D$\uPD
L9M8t$
D$ E3
@8t$4t L
t$ E3
xOH9uXt"L
x'@8t$8t*L
t$ E3
UATAUAVAWH
A_A^A]A\]
yJ}uf
)L$`H
UAVAWH
A_A^]
UATAUAVAWH
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
fB94Bu
f94Wu
y%H9}
A_A^A]A\_^]
fB9<vu
f9<Au
fC9|u
WAVAWH
9s0vxH
;s0sN
0A_A^_
p AWH
UVWATAUAVAWH
D$8E3
yD8?H
T$1A;
A_A^A]A\_^]
WAVAWH
 A_A^_
USVWATAUAVAWH
fD9$Au
fD9$Ku
HA_A^A]A\_^[]
L$ UVWATAUAVAWH
fE9<Du
fD9<Au
fE9<Du
|$ eH
0A_A^A]A\_^]
x ATAVAWH
fD9$_u
\$"E3
@A_A^A\
x AVH
WATAUAVAWH
 A_A^A]A\_
\$ WH
L$@H3
@USVWATAVAWH
t$pE3
D$ E3
A_A^A\_^[]
@USVWATAUAVAWH
HA_A^A]A\_^[]
UAVAWH
A_A^]
x ATAVAWH
8\$`tL9
 A_A^A\
UVWATAVH
D9u@v\
D;u@r
@A^A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
T$`E3
D$PD9?
t$XE3
V8D9z
A_A^A]A\_^]
t$ UWATAVAWH
fD9$Au
|$ E3
L9e@t
0A_A^A\_]
L$ SVWAVH
(A^_^[
` UAVAWH
fE9$Au
A_A^]
UATAUAVAWH
fE9$Au
A_A^A]A\]
WAVAWH
L$(H;
L$8H3
@A_A^_
UVWATAUAVAWH
 A_A^A]A\_^]
uhH9X
t$ WH
T$ E3
H9=>:
T$ E3
VWAVH
T$ E3
0A^_^
H!t$@
H95a7
WAVAWH
 A_A^_
p WAVAWH
T$8E3
@A_A^_
USVWATAUAVAWH
Im`eH
XA_A^A]A\_^[]
UAVAWH
xcI!6
@A_A^]
L$0E3
T$ E3
WAVAWH
 A_A^_
p WAVAWH
D8=g#
fD98t
0A_A^_
t$ UWATAVAWH
c\fD9!
v3fD9d$"u
L$"fD9dD
A_A^A\_]
l$ VWAVH
D$ fA
fB9,@u
f9,Yu
x ATAVAWH
 A_A^A\
WAVAWH
 A_A^_
c UAVAWH
@A_A^]
WATAVH
 A^A\_
\$ UVWAVAWH
D$ E3
`A_A^_^]
t$ UWATAUAWH
D$ E3
A_A]A\_]
WAVAWH
0A_A^_
L$0E3
l$ VWATAVAWH
fD9d]
A_A^A\_^
WAVAWH
0A_A^_
UVWAVAWH
D$0E3
A_A^_^]
VWATAVAWH
H!t$8H
D$0E3
t$(E3
D$0E3
t$(E3
@A_A^A\_^
VWAVH
f9)th
9.u'H
 A^_^
K SWH
UVWAVAWH
 A_A^_^]
UATAUAVAWH
|$(E3
A_A^A]A\]
@USVWATAUAVH
PA^A]A\_^[]
WATAUAVAWH
0A_A^A]A\_
t$ WH
|$@Lr0L
UVWATAUAVAWH
D$ E3
D$ E3
fD9,Au
pA_A^A]A\_^]
UWATAUAWH
 A_A]A\_]
UVWATAUAVAWH
D$0E3
D$0E3
D$0E3
D$0E3
t$ E3
PA_A^A]A\_^]
h VWATAVAWH
fD9$Xu
0A_A^A\_^
USVWATAUAVAWH
HA_A^A]A\_^[]
USVWATAVAWH
A;<$v
pA_A^A\_^[]
@USVWATAVAWH
PA_A^A\_^[]
VWAVH
0A^_^
x AVH
D$ E3
L$`H3
\$ UVWATAUAVAWH
93t@A
A_A^A]A\_^]
D$(E3
UVWATAUAVAWH
D$ =4
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWAUAWH
A_A]_^]
UATAUAVAWH
uHA;6w9I
<GfA9
uHA96
A_A^A]A\]
|$ UATAUAVAWH
fD9)tOH
A_A^A]A\]
UVWATAUAVAWH
pA_A^A]A\_^]
SUVWATAUAVAWH
HA_A^A]A\_^][
UVWATAUAVAWH
]o93A
A_A^A]A\_^]
UVWATAUAVAWH
L$0M;
@A_A^A]A\_^]
p WAVAWH
D$ E3
0A_A^_
UVWATAUAVAWH
D$ E3
D$ E3
fE9dV
fD9$Ou
A_A^A]A\_^]
WAVAWH
 A_A^_
SUVWATAUAVAWH
fE9|\
fD9|H
D$0E3
HA_A^A]A\_^][
UVWATAUAVAWH
L$HE3
D$8D90u
(M`E;
L9t$Ht eH
L9t$@t eH
L9t$Pt eH
L9t$8t eH
A_A^A]A\_^]
\$ UVWATAUAVAWH
\$HE3
D$((Y-
fD9,Xu
fD9,Fu
L9mot
A_A^A]A\_^]
!9_$u'A
UVWATAUAVAWH
fE9<Fu
fD9|E
fE9$Vu
fD9du
 A_A^A]A\_^]
L$ UVWATAUAVAWH
fD9lF u
fD9lV u
fD9l^ u
@A_A^A]A\_^]
L$ UVWATAUAVAWH
D8e@t
`A_A^A]A\_^]
fD9<Au
fD9<Au
fG9<pu
D$(E3
fF9<pu
fF9$qu
UVWATAUAVAWH
D$HL9d$Pt
L9d$`u
L9d$h
d$0E3
L9d$Pt eH
A_A^A]A\_^]
L9d$PuAH
H;E<u
H;EDu
;ELt%eH
H;A`u
H;Aht
tJD8d$HuWH
 fE9e
VWAVH
fD94Gu
L9t$@t eH
 A^_^
x AUAVAWH
l$HE3
D$@E3
!t$8H
D$PH!t$03
l$HE3
D$@E3
!t$8H
D$PH!t$03
l$HE3
D$@E3
A_A^A]
UWAVH
t$ WH
D$@E3
!|$8H
!|$`H
WAVAWH
t$HE3
D$@E3
A_A^_
UVWATAUAVAWH
L$ E3
L$pE3
fE9,Lu
\$@eH
l$@eH
A_A^A]A\_^]
@USVWATAUAVAWH
|$XE3
L!t$8H
D$0E3
D$@E3
It$@eH
L!t$8H
D$0E3
It$@eH
Ft&A;Q
d$hufL
L!t$8H
D$@D!t$HE
D!t$@E3
D$(L!t$ 
L!t$8H
D$HE3
D$@E3
It$@eH
L!t$8H
D$@D!t$HE
D!t$@E3
D$(L!t$ 
L!t$8H
D$HE3
It$@eH
L$XE3
|$DE3
A_A^A]A\_^[]
UWATAUAVH
D$ E3
9u0vgH
A^A]A\_]
UWATAUAVH
9]Hv5H
A^A]A\_]
VWAVH
0A^_^
UWATAVAWH
@A_A^A\_]
UVWAVAWH
A_A^_^]
p WAVAWH
f9,Ou
f9,Fu
?H9l$Ht eH
 A_A^_
WATAUAVAWH
fD9,Au
4$L9l$`t eH
 A_A^A]A\_
T$ E3
L$@H3
@SVWATAUH
A]A\_^[
UWAVH
SVWATAUAVAWH
A_A^A]A\_^[
SVWATAUAVAWH
A_A^A]A\_^[
SVWATAVAWH
xA_A^A\_^[
@SVWATAUAVAWH
D;|$T
A_A^A]A\_^[
SVWATAUAVAWH
D$ E3
0A_A^A]A\_^[
SVWATAUAVAWH
H!|$@H
D$(!|$ E3
D$0=#
D$4eH
L$@H;
`A_A^A]A\_^[
SVWATAUAVAWH
D$0H;
PA_A^A]A\_^[
UWATAVAWH
A_A^A\_]
D$PH#
wgt^3
L$hE3
@USWH
D$PE3
L$`H3
UWATAVAWH
D$@!@
A_A^A\_]
UVWAVAWH
D$( @
xofD9?v
D;6s>
A_A^_^]
WATAUAVAWH
A_A^A]A\_
L$@H3
UVWATAUAVAWH
A_A^A]A\_^]
T$ E3
L$@H3
VWATAVAWH
fD9$Fu
 A_A^A\_^
WAVAWH
0A_A^_
|$ UH
WAVAWH
D$@E3
A_A^_
@SUVWH
D$FE3
L$PH3
h_^][
VWAVH
 A^_^
UWAVH
UVWATAUAVAWH
D$ E3
9H toH
A9@ t
@03F0
1F0eH
H90u+H
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
UVWATAWH
A_A\_^]
VWAVH
D$PD9
 A^_^
UVWATAUAVAWH
;EPu!H
fE9$Gu
D$ E3
t(D9eHu"E
d$ E3
PA_A^A]A\_^]
UVWAVAWH
0A_A^_^]
WAVAWH
 A_A^_
UVWATAUAVAWH
p*]^_
A_A^A]A\_^]
t$ WATAUAVAWH
D8t$`
fD94Fu
0A_A^A]A\_
@USVWAVH
PA^_^[]
t$ UWAVH
l$ VWAVH
D$xfD
x ATAVAWH
0A_A^A\
I0t&A
p WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
VWATAVAWH
 A_A^A\_^
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
fD9<Au
fE9|D
fD9<pu
`A_A^A]A\_^]
WINDOWS
|$ UATAUAVAWH
fC9D}
@8}@t
A_A^A]A\]
UWAVH
0A^_]
VWAVH
!|$xI
L$xE3
@A^_^
VWAVH
T$h!|$`H
0A^_^
\$ VWAVH
T$H!|$@H
 A^_^
UWATAVAWH
A_A^A\_]
UWATAVAWH
fD9$Xu
A_A^A\_]
|$ UH
UVWAVAWH
|$@E3
G8H;F
A_A^_^]
USVWAVH
H!}@I
I!>!>H
D$(!|$ H
@A^_^[]
UWAVH
@SVWH
D$@E3
L$xH3
VWATAVAWH
l$HE3
l$HE3
l$HE3
D9>vID
A_A^A\_^
@SVWAVAWH
t$HE3
|$@E3
L$xH3
A_A^_^[
L$PE3
|$ AVH
L$0!|$0E3
USVWATAUAVAWH
xDH9}`u
f9<Bu
H9}`t
HA_A^A]A\_^[]
x UATAUAVAWH
|$0E3
A_A^A]A\]
 fE9|$
u*L9A
UVWAVAWH
fE9<Fu
\$(E3
A_A^_^]
\$ UVWH
x"!}gL
x UAVAWH
fD9<Qu
A_A^]
UVWAVAWH
fD9<Au
L9}8t
0A_A^_^]
VWAVH
 A^_^
UVWATAUAVAWH
H!|$ D
@A_A^A]A\_^]
q*Zvt
x AVH
D$HE3
t$ WATAUAVAWH
D$0E3
regf#
hbinD
L$0H3
A_A^A]A\_
VWAVH
D$ f9A
L$PE3
L$PH;O8u
0A^_^
UVWATAUAVAWH
fD9DB
D9EOuVH
fA9E 
fD;r4v
L$pH;Mot
H9t$`t
A_A^A]A\_^]
p WAVAWH
L$PE3
\$PH9_8u
E(D9p
L$PI9H
0A_A^_
UVWATAUAVAWH
0A_A^A]A\_^]
x ATAVAWH
 A_A^A\
x AVH
SUVWATAUAVAWH
8A_A^A]A\_^][
x AVH
u=H;K8u
f!C"H
UVWATAUAVAWH
|$`f9A
I9u8u
|$Hf#
 fE;>f
 A_A^A]A\_^]
VWAVH
 A^_^H
x AVH
p WATAUAVAWH
L9l$`t
0A_A^A]A\_
p WATAUAVAWH
L$pE3
fE9,Ft
A_A^A]A\_
UVWATAUAVAWH
uJfD9
UhfA9N
9]Pu"@
`A_A^A]A\_^]
V(9z@s
E@9B<s
F(9x@s
WATAUAVAWH
@ f9A
 A_A^A]A\_
x ATAVAWH
A_A^A\
VWAVH
 A^_^
H98uWH
x ATAVAWH
fD9$yu
0A_A^A\
WAVAWH
 A_A^_
UVWATAUAVAWH
D$xE;
I!u(3
0A_A^A]A\_^]
VWAVH
t$@f9A
 A^_^
u!L;A
x ATAVAWH
fD9$Gu
 A_A^A\
;J(w"
VWATAVAWH
 A_A^A\_^
H96usL
J8D;M
x ATAVAWH
hbinA
 A_A^A\
9hbinu
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
D$ M+
A_A^A]A\_
SUVWAVH
 A^_^][
@USVWATAUAVAWH
\$@9G
hbinu
D$HE;
L$(A2
A_A^A]A\_^[]
A97sX
7D9E,v I
WATAUAVAWH
 A_A^A]A\_
USVWATAUAVAWH
OfRgH
G4A3G4%
A1G4A
D8]wu
D8]ou
L$ fD;H
G<M9nxtuH
D8mou
@8}ou
A_A^A]A\_^[]
|$ AVH
L90u0H
VWATAVAWH
D!|$`3
H!\$ D
0A_A^A\_^
\$0E3
WATAUAVAWH
 A_A^A]A\_
h VWAVH
 A^_^
UATAUAVAWH
A_A^A]A\]
VWATAVAWH
 A_A^A\_^
x AVH
@USVWATAUAVAWH
?regf
XA_A^A]A\_^[]
D$xM;
9HvLEH
H;L$ 
L$(H3
H;L$ 
L$(H3
UWATAVAWH
!Eg@2
CMLbA
!T$ D
A_A^A\_]
UVWATAUAVAWH
PA_A^A]A\_^]
p WATAUAVAWH
t$2f9
l$8uK
A_A^A]A\_
UVWATAUAVAWH
A8vLu
fA9vLu
|FL\t
DNHf9H4sAD
DNHfA
E9k8s-D
A9F(tn
MpA9N<s
MpA9N<t
A9V$|
t$fE9]
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
|$ UH
f;FHI
FHf9GH
USVWATAUAVAWH
8A_A^A]A\_^[]
x ATAVI
|$0A^A\
t$ WATAVAW
t$@A_A^A\_
|$ AVH
VWAVH
 A^_^
UVWATAUAVAWH
L$`f;
D;d$xr
f9D$`uKA
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
8hbin
@A_A^A]A\_^]
WATAUAVAWH
E+#E++A
D9V0u
D9V4u
0A_A^A]A\_
Authu7
cAMDu/
entiu'3
L$ SVWAVH
(A^_^[
\$ E3
L$ SUVWH
G$H;A$
D$@E3
L$HH3
WATAUAVAWH
fD98u
fD9<Bu
fF9<Bu
 A_A^A]A\_
x UATAUAVAWH
D$(E3
t;fA;
L$0E3
L$0E3
A_A^A]A\]
L$ SVWH
WAVAWH
0A_A^_
x ATAVAWH
A_A^A\
x AVH
x ATAVAWH
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
fD9 t
0A_A^A\
q0R^G'
D$ I;
p0R^G'
D$HE3
D$HE3
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
x AVH
9regfL
t$ UWATAVAWH
=HvLEu
A_A^A\_]
UATAUAVAWH
T$@E3
9regf
H9D$@
t$@E3
A_A^A]A\]
WATAUAVAWH
 A_A^A]A\_
VWAVH
UVWATAUAVAWH
:DIRTt
HvLEA
A_A^A]A\_^]
rHA;C
l$ VWATAVAWH
trA9<$rl
 A_A^A\_^
L$ VWAVH
 A^_^
t$ WH
\$ UVWATAUAVAWH
 A_A^A]A\_^]
SUVWATAUAVAWH
;hbinu
hbinA
T$0A;
HA_A^A]A\_^][
x AVH
x AVH
VWAVH
CMSc9
 A^_^
SUVATAUAVAWH
T$,E3
@A_A^A]A\^][
WAVAWH
 A_A^_
kernel32.dll
HeapSetInformation
SetThreadUILanguage
BCD Warning: %s
BCD Error: %s
BCD Info: %s
BCD: %s
store
offline
resolve
loglevel
delete
create
deletevalue
timeout
default
displayorder
toolsdisplayorder
bootsequence
dbgsettings
debug
bootdebug
emssettings
bootems
createstore
export
import
sysstore
hypervisorsettings
mirror
kerneldbgsettings
eventsettings
event
showpath
addfirst
addlast
remove
serial
debugport:
baudrate:
targetname:
local
hostipv6:
hostip:
targetip:
gatewayip:
port:
busparams:
pages:
nodhcp
newkey
start
active
autoenable
disable
noumex
hypervisorhostip        
kernelhostip            
hostip                  
partition=
file=
ramdisk=
vmbus=
composite=
cimfs=
%1[%2]%3
%1[%2]%3,%4
%1[locate]%2,locate=%3
%1[locate]%2
%1[%2]%3,locate=%4
locate=
%1%2,%3
unknown
LOCATE=CUSTOM:
PARTITION=
FILE=
RAMDISK=
CIMFS=
LOCATE
GPT_PARTITION=
VMBUS=
COMPOSITE=
false
custom:%08x
custom:
locate
LOCATE=\
{%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
emsport:
emsbaudrate:
table
firmware
bootapp
bootmgr
osloader
resume
inherit
format
\\.\PhysicalDrive%lu
application
bootsector
startup
device
fwbootmgr
memdiag
ntldr
setupldr
cleanup
nocleanup
clean
types
formats
topics
devobject
customtypes
%d.%d.%d.%d
~a.(G
\KernelObjects\BcdSyncMutant
BcdOpenSystemStore: Failed to acquire BCD sync mutant.Status: %x
BcdSetSystemStoreDevice: Failed to acquire BCD sync mutant. Status: %x
BcdSetSystemStoreDevice: Invalid parameter supplied.
Unable to set system partition to "%s". Status: %x
Set system partition to "%s"
Unable to unload store. Undoing syspart modifications. Status: %x
Offline store creation requires FilePath
Creating store %08x.
\Registry\Machine\System\CurrentControlSet\BootConfigurationData
Unable to create tempory root key. Status: %x
NewStoreRoot
Unable to create tempory new store key. Status: %x
Failed to create system store path. Status: %x
Failed to get system store path. Status: %x
Failed to create hive. Store: %ws Status: %x
Failed to add new store from file. File: %ws Status: %x
Failed to close new store. Store: %ws Status: %x
Failed to adopt new store. File: %ws Status: %x
Failed to open new system store. Store: %ws Status: %x
Failed to create store. Status: %x
Deleting references to object %s
Failed to clean up references to %s. Status: %x
Referencing object: %s.
BcdOpenStore: Failed to acquire BCD sync Mutant. Store: %wsFlags: 0x%x Status: %x
Opening store. Flags: 0x%x
Store will be synchronized with firmware.
Failed to open system store. Status: %x
Store path: "%s"
Store will be accessed with offline registry APIs.
BcdOpenStore: Failed to add store from file %ws. StoreFlags: 0x%x Status: %x
Failed to clear system store flag. Status: %x
BcdCloseStore: Failed to acquire BCD sync mutant. Status: %x
Closing store. Flags: 0x%x
BcdForciblyUnloadStore: Failed to acquire BCD sync mutant. Status: %x
Exporting forcible unload to firmware
Failed to export unload alterations to firmware. Status: %x
Description
System
Exporting alterations to firmware.
Failed to export alterations to firmware. Status: %x
KeyName
TreatAsSystem
FirmwareModified
BCD%08d
Loaded hive at BCD%08d
Failed to load hive into key %ws from %s. Status: %x
Too many unexplained failures. File: %s Last status: %x
Failed to find a key to load store %s. Last attempted key: %ws
Objects
Failed to initialize objects key for store. Store: %s StoreKey: %ws Status: %x
Failed to initialize description key for store. Store: %s StoreKey: %ws Status: %x
A valid store must have a description key.
Failed to open description key for store. Store: %s StoreKey: %ws Status: %x
Failed to set description key value. Store: %s StoreKey: %ws Status: %x
Failed to open store from path. File: %ws Status: %x
Failed clear firmware namespace. File: %ws Flags: 0x%x Status: %x
\Registry\Machine
Failed to add system store from file. File: %ws Status: %x
Failed to mark system store. File: %ws Status: %x
File is not system store. File: %ws Status: %x
Opening system store. Flags: 0x%x
Found loaded store at key %s
Store %s is the system store
The system store is not already loaded
Specified flags prevent opening unloaded system store
Synchronizing store with firmware
Failed to bind with firmware. Flags: 0x%x Status: %x
Failed to get object identifier. Status: %x
Opening object %s
Failed to open key for all objects. Status: %x
Failed to get aliased identifier. Status: %x
Failed to update object GUID string. Status: %x
Object alias resolves to %s
Failed to open object's key. Status: %x
Creating object. Version: %d. Type: 0x%08x
Generating object GUID.
Object GUID: %s
Elements
BcdGetElementDataWithFlags: Failed to acquire BCD sync mutant. Status: %x
BcdGetElementDataWithFlags: Failed to open elements key.Object: %ws Status: %x
BcdGetElementDataWithFlags: Failed to open key.Object: %ws Type: %ws Status: %x
Element
BcdGetElementDataWithFlags: Failed to get registry value.Object: %ws Reg type: %lu Status: %x
Setting element %08x
Failed filtering for element %08x. Status: 0x%x
Failed to open key for object's elements. Status: %x
Failed to open key for element %s. Status: %x
Failed to convert data for element %s. Status: %x
Failed to set registry data for element %s. Status: %x
Deleting element %08x
Deleting element %08x blocked by secure boot policy.
Failed to filter delete element %08x. Status: %x
Failed to open key for all object's elements. Status: %x
Failed to open element %ws key for delete. Status: %x
Insufficient length for BCD element. Length %lu Required %lu DataType: %lu
Unexpected length for BCD element. Length %lu Expected: %lu DataType: %lu
Failed to resolve locate. Status: %x
Exceeded length for BCD element. Length %lu Expected: %lu DataType: %lu
Unexpected length for BCD element. Length %lu DataType: %lu
String not multiple of WCHAR. Length %lu DataType: %lu
Failed to open object %ws. Status: %x
Failed to Enumerate elements from %ws. Status: %x
Failed to enumerate subkeys. Status: %x
Dropping invalid data type. Element: %ws
Failed to get registry value. Element: %ws Status: %x
Failed to get the size needed for the registry data. Element: %ws, Status: %x
Failed to enumerate subelements. Status: %x
Failed to enumerate subobject elements. Status: %x
qAxelR\
Device\HarddiskVolume
\Device
\Device\%s\Partition%lu
\??\PhysicalDrive%lu
Directory
SymbolicLink
Harddisk
BiResolveLocate: Unsupported parent device type %d. Status: %x
BiResolveLocate: ParrentOffset is 0. Status: %x
Exporting store.
BcdExportStore: Failed to open system store. Status: %x
Deleting existing file
BcdExportStore: Failed delete existing file at %ws. Status: %x
BcdExportStore: Failed create/open existing file at %ws. Status: %x
BcdExportStore: Failed clone BCD to %ws. Status: %x
Copying object. Flags: 0x%x
Failed to acquire BCD sync mutant. Status: %x
BcdCopyObjectEx: Failed to get object description Flags: 0x%x Status: %x
BcdCopyObjectEx: Failed to get generate object guid. Flags: 0x%x Status: %x
BcdCopyObjectEx: Failed to get object identifier. Flags: 0x%x Status: %x
Failed to convert guid to string. Status: %x
BcdCopyObjectEx: Failed to create object. Target: %ws Flags: 0x%x  Status: %x
BcdCopyObjectEx: Failed to set firmware object. Target: %ws Flags: 0x%x Status: %x
BcdCopyObjectEx: Failed to enumerate source elements. Target: %ws Flags: 0x%x Status: %x
BcdCopyObjectEx: Failed to set target elements. Target: %ws Flags: 0x%x Element type: %lu Status: %x
BcdCopyObjectEx: Failed to copy object. Target: %ws Flags: 0x%x Status: %x
Copying objects. Version: %d. Type: 0x%08x
Failed to enumerate objects. Status: %x
Cloning store.
Failed to empty store. Status: %x
Failed to clone store. Status: %x
System store path: %s
Failed to get system partition. Status: %x
System partition: %s
FirmwareVariable
Failed open key %ws. Status: %x
Failed to acquire permissions to load hive. Status: %x
Failed load key %ws. Flags: 0x%x File: %s Status: %x
Failed open newly loaded key %ws. Flags: 0x%x Status: %x
%s\%s
Unexpected type for BCD element. Expected type: 0x%x Actual type: 0x%x
ZwUnloadKey2
ZwLoadKey2
ntdll.dll
Failed to delete file. Status: %x
\Registry\Machine\System\CurrentControlSet\Control\MiniNT
\Registry\Machine\SYSTEM\CurrentControlSet\Control
PortableOperatingSystem
SystemStartOptions
MININT
Attempting to determine owner of file %ws.
Failed to open file attributes. Status: %x
Failed to allocate process ID buffer.
Failed to query processes. Status: %x
No processes are using this file.
Found %d processes using this file.
Failed to open process. Status: %x
Failed to query process information for size. Status: %x
Failed to allocate memory for space for process name.
Failed to query process info. Status: %x
Process Name [%d]: %ws
ZwFilterBootOption
FirmwareBootDevice
WindowsSysPartDevice
GuidCache
Binding EFI namespace objects
BiBindEfiNamespaceObjects failed %x
Exporting store alterations to efi
BiExportStoreAlterationsToEfi failed %x
Exporting store to efi
BiExportStoreToEfi failed %x
\EFI\Microsoft\Boot\BCD
BiBuildIdentifierList failed %x
BiBindEfiBootManager failed %x
Boot entry exists for DontSync with ID 0x%x
BiBindEfiEntries failed %x
Created boot entry 0x%x using cached variable
Created new boot entry 0x%x
BiCreateEfiEntry failed %x
BiExportBcdObjects failed %x
Timeout
BootNext
BiExportEfiBootManager failed: %x
BiSpacesUpdatePhysicalDevicePath null APPLICATION DEVICE
SyspartIsSpace failed for %s
\??\GLOBALROOT
SyspartGetPhysicalPartitions failed with error code: %x
\Device\Harddisk%u\Partition%u
BiSpacesUpdatePhysicalDevicePath failed %x
BiUpdateEfiEntry failed %x
WINDOWS
BCDOBJECT=
Translated a DontSync entry with ID 0x%x
Translated a DontSync object to ID 0x%x
SyspartIsSpace failed for partition path: %s
BiCreateBootEntry: Could not retrieve BCD Object application description. Status: %x
BiCreateBootEntry: Could not retrieve BCD Object application device. Status: %x
BiCreateBootEntry: Could not retrieve BCD Object application path. Status: %x
ZwAddBootEntry
Failed to add boot entry. Status: %x
ZwEnumerateBootEntries
Failed to enumerate boot entries. Status: %x
Deleting boot entry 0x%x
ZwDeleteBootEntry
Failed to delete boot entry 0x%x. Status: %x
ZwQuerySystemEnvironmentValueEx
ZwSetSystemEnvironmentValueEx
Failed to query "%ws" variable. Status: %x
Failed to delete "%ws" variable. Status: %x
ZwModifyBootEntry
Failed to modify boot entry 0x%x. Status: %x
ZwSetBootEntryOrder
Failed to set boot entry order. Status: %x
ZwSetBootOptions
Failed to set boot options. Status: %x
ZwTranslateFilePath
ZwQueryBootEntryOrder
Failed to query boot entry order. Status: %x
ZwQueryBootOptions
Failed to query boot options. Status: %x
\Boot\BCD
multi(%d)disk(%d)rdisk(%d)partition(%d)
\ArcName\
\??\PhysicalDrive%d
\Registry\Machine\SYSTEM\CurrentControlSet\Control\Syspart
SystemPartition
\Device\Harddisk%lu\Partition%lu
\EFI\Microsoft\Boot\bootmgfw.efi
\ArcName\multi(0)disk(0)rdisk(1)
\ArcName\multi(0)disk(0)rdisk(0)
\Partition0
%s\Partition%lu
multi(%d)disk(%d)rdisk(%d)
RtlValidRelativeSecurityDescriptor
SymbolicLinkValue
.LOG1
.LOG2
SymbolicLinkValue
v101.0_symcrypt_101_0_2022-04-06T01:31:14-07:00_1b007c8_2022-04-06T10:53:30
sr-Latn-CS
sr-SP-Latn
sr-Cyrl-CS
sr-SP-Cyrl
sr-Latn-BA
sr-BA-Latn
sr-Cyrl-BA
sr-BA-Cyrl
iu-Latn-CA
iu-CA-Latn
bs-Cyrl-BA
bs-BA-Cyrl
bs-Latn-BA
bs-BA-Latn
zh-Hant
zh-CHT
zh-Hans
zh-CHS
%s\%s\%s.mui
%s\%s.mui
.\%s\%s.mui
.\%s.mui
Software\Microsoft\Active Setup\Installed Components\{89820200-ECBD-11CF-8B85-00AA005B4383}
Locale
UseNone
UseAll
UsePrivate
Serial
Local
Active
AutoEnable
Disable
Default
DisallowMmConfig
Enable
1024x768
800x600
1024x600
Resume
HyperV
Recovery
StartupRepair
SystemImageRecovery
CommandPrompt
SystemRestore
PushButtonReset
Legacy
Standard
Simple
OptIn
OptOut
AlwaysOff
AlwaysOn
ForceEnable
ForceDisable
Minimal
Network
DsRepair
DisplayAllFailures
IgnoreAllFailures
IgnoreShutdownFailures
IgnoreBootFailures
IgnoreCheckpointFailures
DisplayShutdownFailures
DisplayBootFailures
DisplayCheckpointFailures
AlwaysDisplayStartupFailures
Fatal
UseErrorControl
Basic
Extended
Disabled
Enhanced
Strict
Classic
Hypervisor
optout
optin
BCDE_LIBRARY_TYPE_APPLICATION_DEVICE
BCDE_LIBRARY_TYPE_APPLICATION_PATH
BCDE_LIBRARY_TYPE_DESCRIPTION
description
BCDE_LIBRARY_TYPE_PREFERRED_LOCALE
locale
BCDE_LIBRARY_TYPE_INHERIT
BCDE_LIBRARY_TYPE_TRUNCATE_PHYSICAL_MEMORY
truncatememory
BCDE_LIBRARY_TYPE_RECOVERY_SEQUENCE
recoverysequence
BCDE_LIBRARY_TYPE_AUTO_RECOVERY_ENABLED
recoveryenabled
BCDE_LIBRARY_TYPE_BAD_MEMORY_LIST
badmemorylist
BCDE_LIBRARY_TYPE_FIRST_MEGABYTE_POLICY
firstmegabytepolicy
BCDE_LIBRARY_TYPE_RELOCATE_PHYSICAL_MEMORY
relocatephysical
BCDE_LIBRARY_TYPE_AVOID_LOW_PHYSICAL_MEMORY
avoidlowmemory
BCDE_LIBRARY_TYPE_TRADITIONAL_KSEG_MAPPINGS
traditionalkseg
BCDE_LIBRARY_TYPE_ALLOW_BAD_MEMORY_ACCESS
badmemoryaccess
BCDE_LIBRARY_TYPE_DEBUGGER_ENABLED
BCDE_LIBRARY_TYPE_DEBUGGER_TYPE
debugtype
BCDE_LIBRARY_TYPE_DEBUGGER_PORT_ADDRESS
debugaddress
BCDE_LIBRARY_TYPE_DEBUGGER_PORT_NUMBER
debugport
BCDE_LIBRARY_TYPE_DEBUGGER_BAUDRATE
baudrate
BCDE_LIBRARY_TYPE_DEBUGGER_1394_CHANNEL
channel
BCDE_LIBRARY_TYPE_DEBUGGER_BUS_PARAMETERS
busparams
BCDE_LIBRARY_TYPE_DEBUGGER_USB_TARGETNAME
targetname
BCDE_LIBRARY_TYPE_DEBUGGER_NET_HOST_IP
hostip
BCDE_LIBRARY_TYPE_DEBUGGER_NET_PORT
BCDE_LIBRARY_TYPE_DEBUGGER_NET_DHCP
BCDE_LIBRARY_TYPE_DEBUGGER_NET_KEY
BCDE_LIBRARY_TYPE_DEBUGGER_NET_VM
BCDE_LIBRARY_TYPE_DEBUGGER_IGNORE_USERMODE_EXCEPTIONS
BCDE_LIBRARY_TYPE_DEBUGGER_START_POLICY
debugstart
BCDE_LIBRARY_TYPE_EMS_ENABLED
BCDE_LIBRARY_TYPE_EMS_PORT_NUMBER
emsport
BCDE_LIBRARY_TYPE_EMS_BAUDRATE
emsbaudrate
BCDE_LIBRARY_TYPE_LOAD_OPTIONS_STRING
loadoptions
BCDE_LIBRARY_TYPE_DISPLAY_ADVANCED_OPTIONS
advancedoptions
BCDE_LIBRARY_TYPE_DISPLAY_OPTIONS_EDIT
optionsedit
BCDE_LIBRARY_TYPE_FVE_KEYRING_ADDRESS
keyringaddress
BCDE_LIBRARY_TYPE_GRAPHICS_MODE_DISABLED
graphicsmodedisabled
BCDE_LIBRARY_TYPE_CONFIG_ACCESS_POLICY
configaccesspolicy
BCDE_LIBRARY_TYPE_DISABLE_INTEGRITY_CHECKS
nointegritychecks
BCDE_LIBRARY_TYPE_ALLOW_PRERELEASE_SIGNATURES
testsigning
BCDE_LIBRARY_TYPE_FONT_PATH
fontpath
BCDE_LIBRARY_TYPE_SI_POLICY
integrityservices
BCDE_LIBRARY_TYPE_FVE_BAND_ID
volumebandid
BCDE_LIBRARY_TYPE_CONSOLE_EXTENDED_INPUT
extendedinput
BCDE_LIBRARY_TYPE_INITIAL_CONSOLE_INPUT
initialconsoleinput
BCDE_LIBRARY_TYPE_GRAPHICS_RESOLUTION
graphicsresolution
BCDE_LIBRARY_TYPE_RESTART_ON_FAILURE
restartonfailure
BCDE_LIBRARY_TYPE_GRAPHICS_FORCE_HIGHEST_MODE
highestmode
BCDE_LIBRARY_TYPE_FORCE_NO_KEYBOARD
nokeyboard
BCDE_LIBRARY_TYPE_ISOLATED_EXECUTION_CONTEXT
isolatedcontext
BCDE_LIBRARY_TYPE_BOOTUX_DISABLE
bootuxdisabled
BCDE_LIBRARY_TYPE_BOOTUX_DISPLAY_MESSAGE
displaymessage
BCDE_LIBRARY_TYPE_BOOTUX_DISPLAY_MESSAGE_OVERRIDE
displaymessageoverride
BCDE_LIBRARY_TYPE_BOOT_SHUTDOWN_DISABLED
bootshutdowndisabled
BCDE_LIBRARY_TYPE_ALLOWED_IN_MEMORY_SETTINGS
allowedinmemorysettings
BCDE_LIBRARY_TYPE_FORCE_FIPS_CRYPTO
forcefipscrypto
BCDE_LIBRARY_TYPE_BOOT_ERROR_UX
booterrorux
BCDE_LIBRARY_TYPE_ALLOW_FLIGHT_SIGNATURES
flightsigning
BCDE_LIBRARY_TYPE_ADDITIONAL_CIPOLICY
additionalcipolicy
BCDE_LIBRARY_TYPE_BSD_PRESERVE_LOG
preservebootstat
BCDE_LIBRARY_TYPE_BOOTUX_TEXT_DISABLE
nobootuxtext
BCDE_LIBRARY_TYPE_BOOTUX_PROGRESS_DISABLE
nobootuxprogress
BCDE_LIBRARY_TYPE_BOOTUX_FADE_DISABLE
nobootuxfade
BCDE_LIBRARY_TYPE_TWO_BOOT_IMAGES
mobilegraphics
BCDE_LIBRARY_TYPE_BOOTUX_BITMAP_TRANSITION_TIME
bootuxtransitiontime
BCDE_LIBRARY_TYPE_BOOT_LOG_FORMAT
measuredbootlogformat
BCDE_LIBRARY_TYPE_DISPLAY_ROTATION
displayrotation
BCDE_LIBRARY_TYPE_LOG_CONTROL
logcontrol
BCDE_LIBRARY_TYPE_NO_FIRMWARE_SYNC
nofirmwaresync
BCDE_LIBRARY_TYPE_BSD_LOG_DEVICE
bootstatdevice
BCDE_LIBRARY_TYPE_BSD_LOG_PATH
bootstatfilepath
BCDE_LIBRARY_TYPE_WINDOWS_SYSTEM_DEVICE
windowssyspart
BCDE_LIBRARY_TYPE_NUM_LOCK_ON
numlock
BCDE_LIBRARY_TYPE_LINEAR_ADDRESS_57_POLICY
linearaddress57
BCDE_LIBRARY_TYPE_DEBUGGER_NET_HOST_IPV6
hostipv6
BCDE_LIBRARY_TYPE_DEBUGGER_NET_TARGET_IP
targetip
BCDE_LIBRARY_TYPE_DEBUGGER_NET_GATEWAY_IP
gatewayip
BCDE_LIBRARY_TYPE_DEBUGGER_ENABLE_JTAG_BREAK
enablejtagbreak
BCDE_DEVICE_TYPE_RAMDISK_IMAGE_OFFSET
ramdiskimageoffset
BCDE_DEVICE_TYPE_RAMDISK_TFTP_CLIENT_PORT
ramdisktftpclientport
BCDE_DEVICE_TYPE_RAMDISK_SDI_DEVICE
ramdisksdidevice
BCDE_DEVICE_TYPE_RAMDISK_SDI_PATH
ramdisksdipath
BCDE_DEVICE_TYPE_RAMDISK_IMAGE_LENGTH
ramdiskimagelength
BCDE_DEVICE_TYPE_RAMDISK_EXPORT_AS_CD
exportascd
BCDE_DEVICE_TYPE_RAMDISK_TFTP_BLOCK_SIZE
ramdisktftpblocksize
BCDE_DEVICE_TYPE_RAMDISK_TFTP_WINDOW_SIZE
ramdisktftpwindowsize
BCDE_DEVICE_TYPE_RAMDISK_MULTICAST_ENABLED
ramdiskmcenabled
BCDE_DEVICE_TYPE_RAMDISK_MULTICAST_TFTP_FALLBACK
ramdiskmctftpfallback
BCDE_DEVICE_TYPE_RAMDISK_TFTP_VAR_WINDOW
ramdisktftpvarwindow
BCDE_DEVICE_TYPE_VHD_RAMDISK_BOOT
vhdramdiskboot
BCDE_DEVICE_TYPE_COMPOSITE_PRIMARY_DEVICE
primarydevice
BCDE_DEVICE_TYPE_COMPOSITE_SECONDARY_DEVICE
secondarydevice
BCDE_DEVICE_TYPE_SPACES_DISK_DEVICE
spacesdiskdevice
BCDE_DEVICE_TYPE_CIMFS_ROOT_DIRECTORY
cimfsrootdirectory
BCDE_DEVICE_TYPE_CIMFS_PARENT_DEVICE
cimfsparentdevice
BCDE_BOOTMGR_TYPE_DISPLAY_ORDER
BCDE_BOOTMGR_TYPE_BOOT_SEQUENCE
BCDE_BOOTMGR_TYPE_STARTUP_SEQUENCE
startupsequence
BCDE_BOOTMGR_TYPE_DEFAULT_OBJECT
BCDE_BOOTMGR_TYPE_TIMEOUT
BCDE_BOOTMGR_TYPE_ATTEMPT_RESUME
BCDE_BOOTMGR_TYPE_RESUME_OBJECT
resumeobject
BCDE_BOOTMGR_TYPE_TOOLS_DISPLAY_ORDER
BCDE_BOOTMGR_TYPE_DISPLAY_BOOT_MENU
displaybootmenu
BCDE_BOOTMGR_TYPE_NO_ERROR_DISPLAY
noerrordisplay
BCDE_BOOTMGR_TYPE_BCD_DEVICE
bcddevice
BCDE_BOOTMGR_TYPE_BCD_FILEPATH
bcdfilepath
BCDE_BOOTMGR_TYPE_CUSTOM_ACTIONS_LIST
customactions
BCDE_BOOTMGR_TYPE_PERSIST_BOOT_SEQUENCE
persistbootsequence
BCDE_BOOTMGR_TYPE_SKIP_STARTUP_SEQUENCE
skipstartupsequence
BCDE_BOOTMGR_TYPE_NEXT_ENTRY_ON_FAILURE
nextentryonfailure
BCDE_BOOTMGR_TYPE_PROCESS_CUSTOM_ACTIONS_FIRST
processcustomactionsfirst
BCDE_BOOTMGR_TYPE_HIBERBOOT
hiberboot
BCDE_BOOTMGR_TYPE_FVE_RECOVERY_URL
fverecoveryurl
BCDE_BOOTMGR_TYPE_FVE_RECOVERY_MESSAGE
fverecoverymessage
BCDE_BOOTMGR_TYPE_BOOT_FLIGHT_BOOTMGR
flightedbootmgr
BCDE_BOOTMGR_TYPE_ALTERNATE_BOOT_DEVICE
alternatebootdevice
BCDE_BOOTMGR_TYPE_CACHE_BOOT_BCD
cachebootbcd
BCDE_OSLOADER_TYPE_OS_DEVICE
osdevice
BCDE_OSLOADER_TYPE_SYSTEM_ROOT
systemroot
BCDE_OSLOADER_TYPE_ASSOCIATED_RESUME_OBJECT
BCDE_OSLOADER_TYPE_DETECT_KERNEL_AND_HAL
detecthal
BCDE_OSLOADER_TYPE_KERNEL_PATH
kernel
BCDE_OSLOADER_TYPE_HAL_PATH
BCDE_OSLOADER_TYPE_DBG_TRANSPORT_PATH
dbgtransport
BCDE_OSLOADER_TYPE_NX_POLICY
BCDE_OSLOADER_TYPE_PAE_POLICY
BCDE_OSLOADER_TYPE_WINPE
winpe
BCDE_OSLOADER_TYPE_DISABLE_CRASH_AUTOREBOOT
nocrashautoreboot
BCDE_OSLOADER_TYPE_LAST_GOOD_SETTINGS
lastknowngood
BCDE_OSLOADER_TYPE_NO_LOW_MEMORY
nolowmem
BCDE_OSLOADER_TYPE_REMOVE_MEMORY
removememory
BCDE_OSLOADER_TYPE_INCREASE_USER_VA
increaseuserva
BCDE_OSLOADER_TYPE_PERFORMANCE_DATA_MEMORY
perfmem
BCDE_OSLOADER_TYPE_USE_VGA_DRIVER
BCDE_OSLOADER_TYPE_DISABLE_BOOT_DISPLAY
quietboot
BCDE_OSLOADER_TYPE_BOOTUX_POLICY
bootux
BCDE_OSLOADER_TYPE_DISABLE_VESA_BIOS
novesa
BCDE_OSLOADER_TYPE_DISABLE_VGA_MODE
novga
BCDE_OSLOADER_TYPE_CLUSTERMODE_ADDRESSING
clustermodeaddressing
BCDE_OSLOADER_TYPE_USE_PHYSICAL_DESTINATION
usephysicaldestination
BCDE_OSLOADER_TYPE_RESTRICT_APIC_CLUSTER
restrictapiccluster
BCDE_OSLOADER_TYPE_EVSTORE
evstore
BCDE_OSLOADER_TYPE_USE_LEGACY_APIC_MODE
uselegacyapicmode
BCDE_OSLOADER_TYPE_X2APIC_POLICY
x2apicpolicy
BCDE_OSLOADER_TYPE_BOOT_PROCESSOR_ONLY
onecpu
BCDE_OSLOADER_TYPE_NUMBER_OF_PROCESSORS
numproc
BCDE_OSLOADER_TYPE_MAXIMUM_PROCESSORS
maxproc
BCDE_OSLOADER_TYPE_MAXIMIZE_GROUPS_CREATED
maxgroup
BCDE_OSLOADER_TYPE_GROUP_SIZE
groupsize
BCDE_OSLOADER_TYPE_FORCE_GROUP_AWARENESS
groupaware
BCDE_OSLOADER_TYPE_PROCESSOR_CONFIGURATION_FLAGS
configflags
BCDE_OSLOADER_TYPE_USE_FIRMWARE_PCI_SETTINGS
usefirmwarepcisettings
BCDE_OSLOADER_TYPE_MSI_POLICY
BCDE_OSLOADER_TYPE_PCI_EXPRESS_POLICY
pciexpress
BCDE_OSLOADER_TYPE_SAFEBOOT
safeboot
BCDE_OSLOADER_TYPE_SAFEBOOT_ALTERNATE_SHELL
safebootalternateshell
BCDE_OSLOADER_TYPE_LOG_INITIALIZATION
bootlog
BCDE_OSLOADER_TYPE_SOS
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_ENABLED
BCDE_OSLOADER_TYPE_DEBUGGER_HAL_BREAKPOINT
halbreakpoint
BCDE_OSLOADER_TYPE_USE_PLATFORM_CLOCK
useplatformclock
BCDE_OSLOADER_TYPE_TSC_SYNC_POLICY
tscsyncpolicy
BCDE_OSLOADER_TYPE_KERNEL_EMS_ENABLED
BCDE_OSLOADER_TYPE_DRIVER_LOAD_FAILURE_POLICY
driverloadfailurepolicy
BCDE_OSLOADER_TYPE_BOOT_STATUS_POLICY
bootstatuspolicy
BCDE_OSLOADER_TYPE_TPM_BOOT_ENTROPY_POLICY
tpmbootentropy
BCDE_OSLOADER_TYPE_FORCE_LEGACY_PLATFORM
forcelegacyplatform
BCDE_OSLOADER_TYPE_USE_PLATFORM_TICK
useplatformtick
BCDE_OSLOADER_TYPE_DISABLE_DYNAMIC_TICK
disabledynamictick
BCDE_OSLOADER_TYPE_DISABLE_ELAM_DRIVERS
disableelamdrivers
BCDE_OSLOADER_TYPE_BOOT_MENU_POLICY
bootmenupolicy
BCDE_OSLOADER_TYPE_ADVANCED_OPTIONS_ONE_TIME
onetimeadvancedoptions
BCDE_OSLOADER_TYPE_OPTIONS_EDIT_ONE_TIME
onetimeoptionsedit
BCDE_OSLOADER_TYPE_FVE_CLAIMED_DEVICE_LOCK_COUNTER
claimedtpmcounter
BCDE_OSLOADER_TYPE_MANUFACTURING_MODE
mfgmode
BCDE_OSLOADER_TYPE_SYSTEM_DATA_DEVICE
systemdatadevice
BCDE_OSLOADER_TYPE_OS_DATA_DEVICE
osdatadevice
BCDE_OSLOADER_TYPE_BSP_DEVICE
bspdevice
BCDE_OSLOADER_TYPE_BSP_FILEPATH
bspfilepath
BCDE_OSLOADER_TYPE_HYPERVISOR_LAUNCH_TYPE
hypervisorlaunchtype
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_ENABLED
hypervisordebug
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_TYPE
hypervisordebugtype
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_PAGES
hypervisordebugpages
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_PORT_NUMBER
hypervisordebugport
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_BAUDRATE
hypervisorbaudrate
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_1394_CHANNEL
hypervisorchannel
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_HOST_IP
hypervisorhostip
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_HOST_PORT
hypervisorhostport
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_KEY
hypervisorusekey
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_BUSPARAMS
hypervisorbusparams
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_DHCP
hypervisordhcp
BCDE_OSLOADER_TYPE_HYPERVISOR_SLAT_DISABLED
hypervisordisableslat
BCDE_OSLOADER_TYPE_HYPERVISOR_NUM_PROC
hypervisornumproc
BCDE_OSLOADER_TYPE_HYPERVISOR_ROOT_PROC
hypervisorrootproc
BCDE_OSLOADER_TYPE_HYPERVISOR_ROOT_PROC_NUMA_NODES
hypervisorrootprocnumanodes
BCDE_OSLOADER_TYPE_HYPERVISOR_ROOT_PROC_NUMA_NODE_LPS
hypervisorrootprocnumanodelps
BCDE_OSLOADER_TYPE_HYPERVISOR_ROOT_PROC_PER_NODE
hypervisorrootprocpernode
BCDE_OSLOADER_TYPE_HYPERVISOR_ROOT_PROC_PER_CORE
hypervisorrootprocpercore
BCDE_OSLOADER_TYPE_HYPERVISOR_USE_LARGE_VTLB
hypervisoruselargevtlb
BCDE_OSLOADER_TYPE_HYPERVISOR_IOMMU_POLICY
hypervisoriommupolicy
BCDE_OSLOADER_TYPE_HYPERVISOR_USE_VAPIC
hypervisorusevapic
BCDE_OSLOADER_TYPE_HYPERVISOR_LOAD_OPTIONS
hypervisorloadoptions
BCDE_OSLOADER_TYPE_HYPERVISOR_MSR_FILTER_POLICY
hypervisormsrfilterpolicy
BCDE_OSLOADER_TYPE_HYPERVISOR_MMIO_NX_POLICY
hypervisormmionxpolicy
BCDE_OSLOADER_TYPE_HYPERVISOR_ENFORCED_CODE_INTEGRITY
hypervisorenforcedcodeintegrity
BCDE_OSLOADER_TYPE_HYPERVISOR_SCHEDULER_TYPE
hypervisorschedulertype
BCDE_OSLOADER_TYPE_HYPERVISOR_PERFMON
hypervisorperfmon
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_HOST_IPV6
hypervisorhostipv6
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_TARGET_IP
hypervisortargetip
BCDE_OSLOADER_TYPE_HYPERVISOR_DEBUGGER_NET_GATEWAY_IP
hypervisorgatewayip
BCDE_RESUME_LOADER_TYPE_HIBERFILE_DEVICE
filedevice
BCDE_RESUME_LOADER_TYPE_HIBERFILE_PATH
filepath
BCDE_RESUME_LOADER_TYPE_USE_CUSTOM_SETTINGS
customsettings
BCDE_RESUME_LOADER_TYPE_X86_PAE_MODE
BCDE_RESUME_LOADER_TYPE_ASSOCIATED_OS_DEVICE
associatedosdevice
BCDE_RESUME_LOADER_TYPE_DEBUG_OPTION_ENABLED
debugoptionenabled
BCDE_RESUME_LOADER_TYPE_BOOTUX_POLICY
BCDE_RESUME_LOADER_TYPE_BOOT_MENU_POLICY
BCDE_LEGACY_LOADER_TYPE_BPB_STRING
bpbstring
BCDE_STARTUP_TYPE_PXE_SOFT_REBOOT
pxesoftreboot
BCDE_STARTUP_TYPE_PXE_APPLICATION_NAME
applicationname
BCDE_MEMTEST_TYPE_PASS_COUNT
passcount
BCDE_MEMTEST_TYPE_TESTMIX
testmix
BCDE_MEMTEST_TYPE_CACHE_ENABLE
cacheenable
BCDE_MEMTEST_TYPE_FAILURES_ENABLED
failuresenabled
BCDE_MEMTEST_TYPE_STRIDE_FAILURE_COUNT
stridefailcount
BCDE_MEMTEST_TYPE_INVC_FAILURE_COUNT
invcfailcount
BCDE_MEMTEST_TYPE_MATS_FAILURE_COUNT
matsfailcount
BCDE_MEMTEST_TYPE_RAND_FAILURE_COUNT
randfailcount
BCDE_MEMTEST_TYPE_CHCKR_FAILURE_COUNT
chckrfailcount
BCDE_OSLOADER_TYPE_XSAVEPOLICY
xsavepolicy
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE0
xsaveaddfeature0
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE1
xsaveaddfeature1
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE2
xsaveaddfeature2
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE3
xsaveaddfeature3
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE4
xsaveaddfeature4
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE5
xsaveaddfeature5
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE6
xsaveaddfeature6
BCDE_OSLOADER_TYPE_XSAVEADDFEATURE7
xsaveaddfeature7
BCDE_OSLOADER_TYPE_XSAVEREMOVEFEATURE
xsaveremovefeature
BCDE_OSLOADER_TYPE_XSAVEPROCESSORSMASK
xsaveprocessorsmask
BCDE_OSLOADER_TYPE_XSAVEDISABLE
xsavedisable
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_TYPE
kerneldebugtype
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_PORT_NUMBER
kerneldebugport
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_PORT_ADDRESS
kerneldebugaddress
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_BAUDRATE
kernelbaudrate
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_1394_CHANNEL
kernelchannel
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_USB_TARGETNAME
kerneltargetname
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_HOST_IP
kernelhostip
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_HOST_PORT
kernelport
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_KEY
kernelkey
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_BUS_PARAMETERS
kernelbusparams
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_DHCP
kerneldhcp
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_HOST_IPV6
kernelhostipv6
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_TARGET_IP
kerneltargetip
BCDE_OSLOADER_TYPE_KERNEL_DEBUGGER_NET_GATEWAY_IP
kernelgatewayip
BCDE_OSLOADER_TYPE_DTRACE_ENABLED
dtrace
BCDE_OSLOADER_TYPE_IMC_HIVE_NAME
imchivename
BCDE_OSLOADER_TYPE_IMC_DEVICE
imcdevice
BCDE_OSLOADER_TYPE_OS_ARC_DEVICE
osarcdevice
BCDE_OSLOADER_TYPE_VSM_LAUNCH_TYPE
vsmlaunchtype
BCDE_OSLOADER_TYPE_EVENT_LOGGING_ENABLED
BCDE_GLOBAL_TYPE_BOOTFLOW
bootflow
BCDE_FFULOADER_TYPE_ONESHOTSKIP_FFU_UPDATE
skipffumode
BCDE_FFULOADER_TYPE_FORCE_FFU
forceffumode
BCDE_CHARGING_TYPE_BOOT_THRESHOLD
chargethreshold
BCDE_CHARGING_TYPE_OFF_MODE_CHARGING
offmodecharging
BCDE_TEMPLATE_TYPE_ELEMENTS_TO_MIGRATE_LIST
elementstomigrate
BCDE_TEMPLATE_TYPE_MIGRATE_ALL_ELEMENTS
migrateallelements
BCDE_MOBILESTARTUP_TYPE_ENABLE_BOOT_DEBUG_POLICY
enablebootdebugpolicy
BCDE_MOBILESTARTUP_TYPE_ENABLE_BOOT_ORDER_CLEAN
enablebootorderclean
BCDE_MOBILESTARTUP_TYPE_ENABLE_DEVICE_ID
enabledeviceid
BCDE_MOBILESTARTUP_TYPE_ENABLE_FFU_LOADER
enableffuloader
BCDE_MOBILESTARTUP_TYPE_ENABLE_IU_LOADER
enableiuloader
BCDE_MOBILESTARTUP_TYPE_ENABLE_MASS_STORAGE
enablemassstorage
BCDE_MOBILESTARTUP_TYPE_ENABLE_RPMB_PROVISIONING
enablerpmbprovisioning
BCDE_MOBILESTARTUP_TYPE_ENABLE_SECURE_BOOT_POLICY
enablesecurebootpolicy
BCDE_MOBILESTARTUP_TYPE_ENABLE_START_CHARGE
enablestartcharge
BCDE_MOBILESTARTUP_TYPE_ENABLE_RESET_TPM
enableresettpm
PORT_NUMBER
GEN_ADDR
SPI_MAX311XE
PL011
Q8X60
NVIDIA
UEFI_DBGPORT
APM88XXXX
Q8X74
SAM5250
SBSA32
ARM_DCC
BCM2835
SDM845
MM16550
SDM845v2
IALPSS
GPT Sig:
MBR Sig:%x 
Raw Number:%x 
type unknown
Rmv disk %x
CDROM %x
RAMDISK 
Image:%I64x/%I64x 
File 
Block I/O - type unknown
Part 
PartEx 
Eltorito:%x 
%I64x 
Serial 
(%hs) 
(Unk %x) 
Port:%x
Address:%I64x
VMBUS 
InterfaceType: 
 InterfaceInstance: 
COMPOSITE 
PrimaryDeviceType: %u
 SecondaryDeviceType: %u
CIMFS 
BOOT DEVICE
Unknown device type
{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
{bootmgr}
{fwbootmgr}
{memdiag}
{legacy}
{ntldr}
{current}
{default}
{ramdiskoptions}
{dbgsettings}
{eventsettings}
{emssettings}
{badmemory}
{globalsettings}
{bootloadersettings}
{resumeloadersettings}
{hypervisorsettings}
{kerneldbgsettings}
bcdedit.pdb
.text$mn
.text$mn$00
.text$x
PAGECMRC
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.gehcont
.gfids
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
bcdedit.exe
ORCloseHive
ORCloseKey
ORCreateHive
ORCreateHiveEx
ORCreateKey
ORDeleteKey
ORDeleteValue
OREnumKey
OREnumValue
ORFlushHive
ORGetKeySecurity
ORGetValue
ORGetVirtualFlags
OROpenHive
OROpenHiveByHandle
OROpenKey
ORQueryInfoKey
ORQueryInfoKeyEx
ORQueryInfoKeyValueEx
ORRenameKey
ORSaveHive
ORSaveHiveEx
ORSaveHiveToHandle
ORSetKeySecurity
ORSetValue
ORSetVirtualFlags
wcscpy_s
swprintf_s
_wsetlocale
fwprintf
fflush
_wcsnicmp
_wtoi
_wcsicmp
wcstoul
_wcstoui64
_ui64tow_s
wcschr
_wtol
wcsrchr
_vsnwprintf
iswspace
towupper
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
__C_specific_handler
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
RtlAllocateHeap
RtlNtStatusToDosError
RtlFreeHeap
RtlIpv6StringToAddressW
RtlInitUnicodeString
RtlGUIDFromString
RtlInitAnsiString
RtlAnsiStringToUnicodeString
RtlUnicodeStringToAnsiString
RtlCompareMemory
RtlFreeUnicodeString
RtlDosPathNameToNtPathName_U
RtlStringFromGUID
NtOpenFile
NtClose
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
FormatMessageW
LocalFree
GetModuleFileNameW
LoadLibraryExW
GetLastError
GetProcAddress
FreeLibrary
SetLastError
GetConsoleOutputCP
GetVolumeNameForVolumeMountPointW
QueryDosDeviceW
GetStdHandle
GetFileType
GetConsoleMode
WriteConsoleW
WideCharToMultiByte
WriteFile
CreateFileW
CloseHandle
DeviceIoControl
Sleep
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
GetModuleHandleW
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
EnterCriticalSection
GetSecurityDescriptorLength
LeaveCriticalSection
DeleteCriticalSection
IsValidSecurityDescriptor
DestroyPrivateObjectSecurity
SetSecurityDescriptorGroup
MakeSelfRelativeSD
InitializeCriticalSectionAndSpinCount
InitializeSecurityDescriptor
GetSecurityDescriptorControl
TlsAlloc
SetSecurityDescriptorOwner
TlsGetValue
TlsFree
SetSecurityDescriptorDacl
TlsSetValue
GetFinalPathNameByHandleW
ReadFile
GetFileSizeEx
SetEndOfFile
SetFilePointerEx
FlushFileBuffers
AddAccessAllowedAce
GetLengthSid
SetPrivateObjectSecurityEx
InitializeAcl
IsValidSid
InitializeSid
CreatePrivateObjectSecurityWithMultipleInheritance
GetSidLengthRequired
GetSidSubAuthority
GetAce
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-heap-obsolete-l1-1-0.dll
api-ms-win-core-libraryloader-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-console-l1-1-0.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
CryptAcquireContextA
CryptGenRandom
CryptReleaseContext
CRYPTSP.dll
__iob_func
_vsnwprintf_s
wcscat_s
_ultow_s
strcpy_s
wcsncpy_s
wcsstr
wcsnlen
_wcsupr
strncmp
_snwscanf_s
_wcslwr
_aligned_free
_aligned_malloc
malloc
wcsncmp
vswprintf_s
_vscwprintf
ZwWaitForSingleObject
ZwQueryKey
ZwReleaseMutant
ZwOpenFile
ZwOpenMutant
ZwClose
ZwQuerySystemInformation
RtlAppendUnicodeToString
ZwQueryAttributesFile
ZwQuerySymbolicLinkObject
ZwDeviceIoControlFile
ZwQueryDirectoryObject
ZwOpenSymbolicLinkObject
ZwOpenDirectoryObject
RtlLengthSecurityDescriptor
RtlSetOwnerSecurityDescriptor
RtlSetDaclSecurityDescriptor
ZwCreateFile
ZwCreateKey
ZwLoadKey
RtlAddAccessAllowedAceEx
RtlAllocateAndInitializeSid
RtlLengthSid
ZwDeleteValueKey
ZwSaveKey
RtlFreeSid
ZwDeleteKey
ZwEnumerateKey
ZwQueryValueKey
RtlCreateAcl
ZwSetSecurityObject
ZwUnloadKey
RtlCreateSecurityDescriptor
ZwSetValueKey
ZwOpenKey
LdrGetProcedureAddress
ZwQueryVolumeInformationFile
LdrGetDllHandle
ZwQueryInformationProcess
ZwDeleteFile
ZwQueryInformationFile
ZwOpenProcess
NtQuerySystemInformation
ZwAllocateUuids
NtAdjustPrivilegesToken
NtOpenProcessTokenEx
NtSetInformationThread
NtOpenThreadTokenEx
RtlImpersonateSelf
NtOpenSymbolicLinkObject
NtOpenKey
NtQuerySymbolicLinkObject
NtDeviceIoControlFile
NtSetValueKey
NtQueryValueKey
NtDeleteKey
NtQueryBootEntryOrder
NtQueryBootOptions
NtSetSecurityObject
NtTranslateFilePath
NtOpenDirectoryObject
NtQueryDirectoryObject
NtEnumerateBootEntries
NtCreateKey
RtlUpcaseUnicodeChar
RtlRunOnceComplete
RtlRunOnceBeginInitialize
RtlFindNextForwardRunClear
RtlNumberOfSetBits
RtlInitializeSRWLock
RtlReleaseSRWLockExclusive
RtlAcquireSRWLockExclusive
SearchPathW
RegQueryValueExW
GetSystemDefaultUILanguage
GetLocaleInfoEx
GetUserDefaultUILanguage
RegOpenKeyExW
GetLocaleInfoW
GetVersionExW
UnmapViewOfFile
LCIDToLocaleName
FindResourceExW
LoadResource
RegCloseKey
CreateFileMappingW
MapViewOfFile
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-localization-obsolete-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
memcmp
memcpy
memmove
memset
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
    version="5.1.0.0"
    processorArchitecture="amd64"
    name="Microsoft.Windows.OSLoader.BCDEdit"
    type="win32"
<description>Boot Configuration Data Editor</description>
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
        <requestedPrivileges>
            <requestedExecutionLevel
                level="asInvoker"
                uiAccess="false"
            />
        </requestedPrivileges>
    </security>
</trustInfo>
</assembly>
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Boot Configuration Data Editor
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
bcdedit.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
bcdedit.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Unknown entry type (%1!08x!)
-----------------------------
Firmware Boot Manager
---------------------
Windows Boot Manager
--------------------
Windows Boot Loader
-------------------
Resume from Hibernate
---------------------
Windows Memory Tester
---------------------
Windows Legacy OS Loader
------------------------
Windows Legacy Setup Loader
---------------------------
Real-mode Boot Sector
---------------------
Windows Setup
-------------
OS Target Template
------------------
Setup Ramdisk Options
---------------------
Windows Boot Application (%1!08x!)
-----------------------------------
Firmware Application (%1!08x!)
-------------------------------
Legacy Loader Application (%1!08x!)
------------------------------------
Real-mode Application (%1!08x!)
--------------------------------
EMS Settings
------------
Debugger Settings
-----------------
Inherited Settings (%1!08x!)
-----------------------------
Device options
--------------
identifier              %1
RAM Defects
-----------
Global Settings
---------------
Boot Loader Settings
--------------------
Resume Loader Settings
----------------------
Hypervisor Settings
-------------------
 - secondary plex %0
Kernel Debugger Settings
------------------------
store path:             %1
%1!-24s!%2
%1!-24s!%2!I64u!
%1!-24s!0x%2!I64x!
The entry was successfully copied to %1.
The entry %1 was successfully created.
The entry was successfully mirrored to %1.
There are no matching objects or the store is empty.
The specified store parameter is not valid.
Run bcdedit /? for command line assistance.
The verbose command line parameter is not valid.
Run "bcdedit /?" for command line assistance.
The specified entry type is invalid.
Run "bcdedit /?" for command line assistance.
The specified format option is invalid.
Run "bcdedit /?" for command line assistance.
The boot configuration data store could not be opened.
There was an error enumerating the boot configuration data entries.
The copy command specified is not valid.
Run "bcdedit /?" for command line assistance.
A description for the new entry must be specified.
Run "bcdedit /?" for command line assistance.
The specified entry identifier is not valid.
An error occurred while attempting the specified copy operation.
An error occurred while attempting to set the entry description.
An error occurred while attempting to obtain the target entry's identifier.
The delete command specified is not valid.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting to reference the specified entry.
This entry cannot be deleted unless the /f switch is specified on the command
line.  Run bcdedit /? for more information.
An error occurred while attempting to delete the specified entry.
The create command specified is not valid.
Run "bcdedit /?" for command line assistance.
You may not use the current boot entry ID for this operation.
Run "bcdedit /?" for command line assistance.
This command line is invalid for a well-known identifier.
Run "bcdedit /?" for command line assistance.
The application type switch specified is not valid.
Run "bcdedit /?" for command line assistance.
The inherited entry type specified is not valid.
Run "bcdedit /?" for command line assistance.
The device entry type specified is not valid.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting the specified create operation.
An error occurred while attempting to delete the specified data element.
The set command specified is not valid.
Run "bcdedit /?" for command line assistance.
The element data type specified is not recognized, or does not apply to the
specified entry.
Run "bcdedit /?" for command line assistance.
The device is not valid as specified.
Run "bcdedit /?" for command line assistance.
The entry data is not valid as specified.
Run "bcdedit /?" for command line assistance.
The entry list data is not valid as specified.
Run "bcdedit /?" for command line assistance.
The integer data is not valid as specified.
Run "bcdedit /?" for command line assistance.
The boolean data is not valid as specified.
Run "bcdedit /?" for command line assistance.
An error has occurred setting the element data.
The timeout value is not valid as specified.
Run "bcdedit /?" for command line assistance.
The default entry is not valid as specified.
Run "bcdedit /?" for command line assistance.
The debugger type specified is not valid.
Run "bcdedit /?" for command line assistance.
The settings are not valid for the debugger type specified.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting to access the boot configuration data.
An error occurred while attempting to modify the debugger settings.
The parameters are not valid.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting to access the specified entry.
This command can only modify a Windows Boot Loader entry.
An unknown command was specified.
Run "bcdedit /?" for command line assistance.
The specified EMS settings are not valid.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting to access the boot configuration data.
An error occurred while attempting to modify the EMS settings.
The specified data type is unknown or invalid.
Run "bcdedit /?" for command line assistance.
The specified create store command is invalid.
Run "bcdedit /?" for command line assistance.
The store creation operation has failed.
The store import command is invalid.
Run "bcdedit /?" for command line assistance.
The store import operation has failed.
An invalid combination of switches has been specified.
Run "bcdedit /?" for command line assistance.
An error has occurred reading the existing display order.
The specified command line is not valid.
Run "bcdedit /?" for command line assistance.
The baud rate must be 9600, 19200, 38400, 57600, 115200, 230400 or higher.
Run "bcdedit /?" for command line assistance.
Valid channel numbers are any integer between 0 and 62, inclusive.
Run "bcdedit /?" for command line assistance.
The store export command is invalid.
Run "bcdedit /?" for command line assistance.
The store export operation has failed.
Invalid command line switch: /%1
Run "bcdedit /?" for command line assistance.
An error has occurred attempting to modify the display order.
There are no debugger settings present.
An error occurred while attempting the specified create operation.
The specified entry already exists.
An error occurred while attempting to modify the hypervisor settings.
An error occurred while attempting to access the boot configuration data.
There are no hypervisor settings present.
The set system store device command is invalid.
Run "bcdedit /?" for command line assistance.
The set system store device command has failed.
An error occurred while attempting the specified mirror operation.
The mirror command specified is not valid.
Run "bcdedit /?" for command line assistance.
The port must be greater than 49151 and less than 65536, or equal to the
IANA reserved KDNET port value of 5364.
Run "bcdedit -dbgsettings /?" for command line assistance.
The key must be specified in base 36.  Only digits 0-9 and letters a-z can be
used when specifying the key.  Each of the four 64 bit key chunks may be
specified with up to 13 characters and must be separated by a period. None of
the key chunks can be zero.  1.1.1.1, 1.2.3.4, theprevious.keys.arenot.secure,
automatically.generated.keysare.safer4you are all examples of valid keys.
Run "bcdedit -dbgsettings /?" for command line assistance.
Failed to open a cryptographic service provider.  Automatic encryption key
generation failed.
Failed to generate an encryption key.
Failed to convert the encryption key to a string.
This platform does not support the cryptographic functions required to
automatically generate a key.  Please specify the key directly on the
command line.
Run "bcdedit -dbgsettings /?" for command line assistance.
There are no kernel debugger settings present.
An error occurred while attempting to modify the kernel debugger settings.
An error occurred while attempting to access the boot configuration data.
The remote event logging parameters are not valid.
Run "bcdedit /?" for command line assistance.
An error occurred while attempting to modify the remote event logging settings.
An error occurred while attempting to modify the remote event logging settings.
The debugger settings must be disabled to enable the remote event logging settings.
An error occurred while attempting to modify the debugger settings.
The remote event logging settings must be disabled to enable the debugger settings.
1394 debugging is no longer supported.  Please select another transport.
BCDEDIT - Boot Configuration Data Store Editor
The Bcdedit.exe command-line tool modifies the boot configuration data store.
The boot configuration data store contains boot configuration parameters and
controls how the operating system is booted. These parameters were previously
in the Boot.ini file (in BIOS-based operating systems) or in the nonvolatile
RAM entries (in Extensible Firmware Interface-based operating systems). You can
use Bcdedit.exe to add, delete, edit, and append entries in the boot
configuration data store.
For detailed command and option information, type bcdedit.exe /? <command>. For
example, to display detailed information about the /createstore command, type:
     bcdedit.exe /? /createstore
For an alphabetical list of topics in this help file, run "bcdedit /? TOPICS".
Commands that operate on a store
================================
/store          Used to specify a BCD store other than the current system default.
/createstore    Creates a new and empty boot configuration data store.
/export         Exports the contents of the system store to a file. This file
                can be used later to restore the state of the system store.
/import         Restores the state of the system store using a backup file
                created with the /export command.
/sysstore       Sets the system store device (only affects EFI systems, does
                not persist across reboots, and is only used in cases where
                the system store device is ambiguous).
Commands that operate on entries in a store
===========================================
/copy           Makes copies of entries in the store.
/create         Creates new entries in the store.
/delete         Deletes entries from the store.
/mirror         Creates mirror of entries in the store.
Run bcdedit /? ID for information about identifiers used by these commands.
Commands that operate on entry options
======================================
/deletevalue    Deletes entry options from the store.
/set            Sets entry option values in the store.
Run bcdedit /? TYPES for a list of datatypes used by these commands.
Run bcdedit /? FORMATS for a list of valid data formats.
Commands that control output
============================
/enum           Lists entries in the store.
/v              Command-line option that displays entry identifiers in full,
                rather than using names for well-known identifiers.
                Use /v by itself as a command to display entry identifiers
                in full for the ACTIVE type.
Running "bcdedit" by itself is equivalent to running "bcdedit /enum ACTIVE".
Commands that control the boot manager
======================================
/bootsequence   Sets the one-time boot sequence for the boot manager.
/default        Sets the default entry that the boot manager will use.
/displayorder   Sets the order in which the boot manager displays the
                multiboot menu.
/timeout        Sets the boot manager time-out value.
/toolsdisplayorder  Sets the order in which the boot manager displays
                    the tools menu.
Commands that control Emergency Management Services for a boot application
==========================================================================
/bootems        Enables or disables Emergency Management Services
                for a boot application.
/ems            Enables or disables Emergency Management Services for an
                operating system entry.
/emssettings    Sets the global Emergency Management Services parameters.
Command that control debugging
==============================
/bootdebug      Enables or disables boot debugging for a boot application.
/dbgsettings    Sets the global debugger parameters.
/debug          Enables or disables kernel debugging for an operating system
                entry.
/hypervisorsettings  Sets the hypervisor parameters.
Command that control remote event logging
=========================================
/eventsettings  Sets the global remote event logging parameters.
/event          Enables or disables remote event logging for an operating
                system entry.
This command lists entries in a store. The /enum command is the default,
so running "bcdedit" without parameters is equivalent to running
"bcdedit /enum ACTIVE".
bcdedit [/store <filename>] /enum [<type> | <id>] [/v]
    <filename>  Specifies the store to be used. If this option is not
                specified, the system store is used. For more information,
                run "bcdedit /? store".
    <type>      Specifies the type of entries to be listed. <type> can be one
                of the following:
                ACTIVE      All entries in the boot manager display order. This
                            is the default.
                FIRMWARE    All firmware applications.
                BOOTAPP     All boot environment applications.
                BOOTMGR     The boot manager.
                OSLOADER    All operating system entries.
                RESUME      All resume from hibernation entries.
                INHERIT     All inherit entries.
                ALL         All entries.
    <id>        Specifies the identifier of the entry to be listed.  If an
                identifier is provided, then only the specified object will be
                listed. For information about identifiers, run "bcdedit /? ID".
    /v          Displays entry identifiers in full, rather than using
                names for well-known identifiers.
Examples:
The following command lists all operating system loader boot entries:
    bcdedit /enum OSLOADER
The following command lists all boot manager entries:
    bcdedit /enum BOOTMGR
The following command lists only the default boot entry:
    bcdedit /enum {default}
The following command lists only the specified operating system boot entry:
    bcdedit /enum {b38a9fc1-5690-11da-b795-e9ad3c5e0e3a}
This command creates a new entry in the boot configuration data store. If
a well-known identifier is specified, then the /application, /inherit and
/device options cannot be specified. If the <id> is not specified,
or if <id>is not well-known, then you must specify an /application, /inherit
or /device option.
bcdedit /create [{<id>}] [/d <description>] [/application <apptype> |
    /inherit [<apptype>] | /inherit DEVICE | /device]
    <id>                    Specifies the identifier to be used for the new
                            entry. For more information about identifiers, run
                            "bcdedit /? ID".
    <description>           Specifies the description to be applied to the new
                            entry.
    /application <apptype>  Specifies that the new entry must be an application
                            entry. <apptype> specifies the application type.
                            <apptype> can be one of the following:
                                BOOTAPP
                                BOOTSECTOR
                                OSLOADER
                                RESUME
                                STARTUP
                            If you use other application types instead of
                            one of these, you must also specify a well-known
                            identifier.
    /inherit [<apptype>]    Specifies that the new entry must be an inherit
                            entry, and <apptype> specifies the application
                            type. If <apptype> is not specified, then the entry
                            can be inherited by any entry. If specified,
                            <apptype> can be one of the following:
                                BOOTMGR
                                BOOTSECTOR
                                FWBOOTMGR
                                MEMDIAG
                                NTLDR
                                OSLOADER
                                RESUME
                            The modifier prevents the inherit entry from being
                            inherited by an application entry of <apptype>.
    /inherit DEVICE         Specifies that the new entry must be an inherit
                            entry, and that the entry can only be inherited by
                            a device options entry.
    /device                 Specifies that the new entry must be an additional
                            device options entry.
Examples:
The following command creates a NTLDR based OS loader entry (Ntldr):
    bcdedit /create {ntldr} /d "Earlier Windows OS Loader"
The following command creates a RAM disk additional options entry:
    bcdedit /create {ramdiskoptions}
The following command creates a new operating system boot entry:
    bcdedit /create /d "Windows Vista" /application osloader
The following command creates a new debugger settings entry:
    bcdedit /create {dbgsettings}
This command creates a copy of the specified boot entry.
bcdedit [/store <filename>] /copy {<id>} /d <description>
    <filename>      Specifies the store to be used. If this option is not
                    specified, the system store is used. For more information,
                    run "bcdedit /? store".
    <id>            Specifies the identifier of the entry to be copied.
                    For more information about identifiers, run
                    "bcdedit /? ID".
    <description>   Specifies the description to be applied to the new entry.
Example:
The following command creates a copy of the specified operating system boot
entry:
    bcdedit /copy {cbd971bf-b7b8-4885-951a-fa03044f5d71} /d "Copy of entry"
This command deletes an entry from the boot configuration data store.
bcdedit [/store <filename>] /delete <id> [/f] [/cleanup | /nocleanup]
    <filename>      Specifies the store to be used. If this option is not
                    specified, the system store is used. For more information,
                    run "bcdedit /? store".
    <id>            Specifies the identifier of the boot entry that you want to
                    delete. For more information about identifiers,
                    run "bcdedit /? ID".
    /f              Deletes the specified entry. Without this option, Bcdedit
                    will not delete any entries that have a well-known
                    identifier.
    /cleanup        Deletes the specified entry and removes the entry from the
                    display order. Any other references to the entry being
                    deleted will also be removed from the store.  When deleting
                    an OS loader entry, the associated resume from hibernation
                    entry is also deleted if it is not referenced by any other
                    OS loaders. This option is assumed unless /nocleanup is
                    specified.
    /nocleanup      Deletes the specified entry without removing the entry from
                    the display order.
Examples:
The following command deletes the specified operating system entry from the
store and removes the entry from the display order:
    bcdedit /delete {cbd971bf-b7b8-4885-951a-fa03044f5d71}
The following command deletes the specified operating system entry from the
store and removes the entry from the display order:
    bcdedit /delete {cbd971bf-b7b8-4885-951a-fa03044f5d71} /cleanup
The following command deletes the specified operating system entry from the
store without removing the entry from the display order:
    bcdedit /delete {cbd971bf-b7b8-4885-951a-fa03044f5d71} /nocleanup
The following command deletes the NTLDR based OS loader entry from the store:
    bcdedit /delete {ntldr} /f
This command sets an entry option value in the boot configuration data store.
bcdedit [/store <filename>] /set [{<id>}] <datatype> <value> [ /addfirst | /addlast | /remove ]
    <filename>  Specifies the store to be used. If this option is not
                specified, the system store is used. For more information,
                run "bcdedit /? store".
    <id>        Specifies the identifier of the entry to be modified.  If not
                specified, {current} is used. For more information about
                identifiers, run "bcdedit /? ID".
    <datatype>  Specifies the option data type that will be created or
                modified. Run "bcdedit /? TYPES" for more information about
                data types.
    <value>     Specifies the value that should be assigned to the option. The
                format of <value> depends on the data type specified. Run
                "bcdedit /? FORMATS" for more information about data formats.
    /addfirst   This switch can only be used if datatype is an object list.
                Adds the specified entry identifier to the top of the list.
                If this switch is specified, only a single entry identifier
                may be specified.  If the specified identifier is already
                in the list, it will be moved to the top of the list.
    /addlast    This switch can only be used if datatype is an object list.
                Adds the specified entry identifier to the end of the list.
                If this switch is specified, only a single entry identifier
                may be specified.  If the specified identifier is already
                in the list, it is moved to the end of the list.
    /remove     This switch can only be used if datatype is an object list.
                Removes the specified entry identifier from the list.
                If this switch is specified, only a single entry identifier
                may be specified.  If the identifier is not in the list
                then the operation has no effect. If the last entry is being
                removed, then the datatype value is deleted.
Examples:
The following command sets the application device to the partition C: for the
specified operating system entry:
    bcdedit /set {cbd971bf-b7b8-4885-951a-fa03044f5d71} device partition=C:
    NOTE: Use 'hd_partition=' syntax to explicitly disable automatic VHD
          detection, and create entries that are compatible for booting a
          virtual machine, i.e.,
    bcdedit /store F:\boot\bcd /set {default} device hd_partition=F:
The following command sets the OS device to a VHD file (C:\vdisks\vdisk01.vhd)
for the specified operating system entry:
    bcdedit /set {cbd971bf-b7b8-4885-951a-fa03044f5d71} osdevice
        vhd=[C:]\vdisks\disk01.vhd
The following command sets the application path to
\windows\system32\winload.exe for the specified operating system entry:
    bcdedit /set {cbd971bf-b7b8-4885-951a-fa03044f5d71} path
        \windows\system32\winload.exe
The following command sets the NX policy to OptIn for the current operating
system boot entry.
    bcdedit /set nx optin
This command deletes a data element from an entry in the boot configuration
data store.
bcdedit [/store <filename>] /deletevalue [<id>] <datatype>
    <filename>  Specifies the store to be used. If this option is not
                specified, the system store is used. For more information,
                run "bcdedit /? store".
    <id>        Specifies the identifier of the entry that will be modified. If
                not specified, {current} is used.  For more information about
                identifiers, run "bcdedit /? ID".
    <datatype>  Specifies the option that will be removed from the specified
                entry. Run "bcdedit /? TYPES" for more information about
                data types.
Examples:
The following command deletes the bootsequence option from the boot manager
entry:
    bcdedit /deletevalue {bootmgr} bootsequence
The following command deletes the Windows Preinstallation Environment (WinPE)
value from the current operating system boot entry:
    bcdedit /deletevalue winpe
The following command deletes the Windows PE value from the specified operating
system boot entry:
    bcdedit /deletevalue {cbd971bf-b7b8-4885-951a-fa03044f5d71} winpe
This command sets the time to wait, in seconds, before the boot manager selects
a default entry. For information about setting the default entry, run
"bcdedit /? default".
bcdedit /timeout <timeout>
    <timeout>   Specifies the time to wait, in seconds, before the boot manager
                selects a default entry.
Example:
The following command sets the boot manager <timeout> to 30 seconds:
    bcdedit /timeout 30
This command sets the default entry that the boot manager will use when the
timeout expires.
bcdedit /default <id>
    <id>    Specifies the identifier of the boot entry to be used as the
            default when the time-out expires. For information about
            identifiers, run "bcdedit /? ID".
Examples:
The following command sets the specified entry as the default boot manager
entry:
    bcdedit /default {cbd971bf-b7b8-4885-951a-fa03044f5d71}
The following command sets the NTLDR based OS loader as the default
entry:
    bcdedit /default {ntldr}
This command sets the display order to be used by the boot manager.
bcdedit /displayorder <id> [...] [ /addfirst | /addlast | /remove ]
    <id> [...]      Specifies a list of identifiers that make up the
                    display order.  At least one identifier must be specified
                    and they must be separated by spaces.  For more information
                    about identifiers, run "bcdedit /? ID".
    /addfirst       Adds the specified entry identifier to the top of
                    the display order.  If this switch is specified, only a
                    single entry identifier may be specified.  If the specified
                    identifier is already in the list, it will be moved to the
                    top of the list.
    /addlast        Adds the specified entry identifier to the end of
                    the display order.  If this switch is specified, only a
                    single entry identifier may be specified.  If the specified
                    identifier is already in the list, it is moved to the
                    end of the list.
    /remove         Removes the specified entry identifier from the
                    display order.  If this switch is specified, only a single
                    entry identifier may be specified.  If the identifier is
                    not in the list then the operation has no effect. If
                    the last entry is being removed, then the display order
                    value is deleted from the boot manager entry.
Examples:
The following command sets two OS entries and the NTLDR based OS loader in
the boot manager display order:
    bcdedit /displayorder {802d5e32-0784-11da-bd33-000476eba25f}
        {cbd971bf-b7b8-4885-951a-fa03044f5d71} {ntldr}
The following command adds the specified OS entry to the end of the boot
manager display order:
    bcdedit /displayorder {802d5e32-0784-11da-bd33-000476eba25f} /addlast
This command sets the one-time boot sequence to be used by the boot
manager.
bcdedit /bootsequence <id> [...] [ /addfirst | /addlast | /remove ]
    <id> [...]      Specifies a list of identifiers that make up the boot
                    sequence. You must specify at least one identifier and must
                    separate identifiers by spaces. For more information about
                    identifiers, run "bcdedit /? ID".
    /addfirst       Adds the specified entry identifier to the top of the boot
                    sequence.  If this switch is specified, only a single
                    identifier may be specified.  If the identifier is already
                    in the list, it is moved to the top of the list.
    /addlast        Adds the specified entry identifier to the end of the boot
                    sequence.  If this switch is specified, only a single
                    identifier may be specified.  If the identifier is already
                    in the list, it is moved to the end of the list.
    /remove         Removes the specified entry identifier from the boot
                    sequence.  If this switch is specified, only a single
                    entry identifier may be specified.  If the identifier is
                    not in the list then the operation has no effect. If
                    the last entry is being removed, then the boot sequence
                    value is deleted from the boot manager entry.
Examples:
The following command sets two OS entries and the NTLDR based OS loader in the
boot manager one-time boot sequence:
    bcdedit /bootsequence {802d5e32-0784-11da-bd33-000476eba25f}
        {cbd971bf-b7b8-4885-951a-fa03044f5d71} {ntldr}
The following command adds the specified OS entry to the end of the boot
manager one-time boot sequence:
    bcdedit /bootsequence {802d5e32-0784-11da-bd33-000476eba25f} /addlast
This command sets or displays the global debugger settings for the system.
This command does not enable or disable the debugger for any particular boot
entry.  To enable or disable the debugger for a particular boot entry, use
"bcdedit /debug < identifier> ON".  For information about identifiers, run
"bcdedit /? ID".
To set an individual global debugger setting, use
"bcdedit /set {dbgsettings} <type> <value>".  For information about valid
types, run "bcdedit /? TYPES".
bcdedit /dbgsettings [ <debugtype> [DEBUGPORT:<comport>] [BAUDRATE:<baud>]
                        [CHANNEL:<channel>] [TARGETNAME:<targetname>]
                        [HOSTIP:<ip>] [PORT:<port>] [KEY:<key>] [nodhcp]
                        [newkey] [/start <startpolicy>] [/noumex] ]
    <debugtype>     Specifies the type of debugger. <debugtype> can be one of
                    SERIAL, 1394, USB, NET or LOCAL.
    <comport>       For SERIAL debugging, specifies the serial port to use as
                    the debugging port. This is an optional setting.
    <baud>          For SERIAL debugging, specifies the baud rate to be used
                    for debugging. This is an optional setting.
    <channel>       For 1394 debugging, specifies the 1394 channel to be used
                    for debugging.
    <targetname>    For universal serial bus (USB) debugging, specifies the USB
                    target name to be used for debugging.
    <ip>            For network debugging, specifies the IPv4 address of the
                    host debugger.
    <port>          For network debugging, specifies the port to communicate
                    with on the host debugger.  Should be 49152 or higher.
    <key>           For network debugging, specifies the key with which to
                    encrypt the connection.  [0-9] and [a-z] allowed only.
    nodhcp          For network debugging prevents use of DHCP to obtain the
                    target IP address.
    newkey          For network debugging specifies that a new encryption key
                    should be generated for the connection.
    /start <startpolicy>   For all debugger types, this specifies the debugger
                    start policy.  <startpolicy> can be one of the following:
                        ACTIVE
                        AUTOENABLE
                        DISABLE.
                    If not specified, ACTIVE is the default.
    /noumex         If specified, this causes the kernel debugger to ignore any
                    user-mode exceptions.
Examples:
The following command displays the current global debugger settings:
    bcdedit /dbgsettings
The following command sets the global debugger settings to serial debugging
over com1 at 115,200 baud:
    bcdedit /dbgsettings SERIAL DEBUGPORT:1 BAUDRATE:115200
The following command sets the global debugger settings to 1394 debugging
using channel 23:
    bcdedit /dbgsettings 1394 CHANNEL:23
The following command sets the global debugger settings to USB debugging
using target name DEBUGGING:
    bcdedit /dbgsettings USB TARGETNAME:DEBUGGING
The following command sets the global debugger settings to network debugging
using IPv4 with a debugger host at 192.168.1.2 communicating on port 50000:
    bcdedit /dbgsettings NET HOSTIP:192.168.1.2 PORT:50000
The following command sets the global debugger settings to network debugging
using IPv6 with a debugger host at 2001:48:d8:2f:5e:c0:42:28:4f5b
communicating on port 50000:
    bcdedit /dbgsettings NET HOSTIPV6:2001:48:d8:2f:5e:c0:42:28:4f5b PORT:50000
The following command sets the global debugger settings to local debugging:
    bcdedit /dbgsettings LOCAL
This command enables or disables the kernel debugger for the specified boot
entry.
bcdedit /debug [<id>] { ON | OFF }
    <id>         Specifies the identifier of the entry to be modified.  Only
                 Windows boot loader entries may be specified.  If not
                 specified, {current} is used. For more information about
                 identifiers, run "bcdedit /? ID".
Examples:
The following command enables kernel debugging for the current Windows
operating system boot entry:
    bcdedit /debug ON
The following command disables kernel debugging for the specified operating
system entry:
    bcdedit /debug {cbd971bf-b7b8-4885-951a-fa03044f5d71} OFF
This command enables or disables the boot debugger for the specified boot
entry. Although this command works for any entry, it is only effective for boot
applications.
bcdedit /bootdebug [<id>] { ON | OFF }
    <id>    Specifies the identifier of the entry to be modified.
            For information about identifiers, run "bcdedit /? ID".
Examples:
The following command enables boot debugging for the Windows operating system
loader of the current operating system boot entry:
    bcdedit /bootdebug ON
The following command disables boot debugging for the Windows boot manager:
    bcdedit /bootdebug {bootmgr} OFF
This command sets the global Emergency Management Services settings for the
system. Emssettings does not enable or disable Emergency Management Services
for any particular boot entry.
bcdedit /emssettings [ BIOS ] | [ EMSPORT:<port> | [EMSBAUDRATE:<baudrate>] ]
    BIOS        Specifies that the system will use BIOS settings for the
                Emergency Management Services configuration. This works only
                on systems that have Emergency Management Services support
                provided by the BIOS.
    <port>      Specifies the serial port to use as the Emergency Management
                Services port. This should not be specified with the BIOS
                option.
    <baudrate>  Specifies the serial baud rate to use for Emergency Management
                Services. This command should not be specified with the BIOS
                option. <baudrate> is optional, and the default is 9,600 baud.
Examples:
The following command sets the Emergency Management Services parameters to use
BIOS settings:
    bcdedit /emssettings BIOS
The following command sets the Emergency Management Services parameters to use
com2: at 115,200 baud.
    bcdedit /emssettings EMSPORT:2 EMSBAUDRATE:115200
This command enables or disables Emergency Management Services for the
specified operating system boot entry.
bcdedit /ems [<id>] { ON | OFF }
    <id>    Specifies the identifier of the entry to be modified.  Only
            "Windows boot loader" entries can be specified. If not specified,
            {current} is used. For more information about identifiers, run
            "bcdedit /? ID".
Example:
The following command enables Emergency Management Services for the current
operating system boot entry:
    bcdedit /ems ON
This command enables or disables Emergency Management Services for the
specified entry.
bcdedit /bootems [<id>] { ON | OFF }
    <id>    Specifies the identifier of the entry to be modified. Although this
            command will work for any entry, it is only effective for boot
            applications.
Example:
The following command enables Emergency Management Services for the boot
manager:
    bcdedit /bootems {bootmgr} ON
This command-line option can be used with most Bcdedit commands to specify the
store to be used. If this option is not specified, then the system store is
used.
This option may not be used with the /createstore, /import and /export
commands.
bcdedit /store <filename>
    <filename>  Specifies the file name of the boot configuration data store.
                If the file name contains spaces, it must be enclosed in
                quotation marks ("").
Example:
The following commands list the active entries in the specified data store
file:
    bcdedit /store C:\DATA\BCD /enum ACTIVE
    bcdedit /store "C:\DATA\My BCD" /enum ACTIVE
bcdedit /createstore <filename>
    This command created a new empty boot configuration data store. The
    created store is not a system store.
    <filename>      Specifies the filename of the boot configuration data
                    store.  If the filename contains spaces, it must be
                    enclosed in quotation marks ("").
Example:
The following command creates the specified store file:
    bcdedit /createstore C:\DATA\BCD
bcdedit /import <filename> [/clean]
This command restores the state of the system store using a backup data file
previously generated using the /export command.  Any existing entries in the
system store are deleted before the import takes place.  This command is only
valid for the system store.
    <filename>      The name of the file that is imported into the system store.
                    If the filename contains spaces, it must be enclosed in
                    quotation marks ("").
    /clean          Specifies that all existing firmware boot entries should
                    be deleted (only affects EFI systems).
Example:
The following command imports the specified file into the system store.
    bcdedit /import "C:\Data\BCD Backup" /clean
bcdedit /export <filename>
This command exports the contents of the system store into a file.  This file
can be used later to restore the state of the system store.  This command is
only valid for the system store.
<filename>          The filename to be used as the destination for the export.
                    If the filename contains spaces, it must be enclosed in
                    quotation marks ("").
Example:
The following command exports the system store to the specified file:
    bcdedit /export "C:\Data\BCD Backup"
Usually, any well-known entry identifiers are replaced by their friendly
shorthand form.  Specifying /v as a command-line switch prevents this
replacement and displays all identifiers in full. Running "bcdedit /v" by
itself is equivalent to running "bcdedit /enum ACTIVE /v".
bcdedit /v
Example:
The following command lists the active entries in the system store with all
entry identifiers displayed in full.
    bcdedit /enum ACTIVE /v
bcdedit /toolsdisplayorder <id> [...] [ /addfirst | /addlast | /remove ]
This command will set the display order to be used by the boot manager when
displaying the tools menu.
    <id> [...]      Specifies a list of identifiers that make up the tools
                    display order.  At least one identifier must be specified
                    and they must be separated by spaces.  For more information
                    about identifiers, run "bcdedit /? ID".
    /addfirst       Adds the specified entry identifier to the top of
                    the tools display order.  If this switch is specified, only
                    a single entry identifier may be specified.  If the
                    specified identifier is already in the list, it is
                    moved to the top of the list.
    /addlast        Adds the specified entry identifier to the end of
                    the tools display order.  If this switch is specified, only
                    a single entry identifier may be specified.  If the
                    specified identifier is already in the list, it is
                    moved to the end of the list.
    /remove         Removes the specified entry identifier from the
                    tools display order.  If this switch is specified, only a
                    single entry identifier may be specified.  If the
                    identifier is not in the list, then the operation will have
                    no effect.  If the last entry is being removed, then the
                    tools display order value is deleted from the boot manager
                    entry.
Examples:
The following command sets two tools entries and the memory diagnostic in the
boot manager's tools display order:
    bcdedit /toolsdisplayorder {802d5e32-0784-11da-bd33-000476eba25f}
        {cbd971bf-b7b8-4885-951a-fa03044f5d71} {memdiag}
The following command adds the specified tool entry to the end of the boot
manager's tools display order:
    bcdedit /toolsdisplayorder {802d5e32-0784-11da-bd33-000476eba25f} /addlast
bcdedit /sysstore <devicename>
This command sets the system store device.  This command is only valid for EFI
systems in cases where the system store device is ambiguous.  This setting does
not persist across reboots.
<devicename>        The name of a system partition to set as the the system
                    store device.  The device must be a system partition.
Example:
The following command sets the system store device as specified:
    bcdedit /sysstore C:
IDENTIFIERS
Many of the Bcdedit commands require identifiers. An identifier
uniquely identifies entries contained in the store. An identifier takes the
form of a globally unique identifier, or GUID. A GUID has the following format,
where each "x" represents a hexadecimal digit.
    {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}
For example:
    {d2b69192-8f14-11da-a31f-ea816ab185e9}
The position of the dashes (-) and the braces at the beginning and end of the
GUID are required.
Several entries can be identified by well-known identifiers. If an entry has a
well-known identifier, BCDedit displays it in output unless the /v command-line
switch is used. For more information, run "bcdedit /? /v".
The well-known identifiers are as follows:
    {bootmgr}               Specifies the Windows boot manager entry.
    {fwbootmgr}             Specifies the firmware boot manager entry,
                            specifically on systems that implement the
                            Extensible Firmware Interface (EFI) specification.
    {memdiag}               Specifies the memory diagnostic application entry.
    {ntldr}                 Specifies a OS loader (Ntldr) that can be used
                            to start operating systems earlier than Windows
                            Vista.
    {current}               Specifies a virtual identifier that corresponds to
                            the operating system boot entry for the operating
                            system that is currently running.
    {default}               Specifies a virtual identifier that corresponds to
                            the boot manager default application entry.
    {ramdiskoptions}        Contains the additional options required by the
                            boot manager for RAM disk devices.
    {dbgsettings}           Contains the global debugger settings that can be
                            inherited by any boot application entry.
    {emssettings}           Contains the global Emergency Management Services
                            settings that can be inherited by any boot
                            application entry.
    {badmemory}             Contains the global RAM defect list that can be
                            inherited by any boot application entry.
    {globalsettings}        Contains the collection of global settings that
                            should be inherited by all boot application
                            entries.
    {bootloadersettings}    Contains the collection of global settings that
                            should be inherited by all Windows boot loader
                            application entries.
    {resumeloadersettings}  Contains the collection of global settings that
                            should be inherited by all Windows resume from
                            hibernation application entries.
    {hypervisorsettings}    Contains the hypervisor settings that can
                            be inherited by any OS loader entry.
TYPES
The /set and /deletevalue commands require a <datatype> as a parameter.
<datatype> uniquely identifies both the data format and meaning of the value.
Data types are identified using either a name or a custom type. The names are
listed below, along  with their data formats (in parentheses) and a short
description of the custom type. If a format is not specified, then the
description lists the literal values that you can use for that type. For
information about data formats, run "bcdedit /? formats".
The following types are valid for any entry. For information about types that
are specific to a particular entry, such as boot manager entries or the Windows
OS Loader entries, see the end of this help topic.
Entries
=======
    DESCRIPTION (string)    Defines the description of the entry.
    PATH (string)           Defines the path to the application.
    DEVICE (device)         Defines the device that the application resides on.
    INHERIT (list)          Defines the list of entries to be inherited.
For information about additional types for device objects, run
"bcdedit /? TYPES DEVOBJECT".
For information about additional types for particular applications,
run "bcdedit /? TYPES <apptype>", where <apptype> is one of the following:
BOOTAPP     Boot applications. These types also apply to the boot manager,
            memory diagnostic application, Windows OS loader, and the resume
            application.
BOOTMGR     Boot manager.
BOOTSECTOR  Boot sector application.
CUSTOMTYPES Custom types.
DEVOBJECT   Device object additional options.
FWBOOTMGR   Firmware boot manager
MEMDIAG     Memory diagnostic application
NTLDR       OS loader that shipped with earlier Windows OS
OSLOADER    Windows Vista OS loader
RESUME      Resume application
The following describes the formats of the data that are required for
<datatypes> used with the /set command. The format that is required depends on
the <datatypes> that you specify with the /set command. For more information
about the formats associated with each <datatype>, run "bcdedit /? TYPES".
bool    A boolean value. The following values correspond to TRUE:
            1, ON, YES, TRUE
        The following values correspond to FALSE:
            0, OFF, NO, FALSE
device  A device can be one of the following types:
            BOOT
            PARTITION=<drive>
            HD_PARTITION=<drive>
            FILE=[<parent>]<path>
            RAMDISK=[<parent>]<path>,<optionsid>
            VHD=[<parent>]<path>,<locatecustom>
            LOCATE[=<locatecustom>]
        The options for these types are:
            <drive>        A drive letter with a colon and no trailing
                           backslashes.
            <parent>       (Required) Can be either BOOT, LOCATE, or a drive
                           letter with colon.  The square brackets do not
                           indicate that this is optional, but are a literal
                           part of the syntax.
            <path>         A path to the file (or .wim file) from the root of
                           the parent device.
            <optionsid>    The identifier to the device options entry that
                           contains the system deployment image (SDI) options
                           for the RAM disk. This is usually
                           {ramdisksdioptions}.
            <locatecustom> Supplies an optional element used to locate a
                           device by looking for a specified path. The
                           default locate element for a device is its
                           application path (systemroot for an osdevice).
                           Custom values must be specified using custom
                           element syntax (see -help types customtypes),
                           for example: locate=custom:22000002.
id      An entry identifier, which refers to an entry in the boot configuration
        data store. Run "bcdedit /? ID" for more information about identifiers.
integer A 64-bit integer type.  Some integer types can be set using enumerated
        values.
integerlist     A list of one or more 64-bit integers, separated by spaces.
                This list should not be enclosed in quotation marks.
list    An entry identifier list. It contains one or more entry identifiers
        separated by spaces. The list should not be enclosed in quotation
        marks.
string  A literal string. If it contains spaces, it should be surrounded by
        quotation marks ("").
BOOT APPLICATION
The following types apply to entries for boot applications. These types also
apply to the boot manager, memory diagnostic application, Windows OS loader,
and the resume application. For information about data formats for these types,
run "bcdedit /? FORMATS".
Display
=======
    GRAPHICSRESOLUTION      Defines the graphics resolution, 1024x768, 800x600,
                            1024x600, etc.
    HIGHESTMODE (bool)      Enables boot applications to use the highest
                            graphical mode exposed by the firmware.
    GRAPHICSMODEDISABLED (bool)  Disables graphics mode.
    HIGHESTMODE (bool)      Forces the highest resolution supported by the
                            firmware.
    NOVESA (bool)           Disables the use of Video Electronics Standards
                            Association (VESA) display modes. (Defunct.)
    NOVGA (bool)            Disables the use of VGA modes entirely.
    BOOTUXDISABLED (bool)   Disables boot graphics.
Debugging
=========
    BAUDRATE (integer)      Defines the baud rate for the serial debugger.
    BOOTDEBUG (bool)        Enables the boot debugger.
    CHANNEL (integer)       Defines the channel for the 1394 debugger.
    BUSPARAMS (string)      Defines the PCI bus, device, and function numbers
                            of the debugging device.  For example, 1.5.0
                            describes the debugging device on bus 1, device 5,
                            function 0.
    DEBUGADDRESS (integer)  Defines the address of a serial port for the
                            debugger.
    DEBUGPORT (integer)     Defines the serial port number for the serial
                            debugger.
    DEBUGSTART              Can be ACTIVE, AUTOENABLE or DISABLE.
    DEBUGTYPE               Can be SERIAL, 1394, USB, NET or LOCAL.
    DHCP (bool)             Controls use of DHCP by the network debugger.
                            DHCP set to false forces local link only address.
    HOSTIP                  Defines the host IP address for the network
                            debugger.
    KEY                     Holds the key used to encrypt the network debug
                            connection.
    NOUMEX (bool)           Causes user-mode exceptions to be ignored.
    PORT (integer)          Defines the network port for the network debugger.
    TARGETNAME (string)     Defines the target name for the USB debugger.
Memory
======
    BADMEMORYACCESS (bool)  Allows an application to use the memory described
                            by the bad memory list.
    BADMEMORYLIST (integerlist)  Defines the list of Page Frame Numbers
                                 describing faulty memory in the system.
    TRUNCATEMEMORY (integer)    Disregard all memory at or above the specified
                                physical address.
    AVOIDLOWMEMORY (integer)    Avoid using memory below the specified physical
                                address in the boot loader as much as possible.
    LINEARADDRESS57         Controls whether five-level paging is enabled for
                            an application. Can be DEFAULT, OPTOUT or OPTIN.
Emergency Management Services
=============================
    BOOTEMS (bool)          Enables Emergency Management Services.
    EMSBAUDRATE (integer)   Defines the baud rate for Emergency Management
                            Services.
    EMSPORT (integer)       Defines the serial port number for Emergency
                            Management Services.
Devices and Hardware
===========================
    CONFIGACCESSPOLICY      Can be DEFAULT or DISALLOWMMCONFIG.
    FIRSTMEGABYTEPOLICY     Can be USENONE, USEALL or USEPRIVATE.
    EXTENDEDINPUT (bool)    Enables extended console input functionality.
Applications
============
    LOCALE (string)         Defines the locale of the boot application.
    NOUMEX (bool)           Causes user-mode exceptions to be ignored.
Recovery
========
    RECOVERYENABLED (bool)  Enables the recovery sequence.
    RECOVERYSEQUENCE (list) Defines the recovery sequence.
Verification
============
    TESTSIGNING (bool)          Allows pre-release test code signing certificates.
    FLIGHTSIGNING (bool)        Allows flight-signed code signing certificates.
    ADDITIONALCIPOLICY(string)  Defines locations of additional code integrity policies.
Error Screens
=============
    BOOTSHUTDOWNDISABLED (bool) Indicates that the machine should not shutdown
                                after displaying an error screen for 1 minute.
                                The default is to attempt the shutdown. This
                                does not work on legacy firmware.
    BOOTERRORUX (integer)       Defines the graphics experience for boot errors.
                                Can be Legacy, Standard or Simple. Valid only on
                                keyboard-less devices.
For additional types that apply to the boot manager, memory diagnostic
application, windows OS loader, or the resume application, run
"bcdedit /? TYPES <apptype>", where <apptype> is one of the following:
    BOOTMGR    The boot manager.
    MEMDIAG    The memory diagnostic application.
    OSLOADER   The Windows OS loader.
    RESUME     The resume application.
FIRMWARE BOOT MANAGER
The following types apply only to entries for the firmware boot manager. For
information about data formats for these types, run "bcdedit /? FORMATS".
  BOOTSEQUENCE (list)     Defines the one-time boot sequence.
  DEFAULT (id)            Defines the default boot entry.
  TIMEOUT (integer)       Defines the boot manager time to wait, in seconds.
Display
=======
  DISPLAYORDER (list)     Defines the boot manager display order list.
BOOT MANAGER
The following types apply only to entries for the boot manager. For information
about data formats for these types, run "bcdedit /? FORMATS".
  BOOTSEQUENCE (list)     Defines the one-time boot sequence.
  PERSISTBOOTSEQUENCE (bool)    Enables persisting a boot sequence across multiple
                                boots.
  DEFAULT (id)            Defines the default boot entry.
  TIMEOUT (integer)       Defines the boot manager time to wait, in seconds,
                          before the boot manager selects a default entry.
Resume
======
  RESUME (bool)           Indicates that a resume operation should be
                          attempted.
  RESUMEOBJECT (id)       Provides the identifier of the resume application
                          object.
  HIBERBOOT (bool)        Indicates that a hiberboot resume should be
                          attempted. This is used along with the RESUME setting
                          and should not be modified.
Display
=======
  DISPLAYBOOTMENU (bool)  Enables the boot menu display.
  DISPLAYORDER (list)     Defines the boot manager display order list.
  TOOLSDISPLAYORDER (list)    Defines the boot manager tools display order
                              list.
For additional types that apply to the boot manager, run
"bcdedit /? TYPES BOOTAPP".
WINDOWS OS LOADER
The following types can be used only for Windows OS Loader entries. For
information about data formats for these types, run "bcdedit /? FORMATS".
    BOOTLOG (bool)          Enables the system initialization log.
    BOOTSTATUSPOLICY        Can be DisplayAllFailures, IgnoreAllFailures,
                            IgnoreShutdownFailures, IgnoreBootFailures,
                            IgnoreCheckpointFailures, DisplayShutdownFailures,
                            DisplayBootFailures, or DisplayCheckpointFailures.
    LASTKNOWNGOOD (bool)    Enables boot to last known good configuration.
    NOCRASHAUTOREBOOT (bool)    Disables automatic restart on crash.
    RESUMEOBJECT (id)       Defines the identifier of the resume object that
                            is associated with this operating system object.
    SAFEBOOT                Can be Minimal, Network or DsRepair
    SAFEBOOTALTERNATESHELL (bool)   Uses the alternate shell when booted into
                                    Safe mode.
    SOS (bool)              Displays additional boot information.
    WINPE (bool)            Enables the computer to boot to Windows PE.
Display
=======
    BOOTUX                  Defines the graphics experience during boot. Can be
                            Disabled, Basic or Standard. (Defunct.)
    BOOTMENUPOLICY          Defines the type of boot menus the system will use.
                            Can be Legacy or Standard.
Options
=======
    ADVANCEDOPTIONS (bool)  Enables advanced options.
    LOADOPTIONS (string)    Defines any additional options that are not covered
                            by other types.
    OPTIONSEDIT (bool)      Enables the options editor.
Processors and APICs
====================
    CLUSTERMODEADDRESSING (integer) Defines the maximum number of processors to
                                    include in a single Advanced Programmable
                                    Interrupt Controller (APIC) cluster.
    CONFIGFLAGS (integer)   Specifies processor-specific configuration flags.
    MAXPROC (bool)          Reports the maximum number of processors in the
                            system.
    NUMPROC (integer)       Uses only the specified number of processors.
    ONECPU (bool)           Forces only the boot CPU to be used.
    RESTRICTAPICCLUSTER (integer)   Defines the largest APIC cluster number to
                                    be used by the system.
    USEPHYSICALDESTINATION (bool)   Forces the use of the physical APIC.
    USELEGACYAPICMODE (bool)        Forces the use of legacy APIC mode even if
                                    the processors and chipset support extended
                                    APIC mode.
    X2APICPOLICY (integer)  Enables the use of extended APIC mode if the
                            processors and chipset support extended APIC mode.
                            Can be Enabled, Disabled or Default.
    MAXGROUP (bool)         Maximizes the number of groups created in group
                            configuration.
    GROUPAWARE (bool)       Forces drivers to be aware of multiple groups in a
                            multi-group environment.
    GROUPSIZE (integer)     Specifies the size of all processor groups. Must
                            be an integer of power of 2.
Hardware Abstraction Layer (HAL) & KERNEL
=========================================
    HAL (string)            Defines the file name for a private HAL.
    HALBREAKPOINT (bool)    Enables the special hardware abstraction layer
                            (HAL) breakpoint.
    KERNEL (string)         Defines the file name for a private kernel.
    USEPLATFORMCLOCK (bool) Forces the use of a platform clock source for the
                            system's performance counter.
    FORCELEGACYPLATFORM(bool)   Forces the OS to assume the presence of legacy
                                PC devices like CMOS, keyboard controller etc.
RESUME LOADER
The following types apply to entries for the resume loader. For information
about data formats for these types, run "bcdedit /? FORMATS".
Display
=======
  BOOTUX                        Defines the graphics experience during resume.
                                Can be Disabled, Basic, or Standard. (Defunct.)
  BOOTMENUPOLICY                Defines the type of boot menus the system will
                                use. Can be Legacy or Standard.
Hibernation file
================
  FILEDEVICE (Device)           Specifies the device containing the hibernation
                                file.
  FILEPATH (String)             Specifies the path of the hibernation file.
Other
=====
  ASSOCIATEDOSDEVICE (Device)   Names the OS device associated with the
                                hibernated OS.  This is only useful in cases
                                where the hibernation file is not stored on
                                the OS device.
  CUSTOMSETTINGS (Boolean)      Allows resume loader to use custom settings.
  PAE (Boolean)                 Indicates whether the hibernated OS was
                                running with PAE enabled.
For additional types that apply to the resume application, run
"bcdedit /? TYPES BOOTAPP".
MEMORY DIAGNOSTIC APPLICATION
The following types apply only to entries for memory diagnostic application
entries. For information about data formats for these types, run
"bcdedit /? FORMATS".
  PASSCOUNT (integer)     The number of iterations that will be run.
  TESTMIX                 Can be BASIC or EXTENDED.
  CACHEENABLE (boolean)   Overrides the default cache settings of the testmix.
For additional types that apply to the memory diagnostic application, run
"bcdedit /? TYPES BOOTAPP".
DEVICE ADDITIONAL OPTIONS
The following types apply to device additional options entries. For information
about data formats for these types, run "bcdedit /? FORMATS".
The following options are valid for the device additional options entry:
Ramdisk
=======
    EXPORTASCD (bool)               Enables exporting the RAM disk as a CD.
    RAMDISKIMAGELENGTH (integer)    Defines the image length for the RAM disk.
    RAMDISKIMAGEOFFSET (integer)    Defines the image offset for the RAM disk.
    RAMDISKSDIDEVICE (device)       Defines the device on which the SDI file is
                                    located.
    RAMDISKSDIPATH (string)         Defines the path to the SDI file.
    RAMDISKTFTPCLIENTPORT (integer) Defines the Trivial File Transfer Protocol
                                    (TFTP) client port for the RAM disk Windows
                                    Imaging (WIM) file.
    RAMDISKTFTPBLOCKSIZE (integer)  Defines the Trivial File Transfer Protocol
                                    (TFTP) block size for the RAM disk Windows
                                    Imaging (WIM) file.
    RAMDISKTFTPWINDOWSIZE (integer) Defines the Trivial File Transfer Protocol
                                    (TFTP) window size for RAM disk Windows
                                    imaging (WIM) file.
    RAMDISKMCENABLED (bool)         Enables or disables Multicast for RAM disk
                                    Windows Imaging (WIM) file.
    RAMDISKMCTFTPFALLBACK (bool)    Enables fallback to TFTP if Multicast
                                    fails.
    RAMDISKTFTPVARWINDOW (bool)     Enables or disables Trivial File Transfer
                                    Protocol (TFTP) Variable window size
                                    extension.
BOOT SECTOR
Boot Sector type applies to entries that contain bootsector in the form of a
file. Currently there are no additional options for this type.
CUSTOM TYPES
A custom type identifies the data format and meaning of a value that is not
represented by a friendly type name built in to BCDedit. Custom types are
typically used to extend the functionality of BCD.
A custom type has the following format:
     custom:0xXXXXXXXX   The literal string "custom:" followed by an 8-digit
     hexadecimal number that encodes the format and meaning of the type.
A custom type appears in the same parameter position as a friendly type name in
a /set or /deletevalue command. For example:
     bcdedit /set {<id>} custom:0xXXXXXXXX <value>
For information about custom types that can be used with this version of
BCDedit, search the Microsoft Knowledge Base for these keywords: BCD, BCDedit,
custom types
NTLDR based OS LOADER
Currently there are no additional options for this type.
TOPICS IN THIS HELP FILE
To display help for a topic, run "bcdedit /? <topic>" where <topic> is one of
the following:
bootdebug           /bootdebug command.
bootems             /bootems command.
bootsequence        /bootsequence command.
copy                /copy command.
create              /create command.
createstore         /createstore command.
dbgsettings         /dbgsettings command.
debug               /debug command.
default             /default command.
delete              /delete command.
deletevalue         /deletevalue command.
displayorder        /displayorder command.
eventsettings       /eventsettings command.
event               /event command.
ems                 /ems command.
emssettings         /emssettings command.
enum                /enum command.
export              /export command.
FORMATS             Formats for types.
hypervisorsettings  /hypervisorsettings command.
ID                  Identifiers for entries..
import              /import command.
mirror              /mirror command.
set                 /set command.
store               /store command-line option.
timeout             /timeout command.
toolsdisplayorder   /toolsdisplayorder command.
TYPES               Types that apply to any entry.
TYPES BOOTAPP       Types that apply to boot applications. These include the
                    boot manager, memory diagnostic application, Windows OS
                    loader, and the resume application.
TYPES BOOTMGR       Types that apply to the boot manager.
TYPES BOOTSECTOR    Types that apply to the boot sector application.
TYPES CUSTOMTYPES   Custom types.
TYPES FWBOOTMGR     Types that apply to the firmware boot manager
TYPES MEMDIAG       Types that apply to the memory diagnostic application
TYPES NTLDR         Types that apply to the NTLDR based OS loader
TYPES OSLOADER      Types that apply to the Windows OS loader
TYPES RESUME        Types that apply to the resume application
v                   /v command-line option
This command sets or displays the hypervisor settings for the system.
This command does not enable or disable the hypervisor debugger for any
particular OS loader entry. To enable or disable the hypervisor debugger for a
particular OS loader entry, use "bcdedit /set <identifier> HYPERVISORDEBUG ON".
For information about identifiers, run "bcdedit /? ID".
To set an individual hypervisor debugger setting, use
"bcdedit /set {hypervisorsettings} <type> <value>".  For information about
valid types, run "bcdedit /? TYPES".
bcdedit /hypervisorsettings [ <debugtype> [DEBUGPORT:<port>] [BAUDRATE:<baud>]
                              [CHANNEL:<channel>] [HOSTIP:<ip>] [PORT:<port>] ]
    <debugtype>     Specifies the type of debugger. <debugtype> can be one of
                    SERIAL, 1394, or NET.
    <port>          For SERIAL debugging, specifies the serial port to use as
                    the debugging port.
    <baud>          For SERIAL debugging, specifies the baud rate to be used
                    for debugging.
    <channel>       For 1394 debugging, specifies the 1394 channel to be used
                    for debugging.
    <ip>            For network debugging, specifies the IPv4 address of the
                    host debugger.
    <port>          For network debugging, specifies the port to communicate
                    with on the host debugger. Should be 49152 or higher.
Examples:
The following command displays the current hypervisor settings:
    bcdedit /hypervisorsettings
The following command sets the hypervisor debugger settings to serial debugging
over COM1 at 115,200 baud:
    bcdedit /hypervisorsettings SERIAL DEBUGPORT:1 BAUDRATE:115200
The following command sets the hypervisor debugger settings to 1394 debugging
using channel 23:
    bcdedit /hypervisorsettings 1394 CHANNEL:23
The following command sets the hypervisor debugger settings to network
debugging with a debugger host at 192.168.1.2 communicating on port 50000:
    bcdedit /hypervisorsettings NET HOSTIP:192.168.1.2 PORT:50000
This command creates a mirror of the specified boot entry.
bcdedit [/store <filename>] /mirror {<id>}
    <filename>      Specifies the store to be used. If this option is not
                    specified, the system store is used. For more information,
                    run "bcdedit /? store".
    <id>            Specifies the identifier of the entry to be mirrored.
                    For more information about identifiers, run
                    "bcdedit /? ID".
Example:
The following command creates a mirror of the specified operating system boot
entry:
    bcdedit /mirror {cbd971bf-b7b8-4885-951a-fa03044f5d71}
This command sets or displays the global remote event logging settings for the
system. Currently this command is an alias of dbgsettings. Please see
dbgsettings for more information.
This command enables or disables the remote event logging for the specified
boot entry.
bcdedit /event [<id>] { ON | OFF }
    <id>         Specifies the identifier of the entry to be modified.  Only
                 Windows boot loader entries may be specified.  If not
                 specified, {current} is used. For more information about
                 identifiers, run "bcdedit /? ID".
Examples:
The following command enables remote event logging for the current Windows
operating system boot entry:
    bcdedit /event ON
The following command disables remote event logging for the specified operating
system entry:
    bcdedit /event {cbd971bf-b7b8-4885-951a-fa03044f5d71} OFF
VESA, PCI, VGA, and TPM
=======================
    USEFIRMWAREPCISETTINGS (bool)   Uses BIOS-configured Peripheral Component
                                    Interconnect (PCI) resources.
    MSI                     Can be Default or ForceDisable.
    VGA (bool)              Forces the use of the VGA display driver.
    TPMBOOTENTROPY          Can be Default, ForceDisable, or ForceEnable.
Debugging and Performance
=========================
    DBGTRANSPORT (string)   Defines the file name for a private debugger
                            transport.
    DEBUG (bool)            Enables kernel debugging.
    PERFMEM (integer)       Specifies the size (in megabytes) of the buffer to
                            allocate for performance data logging.
Memory
======
    INCREASEUSERVA (integer)    Increases the amount of virtual address space
                                that the user-mode processes can use, in MBs.
    NOLOWMEM (bool)         Disables the use of low memory.
    NX                      Can be OptIn, OptOut, AlwaysOn or AlwaysOff.
    PAE                     Can be Default, ForceEnable, ForceDisable.
    REMOVEMEMORY (integer)  Removes memory, in MBs, from the total available
                            memory that the operating system can use.
Drivers and System Root
=======================
    DRIVERLOADFAILUREPOLICY Can be Fatal or UseErrorControl.
    EMS (bool)              Enables kernel Emergency Management Services.
    OSDEVICE (device)       Defines the device that contains the system root.
    SYSTEMROOT (string)     Defines the path to the system root.
Hypervisor
==========
    HYPERVISORLAUNCHTYPE    Controls the hypervisor launch type.
                            Can be Off or Auto.
    HYPERVISORDEBUG (bool)  Enables hypervisor debugging.
    HYPERVISORDEBUGTYPE     Can be SERIAL, 1394, or NET.
    HYPERVISORDEBUGPORT (integer)   Defines the serial port number for the
                                    serial debugger.
    HYPERVISORBAUDRATE (integer)    Defines the baud rate for the serial
                                    debugger.
    HYPERVISORCHANNEL (integer)     Defines the channel for the 1394 debugger.
    HYPERVISORHOSTIP (integer)      Defines the IPv4 address of the debugger
                                    host for the network debugger.
    HYPERVISORHOSTPORT (integer)    Defines the UDP port to communicate with on
                                    the debugger host for the network debugger.
    HYPERVISORBUSPARAMS (string)    Defines the PCI bus, device, and function
                                    numbers of the debugging device. For
                                    example, 1.5.0 describes the debugging
                                    device on bus 1, device 5, function 0.
    HYPERVISORUSELARGEVTLB (bool)   Increases virtual TLB size.
    HYPERVISORIOMMUPOLICY           Controls the hypervisor IOMMU policy.
                                    Can be default, enable or disable.
Virtual Secure Mode
===================
    VSMLAUNCHTYPE           Controls the Virtual Secure Mode launch type.
                            Can be Off or Auto.
For additional types that apply to the Windows OS Loader, run
"bcdedit /? TYPES BOOTAPP".
en-US
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,jRtM3ar7PtXEgdxINcovBWwjzNVDMVtqsofCYGYiGvU=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
"Jw? 
LYeW#
20220506222212.698Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:3E7A-E359-A25D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190523Z
230228190523Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:3E7A-E359-A25D1%0#
Microsoft Time-Stamp Service0
jOBh9G
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
 *EQts
>UoML7V
z 1Y"B
rPttLx
M9&jp[
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:3E7A-E359-A25D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220506184635Z
20220507184635Z0w0=
1/0-0
1(0&0
MBCBV
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
.DEW%
_yr<\
!3ljIL@
