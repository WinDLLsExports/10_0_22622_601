!This program cannot be run in DOS mode.
.text
h.rdata
H.data
.pdata
H.idata
HPAGE
`fothk
`INIT
bGFIDS
B.rsrc
B.reloc
ATAUH
|$ E3
LLDPH
D$Bt#H
VWAUAVAWH
d$`D9
0A_A^A]_^
WATAUAVAWH
@A_A^A]A\_
T$0E3
-fffffff
fffffff
fffffff
fffffff
.fffffff
fffffff
fffffff
fffff
AQAPRQPH
(D$ H
0XYZAXAY
ffffff
fffff
fffff
9LLDcH
LLDPH
9LLDoH
x AVH
@8h0t$H
9(u"H
L$ SVWH
R$fA;Z*
L$ E3
L$@H3
\$0H;
H9Kxu
T$pE3
H VWAWH
LLDPA
LLDPH
0A__^
p AWH
x AVH
UVWATAUAVAWH
A;>s~D
|$`uLE;
 A_A^A]A\_^]
VWATAVAWH
0A_A^A\_^
t$ WAVAWH
T$XE3
T$XE3
0A_A^_
T$0E3
VWAVH
!D$ H
D$j@2
T$hE3
0A^_^
L$PH3
L$ UH
L$ UH
L$ UH
L$ UH
x AVH
LLDPA
LLDnH
LLDPH
D$J@2
D$:@2
x AVH
l$(!T$ H
L$0H3
x AVH
A.{A1j>m;
DriverEntry failed 0x%x for driver %wZ
RtlQueryRegistryValuesEx
D:P(A;;GA;;;SY)(A;;GA;;;BA)
KmdfLibrary
AdminStatus
MsgTxHold
MsgTxInterval
ReinitDelay
TxCreditMax
MsgFastTx
TxFastInit
\Device\LLDPCTRL
\DosDevices\LLDPCTRL
MsLldp
FxStubBindClasses: invalid driver image, the address of symbol __KMDF_CLASS_BIND_START 0x%p is greater than the address of symbol __KMDF_CLASS_BIND_END 0x%p, status 0x%x
FxGetNextClassBindInfo failed
FxStubBindClasses: ClientBindClass %p, WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubBindClasses: VersionBindClass WDF_CLASS_BIND_INFO 0x%p, class %S, returned status 0x%x
FxStubInitTypes: invalid driver image, the address of symbol __KMDF_TYPE_INIT_START 0x%p is greater than the address of symbol __KMDF_TYPE_INIT_END 0x%p, status 0x%x
FxGetNextObjectContextTypeInfo failed
ChassisId
ComputerName
Mslldp\Parameters
ComputerName\ComputerName
Mslldp\Parameters\Agents\%s-%u
PsGetVersion
WmiTraceMessage
WmiQueryTraceInformation
EtwRegisterClassicProvider
EtwUnregister
3RSDS
mslldp.pdb
.text$lp00mslldp.sys!30_clientonly
.text$mn
.text$mn$00
.text$mn$21
.text$zy
.text$zz
.rdata$brc
.rdata$zz$brc
.giats
.rdata
.rdata$00
.rdata$zz
.rdata$zzzdbg
.xdata
.data$dk00$brc
.data$zz$brc
.data
.data$zz
.kmdfclassbind$a
.kmdfclassbind$c
.kmdfclassbind$d
.kmdftypeinit$a
.kmdftypeinit$c
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.pdata
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
PAGE$zz
fogrp
INIT$zz
.gfids
.rsrc$01
.rsrc$02
ObOpenObjectByPointer
ZwSetSecurityObject
ZwClose
RtlGetVersion
KeSetEvent
MmIsNonPagedSystemAddressValid
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
ntoskrnl.exe
NdisRegisterProtocolDriver
NdisDeregisterProtocolDriver
NdisOpenAdapterEx
NdisCloseAdapterEx
NdisReturnNetBufferLists
NDIS.SYS
NmrRegisterProvider
NmrDeregisterProvider
NmrWaitForProviderDeregisterComplete
NETIO.SYS
DbgPrintEx
RtlCopyUnicodeString
RtlWriteRegistryValue
_vsnwprintf
RtlCreateRegistryKey
RtlInitUnicodeString
RtlQueryRegistryValues
ExAllocatePool2
MmGetSystemRoutineAddress
RtlUnicodeToUTF8N
ExFreePoolWithTag
KeInitializeSpinLock
EtwWriteTransfer
EtwUnregister
EtwRegister
IoWMIRegistrationControl
IoSizeofWorkItem
IoInitializeWorkItem
KeFlushQueuedDpcs
ExReleaseFastMutex
ExAcquireFastMutex
KeInitializeEvent
KeWaitForSingleObject
KeLowerIrql
KfRaiseIrql
MmIsDriverVerifyingByAddress
IoQueueWorkItemEx
KeDelayExecutionThread
KeInitializeDpc
KeInitializeTimer
KeCancelTimer
KeSetCoalescableTimer
WdfVersionUnbind
WdfLdrQueryInterface
WdfVersionBind
WdfVersionUnbindClass
WdfVersionBindClass
WDFLDR.SYS
NdisAllocateNetBufferListPool
NdisFreeNetBufferListPool
NdisAllocateRWLock
NdisFreeRWLock
NdisAcquireRWLockWrite
NdisAcquireRWLockRead
NdisReleaseRWLock
NdisOidRequest
NdisCompleteUnbindAdapterEx
NdisGetDataBuffer
NdisFreeNetBufferList
NdisFreeMdl
NdisAllocateMdl
NdisAllocateNetBufferAndNetBufferList
NdisSendNetBufferLists
NmrProviderDetachClientComplete
t$ WATAUAVAWH
 A_A^A]A\_
T$8E3
` UAVAWH
H!L$ E3
@r L;
A_A^]
VWAVH
D$`E3
@A^_^
UWAVH
x AVH
WAVAWH
A_A^_
UVWATAUAVAWH
|$`D;
 A_A^A]A\_^]
UVWAVAWH
D$8fD
D$0A;
A_A^_^]
\$ UVWH
t$ WATAUAVAWH
A_A^A]A\_
D$(LLnbH
L$0H3
LLDPH
x ATAVAWH
LLDPH
LLDpH
LLDPH
 A_A^A\
LLDPH
x AUAVAWH
 A_A^A]
LLorE3
L$0E3
x AVH
LLDPI
LLDc@
LLDPH
LLDoH
D$0H=
D$8H=
fA9t@
LLDPH
LLDPH
LLDdH
WEVT_TEMPLATE
Start State
End State
Closed State
Open State
Connect State
Listen State
Association State
Authentication State
Established State
Warning
Information
Verbose
Microsoft-Windows-LinkLayerDiscoveryProtocol
Microsoft-Windows-LinkLayerDiscoveryProtocol/Operational
Microsoft-Windows-LinkLayerDiscoveryProtocol/Diagnostic
The Link Layer Discovery Protocol driver (LLDP) is starting
The Link Layer Discovery Protocol driver (LLDP) is stopping
The interface %1 is enabled
The interface %1 is disabled
The local MIB on interface %1 has been updated
An update to the local MIB on interface %1 was rejected
The parameter %2 on interface %1 has been changed
An LLDP frame was transmitted on interface %1
An LLDP frame was received on interface %1
An LLDP frame received on interface %1 was rejected.%n%2
An LLDP frame was successfully validated on interface %1
A new neighbor was discovered on interface %1%nNeighbor ID: %3
The neighbor on interface %1 has updated its MIB%nNeighbor ID: %3
The neighbor on interface %1 was removed because no message has been received within the timeout interval%nNeighbor ID: %3
The neighbor on interface %1 was removed because a shutdown message was received%nNeighbor ID: %3
The system has detected that there are multiple neighbors sending LLDP packets to the network interface %1.  A "tooManyNeighbors" state has been declared.  This may inhibit some network operations.
The "tooManyNeighbors" state has been cleared
A message was received on interface %1 from an unknown neighbor, while the previously-detected neighbor is still active.  This will prolong the "tooManyNeighbors" state.%nExisting Neighbor ID: %3%nRecived Neighbor ID: %5
Insufficient system resources are available
This frame is missing a required element
One of the required elements in this frame is malformed
This frame has conflicting duplicate elements
This frame has an element with an invalid length
The End-of-Frame marker is missing
Frames are not accepted from multiple neighbors
LLDP receive processing has been administratively disabled
More information cannot be added to the MIB because the resulting LLDP frame would exceed the link's Maximum Transmission Unit (MTU)
An element cannot be added to the MIB because it has has invalid length
An element cannot be added to the MIB because its type is not allowed
AdminStatus
MsgTxHold
MsgTxInterval
ReinitDelay
TxCreditMax
MsgFastTx
TxFastInit
Microsoft-Windows-LinkLayerDiscoveryProtocol/Operational
Microsoft-Windows-LinkLayerDiscoveryProtocol/Diagnostic
VMAPT
VMAP,
VMAPT
mapAdminParameter
mapMibChangeRejectReason
mapPacketDiscardReason
TTBL$
EventData
ErrorCode
Location
Context
ErrorCode
Location
Context
EventData
WarningCode
Location
Context
WarningCode
Location
Context
TEMPD
EventData
Context
UpdateReasonCode
Context
UpdateReasonCode
TEMP`
EventData
SourceAddress
SourcePort
DestinationAddress
DestinationPort
Protocol
ReferenceContext
SourceAddress
SourcePort
DestinationAddress
DestinationPort
Protocol
ReferenceContext
TEMP`
EventData
SourceAddress
SourcePort
DestinationAddress
DestinationPort
Protocol
ReferenceContext
SourceAddress
SourcePort
DestinationAddress
DestinationPort
Protocol
ReferenceContext
EventData
IfGuid
IfIndex
IfLuid
ReferenceContext
IfGuid
IfIndex
IfLuid
ReferenceContext
EventData
IfIndex
IfIndex
EventData
IfIndex
MsapIdLength
MsapId
IfIndex
MsapIdLength
MsapId
TEMP4
EventData
IfIndex
RejectReason
IfIndex
RejectReason
EventData
IfIndex
AdminParameter
OldValue
NewValue
IfIndex
AdminParameter
OldValue
NewValue
EventData
IfIndex
PacketPayloadLength
PacketPayload
IfIndex
PacketPayloadLength
PacketPayload
TEMPT
EventData
IfIndex
SequenceNumber
PacketPayloadLength
PacketPayload
IfIndex
SequenceNumber
PacketPayloadLength
PacketPayload
EventData
IfIndex
SequenceNumber
PacketDiscardReason
IfIndex
SequenceNumber
PacketDiscardReason
TEMP<
'MS3pC,
EventData
IfIndex
SequenceNumber
IfIndex
SequenceNumber
EventData
IfIndex
ExistingMsapIdLength
ExistingMsapId
ReceivedMsapIdLength
ReceivedMsapId
IfIndex
ExistingMsapIdLength
ExistingMsapId
ReceivedMsapIdLength
ReceivedMsapId
PRVAp
Microsoft-Windows-LinkLayerDiscoveryProtocol
OPCOt
ut:Start
ut:End
ut:Closed
ut:Open
ut:Connect
ut:Listen
ut:Association
ut:Authentication
ut:Established
win:Warning
win:Informational
win:Verbose
ut:SendPath
ut:ReceivePath
ut:L3ConnectPath
ut:L2ConnectPath
ut:ClosePath
ut:Authentication
ut:Configuration
ut:Global
ut:Dropped
ut:PiiPresent
ut:Packet
ut:Address
ut:StdTemplateHint
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Link-Layer Discovery Protocol Driver
FileVersion
10.0.22621.436 (WinBuild.160101.0800)
InternalName
MSLLDP.SYS
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
MSLLDP.SYS
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.436
VarFileInfo
Translation
'Microsoft Link-Layer Discovery Protocol.Microsoft Link-Layer Discovery Protocol Driver
dIEEE 802.1AB Link-Layer Discovery Protocol (LLDP).  Supports Microsoft Data Center Networking (DCN).
Microsoft LLDP Protocol Driver
WEVT_TEMPLATE
en-US
Q<RmS
\T/^d_
