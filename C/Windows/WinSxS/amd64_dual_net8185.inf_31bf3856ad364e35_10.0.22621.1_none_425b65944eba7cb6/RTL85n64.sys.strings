!This program cannot be run in DOS mode.
-nRich
.text
h.rdata
H.data
.pdata
HINIT
.rsrc
B.reloc
H9D$PueH
H9D$Pu
D$49D$@s
D$(H9D$`
D$<Hc
9D$8}0HcT$8H
D$(H9D$`u
HcL$8H
T$BE3
L$hH3
D$xfA
HcD$ H
HcD$ H
HcD$ H
HcD$ H
L$hH3
L$hH3
HcD$(H
HcD$(H
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
L$ Mi
L$ Hi
L$ Hi
T$BE3
D$8E3
9D$ sW
L$ Hk
L$ Hk
D$hHcL$hH
9D$ s9
|$  s0
L$ Hk
L$ Hk
L$ Hk
L$ Hk
HcL$hH
HcL$pH
HcD$PH
D$ fA
$}#Lc
$} Lc
T$0HcL$
@HcL$hH
D$h9D$
a|(Hc
D$ HcT$
a|(Hc
D$,HcL$
T$,HcL$
L$XHk
L$XHk
T$XHk
L$XHk
L$XHk
T$XHk
L$XHk
T$XHk
L$XHk
D$XHk
D$XHk
T$XHk
L$XHk
T$XHk
L$XHk
D$XHk
D$XHk
T$XHk
L$hHk
L$hHk
L$hHk
L$hHk
9D$hu
L$hHk
T$hHk
L$hHk
L$pH3
D$ E3
D$ E3
9D$Hw3
D$`H9
HcD$(H
HcD$(H
9D$Ps)
9D$Ps
9D$Ps
D$$9D$ s
D$`H;
D$$9D$ s
D$`H;
D$$9D$ s
D$`H;
D$$9D$ s
D$`H;
D$ Mk
T$ Hk
D$ Mk
T$ Hk
D$ Mk
T$ Hk
D$ Mk
T$ Hk
D$ Mk
T$ Hk
D$ Mk
T$ Hk
L$ Hk
L$ Hk
L$ Hk
L$ Hk
9D$Ps
9D$`s
9D$Ps
9D$Ps!H
D$ 9D$Ps
D$ 9D$Ps
9D$`s
9D$`s H
9D$`sEH
T$@Hi
L$@Hi
T$@Hi
T$@Hi
L$@Hi
L$@Hi
T$@Hi
L$@Hi
L$@Hi
L$@Hi
T$@Hi
T$@Hi
L$@Hi
L$@Hi
L$@Hi
T$@Hi
L$@Hi
L$@Hi
D$PH9HXv
D$PH9HXr*
D$PH9HXv(
D$PH9HXs
D$PH9Hhv
D$PH9Hhr*
D$PH9Hhv(
D$PH9Hhs
D$PH9Hxv
D$PH9Hxr*
D$PH9Hxv(
D$PH9Hxs
D$PH9Hpv
D$PH9Hpr*
D$PH9Hpv(
D$PH9Hps
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
D$PH9
|$  t
9D$@s
9D$0s
9D$8s,H
L$0H+
D$HfD
D$HfD
9D$Ps
9D$`s
9D$`s
D$PfA
L$lHk
T$lHk
L$8Hk
L$8Hk
L$8Hk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
T$XHk
L$8Hk
9D$`s
9D$`s
9D$PsTH
9D$Ps
D$ 9D$`s
9D$`s
9D$`s
9D$`s
;D$`v_H
9D$tsyH
D$89D$ 
HcL$ H
9D$Ps
D$(9D$D
L$DHi
L$DHi
D$@9D$Hrb
D$`H=
|$H$}<LcD$HHcT$HH
HcL$HH
|$8$}3LcD$8HcT$8H
*HcL$8H
|$@2w
9D$ s
D$XH+
L$hH3
H9D$PuCH
L$\E3
L$\E3
L$\E3
L$\E3
D$`9D$Xu
D$8HcL$8H
D$@HcL$@H
D$HHcL$HH
D$PHcL$PH
D$XHcL$XH
D$`HcL$`H
D$lHcL$lH
D$tHcL$tH
D$|HcL$|H
9D$8w3
9D$8w3
D$(9D$`s
|$0@sH
L$0Hi
L$0Hi
D$DHi
L$0Hi
9D$0s
;D$ r
H9D$`
L$8E3
L$8E3
HcD$8H
HcD$8H
HcD$8H
L$pE3
L$PE3
L$`H3
HcT$ H
L$ Hk
H9D$Xu
H9D$0tLH
D$(H9D$Xu#
%H9D$8tCH
D$8H-
D$(H9D$hu
H9D$8u
%H9D$@t^H
D$@H-
H9D$P
D$\9D$Xs[
D$pH9
D$\9D$Xs 
D$\9D$0t[H
L$8E3
H9D$0thH
%H9D$8t&H
D$8H-
D$@H-
HcT$hHk
HcL$hHk
D$HH9
D$0H9D$ 
D$ H9
@89A0s
T$(Hk
L$(Hk
@49A0v
D$d-5
D$`;H
D$`9D$ s 
L$ Hk
D$`9D$ 
T$ Hk
L$ Hk
T$ Hk
L$ Mk
T$ Hk
L$ Hk
D$P=*
T$ Hk
L$ Mk
L$ Hk
L$XE3
D$8E3
L$0E3
9D$@w3
T$HHk
L$HHk
T$HHk
D$ E3
L$0E3
8187H
8187H
HcD$(H
|$8@tGH
|$@@t&H
9D$$sy
L$$Hk
D$HD9X
D$08187
}&HcL$H
D$qdH
H+D$@3
H+D$@3
D$H"B
D$7\A
D$AdH
L$@E3
L$@E3
L$@E3
L$@E3
D$@9D$tv
9D$hw
9D$dv
D$h9D$`
L$`Hk
|$`Hk
L$`Hk
D$<9D$lr!
L$`Hk
L$`Hk
D$09D
9D$Pv7
;D$@vK
D$<9D$Ps
D$<9D
$;D$0
T$0Hk
L$<E3
T$(Hi
L$(Hi
L$(Hi
T$xHk
L$xHk
D$hH9
L$xHk
L$xHk
L$xHk
D$ E3
D$T9ANuW
9D$8s1H
L$ fD
9D$Xt
9D$ht
D$X="
D$qHk
D$qHk
D$qHk
L$XE3
L$XE3
L$hE3
D$dHk
L$dHk
L$dHk
L$hE3
L$ Hi
L$XE3
9D$ u
L$ Hk
L$ Hk
L$ Hk
9D$,uW
D$X9D$$u
L$(Hk
9D$(u&D
D$(Mk
L$(Hk
9D$8u
9D$(u
L$(Hk
9D$8u
9D$8tLH
D$H9D$Ts6
D$THk
D$H9D$Tuw
|$H u
D$H9D$Ts7
D$THk
D$H9D$Tux
D$PHk
|$H u
D$LHk
D$@H9D$(tqH
|$L@u
|$@ }3LcD$@HcT$@H
HcL$@H
D$ H=
|$PPv
L$ Hk
T$ Hk
D$P9D
L$ Hk
L$ Hk
D$DH=
D$DH=
D$ E3
|$PPv
L$ Hk
L$ Hk
T9D$Pu,
L$ Hk
L$ Hk
L$ Hk
L$ Hk
T$ Hk
L$ Hk
|$PPv
L$ Hk
T$ Hk
D$P9D
L$ Hk
T$ Hk
T$ Hk
HcD$ H
9D$ ~
9D$ ~
L$!Hi
L$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Mi
T$!Hi
L$!Hi
L$!Hi
D$!Hi
|$00t5
|$0Ht$
|$0`t
|$0lt
\$PD9\$ v
L$ E3
9D$Xs
D$0Hk
|$ ?s
D$0Hk
T$0Hk
L$0Hk
9D$Xs
D$0Hk
|$ ?s
D$0Hk
T$0Hk
L$0Hk
9D$`s
D$09D$(
9D$`r|L
9D$ v
|$` v
D$`Ek
|$ @s
L$ Hi
D$`9D$ s7
L$ Hk
|$ @sW
L$ Hi
|$p v
D$pEk
|$ @s
L$ Hi
D$p9D$ s7
L$ Hk
|$ @sW
L$ Hi
|$ @sJ
L$ Hi
|$` v
D$`Ek
|$ @s
L$ Hi
D$`9D$ s7
L$ Hk
|$ @sW
L$ Hi
|$(@s%
T$(Hi
D$`9D$(
L$ fD
D$xH+
D$ E3
L$pH3
L$pHk
D$ E3
D$ fD
D$ fD
L$tHk
L$xHi
L$XHi
L$@Hi
L$DHi
L$xHi
L$PH3
L$8Hi
L$<Hi
L$PH3
HcD$0H
9D$$sI
|$$ s@
L$$Hk
L$PH3
D$PEk
L$hH3
D$$E+
D$0H9D$Pu
L$pE3
L$pE3
|$(@s~
L$(Hi
D$`H9
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
HcL$$H
D$(fD
|$ @}fHcL$ Hi
HcL$ Hi
LcD$ Mi
HcT$ Hi
D$@H9
D$ H9
HcL$\H
HcD$0H
9D$ s/
L$ Hk
L$ Hk
L$ Hk
T$ Hk
L$ Hk
T$ Mk
L$ Hk
T$ Mk
T$8Hk
L$8Hk
D$8Hk
H9D$0
D$0H9D$HvWH
D$HH+
L$$Hi
HcL$ Hi
tmHcL$ Hi
uKHcL$ Hi
HcL$ Hi
D$$9D$ 
HcL$ Hi
tjHcL$ Hi
uHHcL$ Hi
HcL$ Hi
|$ @}:HcL$ Hi
HcL$ Hi
D$$9D$ }:HcL$ Hi
HcL$ Hi
HcL$@Hi
HcL$@Hi
HcL$0Hi
HcL$4Hi
HcL$4Hi
HcL$4Hi
HcL$0Hi
HcT$4Hi
HcL$4Hi
D$(H9
ufHcL$0Hi
HcL$0Hi
LcD$0Mi
HcT$0Hi
kHcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$0Hi
HcL$4Hi
HcL$4Hi
HcL$4Hi
LcD$4Mi
HcT$4Hi
HcL$4Hi
HcL$4Hi
<$@}>Hc
L$`Hi
D$`Hi
D$pH+
L$`Hi
D$xHc
H9D$P
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
D$`Hi
D$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
T$`Hi
L$`Hi
D$HH9L
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
D$`Hi
L$`Hi
D$XH9H
D$89D$
|$(@}JHcL$(Hi
HcL$(H
HcD$0H
|$ @}BHcL$ H
HcL$ H
D$8H9
HcL$(Hi
D$ H9H
D$ H9H
D$PH9
HcL$,Hi
HcL$,Hi
HcL$,Hi
HcT$,Hi
HcL$,Hi
D$PH9
HcL$,Hi
D$ HcL$,Hi
HcL$,Hi
;D$0~
HcL$,Hi
HcL$,Hi
;D$$}
HcL$,Hi
D$PH9
D$PHcD$PH
D$(H9H
D$(H9H
D$8D+
D$4D+
T$0Hk
|$0Hk
L$0Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
D$pH9
HcL$XH
HcL$XH
~ HcL$XH
9D$xsO
9D$X}[HcL$XH
HcL$ Hi
HcT$ H
}2HcL$ H
HcL$ H
}%Hc|$ HcT$ H
D$@H9
D$00H
9D$h}%HcT$hH
9D$hu
D$`HcL$`H
D$8HcD$8H
D$t9D$P|BH
;D$t|&
L$(E3
L$`H3
L$ Hk
|,HcL$$H
D$(fD
L$ Hi
L$ Hk
L$ Hk
L$ Hk
T$ Hk
L$ Hk
}HHcL$@Hi
HcL$@Hi
L$XHk
D$ E3
D$(fD
L$lHk
L$lHk
@%9D$@
T$@Hk
D$h9D
L$@Hk
T$@Hk
L$@Hk
@%9D$Hsu
L$HHk
T$HHk
|$HHk
HcD$LH
L$HHk
L$`E3
L$`E3
D$HH;
L$`Hi
L$`Hi
D$EHk
}~HcL$0Hk
tBHcT$0Hk
D$(H9
s#HcL$0Hk
HcL$0Hk
HcL$ Hk
}xHcL$,Hk
D$ H+
@%9D$$
uCHcL$$Hk
D$ HcL$,H
9D$ u
L$@Hk
L$@Hk
T$@Hk
L$@Hk
L$@Hk
L$@Hk
L$@Hk
T$@Hk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
L$PHk
T$PHk
L$PHk
L$PHk
L$@Hk
L$hH3
HcL$ Hk
HcL$ Hk
HcL$ Hk
HcL$ Hk
usHcL$ Hk
uPHcL$ Hk
u-HcL$ Hk
HcL$8Hk
t*HcL$8Hk
HcL$tH
HcL$xH
HcL$|H
L$`Hi
T$`Hi
L$`Hi
L$`Hi
L$`Hi
L$`Hi
L$ Hi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ E3
L$(E3
L$ Hk
 H9D$Hu
L$ Hk
L$ Hk
L$ Hk
H9D$Hu
L$ Hk
L$(E3
L$ Hk
 H9D$Hu
L$ Hk
L$ Hk
L$ Hk
H9D$Hu
L$ Hk
|$ =|"
|$ )|
D$8H+
D$H9D$0s-
L$(Hi
L$(Hi
L$(Hi
D$$9D$,v
w*HcD$
HcL$$Hk
D$ HcL$$Hk
D$X9D$(
HcT$8Hk
HcL$8Hk
HcL$8Hk
D$ 9A
9D$0}(HcT$0Hk
HcD$0Hk
D$ 9D$0}2HcD$0Hk
D$ 9D$0uE
}6HcD$ Hk
L$hH3
D$0fD
|$<@}yHcL$<Hi
t[HcD$<Hi
D$HH+
|$0 N
v#HcL$<Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
D$hH9
L$xH3
L$`H3
L$0E3
L$hH3
L$!Hi
L$!Hi
L$!Hi
T$!Hi
L$!Hi
L$!Hi
L$!Hi
L$!Hi
L$!Hi
L$!Hi
D$!Hi
T$!Hi
D$(H9D$0s
L$!Hi
|$!Hi
|$!Hi
|$!Hi
|$!Hi
|$!Hi
L$!Hi
L$!Hi
L$!Hi
|$!Hi
|$!Hi
|$!Hi
|$!Hi
|$!Hi
|$!Hi
L$!Hi
L$(Hi
L$(Hi
L$(Hi
L$(Hi
D$(Mi
T$(Hi
L$(Hi
L$(Hi
D$(Mi
T$(Hi
L$(Hi
L$(Hi
D$(Mi
T$(Hi
L$(Hi
L$(Hi
D$(Mi
T$(Hi
L$(Hi
L$(Hi
D$(Mi
T$(Hi
L$0E3
L$0E3
T$ Hk
L$ Hk
D$PH9
L$ Hk
L$ Hk
L$ Hk
L$ Hk
L$HH3
\$0fD
L$HH3
L$ Hk
L$ Hk
D$ E3
D$T;D$@vu
$}0Hc
HcD$(H
HcD$\H
HcD$`H
D$hfD
L$1Hk
D$(Hc
D$(Hc
D$@H9
HcL$@Hi
D$@9D$0
HcL$0Hi
L$ fD
L$HH#
L$`H3
L$ fD
L$hH3
D$XH9D$(
L$hHk
L$hHk
D$p=&&
L$hHk
D$pfA
L$(Hk
L$(Hk
L$`H3
L$`H3
9D$pw-A
9D$pw.A
9D$pw%A
9D$pw%A
9D$pw%A
9D$pw%A
9D$pw%A
9D$pwXA
9D$pw%A
9D$pw%A
9D$pw%A
9D$pw%A
9D$pw%A
9D$pw]A
9D$pw%A
D$ Hi
D$!Hi
D$[3A
HcL$\H
L$HH3
D$ E3
D$0fD
D$0fD
L$ E3
L$ fD
L$0Hk
L$ fD
L$ fD
L$ fD
L$ fD
L$ fD
D$(H9
D$(H9
|$ @};H
HcL$ Hk
|$ @}
|$ @}'HcL$ Hk
|$ @|
HcL$ Hk
HcL$ Hk
HcT$ Hk
|$ @}>H
HcL$ Hk
|$ @|E
|$ @}'HcL$ Hk
|$ @|
HcL$ Hk
HcL$ Hk
HcL$ Hk
|$ @};H
HcL$ Hk
|$ @|
OHcL$ Hk
HcL$ Hk
HcL$ Hk
|$ @}kHcL$ Hk
tOHcL$ Hk
HcL$ Hk
HcL$ Hk
|$ @}*HcL$ Hk
L$ Hk
L$ Hk
D$ Mk
T$ Hk
L$ Hk
L$ Hk
D$ Mk
T$ Hk
L$ Hk
L$ Hk
D$ Mk
T$ Hk
L$ Hi
D$ Mi
T$ Hk
D$ Mi
T$ Hk
D$ Mi
T$ Hk
D$ Mi
T$ Hk
D$ Mi
T$ Hi
D$ Mi
T$ Hi
D$ Mi
T$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
D$ Hi
D$@Hk
D$ Mi
D$ Hi
L$@Hk
L$ Hi
D$ Hi
D$@Hk
D$ Hi
T$@Hk
L$ Hi
T$@Hk
L$ Hi
T$@Hk
L$ Hi
D$ Hi
D$@Hk
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
D$ Mi
T$ Hi
L$ Hi
L$ Hi
L$ Hi
T$ Hi
T$ Hi
D$ Hi
D$ Hi
L$ Hk
T$ Hk
T$ Hk
D$ Hk
D$ Hk
L$ Hk
T$ Hk
T$ Hk
D$ Hk
D$ Hk
T$8Hk
L$8Hk
L$8Hk
L$8Hk
L$8Hk
T$8Hk
L$8Hk
L$8Hk
L$8Hk
L$8Hk
T$8Hk
L$8Hk
L$8Hk
L$8Hk
L$8Hk
@%9D$(
L$(Hk
D$p9D$0t]
L$(Hk
T$(Hk
+D$,D
D$p9D$0u
L$(Hk
D$p9D$0tCH
L$XHk
L$XHk
T$XHk
L$XHk
L$XHk
T$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
T$XHk
L$XHk
L$XHk
T$XHk
L$XHk
L$XHk
L$XHk
L$XHk
L$XHk
T$XHk
|$XHk
T$XHk
L$XHk
L$pE3
D$8E3
T$$Hk
|$$Hk
L$$Hk
L$$Hk
T$$Hk
L$$Hk
L$$Hk
D$x9H!w
D$ Hk
L$pHk
T$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
T$8Hk
T$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
D$(E3
D$0H9
T$%Hk
L$%Hk
D$@H9
|$ d|RH
T$(Hk
L$(Hk
D$@H9
L$(Hk
L$(Hk
L$(Hk
D$(.H
L$pH3
L$0H#
L$ H#
L$`H3
9D$0sPH
L$ Hk
L$ Hk
D$ Mk
T$ Hk
D$ Hi
T$ Hi
D$ Hi
|$ Hi
T$ Hi
T$ Hi
D$ Hi
D$ Hi
L$ Hi
L$ Hk
L$ Hk
T$0Hk
L$0Hk
L$0Hk
L$0Hk
L$0Hk
}(HcL$ Hk
D$`H9
L$(Hk
L$8Hk
L$8Hk
L$8Hk
L$8Hk
HcL$XH
HcD$`H
D$\HcL$\H
HcL$HH
D$pH9
HcL$|H
L$XE3
\$TfD
D$ E3
L$\E3
\$XfD
9D$(s
D$,D3
D$ 9D$$s}H
@+9D$ 
9D$Lu
@+9D$L
9D$Lu
9D$\sA
9D$\sdH
L$HH3
D$ 9D$@}&
HcL$@H
HcD$@H
HcD$@H
D$ 9D$@}&Hc|$@
L$ Hk
L$ Hk
L$ Hk
D$0Mk
T$ Hk
D$0Hk
L$ Hk
L$ Hk
H9D$Pv
D$ Hk
L$(Hk
L$(Hk
D$(Mk
T$,Hk
L$,Hk
9D$0sK
9D$0s_3
D$H9D$ s
T$ Hk
D$ E3
D$0fD
D$0fD
D$ E3
D$ E3
D$ E3
D$ E3
D$@H9D$(thH
;D$Xu
L$ Hk
D$HH9
D$ H9
H9D$0
H9D$0
H9D$0
H9D$0
D$ H9
D$ H9
D$ H9
D$ H9
D$$;D$puY
D$$;D$puY
HcL$`Hi
HcL$`Hi
u%HcL$`Hi
u%HcL$`Hi
u#HcL$`Hi
L$pH3
L$XH3
|$(<v
}@HcD$PHcL$P
+D$PHc
|$P@}5HcL$PHi
}fHcL$PH
~NHcL$PHk
HcD$PHk
L$ fD
D$ E3
D$:dH
T$(Hk
L$(Hk
D$hH9
L$(Hk
L$(Hk
L$(Hk
L$(Hk
D$ E3
T$0Hk
L$0Hk
D$hH9
L$0Hk
L$0Hk
L$0Hk
L$0Hk
T$!Hk
L$!Hk
D$0H9
L$(H+
|$ @B
D$<Ei
D$<9D$P
HcL$PHi
|$$du
L$ fD
L$ fD
L$ fD
L$`E3
L$hH3
L$0H3
L$8fA
L$@H3
L$PH3
D$`D;
L$xH3
L$PH3
D$@Ei
L$`H3
D$ E3
L$@H3
D$(fD
D$ fD
D$ fD
D$8fD
D$(fD
D$8fD
D$(fD
D$(fD
HcD$4H
HcD$4H
|$\0t!
|$\2t2
|$\3t>
|$\At_
|$\`tk
L$`H3
L$`H3
D$@9D$p
L$ Hi
D$ H+
D$X9D$D}
D$\9D$4}
D$D9D$L|
9D$L~
L$0Hi
D$x N
D$p N
L$LHk
L$LHk
L$LHk
D$$9D$H
D$0fD
D$0fD
D$0fD
L$$Hk
wBHcD$XH
D$XH9H1
L$xHi
L$PH3
L$xHi
L$xHi
L$PH3
D$`9D$ s0H
L$ Hi
L$HH3
D$XH9H1
L$@Hi
D$8H9D$ t
L$(Hi
D$@H9D$ t
L$@Hi
L$8Hi
L$8Hi
L$AHi
L$8H3
w>HcD$@H
D$4Hk
L$4Hk
L$4Hk
w>HcD$@H
D$0Hk
T$0Hk
D$ H9
L$0Hk
L$0Hk
L$0Hk
D$4Mk
T$4Hk
L$4Hk
D$4Mk
L$4Hk
L$4Hk
;D$ sBH
w@HcD$`H
L$THk
L$THk
H9D$H
T$THk
L$(Hi
D$0H9H1
D$@H9D$ 
D$0H9H1
L$@Hi
L$@Hi
|$  t
L$QHk
L$QHk
};HcL$
D$89D$(
HcL$(Hk
HcT$(H
D$ Hc
 9D$(
HcL$(Hk
D$ Hc
HcL$(H
D$ Hc
HcD$(H
HcL$(Hk
HcL$(Hk
9D$(}8HcL$(Hk
HcL$(Hk
9D$(}8HcL$(Hk
HcL$(Hk
9D$(}(HcL$(Hk
9D$(}(HcL$(Hk
L$HHk
L$(Hi
L$8Hk
T$(Hk
T$(Hk
L$(Hk
T$(Hk
T$(Hk
T$(Hk
T$(Hk
T$(Hk
L$(Hk
L$(Hk
L$$Hk
L$$Hk
XHcL$hHk
D$@HcL$@H
D$0HcL$@Hk
D$DA9C
#L$(H
HHcL$XH
D$0HcL$XHk
#L$(H
9D$X}GHcL$XH
~ HcL$XH
9D$X}RHcL$XH
D$hE3
wZHcD$(H
L$HHk
L$HHk
L$HHk
L$HHk
D$HHk
D$HMk
L$hH3
D$09D$4}ZHcT$hH
HcD$<H
D$ E3
D$ 9D$4
D$$Hi
T$(Hk
L$(Hk
L$(Hk
L$(Hk
L$(Hk
T$(Hk
L$(Hk
D$`H9
L$(Hk
L$(Hk
L$(Hk
T$(Hk
L$(Hk
L$(Hk
L$(Hk
L$(Hk
T$ Hk
SUVWATH
9D$`s
pA\_^][
D$@ H
D$`HcL$`H
D$PH9H8
D$(9D$0
9D$0sK
L$0Hk
L$0Hk
D$0Mk
T$0Hk
L$(Hk
L$(Hk
PH9D$0t7H
@(H9A u
L$0Hk
L$(Hk
L$(Hk
PH9D$0
D$@9D$
D$X9D$ s,
HcL$(H
$}?Hc
;D$@|
L$@H3
L$HH3
L$PH3
HcT$ H
HcL$ H
D$0H#
D$(H#
D$8H#
H9D$8v
D$8HcL$8H
L$ H3
L$ fD
L$@H3
L$ Hi
D$ Hk
D$ Hk
D$ E3
L$0Hi
3T$P3T$d
3L$P3L$d
3T$T3T$h
3L$T3L$h
3T$X3T$l
3L$X3L$l
3T$\3T$0
3L$\3L$0
3T$`3T$4
3L$`3L$4
3T$d3T$8
3L$d3L$8
3T$h3T$<
3L$h3L$<
3T$l3T$@
3L$l3L$@
3T$03T$D
3L$03L$D
3T$43T$H
3L$43L$H
3T$83T$L
3L$83L$L
3T$<3T$P
3L$<3L$P
3T$@3T$T
3L$@3L$T
3T$D3T$X
3L$D3L$X
3T$H3T$\
3L$H3L$\
3T$L3T$`
3L$L3L$`
3T$P3T$d
3L$P3L$d
3T$T3T$h
3L$T3L$h
3T$X3T$l
3L$X3L$l
3T$\3T$0
3L$\3L$0
3T$`3T$4
3L$`3L$4
3T$d3T$8
3L$d3L$8
3T$h3T$<
3L$h3L$<
3T$l3T$@
3L$l3L$@
3T$03T$D
3L$03L$D
3T$43T$H
3L$43L$H
3T$83T$L
3L$83L$L
3T$<3T$P
3L$<3L$P
3T$@3T$T
3L$@3L$T
3T$D3T$X
3L$D3L$X
3T$H3T$\
3L$H3L$\
3T$L3T$`
3L$L3L$`
3T$P3T$d
3L$P3L$d
3T$T3T$h
3L$T3L$h
3T$X3T$l
3L$X3L$l
3T$\3T$0
3L$\3L$0
3T$`3T$4
3L$`3L$4
3T$d3T$8
3L$d3L$8
3T$h3T$<
3L$h3L$<
3T$l3T$@
3L$l3L$@
3T$03T$D
3L$03L$D
3T$43T$H
3L$43L$H
3T$83T$L
3L$83L$L
3T$<3T$P
3L$<3L$P
3T$@3T$T
3L$@3L$T
3T$D3T$X
3L$D3L$X
3T$H3T$\
3L$H3L$\
3T$L3T$`
3L$L3L$`
3T$P3T$d
3L$P3L$d
3T$T3T$h
3L$T3L$h
3T$X3T$l
3L$X3L$l
3T$\3T$0
3L$\3L$0
3T$`3T$4
3L$`3L$4
3T$d3T$8
3L$d3L$8
3T$h3T$<
3L$h3L$<
3T$l3T$@
3L$l3L$@
3T$03T$D
3L$03L$D
3T$43T$H
3L$43L$H
3T$83T$L
3L$83L$L
3T$<3T$P
3L$<3L$P
3T$@3T$T
3L$@3L$T
3T$D3T$X
3L$D3L$X
3T$H3T$\
3L$H3L$\
3T$L3T$`
3L$L3L$`
qHcD$(3
D$ 9A
HcL$$H
D$$9D$P}
Lc\$$H
|$P@|cH
D$ HcL$ H
}QHcL$ H
D$09D$
9D$ }"HcL$ H
6HcD$ 
|$ @}
HcD$ 
9D$ }"HcL$ H
\HcD$ 
|$ @}
HcD$ 
|$ @}
HcL$ H
HcL$ H
|$ @}4HcD$ 
6HcD$ 
HcD$ 
\HcD$ 
|$ @}4HcD$ 
6HcD$ 
HcD$ 
\HcD$ 
L$$Hk
D$HH9
D$PE3
D$(H9
L$0Hk
L$XHk
L$XHk
H9D$0
L$ E3
T$4E3
T$,E3
L$`H3
D$0H9
D$ H9H
H9D$ t
L$ Hk
L$HH3
D$,9D$ 
HcL$ H
D$$LcD$,HcT$ H
HcT$,H
D$(9D$ 
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
L$@3A
D$ E3
\$HfD
\$ E3
D$89D$
D$89D$
D$89D$
D$89D$
D$@9H
D$(9D$Prv
?;D$Ps
D$PD+
|$ 8s
L$@H3
D$09D$
D$09D$
D$@fD
L$4Hk
D$(9H!w
D$$9D
$;D$(
9D$ w%A
9D$ w1A
9D$ w1A
9D$ w1A
9D$ wIA
L$pE3
D$0H9D$(v
HcD$0H;D$(v.H
<HcD$0H;D$(u&H
HcD$0H
D$(;D$$}I
>LcT$ Mk
D$ H= N
L$HH3
T$ Hk
T$ Hk
D$(9D
D$ Hk
D$ Hk
D$ Hk
|$(duIH
D$ Hk
D$ Hk
D$$Hk
D$$Hk
D$$Hk
D$09D$4
D$ 9D$$s,D
D$09D$4
D$89D$<}
D$ 9D$$s-D
D$09D$4
D$89D$<}
D$ 9D$$s-D
D$49D$@
D$H9D$8
D$P9D$Dw#
D$P9D$Dw#
|$  u
|$ !u
|$ "u
|$ #u
|$ $u
|$ %u
|$ &u
|$ 'u
|$ (u
|$ )u*
|$ *u
|$ +u
|$ ,u
|$ -u
|$ .u
L$0Hk
L$0Hk
L$0Hk
L$0Hk
L$0Hk
D$09D$4
L$PHi
HcD$ H
|$8-u
|$82u
|$8(u}
|$8(s
9D$0|iL
L$`Hk
L$pHk
D$DHk
D$DHk
D$DHk
L$DHk
L$DHk
L$DHk
D$DHk
L$DHk
L$DHk
L$DHk
|$H,s@
|$X!u
|$X&u
|$X(u
|$X)u<
|$X*u-
|$X+u*
|$X,u]A
D$49D$8
D$49D$8
D$09D$4
D$89D$<}
L$hH3
D$09D$4
D$89D$<}
L$pH3
D$H9D$L
HcD$0Hk
T$ Hk
D$ Hk
D$ Hk
D$ Hk
}8HcL$ Hk
HcL$ Hk
L$`Hk
L$`Hk
L$`Hk
T$`Hk
T$`Hk
T$`Hk
L$0Hk
L$0Hk
L$0Mk
D$0Mk
L$0Hk
|$` uIH
L$@Hk
L$@Hk
L$@Hk
D$ E3
L$@Hk
D$ E3
D$pHcL$HH
D$@9D$0tsH
|$0d~
|$0P~
|$0(~
|$0d~
|$0d~
|$0d~
|$0d~
9D$(}n
9D$(~%
H9D$8vg
H9D$0
|$02|
D$(9D$0|
D$(9D$0~'
D$(9D$0u
D$(9D$0}
D$L9D$0~
D$L9D$0u
D$49D$Lu
D$L9D$0}
D$49D$0~
D$49D$0u
D$49D$Lu
D$49D$0}
D$ E3
9D$@s
+D$@H
9D$DstH
9D$\r
9D$Dw
|$ J|QH
|$ G}U
|$ C|NH
|$ @}LH
L$ Hi
D$T9D$P
HcL$hHi
HcL$hHi
HcL$hHi
L$@Hi
D$8HcL$hHk
D$8HcL$XHk
D$ 9D$$s+
D$09D$(
HcL$(H
HcL$(H
zHcL$(H
[HcL$(H
<HcL$(H
HcL$(H
HcL$(H
HcL$(H
D$,9D$(
HcL$(H
HcL$(H
D$ 9D$$
HcL$$H
HcL$$H
zHcL$$H
[HcL$$H
<HcL$$H
HcL$$H
HcL$$H
HcL$$H
D$ 9D$0
HcL$0H
HcL$0H
zHcL$0H
[HcL$0H
<HcL$0H
HcL$0H
HcL$0H
HcL$0H
HcL$0H
D$HEi
D$H9D$`
HcL$`Hi
D$T9D$0
HcL$0H
HcL$0H
HcL$0H
HcL$0H
vHcL$0H
WHcL$0H
HcL$0H
D$P9D$0
HcL$0H
HcL$0H
HcL$0H
HcL$0H
vHcL$0H
WHcL$0H
HcL$0H
D$</P
D$\9D$@
L$@Hc
09D$`tXH
9D$HuQH
D$(%?
T$9Hk
L$9Hk
T$9Hk
L$9Hk
;D$$~
;D$$~
L$!Hk
L$!Hk
L$!Hk
D$09D$(r
L$(Hk
HcD$TH
HcD$DH
D$$""""H
L$ Hk
L$ Hk
HcD$,H
\$ fD
9D$ w3A
9D$ w%A
9D$ w%A
9D$ w%A
9D$ w%A
9D$ w>A
9D$ w%A
D$ ;D$H
L$ fD
wfHcD$
L$ fD
L$0Hk
L$0Hk
L$@Hk
D$hHk
D$hHk
wlHcD$$H
HcD$(H
L$,Hk
L$(Hk
L$ fD
D$PHk
L$ fD
D$@Hk
9D$ w%A
9D$ w%A
9D$ w>A
9D$ w%A
9D$ w3A
9D$ w3A
9D$ w3A
9D$ w3A
9D$ w1A
9D$ w4A
9D$ w4A
9D$ w4A
9D$ w4A
9D$ w1A
9D$ w4A
9D$ w.A
9D$ w.A
D$`fA
D$T9D$`}
HcL$`H
D$49D$p}
HcL$pH
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w1A
9D$(w%A
HcD$0H
D$@=)
D$jfA
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
L$IHk
D$hfD
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
L$`Hk
D$hfD
L$xH3
D$ E3
D$ E3
D$ E3
D$ E3
\$ E3
HcD$8H
D$4%?
D$4%?
D$!E3
D$!E3
D$@fD
L$efA
D$D%P
D$D%_
D$D%P
&&&&&&&
&&&&&&
 !"#$%
HcD$XH
HcL$<H
HcL$<H
HcL$<H
Lc\$<H
HcL$<H
HcL$<D
L$hE3
L$iE3
L$ZHk
L$DHk
L$DHk
L$DHk
9D$@} H
D$@E3
9D$@}
9D$D}
9D$D}
|$ @}`HcL$ Hi
tAHcL$ Hi
|$X t9
HcL$0Hi
tnHcL$0Hi
HcL$0Hi
HcL$0Hi
L$ fD
T$@Hk
L$@Hk
D$`H9
L$@Hk
D$ 9D$<uB
HcL$ H
}'HcL$ H
HcL$ 
HcL$ H
L$ fA
HcD$0H
D$ E3
HcD$8H
HcD$8H
|$ ?v
L$$Hk
L$<Hk
L$<Hk
L$<Hk
L$<Hk
L$<Hk
L$<Hk
L$<Hk
L$pH3
L$PH3
L$8Hk
8HcD$HHi
D$ HcD$HHi
tmHcD$HHi
HcD$HHi
HcD$HHi
8HcD$HHi
HcD$HHi
HcD$HHi
HcD$HHi
|$ ?w
|$ ?w
|$ ?w>
|$ &t
|$ 't
|$ ?w>
|$ &t
|$ 't
L$XHk
D$89D$0
D$89D$0
D$89D$0
D$89D$0
L$8Hk
|$(=|"
|$()|
|$02r
|$0#r
|$02s
|$0#s
D$xMk
T$xHk
L$xHk
D$DD+
D$HPH
D$$9D$Xs
D$ ;D$`
HcD$0H
HcD$8H
HcD$8H
9D$$s}
L$$Hk
L$DHk
D$0E3
w.HcD$<H
D$4lH
HcD$<D
HcD$<
HcD$<H
HcD$<
HcD$<
L$PH3
RtlMH
9D$4s
9D$(s/H
9D$ s,
D$ Hi
D$P9D$ s$D
H9D$Hu
D$89D$(sHD
D$xH9D$8
H9D$Xu1H
@.9D$ s$
@`H9D$(~fH
D$(RtlMH
D$`Rtla
D$LRtlb
L$HE3
D$H9D$XsNH
L$HE3
D$H9D$XsNH
L$HE3
D$H9D$XsNH
|$8(vyH
9D$ s:
|$  s1H
L$ Hk
L$<Hk
HcD$<H
L$8E3
L$PH3
HcD$$H
D$PH=
D$PH=
D$PH=
D$(9D$Ps
D$(9D$Ps
D$(H+
D$`H=
D$PH=X
D$PH=
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
9D$Ps
;D$Pv!H
9D$hw*
------
-------
 -!"#---$$$--------------%--&'()*+,f
$9D$@s"H
$9D$@s)H
$9D$@s)H
$9D$0s"H
D$49D$`s
D$49D$`s
$9D$0s"H
$9D$@s)H
D$ 9D$`s
9D$@s
@@9D$,sM
L$,Hk
HcD$,H
HcD$4H
HcD$4H
9D$ s9
9D$ s!D
9D$8r
D$hD9X
D$ H9
RtlSH
9D$0s6
D$$9D
9D$$s@
L$$Hk
L$ Hk
9D$$upH
9D$ tCH
T$ Hk
D$X9D$
9D$Ps
9D$ u
HcD$0H
D$HH+
D$D9D$8
9D$TsFH
9D$Tu
9D$8s
D$D9D$8
D$0H+
9D$8s
D$0H9
D$0H+
D$0H9AX
D$HH-
D$HH-
D$0H9AXs
D$PHi
D$HH9D$@v
L$8E3
L$pH3
L$0E3
L$8E3
L$pH3
L$0E3
L$8E3
L$pH3
L$8E3
L$8E3
L$PH3
9D$ s
D$0H9
9D$ s
9D$ s
D$(H9D$ t7H
L$8E3
L$XH3
H9D$(tBH
H9D$(
L$PE3
H9D$(u%H
H9D$(u8H
D$8H9D$(trH
RtlMH
9D$hs
L$PH+
D$PH9D$8
9D$HsMH
L$HHk
9D$Hu
L$XE3
D$<9D$`s
D$`E3
D$<9D$`
L$hE3
L$0E3
D$<9D$`s
D$`E3
L$hE3
L$HE3
L$pE3
L$`E3
D$xH9D$8
9D$lsV
L$lHk
L$PE3
L$PE3
D$pH;
D$hH9D$8
D$hH9D$8
L$HE3
D$ 9D$0
D$@9D$4
D$ 9D$0s
D$0E3
D$8H9D$(tiH
D$(H9D$ 
D$`H9D$Xw
D$`H+
D$(H9D$ 
D$`H9AXsVH
9A4s!H
D$,9A(t1H
9D$Dv
9D$Dv
9D$Dv
H;D$Pw
D$PH+
D$@H9D$(
D$PH9AXs
D$H9D$8
L$XE3
L$pH3
D$`9D$<v
9D$ s
@@9D$ sU
L$ Hk
@x9D$ sU
L$ Hk
L$xH3
9D$(u
9D$ s
D$,9D$8sb
@49B4s>
D$8H-
H;D$8w
D$8H+
D$0H9D$ 
D$8H9AXs
9D$Xs0
L$XHk
RtlSH
w_HcD$PH
RtlSH
w1HcD$0H
D$89D$ }
HcL$ H
9D$ } HcL$ H
D$89D$ }
HcL$ H
RtlSH
L$@E3
RtlSH
$9D$8s
L$8E3
D$@H+
L$0E3
D$9~H
L$@H+
9D$ s
9D$xu
L$XH3
D$10H
9D$hsUH
L$hHk
L$hHk
9D$ s
9D$(u
9D$ u
9D$ s(
9D$(u
9D$ u
9D$ s(
9D$$u
9D$ u
D$D9D$Lr
D$@9D$Tr
D$(RtlHH
D$(RtlHH
H9D$0u
D$ H9
|$4@t&H
L$XE3
D$h;H(wC
;D$`w2H
;D$`u$
@(9D$PsTH
HcD$$H
L$ fD
<$jwOHc
L$`E3
L$ fD
LcD$(HcL$(H
HcL$(H
 HcL$8H
L$ fD
L$ fD
D$pHc
D$`Hc
D$ E3
$9D$(s
T$@Hc
D$`Hc
D$`Hc
D$49D$(sW
|$( sP
L$(Hk
L$HH3
D$(H+
H9D$ v
L$ Hi
9D$ s
L$@Hi
L$DHk
L$`Hk
D$ E3
L$DHk
L$@Hk
L$HH+
D$ E3
L$ Hk
L$!Hk
L$!Hi
L$pHk
|$82t
L$xH3
D$09D$8
HcD$8
LcD$8H
HcL$8
|$`(stH
HcL$8H
T$@HcL$8H
HcL$8H
=HcL$8H
T$@HcL$8H
HcL$8H
HcL$8H
LcD$HHcL$HH
T$PHcL$HH
JLcD$HHcL$HH
T$PHcL$HH
9D$(slH
$;D$(s$L
D$(9D
9D$8r
9D$8t7H
L$8Hi
$;D$(sFL
9D$Xs
T$ Hk
L$ Hk
L$ Hk
L$ Hk
L$ Hk
H9D$ u
H9D$ u
RtlHH
;D$$u
$;D$(sGL
HcL$ H
HcD$ H
HcT$ HcL$ Hc|$ H
HcT$ H
HcL$ H
HcL$ H
HcL$ H
HcD$ H
HcT$ HcL$ Hc|$ H
HcT$ H
HcL$ H
HcL$ H
L$8Hi
|$H~v
D$H9D$
D$H%/
D$H% 
T$(Hi
@$9D$,s
L$(Hi
|$,~s@
9D$Ps
D$(RtlHH
D$I;D$h
D$ E3
D$H9D$(sjH
L$ E3
9D$(s:
L$(Hk
L$(Hk
H9D$ u
H9D$ u
D$@L;
L$pH3
D$(9D$Tv
T$hH+
HcH$H
H9D$Ps
@(9D$Tr
D$hH+
D$ H9HX
@XH9BX
D$ H9HX
HcL$4H
HcL$4H
HcL$4H
HcL$4H
HcL$4H
HcT$4HcL$4Hc|$4H
}cHcL$4H
HcL$4H
T$ E3
HcT$4H
D$HHcL$0H
HcL$0H
HcT$0H
D$4HcL$0H
9D$4}]HcL$4H
HcL$4H
T$ E3
HcT$4H
D$4HcL$0H
9D$4}SHcL$4H
t=HcT$4H
HcL$4L
}VHcL$4H
t?HcT$4HcL$4H
}lHcL$4H
tULcL$4LcD$4HcL$4H
L$`E3
D$ E3
L$HE3
HcL$0H
HcL$0H
VHcL$0H
HcL$0H
L$ fD
L$ fD
D$XH+
D$ E3
D$ E3
D$H9D$0r
D$H9D$0v
L$HE3
L$HE3
@D9D$0
D$pHc
weHcD$ H
;D$`u7
`wvHcD$
L$ fD
9D$ }EH
L$ fD
L$HH3
D$Hf#
D$Hf#
D$Hf#
D$Hf#
H9D$8u
9D$8w
D$Hf#
D$Hf#
D$Hf#
D$Hf#
@(9D$4u0H
wnHcD$
D$@fD
whHcD$<H
D$$9D$ w
9D$4~)HcL$4H
D$$9D$ v
HcL$4H
D$0fD
D$0fD
9D$@v
D$0fD
D$0fD
D$0fD
L$PH3
;D$ ~
HcL$ H
HcL$ H
D$ 9D$$~
HcL$ H
HcL$ H
~\HcL$ H
HcL$ H
HcL$ H
~\HcL$ H
HcL$ H
HcL$ H
L$ H3
L$(H3
L$(H3
L$ fD
|$$(~
|$$#~
|$$2~
|$$(~
|$$#~
L$`H3
L$@H3
D$$=)
D$,HcT$ H
D$,HcT$ H
HcT$ H
wzHcD$PH
D$4fA
D$(fE#
D$,fA
HcD$XH
|$ ,w
|$$Zv
+D$$k
|$$_v
+D$$k
|$$Zv
+D$$k
|$$_v
+D$$k
|$$Lv
|$$Fv
|$$>v
|$ dv
;D$,v
;D$,v
T$8Hk
T$8Hk
T$8Hk
T$8Hk
L$8Hk
L$8Hk
D$0fE#
D$8fA
HcD$ H
D$<f#
D$89D$ 
D$<f#
D$<fA#
D$<f#
D$0f#
D$0f#
D$0f#
D$0f#
D$0fA#
D$0f#
D$0fA#
D$0f#
D$0f#
D$0f#
D$0f#
D$0f#
D$,f#
D$,f#
D$,f#
D$,fA#
D$,f#
D$,f#
w:HcD$DH
HcD$<H
|$ _wdD
|$ _w/D
HcD$,H
HcD$(H
D$H#H
HcD$$H
D$(fA#
D$ ;D$x
D$(f#
D$(f#
D$(fA#
D$(f#
D$(f#
D$89D$ s[
HcL$4H
D$@HcL$D
D$DHcL$4H
L$DEk
HcD$$H
L$ Hi
T$ Hi
L$ Hi
T$ Hi
L$ Hi
T$ Hi
L$ fD
HcD$(H
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$PfD
D$@fD
D$@fD
D$@fD
D$@fD
fffffff
fffffff
x ATH
ParseFileBufToLines
%s(): Line(%d)  
----> ParseFileBufToLines()
%04d: "%s"
ParseFileBufToLines(): Exceed nMaxByteCntLine! nNumLinesRead:%d pucBuffer: "%s"
ParseFileBufToLines(): Reach File End!!
ParseFileBufToLines():End Of configuration file, break
<---- ParseFileBufToLines()
PlatformReadFile
PlatformReadFile(): szFileName should not be NULL!
PlatformReadFile(): pBufOfLines should not be NULL!
PlatformReadFile(): failed to map the file, %s!, ndisStatus: %#X
PlatformReadFile(): failed to open the file, %s!, ndisStatus: %#X
PlatformReadFile(): NdisInitializeString() failed! szFileName: %s
RFOff
N6WriteRegRfPowerState
N6WriteRegRfPowerState(): Status=%x
AdhocLinkState
N6WriteAdhocLinkState
N6WriteAdhocLinkState(): Status=%x
N6IndicateScanComplete
N6IndicateDisassociation(): Indicate CCX SCAN_CONFIRM!
N6IndicateConnectionStart
N6IndicateConnectionStart(): Indicate CCX CONNECTION_START!
N6IndicateConnectionComplete
N6IndicateConnectionComplete(): Indicate CCX CONNECTION_COMPLETION!
N6IndicateAssociationStart
N6CCXIndicateAssociationStart(): bCCXwaitCCXInfoInProgess is TRUE!!!
N6IndicateAssociationStart(): Indicate CCX Association Start!
N6IndicateAssociationComplete
DrvIFIndicateAssociationComplete(): OpMode: %d
DrvIFIndicateAssociationComplete(): failed to allocate memory for indication.
N6IndicateAssociationComplete(): Indicate CCX Association COMPLETION!
N6IndicateDisassociation
N6IndicateDisassociation(): Indicate CCX DISASSOCIATION!
N6IndicateRoamingStart
N6IndicateRoamingStart(): Indicate CCX ROAMING START!
N6IndicateRoamingComplete
N6IndicateRoamingComplete(): Indicate CCX ROAMING COMPLETION!
LinkQualityReportTimerCallback
LinkQualityReportTimerCallback(): failed to allocate resources for link quality reporting.
N6PushIndicateStateMachineAp
N6PushIndicateStateMachineAp(): pCurrentSta is NULL.
Transit from 0x%X to 0x%X.
N6_STATE_INITIAL
N6_STATE_AP_INCOMING_ASOC_STARTED
N6_STATE_AP_INCOMING_ASOC_REQ_RECVD
N6_STATE_AP_INCOMING_ASOC_COMPLETE
N6_STATE_DISASOC
N6PushIndicateStateMachineInfra
N6_STATE_CONNECT_START
N6_STATE_ASOC_START
N6_STATE_ASOC_COMPLETE
N6_STATE_CONNECT_COMPLETE
N6_STATE_DISASOC DO IT  !!
N6_STATE_ROAM_START
N6_STATE_ROAM_COMPLETE
N6PushIndicateStateMachineIBSS
==>N6PushIndicateStateMachineIBSS() pIndicateEngine->Flag  %d
==>N6PushIndicateStateMachineIBSS() N6_STATE_ASOC_COMPLETE  SM_fConnected
==>N6PushIndicateStateMachineIBSS() N6_STATE_ASOC_COMPLETE not SM_fConnected
<==N6PushIndicateStateMachineIBSS() 
N6PushIndicateStateMachine
N6PushIndicateStateMachine(): N6_STATE_INITIAL with RT_OP_MODE_AP is unexpected!!!
N6PushIndicateStateMachine(): TODO!
SetRFPowerStateWorkItemCallback
N6CSet_DOT11_NIC_POWER_STATE(): failed to write registry.
SetAdhocLinkStateWorkItemCallback
SetAdhocLinkStateWorkItemCallback(): failed to write registry.
N6CWaitForReturnPacket
N6CWaitForReturnPacket(): wait for un-returned packet (%d)
N6CWaitForReturnPacket(): end of waiting returned packet
PlatformReadAndMapFile
PlatformReadAndMapFile(): szFileName should not be NULL!
PlatformReadAndMapFile(): failed to map the file, %s!, ndisStatus: %#X
PlatformReadAndMapFile(): failed to open the file, %s!, ndisStatus: %#X
PlatformReadAndMapFile(): NdisInitializeString() failed! szFileName: %s
N6IndicateLinkSpeed
N6IndicateLinkSpeed  %d
PlatformIsInDesiredBSSIDList
IsInDesiredBSSIDList(): NumDot11DesiredBSSIDList is zero
N6FreeAdapter
===>N6FreeAdapter()
<===N6FreeAdapter()
InitializeAdapterCommon
====>InitializeAdapterWorkItemCallback
InitializeAdapterWorkItemCallback(): complete OID(%p) ++++++++
<====InitializeAdapterWorkItemCallback
N62ExtPortIndicatePwrStatus
Copy rf state related data from default port to ext port
GetTwoPortSharedResource
[0720]==>GetTwoPortSharedResource.
[0720]STATUS__DEFAULT_G_EXTENSION_N20.
[0720]STATUS__EXTENSION_FOLLOW_DEFAULT.
[0720]STATUS__DEFAULT_ONLY.
[0720]STATUS__EXTENSION_ONLY.
[0720]TWO_PORT_STATUS__ADHOC.
[0720]STATUS__WITHOUT_ANY_ASSOCIATE.Return.
[0720]->OBJECT__pStaQos_WMMParamEle.
[0720]->OBJECT__BW.
FW_DL_F
RT_INIT_OK
 RT_MUTUAL_AUTHENTICATION_FAIL
TranslateNdisPsToRtPs
TranslateNdisPsToRtPs(): Unknown ndisPsMode: 0x%X !!!
N6ReadCommonRegistry
 ==> N6ReadCommonRegistry()
<== N6ReadCommonRegistry, Status=%x
 -- failed
Bogus field size %d
Overriding NetworkAddress is invalid - %02x-%02x-%02x-%02x-%02x-%02x
<-- N6ReadCommonRegistry, Status=%x
N6UpdateDefaultSetting
N6UpdateDefaultSetting(): bUnloadDriverwhenS3S4 = %d
N6UpdateDefaultSetting(): QosCapability=0x%x
N6UpdateDefaultSetting(): bCCXenable(%d), bRegCcxRm(%d), OffLineDurUpLimit(%d), UpdateCCXCellPwr(%d), CCXCAC(%d)
UpdateDefaultSetting(): bSupportTurboMode=%d, bAutoTurboBy8186=%d
pNdisCommon->RegInactivePsMode = %d
LeisurePs On!!
LeisurePs Off!!
N6RestoreLastInitSetting
===> N6RestoreLastInitSetting()
<=== N6RestoreLastInitSetting()
N6RestoreLastInitSettingAterWakeUP
N6RestoreLastInitSettingAterWakeUP pSecInfo->AuthMode = %x
N6RestoreLastInitSettingAterWakeUP pSecInfo->PairwiseEncAlgorithm = %x
SetRFPowerStateWorkItem
SetAdhocLinkStateWorkItem
LinkQualityReportTimer
InitializeTimer
InitializeAdapterWorkItem
ReleaseNdis6CommonResources
ReleaseNdis6CommonResources()
N6CFreeSpinLocks
<===N6CFreeSpinLocks()
N6CQueryInformation
====> N6CQueryInformation, OID=0x%08x
N6CQueryInformation intercepted by MpEventQueryInformation! Status 0x%08x
Query Information, OID_GEN_HARDWARE_STATUS: 0x%08X
Query Information, OID_GEN_MEDIA_SUPPORTED or OID_GEN_MEDIA_IN_USE: %08x
Query Information, OID_GEN_PHYSICAL_MEDIUM:%d(NdisPhysicalMediumWirelessLan)
Query Information, OID_GEN_MEDIA_CAPABILITIES: %d
Query Information, OID_GEN_VENDOR_ID:%02x:%02x:%02x
Query Information, OID_GEN_VENDOR_DESCRIPTION:%s
Query Information, OID_GEN_DRIVER_VERSION:%08x
Query Information, OID_GEN_CURRENT_LOOKAHEAD or OID_GEN_MAXIMUM_LOOKAHEAD: %d
Query Information, OID_GEN_MAXIMUM_FRAME_SIZE:%d
Query Information, OID_GEN_MAXIMUM_TOTAL_SIZE:%d
Query Information, OID_GEN_TRANSMIT_BLOCK_SIZE or OID_GEN_RECEIVE_BLOCK_SIZE:%d
Query Information, OID_GEN_TRANSMIT_BUFFER_SPACE:%d
Query Information, OID_GEN_RECEIVE_BUFFER_SPACE:%d
Query Information, OID_GEN_MAC_OPTIONS:%08x
Query Information, OID_GEN_LINK_SPEED:%d Mbps
Query Information, OID_GEN_MEDIA_CONNECT_STATUS: NdisMediaStateConnected
Query Information, OID_GEN_MEDIA_CONNECT_STATUS: NdisMediaStateDisconnected
Query Information, OID_FFP_SUPPORT: (not supported)
Query Information, OID_GEN_SUPPORTED_GUIDS: (not supported)
Query Information, OID_GEN_MAXIMUM_SEND_PACKETS:%d
Query Information, OID_802_3_PERMANENT_ADDRESS:%02x:%02x:%02x:%02x:%02x:%02x
Query Information, OID_802_3_CURRENT_ADDRESS:%02x:%02x:%02x:%02x:%02x:%02x
Query Information, OID_802_3_MAXIMUM_LIST_SIZE:%d
Query OID_802_3_MULTICAST_LIST:
Query OID_DOT11_OPERATION_MODE_CAPABILITY:
Query OID_DOT11_CURRENT_OPERATION_MODE:
Query OID_DOT11_STATISTICS:
Query OID_DOT11_DESIRED_BSS_TYPE:
Query OID_DOT11_CURRENT_PHY_ID: phyid%d
Query OID_DOT11_MEDIA_STREAMING_ENABLED:
Query OID_DOT11_DESIRED_SSID_LIST:
Query OID_DOT11_EXCLUDE_UNENCRYPTED:
Query OID_DOT11_PRIVACY_EXEMPTION_LIST:
Query OID_DOT11_IBSS_PARAMS:
Query OID_DOT11_PERMANENT_ADDRESS:
Query OID_DOT11_CURRENT_ADDRESS or OID_DOT11_MAC_ADDRESS:
Query OID_DOT11_CURRENT_ADDRESS or OID_DOT11_MAC_ADDRESS: Invalid length (%d < %d)
Query OID_DOT11_STATION_ID:
Query OID_DOT11_CURRENT_REG_DOMAIN:
Query OID_DOT11_REG_DOMAINS_SUPPORT_VALUE:
Query OID_DOT11_AUTO_CONFIG_ENABLED:
Query OID_DOT11_DESIRED_BSSID_LIST:
Query OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD:
Query OID_DOT11_UNICAST_USE_GROUP_ENABLED:
Query OID_DOT11_ACTIVE_PHY_LIST:
Query OID_DOT11_ENUM_ASSOCIATION_INFO:
Query OID_DOT11_HIDDEN_NETWORK_ENABLED:
Query OID_DOT11_CURRENT_CHANNEL:
A: channel: %u:
B: channel: %u:
Query OID_DOT11_DATA_RATE_MAPPING_TABLE:
Query OID_802_11_BSSID: %02X:%02X:%02X:%02X:%02X:%02X
Query OID_802_11_SSID: NDIS_STATUS_ADAPTER_NOT_READY
N5CQueryInformation(): Number of Network Type:%d
Query OID_802_11_NETWORK_TYPES_SUPPORTED: 
Query OID_802_11_NETWORK_TYPE_IN_USE: BeSetNetworkTypeByNDTest 0x%0X
Query OID_802_11_NETWORK_TYPE_IN_USE: B Ndis802_11DS
Query OID_802_11_NETWORK_TYPE_IN_USE: G Ndis802_11OFDM24
Query OID_802_11_NETWORK_TYPE_IN_USE: A Ndis802_11OFDM5
Query OID_802_11_NETWORK_TYPE_IN_USE: default Ndis802_11DS
Query OID_802_11_TX_POWER_LEVEL: 
Query OID_RT_TX_POWER: %d dBm
Query OID_RT_TX_POWER_RANGE: min = %d dBm, max = %d
Query OID_802_11_RSSI: %d
Query OID_802_11_RSSI_TRIGGER: %d
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11INFRA
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11IBSS
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11AUTO <Ndis802_11IBSS>
Query OID_802_11_INFRASTRUCTURE_MODE: Ndis802_11unknown
Query OID_802_11_FRAGMENTATION_THRESHOLD: %d
Query OID_802_11_RTS_THRESHOLD: %d
Query OID_802_11_SUPPORTED_RATES: 
Query OID_802_11_DESIRED_RATES: 
Query OID_802_11_CONFIGURATION: 
Query OID_802_11_STATISTICS: 
Query OID_802_11_POWER_MODE: 0x%X
OID_802_11_CAPABILITY Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_PMKID Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_AUTHENTICATION_MODE Querying (Warning: Old OID in NDIS5, do nothing)
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeOpen
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeShared
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeAutoSwitch
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPAPSK
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPANone
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA2
Query OID_802_11_AUTHENTICATION_MODE: RT_802_11AuthModeWPA2PSK
Query OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeMax 
Query OID_802_11_AUTHENTICATION_MODE: unknow authmode: 0x%X
OID_802_11_PRIVACY_FILTER Querying (Warning: Old OID in NDIS5, do nothing)
OID_802_11_ASSOCIATION_INFORMATION Querying (Warning: Old OID in NDIS5, do nothing)
Query OID_802_11_ASSOCIATION_INFORMATION, length=%d
OID_802_11_ENCRYPTION_STATUS Querying (Warning: Old OID in NDIS5, do nothing)
Query some OIDs for Windows ME HCT 9.6.
===> Query OID_RT_GET_SCAN_IN_PROGRESS.
<=== Query OID_RT_GET_SCAN_IN_PROGRESS: %x.
===> Query OID_RT_GET_CONNECT_STATE.
<=== Query OID_RT_GET_CONNECT_STATE: %d
===> Query OID_RT_GET_CHANNELPLAN.
<=== Query OID_RT_GET_CHANNELPLAN: %d
===> Query OID_RT_GET_CHANNEL.
<=== Query OID_RT_GET_CHANNEL: %d
===> Query OID_RT_GET_CHANNEL_LIST.
<=== Query OID_RT_GET_CHANNEL_LIST.
===> Query OID_RT_GET_TOTAL_TX_BYTES.
<=== Query OID_RT_GET_TOTAL_TX_BYTES.
===> Query OID_RT_GET_TOTAL_RX_BYTES.
<=== Query OID_RT_GET_TOTAL_RX_BYTES.
===> Query OID_RT_SUPPORTED_WIRELESS_MODE.
<=== Query OID_RT_SUPPORTED_WIRELESS_MODE: %x
===> Query OID_RT_WIRELESS_MODE.
<=== Query OID_RT_WIRELESS_MODE: %d
===> Query OID_RT_CURRENT_WLRELESSMODE.
<=== Query OID_RT_CURRENT_WLRELESSMODE: %d
===> Query OID_RT_GET_DRIVER_UP_DELTA_TIME.
<=== Query OID_RT_GET_DRIVER_UP_DELTA_TIME: %u (0.1 Sec)
===> Query OID_RT_GET_BSS_WIRELESS_MODE.
<=== Query OID_RT_GET_BSS_WIRELESS_MODE: %d
===> Query OID_RT_AP_GET_CURRENT_TIME_STAMP.
<=== Query OID_RT_AP_GET_CURRENT_TIME_STAMP.
===> Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST.
<=== Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST: BytesNeeded: %d !!!
<=== Query OID_RT_AP_GET_ASSOCIATED_STATION_LIST.
OID_RT_MH_VENDER_ID(): Query OID_RT_MH_VENDER_ID. (MeetingHouse)
OID_RT_RF_OFF: eRfPowerState: 0x%X,  RFOff: 0x%X
Query OID_RT_DBG_COMPONENT: %#X
Query OID_RT_DBG_LEVEL: %#X
Query OID_RT_AUTO_SELECT_CHANNEL: %d
Query OID_RT_HIDDEN_SSID: %d
Query OID_RT_MAC_FILTER_TYPE
Query OID_RT_MAC_FILTER_TYPE:  %d
Query OID_RT_LOCKED_STA_ADDRESS
Query OID_RT_LOCKED_STA_ADDRESS: LockedSTACount=%d
Query OID_RT_GET_DEFAULT_KEY_ID: %d
Query ID_RT_GET_BCN_INTVL: %d
Query OID_RT_AP_GET_DTIM_PERIOD: %d
Invalid preamble mode, dot11CurrentPreambleMode: %d...
Query OID_RT_GET_PREAMBLE_MODE: %d
Query OID_RT_AP_SWITCH_INTO_AP_MODE: %d
Query OID_RT_GET_HARDWARE_RADIO_OFF:
Query OID_RT_AP_WDS_MODE: %d
Query OID_RT_GET_PSP_XLINK_STATUS:
Query OID_RT_GET_WMM_ENABLE:
Query OID_RT_GET_WMM_UAPSD_ENABLE:
Query OID_RT_DOT11D: %d
Query OID_RT_QUERY_DOT11K_CHANNEL_LOAD: Invalid Length
Query OID_RT_QUERY_DOT11K_CHANNEL_LOAD: ChannelLoad(%d), Status(%d)
Query OID_RT_GET_LOGV2_TYPE_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_LOGV2_ATTR_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_LOGV2_DATA_LIST failed!!! BytesNeeded: %d
Query OID_RT_GET_11N_MIMPO_RSSI
Query OID_RT_GET_11N_MIMPO_EVM
Query MH_OID_CCX_ROGUE_AP: %d
Query MH_OID_CCX_NETWORK_EAP: %d
Query MH_OID_CCX_VERSION: %d
Query MH_OID_CCX_ENABLE: %d
Query MH_OID_CCX_MIXED_CELL: %d
Query OID_RT_TURBOMODE: %d
Query OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM:
Query OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM, 0x%08x
Query OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM, 0x%08x
Query OID_DOT11_CIPHER_DEFAULT_KEY_ID, 0x%08x
Query OID_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR:
Query OID_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR:
Query OID_DOT11_PMKID_LIST, 0x%08x
Query OID_DOT11_EXTSTA_CAPABILITY:
Query OID_DOT11_POWER_MGMT_REQUEST, 0x%08x
Query OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST:
Query OID_DOT11_MPDU_MAX_LENGTH
Query OID_DOT11_ATIM_WINDOW
Query OID_DOT11_NIC_POWER_STATE rf %d
Query OID_DOT11_HARDWARE_PHY_STATE: rf %d
Query OID_DOT11_DESIRED_PHY_LIST:
Query OID_DOT11_OPTIONAL_CAPABILITY
Query OID_DOT11_CURRENT_OPTIONAL_CAPABILITY
Query OID_DOT11_CF_POLLABLE
Query OID_DOT11_OPERATIONAL_RATE_SET
Query OID_DOT11_BEACON_PERIOD
Query OID_DOT11_RTS_THRESHOLD
Query OID_DOT11_SHORT_RETRY_LIMIT
Query OID_DOT11_LONG_RETRY_LIMIT
Query OID_DOT11_FRAGMENTATION_THRESHOLD
Query OID_DOT11_MAX_TRANSMIT_MSDU_LIFETIME
Query OID_DOT11_MAX_RECEIVE_LIFETIME
Query OID_DOT11_SUPPORTED_PHY_TYPES
Query OID_RT_WPS_RECIEVE_PACKET:
WPS Check Recieve Buffer:
Query Information, MgntActQuery_RT_11N_TX_RATES:%d Mbps
Query Information, OID_RT_11N_RX_LINK_SPEED:%d Mbps
Query Information, MgntActQuery_RT_11N_INITIAL_TX_RATES:%d Mbps
Query Information, OID_RT_11N_TX_RETRY_COUNT:%d Mbps
Query Information, MgntActQuery_RT_11N_USER_SHOW_RATES-TX:%d Mbps
Query Information, MgntActQuery_RT_11N_USER_SHOW_RATES-RX:%d Mbps
40MHz
20MHz
Query Information, Current Bandwidth = %s
Query OID_RT_WPS_HWGET_PBC_PRESSED
Query OID_RT_11N_SYS_CPU_WAKE_SETTING
Query OID_DOT11_MULTICAST_LIST num of multicast address:%d
Query Information, Firmware Version = %d
Query MH_OID_CCX_RM_ENABLE: %d
Query OID_RT_CCX_IHV_SUPPORT: invalid length(%d < %d)
Query OID_RT_CCX_IHV_SUPPORT: IhvSupport(%x)
Query OID_RT_SET_WMM_UAPSD_ENABLE: %X
Query OID_RT_INTEL_PROMISCUOUS_MODE: enabled: %d, filter src sta: %d
<==== N6CQueryInformation, OID=0x%08x, Status=0x%X
N6CSetInformation
====> N6CSetInformation, OID=0x%08x
Oid intercepted by CCX EventSetInformation! Status 0x%08x
NDIS_PACKET_TYPE_DIRECTED
NDIS_PACKET_TYPE_MULTICAST
NDIS_PACKET_TYPE_ALL_MULTICAST
NDIS_PACKET_TYPE_BROADCAST
NDIS_PACKET_TYPE_PROMISCUOUS
NDIS_PACKET_TYPE_ALL_LOCAL
NDIS_PACKET_TYPE_SOURCE_ROUTING
NDIS_PACKET_TYPE_SMT
NDIS_PACKET_TYPE_GROUP
NDIS_PACKET_TYPE_ALL_FUNCTIONAL
NDIS_PACKET_TYPE_FUNCTIONAL
NDIS_PACKET_TYPE_MAC_FRAME
NDIS_PACKET_TYPE_802_11_RAW_DATA
NDIS_PACKET_TYPE_802_11_DIRECTED_MGMT
NDIS_PACKET_TYPE_802_11_MULTICAST_MGMT
NDIS_PACKET_TYPE_802_11_ALL_MULTICAST_MGMT
NDIS_PACKET_TYPE_802_11_BROADCAST_MGMT
NDIS_PACKET_TYPE_802_11_PROMISCUOUS_MGMT
NDIS_PACKET_TYPE_802_11_RAW_MGMT
NDIS_PACKET_TYPE_802_11_DIRECTED_CTRL
NDIS_PACKET_TYPE_802_11_BROADCAST_CTRL
NDIS_PACKET_TYPE_802_11_PROMISCUOUS_CTRL
Set OID_GEN_CURRENT_PACKET_FILTER: 
Set OID_GEN_CURRENT_LOOKAHEAD: 
Set OID_GEN_PROTOCOL_OPTIONS: 
Set OID_802_3_MULTICAST_LIST: 
Set OID_GEN_LINK_PARAMETERS:
Set OID_DOT11_CURRENT_OPERATION_MODE:
Set OID_DOT11_DESIRED_BSS_TYPE:
Set OID_DOT11_CURRENT_PHY_ID: phyid%d
Set OID_DOT11_SCAN_REQUEST:
Set OID_DOT11_MEDIA_STREAMING_ENABLED::
Set OID_DOT11_DESIRED_SSID_LIST:
Set OID_DOT11_EXCLUDE_UNENCRYPTED:
Set OID_DOT11_PRIVACY_EXEMPTION_LIST:
Set OID_DOT11_IBSS_PARAMS:
Set OID_DOT11_FRAGMENTATION_THRESHOLD:
Set OID_DOT11_RTS_THRESHOLD:
Set OID_DOT11_FLUSH_BSS_LIST:
Set OID_DOT11_CURRENT_REG_DOMAIN:
Set OID_DOT11_AUTO_CONFIG_ENABLED:
Set OID_DOT11_DESIRED_BSSID_LIST:
Set OID_DOT11_DATA_RATE_MAPPING_TABLE:
Set OID_802_11_BSSID: 
Set OID_802_11_NETWORK_TYPE_IN_USE: 
Set OID_802_11_TX_POWER_LEVEL: 
Set OID_RT_TX_POWER_LEVEL: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_TX_POWER: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_TX_POWER: %d dBm
Set OID_802_11_RSSI_TRIGGER
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_ADHOC
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_INFRA
Set OID_802_11_INFRASTRUCTURE_MODE: RT_JOIN_NETWORKTYPE_AUTO
Set OID_802_11_INFRASTRUCTURE_MODE: unknown type: 0x%X
Set OID_802_11_FRAGMENTATION_THRESHOLD: 
Set OID_802_11_RTS_THRESHOLD: 
Set OID_802_11_DESIRED_RATES: 
Set OID_802_11_CONFIGURATION: 
OID_802_11_ADD_KEY Setting (Warning: Old OID in NDIS5, do nothing)
===> Set OID_802_11_ADD_KEY, key->Length=%d
[Note] KeyIndex is 0xc0000001
OID_802_11_ADD_KEY: +++++ Pairwise key +++++
<=== SetInfo, OID_802_11_ADD_KEY: !(key->KeyIndex & 0x80000000)
<=== SetInfo, OID_802_11_ADD_KEY: key->KeyIndex & 0x0fffffff
<=== SetInfo, OID_802_11_ADD_KEY: MacAddr_isBcst(key->BSSID)
<=== SetInfo, OID_802_11_ADD_KEY: TKIP KeyLength:%d != 32
<=== SetInfo, OID_802_11_ADD_KEY: WEP KeyLength:%d != 5 or 13
------------------------------------------
[Pairwise Key set]
key index: 0x%x
key Length: 0x%x
OID_802_11_ADD_KEY: +++++ Group key +++++
<=== SetInfo, OID_802_11_ADD_KEY: pMgntInfo.mIbss && !MacAddr_isBcst(key->BSSID)
OID_802_11_ADD_KEY[Group]: Not to Check key length 32 for TKIP because we'e in RT_SEC_LVL_NONE.
<=== SetInfo, OID_802_11_ADD_KEY: TKIP GTK KeyLength:%d != 32
OID_802_11_ADD_KEY[Group]: Not to Check key length 16 or 32 for AES because we'e in RT_SEC_LVL_NONE.
<=== SetInfo, OID_802_11_ADD_KEY: AES GTK KeyLength:%d != 16 or 32
[Group Key set]
OID_802_11_ADD_WEP Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_ADD_WEP
KeyIndex = %d
KeyLength = %d
KeyMaterial = %13s
IsDefaultKey = %d
[WARNING!!!] OID_802_11_ADD_WEP: return NDIS_STATUS_INVALID_DATA!! KeyIndex=%d, KeyLength=%d
OID_802_11_REMOVE_WEP Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_REMOVE_WEP
OID_802_11_REMOVE_KEY Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_REMOVE_KEY
OID_802_11_ENCRYPTION_STATUS Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_ENCRYPTION_STATUS: %d
Ndis802_11EncryptionDisabled
Ndis802_11Encryption1Enabled
Ndis802_11Encryption2Enabled
Ndis802_11Encryption3Enabled
default
OID_802_11_ASSOCIATION_INFORMATION Setting (Warning: Old OID in NDIS5, do nothing)
OID_802_11_PMKID Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_DISASSOCIATE: 
Set OID_802_11_POWER_MODE: 0x%X
OID_802_11_AUTHENTICATION_MODE Setting (Warning: Old OID in NDIS5, do nothing)
Set OID_802_11_AUTHENTICATION_MODE: %d (0:Open, 1:Shared-Key)
Set OID_802_11_AUTHENTICATION_MODE: Ndis802_11AuthModeAutoSwitch
Set OID_802_11_AUTHENTICATION_MODE: %d: RT_SEC_LVL_WPA
Set OID_802_11_AUTHENTICATION_MODE: %d: RT_SEC_LVL_WPA2
Set OID_802_11_PRIVACY_FILTER: 
Set OID_RT_SCAN_AVAILABLE_BSSID: 
===> Set OID_802_11_BSSID_LIST_SCAN.
<=== Set OID_802_11_BSSID_LIST_SCAN.
Set OID_802_11_RELOAD_DEFAULTS: 
OID_RELOAD_DEFAULT
SetInfo, OID_802_11_RELOAD_DEFAULTS:Ndis802_11ReloadWEPKeys
===> Set OID_RT_SET_CHANNEL
!!! Failed to switch to the channel, %d
<=== Set OID_RT_SET_CHANNEL: %d
===> Set OID_RT_SET_PREAMBLE_MODE.
<=== Set OID_RT_SET_PREAMBLE_MODE: %d
===> Set OID_RT_WIRELESS_MODE.
<=== Set OID_RT_WIRELESS_MODE.
===> Set OID_RT_SET_DEFAULT_KEY_ID.
<=== Set OID_RT_SET_DEFAULT_KEY_ID.
===> Set OID_RT_SET_CHANNELPLAN
!!! Failed to set the channelplan, %d
<=== Set OID_RT_SET_CHANNELPLAN.
===> Set OID_RT_SCAN_WITH_MAGIC_PACKET.
<=== Set OID_RT_SCAN_WITH_MAGIC_PACKET.
===> Set OID_RT_AP_SWITCH_INTO_AP_MODE.
<=== Set OID_RT_AP_SWITCH_INTO_AP_MODE.
===> Set OID_RT_SEND_SPECIFIC_PACKET.
<=== Set OID_RT_SEND_SPECIFIC_PACKET.
===> Set OID_RT_DBG_COMPONENT.
<=== Set OID_RT_DBG_COMPONENT: GlobalDebugComponents: %#X
===> Set OID_RT_DBG_LEVEL.
<=== Set OID_RT_DBG_LEVEL: GlobalDebugLevel: %#X
===> Set OID_RT_AUTO_SELECT_CHANNEL.
<=== Set OID_RT_AUTO_SELECT_CHANNEL: %d
===> Set OID_RT_HIDDEN_SSID.
<=== Set OID_RT_HIDDEN_SSID: %d
===> Set OID_RT_MAC_FILTER_TYPE.
Set OID_RT_MAC_FILTER_TYPE: Invalid Length!
Set OID_RT_MAC_FILTER_TYPE: Invalid Data!
<=== Set OID_RT_MAC_FILTER_TYPE
===> Set OID_RT_LOCKED_STA_ADDRESS.
Set OID_RT_LOCKED_STA_ADDRESS: Invalid Length!
Set OID_RT_LOCKED_STA_ADDRESS: Invalid Data!
<=== Set OID_RT_LOCKED_STA_ADDRESS
===> Set OID_RT_FILTER_STA_ADDRESS.
Set OID_RT_FILTER_STA_ADDRESS: Invalid Length!
Set OID_RT_FILTER_STA_ADDRESS: Invalid Data!
<=== Set OID_RT_FILTER_STA_ADDRESS
===> Set OID_RT_PER_STA_DATA_RATE.
Set OID_RT_PER_STA_DATA_RATE: Invalid Length!
Set OID_RT_PER_STA_DATA_RATE: Invalid Data!
<=== Set OID_RT_PER_STA_DATA_RATE
Set OID_RT_AP_WDS_MODE: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_AP_WDS_MODE: %d
Set OID_RT_AP_WDS_AP_LIST: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_AP_WDS_AP_LIST: %02X-%02X-%02X-%02X-%02X-%02X
Set OID_RT_SET_PSP_XLINK_STATUS:
Set OID_RT_SET_WMM_ENABLE:
Set OID_RT_SET_WMM_UAPSD_ENABLE:
Set OID_RT_DOT11D: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_DOT11D: disable
Set OID_RT_DOT11D: enable
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: Channel(%d), Duration(%d)
Set OID_RT_SET_DOT11K_CHANNEL_LOAD: Set Channel Load Fail !!!
Set OID_RT_SET_DOT11K_NOISE_HISTOGRAM: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_SET_DOT11K_NOISE_HISTOGRAM: Set Channel Load Fail !!!
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ROGUE_AP : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ENABLE : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_ADD_KRK 
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_8021X : %d
<=== Set OID_RT_DBG_LEVEL: MH_OID_CCX_8021X_RESULT : %d
Set OID_RT_RF_OFF
OID_RT_RF_OFF: bRfOff(%d)
===> Set OID_RT_TURBOMODE
<=== Set OID_RT_TURBOMODE.
Set OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
Set OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
Set OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM, 0x%08x
Set OID_DOT11_CIPHER_DEFAULT_KEY, 0x%08x
Set OID_DOT11_CIPHER_DEFAULT_KEY_ID, 0x%08x
Set OID_DOT11_CIPHER_KEY_MAPPING_KEY, 0x%08x
Set OID_DOT11_PMKID_LIST, 0x%08x
Set OID_DOT11_CONNECT_REQUEST, 0x%08x
WPS Set DISCONEECT REQUEST
Set OID_DOT11_DISCONNECT_REQUEST:
Set OID_DOT11_POWER_MGMT_REQUEST, 0x%08x
Set OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST, 0x%08x
Set OID_DOT11_ATIM_WINDOW
Set OID_DOT11_NIC_POWER_STATE
Set OID_DOT11_OPERATIONAL_RATE_SET
Set OID_DOT11_DESIRED_PHY_LIST:
Set OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD:
Set OID_DOT11_UNICAST_USE_GROUP_ENABLED:
Set OID_DOT11_HIDDEN_NETWORK_ENABLED:
Set OID_DOT11_CURRENT_CHANNEL:
Set OID_RT_SimpleConfScan: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_RT_11N_TX_POWER_TRACKING: disable
Set OID_RT_11N_TX_POWER_TRACKING: enable
Set OID_RT_11N_DYNAMIC_TX_POWER_CONTROL: disable
Set OID_RT_11N_DYNAMIC_TX_POWER_CONTROL: enable
Set OID_RT_WPS_HWSET_PBC_PRESSED: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_WPS_HWSET_PBC_PRESSED: %d
Set OID_RT_WPS_LED_CTL_START: invalid length(%d), BytesNeeded: %d !!!
Set OID_RT_WPS_LED_CTL_START: stop LED blinking SUCCESS
Set OID_RT_WPS_LED_CTL_START: start LED blinking 0.3s
Set OID_RT_WPS_LED_CTL_START_BOTTON: start LED blinking 0.3s
Set OID_RT_WPS_LED_CTL_START_BOTTON: stop LED blinking fail
Set OID_RT_WPS_LED_CTL_START_BOTTON: stop LED blinking fail session overlap
Set OID_RT_WPS_LED_CTL_START_BOTTON: WRONG parameter
Set OID_DOT11_MULTICAST_LIST:
Set MH_OID_CCX_RM_ENABLE: CCXRM enable(%d)
Set OID_RT_CCX_IHV_SUPPORT: invalid length(%d < %d)
Set OID_RT_CCX_IHV_SUPPORT: IhvSupport(%x)
Set OID_RT_INTEL_PROMISCUOUS_MODE: on = %d, filter src sta = %d
<==== N6CSetInformation, OID=0x%08x, Status=0x%X
N6CQuerySetInformation
====> N6CQuerySetInformation, OID=0x%08x
Oid intercepted by MpEventQuerySetInformation! Status 0x%08x
Query/Set OID_DOT11_RESET_REQUEST:
Query/Set OID_DOT11_ENUM_BSS_LIST:
Query/Set OID_DOT11_RECV_SENSITIVITY_LIST:
Query/Set OID_Unknown: %08X
<==== N6CQuerySetInformation, OID=0x%08x, Status=0x%X
N6CompletePendedOID
===>N6CompletePendedOID  
===>N6CompletePendedOID   OID %08X 
N6CompletePendedOID(): Complete pended OID(0x%08X)
N6CompletePendedOID(): Pended OID(0x%08X) does not match input OID type(%d)
N6CAuthModeToDot11
==> N6CAuthModeToDot11(): AuthMode=0x%X
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_80211_OPEN
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_80211_SHARED_KEY
N6CAuthModeToDot11(): RT_802_11AuthModeAutoSwitch => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_WPA
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_WPA_PSK
N6CAuthModeToDot11(): RT_802_11AuthModeWPANone => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_RSNA
N6CAuthModeToDot11(): DOT11_AUTH_ALGO_RSNA_PSK
N6CAuthModeToDot11(): RT_802_11AuthModeMax => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
N6CAuthModeToDot11(): unknow authmode: 0x%X => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
<== N6CAuthModeToDot11(): dot11AuthAlg=0x%X
N6CAuthAlgToDot11
==> N6CAuthAlgToDot11(): AuthMode=0x%X
N6CAuthAlgToDot11(): DOT11_AUTH_ALGO_80211_OPEN
N6CAuthAlgToDot11(): DOT11_AUTH_ALGO_80211_SHARED_KEY
N6CAuthAlgToDot11(): unknow authmode: 0x%X => DOT11_AUTH_ALGO_80211_OPEN (WARNING!!!)
<== N6CAuthAlgToDot11(): dot11AuthAlg=0x%X
N6CEncAlgorithmToDot11
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_NONE
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP40
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_TKIP
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_CCMP
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP104
N6CEncAlgorithmToDot11(): DOT11_CIPHER_ALGO_WEP
N6CEncAlgorithmToDot11(): Unknown PairwiseEncAlgorithm 0x%X => DOT11_CIPHER_ALGO_NONE
N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
==> N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM()
<== N6CQuery_DOT11_ENABLED_AUTHENTICATION_ALGORITHM():0x%X
N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
==> N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM()
<== N6CQuery_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM():0x%X
N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM
==> N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM()
<== N6CQuery_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM():0x%X
N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR
==> N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR()
 <- [Error]N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_TOO_SHORT
 <- [Error]N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_OVERFLOW
<== N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR()
N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR
==> N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR()
 <- [Error]N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_TOO_SHORT
 <- [Error]N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR(), NDIS_STATUS_BUFFER_OVERFLOW
<== N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR()
N6CQuery_DOT11_PMKID_LIST
==> N6CQuery_DOT11_PMKID_LIST()
 <- [Error]N6CQuery_DOT11_PMKID_LIST(), NDIS_STATUS_FAILURE
 <- [Error]N6CQuery_DOT11_PMKID_LIST(), NDIS_STATUS_BUFFER_OVERFLOW
<== N6CQuery_DOT11_PMKID_LIST()
N6CQuery_DOT11_EXTSTA_CAPABILITY
==> N6CQuery_DOT11_EXTSTA_CAPABILITY()
<== N6CQuery_DOT11_EXTSTA_CAPABILITY()
N6CQuery_DOT11_POWER_MGMT_REQUEST
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_NO_POWER_SAVING
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_FAST_PSP
N6CQuery_DOT11_POWER_MGMT_REQUEST():DOT11_POWER_SAVING_MAX_PSP
N6CQuery_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_MAXIMUM_LEVEL
N6CQuery_DOT11_POWER_MGMT_REQUEST(): unkown
N6CQuery_DOT11_POWER_MGMT_REQUEST(): %d
N6CQuery_DOT11_PRIVACY_EXEMPTION_LIST
Query  OID_DOT11_PRIVACY_EXEMPTION_LIST.
N6CQuery_DOT11_IBSS_PARAMS
Query OID_DOT11_IBSS_PARAMS: NDIS_STATUS_BUFFER_OVERFLOW
N6CQuery_DOT11_STATISTICS
N6CQuery_DOT11_STATISTICS:() QueryAfterFirstReset %d
pStatistics->MacUcastCounters.ullWEPUndecryptableCount %d
pStatistics->MacMcastCounters.ullWEPUndecryptableCount %d
N6CQuery_DOT11_DESIRED_BSS_TYPE
Query OID_DOT11_DESIRED_BSS_TYPE: dot11_BSS_type_infrastructure
Query OID_DOT11_DESIRED_BSS_TYPE: dot11_BSS_type_independent
Query OID_DOT11_DESIRED_BSS_TYPE: Ndis802_11AUTO <dot11_BSS_type_independent>
Query OID_DOT11_DESIRED_BSS_TYPE: Ndis802_11unknown <dot11_BSS_type_infrastructure>
N6CQuery_DOT11_ATIM_WINDOW
N6CQuery_DOT11_ATIM_WINDOW(): %d
N6CQuery_DOT11_OPTIONAL_CAPABILITY
N6CQuery_DOT11_OPTIONAL_CAPABILITY()
N6CQuery_DOT11_CURRENT_OPTIONAL_CAPABILITY
N6CQuery_DOT11_CURRENT_OPTIONAL_CAPABILITY()
N6CQuery_DOT11_CF_POLLABLE
N6CQuery_DOT11_CF_POLLABLE()
N6CQuery_DOT11_OPERATIONAL_RATE_SET
 ====>N6CQuery_DOT11_OPERATIONAL_RATE_SET G mode (%d) 
N6CQuery_DOT11_BEACON_PERIOD
N6CQuery_DOT11_BEACON_PERIOD(): %d TU
N6CQuery_DOT11_SHORT_RETRY_LIMIT
N6CQuery_DOT11_SHORT_RETRY_LIMIT(): %d times
N6CQuery_DOT11_LONG_RETRY_LIMIT
N6CQuery_DOT11_LONG_RETRY_LIMIT(): %d times
N6CQuery_DOT11_MAX_TRANSMIT_MSDU_LIFETIME
N6CQuery_DOT11_MAX_TRANSMIT_MSDU_LIFETIME(): %d TUs
N6CQuery_DOT11_MAX_RECEIVE_LIFETIME
N6CQuery_DOT11_MAX_RECEIVE_LIFETIME(): %d TUs
N6CQuery_DOT11_SUPPORTED_PHY_TYPES
N6CQuery_DOT11_SUPPORTED_PHY_TYPES()
N6CQuery_DOT11_NIC_POWER_STATE
N6CQuery_DOT11_NIC_POWER_STATE: eRfPowerState: 0x%X,  RFOn 0x%X
N6CDot11ToEncAlgorithm
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_NONE
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP40
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP104
N6CDot11ToEncAlgorithm(): Warning, key length is invalid.
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_WEP
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_TKIP
N6CDot11ToEncAlgorithm(): DOT11_CIPHER_ALGO_CCMP
N6CDot11ToEncAlgorithm(): Unknown AlgorithmId 0x%X (WARNING!!!)
N6CSet_DOT11_AUTHENTICATION_ALOGORITHM
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_80211_OPEN
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_80211_SHARED_KEY
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_WPA
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_WPA_PSK
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_RSNA
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): DOT11_AUTH_ALGO_RSNA_PSK
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): unknow case, 0x%X
N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM
==> N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM()
 <- [Error]N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(), NDIS_STATUS_INVALID_DATA
<== N6CSet_DOT11_ENABLED_AUTHENTICATION_ALGORITHM(): pSecInfo->AuthMode=0x%X
N6CSet_DOT11_UNICAST_CIPHER_ALGORITHM
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_NONE
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP40
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP104
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_WEP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_TKIP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): DOT11_CIPHER_ALGO_CCMP
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): Unknown AlgorithmId 0x%X
==>Win7 we used SW in AD-HOT 
==>Win7 we used SW in WEP 
==>Win7 we used HW in default !! 
N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM
==> N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM()
 <- [Error]N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_LENGTH
<== N6CSet_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM(): PairwiseEncAlgorithm=0x%X
N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM
==> N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM()
 <- [Error]N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(), NDIS_STATUS_INVALID_LENGTH
<== N6CSet_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM(): GroupEncAlgorithm=0x%X
N6CSet_DOT11_CIPHER_DEFAULT_KEY
==> N6CSet_DOT11_CIPHER_DEFAULT_KEY()
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_INVALID_LENGTH: %d
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), NDIS_STATUS_BUFFER_OVERFLOW: %d, BytesNeeded: %d
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), uKeyIndex(%d) >= NATIVE_802_11_MAX_DEFAULT_KEY_ENTRY(%d) 
====================================
-------------------------------------
uKeyIndex=0x%X
AlgorithmId=0x%X
bDelete=0x%X
bStatic=0x%X
usKeyLength=0x%X
[Workaround] Change Default key index from 0 to 1.
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): delete Key
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), MgntActSet_RSNA_REMOVE_DEAULT_KEY return FALSE !!!
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP40 Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a WEP104 Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set a TKIP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY(): Set an AES-CCMP Key
N6CSet_DOT11_CIPHER_DEFAULT_KEY: Warning, Set key of unknown algorithm: %#X
====> pMgntInfo->SecurityInfo.GroupTransmitKeyIdx  = %d
 <- [Error]N6CSet_DOT11_CIPHER_DEFAULT_KEY(), MgntActSet_RSNA_ADD_DEAULT_KEY return FALSE !!!
<== N6CSet_DOT11_CIPHER_DEFAULT_KEY()
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY
==> N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY()
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_INVALID_LENGTH: %d
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), NDIS_STATUS_BUFFER_OVERFLOW: %d, BytesNeeded: %d
DOT11_CIPHER_KEY_MAPPING_KEY: %d
Direction=0x%X
Delete
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s TKIP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s AES-CCMP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s TKIP MFP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): %s AES-CCMP MFP Key
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY: Warning, %s key of invalid algorithm: %#X
N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(): delete Key
====>  We had remove station on dissac !! 
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY(), MgntActSet_RSNA_REMOVE_MAPPING_KEY return FALSE!!!
====>CCMP Set Station Key.
 <- [Error]N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY, MgntActSet_RSNA_ADD_MAPPING_KEY() return FALSE!!!
<== N6CSet_DOT11_CIPHER_KEY_MAPPING_KEY()
N6CSet_DOT11_PMKID_LIST
==> N6CSet_DOT11_PMKID_LIST()
SecSetPMKID(): uNumOfEntries is more than NUM_PMKID_CACHE!%d
[PMKID %d]
SecSetPMKID(): PMKIDList[%d].bUsed is TRUE
<== N6CSet_DOT11_PMKID_LIST()
N6CSet_DOT11_CONNECT_REQUEST
==> N6CSet_DOT11_CONNECT_REQUEST()
N6CSet_DOT11_CONNECT_REQUEST() => MgntDisconnectIBSS
N6CSet_DOT11_CONNECT_REQUEST() => MgntDisconnectAP
N6CSet_DOT11_CONNECT_REQUEST(): No BSS found, CurrBSSType: %d
N6CSet_DOT11_CONNECT_REQUEST
<== N6CSet_DOT11_CONNECT_REQUEST()
N6CSet_DOT11_DISCONNECT_REQUEST
N6CSet_DOT11_DISCONNECT_REQUEST
N6CSet_DOT11_POWER_MGMT_REQUEST
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_NO_POWER_SAVING
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_FAST_PSP
N6CSet_DOT11_POWER_MGMT_REQUEST():DOT11_POWER_SAVING_MAX_PSP
N6CSet_DOT11_POWER_MGMT_REQUEST(): DOT11_POWER_SAVING_MAXIMUM_LEVEL
N6CSet_DOT11_POWER_MGMT_REQUEST(): unkown
N6CSet_DOT11_POWER_MGMT_REQUEST(): %d
N6CSet_DOT11_EXCLUDED_MAC_ADDRESS_LIST
N6_VERIFY_OBJECT_HEADER_DEFAULT(): obj type: %u vs %u.
N6_VERIFY_OBJECT_HEADER_DEFAULT(): mac addr list rev: %u vs %u.
N6_VERIFY_OBJECT_HEADER_DEFAULT(): size: %u vs %u.
N6CSet_DOT11_DESIRED_BSSID_LIST
N6CSet_DOT11_DESIRED_BSSID_LIST(): InformationBufferLength (%u) < BytesNeeded (%u).
N6CSet_DOT11_DESIRED_BSSID_LIST(): Mac add is FE:FF:FF:FF:FF:FF
N6CSet_DOT11_PRIVACY_EXEMPTION_LIST
Set  OID_DOT11_PRIVACY_EXEMPTION_LIST.
N6CSet_DOT11_IBSS_PARAMS
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), NDIS_STATUS_INVALID_DATA
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), NDIS_STATUS_BUFFER_OVERFLOW
 <- [Error]N6CSet_DOT11_IBSS_PARAMS(), PlatformAllocateMemory Fail!
N6CSet_DOT11_IBSS_PARAMS(): bJoinOnly = %d
N6CSet_DOT11_SCAN_REQUEST
N6CSet_DOT11_SCAN_REQUEST(): return for InformationBufferLength(%d) < BytesNeeded(%d)
N6CSet_DOT11_SCAN_REQUEST(): return for ValidateScanRequest() return %#X
N6CSet_DOT11_SCAN_REQUEST(): Skip this scan because busy traffic!!!
N6CSet_DOT11_DESIRED_SSID_LIST
Set AP mode OID_DOT11_DESIRED_SSID_LIST: SsidList->uNumOfEntries = %u.
N6CSet_DOT11_DESIRED_SSID_LIST(): SsidList->SSIDs[0].uSSIDLength = %u.
N6CSet_DOT11_ATIM_WINDOW
N6CSet_DOT11_ATIM_WINDOW(): %d
N6CSet_DOT11_NIC_POWER_STATE
N6CSet_DOT11_NIC_POWER_STATE(): %d
N6CSet_DOT11_OPERATIONAL_RATE_SET
Zero Data rate exists!!
N6CSet_DOT11_OPERATIONAL_RATE_SET()
N6CQuerySet_DOT11_RESET_REQUEST
OutputBufferLength too short
InputBufferLength too short
Unknown reset request.
<=== N6CQuerySet_DOT11_RESET_REQUEST(): Fake AP mode, NDIS_STATUS_SUCCESS
N6CQuerySet_DOT11_RESET_REQUEST(): Reset Multicast List!
N6CQuerySet_DOT11_ENUM_BSS_LIST
 N6CSet_DOT11_SCAN_REQUEST(): bScanInProgress
N6CSet_DOT11_MULTICAST_LIST
N6CSet_DOT11_MULTICAST_LIST(): not a multiple of sizeof(DOT11_MAC_ADDRESS)!
N6CSet_DOT11_MULTICAST_LIST(): contains more entries than supported by this miniport!
PlatformSetTimer
--->PlatformSetTimer() msDelay(%d)
PlatformSetTimer(): timer(%s) is alreadyreleased!!!
PlatformSetTimer(%s): Status(%#x) OutStandingTimerCnt(%d)
PlatformCancelTimer
PlatformCancelTimer(%s), RT_TIMER_STATUS_SET case: status(%#x)
PlatformCancelTimer(%s), cancel NG
PlatformCancelTimer(%s), cancel OK
PlatformCancelTimer(%s), timer is NOT set case: status(%#x)!!!
N6InitTimerSync
---> PlatformInitTimerSync()
<--- PlatformInitTimerSync()
N6DeInitTimerSync
---> N6DeInitTimerSync()
N6DeInitTimerSync(): %d timer is outstanding, waiting...
N6DeInitTimerSync(): %d timer is outstanding, waiting time out!!!!!
PlatformDeInitTimerSync(): all timer is completed(%d)
<--- PlatformDeInitTimerSync()
PlatformInitializeWorkItem
PlatformInitializeWorkItem(): %s
PlatformInitializeWorkItem(): failed to NdisAllocateIoWorkItem: %s
PlatformInitializeWorkItem(): failed to allocate platform extensions: %s
PlatformStopWorkItem
===> PlatformStopWorkItem(): %s
PlatformStopWorkItem(): %s, some workitem is pending, RefCount: %d
<=== PlatformStopWorkItem(): %s
PlatformFreeWorkItem
===> PlatformFreeWorkItem(): %s
<=== PlatformFreeWorkItem(): %s
PlatformScheduleWorkItem
PlatformScheduleWorkItem(): %s Failed, RefCount: %d!!!
PlatformHandleTKIPMICError
PlatformHandleTKIPMICError(): First TKIP Pairewise MIC error.
PlatformHandleTKIPMICError(): Second TKIP Pairewise MIC error.
PlatformRequestPreAuthentication
===> PlatformRequestPreAuthentication()
PlatformRequestPreAuthentication(): return for EnablePreAuthentication=%d, SecLvl=%d, mAssoc=%d
PlatformRequestPreAuthentication(): AP SecLvl=%d is not enough!
PlatformRequestPreAuthentication(): 
PlatformRequestPreAuthentication(): New BSSID => Indicate to upper layer.
PlatformRequestPreAuthentication(): Indicate Buffer Size = %d
<=== PlatformRequestPreAuthentication()
N62CInitializeExtAdapter
===> N62CInitializeExtAdapter()
XXX InitializeTxRxBuffer(): N6pciAllocateRxNetBufferListPool() failed
MPReadRegistry() failed, Status: %#X!
NicIFAllocateMemory failed: %#X
N6AllocateNative80211MIBs failed
<=== N62CInitializeExtAdapter()
N62CInitialize
===>N62CInitialize()
N62CInitialize(): N62CAllocateComponet() failed
N62CInitialize(): N62CAllocateExtAdapter() failed!!!
<===N62CInitialize ()
N62CAllocateExtAdapter
N62CAllocateExtAdapter(): failed to allocate ExtAdapter!!!
N62CAllocateExtAdapter(): failed to allocate RT_NDIS6_COMMON for the ExtAdapter!!!
N62CAllocateExtAdapter(): failed to allocate MGNT_INFO for the ExtAdapter!!!
N62CFreeExtAdapter
===> N62CFreeExtAdapter()
<=== N62CFreeExtAdapter()
N62CAllocateComponet
N62CAllocateComponet(): failed to allocate memory for pNdis62Common.
N62CAllocateComponet(): failed to allocate memory for the HELPER structure.
N62CAllocateComponet(): N62CAllocateN62CommResource failed.
N62CAllocateComponet(): N62CAllocateHvl failed.
N62CFreeComponet
===>N62CFreeComponet()
<===N62CFreeComponet()
N62CSet80211Attributes
N6usbSet80211Attributes(): failed to allocate memory for SupportedPhyAttributes
N62CSet80211Attributes(): failed to allocate memory for VWiFiAttributes(HVL)
N6usbSet80211Attributes(): failed to allocate memory for ExtSTAAttributes
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR under infra mode
N6usbSet80211Attributes(): failed to query unicast auth cipher pairs under infra mode
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR under infra mode.
N6usbSet80211Attributes(): failed to query multicast auth cipher pairs under infra mode
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR under adhoc mode
N6usbSet80211Attributes(): failed to query unicast auth cipher pairs under adhoc mode
N6usbSet80211Attributes(): no buffer for N6CQuery_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR under adhoc mode.
N6usbSet80211Attributes(): failed to query multicast auth cipher pairs under adhoc mode
Allocate Ndis 6.2 ExtAPAttributes Fail
Ndis62CreateDeleteWorkitem
N62CApSendDisassocWithOldChnlWorkitem
N62CHelperPortCreateMAC
====>N62CHelperPortCreateMAC() 
Invalid request type %d for OID_DOT11_CREATE_MAC
The buffer being passed into OID_DOT11_CREATE_MAC is too small(%d)
Number of existing ports exceed max supported. Failing new port creation
Failed to defer OID_DOT11_CREATE_MAC request in base port. Status = 0x%08x
<====N62CHelperPortCreateMAC()
N62CHelperPortDeleteMAC
====>N62CHelperPortDeleteMAC() PendingOID 
Invalid request type %d for OID_DOT11_DELETE_MAC
The buffer being passed into OID_DOT11_DELETE_MAC is too small(%d)
The port number (%d) being passed in is invalid
<====N62CHelperPortDeleteMAC() 
N62CCreateDeleteMacWorkItemCallback
====> N62CCreateDeleteMacWorkItemCallback()
bCreateMac   Fail
bdeleteMac   Fail
UnKnow Operation
<==== N62CCreateDeleteMacWorkItemCallback()
N62CCreateMac
====> N62CCreateMac()
HelperPortHandleMiniportPause failed 0x%x
HelperPortHandleMiniportRestart failed 0x%x
Created a new Port 
HelperPortHandleMiniportRestart failed
<==== N62CCreateMac()
N62CDeleteMac
====> N62CDeleteMac()
Deleted the Mac with port number %d
Deactivate & free the NDIS_PORT  
<==== N62CDeleteMac()
N62CHelperAllocateNdisPort
Failed to allocate NDIS port. Status = 0x%08x
Associated Port Number %d with allocated port
N62CHelperHandleMiniportRestart
==> N62CHelperHandleMiniportRestart(), DriverState(%d)
<== N62CHelperHandleMiniportRestart(), DriverState(%d)
N62CHelperHandleMiniportPause
==> N62CHelperHandleMiniportPause(), DriverState(%d)
<== N62CHelperHandleMiniportPause(), DriverState(%d)
N62CCompletePendingOidRequest
====> N62CCompletePendingOidRequest() pendingRequest  %p
<==== N62CCompletePendingOidRequest() pendingRequest  %p
N62CHelperActivateNdisPort
Failed to activate NDIS port %d. Status = 0x%08x
Activated Port Number %d
N62CHelperDeactivateNdisPort
Failed to deactivate NDIS port %d. Status = 0x%08x
Deactivated Port Number %d
N62CHelperFreeNdisPort
N62CHelperFreeNdisPort
N62CHandleMiniportPause
==> N62CHandleMiniportPause(), DriverState(%d)
<== N62CHandleMiniportPause(), DriverState(%d)
N62CSetCurrentPortOperationMode
===> N62CSetCurrentPortOperationMode(): NdisRequest->PortNumber = %d
from %u to %u.
<=== N62CSetCurrentPortOperationMode(): Set the same OpMode, Ignore
<=== N62CSetCurrentPortOperationMode(): scan in progress
===>Set OID   N62CSetCurrentPortOperationMode()  newPortType  %d
Failed to pause port %d to change Op Mode. Status = 0x%08x
Failed to change port type on port %d. Status = 0x%08x
Failed to restart port %d after change of Op Mode. Status = 0x%08x
<===Set OID   N62CSetCurrentPortOperationMode()
N62CPortSetOperationMode
Attempting to notify op mode change event to unrecognized port type %d
N62CExtAdapterHandleNBLInWaitQueue
N6PciHandleInterrupt(): N6CGetHeadNblWaitQueue(): pCurrNetBufferList(%p)
N6PciHandleInterrupt(): bread for CANNOT_TX()
N6PciHandleInterrupt(): N6PciSendSingleNetBufferList() returns FALSE
N62CApSendDisassocWithOldChnlWorkitemCallback
====> N62CApSendDisassocWithOldChnlWorkitemCallback()
AP_StartApRequest()  Send Disassociate to All STA
<==== N62CApSendDisassocWithOldChnlWorkitemCallback()
N62CSelectReceiveAdapter
N62CSelectReceiveAdapter(): recv DATA to port: %u
N62CStaPortQueryInformation
====> MPQueryInformation
Query STA mode OID_GEN_CURRENT_PACKET_FILTER:
Query STA mode OID_DOT11_CURRENT_PHY_ID:
Query STA mode OID_DOT11_SAFE_MODE_ENABLED:
Query STA mode OID_GEN_INTERRUPT_MODERATION:
Query STA mode OID_GEN_LINK_PARAMETERS:
Query STA mode OID_DOT11_DESIRED_PHY_LIST:
N62CAPPortQueryInformation
Query AP mode OID_DOT11_CURRENT_FREQUENCY:
Query AP mode OID_DOT11_WPS_ENABLED:
Query AP mode OID_DOT11_ADDITIONAL_IE:
Query AP mode OID_DOT11_ENUM_PEER_INFO:
Query AP mode OID_DOT11_DESIRED_PHY_LIST:
N62CQueryAdditionalIE
N62CQueryAdditionalIE: BeaconIELen = %u, ProbeRspIELen = %u.
N62CApEnumPeerInfo
<=== Query OID_DOT11_ENUM_PEER_INFO: BytesNeeded: %u !!!
bAssociated = %u.
N62CStaPortSetInformation
===> Set OID_DOT11_ASSOCIATION_PARAMS
Invalid length
<=== Set OID_DOT11_ASSOCIATION_PARAMS.
SET OID_PM_ADD_WOL_PATTERN: The number of wake up pattern is more than 8 or the pattern Id is exist.
SET OID_PM_ADD_WOL_PATTERN: Support EapolRequestIdMessage.
SET OID_PM_REMOVE_WOL_PATTERN: PatternId = %08x
SET OID_PM_REMOVE_WOL_PATTERN: Cannot find the wake up pattern Id(%08X).
SET OID_PM_ADD_PROTOCOL_OFFLOAD
SET OID_PM_REMOVE_PROTOCOL_OFFLOAD (%x)
N62CAPPortSetInformation
===> Set AP mode OID_DOT11_START_AP_REQUEST.
AP is not in INIT STATE
RF is OFF, return NDIS_STATUS_DOT11_POWER_STATE_INVALID.
<=== Set AP mode OID_DOT11_START_AP_REQUEST.
===> Set AP mode OID_DOT11_INCOMING_ASSOCIATION_DECISION.
Set OID_DOT11_INCOMING_ASSOCIATION_DECISION: Invalid Length!
AP is not in OP STATE
<=== Set OID_DOT11_INCOMING_ASSOCIATION_DECISION
===>Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED:
Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED: Invalid length
<===Set AP mode OID_DOT11_AUTO_CONFIG_ENABLED:
===>Set AP mode OID_DOT11_BEACON_PERIOD:
Set AP mode OID_DOT11_BEACON_PERIOD: Invalid length
<===Set AP mode OID_DOT11_BEACON_PERIOD:
===>Set AP mode OID_DOT11_DTIM_PERIOD:
Set AP mode OID_DOT11_DTIM_PERIOD: Invalid length
<===Set AP mode OID_DOT11_DTIM_PERIOD:
===> Set AP mode OID_DOT11_DESIRED_SSID_LIST
<=== Set AP mode OID_DOT11_DESIRED_SSID_LIST
===>Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST:
Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST: Invalid length
Disassociate all peers.
<=== Set AP mode OID_DOT11_DISASSOCIATE_PEER_REQUEST:
===>Set AP mode OID_DOT11_WPS_ENABLED:
Set AP mode OID_DOT11_WPS_ENABLED: Invalid length
<===Set AP mode OID_DOT11_WPS_ENABLED:
===> Set AP mode OID_DOT11_ADDITIONAL_IE:
Set AP mode OID_DOT11_ADDITIONAL_IE: Invalid length
<=== Set AP mode OID_DOT11_ADDITIONAL_IE: BeaconIELen = %u, ProbeRspIELen = %u.
===>Set AP mode OID_DOT11_CURRENT_CHANNEL:
===>Set AP mode OID_DOT11_CIPHER_KEY_MAPPING_KEY:
N62CAPResetRequest
===>AP mode Query/Set OID_DOT11_RESET_REQUEST: 
Invalid reset type: %u.
<===AP mode Query/Set OID_DOT11_RESET_REQUEST: %u
N62CAPIndicateIncomAssocStart
===> N62CAPIndicateIncomAssocStart ()
N62CAPIndicateIncomAssocStart() failed to allocate memory for DOT11_INCOMING_ASSOC_STARTED_PARAMETERS
N62CAPIndicateIncomAssocStart(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_STARTED!
<=== N62CAPIndicateIncomAssocStart ()
N62CAPIndicateIncomAssocComplete
===> N62CAPIndicateIncomAssocComplete ()
<=== DrvIFIndicateAssociationComplete(): AllocSize > 1024, ignore indication.
<=== DrvIFIndicateAssociationComplete(): failed to allocate memory for indication.
N62CAPIndicateIncomAssocComplete(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_COMPLETION!
<=== N62CAPIndicateIncomAssocComplete (): status(%u)
N62CAPIndicateIncomAssocReqRecv
===> N62CAPIndicateIncomAssocReqRecv ()
<=== DrvIFIndicateAssociationComplete(): requiredAssocReqParaSize > 1024, ignore indication.
N62CAPIndicateIncomAssocReqRecv(): Indicate CCX NDIS_STATUS_DOT11_INCOMING_ASSOC_REQUEST_RECEIVED!
<=== N62CAPIndicateIncomAssocReqRecv ()
N62CAPIndicateDisassociation
===> N62CAPIndicateDisassociation()
N62CAPIndicateIncomAssocReqRecv(): Indicate CCX NDIS_STATUS_DOT11_DISASSOCIATION!
<=== N62CAPIndicateDisassociation()
N62CAPDisconnectAfterSTANewConnected
Def Channel  %d  Ext Channel  %d 
Ext BW=%d, offset=%d
Def BW=%d, offset=%d
Channel are the Same, Wouldn't Change
Ndis62ContextSwitchWorkItem
N62CHVLInitialize
N62CHVLInitialize: Initialize HVL
N62CHVLAddAdapterToCtx
===> N62CHVLAddAdapterToCtx()
Add adapter:  %p
<=== N62CHVLAddAdapterToCtx(): NumAdapterInContext = %u
N62CHVLMergeCtxs
Merging context %p into context %p.
N62CHVLPerformCtxMerge
HvlPerformCtxMerge(): We will Merge two context
Merged contexts. Previous # contexts = %d, new # contexts = %d
N62CHVLProcessTimedCtxSwitch
Timed context switches are currently blocked.
Context switch is already in progress. Not performing timed context switch.
One Adapter has requested or has exclusive access. Not doing the timed context switch
N62CHvlCtxSWorkItem
KeWaitForMultipleObjects returned error 0x%x
N62CHVLCtxSStart
Context switch started
Wait for Busy Queue Empty
Wait For Returm Busy Queue
Busy Queue Empty
N62CHVLCtxSProcessing
N62CHVLCtxSProcessing(): No contexts exist. Not doing a context switch
N62CHVLCtxSProcessing(): The next context (%p) is the same as the current one. Not doing a context switch
N62CHVLCtxSProcessing(): The next context (%p) is the same as the current one. But we have just done a merge. Continuing with the context switch
FALSE
Current context = %p, next context = %p, fSameCtx = %s
N62CDirectOidRequest
===> N6PciDirectOidRequest(): to port %u
<=== N6PciDirectOidRequest(): %u.
N62CPreProcessOID
===> N62CPreProcessOID(): 0x%08x, port = %u.
<=== N62CPreProcessOID(): driver halted.
Set N62C OID_DOT11_CREATE_MAC:
Set N62C OID_DOT11_DELETE_MAC:
Set OID_DOT11_ENUM_BSS_LIST:
OID_DOT11_NIC_POWER_STATE: bRFOn(%d)
<=== N62CPreProcessOID(): %u.
N62CHandleOidRequest
OID 0x%08x not found in oid table
OID 0x%08x not supported in ExtSTA mode
OID 0x%08x not supported in ExtAP mode
Query of OID 0x%08x not supported
Set of OID 0x%08x not supported in INIT state.
Set of OID 0x%08x not supported in OP state.
Method request for OID 0x%08x not supported
NDIS_OID_REQUEST contains unknown request type %d
OID 0x%08x only valid on ERP phy. Current phy type is %d
OID 0x%08x only valid on ERP or HRDSS phy. Current phy type is %d
OID 0x%08x only valid on ERP, HRDSS or DSS phy. Current phy type is %d
OID 0x%08x only valid on OFDM phy. Current phy type is %d
N62CProcessOID
===> N62CProcessOID(): PortNumber: %d   PortType  %d
<=== N62CProcessOID(): %u
N62CHandleOIDProcess
==> N62CPreProcessOID() fail
==> N62CProcessCurrentPortOperationMode() Success return
==> N62CProcessOID() returns NDIS_STATUS_NOT_RECOGNIZED
CcxSetKeepAlive
OID_CCX_KEEP_ALIVE_REFRESH
Keep-alive refresh rate: %d
CcxSetAssocInfo
OID_CCX_ASSOC_INFO()=====>
CcxSetAssocInfo(): AssocIELen = %x 
 State_AsocService is not  STATE_Asoc_Idle -- ignore
CcxHandleNicSpecificExtension
CcxHandleNicSpecificExtension(): CCX_EVENT_OID:
Unknown CCX_EVENT_OID tlv type %x!
==> CCX_EVENT_OK_TO_ASSOCIATE
OID CCX_EVENT_OK_TO_ASSOCIATE is Time OUT
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET=>CCX_TLV_802_11_PACKET===> packet size is invalid(%d)
CcxHandleNicSpecificExtension(): CCX_EVENT_SEND_PACKET ==> IHV pkt complete (0x%p, retry=%x tsf=%I64x flags=%x).
unhandled TLV type 0x%X.
CcxHandleNicSpecificExtension(): Unknown Event %x.
CcxIndicateEvent
CcxIndicateEvent(): alloc error!!!
CcxIndicateEvent(): tlvs is NULL
CcxIsCCXNicSpecificExtension
CCX OUI Match
WARNING -- incorrect length
WARNING -- length too short
WARNING -- ccxData is NULL
CCX_EventQuerySetInformation
Received OID_DOT11_NIC_SPECIFIC_EXTENSION (method) !!!
InformationBuffer     = 0x%p
InputBufferLength     = %d
CCX_MpEventSetInformation
CCX MpEventSetInformation
In Recieve CCX OID: OID_CCX_ASSOC_INFO
CCX_MpEventSetInformation(): OID_CCX_FRAME_LOGGING_MODE set failed because IHV support mode is not valid!
Set OID_CCX_FRAME_LOGGING_MODE: bIhvFrameLogMode = %d
Set OID_CCX_DIAGNOSTICS_MODE: bCcxDiagnosticMode = %d
CCX_MpEventQueryInformation
MpEventQueryInformation(): Query OID OID_CCX_TSF invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_TSF
MpEventQueryInformation(): Query OID OID_CCX_NUM_TX_BUFFER invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_STA_STATISTICS_2 invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_LAST_BCN_TIME invalid length (%d < %d)
MpEventQueryInformation(): Query OID OID_CCX_LAST_BCN_TIME fail ==> media is disconnected!
Query OID_CCX_FRAME_LOGGING_MODE: bIhvFrameLogMode = %d
Query OID_CCX_DIAGNOSTICS_MODE: bCcxDiagnosticMode = %d
PlatformIORead1Byte
PlatformIORead1Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformIORead2Byte
PlatformIORead2Byte(Leave D3)
PlatformIORead2Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformIORead4Byte
PlatformIORead4Byte(Leave D3)
PlatformIORead4Byte(Enter D3): offset=0x%x, Data=0x%X
PlatformSetPeriodicTimer
Warning: Set periodic timer when timer is active !!
PlatformSetPMCSR
PlatformSetPMCSR(): D3(value: %d)
PlatformSetPMCSR() Failed!
PlatformSwitchClkReq = %x
PlatformSwitchClkReq
PlatformSwitchDevicePciASPM = %x
PlatformSwitchDevicePciASPM
PlatformSwitchDevicePciASPM() Failed!
PlatformEnableASPM
PlatformEnableASPM(): Fail to enable ASPM. Cannot find the Bus of PCI(Bridge).
%s(): Dont modify ASPM for non intel chipset. For Bridge Vendor %d.
PlatformEnableASPM():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
PlatformDisableASPM
%s(): Disable ASPM. Recognize the Bus of PCI(Bridge) as UNKNOWN.
PlatformDisableASPM():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
PlatformRestoreASPM
%s():PciBridge BusNumber[%x], DevNumbe[%x], FuncNumber[%x], Write reg[%x] = %x
PlatformClearPciPMEStatus
PlatformClearPciPMEStatus(): PCI configration 0x34 = 0x%2x
PlatformClearPciPMEStatus() Failed!
PlatformClearPciPMEStatus(): in pci configration1, value_offset%x = %x
PlatformClearPciPMEStatus(): Clear PME status 0x%2x to 0x%2x
PlatformClearPciPMEStatus(): PME status(0x%2x) = 0x%2x
MPQueryInformation
Query Information, OID_GEN_SUPPORTED_LIST
Query Information, OID_GEN_VENDOR_DRIVER_VERSION:%08x
Query Information: OID_PNP_CAPABILITIES, NOT support remote wake up
Query Information, OID_PNP_QUERY_POWER: %d
Query Information, OID_PNP_ENABLE_WAKE_UP: %d
Query OID_DOT11_CURRENT_TX_ANTENNA: 
Query OID_DOT11_CURRENT_RX_ANTENNA: 
Query OID_DOT11_SUPPORTED_TX_ANTENNA: 
Query OID_DOT11_SUPPORTED_RX_ANTENNA: 
Query OID_RT_DEVICE_ID_INFO: 
Unkown Hardware Type 
===> Query OID_RT_PRO_READ_REGISTRY.
<=== Query OID_RT_PRO_READ_REGISTRY.
===> Query OID_RT_PRO_READ_BB_REG.
<=== Query OID_RT_PRO_READ_BB_REG.
===> Query OID_RT_PRO_READ_EEPROM.
<=== Query OID_RT_PRO_READ_EEPROM.
===> Query OID_RT_PRO_READ_EFUSE.
<=== Query OID_RT_PRO_READ_EFUSE.
Query OID_RT_PRO_GET_EFUSE_UTILIZE
Query OID_RT_PRO_CHK_AUTOLOAD
===> Query OID_RT_PRO_RF_READ_REGISTRY.
<=== Query OID_RT_PRO_RF_READ_REGISTRY.
<==== MPQueryInformation(): handled by N6CQueryInformation() OID: 0x%08X Status: 0x%X
Query Information, OID not supported :%08X
<==== MPQueryInformation, OID=0x%08x, Status=%x
MPSetInformation
===> MPSetInformation(): 0x%08x.
Set OID_PNP_ADD_WAKE_UP_PATTERN
Set OID_PNP_REMOVE_WAKE_UP_PATTERN
SET OID_PM_REMOVE_WOL_PATTERN: Cannot find the wake up pattern size(%08X).
Set OID_PNP_ENABLE_WAKE_UP(%#X)
Set OID_802_11_NUMBER_OF_ANTENNAS: 
Set OID_802_11_RX_ANTENNA_SELECTED: 
Set OID_802_11_TX_ANTENNA_SELECTED: 
===> Set OID_RT_SCAN_AVAILABLE_BSSID.
<=== Set OID_RT_SCAN_AVAILABLE_BSSID (Immediate return because traffic is busy now)
<=== Set OID_RT_SCAN_AVAILABLE_BSSID.
===> Set OID_RT_PRO_WRITE_REGISTRY.
<=== Set OID_RT_PRO_WRITE_REGISTRY.
===> Set OID_RT_PRO_WRITE_BB_REG.
<=== Set OID_RT_PRO_WRITE_BB_REG.
===> Set OID_RT_PRO_WRITE_EEPROM.
<=== Set OID_RT_PRO_WRITE_EEPROM.
===> Set OID_RT_PRO_WRITE_EFUSE.
<=== Set OID_RT_PRO_WRITE_EFUSE.
===> Set OID_RT_PRO_UPDATE_EFUSE.
===> Set OID_RT_PRO_RF_WRITE_REGISTRY.
<=== Set OID_RT_PRO_RF_WRITE_REGISTRY.
===> Set OID_RT_PRO_SET_ANTENNA_BB.
<=== Set OID_RT_PRO_SET_ANTENNA_BB. return!!
Set OID_RT_PRO_SET_ANTENNA_BB, antennaIndex(%#x)
<=== Set OID_RT_PRO_SET_ANTENNA_BB.
Set OID_Unknown: %08X
\Registry\Machine\SYSTEM
DriverEntry_92S
Failed to register miniport with NDIS. Status = 0x%x
Driver Entry Return Fail = 0x%x
DriverEntry
DriverEntry: Initialize as 8192S
DriverEntry: Initialize as 8185
N6PciInitialize
====> N6PciInitialize()
N6PciInitialize set auto connect as TRUE
N6PciAllocateRxNetBufferListPool() failed Status: %#X!
N6PciFindAdapter() failed, Status: %#X!
N6PciReadRegParameters() failed, Status: %#X!
NicIFAssociateNIC fail
N6PciDiscoverAdapterResources() failed, Status: %#X!
N6PciSetMiniportAttributes(): failed to set driver attributes.
N6PciInitializeScatterGatherDma failed: %#X
N6PciRegisterInterrupt failed: %#X
N6PciAllocateNative80211MIBs failed
NicReadInitFile failed
NicIFInitializeAdapter() RtStatus: %#X!
NicIFInitializeAdapter failed: %#X
N6PciSetGeneralAttributes failed
N6Set80211Attributes failed
N62CInitialize failed
PnpWorkItem
 <== N6PciInitialize()
<== N6PciInitialize(), Initialize failed, clean up resources.
N6PciCheckReloadPCIEConfigurationSpace
NdisReadPciSlotInformation (PCI_COMMON_CONFIG) ulResult=%d
Jacken -> PCI_BAR0 = %x 
Jacken -> PCI_BAR1 = %x 
Jacken -> PCI_InterruptLine = %x 
Jacken -> PCI_CommandRegister = %x 
Reload PCI_BAR0 = %x 
Reload PCI_BAR1 = %x 
Reload PCI_InterruptLine = %x 
Reload PCI_CommandRegister = %x 
N6PciFindAdapter
Adapter (8185/8185B) is found- VendorID/DeviceID=%x/%x
Adapter(8190 PCI) is found - VendorID/DeviceID=%x/%x
Adapter(8192 PCI-E) is found - VendorID/DeviceID=%x/%x
Adapter(8192SE) is found - VendorID/DeviceID=%x/%x
Unknown device - VendorID/DeviceID=%x/%x
PCI_BAR0 = %x 
PCI_BAR1 = %x 
PCI_InterruptLine = %x 
PCI_CommandRegister = %x 
N6PciSetPCILatencyTimer
Driver Sets default latency timer...
N6PciSetPCICacheLineSize
Driver Sets default Cache Line Size...
N6PciGetPCIClockRequestCapability
NdisMSetBusData (Disable clock request failed) uResult=%d
Pci configration, 0x34 = %x
Pci configration1, value_offset%x = %x
in pci configration2, value_offset%x = %x
clk_request,value_offset%x Clk_req %x
N6PciParsePciConfiguration
NdisReadPciSlotInformation (RT_PCI_CAPABILITIES_HEADER) ulResult=%d
PCIe Header Offset =%x
Link Control Register =%x
Didn't Find PCIe Capability
N6PciReadRegParameters
 ==> N6usbReadRegParameters()
<== N6usbReadRegParameters(), failed in N6ReadCommonRegistry(). Status=0x%X !!!
<== N6usbReadRegParameters(), failed in N6OpenConfigurationHandle(), Status=0x%X !!!
<-- N6usbReadRegParameters, Status=%x
N6PciHandleInterrupt
N6PciRegisterInterrupt
NdisMRegisterInterruptEx 
N6PciFreeAll
N6PciFreeAll()
N6PciCheckForHang
N6usbCheckForHang(): Signal SetPnpChkForHangEvent!!
N6PciCheckForHang(): Adapter->MgntInfo.pStaQos->CurrentQosMode=%d
N6PciCheckForHang(): CompleteFlag(%u), OutstandingPacket(%u)
N6PciCheckForHang(): Tx probably hung
N6PciReset
N6PciReset()
N6PciPause
==> MiniportPause(), DriverState(%d)
<== MiniportPause(), DriverState(%d)
N6PciDriverUnload
==> N6Unload()
<== N6Unload()
N6PciHalt
====> MPHalt
N6PciHalt Alwasy set auto connect as TRUE before restart/power down/S3/S4
MPHalt IDR0: MAC ID %02x-%02x-%02x-%02x-%02x-%02x
!!!Wait for LPS leave too long!!! LPSLeaveTimeOut  = %d
!!!Wait for IPS leave too long!!! IPSLeaveTimeOut  = %d
RF is in progress, need to wait until rf chang is done.
Not to haltadapter if HW already halt
After MPHalt() -------- 
  RTL_AllocateMemory_count = %d
  RTL_FreeMemory_count = %d
  RTL_AllocateMemory_Len = %d
  RTL_FreeMemory_Len = %d
  RTL_AllocateSharedMemory_count = %d
  RTL_FreeSharedMemory_count  = %d
<==== MPHalt
N6PciPnPEventNotify
 ==> N6PnPEventNotify(): DevicePnPEvent: %#X
N6PnPEventNotify: NdisDevicePnPEventSurpriseRemoved
N6usbPnPEventNotify(): Time After waiting(%I64d)
N6usbPnPEventNotify(): Fianl time(%I64d)
NdisDevicePnPEventPowerProfileChanged- PowerProfile(%d)
N6PnPEventNotify: unknown PnP event %x 
 <== N6PnPEventNotify()
N6PciPowerSettingCallback
%s PowerSetting(%d)
N6PciPowerSettingChangeNotify
%s : PowerPolicy %d bInactivePs=%d bLeisurePS=%d  <==
N6PciShutdown
====> MPShutdown
After MPShutdown() -------- 
<==== MPShutdown
N6PciRestart
==> MiniportRestart(), DriverState(%d)
<== MiniportRestart(), DriverState(%d)
N6PciOidRequest
==> N6PciOidRequest()
N6PciOidRequest(): First OID(%p) when initializing. return PENDING
==> N62CProcessOID() fail
N6PciOidRequest(): Pend this OID(%p, ID =0x%08X)
N6PciSendNetBufferLists
N6PciSendNetBufferLists()
N6PciSendNetBufferLists(): N6PCI_CANNOT_TX(): drop the packets.
N6PciSendNetBufferLists(): Roaming in Progress(%d)
N6PciSendNetBufferLists(): Reset!!!
N6PciSendNetBufferLists(): +++N6CAddNblWaitQueue pCurrNetBufferList(%p)
N6PciSendNetBufferLists(): N6PciSendSingleNetBufferList pCurrNetBufferList(%p)
N6PciSendSingleNetBufferList
N6PciSendSingleNetBufferList(): WMMInfo should less or equal than 7 (%d)
N6PciSendSingleNetBufferList(): +++N6CAddNblWaitQueue(): out of TCB pCurrNetBufferList(%p), pCurrNetBuffer(%p)
N6PciSendSingleNetBufferList(): NdisMAllocateNetBufferSGList(): pCurrNetBufferList(%p), pCurrNetBuffer(%p)
NdisMAllocateNetBufferSGList(): failed: %#X !!!
N6PciSendSingleNetBufferList(): bFromQueue ---N6CRemvoeNblWaitQueue(): pCurrNetBufferList(%p)
N6PciReturnPendingNetBufferLists
N6PciReturnAllPendingTxPackets(): 1st thread enter here....
N6PciReturnAllPendingTxPackets(): wait SendingNetBufferList...
N6PciReturnAllPendingTxPackets(): IRQL(%d) != PASSIVE_LEVEL
N6PciCancelSend
 ==> N6PciCancelSend()
 <== N6PciCancelSend()
N6PciCancelAllTimer
N6PciCancelAllTimer()
N6PciAllocateNative80211MIBs
N6PciAllocateNative80211MIBs(): failed to allocate pDot11SupportedPhyTypes
N6PciAllocateNative80211MIBs(): failed to allocate pDot11PhyMIBs
N6PciFreeNative80211MIBs
N6PciFreeNative80211MIBs()
PnpSetPower
-----> PnpSetPower()
PnpSetPower()  try to connect to %s
Enter D0 Allow DM to execute
PnpSetPower(): Stopping S/W Beacon...
PnpSetPower(): Stopping H/W Beacon...
PnpSetPower()  sleep
PnpSetPower(): unexpected CurrentPowerState: %#X
<----- PnpSetPower()
N6pci_Mgnt_SetPower
====>N6pci_Mgnt_SetPower()
Set OID_PNP_SET_POWER: inavalid InformationBufferLength(%d), BytesNeeded is %d
Set OID_PNP_SET_POWER: PowerState(%d)
Set OID_PNP_SET_POWER: inavalid power state
Set OID_PNP_SET_POWER:Alread in this  power state
Set OID_PNP_SET_POWER: wake up from %d to D0
N6usb_Mgnt_SetPower(): IRQL > PASSIVE. Call workitem!!!
Set OID_PNP_SET_POWER: going to sleep: %d
@!!!!!Mgnt_SetPower we are scanning.....
@!!!!!Mgnt_SetPower before we save the ssid, the ssid is %s
Set OID_PNP_SET_POWER should not reach here: Current: %d to New: %d
N6pci_Mgnt_SetPower()====>
FillPnpCapabilities
FillPnpCapabilities(): support remote wake up
FillPnpCapabilities(): NOT support remote wake up
FillPmCapabilities
FillPmCapabilities(): support Win7 wake-on-lan (%d)
FillPmCapabilities(): NOT support Win7 wake-on-lan
AllocN6TxContexts
AllocN6TxContexts(): #TCB: %d, ScatterGatherListSize: %d, N6TxCtxSize: %d
AllocN6TxContexts(): failed to allocate pN6TxCtxBuf!!!
FreeN6TxContexts
FreeN6TxContexts(): 
GetPciBusInfo
GetPciBusInfo(): Find Device(%X:%X)  bus=%d dev=%d, func=%d
GetPciBusInfo(): Cannot Find Device(%X:%X)
GetPciBridegInfo
%s: Find Device(%X:%X)  bus=%d dev=%d, func=%d
%s(): Cannot Find PciBridge for Device
GetLinkControlField
GetLinkControlField(): Fail to find PCIe Capability
PCIBridgeCtrlReg = %x
GetLinkControlField(): Cannot Find PCIe Capability
N6PciFindBridgeInfo
Pci Bridge Vendor is found %d
Pci Bridge Vendor is %d
DrvIFIndicatePackets
Failed to allocate MDL
Failed to allocate NetBufferList
Failed to set information to NetBufferList
DrvIFIndicatePacket
DrvIFIndicatePacket(): failed to allocate resource! status: %d
DrvIFIndicateMultiplePackets
Failed to allocate memory for RecvContext
DrvIFIndicateMultiplePackets(): failed to allocate resource! status: %d
DrvIFCompletePacket
DrvIFCompletePacket(): pNBL(%p), pNB(%p), pSGList(%p)
DrvIFIndicateScanStart
==> DrvIFIndicateScanStart()
<== DrvIFIndicateScanStart()
DrvIFIndicateScanComplete
==> DrvIFIndicateScanComplete(): status = 0x%x
Indicate a scan complete event.
<== DrvIFIndicateScanComplete()
DrvIFIndicateConnectionStart
==> DrvIFIndicateConnectionStart()
<== DrvIFIndicateConnectionStart()
DrvIFIndicateConnectionComplete
==> DrvIFIndicateConnectionComplete(): status = %d
<== DrvIFIndicateConnectionComplete()
DrvIFIndicateAssociationStart
==> DrvIFIndicateAssociationStart()
<== DrvIFIndicateAssociationStart()
DrvIFIndicateAssociationComplete
==> DrvIFIndicateAssociationComplete()
<== DrvIFIndicateAssociationComplete()
DrvIFIndicateDisassociation
==> DrvIFIndicateDisassociation()
<== DrvIFIndicateDisassociation()
DrvIFIndicateRoamingStart
==> DrvIFIndicateRoamingStart()
<== DrvIFIndicateRoamingStart()
DrvIFIndicateRoamingComplete
==> DrvIFIndicateRoamingComplete()
<== DrvIFIndicateRoamingComplete()
DrvIFIndicateCurrentPhyStatus
==> DrvIFIndicateCurrentPhyStatus()
<== DrvIFIndicateCurrentPhyStatus()
DrvIFIndicateIncommingAssociationStart
==> DrvIFIndicateIncommingAssociationStart()
<== DrvIFIndicateIncommingAssociationStart()
DrvIFIndicateIncommingAssociationComplete
==> DrvIFIndicateIncommingAssociationComplete()
<== DrvIFIndicateIncommingAssociationComplete()
DrvIFIndicateIncommingAssocReqRecv
==> DrvIFIndicateIncommingAssocReqRecv()
<== DrvIFIndicateIncommingAssocReqRecv()
H9E(u4H
E<9E`s
VWifiSupport
WoWLANMode
CloEnable
TKIPinNmode
ShowRate
IndicateByDeauth
GPIORFSW
DMInitialGain
PNPCapabilities
AcceptAddbaReq
FwRWRF
DisableSilentReset
HalfNMode
CckPwEnl
RxReorder_PendTime
RxReorder_WinSize
RxReorder
RT2RTAggregation
MimoPs
EnableFwCalcDur
UseDriverAssingedRate
DisableRateFallBack
MPDU_Density
AMPDU_Factor
AMPDUEnable
AMSDU_MaxSize
AMSDU
ShortGI40MHz
ShortGI20MHz
11nAdhoc
BW40MHz
HT_EnableCck
RegRoamingLimit
RegROAMSensitiveLevel
TurboScan
KeepAliveLevel
LPSIntvl
bLeisurePs
InactivePs
EnableRxImmBA
NoAck
StaEDCAParamVO
StaEDCAParamVI
StaEDCAParamBK
StaEDCAParamBE
ApEDCAParamVO
ApEDCAParamVI
ApEDCAParamBK
ApEDCAParamBE
FragThresh
CustomerID
WdsMode
DriverDesc
LiveTime
ChnlWeight
AutoSelChnl
Dot11dEnable
SwAntennaDiversity
TurboMode
bRateAdaptive
HighPowerMechanism
Chaos
HctTest
RegSWRxDecryptFlag
RegSWTxEncryptFlag
PSPXlinkMode
LowRfdThreshold
TxPowerLevel
bRegTxPowerControl
ProtectionImpMode
bHwParaFile
DbgRmCase
CcxCAC
CcxUpdateTxCellPwr
CcxOffLineDurUpLimit
CcxRm
CcxEnable
ForcedPriority
MaxSPLength
StaUapsd
AdhocLinkState
RFOff
PreambleMode
DtimPeriod
AH_BcnIntv
ActingAsAp
IbssBeacon
PowerSaveMode
EnablePreAuth
NetworkType
DefaultKeyId
DefaultKeyW3
DefaultKeyW2
DefaultKeyW1
DefaultKeyW0
DefaultKey3
DefaultKey2
DefaultKey1
DefaultKey0
AuthentAlg
EncAlgorithm
DataEncAlg
WirelessMode4ScanList
CtsToSelfRate
ForcedDataRate
Channel
WirelessMode
ChannelPlan
BcnDenominator
WiFiConfg
WiFi11gIbss
RXAntenna
TXAntenna
CornerChange
ChargePump
Bssid
NetworkAddress
Realtek Wireless LAN
STA_RSSIRoamBeaconCount
STA_LostAPRoamBeaconCount
STA_BSSEntryExpireTime
STA_AdhocStationMaxCount
Helper_InterScanTime
Helper_ScanRescheduleTime
Helper_PassiveScanChannelCount
Helper_ActiveScanChannelCount
Helper_BSSEntryMaxCount
Helper_BSSEntryExpireTime
Helper_RSSILinkQualityThreshold
SupportLowPowerState
SupportPciASPM
HostPciASPMSetting
DevicePciASPMSetting
LPS2RDisable
PciASPM
HwSwRfOffD3
InitGainState
CWinMaxMin
MatchingByRule
%s(): Line(%d)  
Signature length is too long (limit = %d)
AdvanceAndGetDataByOffset
AdvanceAndGetDataByOffset(): some data can not be retrived
GPAllocateParser
GPAllocateParser(): Failed to allocate parsers
GPAllocateParser(): Failed to allocate parser
GPAllocateParserVoWlanSIP
GPAllocateParserVoWlanSIP(): Failed to allocate memory
INVITE sip:
SIP/2.0
BYE sip:
NOTIFY sip:
ACK sip:
m=audio
Call-ID:
RTP/AVP
GPParserCustomHandleSDP
GPParserCustomHandleUDP2SIP(): Failed to add a call
GPParserCustomHandleSDP(): Invalid flag
[MANS] 
[RTOS] 
[ALM]  
[PEM]  
[CMPK] 
[RAPD] 
[TXPB] 
[QUMG] 
DBG_PrintAllFlag
DBGFLAG 0    FQoS
DBGFLAG 1    FTX
DBGFLAG 2    FRX
DBGFLAG 3    FSEC
DBGFLAG 4    FMGNT
DBGFLAG 5    FMLME
DBGFLAG 6    FRESOURCE
DBGFLAG 7    FBEACON
DBGFLAG 8    FISR
DBGFLAG 9    FPHY
DBGFLAG 11   FMP
DBGFLAG 12   FPWR
DBGFLAG 13   FDM
DBGFLAG 14   FDBGCtrl
DBGFLAG 15   FC2H
DBGFLAG 16   FBT
DBG_PrintAllComp
GlobalDebugComponents Definition
BIT0    COMP_TRACE
BIT1    COMP_DBG
BIT2    COMP_INIT
BIT3    COMP_OID_QUERY
BIT4    COMP_OID_SET
BIT5    COMP_RECV
BIT6    COMP_SEND
BIT7    COMP_IO
BIT8    COMP_POWER
BIT9   COMP_MLME
BIT10   COMP_SCAN
BIT11   COMP_SYSTEM
BIT12   COMP_SEC
BIT13   COMP_AP
BIT14   COMP_TURBO
BIT15   COMP_QOS
BIT16   COMP_AUTHENTICATOR
BIT17   COMP_BEACON
BIT18   COMP_BEACON
BIT19   COMP_RATE
BIT20   COMP_EVENTS
BIT21   COMP_FPGA
BIT22   COMP_RM
BIT23   COMP_MP
BIT24   COMP_RXDESC
BIT25   COMP_CKIP
BIT26   COMP_DIG
BIT27   COMP_TXAGC
BIT28   COMP_HIPWR
BIT29   COMP_HALDM
BIT30   COMP_RSNA
BIT31   COMP_INDIC
BIT32   COMP_LED
BIT33   COMP_RF
BIT34   COMP_HT
BIT35   COMP_POWER_TRACKING
BIT36   COMP_POWER_TRACKING
BIT37   COMP_AMSDU
BIT38   COMP_WPS
BIT39   COMP_RATR
BIT40   COMP_RESET
BIT41   COMP_CMD
BIT42   COMP_EFUSE
BIT43   COMP_MESH_INTERWORKING
BIT43   COMP_CCX
GlobalDebugComponents = %lx
Enable DBG COMP =
BIT%02d |
DBG_PrintFlagEvent
BIT 0    QoS_INIT
BIT 1    QoS_VISTA
BIT 0    TX_DESC
BIT 1    TX_DESC_TID
BIT 0    RX_DATA
BIT 1    RX_PHY_STS
BIT 2    RX_PHY_SS
BIT 3    RX_PHY_SQ
BIT 4    RX_PHY_ASTS
BIT 5    RX_ERR_LEN
BIT 6    RX_DEFRAG
BIT 7    RX_ERR_RATE
BIT 0    MEDIA_STS
BIT 1    LINK_STS
BIT 0    OS_CHK
BIT 0    BCN_SHOW
BIT 1    BCN_PEER
BIT 0    ISR_CHK
BIT 0    PHY_BBR
BIT 1    PHY_BBW
BIT 2    PHY_RFR
BIT 3    PHY_RFW
BIT 4    PHY_MACR
BIT 5    PHY_MACW
BIT 6    PHY_ALLR
BIT 7    PHY_ALLW
BIT 8    PHY_TXPWR
BIT 0    MP_RX
BIT 0    EEPROM_W
BIT 1    EFUSE_PG
BIT 0    LPS
BIT 1    IPS
BIT 2    PWRSW
BIT 3    PWRHW
BIT 4    PWRHAL
BIT 0    WA_IOT
BIT 1    DM_PWDB
BIT 0    DbgCtrl_Trace
BIT 1    DbgCtrl_InbandNoise
BIT 0    C2H_Summary
BIT 1    C2H_PacketData
BIT 2    C2H_ContentData
BIT 0    BT_TRACE
BIT 1    BT_RFPoll
MgntActQuery_802_11_BSSID_LIST
We do not find the AP currently associated !!!
MgntActQuery_RT_11N_USER_SHOW_RATES
MgntActQuery_RT_11N_USER_SHOW_RATES():rate(%#x)
MgntActSet_RT_TurboModeType
MgntActSet_RT_TurboMode(): pForceType(%d)
MgntActSet_RT_TurboModeType(): Invalid Value(%d)!
MgntActSet_EnterTurboMode
===>MgntActSet_EnterTurboMode(): bEnterTurboMode(%d)
MgntActSet_EnterTurboMode(): +++Enter TCA
MgntActSet_EnterTurboMode(): ---Leave TCA
<=== MgntActSet_EnterTurboMode()
MgntActSet_Locked_STA_Address
===> MgntActSet_Locked_STA_Address()
<=== MgntActSet_Locked_STA_Address()
MgntActSet_Accepted_STA_Address
===> MgntActSet_Accepted_STA_Address()
<=== MgntActSet_Accepted_STA_Address()
MgntActSet_Rejected_STA_Address
===> MgntActSet_Rejected_STA_Address()
<=== MgntActSet_Rejected_STA_Address()
MgntActSet_PER_STA_DATA_RATE
===> MgntActSet_PER_STA_DATA_RATE()
Forced Data Rate: %d Mbps
<=== MgntActSet_PER_STA_DATA_RATE()
MgntActSet_802_11_BSSID
MgntActSet_802_11_BSSID: %02X%02X%02X%02X%02X%02X
MgntActSet_802_11_SSID
MgntActSet_802_11_SSID(): mActingAsAp, Dummy SSID! Not to set it!
MgntActSet_802_11_SSID(): mActingAsAp &&  bAutoSelChnl ==> MgntLinkRequest
Ssid during association !!
MgntActSet_802_11_SSID(): Dummy SSID! Return!!!!
MgntActSet_802_11_SSID(): In WPS process, do not connect to the same AP
MgntActSet_802_11_INFRASTRUCTURE_MODE
MgntActSet_802_11_INFRASTRUCTURE_MODE(): %d
MgntActSet_802_11_RTS_THRESHOLD
TODO: Set Rts Threshold = %02x .
MgntActSet_802_11_ADD_WEP
===> MgntActSet_802_11_ADD_WEP(): EncAlgorithm=%d, KeyIndex=0x%lX, KeyLength=%ld, IsDefaultKeyId=%d
<=== MgntActSet_802_11_ADD_WEP()
MgntActSet_802_11_DISASSOCIATE
MgntActSet_802_11_DISASSOCIATE() ===> AP_DisassociateAllStation
MgntActSet_802_11_DISASSOCIATE() ===> MgntDisconnectIBSS
MgntActSet_802_11_DISASSOCIATE() ===> MgntDisconnectAP
MgntActSet_802_11_BSSID_LIST_SCAN
===> MgntActSet_802_11_BSSID_LIST_SCAN()
<=== MgntActSet_802_11_BSSID_LIST_SCAN(): in AP mode, return TRUE.
<=== MgntActSet_802_11_BSSID_LIST_SCAN(): return TRUE.
MgntActSet_802_11_ADD_KEY
===> MgntActSet_802_11_ADD_KEY()
EncAlgorithm=%d, KeyIndex=0x%lX, IsGroupTransmitKey=%d, IsGroup=%d, KeyRSC=0x%I64X
<=== MgntActSet_802_11_ADD_KEY(): key length not match
<=== MgntActSet_802_11_ADD_KEY(): Wep with wrong key length
MgntActSet_802_11_ADD_KEY: Set Retry count to be 0!
MgntActSet_802_11_ADD_KEY(): SecLvl>0, EncAlgorithm=%d, IsGroup=%d
<=== MgntActSet_802_11_ADD_KEY(): return TRUE.
MgntActSet_RSNA_REMOVE_DEAULT_KEY
<====Remove Default Key
====>Remove Default Key
MgntActSet_RSNA_ADD_DEAULT_KEY
<====Add Default Key
 Key index : %02lx 
====>Add Default Key
MgntActSet_RSNA_REMOVE_MAPPING_KEY
<====Remove Mapping Key
====>Remove Mapping Key
MgntActSet_RSNA_ADD_MAPPING_KEY
<====Add Mapping Key
====>Add Mapping Key
MgntActSet_802_11_WIRELESS_MODE
MgntActSet_802_11_WIRELESS_MODE(): WirelessMode(0x%X) is not supported (0x%X)!
Set WIRELESS_MODE_A
Set WIRELESS_MODE_B
Set WIRELESS_MODE_G
Set WIRELESS_MODE_AUTO
Set WIRELESS_MODE_N_24G
Set WIRELESS_MODE_N_5G
Set WIRELESS_MODE_UNKNOWN
MgntActSet_802_11_CHANNEL
===>MgntActSet_802_11_CHANNEL
MgntActSet_802_11_CHANNEL(): reject to switch channel to %d under AP mode auto-channel selection process...
MgntActSet_802_11_CHANNELPLAN
MgntActSet_802_11_CHANNELPLAN(): reject to set channel plan. (HW reject)
MgntActSet_802_11_CHANNELPLAN(): not support this channel plan (%d > MAX: %d). (HW reject)
MgntActSet_802_11_CHANNELPLAN(): set channel plan (%d)
MgntActSet_802_11_PMKID
MgntActSet_802_11_PMKID(): Length=%ld
MgntActSet_802_3_MULTICAST_LIST
MgntActSet_802_3_MULTICAST_LIST(): Length = %d, bAcceptAllMulticast = %d
MgntActSet_Passphrase
====>MgntActSet_Passphrase() : In Auto mode can't call this function !!
MgntActSet_RF_State
===>MgntActSet_RF_State(): StateToSet(%d)
MgntActSet_RF_State(): RF Change in progress! Wait to set..StateToSet(%d).
MgntActSet_RF_State(): Wait 1 ms (%d times)...
MgntActSet_RF_State - eRfon RfOffReason= 0x%lx, ChangeSource=0x%lX
MgntActSet_RF_State - eRfon reject pMgntInfo->RfOffReason= 0x%lx, ChangeSource=0x%lX
MgntActSet_RF_State(): Action is allowed.... StateToSet(%d), RfOffReason(%#lX)
MgntActSet_RF_State(): Turn on RF and leave SS mode!!
MgntActSet_RF_State(): Turn off RF and enter SS mode!!
MgntActSet_RF_State(): Action is rejected.... StateToSet(%d), ChangeSource(%#lX), RfOffReason(%#lX)
<===MgntActSet_RF_State()
MgntActSet_TX_POWER_LEVEL
MgntActSet_TX_POWER_LEVEL(): Power Range from Max TX Power Dbm(%ld) To Min Dbm(%ld)
MgntActSet_TX_POWER_LEVEL(): Set TX Power(TX Power Level: %d) to Dbm(%ld)
MgntActSet_TX_POWER_DBM
MgntActSet_TX_POWER_DBM(): powerInDbm(%ld)
MgntActSet_TX_POWER_DBM(): powerInDbm(%ld), UpdateTxPowerWorkItem is in progress!!!
MgntTranslateNdisVersionToRtNdisVersion
MgntTranslateNdisVersionToRtNdisVersion(): %X => %X
MgntDetermineApType
MgntDetermineApType(): pMgntInfo->NdisVersion: %u, ApType is determined to be: %u
MgntActSet_ApType
MgntActSet_ApType(): %u
MgntActSet_802_11_WMM_MODE
Enabled
Disabled
MgntActSet_802_11_WMM_MODE(): WMM is %s
MgntActSet_802_11_WMM_UPSD
MgntActSet_802_11_WMM_UPSD(): UPSD is %X
GetHexValueFromString
GetHexValueFromString(): Invalid inpur argumetns! szStr: %p, pu4bVal: %p, pu4bMove: %p
MgntAllocMemory
ALLOC_RT_OBJECT: %p size: %ld
MgntFreeMemory
FREE_RT_OBJECT: %p size: %d
ScanTimer
JoinTimer
JoinConfirm
AuthTimer
AsocTimer
globalKeyInfo.KeyMgntTimer
AwakeTimer
InactivePsTimer
PnPWakeUpJoinTimerCallback
TsmTimer
ACMTimer
AddTsTimer
SessionRetryTimer
SetCCXAssocInfoTimer
DelayStartTimer
IbssStartRequestWorkItem
ApStartRequestWorkItem
DozeWorkItem
AwakeWorkItem
TbttPollingWorkItem
InactivePsWorkItem
UpdateTxPowerWorkItem
NIC Verify Console
RmWorkitem
MgntFilterReceivedPacket
MgntFilterReceivedPacket(): Not AMSDU, but packet lenght > 2k, Dropped!!!===
MgntFilterReceivedPacket(): pMgntInfo->mDisable
MgntFilterReceivedPacket(): Reject Encrypted Management frame except 3rd auth frame.
MgntFilterReceivedPacket(): filter frames from different BSS.
bValidAddr4 =%d BSSID=[%02x-%02x-%02x-%02x-%02x-%02x]
In Check EAP Packet
In WPS Copy EAP Packet
The Data is %x and QoS is Set
MgntFilterReceivedPacket():  station without Encryption Algrithm.
MgntFilterReceivedPacket():  station with Encryption Algrithm. Only EAPOL packets allowed.
MgntFilterReceivedPacket(): Filter broadcast frame from this station.
MgntFilterReceivedPacket(): Filter Multicast from this station.
MgntFilterReceivedPacket(): <<<<<<<<<< Leave APSD service period <<<<<<<<<<
MgntFilterReceivedPacket(): return FALSE if station is not associated.
MgntCheckForwarding
MgntCheckForwarding(): Failed to forward packet from WDS to BSS!
MgntFilterTransmitPacket
MgntFilterTransmitPacket(): Destination STA is not associated, pRaddr: %02X-%02X-%02X-%02X-%02X-%02X!
MgntFilterTransmitPacket(): bWithAddr4 but WdsMode is WDS_DISABLED!
MgntFilterTransmitPacket(): unknown WDS AP, pRaddr: %02X-%02X-%02X-%02X-%02X-%02X!
MgntGetEncryptionInfo
====> WEP EAPOL Packet No Encode ....
===>MgntGetEncryptionInfo() ExemptionActionType = %x 
MgntQuery_MgntFrameTxRate(), rate = 0x%x
MgntQuery_DataFrameTxRate
MgntQuery_DataFrameTxRate(): nonassociated STA: %02X-%02X-%02X-%02X-%02X-%02X
Qos data SEQ=%04d TID = %d
TbttPollingWorkItemCallback
TbttPollingWorkItemCallback(): Now: %I64d >= Tbtt: %I64d => update beacon ...
TbttPollingWorkItemCallback(): BcnPeriod: %ld, update Tbtt to %I64d 
TbttPollingWorkItemCallback(): wait %ld us
TbttPollingWorkItemCallback(): overflow!!! Now: %I64d >= NextBcnTime: %I64d => wait %ld us
TbttPollingWorkItemCallback(): Now: %I64d < Tbtt: %I64d => wait %ld us
MgntQuery_TxRateExcludeCCKRates(), BasicRate = 0x%x
Find first BasicRate = 0x%x
Find small BasicRate = 0x%x
No BasicRate found!!
Final QueryRate = 0x%x
CCX4_CAC SIP parser
AsocEntry_AgeFunction
==> AsocEntry_AgeFunction()
AsocEntry_AgeFunction() > 10 min, %02X-%02X-%02X-%02X-%02X-%02X
AsocEntry_AgeFunction Return TCB 
AsocEntry_AgeFunction() > 0.5 sec, %02X-%02X-%02X-%02X-%02X-%02X
<== AsocEntry_AgeFunction()
AsocEntry_ResetAvailableAID
AsocEntry_ResetAvailableAID(): clear non-existing entry AID
AP_ForwardPacketWithFromDS
AP_ForwardPacketWithFromDS(): Out of TCB !!!
AP_ForwardPacketWithFromDS(): MgntGetBuffer() return FALSE!!!
AP_FromWdsToBss
AP_FromWdsToBss(): Out of TCB !!!
AP_FromWdsToBss(): MgntGetBuffer() return FALSE!!!
AP_FromBssToWds
AP_FromBssToWds(): Out of TCB !!!
AP_FromBssToWds(): MgntGetBuffer() return FALSE!!!
AP_LocalToWds
AP_LocalToWds(): MgntGetBuffer() return FALSE!!!
AP_OnAuthOdd
AP_OnAuthOdd(): unknow STA MAC address!
AP_OnAuthOdd(): pEntry != NULL
AP_OnAuthOdd(): pEntry->bAssociated
AP_OnAuthOdd(): AsocEntry_RemoveStation
AP_OnAuthOdd(): StatusCode_assoc_deniedbyap
AP_OnAuthOdd(): Illegal AuthAlg: %d for AuthSeq: %d !!!
AP_OnAuthOdd(): Illegal auth sequence number: %d !!!
AP_OnAuthOdd(): AuthStatusCode != StatusCode_success
AP_OnAuthOdd(): Remove association entry of the STA if AuthStatusCode is not successful. 
AP_OnAsocReq
===>AP_OnAsocReq()
<===AP_OnAsocReq()  Check Bssid. return FALSE
<===AP_OnAsocReq()  Check SSID. return FALSE
<===AP_OnAsocReq()  pEntry == NULL
<===AP_OnAsocReq()  !((pEntry->AuthAlg == OPEN_SYSTEM && pEntry->AuthPassSeq == 2
<===AP_OnAsocReq()  Check RSN-IE if necessary. return FALSE
<===AP_OnAsocReq() pentry already associated 
AP_OnAsocReq(): OS did not make decision whether to accept the AsocReq.
AP_OnAsocReq(): the AssocReq is not accepted by OS.
<===AP_OnAsocReq()
AP_DisassociateStation
AP_DisassociateStation()
AP_DisassociateAllStation
AP_DisassociateAllStation()  
AP_StartApRequest
===> ++++++ AP_StartApRequest() ++++++ SwTxEncFlag: %u 
===> ++++++ AP_StartApRequest() ++++++ Set Channel %d 
AP_StartApRequest(): pMgntInfo->bStartApDueToWakeup %d
AP_StartApRequest(): Stopping Beacon... 
AP_StartApRequest(): Stopping H/W Beacon...
AP_StartApRequest(): Start S/W Beacon....
AP_StartApRequest(): Send H/W Beacon....
40MHz
20MHz
AP_StartApRequest(): set to %s mode
Now is Default Adapter.
Now is Extension Adapter.
Def Connected.
Def Not Connected.
ExtChnlOffset=%d,pDefHTInfo->CurSTAExtChnlOffset=%d
bInHctTest set HT_CHANNEL_WIDTH_20, HT_EXTCHNL_OFFSET_NO_EXT
pDefault->Channel=%d,pExtension->Channel=%d.
AP_StartApRequest():  HT_CHANNEL_WIDTH_20, HT_EXTCHNL_OFFSET_NO_EXT
<=== ++++++ AP_StartApRequest() ++++++
AP_CheckRSNIE
RSNIE parsing error!
AP_OnEAPOL
===> AP_OnEAPOL()
AP_OnEAPOL(): PacketLength=%d
AP_OnEAPOL(): Cannot find the STA in the table!!! drop it.
EAPOL-key
EAPOL-start
Start 4-way handshake because of EAPOL-start.
Don't responce!Maybe 4-way or 2-way handshaking
Drop the EAPOL-start packet.
AP_OnEAPOL(): EAPOL packet with unknown type.
<=== AP_OnEAPOL()
AP_StaRateAdaptation
0. STA: %02X-%02X-%02X-%02X-%02X-%02X
1. RetryFrameCnt= %d,      NoRetryFrameCnt= %d
2. retryRate= %d,              avgRetryRate= %d
3. STA SignalStrength = %ld
4. STA DataRate= %d
5. AP   DataRate= %d
6. txRateIndex=%d 
AP_HTCheckHTCap
pMgntInfo->pHTInfo->bCurSuppCCK = %d
Check Fail !! HT DSS/CCK Not Supported
AP_CheckHTCap(): STA has HT cap, AMSDUSize = %d, AMPDUFactor = %d, MPDU Density = %d
AP_HTCheckBwWidth
AP_HTCheckBwWidth(): set to %s mode
DelaySendBeaconTimerCallback
DelaySendBeaconTimerCallback:() AP not started
NicIFInitializeAdapter
NicIFInitializeAdapter() init_retry(%#x)
NicIFEnableNIC
InitializeAdapter Fail
NicIFSilentReset
Reset progress!! <====
Reset Failed!!
Reset finished!! ====>[%ld]
SecCheckTKIPMIC
SecCheckTKIPMIC(): pRfd->PacketLength < IVOffset
SecCheckTKIPMIC(): Keyidx: %d > 4
Rx:TKIP_MIC Error, Decrypted: %x, bMcstDest: %d
Rx:TKIP_MIC Ok
SecGetGroupCipherFromBeacon
SecGetGroupCipherFromBeacon(): GroupEncAlgorithm = %d
SecCalculateCKIPMIC
==> SecCalculateCKIPMIC()
<== SecCalculateCKIPMIC()
SecSWAESEncryption
===> MFP AES mode !!  
=====>RSNA IBSS Send Encrypt packet 
DefaultTransmitKeyIdx: %d
SecSWCKIPEncryption
==> SecSWCKIPEncryption()
SecSWCKIPEncryption(): Use pure WEP encryption.
SecSWCKIPEncryption(): CKIP case: Do Key Permutation.
<== SecSWCKIPEncryption()
SecSWAESDecryption
 =====> RSNA IBSS Recive Encrypt Packet
 KEY ID : %02x 
 KEY Valid : %x 
 micOK : %lx
SecSWTKIPDecryption
Error: tempIV = 0x%16I64x
Error: pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
minor issue: tempIV = 0x%16I64x
minor issue: pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
Rx:TKIP Error
Rx:TKIP Error: %d
Rx:TKIP OK
SecSWWEPDecryption
SecSWWEPDecryption(): WEP software decrypted Fail!!! (datalen=%ld)
SecSWCKIPDecryption
SecSWCKIPDecryption(): DEcok=0x%X
SecFillHeader
SecFillHeader(): !bEncrypt => return FALSE!
SecFillHeader(): retrun TRUE
SecIsEAPOLPacket
SecIsEAPOLPacket(): invalid length(%d)
SecSetPMKID
SecSetPMKID(): Number Of PMKID on list = %ld
SecSetPMKID(): BSSIDInfoCount is more than NUM_PMKID_CACHE!%ld
------------------------------------------
[PMKID %ld]
SecSetPMKID(): PMKIDList[%ld].bUsed is TRUE
SecIsInPMKIDList
SecIsInPMKIDList(): i=%d
SecCatPMKID
SecCatPMKID(): AP is not in current PMKID List => do nothing.
SecDropForKeyAbsent
==> SecDropForKeyAbsent()
SecDropForKeyAbsent(): Tx Data Without Group Key %d
SecDropForKeyAbsent(): Tx Data Without Pairwise Key!
SecDropForKeyAbsent(): Tx Data Without WEP Key %d
SecDropForKeyAbsent(): Not to send data frame since there is no key!
<== SecDropForKeyAbsent(), bDrop=%d
SecSetSwEncryptionDecryption
SecSetSwEncryptionDecryption(): Warning! User and driver determined encryption mechanism mismatch.
SecSetSwEncryptionDecryption(): RegSWTxEncryptFlag = %d, bSWTxEncrypt = %d
SecSetSwEncryptionDecryption(): Warning! User and driver determined decryption mechanism mismatch.
SecSetSwEncryptionDecryption(): RegSWRxDecryptFlag = %d, bSWRxDecrypt = %d
SecSWMFPDecryption
SecSWMFPDecryption(): Fail MFP packe decrypt !!
SecSWMFPDecryption(): Check Packet Length failed!!
SecSWMFPDecryption(): SW Descryption OK!
SecRxDescryption
SecRxDescryption(): Error!!! Receive Mgnt Frame with WEP bit (Not support)!
SecRxDescryption(): SW Descrypt Fail for data packet
SecRxDescryption(): ===>Fail Win7 SW decrypt case 1 
SecRxDescryption():===>Fail Win7 SW decrypt case 2 
===>Fail Win7 SW decrypt case 3 
SecRxDescryption(): Error!!! Receive Frame(Type = 0x%02X) with WEP bit (Not support)!
CheckQBssLoad
CheckQBssLoad(): AAC = %d, MediumTime = %d
CheckQBssLoad(): insufficient bandwith, skip this bss
CheckBSSSetting
CheckBSSSetting(): BSS Cap shows privacy, but PairwiseEncAlgo is NO_Encryption
CheckBSSSetting(): BSS Cap shows no privacy, but PairwiseEncAlgo is %d
SelectNetworkBySSID() : secLvl = %x , Pairwise chiper = %x
MlmeOnAssocOK
MlmeOnAssocOK(): Join a BSS
<===== MlmeOnAssocOK()
MgntConnectOtherBss
MgntConnectOtherBss(): Roam Retry = %d!
MgntConnectOtherBss(): Connect other = %d!
GetRealtekIEContentForTurboMode
GetRealtekIEContentForTurboMode(): IE length too short.
GetRealtekIEContentForTurboMode(): Type=1, bRealtekCapType1Exist  =%d, RealtekCap=0x%X
GetRealtekIEContentForTurboMode(): Type=%d, do nothing.
UpdateBssWcnIe
UpdateBssWcnIe(): length of the recvd Wcn IE (%u) greater than the maximum length (%u) we can deal with.
GetValueFromBeaconOrProbeRsp
Current Channel %d
GetValueFromBeaconOrProbeRsp HT N mode
GetValueFromBeaconOrProbeRsp Not HT N mode
GetScanInfo
GetScanInfo(): ERROR pMgntInfo->state_Synchronization_Sta = %d
HCT:GetScanInfo(): discard for null ssid
GetScanInfo(): ERROR! No bssdesc entry.
GetScanInfo(): Filter probe response at passive scaning channel(%d).
GetScanInfo(): create new BssDesc at ch %d, bss index:%d
GetScanInfo(): create new BssDesc is %d HT mode
SelectNetworkBySSID
SelectNetworkBySSID(): BssDescNum = %d
SelectNetworkBySSID(): In WPS Lie to Autoconfig
==>WPS changr security mode to open for connect
SelectNetworkBySSID(): RT_ROAMING_BY_SLEEP/RT_ROAMING_BY_DEAUTH Weight More
SelectNetworkBySSID(): no BSS matched, Regdot11networktype = %d
<=== SelectNetworkBySSID(): Do not start IBSS if RT_JOIN_NETWORKTYPE_INFRA!
<=== SelectNetworkBySSID(): Do not start IBSS for Join Only!
<=== SelectNetworkBySSID(): join_action = %d
FindBestChannel
FindBestChannel(): nNumChnlFound=%d, InitMode=%d, Behavior=%d
Behavior=2: CH_SEL_RANDOM => %d
FindBestChannel(): ChnlWeightList[%d]: Ch=%d, Weight=%d
FindBestChannel(): nBestChnlWeight=%d, BestChnl=%d
AutoSelectChannel
AutoSelectChannel(): ChnlWeightMode=%d
SelectRateSet
===> SelectRateSet()
Warning: Operational rate set is empty !
<=== SelectRateSet(): return TRUE.
SetupJoinInfraInfo
===> SetupJoinInfraInfo()
bSupportNmode %d, bHalfSupportNmode%d 
SetupJoinInfraInfo() set bIOTAction for HT_IOT_ACT_WA_IOT_Broadcom
SetupJoinInfraInfo(): TurboChannelAccess.bEnabled(%d)
SetupJoinInfraInfo(): bJoinInProgress = %d
<=== SetupJoinInfraInfo()
SetupJoinIBSSInfo
===> SetupJoinIBSSInfo()
====>SWRxDecryptFlag = %d 
SetupJoinIBSSInfo Set a CurrentQosMode = QOS_WMM
SetupJoinIBSSInfo Set a CurrentQosMode = QOS_DISABLE
SetupJoinIBSSInfo()(): TurboChannelAccess.bEnabled(%d)
SetupJoinIBSSInfo(): 
SetupJoinIBSSInfo(): bJoinInProgress = %d
<=== SetupJoinIBSSInfo()
SetupStartIBSSInfo
===> SetupStartIBSSInfo() bIbssStarter: %x.
SetupStartIBSSInfo(): TurboChannelAccess.bEnabled(%d)
SetupStartIBSSInfo(): bJoinInProgress = %d
<=== SetupStartIBSSInfo()
IbssStartRequestCallback
===> IbssStartRequestCallback()
IbssStartRequestCallback(): bJoinInProgress = %d
<=== IbssStartRequestCallback()
MgntDisconnectAP
======>CCKM clear key...
MgntDisconnect
MgntDisconnect() ===> AP_DisassociateAllStation
MgntDisconnect() ===> MgntDisconnectIBSS
MgntDisconnect() ===> MgntDisconnectAP
MgntDisconnectIBSS
XXXXXXXXXX MgntDisconnect IBSS
MgntIndicateMediaStatus
MEDIA_STATUS_CONNECT !!
MEDIA_STATUS_KEEP_CONNECT !!
Has no Defaul Connection.->20MHz
MEDIA_STATUS_DISCONNECT !!
MEDIA_STATUS_KEEP_DISCONNECT !!
Warning: Unknown link status !!
AsocTimeout
===> AsocTimeout()
AsocTimeout(): STATE_Wait_Asoc_Response.
AsocTimeout(): STATE_Wait_Reasoc_Response.
<=== AsocTimeout()
MlmeAssociateRequest
===> MlmeAssociateRequest()
MlmeAssociateRequest(): Set CCX Info Timer!
MlmeAssociateRequest(): Send Reassociate Req
MlmeAssociateRequest(): Send Associate Req
<=== MlmeAssociateRequest(): return TRUE.
MlmeAssociateConfirm
===> MlmeAssociateConfirm(): result: %d.
MlmeAssociateConfrim(): - success, bJoinInProgress = %d
<=== MlmeAssociateConfirm(): return TRUE.
MlmeAssociateConfirm(): failed(%d) => Asoc retry for AsocRetryCount(%d) < RT_ASOC_RETRY_LIMIT(%d)
MlmeAssociateConfirm(): failed(%d) => No Retry! Try to connect to the other one BSS!!
MlmeAssociateConfirm(): -fail 0, bJoinInProgress = %d
<=== MlmeAssociateConfirm(): return FALSE.
AuthTimeout
===> AuthTimeout()
<=== AuthTimeout()
MlmeAuthenticateRequest
===> MlmeAuthenticateRequest()
<=== MlmeAuthenticateRequest(): return TRUE.
MlmeAuthenticateRequest_Confirm
===> MlmeAuthenticateRequest_Confirm(): result: %d.
MlmeAuthenticateRequest_Confirm(): Auth retry for AuthRetryCount(%d) < RT_AUTH_RETRY_LIMIT(%d)
MlmeAuthenticateRequest_Confirm(): Change auth alg
MlmeAuthenticateRequest_Confirm(): auAlg(%d)
MlmeAuthenticateRequest_Confirm(): No more Auth retry for AuthRetryCount(%d) >= RT_AUTH_RETRY_LIMIT(%d)
MlmeAuthenticateRequest_Confirm(): Reset roaming and AuthStatus!
MlemAuthenticateRequest_Confirm(): bJoinInProgress = %d
MlmeAuthenticateRequest_Confirm(): ERROR!!
<=== MlmeAuthenticateRequest_Confirm(): return TRUE.
JoinTimeout
===> JoinTimeout(): Join timeout!
JoinTimeout(): bJoinInProgress = %d
JoinTimeout(): try to link again
JoinTimeout(): can't perform link retry any more => reset roaming and Synchronization_Sta_State!
JoinTimeout(): Start an IBSS
JoinTimeout(): indicate disconnect
<=== JoinTimeout(): Join timeout!
JoinRequestReschedule
RescheduleJoinRequest(): RF is OFF. Reject JoinRequest
RescheduleJoinRequest(): Under inactive ps mode, turn on RF and continue.
JoinRequest
===> JoinRequest()
<=== JoinRequest()
JoinRequest(): RT_JOIN_INFRA.......
JoinRequest(): RT_JOIN_IBSS.......
JoinRequest(): RT_START_IBSS.......
JoinRequest(): 
JoinRequest():RT_START_IBSS - Do not start IBSS at channel(%d).
JoinRequest(): RT_NO_ACTION !!!!!!!!!!!!
JoinRequest(): unknown JoinAction (%d)!!!
===> JoinConfirm()
JoinConfirm(): Unknown OP mode
<=== JoinConfirm()
MgntRoamComplete
successful
failed
MgntRoamComplete(): Roaming is %s!!!
ScanMergeResult
History %d DiffTime %I64d channel %d
# %d HistoryCount %d HistoryTime %I64d
ScanByTimer
===> ScanByTimer()
<=== ScanByTimer(): scan in progress.
pMgntInfo->state_Synchronization_Sta = STATE_Act_Listen
<=== ScanByTimer()
ScanComplete
===> ScanComplete()
ScanComplete(): join_action(%d) bIbssStarter(%d)
ScanComplete(): AutoSelectChnl: %d
<=== ScanComplete()
ScanCallback
ScanCallback: Set Bandwidth to 20 MHz! 
ScanCallback():Wait for previous channel switching
ScanCallback():Switch to SettingBeforeScan(%d)
ScanCallback():Switch to channel(%d) period (%d)
ScanCallback(): Unexpected ScanStep(%d)!!!
MgntLinkRetry
MgntLinkRetry(): Dummy SSID! Not to retry!
MgntLinkRetry(): bForceRetry(%d) JoinRetryCount(%d)
MgntLinkRetry(): scan is in progress.
MgntLinkRetry(): return FALSE for JoinRetryCount(%d) >= MAX_JOIN_RETRY_COUNT(%d)
MgntRoamRetry
MgntRoamRetry(): Roaming Type = %d, RoamingFailCount = %d (Limit = %d)
MgntLinkRequestReschedule
Dont scan beacuse RF is OFF.
MgntLinkRequestReschedule(): Under inactive ps mode, turn on RF and continue.
<=== MgntLinkRequestReschedule()
MgntLinkRequest
===> MgntLinkRequest()
<=== MgntLinkRequest(): Rf is in switching state.
<=== MgntLinkRequest(): RF is OFF.
<=== MgntLinkRequest(): scan in progress.
Active Scan
Passive Scan
MgntLinkRequest(): %s....
<=== MgntLinkRequest(): return TRUE.
MgntLinkStatusProcWhenRFIsOff
MgntLinkStatusProcWhenRFIsOff(): RF OFF => inidcate disconnect and no more roaming
MgntLinkStatusProcWhenRFIsOff(): ------- Keep DISCONNECTED ------- DisconnectedSlotCount(%d)
MgntLinkStatusProcWhenRFIsOff(): RF is OFF, mAssoc(%d), mIbss(%d), OpMode(%d), Regdot11networktype(%d)
MgntLinkStatusWatchdog
MgntLinkStatusWatchdog(): --- Become DISCONNECTED --- TotalRxBcnNum(%ld) TotalRxDataNum(%ld)
MgntLinkStatusWatchdog(): Infra. client => start roaming...
MgntLinkStatusWatchdog(): Infra. client RoamingFailCount(%d)
MgntLinkStatusWatchdog(): AdHoc mode => inidcate disconnect and no more roaming
MgntLinkStatusWatchdog(): +++++++ Keep CONNECTED +++++++ TotalRxBcnNum(%ld) TotalRxDataNum(%ld)
MgntLinkStatusWatchdog(): ------- Keep DISCONNECTED ------- DisconnectedSlotCount(%d)
MgntLinkStatusWatchdog(): mAssoc(%d), mIbss(%d), OpMode(%d), Regdot11networktype(%d)
MgntLinkStatusWatchdog():  RxUnicastOk(%ld) TxOk(%ld)
MgntLinkStatusWatchdog(): RxOk: %ld TxOk: %ld => bBusyTraffic: %d
MgntClearRejectedAsocAP
MgntClearRejectedAsocAP()...........
TcaCheckTimer
TcaCheckTimerCallback
===> TcaCheckTimerCallback()
TxThroughput: %ld KBps, RxThroughput: %ld KBps, TotalThroughput: %ld KBps
!pMgntInfo->bSupportTurboMode
pMgntInfo->bAutoTurboBy8186
no TCA in QoS mode
Not a infra-structure mode client
----- Turn off TCA for TotalThroughput: %ld KBps is not large enough, HighestOperaRate(%d).
+++++ Turn on TCA, CheckCnt(%ld), CheckInterval(%ld), NormalTotalThroughput: %ld KBps.
DeltaTotalThroughput(%ld) < 0 => 1. Update CheckInterval(%ld)
DeltaTotalThroughput(%ld) < 0 => 2. Update CheckInterval(%ld)
----- Turn off TCA for DeltaTotalThroughput(%ld) < 0, NormalTotalThroughput(%ld)
DeltaTotalThroughput: %ld > 0 => Keep turn on TCA
<=== TcaCheckTimerCallback()
===>PnPWakeUpJoinTimerCallback
<===PnPWakeUpJoinTimerCallback
PacketCheckIEValidity
PacketCheckIEValidity(): sMacHdrLng(%u) > packet.Length (%u)
PacketCheckIEValidity(): frame type: %u
PacketCheckIEValidity(): wrong subtype: %u
PacketCheckIEValidity(): not a sub type of frame that could have IEs, subtype: %u
PacketCheckIEValidity(): [malicious attack] not ok to read EID and Element Length
PacketCheckIEValidity(): [malicious attack] length of IE exceeds packet length
ComputeAckRate
ComputeAckRate(): unsupported rate %#02X !!!
OnTsmInterval
OnTsmInterval(): TSID: %d
OnTsmInterval(): GetTsmReport failed for TSID(%d)!!!
===== Traffic Stram Report =====
Queue Delay Avg: %04X
Queue Delay Histogram: %04X, %04X, %04X, %04X
Media Delay = %08lX
Packet Loss = %04X
Packet Count = %04X
Roaming Count = %02X
Roaming Delay = %02X
===== End of Traffic Stream Report =====
GetTsmReport
GetTsmReport(): counters for TISD(%d) is not valid!!!
GetTsmReport(): on TISD(%d) TsPacketCount(%ld)/PacketCount(%ld) => Percentange(%d)
GetTsmReport(): on TISD(%d) MediaDelay: %ld => %ld
GetTsmReport(): on TISD(%d) MediaDelayHistogram[%d]: %d => %d
GetTsmReport(): on TISD(%d) PacketLossCount: %ld => %d
GetTsmReport(): on TISD(%d) PacketCount: %d
SetTsmRequest
SetTsmRequest(): TSM_ACTION_START on TSID(%d)
SetTsmRequest(): TSM_ACTION_RESET on TSID(%d)
SetTsmRequest(): TSM_ACTION_STOP on TSID(%d)
SetTsmRequest(): unknown action(%d) on TSID(%d)
OnCcxTsmIE
- OnCcxTsmIe(): skip it for current CCX Version: %d < 3
- OnCcxTsmIE(): skip it for mAssoc(%d), mActingAsAp(%d)
OnCcxTsmIE(): Invaild length(%d) of TSM IE!!!
OnCcxTsmIE(): Invaild TSID(%d)!!!
OnCcxTsmIE(): TSID(%d) disable TSM State(%#X)-----
OnCcxTsmIE(): TSID(%d) enable TSM State(%#X)+++++
OnCcxTsmIE(): TSID(%d) State(%#X)!!!
DoBeaconRequest
+ DoBeaconRequest()
Start Passive Scanning......
Start Active Scanning......
DoBeaconRequest(): Send ProbeReq at channel %d, waitQueue(%d)
Start Beacon Table mode......
DoBeaconRequest(): Unknown ScanMode: %d !!!
- DoBeaconRequest()
GetBeaconReport
+ GetBeaconReport()
End Passive Scanning......
End Active Scanning......
End Beacon Table mode......
GetBeaconReport(): idx: %d, nBcnRptLen: %d, posRmRpts->Length: %d, overflow => discrad this BSS
GetBeaconReport(): unknown wireless mode: %d!
Measure Report of Beacon Signal Power = %d dBm
- GetBeaconReport()
GetCCXChannelLoadReport
+ GetCCXChannelLoadReport()
GetCCXChannelLoadReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
- GetCCXChannelLoadReport()
GetDot11kChannelLoadReport
+ GetDot11kChannelLoadReport()
GetDot11kChannelLoadReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetCCXNoiseHistogramReport
+ GetCCXNoiseHistogramReport()
GetCCXNoiseHistogramReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
- GetCCXNoiseHistogramReport()
GetDot11kNoiseHistogramReport
+ GetDot11kNoiseHistogramReport()
GetDot11kNoiseHistogramReport(): wMeasRptElementLen: %d, posRmRpts->Length: %d, overflow => discrad this report!
GetDot11kNoiseHistogramReport(): ANPI = %x
HandleRmRequests
+ HandleRmRequests()
HandleRmRequests(): MgntIsLinkInProgress!
HandleRmRequests(): pRmRequests->cbIEs==0 !!!
HandleRmRequests(): Cannot acquire sw channel spin lock!
HandleRmRequests(): Scan in progress!!! Wait 100ms...
- HandleRmRequests()
OnCcxRmRequestPacket
+ OnCcxRmRequestPacket()
- OnCcxRmRequestPacket(): skip it for bRegCcxRm(%d), bBssCcxRmEnable(%d), GET_CURR_CCX_VER(%d)
- OnCcxRmRequestPacket(): skip it for mAssoc(%d), mActingAsAp(%d)
- OnCcxRmRequestPacket(): skip it for busy traffic, MaxOffLineDur: %d TUs
- OnCcxRmRequestPacket(): skip it for bGoingOn == TRUE
- OnCcxRmRequestPacket()
DoFrameRequest
+ DoFrameRequest()
- DoFrameRequest()
GetFrameReport
+ GetFrameReport()
GetBeaconReport(): NumSta: %ld, posRmRpts->Length: %d, overflow => discrad this STA
GetFrameReport(): no frame received!
- GetFrameReport()
RmMonitorSignalStrength
RmMonitorSignalStrength(): New TA: %02X:%02X:%02X:%02X:%02X:%02X, rate(%d Mbps), RxPower(%d), AGC(%d) => %ld dBm
RmMonitorSignalStrength(): TA: %02X:%02X:%02X:%02X:%02X:%02X, rate(%d Mbps), RxPower(%d), AGC(%d) => %ld dBm
StopCcxTsm
StopCcxTsm(): TSID: %d
StopCcxTsm(): invalid TSID: %d!!!
StopCcxTsm(): invalid State: %d!!!
Cancel TsmTimer --------------
StartCcxTsm
StartCcxTsm(): TSID: %d, MeasurementInterval: %d (TU)
StartCcxTsm(): invalid TSID: %d!!!
StartCcxTsm(): invalid MeasurementInterval: %d TU!!!
StartCcxTsm(): MeasurementInterval(%d) => TimeOutTickNum(%d)
Set TsmTimer ++++++++++++++
ResetCcxTsmMechanism
ResetCcxTsmMechanism().....
TsmTimerCallback
TsmTimerCallback(): ..............
TsmTimerCallback(): TSM timer is stopped.....
HandleCCXRmRequests
HandleCCXRmRequests(): wait StartTme: %ld us
MeasurementToken: %d
MeasurementMode: 0x%02X
MeasurementType: %d
HandleCCXRmRequests(): ServingChnl: %d, switch to ReqChnl: %d
HandleCCXRmRequests(): RM_TYPE_BEACON
Next MeasurementToken: %d
Next MeasurementMode: 0x%02X
Next MeasurementType: %d
HandleCCXRmRequests(): RM_TYPE_CHANNEL_LOAD
HandleCCXRmRequests(): RM_TYPE_NOISE_HISTOGRAM
HandleCCXRmRequests(): RM_TYPE_FRAME
MeasurementType(%d) is not yet implemented!
HandleCCXRmRequests(): switch back to OriginalChannel: %d
HandleDot11kRmRequests
HandleDot11kRmRequests(): ======>
MreToken = %d, MreMode = %d, MreType = %d
HandleDot11kRmRequests(): ServingChnl: %d, switch to ReqChnl: %d
HandleDot11kRmRequests(): switch back to OriginalChannel: %d
HandleDot11kRmRequests(): <======
RmWorkitemCallback
+ RmWorkitemCallback()
- RmWorkitemCallback()
OnDot11kRmRequest
OnDot11kRmPacket(): Invalid length(%d) of frame
- OnDot11kRmRequest(): Reject it for bGoingOn == TRUE
OnDot11kRmRequest() ----->
OnDot11kRmRequest() <-----
RmSetChannelLoad
RmSetChannelLoad: Reject it invalid channel
RmSetChannelLoad: Reject it for bGoingOn == TRUE
RmQueryChannelLoad
RmQueryChannelLoad: Reject it for bGoingOn == TRUE
RmQueryChannelLoad: Reject it for pRmReports->bValid
RmQueryChannelLoad: Report IE length is invalid
RmQueryChannelLoad: EID is invalid
RmQueryChannelLoad: EID Len is invalid
RmQueryChannelLoad: Token is invalid
RmQueryChannelLoad: Report Mode is invalid
RmQueryChannelLoad: Rm Type is invalid
RmSetNoiseHistogram
RmSetNoiseHistogram: Reject it invalid channel
RmSetNoiseHistogram: Reject it for bGoingOn == TRUE
RmQueryNoiseHistogram
RmQueryNoiseHistogram: Reject it for bGoingOn == TRUE
RmQueryNoiseHistogram: IPI array size is not enough
RmQueryNoiseHistogram: Reject it for pRmReports->bValid
RmQueryNoiseHistogram: Report IE length is invalid
RmQueryNoiseHistogram: EID is invalid
RmQueryNoiseHistogram: EID Len is invalid
RmQueryNoiseHistogram: Token is invalid
RmQueryNoiseHistogram: Report Mode is invalid
RmQueryNoiseHistogram: Rm Type is invalid
HTDebugHTCapability
<Log HT Capability>. Called by %s
20/40MHz
Supported Channel Width = %s
Support Short GI for 20M = %s
Support Short GI for 40M = %s
Support TX STBC = %s
Max AMSDU Size = %s
Support CCK in 20/40 mode = %s
Max AMPDU Factor = %d
MPDU Density = %d
MCS Rate Set = [%x][%x][%x][%x][%x]
HTDebugHTInfo
<Log HT Information Element>. Called by %s
Primary channel = %d
Senondary channel =
Not Present
Upper channel
Reserved. Eooro!!!
Lower Channel
20Mhz
40Mhz
Recommended channel width = %s
Operation mode for protection = 
No Protection
HT non-member protection mode
Suggest to open protection
HT mixed mode
Basic MCS Rate Set = [%x][%x][%x][%x][%x]
IOT Broadcom PEER.
IOT Broadcom 40MHz.
IOT STA 20MHz.
IOT RSSI = %d
HTConstructCapability()
HTOnAssocRsp
<=== HTOnAssocRsp(): HT_DISABLE
HTOnAssocRsp(): call HTSetConnectBwMode HT_CAP=%04x HT_INFO=%04x
SwBwTimer
HTParsingHTCapElement
HTParsingHTCapElement(): HT Capability Element length is too long!
HTParsingHTCapElement()
HTParsingHTInfoElement
HTParsingHTInfoElement(): HT Information Element length is too long!
HTParsingHTInfoElement()
EID_HTCapability HTCapIE.Length=%d
EID_Vendor HTCapIE.Length=%d
HTResetSelfAndSavePeerSetting() set bIOTAction for HT_IOT_ACT_WA_IOT_Broadcom
HTUseDefaultSettingFromDefault
[DFS]use default port's,  Default Port connect
HTSetConnectBwMode
===>HTSetConnectBwMode()
BW=%d,Offset=%d
Def_BW=%d,Def_Offset=%d,Ext_BW=%d,Ext_Offset=%d.
====> Chang to HT_CHANNEL_WIDTH_20 
HTSetConnectBwModeCallback
===>HTSetConnectBwModeCallback()
 HTSetConnectBwModeCallback = HT_CHANNEL_WIDTH_20_40
 HTSetConnectBwModeCallback = HT_CHANNEL_WIDTH_20
HTSetBwModeByBeacon
<=== HTSetBwModeByBeacon(): HT_DISABLE
SendBeaconFrame
SendBeaconFrame(): Tx rate = 6 mbps!
SendBeaconFrame(): Tx rate = 1 mbps!
SendProbeReq
SendProbeReq(): Tx rate = %d
SendProbeReqEx
SendProbeReqEx(): Tx rate = %d
SendAuthenticatePacket
===> SendAuthenticatePacket()
<=== SendAuthenticatePacket()
SendAssociateReq
===> SendAssociateReq()
<=== SendAssociateReq()
SendReassociateReq
===> SendReassociateReq()
<=== SendReassociateReq()
SendAssociateRsp
===> SendAssociateRsp()
<=== SendAssociateRsp()
SendDeauthentication
===> SendDeauthentication()
<=== SendDeauthentication()
SendDisassociation
===> SendDisassociation()
<=== SendDisassociation()
SendProbeRsp
==SendProbeRsp(): Tx rate = %d
SendMagicPacket
SendMagicPacket(): StaAddr: %02X-%02X-%02X-%02X-%02X-%02X
SendCcxRmReport
+ SendCcxRmReport()
- SendCcxRmReport()
SendDot11kRmReport
ConstructCcxLinkTestReply
ConstructCcxLinkTestReply(): This packet FrameNo(%d), RetryCnt(%d), RxPower(%d)
SendQosAddTs
===> SendQosAddTs()
<=== SendQosAddTs()
SendQosDelTs
===> SendQosDelTs()
<=== SendQosDelTs()
RetrieveSegmentDataFromTCB
RetrieveSegmentDataFromTCB(): some data can not be retrived
EAPOL TranslateHeader(), pTcb->DataRate = 0x%x
TranslateHeader
[CKIP] TranslateHeader(): CMIC snap case!
Translate Header pTcb->priority = %d
DHCP TranslateHeader(), pTcb->DataRate = 0x%x
ARP TranslateHeader(), pTcb->DataRate = 0x%x
TranslateHeader QoS header
FillPartialHeader CurrentQosMode=%ld
RT_PROTOCOL_802_3 PreTransmitTCB
Data from upper layer  FillPartialHeader
PreTransmitTCB
PreTransmitTCB(): Packet were handled
PreTransmitTCB(): Enough packets in AMDSU Aggr queue, pass it down!
===> TKIP MFP Calculate MIC 
PreTransmitTCB(): RF is off, returnTCB!
PreTransmitTCB(): there is already packets queued in wait queue(%d)
TransmitTcb fail
AMSDU_in_Tx_Interrupt
[0608]TxHandleInterup Call PreTransMit.
A-MSDU:BufferCount for this TCB = %d, Packet# for this TCB = %d
TxHandleInterrupt
Empty
Avaliable
Adapter->nBufInTxDesc: %d, Aggregation Queue[%d] is [%s]
ReturnTCB
ReturnTCB(): pTcb==NULL !!! 
WaitTxBusyQueueComplete
WaitTxBusyQueueComplete(): %d times TcbBusyQueue[%d] !=0 !
WaitTxBusyQueueComplete(): %d times TcbBusyQueue[%d] != 0 !!!
SelectSupportedRatesElement
Note: Length of pSuppRates is 0 ==> Adjust it!!
ConstructBeaconFrame
Constructure Beacon Mediaconnect %d  dot11CurrentChannel %d, RegDot11CurrentChannel %d
Support MOde=%x pMgntInfo->mIbss=%d pMgntInfo->dot11CurrentWirelessMode=%x
ConstructAuthenticatePacket
===> ConstructAuthenticatePacket()
<=== ConstructAuthenticatePacket()
ConstructAssociateReq
===> ConstructAssociateReq()
ConstructAssociateReq(): Trying to associate to an 802.11n HT AP
[AutoTurbo] ConstructAssociateReq(): Make Realtek IE!bSupportTurboMode=%d, bAutoTurboBy8186=%d
ConstructAssociateReq(): CCX_CAC_ConstructVoiceTspec...
ConstructAssociateReq(): CCX_CAC_ConstructSignalTspec...
<=== ConstructAssociateReq()
ConstructReAssociateReq
===> ConstructReAssociateReq()
ConstructReAssociateReq(): Append CCKM Req IE
[AutoTurbo] ConstructReAssociateReq(): Make Realtek IE!bSupportTurboMode=%d, bAutoTurboBy8186=%d
<=== ConstructReAssociateReq()
ConstructCcxRmReport
+ ConstructCcxRmReport()
IAPP ID & Length: 0x%04X
- ConstructCcxRmReport()
ConstructDot11kRmReport
+ ConstructDot11kRmReport()
- ConstructDot11kRmReport()
AppendAdditionalIEs
AppendAdditionalIEs(): Length = %d
OnMimoPs
OnMimoPs(): Invalid length(%d) of frame
Seq %d == NumRxWEPUndecryptableBroadcast %I64d, NumRxWEPUndecryptableMulticast %I64d, NumRxWEPUndecryptableUnicast  %I64d
ParseSubframe(): A-MSDU subframe parse error!! pRfd->nTotalSubframe : %d
ParseSubframe(): A-MSDU subframe parse error!! Subframe Length: %d
nRemain_Length is %d and nSubframe_Length is : %d
The Packet SeqNum is %d
ParseSubframe
ParseSubframe(): Too many Subframes! Packets dropped!
ProcessReceivedPacket
As AP
As STA
==>ProcessReceivedPacket,Now is %s Adapt,%s
ProcessReceivedPacket(): Drop this packet from the sec status (%d)
====> 2-way EAPOL Packet !!
=======> Stop Rx Reorder !! 
DefragPacket
DefragPacket(): Number of RFDs (%ld) is lower than threshold (%ld).
ShowBlock
%s[%d] 
%02X%s
ShowPacket
Total packet length = %4ld
[Encrypted]
[Decrypted]
CBC IV in: 
CBC IV out:
 [hdr]
After xor: 
After AES: 
MIC tag  : 
[Input (%d cleartext header octets)]
CTR Start: 
CTR[%04X]: 
CTR[MIC ]: 
CTR[%04x]: 
GetWOLWakeUpPattern
GetWOLWakeUpPattern(): Return by  IPv4/IPv6 TCP SYN pattern.
GetWOLWakeUpPattern(): Return and set HW to wake up for any packet which DA is our MAC addr.
GetWOLWakeUpPattern(): CrcRemainder = %x
TsAddBaProcess
TsAddBaProcess(): ADDBA Req is started!! 
TxTsCommonInfo_SetupTimer
TxTsCommonInfo_InactTimer
TxTsAddBaTimer
TxPendingBARecordTimer
TxAdmittedBARecordTimer
RxTsCommonInfo_SetupTimer
RxTsCommonInfo_InactTimer
RxAdmittedBARecordTimer
RxPktPendingTimer
GetTs
Broad or multicast return
SearchAdmitTRStream get ppTS
bAddNewTs == FALSE
bAddNewTs == TRUE
TsStartAddBaProcess
TsStartAddBaProcess(): Delayed Start ADDBA after 60 sec!!
TsStartAddBaProcess(): Immediately Start ADDBA now!!
RxTSIndicate
RxTSIndicate(): No TS!! Skip the check!!
Authenticator_OnEAPOLKeyRecvd
===> Authenticator_OnEAPOLKeyRecvd()
unknow pairwise EAPOL-key: info=0x%X-0x%X
Recvd 4-way message 2
Recvd 4-way message 4
pEntry->perSTAKeyInfo.RxIV = 0x%16I64x
Recvd 2-way message 2
Authenticator_OnEAPOLKeyRecvd(): Unexpected case: PrState=%d, GrState=%d, msg_type=%d
Authenticator_OnEAPOLKeyRecvd(): Unexpected State!!
--- TimeoutCounter:%d, PairwiseKeyState:%d, GroupKeyState:%d ---
<=== Authenticator_OnEAPOLKeyRecvd()
EAPOLkeyGetRSNIE
PacketGetRSNIE(): Length=%d
KeyMgntTimeout
[Warning!!] KeyMgntTimeout(): STA mode
[STA:%d] %02X-%02X-%02X-%02X-%02X-%02X, MicErrorCnt=%d, WEPErrorCnt=%d
KeyMgntTimeout(): Retry! [TimeSlot:%I64d, TimeoutCtr:%d]
KeyMgntTimeout(): equal TimeSlot. Not to retry.
KeyMgntTimeout: AsocNum=%d, CurrentTimeSlot=%I64d
Authenticator_OnTimeoutCountExceeded
Authenticator_OnTimeoutCountExceeded!
Authenticator_OnTimeoutCountExceeded(): Unexpected State!!
--- PairwiseKeyState:%d, GroupKeyState:%d ---
Authenticator_StateDISCONNECT
Authenticator_StateDISCONNECT()
[Warning] current: STA mode, return.
Authenticator_StateDISCONNECT()  
Authenticator_StateDISCONNECTED
Authenticator_StateDISCONNECTED()
Authenticator_StateINITIALIZE
===> Authenticator_StateINITIALIZE()
<=== Authenticator_StateINITIALIZE()
Authenticator_StateAUTHENTICATION
Authenticator_StateAUTHENTICATION2
===> Authenticator_StateAUTHENTICATION2()
<=== Authenticator_StateAUTHENTICATION2()
Authenticator_StatePTKSTART
===> Authenticator_StatePTKSTART()
Send 4-way message 1
 KeyReplayCounter = %08I64x 
<=== Authenticator_StatePTKSTART()
Authenticator_StatePTKINITNEGOTIATING
===> Authenticator_StatePTKINITNEGOTIATING()
Send 4-way message 3
<=== Authenticator_StatePTKINITNEGOTIATING()
Authenticator_StatePTKINITDONE
===> Authenticator_StatePTKINITDONE()
<=== Authenticator_StatePTKINITDONE()
Authenticator_StateINTEGRITYFAILURE
IntegrityFail(): AP mode, TimeSlot_lastIntegrityFailed=%I64d
IntegrityFail(): AP mode, CurrentTimeSlot             =%I64d
IntegrityFail(): AP mode, disconnects all associated STAs
Authenticator_StateREKEYNEGOTIATING
===> Authenticator_StateREKEYNEGOTIATING()
Send 2-way message 1
<=== Authenticator_StateREKEYNEGOTIATING()
Authenticator_StateREKEYESTABLISHED
===> Authenticator_StateREKEYESTABLISHED()
<=== Authenticator_StateREKEYESTABLISHED()
Authenticator_StateKEYERROR
===> Authenticator_StateKEYERROR()
<=== Authenticator_StateKEYERROR()
12345678123456781234567812345678
Authenticator_GlobalReset
===> Authenticator_GlobalReset()
<=== Authenticator_GlobalReset()
DozeWorkItemCallback
DozeWorkItemCallback() ---------> 
DozeWorkItemCallback(): marked as awake state again.
LPS Doze should be return beacuse it is in PNP set power progress.
DozeWorkItemCallback() <--------- 
AwakeTimerCallback awake 2ns later!!!
PlatformScheduleWorkItem AwakeWorkItem
AwakeWorkItemCallback
AwakeWorkItemCallback() ---------> 
AwakeWorkItemCallback() <--------- 
InactivePsWorkItemCallback
=====>InactivePsWorkItemCallback() 
InactivePsWorkItemCallback(): Return and do not turn RF off beacuse DriverIsGoingToUnload.
InactivePsWorkItemCallback(): Set RF to %s.
<====InactivePsWorkItemCallback() 
InactivePsTimerCallback
====>InactivePsTimerCallback()  bSwRfProcessing %d  eInactivePowerState %d  ReturnPoint %d
<====InactivePsTimerCallback()
LPS_OnBeacon_BSS
LPS_OnBeacon_BSS(): -SeqNum=0x%x (%d)
LPS_OnBeacon_BSS(): bBufOurFrame(%d), bBufMcstFrame(%d), AID (%d)
LPS_OnBeacon_BSS(): notify AP we are awaked ++++++++++ Send PS-Poll
LPS_OnBeacon_BSS(): notify AP we are awaked ++++++++++ SendNullFunctionData
LPS_OnBeacon_BSS(): no packets to send
LPS_DozeStart
LPS_DozeStart(): marked as dozed state
LPS_DozeComplete
LPS_DozeComplete(): Starts to turn RF off ----------
LPS_DozeComplete(): notify AP we are goinging to doze ----------
LPS_DozeComplete(): RF is turn sleep ----------
LPS_DozeComplete(): shecule a timer to wake up in %d ms....
LPS_DozeComplete(): Wait too long! Skip ....
LPS_DozeComplete(): TODO............
LPS_AwakeComplete
LPS_AwakeComplete(): RF is turn on ++++++++++
WMMPS_DozeStart
WMMPS_DozeStart(): marked as dozed state
WMMPS_DozeComplete
WMMPS_DozeComplete(): RF is turn off ----------
WMMPS_DozeComplete(): shecule a timer to wake up in %d ms....
WMMPS_DozeComplete(): TODO............
WMMPS_AwakeComplete
WMMPS_AwakeComplete(): RF is turn on ++++++++++
WMMPS_AwakeComplete(): >>>>>>>>>> Enter APSD service period >>>>>>>>>>
GetPS_Doze
Delay enter LPS for DHCP and ARP packets
IPSEnter
IPSEnter(): Turn off RF.
IPSLeave
IPSLeave(): pPSC->bInactivePs %d , bSwRfProcessing  %d  RfOffReason %x
IPSLeave(): rtState %d.
IPSLeave(): Turn on RF.
IPSEnable
IPSEnable(): Enable IPS mode
IPSEnable(): Do nothing by Dbg Control disable Power save
IPSDisable
IPSDisable(): Disable IPS mode
IPSReturn
IPSReturn(): Return to previous IPS mode
LeisurePSEnter
LeisurePSEnter()...
pPSC->bLeisurePs = %d, pMgntInfo->dot11PowerSaveMode = %d
LeisurePSEnter(), returned by Dbg Control disable Power save
LeisurePSEnter(): Enter 802.11 power save mode...
LeisurePSLeave
LeisurePSLeave()...
LeisurePSLeave(): Busy Traffic , Leave 802.11 power save..
GetFwLPS_Doze
Delay enter Fw LPS for DHCP, ARP, or EAPOL exchanging state.
szEepromFile(): read %s ok
Line-%ld String =%s
Addr-%ld = %lx
szEepromFile(): Fail read%s
eeprom_ParsingMap
eeprom_ParsingMap(): Invalid IN args! szStr: %p, pu4bVal: %p, pu4bMove: %p
 "$&(*,.02468:<>@BDFHJLNPRTVdhlptx|
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
;9?=3175+)/-#!'%[Y_]SQWUKIOMCAGE{y
}sqwukiomcage
0365<?:9(+.-$'"!`cfelojix{~}twrqPSVU\_ZYHKNMDGBA
[X]^WTQRC@EFOLIJkhmngdabspuv
|yz;8=>7412# %&/,)*
$-6?HAZSle~w
szahW^EL
dmR[@I>7,%
MD_Vi`{r
|ungXQJC4=&/
GNU\cjqx
.'<5BKPYfot}
ypkb]TOF
,':1XSNEt
{pmfW\AJ#(5>
FMP[ja|w
ensxIB_T
GLQZk`}v
doryHC^U
-&;0YRODu~ch
zqlgV]@K")4?
49.#her
kfq|_REH
7:- m`wzYTCN
2?(%nctyZW@M
>3$)boxuV[LAal{vUXOB
gj}pS^ID
85"/di~sP]JG
86$*p~lbHFTZ
KEWYs}oa
MCQ_u{ig=3!/
vxjdN@R\
AO]Sywek1?-#
ztfhBL^P
4:(&|r`nDJXV79+%
=j&&LZ66lA??~
S11b?
e##F^
t,,X.
M;;va
}{))R>
gK99r
!H88p
c!!B0
f""D~**T
V22dN::t
o%%Jr..\$
x((Pz
)w--Z
T00`P
&&Lj66lZ??~A
O44h\
s11bS
R##Fe
&''Ni
>//^q
,  @`
99rKJJ
u!!Bc
==zGdd
""Df**T~
;22dV::tN
$$Hl\\
C77nYmm
%%Jo..\r
55j_WW
g+V}+
&Lj&6lZ6?~A?
R;vM;
9rK9J
M3fU3
P<xD<
~=zG=d
"Df"*T~*
2dV2:tN:
$Hl$\
7nY7m
x%Jo%.\r.
p>|B>
a5j_5W
U(Px(
ggV}++
Lj&&lZ66~A??
h\44Q
bS11*?
Xt,,4.
RRvM;;
MMfU33
PPxD<<%
Bc!! 0
~~zG==
Df""T~**;
dV22tN::
xxJo%%\r..8$
pp|B>>q
aaj_55
UUPx((
cccc||||wwww{{{{
kkkkoooo
gggg++++
YYYYGGGG
&&&&6666????
nnnnZZZZ
RRRR;;;;
[[[[jjjj
9999JJJJLLLLXXXX
CCCCMMMM3333
PPPP<<<<
~~~~====dddd]]]]
ssss````
""""****
2222::::
$$$$\\\\
7777mmmm
llllVVVV
eeeezzzz
xxxx%%%%....
pppp>>>>
ffffHHHH
aaaa5555WWWW
UUUU((((
BBBBhhhhAAAA
QSeA~
!tX)i
='9-6d
aiKwZ
;fD4~
_jbF~T
11#?*0
,4$8_@
t\lHBW
QPeA~S
0 Umv
SbEwd
\h!T[
.6$:g
>4$8,@
p\lHtW
`3SbE
+HpXhE
pZlNr
T6$:.
 wZiK
!tI)i
`3QbE
T[$:.6
;f[4~
_TbF~
h8,4$
2Ht\l
00006666
CCCCDDDD
TTTT{{{{
####====
ffff((((
vvvv[[[[
IIIImmmm
%%%%rrrr
]]]]eeee
llllppppHHHHPPPP
FFFFWWWW
kkkk::::
AAAAOOOOgggg
tttt""""
nnnnGGGG
VVVV>>>>KKKK
yyyy    
YYYY''''
____````QQQQ
;;;;MMMM
ccccUUUU!!!!
=jLZlA~
tX.4-6
oJr\$8
LjlZ~A
sbS*?
Xt4.6-
uBc 0
DfT~;
;dVtN
Jo\r8$W
=jLZlA~
tX.4-6
oJr\$8
EFUSE_Write1Byte
Addr=%x Data =%x
ReadEFuse
ReadEFuse(): Invalid offset(%#x) with read bytes(%#x)!!
Addr=%d
Offset-%d Worden=%x
EFUSE_ShadowUpdateChk
EFUSE_ShadowUpdateChk(): TotalBytes(%#x), HdrNum(%#x), WordsNeed(%#x), EfuseUsed(%d)
EFUSE_ShadowUpdate
--->EFUSE_ShadowUpdate()
<---EFUSE_ShadowUpdate(): Efuse out of capacity!!
Section(%#x) Addr[%x] %x update to %x, Word_En=%02x
EFUSE_ShadowUpdate(): PG section(%#x) fail!!
<---EFUSE_ShadowUpdate()
efuse_OneByteWrite
Addr = %x Data=%x
efuse_WriteAllMap
Addr=%d size=%d Word_En=%02x
efuse_PgPacketWrite error 
EFUSE Power ON
EFUSE PG_STATE_HEADER
EFUSE PG_STATE_HEADER-1
EFUSE PG_STATE_HEADER-2
EFUSE PG_STATE_DATA
EFUSE PG_STATE_HEADER-3
efuse_PgPacketWrite
efuse_PgPacketWrite(): efuse_addr(%#x) Out of size!!
efuse_WordEnableDataWrite
word_en = %x efuse_addr=%x
efuse_ParsingMap
CCX_SSIDL_ConstructRSNIE
pSSIDInfo ExtenCapab : %x 
pSSIDInfo Capability : %02x %02x %02x %02x 
pSSIDInfo SSIDLen : %x 
CCX_Initialize
==> CCX_Initialize()
<== CCX_Initialize()
CCX_OnSetupJoinInfraInfo
CCX_OnSetupJoinInfraInfo()
CCX_OnSetupJoinInfraInfo(): bCkipSupported(%d)
CCX_OnSetupJoinInfraInfo(): bBssCcxRmEnable(%d), CcxRmState: %02X %02X
CCX_OnSetupJoinInfraInfo(): CurrCcxVerNumber(%d), BssCcxVerNumber(%d)
CCX_OnBssReset
CCX_OnBssReset()
CCX_GetPacketType
CCX_GetPacketType(): posMpdu->Length: %d, invalid IappLen: %#X!!!
CCX_ParsePacket
CCX_IndicateIappPacket(): CPT_RM_REQUEST
CCX_IndicateIappPacket(): CPT_NEIGHBOR_LIST_RESPONSE
CCX_IndicateIappPacket(): CPT_DIRECT_ROAM
CPT_LINK_TEST_REQUEST
CPT_EVENT_LOG_REQUEST
CPT_EVENT_DIAG_CHNL_REQUEST
CPT_EVENT_DIAG_CLIENT_RPT_REQ
CCX_OnNeighborListResponse
CCX_OnNeighborListResponse(): AdaptiveScanThresh = %d, RoamHystersis = %d
CCX_UpdateNeighborList
CCX_UpdateNeighborList(): hNeighborTable is full
CCX_OnLinkTestRequest
CCX_OnLinkTestRequest(): set bSendingLtReply +++++++ 
CCX_OnLinkTestRequest() => CCX_HandleLinkTestRequest()
CCX_OnLinkTestRequest(): add the link test request to queue.
CCX_HandleLinkTestRequest
CCX_HandleLinkTestRequest(): No last reply retry count available for FrameNumber(%#X)!!! pRetry(%p)!!!
CCX_FindLinkTestReplyByFrameNumber
CCX_FindLinkTestReplyByFrameNumber(): entry %ld matched to FrameNumber(%#X), RetryCnt(%d)
CCX_FindLinkTestReplyByFrameNumber(): No entry matched to SeqNo(%d), pCcxInfo->LtReplyRetrySetSize(%ld)
CCX_AddLinkTestRequestWaitQueue
CCX_AddLinkTestRequestWaitQueue(): queue is full, oldest link request will be dropped, SC(%#X)!!!
CCX_OnAssocOk
CCX_OnAssocOk()
MlmeAssociateConfirm(): Flag=0x%X, bIsMIC=%d, bIsKP=%d
CCX_OnSetupJoinInfraInfo(): Update Tx Power dbm(%ld)
CCX_OnRoamOk
CCX_OnRoamOk()
CCX_OnRoamOk(): roaming is successfull, LastRoamDelay(%d) ms
CCX_HandleLinkTestReplySentComplete
CCX_HandleLinkTestReplySentComplete(): Update RetryCnt(%d) for SeqNo(%d)
CCX_HandleLinkTestReplySentComplete(): reset bSendingLtReply ------- 
CCX_HandleLinkTestReplySentComplete() => CCX_HandleLinkTestRequest()
CCX_UpdateLinkTestReply
CCX_UpdateLinkTestReply(): FrameNumber(%#X), SeqNo(%#X), RetryCnt(%d)
CCX_FindLinkTestReplyBySeqNo
CCX_FindLinkTestReplyBySeqNo(): entry %ld matched to SeqNo(%#X), RetryCnt(%d)
CCX_FindLinkTestReplyBySeqNo(): No entry matched to SeqNo(%d), pCcxInfo->LtReplyRetrySetSize(%ld)
CCX_AddLinkTestReply
CCX_AddLinkTestReplySet(): Seq: %#X, FrameNumber: %#X => IdxToAdd: %ld, SetSize: %ld
CCX_CheckLinkTestRequetQueued
CCX_CheckLinkTestRequetQueued(): link test reply stuck!!! LtReqQueueCheckCount(%d)
CCX_CheckLinkTestRequetQueued(): link test reply stuck!!! Reaches MAX(%d)! CCX_ResetLinkTestReplySet()--->!!!
CCX_OnRoamFailed
CCX_OnRoamFailed()
CCX_OnScanComplete
CCX_OnScanComplete()
CCX_OnScanComplete(): bTspecRejected(%d)
CCX_OnScanComplete(): RecvSignalPower(%ld), LowestBssPowerThreshold(%ld)
CCX_OnScanComplete(): NO better BSS to roam.
CCX_OnDirectRoam
CCX_OnDirectRoam(): No BSS found
CCX_OnLinkStatusWatchdog
CCX_OnLinkStatusWatchdog(): CCX Keep Alive for interval %ds
CCX_OnLinkStatusWatchdog(): In fake rx signal mode, RxSignalPower = %ld
CCX_OnLinkStatusWatchdog(): RecvSignalPower(%d) RetryRatio(%d), AdaptiveScanThresh = %d, AdaptiveScanCheckCounter = %d
CCX_OnLinkStatusWatchdog(): RecvSignalPower(%ld),  AdaptiveScanThresh(%ld), LowestBssPowerThreshold(%ld), CurRetryRatio(%d) > RetryRatioLimit(%d)
CCX_OnLinkStatusWatchdog(): no BSS is selected => scan to roam, pRtBss(%p)
CCX_SSIDL_ConstructBSS
 ===>ID of IE = %02x  
 ===>Length of IE = %02x  
 ===>IELen = %02x  
====>WPA RSN in SSIDL 
====>WPA2 RSN in SSIDL 
 Exten BssDec Cap  =  %04x
CCXGetSSIDLToBssList
CCXGetSSIDLToBssList(): ERROR! Not enough bssdesc entry in pMgntInfo->bssDesc(%d)!
CCX_CallAdmissionControl
CCX_CallAdmissionControl(): Drop packet for roaming or rejected call
CCX_CallAdmissionControl(): Drop packet for invalid TSID
CCX_CallAdmissionControl(): Drop packet for invalid TS
CCX_CallAdmissionControl(): Queue packet for establishing TS
CCX_CAC_AddTs
CCX_CAC_AddTs(), TSID = %d
CCX_CAC_DelTs
CCX_CAC_DelTs(): TSID = %d
SetCCXAssocInfoTimerCallback
====> SetCCXAssocInfoCallback
<==== SetCCXAssocInfoCallback
CCX_Construct_DiagChnl_AssocReq
===> CCX_Construct_DiagChnl_AssocReq()
QosInitializeSTA
QosInitializeSTA(): pStaQos->CurrentQosMode = %ld
QosParsingQoSElement
QosParsingWMMElement(): WMM Element length is too long!
[APSD] qosinfo=%x
QosSetLegacyWMMParamWithHT
[WMM] QosSetLegacyWMMParamWithHT(): AP bdQoSMode=%lx
QosOnAssocRsp
===> QosOnAssocRsp()
<=== QosOnAssocRsp(): QOS_DISABLE
<=== QosOnAssocRsp(): No input frame!!
<=== QosOnAssocRsp()
QosOnBeaconUpdateParameter
QosOnBeaconUpdateParameter(): Update WMMPE
QoS Field=%04x
This is not a QoS data Que=%d
QosDataCheck
QosDataCheck(): [Warning] Mcst/Bcst Qos Data!!
QosDataCheck(): [Warning] Recvd Qos Data in QOS_DISABLE mode!
QosParsingDebug_BssDesc
-----------------------------------------
===> QosParsingDebug_BssDesc()
<=== QosParsingDebug_BssDesc()
QosParsingDebug_STA
===> QosParsingDebug_STA()
QosParsingDebug_STA(): CurrentQosMode is %ld
<=== QosParsingDebug_STA(): QOS_DISABLE.
--------------- WMM Information Element Content ---------------
--------------- WMM Parameter Element Content ----------------
------------------------------------------------------------
<=== QosParsingDebug_STA()
QosParsingDebug_ParaElement
[Warning] QosParsingDebug_ParaElement(): pWMMParaEle is NULL!return!
OUI: %02X- %02X- %02X
OUI Type: 0x%02X
OUI sub Type: 0x%02X
Version: 0x%02X
QosInfo: 0x%02X
[ AC %ld ]
QosParsingDebug_AcParam
[Warning] QosParsingDebug_AcParam(): pAcParam is NULL!return!
[0x%08lX]
   - AIFSN(4bit)=0x%X
   - ACM(1bit)=0x%X
       - ACI(2bit)=0x%X
       - ECWmin(4bit)=0x%X
       - ECWmax(4bit)=0x%X
     TXOPLimit = 0x%04X
QosInitTs
========================================
QosInitTs(): pTs(%p), TSID(%d)
QosTsHash
QosTsHash() result: %d
QosAddTsTimerCallback
QosAddTsTimerCallback(): ADDTS Timeout!
QosRecvTsrsIE
QosRecvTsrsIE(): returned NPR is not one we requested
QosIncAdmittedTime
QosIncAdmittedTime(): ADDTS: AC(%ld) AdmitTime(%I64d) MediumTime(%d)
QosDecAdmittedTime
QosDecAdmittedTime(): DELTS: AC(%ld) AdmitTime(%I64d) MediumTime(%d)
QosSetNPR
QosSetNPR(): Invalid data rate to set!
QosSetNPR(): Invalid normal phy rate!
QosAdmissionControl
QosAdmissionControl(): Drop packet for invalid TSID
QosAdmissionControl(): Queue packet for establishing TS
QosCalcUsedTimeAndAdmitPacket
QosCalcUsedTimeAndAdmitPacket(): Used time > Medium time
OnAddTsReq
OnAddTsReq(): Invalid length(%d) of frame
OnAddTsRsp
OnAddTsRsp(): Invalid length(%d) of frame
===> OnAddTsRsp(): StatusCode(%d)
OnAddTsRsp(): ADDTS failed, try to roaming...
OnDelTs
OnDelTs(): Invalid length(%d) of frame
Dot11d_Reset
Dot11d_Reset()
Dot11d_UpdateCountryIe
Dot11d_UpdateCountryIe(): Invalid country IE, skip it........
Dot11d_UpdateCountryIe(): Invalid channel list length, skip it........
RtActChannelList
RtActChannelList(): <=====RT_CHNL_LIST_ACTION_RESET
RtActChannelList(): <=====RT_CHNL_LIST_ACTION_CONSTRUCT
RtActChannelList(): <=====RT_CHNL_LIST_ACTION_CONSTRUCT_SCAN_LIST
RtActChannelList(): NO RT_CHNL_LIST_ACTION!!!
RtCalcScanPeriod
channel %d STAs %d Period %d
AllocDrvLogMemory
AllocDrvLogMemory(): failed to allocate DRV_LOG_POOLS_HANDLE!!!
AllocDrvLogMemory(): %p is allocated for DRV_LOG_POOLS_HANDLE
AllocDrvLogMemory(): failed driver log pool %ld!!!
AllocDrvLogMemory(): %p is allocated for driver log pool %ld
FreeDrvLogMemory
FreeDrvLogMemory(): DRV_LOG_POOLS_HANDLE is NULL!
FreeDrvLogMemory(): free %p, log pool %ld.
FreeDrvLogMemory(): free DRV_LOG_POOLS_HANDLE: %p
WMM_DelTs
WMM_AddTsRsp
WMM_AddTsReq
HT_MimoPS
RM_RmRequest
Public_BssCoexist
BA_DelBa
BA_AddBaRsp
BA_AddBaReq
OnBeacon_Join
OnBeacon_Join(): channel  = %d
OnBeacon_Join(): Unknown OP mode
<=== OnBeacon_Join()
OnBeacon_Bss
OnBeacon_Bss(): [RT_Cap] RealtekCap=0x%X: TurboMode=%d, DisableTurbo=%d, Reserved=%d
OnBeacon_Bss(): Auto Turbo Mode by 8186.
OnBeacon_Bss():bEnterTurbo = %d, pTurboCa->bEnabled = %d
OnBeacon_Bss(): Enter Turbo Mode by 8186.
OnBeacon_Ibss
=======> OnBeacon_Ibss!
OnBeacon_Ibss(): ERROR! No bssdesc entry.
OnBeacon_Ibss(): create new BssDesc at ch %d, bss index:%d
OnBeacon_Ibss(): create new BssDesc is %d HT mode
OnBeacon_Ibss() SSID matched but BSSID mismatched.
 OnBeacon_Ibss() Merge two IBSSs. 
OnBeacon
OnBeacon!!!
OnAuth_even
Mismatch auth_alg: %#X
Mismatch auth_alg
OnAssocRsp
OnAssocRsp(): STATE_Wait_Asoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnAssocRsp(): STATE_Wait_Reasoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnAssocRsp(): STATE_Asoc_Idle => RspStatusCode: %d, RspAssociationID: %d
OnReAssocRsp
OnReAssocRsp(): STATE_Wait_Reasoc_Response => RspStatusCode: %d, RspAssociationID: %d
OnReAssocRsp(): STATE_Asoc_Idle
OnDisassoc
OnDisassoc(): packet too short(%d) < (needed = %d)!
OnDisassoc in STA mode (mAssoc%d, mIbss:%d)
OnDisassoc in STA mode with WRONG disassoc reason %x
OnDisassoc(): ReasonCode = %X
OnDisassoc():======>CCKM clear key...
OnDeauth
OnDeauth(): packet too short(%d) < (needed = %d)!
OnDeauth in IBSS receive duplicate deauth 
OnDeauth() reason %d
OnDeauth():======>CCKM clear key...
OnProbeReq
=======> OnProbeReq!
OnCls2err
 ==> OnCls2err()
OnCls2err(): Cannot find the STA in the table!!! drop it.
 <== OnCls2err()
OnCls3err
 ==> OnCls3err()
OnCls3err(): Cannot find the STA in the table!!! drop it.
 <== OnCls3err()
OnAction
OnAction(): %s =====>
Mgnt_Indicate
auth_even
auth_odd
disassoc
deauth
Pairwise key expansion
DBG_ConsoleInitialize
DBG_ConsoleInitialize <==
RateChangeTimer
Enter-%d=%I64d
Exit-%d=%I64d
Delta-%d=%I64d
MAX-%d=%I64d
MIN-%d=%I64d
DBG_Verify_Console
TEST CONFIG INFO
QUE RANGE [%d]-[%d]
RATE      [%d]-[%d]
TX PKT NUM    [%ld]
TX PKT LEN    [%d]
Fail to dbg_SendSpecificPacket!!
DBG_Display_Tx_Data
Current Data Index=%ld
Index=%ld
[%02x]    
DBG_RateChangeCallBack
RA_IDX=%d Tx_RA=%x
DBG_CheckRfdAddr
DMA write address is not matched
Illegal pkt length=%d
IdleTcb[%ld] IdleRfd[%ld] BusyRfd=[%ld]/[%ld] LBufIdle[%ld] LFBuf[%ld]
TX_DESC [%d][%d][%d][%d][%d][%d][%d][%d][%d] RX_DESC [%d][%d]
Supplicant_OnEAPOL
===> MAC_OnEAPOL()
MAC_OnEAPOL(): PacketLength=%d
MAC_OnEAPOL(): EAPOL packet with unknown type.
<=== MAC_OnEAPOL()
Supplicant_OnEAPOLKeyRecvd
===> MAC_OnEAPOLKeyRecvd()
RtAllocateHashTable
RtAllocateHashTable(): Capacity(%d), NumValuesAlloc(%ld), ValueSize(%d)
RtAllocateHashTable(): table: %p size: %ld
RtAllocateHashTable(): pValueBuf: %p size: %ld
RtAllocateHashTable(): pKeysBuf: %p size: %ld
RtFreeHashTable
RtFreeHashTable(): pKeysBuf: %p, KeysBufSize: %ld
RtFreeHashTable(): pValuesBuf: %p, ValuesBufSize: %ld
RtFreeHashTable(): hHashTable: %p, TableSize: %ld
==== 802.11 packet decrypted ====
BSS_OnScanComplete
==>%s bCurTxBW40MHz %d
bCurrentHTSupport %d bPeerBssCoexistence %d, bPeer40MHzIntolerant %d, bCurOBSSScanExemptionGrt %d  CurOBSSScanInterval %d
<==%s TE_A %d, TE_B %d
Hi There
DE A3 56 A2 CD DD 90 C7 A7 EC ED C5 EB B5 63 93 4F 46 04 52
34 AA 97 3C D4 C4 DA A4 F6 1E EB 2B DB AD 27 31 65 34 01 6F
84 98 3E 44 1C 3B D2 6E BA AE 4A A1 F9 51 29 E5 E5 46 70 F1
A9 99 3E 36 47 06 81 6A BA 3E 25 71 78 50 C2 6C 9C D0 D8 9D
0123456701234567012345670123456701234567012345670123456701234567
abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq
AMSDU_GetAggregatibleList
Stop aggregation: 
[A-MSDU size limitation]
[Buffer NA]
[Tx Desc NA]
BufferForThisTCB = %d, UsedDescNum = %d, nAggrTcbNum = %d, AvaliableDesc = %d
MgntQuery_ProtectionFrame
MgntQuery_ProtectionFrame(): bRTSEnable(%d)
MgntQuery_ProtectionFrame(): RTSRate(%#x)
MgntQuery_ProtectionFrame(): bCTSEnable(%d)
MgntQuery_ProtectionFrame(): bRTSBW(%d)
MgntQuery_ProtectionFrame(): RTSSC(%d)
MgntQuery_AggregationCapability
GetTs=%d
pMgntInfo->SecurityInfo.SecLv=%d
pTxTs->TxAdmittedBARecord.bValid == FALSE)
InsertRxReorderList
InsertRxReorderList(): Duplicate packet is dropped!! IndicateSeq: %d, NewSeq: %d
InsertRxReorderList(): Pkt insert into buffer!! IndicateSeq: %d, NewSeq: %d
IndicateRxReorderList
RxReorderIndicatePacket(): Packets indication!! IndicateSeq: %d
CheckRxTsIndicateSeq
CheckRxTsIndicateSeq(): Packet Drop! IndicateSeq: %d, NewSeq: %d
CheckRxTsIndicateSeq(): out-off squence !! Packet Drop! IndicateSeq: %d, NewSeq: %d
CheckRxTsIndicateSeq(): Window Shift! IndicateSeq: %d, NewSeq: %d
RxReorderIndicatePacket
==>RxReorderIndicatePacket()
<==RxReorderIndicatePacket(): Packet Drop!!
<==RxReorderIndicatePacket():
RxPktPendingTimeout
==>RxPktPendingTimeout()
<==RxPktPendingTimeout()
ActivateBAEntry
pBA->bValid = TRUE
DeActivateBAEntry
pBA->bValid = FALSE
OnADDBAReq
OnADDBAReq(): Invalid length(%d) of frame
OnADDBARsp
OnADDBARsp(): Recv ADDBA Rsp. Drop because already admit it! 
OnADDBARsp(): Recv ADDBA Rsp. BA invalid, DELBA! 
OnADDBARsp(): Recv ADDBA Rsp. BA is admitted! Status code:%X
OnDELBA
 Sned tx cmd pkt fail
 tx cmd pkt get local buffer fail
 Fragment TCB
 VacancyTxDescNum QueueID=%d pTcb->BufferCount=%d fail 
cmpk_DisplayTxStatistic
[CMPK]-->TX statistic
OK=%I64d 
Fail=%I64d 
Retry_Cnt=%I64d
TX ok=%I64d, fail=%I64d, retry_cnt=%I64d
HalGetFirmwareVerison
HalGetFirmwareVerison: Firmware version is not retrive firmware
HalGetFirmwareVerison: Firmware version is %d
err dbg
err cmd
Change print range
prange
Show TX Table
txtbl
SYS ctrl
sysctrl
sys + arg
SYS dump
ractrl <Type> <R/W/P>
Ctrl rate tbl
ractrl
dbg <flag> <value>
bit oriented
Switch dbg flag
w4 <Addr> <Data> {Size}Size: num of decimal dword <4096
W mem addr by Dword
r4 <Addr> {Size}Size: num of decimal dword <4096
R mem addr by Dword
help <DIR> 
DIR list:
<1CMN> <2MANS> <3?>
Dbg cmd help
 Error dbg flag
 Error cmd string
unknow
 Cmd_Idx = 29
debug control operation
dbgctrl
 Cmd_Idx = 28
shadow operate for RF / BB/ MAC shadow operation
 <Arg1>: DEC or CHAR
 0/1/2/3 or m/b/r=MAC/BB/RF/ 
 <Arg2>: HEX or DEC
 0x0-1FF: DEC 0-200 (Word Unit)
 0x1235/1237: HEX Address
 0x0-1FF: DEC 0-200 (Word Unit)
 <Arg3>: HEX or DEC
 0x1235/1237: HEX Value 0x0-FF 
shadow
 Cmd_Idx = 27
EFUSE operate to R/W/Update for Real or Shadow Table
 <Arg1>: HEX
 0-0x1FF=Read,
 0x1234=Write real Efuse by map file
 0x1235=Write real Efuse by byte unit
 HEX 0x1236=Read shadow modify map
 HEX 0x1237=Write shadow modify map
 HEX 0x1238=Use 8192se.map to update shadow modify table
 HEX 0x1239=Update shadow modify map to real efuse area
 <Arg2>: HEX or DEC
 0x0-1FF: DEC 0-200 (Word Unit)
 0x1235/1237: HEX Address
 0x0-1FF: DEC 0-200 (Word Unit)
 <Arg3>: HEX or DEC
 0x1235/1237: HEX Value 0x0-FF 
efuse
 Cmd_Idx = 26
EEPROM operate to R/W 
 [eepr  ] <Addr> (Size)
 <Addr>: HEX 0=Read, 0x1234=Write
 (SIze): DEC 0-64.
eeprom
 Cmd_Idx = 25
Reset 92S HW block
 [reset  ] (Arg1) 
 -------------------------
 Arg1 = (Decimal) ALL/TX/RX/SCHEDULE/BB= 1/2/3/4/5
 ...... Future use.
reset
 Cmd_Idx = 24
Dump 92S register 
 [regdump  ] (Arg1) (Arg2) (Arg3)
 -------------------------
 Arg1 = (Decimal) MAC/BB/RF= 1/2/3
 ...... Future use.
regdump
 Cmd_Idx = 23
Security control console
 [sec  ] (Arg1) (Arg2) (Arg3)
 -------------------------
 Change 
 -------------------------
 Arg1 = (Decimal) Change AUTO/SW/ HW encryot = 0/1/2
 -------------------------
 Arg2 = (Decimal) Change security type NONE/WEP40 or WEP104/TKIP/AES=0/1/2/3
 -------------------------
 Arg3 = (String) Security password
 -------------------------
 ...... Future use.
 Cmd_Idx = 22
Dump FW buffer
 [fwbuf  ] (Arg1) (Arg2) (Arg3)
 -------------------------
 Dump TX/RX buffer
 -------------------------
 Arg1 = (Decimal),  packet_Buf = 1/2/3/4/5=TX/RX/CMD/TRPT/RRPT
 Arg1 = (Decimal),  Read Lbus_Reg = 6/7/8=SCHE/WMAC/FW2HW/
 Arg1 = (Decimal),  Write Lbus_Reg = 9/10/11=SCHE/WMAC/FW2HW/
 Arg1 = (Decimal),  12=Read ERR RX PKT BUF
 -------------------------
 Arg2 = (HRX), Start Address
 -------------------------
 Arg3 = (Decimal),  Length (For buf 8 byte unit For LBus 4 byte unit)
 Arg3 = (HEX),  Data (arg2=9-11)
 -------------------------
 ...... Future use.
fwbuf
 Cmd_Idx = 21
Support dbg cmd for 92SE verify
 [verify  ] (Arg1) (Arg2) (Arg3)
 -------------------------
 Dump TX/RX desc
 -------------------------
 Arg1= DEC
 0= TX DESC info
 1= RX DESC info
 2= QoS type chk info
 3/4/5/6= Every T_Desc/T_Data/R_Desc/R_Data 
 7/8= Current T_Data/R_Data 
 9/10= Capture/Display MAX DMA poll range(TSF)
 11/12= capture/Display MAX MP tx num
 13/14= Capture/Display MAX MP Poll range(TSF)
 15= Beacon Tx ISR CNT
 17= AMPDU_TYPE 
 18= BW_TYPE 
 19= Current TX data
 20= Disable/En Beacon TX
 21= All SSID/BSSID info
 22= En/Disable probereq TX
 24= TX bcn content and Len
 25= Rx virtual addr
 26= RFD initl info (memory addr and len)
 27= TCB initl info like RFD
 28= Force Tx rate
 29= Force rate by periodic timer(ms unit)
 30= Change AMSDU type
 31= Free NDISPKT
 32= Free Protec mode
 33= Dbginfo ISR
 34= Reset
 35= BW info
 36= Force TX TID
 37= Rx Defrag info
 38= Efuse force 0x10ec
 39= Efuse utilization
 -------------------------
 Arg2= DEC
 0/1: TX/RX DESC
 2: 1/0=En/Disable
 3/4/5/6 : Arg2=1/0=En/Disable to display info
 9/11/13: 1=Start to capture
 17: AMPDU_TYPE=Auto/En/Disable=0/1/2 
 18: BW=40/20 MHZ=1/0
 20: Disable/En=1/0
 22: En/Disable= 1/0
 25: En/Disable= 1/0
 28: 0-28 --> CCK(0-3)/OFDM_LEGACY(4-11)/HT_MCS(12-27 LG,28-43 SG)
 29: 0-10000000ms
 30: 0/1/2=Auto/En/Disable
 32/33: 1/0=En/Disable
 34: 1/2/3/4/5=ALL/TX/RX....
 36: TID 0/3=BE 1/2=BK 4/5=VI 6/7=VO
 -------------------------
 Arg3= DEC
 >1=Display All TX DESC by SEQ
 30: 0/1=4K/8K
 36: QUE: 0/1/2/3=BK/BE/VI/VO
 44: CCK reset cnt
 -------------------------
 ...... Future use.
verify
 Cmd_Idx = 20
Verification Console
 [vera  ] (Arg1) (Arg2) (Arg3) (Arg4)
 -------------------------
 If you do not input type argument, we execute all TX/RX test
 -------------------------
 Arg1 = (Decimal),  Transmit Packet Number
 -------------------------
 Arg2 = (Decimal),  Transmit Queue Type
 We can not support HCCA_QUEUE/HIGH_QUEUE now
 BK_QUEUE 
 BE_QUEUE 
 VI_QUEUE 
 VO_QUEUE 
 HCCA_QUEUE
 TXCMD_QUEUE 
 MGNT_QUEUE 
 HIGH_QUEUE 
 BEACON_QUEUE 
 Send ALL_QUEUE 
= 255
 -------------------------
 Arg3 = (Decimal),  Transmit Rate
 0-27 CCK+OFDM_HT_MCS=4+8+16=28
 0-3 = CCK1-11M
 4-11= OFDM6-54M
 12-27 = HT_MCS0-15
 Send ALL_RATE=255
 -------------------------
 Arg4 = (Decimal),  Tx Pkt Len
 0-499 =legal len, NULL or >=500=Random len
 -------------------------
 ...... Future use.
 Cmd_Idx = 19
Rx Path Selection Control --> Cmd_Idx = 19
 [rxPathSel] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 RxPathSelection
 Arg1 --> 0/1/2/3/4 = Enable/DbgMode/SS_TH_low/diff_TH/cck_method
 Arg1 --> 10/11/12/13 = rssi for A/B/C/D
 Arg1 --> 20/21 = PingRSSIenable/PingRSSITh
 Arg2 --> Set value, Decimal
 dbgcmd 19 0 0 0/1 --> RxPathSelection disable/enable
 dbgcmd 19 0 1 0/1 --> DbgMode OFF/ON
 dbgcmd 19 0 2 30 --> set SS_TH_low = 30
 dbgcmd 19 0 3 15 --> set diff_TH = 15
 dbgcmd 19 0 4 0/1 --> cck method version1/version2
 dbgcmd 19 0 10/11/12/13 50 --> set rssi A/B/C/D = 50
 dbgcmd 19 0 20 0/1 --> testRSSI disable/enable
 dbgcmd 19 0 21 20 --> set TestRSSITh = 20
rxPathSel
 Cmd_Idx = 18
FW Dynamic Control --> Cmd_Idx = 18
 [fwdm  ] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 DBG Mode Switch
 Arg1 --> 0/1/2~# Driver/Firmware/Original
 -------------------------
 Type=1 FW Dynamic Control --> Switch to drv dbg mode at first
 You can only input decimal arguments and a double word
 Arg1 --> Dynamic Ctrl Type
 Arg2~n --> For different DM type, you need different arguments
 FW DM CTRL 0--RX_CMD_PACKET-----------------------
 If Arg1 = 0 : RX_CMD_PACKET Switch
 -->Arg2 = 0/1 : Disable/Enable
 FW DM CTRL 1--Rate Adaptive-----------------------
 If Arg1 = 1 : Rate Adaptive Switch
 -->Arg2 = 0/1 : Disable/Enable
 FW DM CTRL 2--Debug Port Switch-----------------------
 If Arg1 = 0/1 : UART/RX_CMD
 ...... Future use 
 Cmd_Idx = 17
Force TxFwInfo --> Cmd_Idx = 17
 [ForTFI] (Arg1) (Arg2)
 -------------------------
 Arg1 --> 0/1 = Don't Force TxSubCarrier/Force
 Arg2 = Force value 
 cmd 16 0 0 -----> don't force TxSC
 cmd 16 1 2 ---> force TxSC value = 2
 -------------------------
 ...... Future use.
ForTFI
 Cmd_Idx = 16
FW Control --> Cmd_Idx = 16
 [fwctrl  ] (Arg1) (Arg2)
 -------------------------
 If you do not input type argument, we will display some FW info
 -------------------------
 Arg1 = 0(Decimal), --> You must enter rate type in Arg2
 Rate_Type = 2/3/4/5=HT_MCS BW0_SG0/BW1_SG0/BW0_SG1/BW01_SG1
 -------------------------
 Arg1 = 1(Decimal) Clear all TX rate history
 -------------------------
 Arg1 = 2(Decimal) Use TX_CMD to Control FW to collect TX Rate History
 Arg2 = 0/1(Decimal) Disable/Enable
 -------------------------
 Arg1 = 3(Decimal) Different TX Rate History Display
 Arg2 = 0/1(Decimal) UI can support/ Both pomelo and UI
 -------------------------
 Arg1 = 4(Decimal) Send RSSI to FW
 Arg2 = (Decimal) RSSI Value
 -------------------------
 Arg1 = 5(Decimal) Send TX Power Tracking event to FW
 Arg2 = (HEX) bit0-7 TX_PWR Bit 8-15 RF_Type(0/1=1T2R/2T4R)
 ...... Future use.
fwctrl
 Cmd_Idx = 15
Display TX Rate History --> Cmd_Idx = 15
 [txrahis  ] (Arg1) (Arg2)
 -------------------------
 If you do not input type argument, we will display all TX rate hostory
 -------------------------
 Arg1 = 0(Decimal), --> You must enter rate type in Arg2
 Arg2 = 0x0-0x3f(HEX), --> You must enter rate type in Arg2
 Rate_Type = HEX BIT 0-5 to displaydifferent rate type
 Rate_Type = 0/1=CCK/OFDM
 Rate_Type = 2/3/4/5=HT_MCS BW0_SG0/BW1_SG0/BW0_SG1/BW01_SG1
 -------------------------
 Arg1 = 1(Decimal) Clear all TX rate history
 -------------------------
 Arg1 = 2(Decimal) Use TX_CMD to Control FW to collect TX Rate History
 Arg2 = 0/1(Decimal) Disable/Enable
 -------------------------
 Arg1 = 3(Decimal) Different TX Rate History Display
 Arg2 = 0/1(Decimal) UI can support/ Both pomelo and UI
 ...... Future use.
txrahis
 Cmd_Idx = 14
Dynamic Control --> Cmd_Idx = 14
 [dm  ] <Type> <Arg1>
 -------------------------
 Type=0 Enable
 Arg1 --> 0/1=Disable/Enable
 dbgcmd 14 0 0 --> Disable the Bandwidth autoswitch
 dbgcmd 14 0 1 --> Enable  the Bandwidth autoswitch
 This function is default enable
 -------------------------
 Type=1 Set the threshold 40Mhz to 20Mhz
 Arg1 --> the value will set to threshold of 40Mhz to 20Mhz
 dbgcmd 14 1 20 --> Set the 40Mhz to 20Mhz threshold = 20
 dbgcmd 14 1 15 --> Set the 40Mhz to 20Mhz threshold = 15
 -------------------------
 Type=2 Set the threshold 20Mhz to 40Mhz
 Arg1 --> the value will set to threshold of 40Mhz to 20Mhz
 dbgcmd 14 2 20 --> Set the 20Mhz to 40Mhz threshold = 20
 dbgcmd 14 2 25 --> Set the 20Mhz to 40Mhz threshold = 25
 -------------------------
 Type=3 Query threshold 
 dbgcmd 14 3 --> Query all our threshold
 -------------------------
 If 20Mhz to 40Mhz threshold <= 40Mhz to 20Mhz threshold
 If 40Mhz to 20Mhz threshold >= 20Mhz to 40Mhz threshold
 Return fail
 ...... Future use 
bandctrl
 Cmd_Idx = 13
Dynamic Control --> Cmd_Idx = 13
 [dm  ] <Type> <Arg1> (Arg...)
 -------------------------
 Type=0 DIG
 Arg1 --> 0/1/2/3/=Thresh High/Low/HighPwr_High/HighPwr_Low
 Arg1 --> 4/5/6/7=DbgMode/Rssi_val/DIG Algorithm/BackOffval
 Arg1 --> 20/30=DIG Enable/DIG Disable
 Arg2 --> Set value, Decimal
 cmd 13 0 0 40 --> DIG high threshold = 40
 cmd 13 0 1 30 --> DIG low threshold = 30
 cmd 13 0 2 70 --> DIG HPWR high threshold = 70
 cmd 13 0 3 60 --> DIG HPWR low threshold = 60
 cmd 13 0 4 0/1  --> DIG DbgMode = 0/1
 cmd 13 0 5 72  --> DIG Rssi_val = 72
 cmd 13 0 6 0/1  --> DIG Algorithm by FW false alm=0/ by SW rssi=1
 cmd 13 0 7 12   --> DIG BackOff value = 12
 cmd 13 0 9 18(dec)    --> DIG Min rx gain = 0x12(18)
 cmd 13 0 10 60(dec)    --> DIG Max rx gain = 0x3c(60)
 cmd 13 0 20 80 --> DIG enable
 cmd 13 0 30 80 --> DIG disable
 -------------------------
 Type=1 RateAdaptive
 Arg1 --> 0/1/2=Thresh High/Low40M/Low20M
 Arg1 --> 3/4/5/6=RATR0 Value High/Middle/Low40M/Low20M
 Arg2 --> For Arg1(0-3), Decimal. For Arg1(4-7), HEX
 cmd 13 1 0 50 --> High threshold = 50~55
 cmd 13 1 1 10 --> Low threshold 40M = 10~15
 cmd 13 1 4 01234567 --> RA change high RATA0 value=0x01234567
 cmd 13 1 4 ffffffff --> RA change middle RATA0 value=0xffffffff
 -------------------------
 Type=2 RF ON OFF Control --> RF ONF OFF dbg mode
 Arg1 = 0 Control IPS, 0:Disable IPS, 1: Enable IPS
 cmd 13 2 0 0 --> Enter IPS
 cmd 13 2 0 1 --> Leave IPS
 -------------------------
 Type=3 FrameSync
 Arg1 --> 0=0xc38 monitor
 Arg2 --> Set value, Decimal
 cmd 13 3 0 0/1 --> monitor reg0xc38/disable monitor reg0xc38
 -------------------------
 Type=4 CTSToSelf
 Arg1 --> 0/1=CTSToSelf enable/Threshold
 Arg2 --> Set value, Decimal
 cmd 13 4 0 0/1 --> disable/enable CTSToSelf
 cmd 13 4 1 30 --> Th=30~35
 Cmd_Idx = 12
Write memory address by char
 [w1  ] <Addr> <Data> (Size)
 Please refer to [w4]
 Cmd_Idx = 11
Read memory address by char
 [r1  ] <Addr> (Size)
 Please refer to [r4]
 Cmd_Idx = 10
Write memory address by word --> Cmd Index=10
 [w2  ] <Addr> <Data> (Size)
 Please refer to [w4]
 Cmd_Idx = 9
Read memory address by word
 [r2  ] <Addr> (Size)
 Please refer to [r4]
 Command index = 8
Modify dedicated RF register --> Cmd Index=8
 rfm <RF-Path> <Addr_Start> (Addr_End) <Data>
 <RF-Path> : 0~3=A~D, 4=All RF path
 <Addr_Start> : HEX, 0~2E
 <Addr_End> : HEX, 0~2E
 <Data> : HEX value
 Type rfm 3 0 123 --> Modify RF-D address 0 to 0x123
 Type rfm 2 0 2e 123 --> Modify RF-C address 0~2E to 0x123
 Type rfm 4 0 2e 123 --> Modify RF-A~D address 0~2E to 0x123
 Command index = 7
Change debug print flag
 dbgf [Flag_Type] [dbg_type] [dbg_comp_bit]
 [Flag_Type] : Decimal 45=Display_DBG_COMP/40=Change_DBG_COMP of RT_TRACE
 [Flag_Type] : Decimal 50=Clear all DBG_COMP
 [Flag_Type] : Decimal 0-39=RTPRINT debug flag
 [Dbg_Type] : Decimal -->45/40/ 0-??
 [dbg_type]: If arg1=40 This element 1/0=Enable/Disable DBG_COMP
 [dbg_type]: If arg1=0-39 This element = debug glag value(HEX)
 [dbg_comp_bit]: If arg1=40, decimal value for debug comp bit
 Command index = 6
for utility debug page use only
 uidbg <Type>
 Type = 0x01~....
 0x01 : Print 20/40M info
 0x02 : False alarm counter
 0x03 : AMPDU info
 0x04 : Print RX status info
 0x05 : Print RX status info
 0x06 : Print RX status info2
 0x07 : Print RX status info3
 0x08 : Print CCK long/short preamble/GI
 0x09 : Print OFDM long/short preamble/GI
 0x0A : Print MCS0-7 long/short preamble/GI
 0x0B : Print MCS8-15 long/short preamble/GI
 0x0C : Print Rx SNR
 0x0D : IBSS mode debug
 0x0E : BW 20/40 Judgement
 0x0F : TX FW INFO
 0x10 : Display ISR time
 0x11 : Clear ISR time table
 0x12 : Display beacon info
 0x13 : Retry packet histogram
 0x14 : RF read/write page counters
 0x15 : Connection state log(from connected to disconnected state)
 0x16 : Display the connection mgnt information counters
 0x17 : TX statistics1
 0x18 : TX statistics2
 0x19 : EEPROM Content
 0x1A : EEPROM Tx Power Content
 0x1B : Rate Adaptive Related
 0x1C : Reset counter for endurance test
 0x1D : Different transmit packet type display
 0x1E : RX status display
 0x1F : Tx Power tracking information
 0x20 : RX reorder info
 0x21 : 
 0x22 : AMSDU info
 0x23 : DIG display
 0x24 : RF Tx/Rx register
 0x25 : General information display
 0x27 : None
 0x28 : Current RF RX path state
 0x29 : Display MAC/PHY shadow register value
 0x2A : Actions for IOT
 0x2B : Rx Path Selection
 0x2C : Association Entry
 0x2D : RSSI
 <Type> : UI debug type
uidbg
 Command index = 5
Dump all RF register. --> Cmd Index=5
 rfd (RF-Path) (Addr_Start) (Addr_End)
 <RF-Path> : 0~3=A~D, 4=All RF path
 <Addr_Start> : HEX, 0~2E
 <Addr_End> : HEX, 0~2E
 Type rfd --> Read RF-A~D all reg
 Type rfd 3 --> Read RF-D all reg
 Type rfd 3 0 --> Read RF-D address 0 reg
 Type rfm 3 0 2e --> Read RF-D address 0~2E reg
 Type rfm 4 0 1a --> Read RF-A~D address 0~1A reg
 Command index = 4
Write NIC adapter
 [wada  ] <} <} (]
 <} : 
 <} : 
 (] : 
 Command index = 3
Read NIC adapter
 [rada  ] <} <} (]
 <} : 
 <} : 
 (] : 
 Command index = 2
Write memory address by Dword
 [w4  ] <Addr> <Data> (Size)
 <Addr> : Writable memory address. For driver --> Page 0~15?
 <Data> : HEX value 0x00000000-->0xFFFFFFFF
 (Size) : Num of decimal dword max size < 4096
 Command index = 1
Read memory address by Double Word
 [r4  ] <Addr> (Size)
 <Addr> : Readable memory address. For driver --> Page 0~15?
 (Size) : Num of decimal dword max size < 4096
 Command index = 0
Debug command help
 You can type help to print all debug command directory/index
 [help] (Directory) (Command)
 Type help <directory index> --> Print command in the directory
 If directory=100, print all command index definition.
 Type help <command> --> Print
 [xxx] --> Command string
 <xxx> --> Necessary argument
 (xxx) --> Optional argument
AMSDU Size  6K~8K
AMSDU Size  4K~6K
AMSDU Size  2K~4K
AMSDU Size  1K~2 K
AMSDU Size   < 1 K
AMPDU Number   >40
AMPDU Number 20~40
AMPDU Number 10~20
AMPDU Number  5~10
AMPDU Number   < 5
AMPDU Size 32K~64K
AMPDU Size 16K~32K
AMPDU Size  8K~16K
AMPDU Size  4K~8 K
AMPDU Size   < 4 K
40MDuplicate
40MLower
40MUpper
40MFull
20MPacket
Rcvd_HW_err
MCS_32
MCS_15
MCS_14
MCS_13
MCS_12
MCS_11
MCS_10
MCS_9
MCS_8
MCS_7 
MCS_6
MCS_5
MCS_4
MCS_3
MCS_2
MCS_1
MCS_0
OFDM_54M
OFDM_48M
OFDM_36M
OFDM_24M
OFDM_18M
OFDM_12M
OFDM_9M
OFDM_6M
CCK_11M
CCK_5.5M
CCK_2M 
CCK_1M 
Incorrect cmd index
Print Firmware CMD Table.
<1. COMMON>
<2. DYNAMIC_SCHEME>
<2. CMD_92S>
<2. TX_PROCESS_CMD>
<3. RX_PROCESS_CMD>
<4. SECURITY_CMD>
1. Type help + directory index(1~)
2. Type help + directory index(1~) + cmd_index
Ghelp 1   
common
Ghelp 1 3 
common
Uindex
1. Type dbgcmd + cmd_index + 
2. Type Cmd_String + 
Gdbgcmd 1 0 20 -->
double word
Gr2 800 20 -->
}0x800
cmd string
Pomelo
debug command table
cmd_inde 2
G[r4  ] <Addr> (Size) 
1. [r4  ] 
2. <Addr> 
3. (Size> 
Err DIR
DBG CMDs:
------------------
0x%08lX%01s
%08lX
00   02   04   06   08   0A   0C   0E
=====================================
%04lX%01s
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
===============================================
%02lX%01s
Wireless Mode=%02x
NRM_TCB=%ldx
Idle_TCB=%ld
Que-%ld NumTxDesc=%d
 RcvdRate Info --> 
, Total=%10ld,
 OK=%10ld,
 CRC=%10ld,
 ICV=%10ld
, LongGI/Preamble=%10ld,
 ShortGI/Preamble=%10ld
 %s = %ld
 Aggregation Info --> 
 AMPDU Rx Size Info --> 
 AMPDU Rx Num Info --> 
 AMSDU Rx Num Info --> 
 False alarm counter --> 
 rOFDM_PHYCounter1 = 0x%08lX
 rOFDM_PHYCounter2 = 0x%08lX
 rOFDM_PHYCounter3 = 0x%08lX
Test --> receive write adapter command
 RF-%c
Modify RF-%ld Addr%02lx~%02lx=%02lx
%s=%ld
20/40 MHZ packet
NumRx20MHzPacket=%ld
NumRx40MHzPacket=%ld
CurCntParityFail=0x%08lX
CurCntRateIllegal=0x%08lX
CurCntCrc8Fail=0x%08lX
CurAll=0x%08lX
StaCntParityFail=0x%08lX
StaCntRateIllegal=0x%08lX
StaCntCrc8Fail=0x%08lX
StaCntAll=0x%08lX
%s=%ld 
Current TX AMPDU Factor(Infrastructure) = %d
 LastTxPacketRate = 0x%X 
%s,TotalRcvdPacket=%ld 
%s,RcvdOKPacket=%ld 
%s,RcvdCRCErrorPacket=%ld 
%s,LongGI/PreamblePacketNum=%ld 
%s,ShortGI/PreamblePacketNum=%ld 
 RxSNR-%c=%lddB 
 Peer_bssDesc.BssHT.bdSupportHT =%d
 Peer_bssDesc.BssQos.bdQoSMode =%ld
 pHTInfo->bEnableHT =%d
 RegWirelessMode =%x
 CurrentWirelessMode =%x
 dot11CurrentWirelessMode =%x
 bCurBW40MHz =%x
 bCurShortGI20MHz =%x
 bCurShortGI40MHz =%x
 bCurrentHTSupport =%x
 pMgntInfo->mIbss =%x
 pMgntInfo->mAssoc =%x
 pMgntInfo->pStaQos->QosCapability =%lx
 pMgntInfo->pStaQos->CurrentQosMode =%lx
 BW-20/40 Judgement:
 MAC_REG%x=0x%02lx
 PHY register.
 PHY_REG%x=0x%08lx
Operating Band=upper
Operating Band=lower
 SC=0x%02lx
 Current TX FW info
pTxFwInfo->TxRate=0x%02x
pTxFwInfo->TxHT=%d
pTxFwInfo->EnableCPUDur=%d
pTxFwInfo->Short=%d
pTxFwInfo->AllowAggregation=%d
pTxFwInfo->RxMF=%ld
pTxFwInfo->RxAMD=%ld
pTxFwInfo->RtsEnable=%d
pTxFwInfo->CtsEnable=%d
pTxFwInfo->RtsSTBC =%d
pTxFwInfo->RtsHT=%d
pTxFwInfo->RtsRate =%d
pTxFwInfo->RtsBandwidth=%d
pTxFwInfo->RtsSubcarrier =%d
pTxFwInfo->RtsShort =%d
pTxFwInfo->TxBandwidth=%d
pTxFwInfo->TxSubCarrier =%d
pTxFwInfo->TxAGCOffset=%ld
pTxFwInfo->TxAGCSign =%ld
pMgntInfo->bEnableSwBeaconTimer=%d
pDesc[BEACON_QUEUE].OWN=%ld
Rx OK Packet Small(0-500)=%I64d
Rx Retry Packet Small(0-500)=%I64d
Rx OK Packet Middle(500-1000)=%I64d
Rx Retry Packet Middle(500-1000)=%I64d
Rx OK Packet Large(>1000)=%I64d
Rx Retry Packet Large(>1000)=%I64d
 RF Write page[%d] = %ld
 RF Read page[%d] = %ld
 BecomeDisconnectedIndex = %lu
 BecomeDisconnectedTime[%d] = 0x%lX %lX
 Connect but doesn't rcv Beacon Period Cnt = %lu
 Connect but doesn't rcv Data Period Cnt = %lu
 Num of OnBeacon() called = %I64u
 Num of OnBeacon_Scan() called = %I64u
 Num of OnBeacon_Join() called = %I64u
 Num of OnBeacon_Bss() called = %I64u
 Num of OnBeacon_Ibss() called = %I64u
 Num of OnDeauth() called = %lu
 Num of OnDisassoc() called = %lu
 Link status from connected to disconnected Cnt = %lu
 Infra Disconnect Roaming Start Cnt = %lu
 Infra Disconnect Roaming Fail Cnt = %lu
 Adhoc Disconnect Cnt = %lu
 Connect Resume From Roaming = %lu
 Indicate Disconnect Cnt = %lu
 FwIMR(reg0xf4) = 0x%lx
 FwISR(reg0xf8) = 0x%lx
 FwCPUCnt(reg0x120) = 0x%lx
 FwTxCnt(reg0x128) = 0x%lx
 FwRxCnt(reg0x130) = 0x%lx
 NumTxInterrupt = %I64d
 NumRxInterrupt = %I64d
 NumRxDescFilled(%d) =  %I64d
 NumRxDescReturn(%d) =  %I64d
 NumMpSendPackets() = %I64d
 NumOutOfTCB = %I64d
 NumTxDescFill(%d) =  %I64d
 NumTxDescClosed(%d) =  %I64d
 NumTransmitTCB(%d) = %I64d
 NumTransmitTCB_Available(%d) = %I64d
 NumTransmitTCB_NotAvailable(%d) = %I64d
 NumTransmitTCBInsertTcbBusyQueue(%d) = %I64d
 CurrentChannel = %d
 TxPowerLevelCCK[%d] = 0x%x
 TxPowerLevelCCK[%d](A, C) = (0x%x, 0x%x)
 TxPowerLevelOFDM24G[%d] = 0x%x
 TxPowerLevelOFDM24G[%d](A, C) = (0x%x, 0x%x)
TX_Rate =%02x
TX_Rate =
SG0 BW0
%s %s
SG0 BW1
SG1 BW0
SG1 BW1
Disable
Enable
RA: Adjustive RATR is  =%s
RA: RATR state=%d
RA: RSSI Average =%ld
RA: RATR0 High_Level =0x%08lx
RA: RSSI High Thresh =%ld
RA: H 2 L Thresh =%ld
RA: RATR0 Middle_Level =0x%08lx
RA: L 2 H Thresh for 40M =%d
RA: RSSI Low Threshold for 40M =%ld
RA: RATR0 Low_Level_40 =0x%08lx
RA: L 2 H Thresh for 20M =%d
RA: RSSI Low Threshold for 20M =%ld
RA: RATR0 Low_Level_20 =0x%08lx
 CTSToSelfEnable = %d
 CTSToSelfTH = %d
 SilentReset executed num = %ld
Tx Reset  =%ld
Rx Reset =%ld
Total Reset =%ld
Page number before reset[Bub_Bcn] =%lx
Page number before reset[VI_VO] =%lx
Page number before reset[BK_BE] =%lx
Page number before reset[Mgn_HI] =%lx
 pHalData->SystemStartTime = 0x%lX %lX
 RxResetTimeIndex = %lu
 RxResetTime[%ld] = 0x%lX %lX
 TxResetTimeIndex = %lu
 TxResetTime[%ld] = 0x%lX %lX
 NumTxOkTotal= %I64d
 NumTxErrTotal= %I64d
 NumTxRetryCount= %I64d
 NumTxMulticast= %I64d
 NumTxBroadcast= %I64d
 NumTxUnicast= %I64d
 pAdapter->RxStats.NumCMPKRXQID = %I64d
 pAdapter->RxStats.NumNotCMPKRXQID = %I64d
 pAdapter->RxStats.NumQryPhyStatus = %I64d
 pAdapter->RxStats.SignalStrength = %ld
 pAdapter->RxStats.NumQryPhyStatusCCK = %I64d
 pAdapter->RxStats.NumQryPhyStatusHT = %I64d
 pAdapter->RxStats.NumPacketMatchBSSID = %I64d
 pAdapter->RxStats.NumPacketToSelf = %I64d
 pAdapter->RxStats.NumProcessPhyInfo = %I64d
 ThermalMeter in EEPROM[0] = %d
 ThermalMeter in EEPROM[1] = %d
 TXPowerTracking enabled = %d
 TXPowercount = %d
 TXPowerTrackingInitialized = %d
 CCKTxPowerAdjustCntCh14 = %ld
 CCKTxPowerAdjustCntNotCh14 = %ld
 TxPowerCheckCnt = %ld
 TXPowerTrackingCallbackCnt = %ld
 RFA_txPowerTrackingIndex = %d
 RFC_txPowerTrackingIndex = %d
 CCKPresentAttentuation = %d dB
 RF A I/Q Amplify Gain = %ld
 RF C I/Q Amplify Gain = %ld
 Rx Reorder Enable = %x
 Rx Reorder Drop Counter = %d
 ThermalReadBackIndex = %d
 ThermalReadback Value(C/A)[%d] = 0x%x
 AMSDU NumOutOfTCB = %I64d
 AMSDU NumOutOfBufferInTCB = %ld
 AMSDU NumOutOfTxDesc = %ld
 Reg 0x%x = 0x%lx
 DefaultInitialGain[0x%x,0x%x,0x%x,0x%x] = [0x%x,0x%x,0x%x,0x%x]
 Default framesync(0x%x) = 0x%x
 DIG Enable=%d
 DIG Algorithm=FW DIG by False Alarm
 DIG Algorithm=SW DIG by RSSI
 DbgMode=NA
 DbgMode=%d
 DbgMode RSSI=NA
 DbgMode RSSI=%ld
 Real RSSI=%ld
 NewDig Backoff value=NA
 NewDig Backoff value=%d
 FW DIG State=%d
 DIG High Pwr State=%d
 DIG High Pwr State=NA
 CurPD_TH = NA
 CurPD_TH = low power state
 CurPD_TH = normal power state
 CurPD_TH = high power state
 CurCS_ratioState = NA
 CurCS_ratioState = lower CS ratio
 CurCS_ratioState = higher CS ratio
 Max Dig initial gain = 0x%x
 Min Dig initial gain = 0x%x
 Low Thresh=%ld
 High Thresh=%ld
 High PWR Low Thresh=%ld
 High PWR High Thresh=%ld
 OFDM Tx, rFPGA1_TxInfo(reg0x90c) = 0x%lx
 OFDM Tx, rFPGA0_TxInfo(reg0x804) = 0x%lx
 OFDM Rx, rOFDM0_TRxPathEnable(reg0xc04) = 0x%lx
 OFDM Rx, rOFDM1_TRxPathEnable(reg0xd04) = 0x%lx
 CCK TxRx, rCCK0_AFESetting(reg0xa04) = 0x%lx
 AutoloadFailFlag = %d
 IC Version = 0x%x
 RfMode = RF_1T2R
 RfMode = RF_2T4R
 RfMode = Unknown
 EEPROM Type = 93C46
 EEPROM Type = 93C56
 EEPROM Type = Unknown
 Inactive Power Save = %s
 Inactive Power Save (Previous Stae)= %s
SLEEP/OFF
 pPSC->eInactivePowerState = RF %s
 pMgntInfo->RfOffReason = %lx
 pHalData->eRFPowerState = RF %s
 MAX RF Path=%d
 RF-Path[%d]= %d
 pMgntInfo->pwrsave_cnt= %ld
 start_addr=%lx L=%ld
IS NOT
 IOT:Peer [%s] Realtek AP
FALSE
 IOT:Force AMSDU is [%s]
 IOT:EDCA Trubo is Turn [%s]
DISABLED
ENABLED
 IOT:MCS15 is [%s]
 IOT:MCS14 is [%s]
 IOT:MCS8~MCS15 is [%s]
 IOT:Use MGNT Rate [%s]
 IOT:CDD fsync is Turn [%s]
 IOT:Force CTS2Self is Turn [%s]
 IOT:Force RTS-CTS is Turn [%s]
Reject
Accept
 IOT:[%s] ADDBA Request
More Than
 IOT:Allow Aggregation [%s] one packet
 Associate to [%ld]
 IOT:Associate to Realtek 90 AP
 IOT:Associate to Realtek 92SE AP
 IOT:Associate to Broadcom AP
 IOT:Associate to Ralink AP
 IOT:Associate to Atheros AP
 IOT:Associate to Cisco
 IOT:Associate to Unknown AP
 --------Rx Path Selection --------- = -------
 OFDM Rx Reg 0x%x = 0x%lx
 CCK Rx Reg 0x%x = 0x%lx
 disabled RF = 0x%x
 cck rx path = 0x%x
 Rx Path selection = enabled
 Rx Path selection = disabled
 Rx Path selection DbgMode = enabled
 Rx Path selection DbgMode = disabled
 cck rx path sel method = version 1
 cck rx path sel method = version 2
 SS_TH_low = %d
 diff_TH = %d
 rf enable rssi th[%d] = %d
 CCK avg pwdb[%d] = %ld
 Dbg rf_rssi[%x] = %d
entry index[%d],ratr_index[%d],WirelessMode[%d],Support 40M[%s],MacAddr[]
 Antenna[%x] = %d
 RSSI = %ld
 %-15s = 0
 %-15s = 1
 %-15s = 2
 %-15s = 3
FMGNT
 %-15s = 4
FMLME
 %-15s = 5
FRESOURCE
 %-15s = 6
FBEACON
 %-15s = 7
 %-15s = 8
 %-15s = 9
 %-15s = 10
FEEPROM
 %-15s = 11
 %-15s = 12
 %-15s = 13
FDBGCtrl
 %-15s = 14
 %-15s = 15
 %-15s = 16
 Current Value = 0x%x
 BIT 0    QoS_INIT
 BIT 1    QoS_VISTA
 BIT 0    TX_DESC
 BIT 1    TX_DESC_TID
 BIT 0    RX_DATA
 BIT 1    RX_PHY_STS
 BIT 2    RX_PHY_SS
 BIT 3    RX_PHY_SQ
 BIT 4    RX_PHY_ASTS
 BIT 5    RX_ERR_LEN
 BIT 6    RX_DEFRAG
 BIT 7    RX_ERR_RATE
 BIT 0    NA
 BIT 0    MEDIA_STS
 BIT 1    LINK_STS
 BIT 0    OS_CHK
 BIT 0    BCN_SHOW
 BIT 1    BCN_PEER
 BIT 0    ISR_CHK
 BIT 0    PHY_BBR
 BIT 1    PHY_BBW
 BIT 2    PHY_RFR
 BIT 3    PHY_RFW
 BIT 4    PHY_MACR
 BIT 5    PHY_MACW
 BIT 6    PHY_ALLR
 BIT 7    PHY_ALLW
 BIT 8    PHY_TXPWR
 BIT 0    MP_RX
 BIT 0    EEPROM_W
 BIT 1    EFUSE_PG
 BIT 0    LPS
 BIT 1    IPS
 BIT 2    PWRSW
 BIT 3    PWRHW
 BIT 4    PWRHAL
 BIT 0    WA_IOT
 BIT 1    DM_PWDB
 BIT 0    DbgCtrl_Trace
 BIT 1    DbgCtrl_InbandNoise
 BIT 0    C2H_Summary
 BIT 1    C2H_PacketData
 BIT 2    C2H_ContentData
 BIT 0    BT_TRACE
 BIT 1    BT_RFPoll
dcmd_Dbg_Falg_Ctrl
[DCMD] DBGFLAG argc = %d  flag=%ld typet=%lx bit=%ld
Change dbg op=%ld
  Number of ARGUMENT is less than 3
 cmd 14 0 1/0 (Enable or disable)
 Bandwidth autoswitch Disable
 bForcedTx20Mhz Disable
 Bandwidth autoswitch Enable
 Bandwidth autoswitch Enable/Disable: Fail arguments
 Number of  ARGUMENT is less than 3
 cmd 14 1 value (value is the threshold we want to set Threshold40Mhzto20Mhz)
 Bandwidth autoswitch set 40Mhz to 20Mhz threshold Fail
 Bandwidth autoswitch set 40Mhz to 20Mhz (%d) >= Threshold20Mhzto40Mhz (%ld)
 Value is out of range
 Bandwidth autoswitch set 40Mhz to 20Mhz = %ld
 Number of ARGUMENT is less than 3
 cmd 14 2 value (value is the threshold we want to set Threshold20Mhzto40Mhz)
 Bandwidth autoswitch set 20Mhz to 40Mhz threshold Fail
 Bandwidth autoswitch set 20Mhz to 40Mhz (%d) <= Threshold40Mhzto20Mhz (%ld)
 Bandwidth autoswitch set 20Mhz to 40Mhz = %ld
 ARGUMENT is not 3
 Value of UndecoratedSmoothedPWDB is %ld
 Value of Bandwidth autoswitch 40Mhz to 20Mhz is %ld
 Value of Bandwidth autoswitch 20Mhz to 40Mhz is %ld
 Usage: cmd 14 [type] [Value]
 Type 0 =>Enable this function
 Type 1 =>Modify 40Mhz to 20Mhz Threshold
 Type 2 =>Modify 20Mhz to 40Mhz Threshold
 Type 3 =>Query all the Threshold Data
 CCK-[1][2][5.5][11]=
[%ld]
[%ld]
[%ld]
[%ld]
 OFDM-[6][9][12][18][24][36][48][54]=
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
[%ld]
 MCS_BW0_SG0[0-15]=
 MCS_BW1_SG0[0-15]=
 MCS_BW0_SG1[0-15]=
 MCS_BW1_SG1[0-15]=
[%ld]
 %s=%ld
 BW0_SG0=0
 BW1_SG0=1
 BW0_SG1=2
 BW1_SG1=3
dcmd_92SDebug
Arg1/2/3=%ld/%ld/%ld
Desc Index=%d
[%08lx]    
DBG_DmaPollCapStart=%d
MAX Poll Range[%ld]    
Start/ End / Time /Num=[%ld] / [%ld] / [%ld] / [%ld] 
MpSend POll RANGEm=[%ld]
Beacon CNT=[%ld]
Beacon Length = %ld
RFD INFO
VirtualAddress=[%p]
Length=[%ld]
PhysicalAddressLow=[%08lx]
PhysicalAddressHigh=[%08lx]
TCB INFO
SA EA=[%ld]/[%ld]
Execute Reset-%ld
bEnableHT=%d bCurrentHTSupport=%d 
bRegBW40MHz=%d bCurBW40MHz=%d
bRegShortGI40MHz=%d bCurShortGI40MHz=%d
CurrentChannelBW=%d
bCurBW40MHz=%d bCurTxBW40MHz=%d Force20M=%d 
Permant=[%02x-%02x-%02x-%02x-%02x-%02x]
CurrentAddress=[%02x-%02x-%02x-%02x-%02x-%02x]
INDEX-%d TID=%d SeqNum=%d FragNum=%d bMoreFrag=%d
EfuseUsedBytes=%d
EfuseUsedPercentage=%d
CCK Reset CNT=%x
arg1/2/3=%ld/%lx
dcmd_92SRegDump
CMDR[0x40]=0x%04x
BB OFDM/CCK Disable
Schedule Disable
TX/RX Disable
DDMA/FWOL Disable
TRDMA Disable
HCITRDMA Disable
TCR[0x44]=0x%08lx
CW Disable
No ICR APPEND
TXDMAPRE2FULL
RCR[0x48]=0x%08lx
MSR[0x4C]=0x%02x
SYSF_CFG[0x4D]=0x%02x
RX_PKY_LIMIT[0x4E]=0x%02x=%dK
MBIDCTRL[0x4F]=0x%02x
MAC ID = 
[%02x]
BSSID = 
SLOT_TIME[0x89]=0x%02x
USTIME[0x8A]=0x%04x=EDCA/TSF=%d/%dMHZ
SIFS_CCK[0x8C]=%04x=TR/CT%d/%us
SIFS_OFDM[0x8E]=0x%04x=TR/CT%d/%us
ACK_TIMEOUT[0x91]=0x%02xus
EIFSTR[0x92]=%dus
BCN_INTERVAL[0x94]=0x%04xTU
ATIMWND[0x96]=0x%04xTU
BCN_DRV_EARLY_INT[0x98]=0x%04x
BCN_DMATIME[0x9A]=0x%04xus
BCN_ERR_THRESH[0x9C]=0x%04xus
MLT[0x9D]=0x%02xs
RQPN1[0xA0]=0x%08lx VO-VI-BE-BK=%ld-%ld-%ld-%ld
RQPN2[0xA4]=0x%08lx HQ-MGT-CMD-HCCA=-%ld-%ld-%ld-%ld
RQPN3[0xA8]=0x%08lx PUB-BCN=-%ld-%ld
RXFF_BNDY[0xAC]=0x%08lx
RXRPT_BNDY[0xB0]=0x%08lx
TXPKTBUF_PGBNDY[0xB4]=0x%02x
PBP[0xB5]=0x%02x
RXDRVINFO_SZ[0xB6]=0x%02x
TXFF_STATUS[0xB7]=0x%02x
RXFF_STATUS[0xB8]=0x%02x
RXDMA[0xBD]=0x%02x
RXPKT_NUM[0xBE]=0x%04x
FIFOPAGE1[0xC4]=0x%08lx PUB-BCN=-%ld-%ld
FIFOPAGE2[0xC8]=0x%08lx VI-VO=-%ld-%ld
FIFOPAGE3[0xCC]=0x%08lx BK-BE=-%ld-%ld
FIFOPAGE4[0xD0]=0x%08lx CMD-HCCA=-%ld-%ld
FIFOPAGE5[0xD4]=0x%08lx HI-MGN=-%ld-%ld
BCNQ_CTRL[0x120]=0x%08lx
MGTQ_CTRL[0x124]=0x%08lx
HIQ_CTRL[0x128]=0x%08lx
VOTID7_CTRL[0x12C]=0x%08lx
VOTID6_CTRL[0x130]=0x%08lx
VITID5_CTRL[0x134]=0x%08lx
VITID4_CTRL[0x138]=0x%08lx
BETID3_CTRL[0x13C]=0x%08lx
BETID0_CTRL[0x140]=0x%08lx
BKTID2_CTRL[0x144]=0x%08lx
BKTID1_CTRL[0x148]=0x%08lx
CMDQ_CTRL[0x14C]=0x%08lx
RRSR[0x181]=0x%02x
AGGLEN_LMT_H[0x1A7]=0x%02x
AGGLEN_LMT_L[0x1A8]=0x%08lx
AGGLEN_LMT_L[0x1AC]=0x%08lx
DARFRC[0x1B0][0x1B4]=0x%08lx
/0x%08lx
RARFRC[0x1B8][0x1BC]=0x%08lx
RARFRC[0x1C0][0x1C4]=0x%08lx
CCK_TXAGC[0x1C8]=0x%04x
EDCAPARA_VO[0x1D0]=0x%08lx
EDCAPARA_VI[0x1D4]=0x%08lx
EDCAPARA_BE[0x1D8]=0x%08lx
EDCAPARA_BK[0x1DC]=0x%08lx
BCNTCFG[0x1E0]=0x%04x
CWRR[0x1E2]=0x%04x
ACMHWCTRL/ACMAVG[0x1E4]=0x%08lx
VO_ADMTM[0x1E8]=0x%08lx
VI_ADMTM[0x1EC]=0x%08lx
BE_ADMTM[0x1F0]=0x%08lx
RETRY_LIMIT[0x1F4]=0x%04x
SG_RATE[0x1F6]=0x%04x
BW_OPMODE/NAV_CTRL[0x200]=0x%08lx
NHM_RPI_CNT[0x228]=0x%08lx
NHM_RPI_CNT[0x22C]=0x%08lx
RXERR_RPT[0x230]=0x%08lx
NAV_PROT_LEN[0x235]=0x%04x
CFEND_TH[0x236]=0x%02x
AMPDU_MIN_SPACE[0x237]=0x%02x
TXOP_STALL_CTRL[0x238]=0x%02x
rtl8192SE\8192se.map
Only Support 92S now
EEPROM PG FAIL
EFUSE PG FAIL
EFUSE PG OK
EFUSE write finish
EFUSE Shadow Modify Content
%04X%01s
EFUSE Content Write
EFUSE Content
DebugControl_InbandNoise() ==> 
backup 0xc50/0xc58 = 0x%x/0x%x
0x8f8 = 0x%x
value_a = 0x%x(%d), value_b = 0x%x(%d)
sval_a = %d, sval_b = %d
Valid sval_a = %d, sval_b = %d
Sum of sval_a = %d, sval_b = %d
After divided, sum_a = %d, sum_b = %d
DebugControl_InbandNoise(), Timeout 
 Inband Noise query failed!! 
DebugControl_InbandNoise() <== 
0x%x = 0x%x(%d)
noise_a = %d, noise_b = %d
recover 0xc50/0xc58 = 0x%x/0x%x
 noise(Ant-a) = %d dbm, noise(Ant-b) = %d dbm
DebugControl_PowerSave(), set Power Save = %s
BT dbg set Ant isolation = %d
Unknow command
Err Arg
USAGE:
 print fw help
Argc=%d
CamAddOneEntry
===> CamAddOneEntry(): ulKeyId=%ld, ulEncAlg=%ld, ulUseDK=%ld
<=== CamAddOneEntry(): ulKeyId exceed!
<=== CamAddOneEntry()
CamDeleteOneEntry
CAM_empty_entry(): WRITE A4: %lx 
CAM_empty_entry(): WRITE A0: %lx 
CamResetAllEntry
CamResetAllEntry: 
CamRestoreAllEntry
CamRestoreAllEntry: 
CAM_program_entry
===> CAM_program_entry(): usConfig=0x%02X
CAM_program_entry(): WRITE %x: %lx 
The Key ID is %ld
CAM_program_entry(): WRITE A4: %lx 
CAM_program_entry(): WRITE A0: %lx 
CAM_mark_invalid
CAM_mark_invalid(): WRITE A4: %lx 
CAM_mark_invalid(): WRITE A0: %lx 
CAM_empty_entry
pHalData->UndecoratedSmoothedPWDB = 0x%x( %d)
pEntry->MacAddr =
pEntry->rssi = 0x%x(%d)
EntryMaxPWDB = 0x%x(%d)
EntryMinPWDB = 0x%x(%d)
dm_CheckRfCtrlGPIO 
dm_CheckMutualAuthentication
Lenovo ID Match, Mutual Authentication check!!
MutualAuthenticationFailCnt = %d!!
MutualAuthenticationFail = %d!!
MutualAuthenticationWorkItemCallback
Mutual authenticaiton success, cnt = %d!!
SMBIOS_STATUS_WMIOpenBlockFail!!
SMBIOS_STATUS_AllocateMemFail!!
SMBIOS_STATUS_WMIQueryDataFail!!
Mutual authenticaiton fail, cnt = %d!!
dm_CheckRateAdaptive
<---- dm_CheckRateAdaptive(): driver is going to unload
dm_CheckRateAdaptive(): 
currentRATR = %lx, targetRATR = %lx
dm_TXPowerTrackingCallback_ThermalMeter_92S
Readback Thermal Meter = 0x%lx
Write to FW Thermal Val = 0x%lx
dm_InitializeTXPowerTracking_ThermalMeter
pMgntInfo->bTXPowerTracking = %d
dm_CheckTXPowerTracking_ThermalMeter
Trigger 92S Thermal Meter!!
Schedule TxPowerTracking direct call!!
dm_FalseAlarmCounterStatistics
Cnt_Ofdm_fail = %ld, Cnt_Cck_fail = %ld, Cnt_all = %ld
dm_CtrlInitGainAPByFalseAlarm
PreAPConnectState = %x, CurAPConnectState = %x Dig_Ext_Port_Stage %x
dm_initial_gain_STABeforeConnect
PreSTAConnectState = %x, CurSTAConnectState = %x
CurIGValue = 0x%lx, PreIGValue = 0x%lx, BackoffVal = %d
BT SCO/Scan parameter = 0x%x
BT Idle parameter = 0x%x
BT None-SCO parameter = 0x%x
Turn on Turbo EDCA 
EDCA IOT state : BIAS on Rx
EDCA Current Uplink state
EDCA Current Balance state
EDCA IOT state : Generic
EDCA Current Downlink state
BT update parameter(0x%x) = 0x%x
Turn off Turbo EDCA 
 dm_WA_Broadcom_IOT(), disable HT_IOT_ACT_WA_IOT_Broadcom
dm_WA_Broadcom_IOT(), from connect to disconnected, disable HT_IOT_ACT_WA_IOT_Broadcom
dm_WA_Broadcom_IOT(), UndecoratedSmoothedPWDB = %d
dm_WA_Broadcom_IOT() ==> WA_IOT enable cck rates
dm_WA_Broadcom_IOT() ==> WA_IOT disable cck rates
dm_Init_Fsync
Undefine hardware Type 
FsyncTimer
DM_FsyncTimerCallBack
ContiuneDiffCount %ld
rateRecord %ld rateCount %ld, rateCountdiff %ld bSwitchFsync %d
dm_StartHWFsync
dm_EndHWFsync
dm_StartSWFsync
dm_EndSWFsync
DM_CheckFsync
RSSI %d TimeInterval %ld MultipleTimeInterval %d
RateBitmap 0x%lx FirstDiffRateThreshold %ld SecondDiffRateThreshold %ld
dm_InitDynamicTxPower
FW_Ver = %d
Dynamic Tx Power is enabled by Driver 
Dynamic Tx Power is enabled by FW 
dm_DynamicTxPower
Not connected to any 
AP Client PWDB = 0x%x 
STA Default Port PWDB = 0x%x 
AP Ext Port PWDB = 0x%x 
TxHighPwrLevel_Level2 (TxPwr=0x0)
TxHighPwrLevel_Level1 (TxPwr=0x10)
TxHighPwrLevel_Normal
PHY_SetTxPowerLevel8192S() Channel = %d 
AP_dm_CheckRateAdaptive
INTO     %s 
dm_RefreshRateAdaptiveMask
<---- dm_RefreshRateAdaptiveMask(): driver is going to unload
<---- dm_RefreshRateAdaptiveMask(): driver does not control rate adaptive mask
<---- dm_RefreshRateAdaptiveMask(): inform fw driver control dm
RSSI = %d
RSSI_LEVEL = %d
PreState = %d, CurState = %d
dm_SwitchBaseBandMRC
dm_SwitchBaseBandMRC(): idx(%d) SmoothedPWDB(%d), RSSI_A(%d), RSSI_B(%d)
dm_SwitchBaseBandMRC(): STA SmoothedPWDB(%d), RSSI_A(%d), RSSI_B(%d)
dm_SwitchBaseBandMRC(): Target calculated RSSI_A(%d), RSSI_B(%d)!!
PHY_QueryBBReg
--->PHY_QueryBBReg(): RegAddr(%#lx), BitMask(%#lx)
BBR MASK=0x%lx Addr[0x%lx]=0x%lx
<---PHY_QueryBBReg(): RegAddr(%#lx), BitMask(%#lx), OriginalValue(%#lx)
PHY_SetBBReg
--->PHY_SetBBReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx)
BBW MASK=0x%lx Addr[0x%lx]=0x%lx
<---PHY_SetBBReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx)
PHY_QueryRFReg
--->PHY_QueryRFReg(): RegAddr(%#lx), eRFPath(%#x), BitMask(%#lx)
RFR-%d MASK=0x%lx Addr[0x%lx]=0x%lx
<---PHY_QueryRFReg(): RegAddr(%#lx), eRFPath(%#x), BitMask(%#lx), Original_Value(%#lx)
PHY_SetRFReg
--->PHY_SetRFReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx), eRFPath(%#x)
RFW-%d MASK=0x%lx Addr[0x%lx]=0x%lx
<---PHY_SetRFReg(): RegAddr(%#lx), BitMask(%#lx), Data(%#lx), eRFPath(%#x)
phy_RFSerialRead return all one
RFR-%d Addr[0x%lx]=0x%lx
phy_RFSerialWrite stop
RFW-%d Addr[0x%lx]=0x%lx
PHY_BBConfig8192S
PHY_BBConfig8192S: RF_Type(%x) does not match RF_Num(%x)!!
rtl8192SE\PHY_REG.txt
rtl8192SE\PHY_REG_1T2R.txt
rtl8192SE\PHY_REG_PG.txt
rtl8192SE\AGC_TAB.txt
rtl8192SE\phy_to1T1R_a.txt
rtl8192SE\phy_to1T2R.txt
phy_BB8192S_Config_ParaFile
==>phy_BB8192S_Config_ParaFile
phy_BB8192S_Config_ParaFile():Write BB Reg Fail!!
phy_BB8192S_Config_ParaFile():BB_PG Reg Fail!!
phy_BB8192S_Config_ParaFile():AGC Table Fail
phy_ConfigMACWithHeaderFile
Read Rtl819XMACPHY_Array
phy_ConfigBBWithHeaderFile
The Rtl819XPHY_REGArray_Table[0] is %lx Rtl819XPHY_REGArray[1] is %lx 
The Rtl819XAGCTAB_Array_Table[0] is %lx Rtl819XPHY_REGArray[1] is %lx 
phy_SetBBtoDiffRFWithHeaderFile
phy_SetBBtoDiffRFWithHeaderFile: Set to 1T1R..
phy_SetBBtoDiffRFWithHeaderFile: Set to 1T2R..
The Rtl819XPHY_REGArraytoXTXR_Table[0] is %lx Rtl819XPHY_REGArraytoXTXR_Table[1] is %lx Rtl819XPHY_REGArraytoXTXR_Table[2] is %lx 
phy_SetBBtoDiffRFWithHeaderFile(): ConfigType != BaseBand_Config_PHY_REG
storePwrIndexDiffRateOffset
MCSTxPowerLevelOriginalOffset[%d][0] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][1] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][6] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][2] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][3] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][4] = 0x%lx
MCSTxPowerLevelOriginalOffset[%d][5] = 0x%lx
phy_ConfigBBWithPgHeaderFile
The Rtl819XPHY_REGArray_Table_PG[0] is %lx Rtl819XPHY_REGArray_Table_PG[1] is %lx 
phy_ConfigBBWithPgHeaderFile(): ConfigType != BaseBand_Config_PHY_REG
PHY_ConfigRFWithParaFile
Unknown RF path!! %d
phy_RF8225_Config_ParaFile(): read %s successfully
phy_RF8225_Config_ParaFile(): Failed to read %s!
PHY_ConfigRFPABiasCurrent
Inferiority IC, update PA bias current, set RF(0x%x[3:0]) = 0x%x
PHY_ConfigRFWithHeaderFile
PHY_ConfigRFWithHeaderFile: Radio No %x
PHY_CheckBBAndRFOK
PHY_CheckBBRFOK(): Never Write 0x100 here!
ulRegRead: %lx, WriteData: %lx 
PHY_GetHWRegOriginalValue
Default initial gain (c50=0x%x, c58=0x%x, c60=0x%x, c68=0x%x) 
Default framesync (0x%x) = 0x%x 
PHY_SetRFPowerState
---------> PHY_SetRFPowerState(): eRFPowerState(%d)
<--------- PHY_SetRFPowerState(): discard the request for eRFPowerState(%d) is the same.
<--------- PHY_SetRFPowerState(): bResult(%d)
PHY_SetRtl8192seRfHalt save BB/RF
Switch ctrl path fail
Save MAC
Save except led
Save max pwr
phy_SetRFPowerState8192SE
eRf Off/Sleep: %d times TcbBusyQueue[%d] !=0 but lower power state!
eRf Off/Sleep: %d times TcbBusyQueue[%d] !=0 before doze!
 SetZebraRFPowerState8185B(): eRfOff: %d times TcbBusyQueue[%d] != 0 !!!
PHY_SwitchEphyParameter
Clevo Change EPHY REG3
ccxPowerIndexCheck
CCX Cell Limit: %d dbm => CCK Tx power index : %d, Legacy OFDM Tx power index : %d, OFDM Tx power index: %d
EEPROM channel(%d) => CCK Tx power index: %d, Legacy OFDM Tx power index : %d, OFDM Tx power index: %d
Altered CCK Tx power index : %d, Legacy OFDM Tx power index: %d, OFDM Tx power index: %d
PHY_SetTxPowerLevel8192S(): CCK Tx power index : %d, Legacy OFDM Tx power index: %d, OFDM Tx power index: %d
Channel-%d, cckPowerLevel (A / B) = 0x%x / 0x%x,   ofdmPowerLevel (A / B) = 0x%x / 0x%x
PHY_UpdateTxPowerDbm8192S
PHY_UpdateTxPowerDbm8192S(): %ld dBm , CckTxPwrIdx = %d, OfdmTxPwrIdx = %d
PHY_ScanOperationBackup8192S
Unknown Scan Backup Operation. 
PHY_SetBWModeCallback8192S
==>PHY_SetBWModeCallback8192S()  Switch to %s bandwidth
PHY_SetBWModeCallback8192S():
unknown Bandwidth: %#X
BT 20MHz, write 0x884 = 0x5b
BT 40MHz, write 0x884 = 0x1b
PHY_SetBWModeCallback8192S(): unknown Bandwidth: %#X
<==PHY_SetBWModeCallback8192S() 
PHY_SetBWMode8192S
PHY_SetBWMode8192S() SetBWModeInProgress FALSE driver sleep or unload
PHY_SwChnlCallback8192S
==>PHY_SwChnlCallback8192S(), switch to channel
<==PHY_SwChnlCallback8192S()
PHY_SwChnl8192S
PHY_SwChnl8192S SwChnlInProgress TRUE schdule workitem done
PHY_SwChnl8192S SwChnlInProgress FALSE schdule workitem error
PHY_SwChnl8192S SwChnlInProgress FALSE driver sleep or unload
PHY_SwChnlPhy8192S
==>PHY_SwChnlPhy8192S(), switch from channel %d to channel %d.
PHY_SetMonitorMode8192S
PHY_SetMonitorMode8192S(): enable monitor mode
PHY_SetMonitorMode8192S(): disable monitor mode
HalSetFwCmd8192S
-->HalSetFwCmd8192S(): Set FW Cmd(%#x), SetFwCmdInProgress(%d)
[FW CMD] [New Version] RA init!!
[FW CMD] [New Version] Set DIG disable!!
[FW CMD] [New Version] Set DIG enable or resume!!
[FW CMD] [New Version] Set DIG halt!!
[FW CMD] [New Version] Set TxPwr tracking!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] Set RA/IOT Comb in n mode!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] Set RA/IOT Comb in BG mode!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] IQK enable.
[FW CMD][New Version] Inform FW driver control some DM!! FwCmdMap(%#x), FwParam(%#x)
[FW CMD] [New Version] Resume DM after scan.
[FW CMD] [New Version] Pause DM before scan.
[FW CMD] [New Version]  Set HighPwr disable!!
[FW CMD] [New Version] Set HighPwr enable!!
[FW CMD] [New Version] Set DIG Mode to FA.
[FW CMD] [New Version] Set DIG Mode to SS.
[FW CMD] Set PAPE Control 
BT set PAPE Control to SW/HW dynamically. 
BT set PAPE Control to SW
[FW CMD] Current FwCmdMap(%#x)
[FW CMD] Current FwCmdIOParam(%#x)
HalSetFwCmd8192S(): USB can NOT IO!!
<--HalSetFwCmd8192S(): Set FW Cmd(%#x)
ChkFwCmdIoDone
ChkFwCmdIoDone(): USB can NOT IO!!
[FW CMD] Set FW Cmd success!!
[FW CMD] Polling FW Cmd PollingCnt(%d)!!
[FW CMD] Set FW Cmd fail!!
phy_SetFwCmdIO
phy_SetFwCmdIO(): USB can NOT IO return
--->phy_SetFwCmdIO(): Cmd(%#x), SetFwCmdInProgress(%d)
[FW CMD] Set RA Reset!!
[FW CMD] Set RA Active!!
[FW CMD] Set RA n refresh!!
[FW CMD] Set RA BG refresh!!
[FW CMD] Set RA n Combo refresh!!
[FW CMD] Set RA/IOT Comb in n mode!! input(%#x)
[FW CMD] Set RA B/G Combo refresh!!
[FW CMD] Set RA/IOT Comb in B/G mode!! input(%#x)
[FW CMD] IQK Enable!!
[FW CMD] Pause DM by Scan!!
[FW CMD] Resume DM by Scan!!
[FW CMD] High Pwr Disable!!
[FW CMD] High Pwr Enable!!
[FW CMD] Enter LPS mode!!
[FW CMD] Leave LPS mode!!
[FW CMD] ADD A2 entry!!
[FW CMD] Inform fw driver will do some dm at driver
<---phy_SetFwCmdIO(): CurrentFwCmdIO(%#x)
SetFwCmdIOTimerCallback
SetFwCmdIOTimerCallback(): driver is going to unload
phy_CheckEphySwitchReady
regu1=%02x  delay = %ld
DbgTxDesc8192SE
TX_DESC_FIRST_PKT_LEN=%ld First segment
Last segment
Middle segment
====================>DbgTxDesc8192SE
DW 0 =========
Own = %ld
GF = %ld
AMSDU = %ld
LINIP = %ld
FS = %ld
LS = %ld
Offset = %ld
PktSize = %ld
DW 1 ==========
HWPC = %ld
PKTOFFSET = %ld
WDS = %ld
HTC = %ld
SecType = %ld
EnDescID = %ld
PktType = %ld
OUI = %ld
SecKeyId = %ld
NonQos = %ld
NoACM = %ld
AckPolicy = %ld
QueueSelect = %ld
PIFS = %ld
MoreFrag = %ld
MoreData = %ld
MacID = %ld
DW 2 ==========
OwnMAC = %ld
BK = %ld
AGG_EN = %ld
Data Retry CNT = %ld
RTS Retry CNT = %ld
TSFL = %ld
RetryLmtEn = %ld
DataRetryLmt = %ld
DW 3 ==========
Frag = %ld
Seq = %ld
TailPage = %ld
NextHeadPage = %ld
DW 4 ==========
UserRate = %ld
RTS STBC = %ld
RTSSC = %ld
RTSBW = %ld
RTSShort = %ld
RTSHT = %ld
RD = %ld
STBC = %ld
TXSC = %ld
TxBw = %ld
TxShort = %ld
TXHT = %ld
RaBRSRID = %ld
RTSEn = %ld
CTS2Self = %ld
RTSRateFBLmt = %ld
DisRTSFB = %ld
RTSRate = %ld
DW 5 ==========
TxAGC = %ld
DataRateFBLmt = %ld
Disable Feedback = %ld
TX_Rate = %ld
PktID = %ld
DW 6 ==========
TCPChkSum = %ld
IPChkSum = %ld
DW 7-9 ==========
TCPEn = %ld
IPHdrOffset = %ld
TxBufferSize = %ld
PhyAddressLow = %08lx
NextDescAddress= %08lX
DbgTxData8192SE
Que-%d LEN=%ld
TxInsertFirmwareInfoIntoDescRing8192SE
<==TxInsertFirmwareInfoIntoDescRing8192SE
TxFillDescriptor8192SE
==>TxFillDescriptor8192SE
TxFillDescriptor8192SE(): Inform FW to return Tx Info (FrameNo: %d, SeqNo: %04X
BCN Len = %ld bFirstSeg  =%d Queue = %d
TxFillDescriptor8192SE<==
HwRateToMRate92S(): Non supported Rate [%x], bIsHT = %d!!!
ReturnRxDescBuffer8192SE
pRxDesc->BufferAddress=%08lx LEN=%ld
DbgRxDesc8192SE
==================>DbgRxDesc8192SE
Own = %ld
CRC32 = %ld
DrvInfoSize = %ld
EOR = %ld
MACID = %ld
TID = %ld
Type = %ld
Sequence = %ld
Fragment = %ld
RX MCS = %ld
RX HT = %ld
IV1 = %08lx
TSFL = %ld
UpdateRxAMPDUHistogramStatistics8192S
UpdateRxAMPDUHistogramStatistics8192S(): A-MPDU too large
QueryRxDescStatus8192S
RX_DESC-%d -->CRC=%d PKT_LEN=%ld
Err RX data pkt len = %x
Wrong C2H Cmd length!
RxCmdLen = 0x%x, RxCmdElementID = 0x%x, RxCmdSeq = 0x%x, 
RxCmdContinue = 0x%x
Rx CMD Packet Hex Data :
Rx CMD Content Hex Data :
RxCommandPacketHandle8192SE
RxCommandPacketHandle8192SE(): Receive unhandled C2H CMD (%d)
RxCommandPacketHandle8190Pci(): It is a command packet
Disable IMR=%x
Enable IMR=%lx
DumpLoggedInterruptHistory8192SE
# CQ[%ld]
# VOQ[%ld]
# VIQ[%ld]
# MQ[%ld]
# BEQ[%ld]
# BK[%ld]
# ROK[%ld]
# RCOK[%ld]
# FRCOK[%ld]
# BcnTx[%ld]
# BcnDMA[%ld]
# RxFOVW[%ld]
GetEEPROMSize8192SE
====> GetEEPROMSize
HalCustomizedBehavior8192S
The TKIP in N mode is %d 
Unkown hardware Type 
ReadAdapterInfo8192S
====> ReadAdapterInfo8192S
Boot from EEPROM
Boot from EFUSE
Autoload OK
AutoLoad Fail reported from CR9346!!
ReadAdapterInfo8187(): Enable dot11d when RT_CHANNEL_DOMAIN_GLOBAL_DOAMIN!
RegChannelPlan(%d) EEPROMChannelPlan(%d)
ChannelPlan = %d
<==== ReadAdapterInfo8192S
HalGetICInferiority8192SE
HalGetICInferiority8192SE(): IC_INFERIORITY_B!!
ReadAdapterInfo8192SE
====> ReadAdapterInfo8192SE
EEPROM
EFUSE
EEPROM ID(%#x) is invalid!!
EEPROMId = 0x%4x
EEPROM VID = 0x%4x
EEPROM DID = 0x%4x
EEPROM SVID = 0x%4x
EEPROM SMID = 0x%4x
ReadAdapterInfo8192S(), Permanent Address = %02x-%02x-%02x-%02x-%02x-%02x
RF-%d CCK CHan_Area-%d = 0x%x
RF-%d OFDM-1T CHan_Area-%d = 0x%x
RF-%d OFDM-2T CHan_Area-%d = 0x%x
Rf-%d TxPwr CH-%d CCK/ OFDM_1T/ OFDM_2T= 0x%x/0x%x/0x%x
RF-%d PwrGroupHT20[%d] = 0x%x
RF-%d PwrGroupHT40[%d] = 0x%x
EEPROMRegulatory = 0x%x
RF-A Ht20 to HT40 Diff[%d] = 0x%x
RF-A Legacy to Ht40 Diff[%d] = 0x%x
RF-B Ht20 to HT40 Diff[%d] = 0x%x
RF-B Legacy to HT40 Diff[%d] = 0x%x
TxPowerDiff = %#x
TSSI_A = %#x, TSSI_B = %#x
ThermalMeter = %#x
HW WoWLAN enable = %#x
EEPROM ChannelPlan = 0x%4x
RF_TYPE=1T2R but only 1SS
EEPROM Customer ID: 0x%2x
MGNT Customer ID: 0x%2x
<==== ReadAdapterInfo8192SE
ConfigAdapterInfo8192SForAutoLoadFail
====> ConfigAdapterInfo8192SForAutoLoadFail
Address=%x  value=%x
ReadAdapterInfo8192SUsb(), Permanent Address = %02x-%02x-%02x-%02x-%02x-%02x
All TxPwr = 0x%x
EEPROMHT2T_TxPwr, Index %d = 0x%02x
BoardType = %#x
<==== ConfigAdapterInfo8192SForAutoLoadFail
SwChnlTimer
SetBWModeTimer
SetFwCmdIOTimer
RfTest1Timer
MutualAuthenticationWorkItem
GPIOChangeRFWorkItem
DM_RFPathCheckWorkItem
DbgCmdWorkItem
HalResetWorkItem
HwConfigureRTL8192SE
(1T1R)
(1T2R)
Initializeadapter: RF_Type%s
Initializeadapter:RF_Type(2T2R)
MacConfigBeforeFwDownload
--->MacConfigBeforeFwDownload()
Enable AFE clock source
Enable AFE Macro Block's Bandgap
Enable AFE Mbias
CTRL Path switch fail
MacConfigBeforeFwDownloadASIC(): Polling TXDMA_INIT_VALUE timeout!! Current TCR(%#x)
<---MacConfigBeforeFwDownload()
Power_DomainInit92SE
--->Power_DomainInit92SE()
CTRL Path switch fail
<---Power_DomainInit92SE()
gen_RefreshLedState first init
pMgntInfo->RfOffReason=%x
gen_RefreshLedState
gen_RefreshLedState:() pMgntInfo->RfOffReason=%x
MacConfigAfterFwDownload
EFUSE CONFIG OK
MacConfigAfterFwDownload OK
RF_RECOVERY
PHY_RFShadowCompare OKCNT=%d offset=%0x
PHY_RFShadowCompare OKCNT=%d
InitializeAdapter8192SE
InitializeAdapter8192SE()
Download Firmware failed
MAC Config Start!
MAC Config failed
MAC Config Finished!
BB Config Start!
BB Config failed
BB Config Finished!
RF Config started!
RF Config failed
RF Config Finished!
InitializeAdapter8190(): Turn off RF for RegRfOff ----------
InitializeAdapter8190(): Turn off RF for RfOffReason(%ld) ----------
BT temp init RF=ON
GPIO_IN=%02x
InitializeAdapter8190(): RF=%d 
InitializeAdapter8192SE(): Set FW Cmd FW_TX_FEEDBACK_CCX_ENABLE
InitializeAdapter8192SE(): Set MRC settings on as default!!
Leave !
HaltAdapter8192SE
==> Abort HaltAdapter8192SE()
==> HaltAdapter8192SE() bReset=%d
Delay 20ms to wait PwrDomainProtect
PwrDomainProtect FAIL
<== HaltAdapter8192SE()
HW_VAR_BASIC_RATE, HT_IOT_ACT_WA_IOT_Broadcom, BrateCfg = 0x%x
SetHwReg8192SE
Set HW_VAR_AMPDU_MIN_SPACE: %#x
Set HW_VAR_SHORTGI_DENSITY: %#x
Set HW_VAR_AMPDU_FACTOR: %#x
SetHwReg8185(): [HW_VAR_ACM_CTRL] ACM set failed: eACI is %ld
SetHwReg8190pci(): [HW_VAR_ACM_CTRL] Write 0x%X
Set HW_VAR_CCX_CLM_NHM: bToClear(%d) Duration(%d)
Set HW_VAR_CCX_CHNL_LOAD: bToClear(%d) Duration(%d)
Set HW_VAR_CCX_NOISE_HISTOGRAM: bToClear(%d) Duration(%d)
HW_VAR_MRC: Turn off 1T1R MRC!
HW_VAR_MRC: Turn on 1T1R MRC!
GetHwReg8192SE
Get HW_VAR_CCX_CHNL_LOAD
ClmAcc: %ld / ClmDurAcc: %ld => Clm: %02X (%d%%)
Get HW_VAR_CCX_NOISE_HISTOGRAM
NhmNhmDurAcc: %ld, NhmTotal: %08lX
%d: NhmAcc: %08lX  Nhm: %02X (%d%%)
ActUpdateChannelAccessSetting
[0706]Def-BG_Ext-N20 Case happen
ActSetWirelessMode8192SE
RFChipID=%d
ActSetWirelessMode8192SE RF_PSEUDO_11N Not make sure how set RF -BW
WIRELESS_MODE_A
WIRELESS_MODE_B
WIRELESS_MODE_G
WIRELESS_MODE_N_24G
WIRELESS_MODE_N_5G
DisableHWSecurityConfig8192SE
DisableHWSecurityConfig8190(8190)-------- 
EnableHWSecurityConfig8192SE
EnableHWSecurityConfig8192SE(8190)-------- 
PairwiseEncAlgorithm = %d
GroupEncAlgorithm = %d
The SECR-value %x 
SetKey8192SE
NeedAESSoftkEY is True
The insert KEY length is %d
The insert KEY  is %x %x 
===>Win7 SetKey() We don't set Group key to CAM !!
===>Win7 SetKey() We don't set WEP key to CAM !!
===>Win7 SetKey() We don't set key to CAM in AD-Hot !!
GetNmodeSupportBySecCfg8192SE
In GetNmodeSupportBySecCfg8190Pci The GroupEncAlgorithm is %d
In GetNmodeSupportBySecCfg8190Pci The PairwiseEncAlgorithm is %d
GetHalDefVar8192SE
GetHalDefVar8192SE(): Unkown variable: %d!
SetHalDefVar8192SE
AllowAllDestAddr8192SE
AllowAllDestAddr8192SE(): ReceiveConfig=0x%08lX, WriteIntoReg=%d
RemoveHalRATRTable8192SE
%s RATRTableBitmap %x
UpdateHalRATRTable8192SE
Ratrtable are full
UpdateHalRATRTable8192SE(), for HT_IOT_ACT_WA_IOT_Broadcom, ratr_value = 0x%x
ratr_idx %d, ratr_val %lx
HalTxCheckStuck8192SE
Driver indicate TxCheckStuck()
HalRxCheckStuck8192SE
Driver indicate rx stuck 
pwrdown, 0x6(BIT6)=%02x
BT write 0x87c (~BIT17) = 0x%x
BT read 0x8e0 (BIT24)= 0x%x
BT check RF state to %s
GPIOChangeRFWorkItemCallBack
GPIOChangeRFWorkItemCallBack(): Callback function breaks out!!
GPIOChangeRFWorkItemCallBack(): Silent Reseting!!!!!!!
GPIOChangeRFWorkItemCallBack(): Rf is in switching state.
GPIOChangeRFWorkItemCallBack() ---------> 
GPIOChangeRFWorkItemCallBack(): RF Change in progress! 
GPIOChangeRF  - HW Radio ON, RF ON
GPIOChangeRF  - HW Radio OFF
pHalData->bHwRadioOff %x,eRfPowerStateToSet%x 
GPIOChangeRFWorkItemCallBack() <--------- 
AccClmResult
AccClmResult(): CLM_RESULT_REG = %08lX
AccClmResult(): not yet completed: %d!!!
AccNhmResult
AccNhmResult(): NHM_RPI_COUNTER%d = %02X (%d%%)
AccNhmResult(): not yet completed: %d!!!
HalSetSysClk8192SE
HalSetSysClk8192SE(): Wait too long! Skip ....
wait for BIT6 return value %x
HalSetSysClk8192SE():Value = %02X, return: %d
UpdateHalRAMask8192SE
UpdateHalRAMask92SE(): mask = %lx, bitmap = %lx ratr_index = %1x
BlueTooth Coexistance = 0x%x
BlueTooth BT_Ant_Num = Antx2
BlueTooth BT_Ant_Num = Antx1
BlueTooth BT_CoexistType = BT_2Wire
BlueTooth BT_CoexistType = BT_ISSC_3Wire
BlueTooth BT_CoexistType = BT_Accel
BlueTooth BT_CoexistType = BT_CSR
BlueTooth BT_CoexistType = BT_RTL8756
BlueTooth BT_CoexistType = Unknown
BlueTooth BT_Ant_isolation = %d
BT Service = BT_Idle
BT write 0x%x = 0x%x
BT write 0xC04 = 0x%x
BT write 0xD04 = 0x%x
BT write 0x%x[22:20] = 1 (Ant-B standby mode)
FW Prive : bt_type = 0x%x
FW Notify => BT : %s
FW BT_ServiceChange()
BT Service : BT_SCO
BT Service : BT_A2DP
BT Service : BT_HID
BT Service : BT_HID_Idle
BT Service : BT_Scan
BT Service : BT_Idle
BT Service : BT_Other
HalResetWorkItemCallback8192SE
HalResetWorkItemCallback8192SE()===>
HalResetWorkItemCallback8192SE()<===
BlinkTimer
SwLedOn
SwLEDON 
SwLedOff
SwLEDOFF 
Blinktimes (%ld): turn on
Blinktimes (%ld): turn off
SwLedBlink7
Blinktimes (%d): turn on
SwLedBlink8
SwLedBlink8 CurrLedAction %d, 
SwLedBlink9
 Hw/Soft Radio Off, turn off Led
SwLedBlink9 CurrLedState %d
SwLedControlMode9
LED9 CurrLedState %d
LedControl8192SE
ignore ext port led action 
LedAction %d, 
PHY_RF6052SetBandwidth
PHY_SetRF8225Bandwidth(): unknown Bandwidth: %#X
CCK PWR= %lx (reg 0x%x)
 [OFDM power base index = 0x%lx]
 [MCS power base index = 0x%x]
40MHz finalPowerIndex (A / B) = 0x%x / 0x%x
20MHz finalPowerIndex (A / B) = 0x%x / 0x%x
MCSTxPowerLevelOriginalOffset[%d][%d] = 0x%x
RTK better performance, writeVal = 0x%x
Realtek regulatory, 40MHz, writeVal = 0x%x
Realtek regulatory, 20MHz, writeVal = 0x%x
Better regulatory, writeVal = 0x%x
customer's limit, 40MHz = 0x%x
customer's limit, 20MHz = 0x%x
Customer's limit = 0x%x
Customer, writeVal = 0x%x
Antenna Diff from RF-B to RF-A = %d (0x%x)
Write BCD-Diff(0x%x) = 0x%lx
rfa_lower_bound= %d
rfa_upper_bound= %d
Underflow
Overflow
rfa_pwr[%d]=%x
Set 0x%x = %08x
phy_RF6052_Config_ParaFile
phy_RF6052_Config_ParaFile():Radio[%d] Fail!!
<---phy_RF6052_Config_ParaFile()
PHY_RFShadowCompare
PHY_RFShadowCompare RF-%d Addr%02lx Err = %05lx return true
PHY_RFShadowCompare RF-%d Addr%02lx Err = %05lx return false
PHY_RFShadowRecorver
PHY_RFShadowRecorver RF-%d Addr%02lx=%05lx
PHY_SetRF8256Bandwidth
PHY_SetRF8256Bandwidth(): unknown Bandwidth: %#X
phy_RF8256_Config_ParaFile
PHY_RF8256_Config():Check Radio[%d] Fail!!
RF %d 3 register final value: %lx
phy_RF8256_Config_ParaFile():Radio[%d] Fail!!
PHY Initialization Success
PHY_SetRF8225Bandwidth
SetChannelBandwidth8190Pci():8225 does not support 40M mode
phy_RF8225_Config_ParaFile
phy_RF8225_Config_ParaFile():Radio[%d] Fail!!
<---phy_RF8225_Config_ParaFile()
EVMdbToPercentage92S Value=%d / %x 
bPacketToSelf = %d, bPacketMatchBSSID=%d bPacketBeacon=%d 
PHY_STS = [%08lx]-[%08lx]-[%08lx]-[%08lx]-[%08lx]-[%08lx]-[%08lx]-[%08lx]
UI RSSI = %ld, ui_rssi.TotalVal = %ld, ui_rssi.TotalNum = %ld 
Process_UI_RSSI_8192S
pRfd->Status.RxMIMOSignalStrength[%d]  = %d 
RxRSSIPercentage[%d]  = %d 
Adapter->RxStats.RxRSSIPercentage[%d]  = %d 
Total SQ=%ld PreRfd->SQ = %d
 PreRfd->SQ=%d
isCCKrate=%d
RF-%d RXPWR=%x RSSI=%ld
PWDB_ALL=%d
RXRATE=%lx RXEVM=%x EVM=%s%d
FirmwareEnableCPU
-->FirmwareEnableCPU()
IMEM Ready after CPU has refilled.
<--FirmwareEnableCPU(): rtStatus(%#x)
FirmwareCheckReady
--->FirmwareCheckReady(): LoadStaus(%d)
FW_STATUS_LOAD_IMEM FAIL CPU, Status=%x
FW_STATUS_LOAD_EMEM FAIL CPU, Status=%x
Enable CPU fail ! 
Polling  DMEM code done fail ! CPUStatus(%#x)
DMEM code download success, CPUStatus(%#x)
Polling Load Firmware ready, CPUStatus(%#x)
Polling Load Firmware ready fail ! CPUStatus(%#x)
FirmwareCheckReady(): Current RCR settings(%#lx)
<---FirmwareCheckReady(): LoadFWStatus(%d), rtStatus(%#x)
CmdSendPacket
CmdSendPacket(): CmdSendPacket_Fail
FirmwareDownloadCode
--->FirmwareDownloadCode()
Size(%#lx) over MAX_FIRMWARE_CODE_SIZE(%#x)!
FirmwareDownloadCode(): Length(%#x),bLastInitPacket(%#x)
FirmwareDownloadCode(): CmdSendDownloadCode Failed!
rtl8192SE\rtl8192sfw.bin
FirmwareDownload92S
 --->FirmwareDownload92S()
PlatformReadAndMapFile() fail!! 
FirmwareDownload92S(): FirmwareVersion(%#x), Rev(%#x)
Fw download from header.
Unexpected Download step!!
FirmwareDownloadCode() fail ! 
Firmware Download Success!!
Firmware Download Fail!! Dump related configurations.
Dump CMDR(0x40): %#x
Dump TCR(0x44): %#x
Dump CPUINST(0x318): %#x
Dump CPUCAUSE(0x31C): %#x
Dump SYS_CLKR(0x08): %#x
FirmwareSetH2CCmd
FirmwareSetH2CCmd() HW_VAR_SET_TX_CMD: ElementID = %lX, Cmd_Len = %lX
SetFwUpdateGTKCmd
===>SetFwUpdateGTKCmd()
<===SetFwUpdateGTKCmd()
*TransmitBuffers
MaxRxBuffers
MinRxBuffers
*ReceiveBuffers
*************************MP_INIT Leave*******************************
AdhocStationMaxCount
BSSEntryMaxCount
BSSEntryExpireTime
LostAPRoamBeaconCount
RSSILinkQualityThreshold
RSSIRoamBeaconCount
Realtek
Query OID_RT_WPS_RECIEVE_PACKET:
WPS Check Recieve Buffer:
Set Desird SSID %s
pAdpater->Dot11RunningMode %d 
Set Connect Request 
Set Connect Request SSID %s and Length is %d
Scan/Roam required because we are not associated but should be
Scan/Roam required because we havent received a beacon for a while
Scan/Roam required because we have low signal strength
Scan/Roam required because there were too many retries for send
YO MAN WE GET THE EAP DATA 
In Simple Config Save Data Mode
Print Data in SimpleConfigRecieveDataBuf :
Not In WSC Mode
QueryAllSMBiosData
QueryAllSMBiosData()
IoWMIOpenBlock() fail, NtStatus = 0x%x
SMBIOS_Alloc_Size = 0x%x!
QueryAllSMBiosData(), AllocateMemory Fail!
IoWMIQueryAllData(), Buffer to small, 
need SMBIOS_BUFSize = 0x%x, 
IoWMIQueryAllData() Fail!, NtStatus = 0x%x
IoWMIQueryAllData() Success, 
SMBIOS_BUFSize = 0x%x, 
WnodeHeader.Linkage = 0x%x
WnodeHeader.BufferSize = 0x%x
DataBlockOffset = %d
InstanceCount = %d
OffsetInstanceNameOffsets = 0x%x
Used20CallingMethod = %d
SmbiosMajorVersion = %d
SmbiosMinorVersion = %d
DmiRevision = %d
Size = %d
remainLen = %d
SMBIOS Not find the matched item!!
MatchTypeFormatLen = %d
matchTypeTotalLen = %d
Matched Data = %s
SMBIOS find the matched item!!
KHOIHGIUCCHHII
Mutual Authentication, Find valid key !!
Mutual Authentication, Key is not matched.!!
getSMBIOSTypeData
SMBIOS Type = %d, Length=0x%x, 
Handle = 0x%x, typetotallen=%d
getNextTypeHead
SMBIOS Type = %d, Length=0x%x, Handle = 0x%x, typetotallen=%d
CustomerTx
bChangePower
regTransmitPowerControl
TxFailureThresholdForRoam
set_ChannelPlan
AutoRateFallbackStep
bAutoRateFallback
FeedbackControAntenna
OFDM_TxAntenna
CCK_TxAntenna
PacketControlAntenna
OFDM_TxAGC
CCK_TxAGC
PacketControlAGC
PacketControlRL
PacketControlCW
VerificationType
EnableGPIO0
SamplingPhase
AGCmode
EVMCheck
CCKFastFalseAlarm
FastFalseAlarm
RXChargePump
TXChargePump
ZebraVersion
b2ndCut
InterfaceDebugMode
DefaultBeaconRate
LongRetryLimit
ShortRetryLimit
SupportWOL
OutputRFStatus
CustomLEDConfig
RadioOff
MaxADCheckPeriod
MinADCheckPeriod
GEPRFOffState
AntennaDiversityForDeadAngles
ADSSThRtl8255
ADSSThRtl8225
ADSSThMaxim2825
ADSSThMaxim2822
ADSSThPhilips
ADSSThRFMD
bSoftwareAntennaDiversity
OMCBoardVersion
RxTotalDescNum
REALTEK AP
CurrentBSSType IS %d , Dot11BSSType IS %d  From BSS Info
CurrentBSSType IS %d , dot11BSSDescription IS %d  From BSS Desc
qqqqqqqq Hw11QueryPnPCapabilities  pNic->CardInfo.SupportWOL %d
IsRateValidForWirelessMode: WirelessMode should not be WIRELESS_MODE_AUTO
(1)HwReadAdapterInfo(): Channel Plan(%d)
(2)HwReadAdapterInfo(): Channel Plan(%d)
(2) 0x84 = 0x%04x, Unexpected value!!
RTL85n64.pdb
H 0'$'
?>=<;:9876543210/.-,+*)('&%$#"! 
?>=<;:9876543210/.-,+*)('&%$#"! 
$0H`l
$,6@JRt
$0H`ld
$$,,0066BBHH``ll
<@;c$
B4$ b
4DDB4
<ffB4
b4$H'
F4!($
%6! `
c$^$C
".!(Q
B$! b
B0+ C
<??B4
6V0&6jD
J0%PC
b&d$C
b&h$C
b&l$C
b&p$C
b&t$C
b&x$C
b&|$C
>{'!`
1&`%0
<H;B$
<H;B$
%6! `
<0Te4
<3TE4
<0Te4
b4$H&
B0!0R
<??c4$ 
c$P$C
'@9%&
@9$&XE
<0Tc$
<XVc$
6tVB$
<22c4
<4uD$
<P`B$
44aB$
'H;&&P;
<X;I$
<`;H$
OnAssocReq
OnAssocRsp
OnReAssocReq
OnReAssocRsp
OnProbeReq
OnProbeRsp
DoReserved
DoReserved
OnBeacon
OnATIM
OnDisassoc
OnAuth
OnDeAuth
OnAction
0123456789ABCDEF
%hhX:
BB_WDOG
     00
 000000
     00
 000000
$0<HH
 #)*+
%)+..
(((((
AAAAAA
BBBBBB
HHHH\
/.-*0
 4TiT
 4Ti\
 4Tid
 4Til
rtl8192SE\radio_a.txt
rtl8192SE\radio_b.txt
rtl8192SE\radio_a.txt
rrtl8192SE\radio_b.txt
rtl8192SE\radio_c.txt
rtl8192SE\radio_d.txt
rtl8192SE\radio_a.txt
rtl8192SE\radio_b.txt
rtl8192SE\radio_b_gm.txt
Realtek RTL8192SE Wireless LAN PCI-E NIC                                     
$0H`l
$0H`l
abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq
gu>t9
Zwhat do ya want for nothing?
Em|6""}
Wy~$E
u3+Rox
+2g$@
DgQP'
l_x\9|
J0A\'(
Yh"5gW
[.X U6n3
MY68L1
CYcVl
>wY&Drf
,\@~V
$l^1(
2bb["
>hsrK :
Error
DOT11D
Entering a regulatory domain
Get a valid country IE
Active scan: Channels
Active scan: Max Tx Power (dBm)
Passive scan: Channels
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
$(,048<@
'4Nhu
MmMapLockedPagesSpecifyCache
DbgPrint
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
KeSetEvent
KeInitializeEvent
KeWaitForMultipleObjects
RtlInitUnicodeString
ZwOpenKey
ZwQueryKey
ExAllocatePoolWithTag
ZwEnumerateKey
ExFreePoolWithTag
ZwClose
PoRegisterPowerSettingCallback
PoUnregisterPowerSettingCallback
KeBugCheckEx
ntoskrnl.exe
KeStallExecutionProcessor
HAL.dll
NdisInitializeString
NdisOpenFile
NdisMapFile
NdisUnmapFile
NdisCloseFile
NdisFreeMemory
NdisWriteConfiguration
NdisWaitEvent
NdisResetEvent
NdisMSetMiniportAttributes
NdisWriteEventLogEntry
NdisOpenConfigurationEx
NdisCloseConfiguration
NdisReadConfiguration
NdisReadNetworkAddress
NdisInitializeEvent
NdisMIndicateStatusEx
NdisMOidRequestComplete
NdisSetEvent
NdisMInitializeTimer
NdisSetTimer
NdisMCancelTimer
NdisAllocateIoWorkItem
NdisFreeIoWorkItem
NdisQueueIoWorkItem
NdisAllocateMemoryWithTagPriority
NdisMSleep
NdisGetVersion
NdisOidRequest
NdisMAllocatePort
NdisMNetPnPEvent
NdisMFreePort
NdisMAllocateSharedMemory
NdisMFreeSharedMemory
NdisMSetBusData
NdisMGetBusData
NdisMRegisterMiniportDriver
NdisMDeregisterInterruptEx
NdisWriteErrorLogEntry
NdisMRegisterIoPortRange
NdisMMapIoSpace
NdisMRegisterScatterGatherDma
NdisMSynchronizeWithInterruptEx
NdisMRegisterInterruptEx
NdisAllocateNetBufferListPool
NdisFreeNetBufferListPool
NdisMDeregisterMiniportDriver
NdisMAllocateNetBufferSGList
NdisMSendNetBufferListsComplete
NdisFreeMdl
NdisFreeNetBufferList
NdisMUnmapIoSpace
NdisMDeregisterIoPortRange
NdisMDeregisterScatterGatherDma
NdisAllocateMdl
NdisAllocateNetBufferAndNetBufferList
NdisMIndicateReceiveNetBufferLists
NdisMFreeNetBufferSGList
NDIS.SYS
_vsnprintf
KeInitializeMutex
KeAcquireSpinLockAtDpcLevel
KeReleaseSpinLockFromDpcLevel
KeWaitForSingleObject
KeReleaseMutex
ExpInterlockedPopEntrySList
ExpInterlockedPushEntrySList
ExQueryDepthSList
RtlCompareMemory
IoAllocateMdl
MmBuildMdlForNonPagedPool
IoFreeMdl
ExInitializeNPagedLookasideList
InitializeSListHead
ExDeleteNPagedLookasideList
NdisMRemoveMiniport
NdisMResetComplete
NdisMAllocateSharedMemoryAsync
NdisAllocateNetBufferList
NdisAllocateNetBuffer
NdisFreeNetBuffer
NdisAllocateNetBufferPool
NdisFreeNetBufferPool
NdisAcquireReadWriteLock
NdisReleaseReadWriteLock
NdisInitializeReadWriteLock
IoWMIOpenBlock
IoWMIQueryAllData
NdisMSetPeriodicTimer
NdisRetreatNetBufferDataStart
NdisAdvanceNetBufferDataStart
__C_specific_handler
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Realtek Semiconductor Corporation                           
FileDescription
Realtek 8180/8185 Wireless Device
FileVersion
6.1125.0615.2010 built by: WinDDK
InternalName
RTL85n64.sys
LegalCopyright
Copyright (C) 2006 Realtek Semiconductor Corporation                           
OriginalFilename
RTL85n64.sys
ProductName
Realtek 8180/8185 Wireless Adapters                                     
ProductVersion
6.1125.0615.2010
VarFileInfo
Translation
