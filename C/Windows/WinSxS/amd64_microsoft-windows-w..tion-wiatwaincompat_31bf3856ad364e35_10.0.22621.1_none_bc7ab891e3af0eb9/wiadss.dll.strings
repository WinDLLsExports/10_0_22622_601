!This program cannot be run in DOS mode.
hRf^hRf^hRf^#*b_yRf^#*e_lRf^hRg^
Rf^#*g_gRf^#*c_jRf^#*f_iRf^#*n_eRf^#*
^iRf^#*d_iRf^RichhRf^
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
L$XE3
L$pH3
L$0H3
D$(E3
t$ UWAVH
f9<Bu
fA9<@u
fA9<@u
D$pE3
t$ UWAWH
fA9<@u
fA9<@u
fA9<@u
D$pE3
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$pE3
D$pE3
|$ UH
x AVH
UVWAVAW
A_A^_^]
UVWAVAWH
p`PZ#/i
0A_A^_^]
VWAVH
 A^_^
qXW8I
t$ UWATAVAWH
A_A^A\_]
WAVAWH
 A_A^_
\$ UVWAVAWH
t,D8=B
L9{Hu
A_A^_^]
D$xE3
D$8E3
@SUVWH
D$0L;
T$8H!|$8
D$@E3
@SUVWATAUAVAWH
A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
ty@8=
t"@8=vv
fA9>u
@A_A^A]A\_^]
L$ SWH
L$XH+
WATAUAVAWH
}HL9e@t
L97sGI
t;fD9!t5
 A_A^A]A\_
x AVH
uPH9i
HcT$ HcL$$H
x AVH
gfffA
WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
u!fD;c
 A_A^A\
H9j t
uCA;J
uqfD;
9fE;J
C$f;C
H9kHtFH
WATAVH
t!L9cHu
L9d$`tyA
C@L9c@u
 A^A\_
t$ WATAUAVAWH
D$hA;G
0A_A^A]A\_
WATAUAVAWH
@;o$w0D
 A_A^A]A\_
WATAUAVAWH
?(r.D
0A_A^A]A\_
L!L$(D
l$ VWATAVAWH
D9|$@u
L$XH3
A_A^A\_^
)t$ 3
t$ WATAUAVAWH
A_A^A]A\_
x ATAVAWH
A_A^A\
x AVH
qsWr"
Vxn>u
|$ UATAUAVAWH
D$0 A
fD9dM
fD9dM
l$<D;
fD9dE
A_A^A]A\]
VWAVH
x UATAUAVAWH
H!|$0
D;t$8
A_A^A]A\]
[PY6!
@USVWATAUAVAWH
F9MgL
A_A^A]A\_^[]
qrTp,
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
pHPr&
T$PD9
A_A^A]A\_^]
UVWATAUAVAWH
prTp,
T$8E+
L$PfA
A_A^A]A\_^]
WAVAWH
A_A^_
t$ WATAUAVAWH
A_A^A]A\_
t$ WATAUAVAWH
[PY6!
L$@fD
A_A^A]A\_
UVWAVAWH
A_A^_^]
USVWATAUAVAWH
A_A^A]A\_^[]
Vxn>u
USVWAWH
D$8E3
D9}ouCH
A__^[]
UATAUAVAWH
A_A^A]A\]
L$ SVWAVH
(A^_^[
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
UVWATAUAVAWH
A_A^A]A\_^]
qzR\-
UWATAVAWH
T$(E3
D$ E3
EgD+}gH
A_A^A\_]
UWATAVAWH
A_A^A\_]
x AWH
@USVWAVH
PA^_^[]
` UAVAWH
A_A^]
psWr"
qHPr&
UWATAUAWH
D$0E3
A_A]A\_]
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
UVWATAUAVAWH
A_A^A]A\_^]
p1VZ|
t$ WATAUAVAWH
fD9:tYL
pzR\-
Hc\$`
0A_A^A]A\_
t$ WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
pzR\-
` AUAVAWH
0A_A^A]
x AVH
WATAUAVAWH
0A_A^A]A\_
VWAVH
pzR\-
@USVATAUAVAWH
A_A^A]A\^[]
@USVWATAUAVAWH
D$ E3
A_A^A]A\_^[]
|$ UH
|$ UH
WATAUAVAWH
A_A^A]A\_
x AUAVAWH
A_A^A]
UWATAVAWH
pzR\-
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
x AVH
VWAVH
@A^_^
WAVAWH
@A_A^_
VWATAVAWH
fD9:tPL
pzR\-
Hc\$`
D9<+t
0A_A^A\_^
t$ WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
0A_A^A]A\_
pzR\-
` AUAVAWH
0A_A^A]
x AVH
WATAUAVAWH
0A_A^A]A\_
WATAUAVAWH
Gh9Gd
Gh9Gd
Q09Q4|TA
Gh9Gdt
g4HcW0
0A_A^A]A\_
ATAVAWH
0A_A^A\
p AWH
x AVH
WAVAWH
 A_A^_
WAVAWH
D9{4uY
uMD9{<wG
 A_A^_
H USH
H SVWH
L$ SVWH
L$ SVWH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
[%ws] Sent to TWAIN Source, DG = %X, DT = %X, MSG = %X
ImportedDSEntry
FindFirstImportDS - CoInitialize
FindFirstImportDS
Found Device ID %ws
FindNextImportDS
Unable to get DEV_TYPE, hr = %lx
CloseFindContext - CoUnIntialize()
CloseFindContext
LoadImportDS - CoInitialize()
LoadImportDS
UnloadImportDS - CoUnInitialize()
UnloadImportDS
Local\SM0:%lu:%lu:%hs
CCap::GetCurrent(), Extracting %d index from TWON_ENUMERATION
CCap::GetCurrent
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_ONEVALUE
CCap::Set
Application wanted to set (%d) as the value.
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_RANGE
CCap::Set(TW_CAPABILITY *ptwCap) -> TWON_ENUMERATION
Application sent this Enumeration to be set:
We are a natural TWON_ENUMERATION
Our List contains:
We are not a natural TWON_ENUMERATION.
Found Item %d!
Could not find Item %d!
Set the application's enumeration
What does our new enumeration look like?
What is this container type [%X]???
CCap::Debug_DumpEnumerationValues(), Enumeration Value debug dump
CCap::Debug_DumpEnumerationValues
Enumeration Values:
ItemType     = %d
NumItems     = %d
CurrentIndex = %d
DefaultIndex = %d
Enumeration Values: (current internal settings)
TWAIN_32.DLL
DSM_Entry
FlipDIB, src height = %d
FlipDIB
WriteDIBToFile, could not write the BITMAPINFOHEADER, palette, and data to file %s
WriteDIBToFile
WriteDIBToFile, could not write the BITMAPFILEHEADER to file %s
WriteDIBToFile, could not create the file %s
WIA File Format WiaImgFmt_UNDEFINED does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_EMF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_WMF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_GIF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_PHOTOCD does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_ICO does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_CIFF does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_JPEG2K does not MAP to TWAIN a file format
WIA File Format WiaImgFmt_JPEG2KX does not MAP to TWAIN a file format
Twain Data Source On WIA
CWiaDataSrc::IWiaDataSrc(), WIA Device object Initialize failed
CWiaDataSrc::IWiaDataSrc
26 June 2000
UnknownProduct
UnknownMfg
CWiaDataSrc::IWiaDataSrc(), GetDeviceDesc/Name failed
CWiaDataSrc::IWiaDataSrc(), GetDeviceVendorName failed
Sent to TWAIN Application, DG = %X, DT = %X, MSG = %X, ( TWRC = %X, TWCC = %X)
CWiaDataSrc::DSEntry
CWiaDataSrc::NotifyCloseReq()
CWiaDataSrc::NotifyCloseReq
CWiaDataSrc::NotifyCloseReq(), MSG_CLOSEDSREQ is sent to application
CWiaDataSrc::NotifyCloseReq(), could not notify application for MSG_CLOSEDSREQ
CWiaDataSrc::NotifyXferReady()
CWiaDataSrc::NotifyXferReady
CWiaDataSrc::NotifyXferReady(), MSG_XFERREADY is sent to application
CWiaDataSrc::NotifyXferReady(), could not notify application for MSG_XFERREADY
CWiaDataSrc::ResetMemXfer()
CWiaDataSrc::OnPalette8Msg()
CWiaDataSrc::OnSetupMemXferMsg()
CWiaDataSrc::OnSetupFileXferMsg()
CWiaDataSrc::OnXferGroupMsg()
CWiaDataSrc::OnImageInfoMsg()
CWiaDataSrc::OnImageInfoMsg
CWiaDataSrc::OnImageInfoMsg(), Possible unknown length device detected..checking cached height value
CWiaDataSrc::OnImageInfoMsg(), no cached height available, defaulting to -1 (ICAP_UNDEFINEDIMAGESIZE support only)
CWiaDataSrc::OnImageInfoMsg(), new height = %d
CWiaDataSrc::OnImageInfoMsg(), Reported Image Information from data source
XResolution     = %d.%d
YResolution     = %d.%d
ImageWidth      = %d
ImageLength     = %d
SamplesPerPixel = %d
BitsPerSample   = [%d],[%d],[%d],[%d],[%d],[%d],[%d],[%d]
BitsPerPixel    = %d
Planar          = %d
PixelType       = %d
Compression     = %d
CWiaDataSrc::OnIdentityMsg()
CWiaDataSrc::OnIdentityMsg
CWiaDataSrc::OnIdentityMsg(), Reported TW_IDENTITY from data source
Id            = %d
Manufacturer  = %s
ProductFamily = %s
ProductName   = %s
ProtocolMajor = %d
ProtocolMinor = %d
SupportedGrps = %d
Ver Country   = %d
Ver Info      = %s
Ver Language  = %d
Ver MajorNum  = %d
Ver MinorNum  = %d
CWiaDataSrc::OnUserInterfaceMsg()
CWiaDataSrc::OnCapabilityMsg()
CWiaDataSrc::OnCapabilityMsg
(%d) Private Capability ID reported = %x
Couldn't find the CCap object for CAP ID %x in TWAIN Compat layer CAP list, try WIA driver's private TWAIN cap list
CWiaDataSrc::OnPrivateCapabilityMsg()
CWiaDataSrc::OnPrivateCapabilityMsg
== Private TWAIN_CAPABILITY data Header ==
twCap.lSize     = %d
twCap.lMSG      = %d
twCap.lCapID    = %x
twCap.lConType  = %d
twCap.lCC       = %d
twCap.lRC       = %d
twCap.lDataSize = %d
== Processing MSG_SET or MSG_RESET Capability Message ==
dwInDataSize        = %d
dwOutDataSize       = %d
dwActualOutDataSize = %d
dwContainerSize     = %d
Container data was successfully copied, we are processing a MSG_SET
could not copy TWAIN container data into private capability IN buffer
No Container data was copied, because we are processing a MSG_RESET
== Returned TWAIN_CAPABILITY data Header from WIA device ==
pHeader->lSize     = %d
pHeader->lMSG      = %d
pHeader->lCapID    = %x
pHeader->lConType  = %d
pHeader->lCC       = %d
pHeader->lRC       = %d
pHeader->lDataSize = %d
pIWiaItemExtras->Escape Failed
Escape(code = %d, pInData = %p, dwInDataSize = %d, pOutData = %p, dwOutDataSize = %d,dwActualOutDataSize = %p)
could not allocate memory for private capability OUT buffer
could not allocate memory for private capability IN buffer
== Processing MSG_GET, MSG_GETCURRENT, or MSG_GETDEFAULT Capability Message ==
could not copy private capability buffer into TWAIN container data
WIA driver failed the TWAIN capability request, by returning a TWAIN failure return code in the OUT header.
pIWiaItemExtras->Escape Failed (sending passthrough operation)
Escape(code = %d, pInData = %p, dwInDataSize = %d, pOutData = %p, dwOutDataSize = %d,dwActualOutDataSize = %d)
OUT buffer size (%d) returned from the WIA driver is too small to contain data
OUT buffer size (%d) returned from the WIA driver is too small to contain a proper header
pIWiaItemExtras->Escape Failed (requesting OUT buffer size)
could not get TWAIN capability from TWAIN message
QueryInterface for IWiaItemExtras Failed
no current item selected for use
incoming TWAIN capability is NULL
CWiaDataSrc::AllocatePrivateCapBuffer()
CWiaDataSrc::CopyContainerToPrivateCapBuffer()
CWiaDataSrc::CopyPrivateCapBufferToContainer()
CWiaDataSrc::SetCapability()
CWiaDataSrc::OnStatusMsg()
CWiaDataSrc::OnImageMemXferMsg()
CWiaDataSrc::OnImageMemXferMsg
Transferring %d bit data
CWiaDataSrc::OnImageMemXferMsg(), Transferring (%d) of (%d) total lines of image data.
TWAIN Application wants to work with a HANDLE
TWAIN Application wants to work with a POINTER
TWAIN Application gave us nothing to work with
CWiaDataSrc::OnImageFileXferMsg()
CWiaDataSrc::OnImageFileXferMsg
CWiaDataSrc::OnImageFileXferMsg(), TransferToFile() failed
CWiaDataSrc::OnImageNativeXferMsg()
CWiaDataSrc::OnImageNativeXferMsg
CWiaDataSrc::OnImageNativeXferMsg(), TransferToDIB() failed
CWiaDataSrc::OpenDS()
CWiaDataSrc::CloseDS()
CWiaDataSrc::DisableDS()
CWiaDataSrc::CreateCapList()
CWiaDataSrc::DestroyCapList()
CWiaDataSrc::DSError()
(Transitioning From TWAIN STATE %d to TWAIN STATE %d)
CWiaDataSrc::SetTWAINState
CWiaDataSrc::ReadTwainRegistryDWORDValue()
CWiaDataSrc::ReadTwainRegistryDWORDValue
Software\Microsoft\WIA\TwainCompatLayer
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Created Root Twain Registry Key
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Reading %ws Registry Key Value = %d
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Writing Default Value for %ws Registry Key Value = %d
CWiaDataSrc::ReadTwainRegistryDWORDValue(), Error Reading %ws Registry Key Value
CWiaDataSrc::ReadTwainRegistryDWORDValue(), could not open Root TWAIN Registry Key
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice()
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice(), ppCapArray is NULL
WIA device reported %d private TWAIN supported CAPS
pIWiaItemExtras->Escape Failed (sending a request for the cability array data)
could not allocate memory for private capability array of %d items (%d bytes - this includes padding)
No private supported caps reported from WIA device
pIWiaItemExtras->Escape Failed (sending a request for the number of capabilities)
CWiaDataSrc::GetPrivateSupportedCapsFromWIADevice(), m_pDevice is NULL
CWiaDataSrc::TransferToFile()
CWiaDataSrc::TransferToFile
CWiaDataSrc::TransferToFile(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::TransferToDIB()
CWiaDataSrc::TransferToDIB
CWiaDataSrc::TransferToDIB(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::TransferToMemory()
CWiaDataSrc::TransferToMemory
CWiaDataSrc::TransferToMemory(), WIA_ERROR_PAPER_EMPTY returned from source.
CWiaDataSrc::GetCachedImage()
CWiaDataSrc::TransferToThumbnail()
CWiaDataSrc::GetCommonSettings()
CWiaDataSrc::GetCommonSettings
CWiaDataSrc::GetCommonSettings(), failed to set IWiaItem for property writing
CWiaDataSrc::GetCommonSettings(), failed to set TYMED_CALLBACK as a default setting
CWiaDataSrc::GetCommonSettings(), failed to set WiaImgFmt_MEMORYBMP as a default setting
CWiaDataSrc::GetCommonSettings(), GetImageFileFormats()
CWiaDataSrc::GetCommonSettings(), GetBitDepths() failed
CWiaDataSrc::GetCommonSettings(), GetCompressionTypes() failed
CWiaDataSrc::GetCommonSettings(), GetPixelTypes() failed
CWiaDataSrc::GetCommonDefaultSettings()
CWiaScannerDS::GetPixelTypes()
CWiaDataSrc::GetPixelTypes
CWiaDataSrc::GetPixelTypes(), failed to set IWiaItem for property reading
WIA driver supports WIA_DATA_THERSHOLD -> TWPT_BW
WIA driver supports WIA_DATA_GRAYSCALE -> TWPT_GRAY
WIA driver supports WIA_DATA_COLOR -> TWPT_RGB
WIA Data Type (%d) does not MAP to TWAIN a pixel type
CWiaDataSrc::GetPixelTypes(), failed to allocate Pixel Type Array Memory
CWiaDataSrc::GetPixelTypes(), failed to read WIA_IPS_DATATYPE attributes
CWiaDataSrc::GetPixelTypes(), failed to read WIA_IPS_DATATYPE current value
CWiaScannerDS::GetBitDepths()
CWiaDataSrc::GetBitDepths
CWiaDataSrc::GetBitDepths(), failed to set IWiaItem for property reading
WIA driver supports %d bit depth
CWiaDataSrc::GetBitDepths(), ReadPropertyLong(WIA_IPA_DEPTH) failed
CWiaDataSrc::GetBitDepths(), WritePropertyLong(WIA_IPA_DATATYPE) failed
CWiaDataSrc::GetBitDepths(), failed to read WIA_IPS_DATATYPE attributes
CWiaDataSrc::GetBitDepths(), ReadPropertyLong(WIA_IPA_DATATYPE) failed
CWiaScannerDS::GetImageFileFormats()
CWiaDataSrc::GetImageFileFormats
CWiaDataSrc::GetImageFileFormats(), failed to set IWiaItem for property reading
WIA driver supports WiaImgFmt_TIFF (Multipage) -> TWFF_TIFFMULTI
WIA driver supports WiaImgFmt_BMP -> TWFF_BMP
WIA driver supports WiaImgFmt_JPEG -> TWFF_JFIF
WIA driver supports WiaImgFmt_TIFF -> TWFF_TIFF
WIA driver supports WiaImgFmt_PICT -> TWFF_PICT
WIA driver supports WiaImgFmt_PNG -> WiaImgFmt_PNG
WIA driver supports WiaImgFmt_EXIF -> TWFF_EXIF
WIA driver supports WiaImgFmt_FLASHPIX -> TWFF_FPX
CWiaDataSrc::GetImageFileFormats(), pIWiaDataTransfer->idtEnumWIA_FORMAT_INFO() failed to enumerate supported file formats
CWiaDataSrc::GetImageFileFormats(), QueryInterface(IID_IWiaDataTransfer) failed
CWiaScannerDS::GetCompressionTypes()
CWiaScannerDS::SetCommonSettings()
CWiaDataSrc::SetCommonSettings
CWiaDataSrc::SetCommonSettings(), failed to set IWiaItem for property reading
CWiaDataSrc::SetCommonSettings(ICAP_PIXELTYPE)
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_THRESHOLD
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_THRESHOLD failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_GRAYSCALE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_GRAYSCALE failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_COLOR
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_DATATYPE to WIA_DATA_COLOR failed
CWiaDataSrc::SetCommonSettings(), An unsupported ICAP_PIXELTYPE (%d) was sent to this data source
CWiaDataSrc::SetCommonSettings(ICAP_BITDEPTH)
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_BITDEPTH to %d
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_BITDEPTH to %d failed
CWiaDataSrc::SetCommonSettings(ICAP_IMAGEFILEFORMAT)
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to TYMED_MULTIPAGE_FILE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to TYMED_FILE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_TIFF
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_PICT
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_BMP
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_JPEG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_FLASHPIX
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_PNG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to WiaImgFmt_EXIF
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_FORMAT to %d failed
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_TYMED to %d failed
CWiaDataSrc::SetCommonSettings(ICAP_COMPRESSION)
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_NONE
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_G4
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_JPEG
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_BI_RLE4
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_BI_RLE8
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to WIA_COMPRESSION_G3
CWiaDataSrc::SetCommonSettings(), Setting WIA_IPA_COMPRESSION to %d failed
CWiaDataSrc::SetCommonSettings(), data source is not setting CAPID = %x to WIA device (it is not needed)
CWiaDataSrc::SetCommonSettings(), Settings were successfully sent to WIA device
CWiaDataSrc::SetCommonSettings(), Settings were unsuccessfully sent to WIA device
CWiaScannerDS::GetMemoryTransferBits()
CWiaDevice::Initialize()
CWiaDevice::Initialize
CWiaDevice::Initialize(), Reported Device Information from WIA device
Device ID          = %ws
Device Name        = %ws
Device Desc        = %ws
Device Vendor Desc = %ws
Device STI Version = 0x%08X
comparing Device ID [in] = %ws, to Device ID [read] = %ws
CWiaDevice::Open()
CWiaDevice::Close()
CWiaDevice::GetDeviceDesc()
CWiaDevice::GetDeviceVendorName()
CWiaDevice::GetDeviceName()
CWiaDevice::AcquireImages()
CWiaDevice::AcquireImages
CWiaDevice::AcquireImages(), called for UI mode Initialization
CWiaDevice::AcquireImages(),Number of images from DeviceDlg to Transfer = %d
CWiaDevice::AcquireImages(), called for UI-LESS mode Initialization
or...DS needs information for CAPABILITY initialization
CWiaDevice::CollectImageItems()
CWiaDevice::FreeAcquiredImages()
CWiaDevice::FreeAcquiredImages
CWiaDevice::FreeAcquiredImages(), Freeing %d IWiaItems
CWiaDevice::FreeAcquiredImages(), Free IWiaItem (%d)
CWiaDevice::FreeAcquiredImages(), Finished Freeing IWiaItem (%d)
CWiaDevice::GetNumAcquiredImages()
CWiaDevice::GetAcquiredImageList()
CWiaDevice::EnumAcquiredImages()
CWiaDevice::GetImageInfo()
CWiaDevice::GetImageInfo
CWiaDevice::GetImageInfo(), failed to set IWiaItem for property reading
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_DATATYPE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_CHANNELS_PER_PIXEL
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_BITS_PER_CHANNEL
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_PIXELS_PER_LINE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_BYTES_PER_LINE
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_PLANAR
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_NUMBER_OF_LINES
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_DEPTH
CWiaDevice::GetImageInfo(), failed to read WIA_IPS_XRES
CWiaDevice::GetImageInfo(), S_FALSE was returned from reading X Resolution, defaulting to 300 dpi (dummy value)
CWiaDevice::GetImageInfo(), failed to read WIA_IPS_YRES
CWiaDevice::GetImageInfo(), S_FALSE was returned from reading Y Resolution, defaulting to 300 dpi (dummy value)
CWiaDevice::GetImageInfo(), failed to read WIA_IPA_FORMAT
CWiaDevice::GetThumbnailImageInfo()
CWiaDevice::GetThumbnailImageInfo
CWiaDevice::GetThumbnailImageInfo(), failed to set IWiaItem for property reading
CWiaDevice::GetThumbnailImageInfo(), failed to read WIA_IPC_THUMB_WIDTH
CWiaDevice::GetThumbnailImageInfo(), failed to read WIA_IPC_THUMB_HEIGHT
CWiaDevice::LoadImage()
CWiaDevice::LoadImageW
CWiaDevice::LoadImage(), failed to set IWiaItem for property writing
CWiaDevice::LoadImage(), failed to write WIA_IPA_TYMED
CWiaDevice::LoadImage(), failed to write WIA_IPA_FORMAT
CWiaDevice::LoadImage(), failed to read WIA_IPA_MIN_BUFFER_SIZE, (defaulting to %d)
CWiaDevice::LoadImage(), failed to (Saving IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImage(), failed to (Restoring IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImageToDisk()
CWiaDevice::LoadImageToDisk
CWiaDevice::LoadImageToDisk(), failed to set IWiaItem for property writing
CWiaDevice::LoadImageToDisk(), failed to write WIA_IPA_TYMED
CWiaDevice::LoadImageToDisk(), failed to write WIA_IPA_FORMAT
CWiaDevice::LoadImageToDisk(), failed to (Saving IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::LoadImageToDisk(), GetFullPathNameW failed, failing with 0x%lx
CWiaDevice::LoadImageToDisk(), path name too long, failing with 0x%lx
CWiaDevice::LoadImageToDisk(), cannot allocate memory for the path name, failing with 0x%lx
CWiaDevice::LoadImageToDisk(), failed to (Restoring IMessageFilter) CoRegisterMessageFilter..(Server Busy code fix)
CWiaDevice::GetBasicScannerInfo(), failed to set IWiaItem for property reading
CWiaDevice::GetBasicScannerInfo
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_DOCUMENT_HANDLING_CAPABILITIES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_OPTICAL_XRES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_OPTICAL_YRES
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_HORIZONTAL_BED_SIZE
CWiaDevice::GetBasicScannerInfo(), WIA_DPS_HORIZONTAL_BED_SIZE property not found
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_HORIZONTAL_SHEET_FEED_SIZE
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_VERTICAL_BED_SIZE
CWiaDevice::GetBasicScannerInfo(), WIA_DPS_VERTICAL_BED_SIZE property not found
CWiaDevice::GetBasicScannerInfo(), failed to read WIA_DPS_VERTICAL_SHEET_FEED_SIZE
CWiaDevice::TwainCapabilityPassThrough(), failed to set IWiaItem for property reading
CWiaDevice::TwainCapabilityPassThrough
CWiaDevice::TwainCapabilityPassThrough(), failed to read WIA_IPA_ITEM_FLAGS
CWiaDevice::LoadThumbnail()
CWiaDevice::LoadThumbnail
CWiaDevice::LoadThumbnail(), failed to set IWiaItem for property writing
CWiaDevice::LoadThumbnail(), Reported thumbnail information
Width     = %d
Height    = %d
Data Size = %d
CWiaDevice::LoadThumbnail(), freeing temporary thumbnail buffer
CWiaDevice::LoadThumbnail(), finished freeing temporary thumbnail buffer
CWiaEventCallback::ImageEventCallback()
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TWON_ONEVALUE
CWiaCameraDS::SetCapability
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_RANGE
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_ARRAY
CWiaCameraDS::SetCapability(), setting ICAP_IMAGEDATASET unknown container type (%d)
CWiaCameraDS::SetArrayOfImageIndexes(), invalid image index container was sent to data source.
CWiaCameraDS::SetArrayOfImageIndexes
CWiaCameraDS::SetArrayOfImageIndexes(), number of selected images to transfer = %d
CWiaCameraDS::SetArrayOfImageIndexes(), image index copied into index array = %d
CWiaCameraDS::SetArrayOfImageIndexes(), could not allocate image index array
CWiaCameraDS::SetArrayOfImageIndexes(), could not assign TW_ARRAY pointer to TW_UINT32 pointer
CWiaCameraDS::SetArrayOfImageIndexes(), could not LOCK the array container for write access
CWiaCameraDS::SetRangeOfImageIndexes(), invalid image index container was sent to data source.
CWiaCameraDS::SetRangeOfImageIndexes
CWiaCameraDS::SetRangeOfImageIndexes(), Set to the following Range Values
m_twImageRange.ItemType     = %d
m_twImageRange.CurrentValue = %d
m_twImageRange.DefaultValue = %d
m_twImageRange.MaxValue     = %d
m_twImageRange.MinValue     = %d
m_twImageRange.StepSize     = %d
CWiaCameraDS::SetRangeOfImageIndexes(), could not assign TW_RANGE pointer to TW_RANGE pointer
CWiaCameraDS::SetRangeOfImageIndexes(), could not LOCK the range container for read access
CWiaCameraDS::EnableDS(), TWAIN UI MODE
CWiaCameraDS::EnableDS
CWiaCameraDS::EnableDS(), TWAIN UI-LESS MODE
CWiaCameraDS::EnableDS(), RANGE MODE
CWiaCameraDS::EnableDS(), ARRAY MODE
CWiaCameraDS::EnableDS(), could not find CAP_XFERCOUNT in supported CAP list
CWiaCameraDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaCameraDS::OnPendingXfersMsg
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, 0 (no more images left to transfer)
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, %d (more images may be ready to transfer)
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed RANGE index
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, next image index  to acquire = %d
CWiaCameraDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed ARRAY index
CWiaCameraDS::OnImageInfoMsg(), could not get CAP_THUMBNAILSENABLED capabilty settings
CWiaCameraDS::OnImageInfoMsg
CWiaCameraDS::OnImageInfoMsg(), Reporting Thumbnail image information
CWiaCameraDS::OnImageInfoMsg(), Reported Image Information from data source
CWiaScannerDS::OpenDS()
CWiaScannerDS::OpenDS
EnableMultiPageScrollFed
CWiaScannerDS::OpenDS(), GetBasicScannerInfo() failed
CWiaScannerDS::OpenDS(), Reported Basic Scanner Information from WIA device
BasicInfo.Size        = %d
BasicInfo.xBedSize    = %d
BasicInfo.yBedSize    = %d
BasicInfo.xOpticalRes = %d
BasicInfo.yOpticalRes = %d
BasicInfo.FeederCaps  = %d
Setting feeder enabled to TRUE, because we have a document feeder
Setting feeder loaded to TRUE, because we have a document feeder and assume it is loaded
CWiaScannerDS::OnImageLayoutMsg()
CWiaScannerDS::OnImageLayoutMsg
CWiaScannerDS::OnImageLayoutMsg(), MSG_SET TW_IMAGELAYOUT to set from Application
DocumentNumber     = %d
PageNumber         = %d
FrameNumber        = %d
Frame.Top.Whole    = %d
Frame.Top.Frac     = %d
Frame.Left.Whole   = %d
Frame.Left.Frac    = %d
Frame.Right.Whole  = %d
Frame.Right.Frac   = %d
Frame.Bottom.Whole = %d
Frame.Bottom.Frac  = %d
Frame.Right.Whole Value (%d) is greater than MAX Right value (%d)
Frame.Bottom.Whole Value (%d) is greater than MAX Bottom value (%d)
CWiaScannerDS::CloseDS()
CWiaScannerDS::EnableDS()
CWiaScannerDS::EnableDS
CWiaScannerDS::EnableDS(), TWAIN UI MODE
CWiaScannerDS::EnableDS(), TWAIN UI-LESS MODE
CWiaScannerDS::TransferToFile(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToFile
CWiaScannerDS::TransferToFile(), Scanner device is set to FLATBED mode for transfer
CWiaScannerDS::TransferToDIB(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToDIB
CWiaScannerDS::TransferToDIB(), Scanner device is set to FLATBED mode for transfer
CWiaScannerDS::TransferToMemory(), Scanner device is set to FEEDER mode for transfer
CWiaScannerDS::TransferToMemory
CWiaScannerDS::TransferToMemory(), Scanner device is set to FLATBED mode for transfer
CWiaDataSrc::GetCachedImage(), failed to return cached data
CWiaDataSrc::TransferToMemory(), failed to return data
CWiaScannerDS::OnPendingXfersMsg()
CWiaScannerDS::OnPendingXfersMsg
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning %d (unknown page length device detected) MULTI-PAGE enabled
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning 0 (unknown page length device detected)
CWiaScannerDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER (unknown page length device detected) MULTI-PAGE enabled
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER returning 0 (unknown page length device detected)
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, -1 or (32767) (feeder may have more documents)
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, no more pages to transfer
CWiaScannerDS::OnPendingXfersMsg(), MSG_ENDXFER, more pages to transfer
CWiaScannerDS::SetImageLayout()
CWiaScannerDS::SetImageLayout
CWiaScannerDS::SetImageLayout(), failed to set IWiaItem for property reading
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XPOS
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YPOS
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XEXTENT
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_XRES
CWiaScannerDS::SetImageLayout(), failed to read WIA_IPS_YRES
===============================================================================
CWiaScannerDS::SetImageLayout(), WIA extents from device at %d dpi(x), %d dpi(y)
CWiaScannerDS::SetImageLayout(), Current X Position = %d
CWiaScannerDS::SetImageLayout(), Current Y Position = %d
CWiaScannerDS::SetImageLayout(), Current X Extent   = %d
CWiaScannerDS::SetImageLayout(), Current Y Extent   = %d
CWiaScannerDS::SetImageLayout(),TWAIN extents to convert..
CWiaScannerDS::SetImageLayout(),TWAIN X Position = %f
CWiaScannerDS::SetImageLayout(),TWAIN Y Position = %f
CWiaScannerDS::SetImageLayout(),TWAIN X Extent   = %f
CWiaScannerDS::SetImageLayout(),TWAIN Y Extent   = %f
TWAIN -> WIA extent conversion at %d dpi(x), %d dpi(y)
CWiaScannerDS::SetImageLayout(), New X Position = %d
CWiaScannerDS::SetImageLayout(), New Y Position = %d
CWiaScannerDS::SetImageLayout(), New X Extent   = %d
CWiaScannerDS::SetImageLayout(), New Y Extent   = %d
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_XEXTENT
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_YEXTENT
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_XPOS
CWiaScannerDS::SetImageLayout(), failed to write WIA_IPS_YPOS
CWiaScannerDS::SetImageLayout(), some settings could not be set exactly, so return TWRC_CHECKSTATUS
CWiaScannerDS::SetImageLayout(), ImageLayout is does not make since when using a UnknownPageLength Device
CWiaScannerDS::GetImageLayout()
CWiaScannerDS::GetImageLayout
CWiaScannerDS::GetImageLayout(), failed to set IWiaItem for property reading
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XPOS
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YPOS
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XEXTENT
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_XRES
CWiaScannerDS::GetImageLayout(), failed to read WIA_IPS_YRES
CWiaScannerDS::GetImageLayout(), WIA_IPS_XRES returned an invalid value (%d)
CWiaScannerDS::GetImageLayout(), WIA_IPS_YRES returned an invalid value (%d)
CWiaScannerDS::GetImageLayout(), ImageLayout is does not make since when using a UnknownPageLength Device
CWiaScannerDS::GetResolutions()
CWiaScannerDS::GetResolutions
CWiaScannerDS::GetResolutions(), failed to set IWiaItem for property reading
CWiaScannerDS::GetResolutions(), failed to allocate optional Y Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to allocate X Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to read X Resolution current value
CWiaScannerDS::GetResolutions(), failed to read WIA_IPS_XRES attributes
CWiaScannerDS::GetResolutions(), failed to allocate Y Resolution Array Memory
CWiaScannerDS::GetResolutions(), failed to read Y Resolution current value
CWiaScannerDS::GetResolutions(), failed to read WIA_IPS_YRES attributes
CWiaScannerDS::GetSettings()
CWiaScannerDS::SetSettings()
CWiaScannerDS::SetSettings
CWiaScannerDS::SetSettings(), failed to set IWiaItem for property reading
CWiaScannerDS::SetCommonSettings(CAP_FEEDERENABLED)
CWiaScannerDS::SetSettings(), Setting FEEDER mode
CWiaScannerDS::SetSettings(), Setting FLATBED mode Enabled
CWiaScannerDS::SetSettings(), could not update TWAIN ICAP_PHYSICALHEIGHT settings
CWiaScannerDS::SetSettings(), could not find ICAP_PHYSICALHEIGHT capability
CWiaScannerDS::SetSettings(), failed to read physical sheet feeder size settings
CWiaScannerDS::SetCommonSettings(ICAP_XRESOLUTION)
CWiaScannerDS::SetSettings(), Setting X Resolution to %d
CWiaScannerDS::SetCommonSettings(ICAP_YRESOLUTION)
CWiaScannerDS::SetSettings(), Setting Y Resolution to %d
CWiaScannerDS::SetCommonSettings(ICAP_BRIGHTNESS)
CWiaScannerDS::SetSettings(), Setting WIA_IPS_BRIGHTNESS to %d
CWiaScannerDS::SetCommonSettings(ICAP_CONTRAST)
CWiaScannerDS::SetSettings(), Setting WIA_IPS_CONTRAST to %d
CWiaScannerDS::SetSettings(), data source is not setting CAPID = %x to WIA device (it is not needed)
CWiaScannerDS::SetSettings(), Settings were successfully sent to WIA device
CWiaScannerDS::SetSettings(), Settings were unsuccessfully sent to WIA device
CWiaScannerDS::IsUnknownPageLengthDevice()
CWiaScannerDS::IsUnknownPageLengthDevice
CWiaScannerDS::IsUnknownPageLengthDevice(), failed to set IWiaItem for property reading
CWiaScannerDS::IsUnknownPageLengthDevice(), failed to read WIA_IPS_YEXTENT
CWiaScannerDS::IsUnknownPageLengthDevice(), device is set to do unknown page length
CWiaScannerDS::IsUnknownPageLengthDevice(), device is not set to do unknown page length
CWiaScannerDS::IsFeederEnabled()
CWiaScannerDS::IsFeederEnabled
CWiaScannerDS::IsFeederEnabled(), failed to set IWiaItem for property reading
CWiaScannerDS::IsFeederEnabled(), failed to read WIA_DPS_DOCUMENT_HANDLING_SELECT
CWiaScannerDS::IsFeederEnabled(), WIA_DPS_DOCUMENT_HANDLING_SELECT was not found...defaulting to FLATBED
CWiaScannerDS::IsFeederEnabled(), failed to get ROOT IWiaItem from current IWiaItem
CWiaScannerDS::IsFeederEmpty()
CWiaScannerDS::IsFeederEmpty
CWiaScannerDS::IsFeederEmpty(), failed to set IWiaItem for property reading
CWiaScannerDS::IsFeederEmpty(), failed to read WIA_DPS_DOCUMENT_HANDLING_STATUS
CWiaScannerDS::IsFeederEmpty(), WIA_DPS_DOCUMENT_HANDLING_STATUS was not found
CWiaScannerDS::IsFeederEmpty(), failed to get ROOT IWiaItem from current IWiaItem
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TWON_ONEVALUE
CWiaVideoDS::SetCapability
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_RANGE
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET to a TW_ARRAY
CWiaVideoDS::SetCapability(), setting ICAP_IMAGEDATASET unknown container type (%d)
CWiaVideoDS::SetArrayOfImageIndexes(), invalid image index container was sent to data source.
CWiaVideoDS::SetArrayOfImageIndexes
CWiaVideoDS::SetArrayOfImageIndexes(), number of selected images to transfer = %d
CWiaVideoDS::SetArrayOfImageIndexes(), image index copied into index array = %d
CWiaVideoDS::SetArrayOfImageIndexes(), could not allocate image index array
CWiaVideoDS::SetArrayOfImageIndexes(), could not assign TW_ARRAY pointer to TW_UINT32 pointer
CWiaVideoDS::SetArrayOfImageIndexes(), could not LOCK the array container for write access
CWiaVideoDS::SetRangeOfImageIndexes(), invalid image index container was sent to data source.
CWiaVideoDS::SetRangeOfImageIndexes
CWiaVideoDS::SetRangeOfImageIndexes(), Set to the following Range Values
CWiaVideoDS::SetRangeOfImageIndexes(), could not assign TW_RANGE pointer to TW_RANGE pointer
CWiaVideoDS::SetRangeOfImageIndexes(), could not LOCK the range container for read access
CWiaVideoDS::EnableDS(), TWAIN UI MODE
CWiaVideoDS::EnableDS
CWiaVideoDS::EnableDS(), TWAIN UI-LESS MODE
CWiaVideoDS::EnableDS(), TWAIN UI MODE (FORCING UI MODE TO ON)
CWiaVideoDS::EnableDS(), RANGE MODE
CWiaVideoDS::EnableDS(), ARRAY MODE
CWiaVideoDS::EnableDS(), could not find CAP_XFERCOUNT in supported CAP list
CWiaVideoDS::OnPendingXfersMsg(), MSG_GET returning %d
CWiaVideoDS::OnPendingXfersMsg
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, 0 (no more images left to transfer)
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, %d (more images may be ready to transfer)
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed RANGE index
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, next image index  to acquire = %d
CWiaVideoDS::OnPendingXfersMsg(), MSG_ENDXFER, we are over our allowed ARRAY index
CWiaVideoDS::OnImageInfoMsg(), could not get CAP_THUMBNAILSENABLED capabilty settings
CWiaVideoDS::OnImageInfoMsg
CWiaVideoDS::OnImageInfoMsg(), Reporting Thumbnail image information
CWiaVideoDS::OnImageInfoMsg(), Reported Image Information from data source
Could not CoCreateInstance for IID_IWiaProgressDialog (latest operating system version)
CProgressDlg::DoModeless
failed to Create progress dialog, hr = %x
Could not get common progress dialog from shared UI, CoCreateInstance(CLSID_WiaDefaultUi) failed hr = %x
DoModeless Failed to create Progress Dialog
CWiaDataCallback::Initialize
pHeader->guidFormatID = WiaImgFmt_MEMORYBMP
CWiaDataCallback::BandedDataCallback
pHeader->guidFormatID = WiaImgFmt_RAWRGB
pHeader->guidFormatID = (unknown)
CWiaDataCallback::BandedDataCallback(), IT_MSG_DATA_HEADER Reports
pHeader->lBufferSize = %d
pHeader->lPageCount  = %d
pHeader->lSize       = %d
MemBlockSize         = %d
CWiaDataCallback::BandedDataCallback(), adjusting MemBlockSize to %d
Copying %d into m_pImage (m_hImage = 0x%X, m_pImage = 0x%X) buffer
Could not lock down m_hImage memory block
CWiaDataCallback::BandedDataCallback(), The transfer failed
CWiaDataCallback::BandedDataCallback(), The user pressed cancel
CWiaDataCallback::GetImage(), Returned 0x%X (HANDLE pointer)
CWiaDataCallback::GetImage
TraceWarning
Function
Message
TraceError
Function
Message
TraceInfo
Function
Message
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
SourceSessionStarted
DeviceId
DeviceName
DeviceVendor
DeviceFamily
IsLegacyDevice
StartState
SourceSessionEnded
EndState
Microsoft.Windows.Scan.WindowsImageAcquisition
Microsoft.Windows.Scan.WiaTwainCompat
RSDS\8
wiadss.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
WIADSS.DLL
CloseFindContext
FindFirstImportDS
FindImportDSByDeviceName
FindNextImportDS
GetLoaderStatus
LoadImportDS
UnloadImportDS
_vsnwprintf
memcpy_s
_vsnprintf
_strcmpi
malloc
_callnewh
_XcptFilter
_amsg_exit
_initterm
__C_specific_handler
msvcrt.dll
_lock
_unlock
__dllonexit
_onexit
EventUnregister
EventSetInformation
EventRegister
EventWriteTransfer
RegQueryValueExW
RegSetValueExW
RegCreateKeyExW
RegCloseKey
ADVAPI32.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
MultiByteToWideChar
FormatMessageW
GetLastError
OutputDebugStringW
DisableThreadLibraryCalls
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
WideCharToMultiByte
DebugBreak
IsDebuggerPresent
LocalAlloc
GlobalAlloc
GlobalFree
GlobalLock
LocalFree
GlobalUnlock
WriteFile
CreateFileA
LoadLibraryW
FreeLibrary
InitOnceBeginInitialize
lstrlenW
GlobalSize
InitOnceComplete
GetFullPathNameW
lstrcmpiW
GlobalReAlloc
Sleep
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
KERNEL32.dll
LoadStringW
USER32.dll
OLEAUT32.dll
CoInitialize
CoUninitialize
CoCreateInstance
PropVariantClear
CoTaskMemAlloc
FreePropVariantArray
CoTaskMemFree
CoRegisterMessageFilter
ole32.dll
COMCTL32.dll
EnterCriticalSection
LeaveCriticalSection
memcmp
memcpy
memset
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
WIA TWAIN compatibility layer
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WIADSS DLL
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WIADSS DLL
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
en-US
