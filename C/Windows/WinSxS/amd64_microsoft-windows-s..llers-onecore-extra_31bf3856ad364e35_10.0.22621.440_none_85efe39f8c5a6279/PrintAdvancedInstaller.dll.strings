!This program cannot be run in DOS mode.
{,Rich
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
x AVH
pcPZt
L$HH3
x UAUAVH
A^A]]
UWAVH
p:[pM
UWAVH
p:[pM
\$0E3
D$PH+
x UAVAWH
p:[pM
f9<Au
A_A^]
UATAUAVAWH
A_A^A]A\]
UVWAVAWH
)D$PI
pi\P 
A_A^_^]
f94Cu
UAVAWH
)D$@I
A_A^]
UWAVH
D$ E3
p:[pM
p:[pM
@USVWAVH
A^_^[]
@USVWATAUAVAWH
XA_A^A]A\_^[]
ATAVAWH
 A_A^A\
x AVH
@USVWAVH
fD94Hu
JfD92u
A^_^[]
@USVWAVH
fD94Hu
JfD92u
A^_^[]
x AVH
fE94Hu
fD94Bu
UVWATAUAVAWH
`A_A^A]A\_^]
D$ E3
UAVAWH
E'H!]
A_A^]
D$ E3
x UATAUAVAWH
A_A^A]A\]
D$0E3
x UATAUAVAWH
xdf;5*x
t$H9t$X
9t$X|SH
@8t$@t
A_A^A]A\]
UWAVH
D$pE3
t$pE3
D$ E3
fD94Au
|D~\t
D$(E3
D$ E3
UVWATAUAVAWH
`A_A^A]A\_^]
D$ E3
UAVAWH
E'H!]
A_A^]
VWAUAVAWH
 A_A^A]_^
UATAUH
A]A\]
l$ VWAVH
T$`!\$XE3
H!\$`H
D$XE3
D$ E3
t1@8h
0A^_^
D$(!\$ E3
D$0E3
#D$8H
D$XE3
H SWH
f9<Au
fD9DD t&A
L$(E3
D$pE3
t<fA9(t6I
q*Z~:
x AVH
D$0E3
|$ UATAUAVAWH
u.@8}
F8@88t
A_A^A]A\]
WAVAWH
0A_A^_
UVWAVAWH
t,D8=W
L9{Hu
A_A^_^]
D$8E3
@SUVWH
D$0L;
u#H!X
D$@E3
USVWAVH
A^_^[]
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
PA_A^A]A\_^]
L$ SWH
L$XH+
s WAVAWH
@A_A^_
UVWAVAWH
~0H+~(H
@A_A^_^]
@SUVWAVAWH
\$ fD
@u;L9;u$E3
L$@H3
XA_A^_^][
p WAVAWH
 A_A^_
WAVAWH
T$8L+
A_A^_
|$ UATAUAVAWH
A_A^A]A\]
@UVWAVAWH
H!t$XA
D$H!D$@
A_A^_^]
WATAUAVAWH
H9/sDH
 A_A^A]A\_
x AVH
rHfD97w
C9fD97u,
x AVH
H9;s!
x AVH
uPH9i
VWAVH
t$$fD
D$0D9r
@A^_^
L$ SVWH
@UVWAVAWH
0A_A^_^]
HcT$ H
HcL$$H
{ ATAVAWH
 A_A^A\
D$(E3
h UAVAWH
L$@I+
L$PH;
T$PM;
A_A^]
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
EnableRpcAI
CSI Print Advanced Installer
Enable RPC AI Called Offline.  AI has no work to do because the calling manifest does all of the necessary work
onecore\base\wcp\plugins\printadvancedinstaller\dll\enablerpcai.cpp
Windows::WCP::EnableRpcAI::BasicInstaller::Install
Not-null check failed: Services
Not-null check failed: Component
Not-null check failed: Success
EnableRpcEndPoints
EnableRpcAI::BasicInstaller::Install cannot set printer data because the spooler is not running.
EnableRpcAI::BasicInstaller::Install cannot set printer data because the spooler RPC endpoints are blocked.
dwRet
EnableRpcAI:Called online, Spooler is not running currently - OpenPrinter.
EnableRpcAI:Called online, Exiting EnableRPCEndPoint - dwRet = {dwRet}.
EnableRpcAI Install Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
static_cast<DWORD>(12L)
Enable RPC AI Uninstall Called.  AI has no work to do because the calling manifest does all of the necessary work via registry
ServicesActive
IsSpoolerRunning failed to open SCM with HRESULT {hr}.
spooler
IsSpoolerRunning failed to open the spooler service with HRESULT {hr}.
IsSpoolerRunning failed to query service status with HRESULT {hr}.
Running
Not Running
IsSpoolerRunning: The spooler is {str}.
SetupIppAI
onecore\base\wcp\plugins\printadvancedinstaller\dll\setupippai.cpp
Windows::WCP::SetupIppAI::BasicInstaller::Install
InstallWebPrinting()
OpenPrinterW(0, &hServer, &Defaults)
WebShareMgmt
SetPrinterDataW(hServer, L"WebShareMgmt", dwType, (LPBYTE)&dwInstallWebPrinting, sizeof(dwInstallWebPrinting))
SetupIppAI Install called in phase other than PHASE_CMI_PASS_ONLINE
Uninstalling Internet Print Provider
Windows::WCP::SetupIppAI::BasicInstaller::Uninstall
RemoveWebPrinting()
SetupIppAI::BasicInstaller::Uninstall was unable to SetPrinterData because IIS has been uninstalled.
dwLastError
SetupIppAI Uninstall called in phase other than PHASE_CMI_PASS_UNINSTALL_ONLINE
Windows::WCP::SetupIppAI::BasicInstaller::InstallWebPrinting
coInit.InitMultithreaded()
pIMetaBase.CoCreateInstance(CLSID_MSAdminBase_W, 0, (CLSCTX_INPROC_SERVER| CLSCTX_INPROC_HANDLER| CLSCTX_LOCAL_SERVER| CLSCTX_REMOTE_SERVER))
AddVirtualDir(pIMetaBase)
AddWebExtension()
AddScriptAtPrinterVDir(pIMetaBase)
AddMimeType(pIMetaBase)
Adding the Virtual Dir
Windows::WCP::SetupIppAI::BasicInstaller::AddVirtualDir
pIMetaBase->OpenKey(0, cszW3SvcRootPath, 0x00000001 | 0x00000002, 1000, &hMeta)
SetupIppAI::BasicInstaller::AddVirtualDir was unable to add key with HRESULT {hr}.
Writing our virtual dir.
%ws\web\printers
StringCchPrintfW(szVirPath, sizeof(*__countof_helper(szVirPath)), L"%ws\\web\\printers", cszWindowsDir)
pIMetaBase->SetData(hMeta, cszPrinters, &mr)
ipp_0001.asp
IIsWebVirtualDir
Adding the Web Extension
Windows::WCP::SetupIppAI::BasicInstaller::AddWebExtension
pszGroupDesc
StringCchPrintfW(szExtPath, sizeof(*__countof_helper(szExtPath)), cszExtPathFmt, cszSystemDir)
bstrAppHostConfigPath
bstrCgiRestriction
bstrAdd
pAdminMgr.CoCreateInstance(__uuidof(AppHostWritableAdminManager), 0, CLSCTX_INPROC_SERVER)
pAdminMgr->GetAdminSection(bstrCgiRestriction, bstrAppHostConfigPath, &pCgiRestrictionSection)
pCgiRestrictionSection->get_Collection(&pCgiRestrictionCollection)
pCgiRestrictionCollection->CreateNewElement(bstrAdd, &pNewCgiRestrictionElement)
SetElementStringProperty(pNewCgiRestrictionElement, L"path", szExtPath)
allowed
SetElementStringProperty(pNewCgiRestrictionElement, L"allowed", L"true")
groupId
SetElementStringProperty(pNewCgiRestrictionElement, L"groupId", cszGroupId)
description
SetElementStringProperty(pNewCgiRestrictionElement, L"description", (LPWSTR) pszGroupDesc)
pCgiRestrictionCollection->AddElement(pNewCgiRestrictionElement)
pAdminMgr->CommitChanges()
bstrApplicationDependencies
bstrApplication
pAdminMgr->GetAdminSection(bstrApplicationDependencies, bstrAppHostConfigPath, &pApplicationDependenciesSection)
pApplicationDependenciesSection->get_Collection(&pApplicationDependenciesCollection)
pApplicationDependenciesCollection->CreateNewElement(bstrApplication, &pNewApplicationDependenciesElement)
SetElementStringProperty(pNewApplicationDependenciesElement, L"name", pszGroupDesc)
SetElementStringProperty(pNewApplicationDependenciesElement, L"groupId", cszASPId)
pApplicationDependenciesCollection->AddElement(pNewApplicationDependenciesElement)
Adding the ScriptMap
Windows::WCP::SetupIppAI::BasicInstaller::AddScriptAtPrinterVDir
pIMetaBase->OpenKey(0, L"/LM", 0x00000001 | 0x00000002, 1000, &hMeta)
pszFullFormat.Allocate(dwMDRequiredDataLen)
pIMetaBase->GetData(hMeta, cszW3Svc, &mr, &dwMDRequiredDataLen)
((HRESULT)0x80004005L)
StringCchLengthW(pszAspMapping, 2147483647, &cszAspMapping)
pszScriptMap.Allocate(nLen)
StringCchPrintfExW(pszScriptMap.Elements, nLen, &pszNewPos, 0, 0, szScritMapFmt, pszAspMapping, L'\0', cszSystemDir, L'\0')
pIMetaBase->SetData(hMeta, szPrinterVDir, &mr)
Adding the MimeType
Windows::WCP::SetupIppAI::BasicInstaller::AddMimeType
pszCurrentMimeMap.Allocate(dwCurrentMapBytes)
pIMetaBase->GetData(hMeta, cszMimeMap, &mr, &dwNewMapBytes)
.webpnp
((HRESULT)0x8007000EL)
pszNewMimeMap.Allocate(nLen / sizeof(WCHAR))
StringCchCopyW(pszWebPnPMap, dwWebPnPMapLen, cszWebPnPMap)
pIMetaBase->SetData(hMeta, cszMimeMap, &mr)
Removing Web Printing
error
SetupIppAI::BasicInstaller::RemoveWebPrinting was unable to open W3SVC registry key with error {error}.
Windows::WCP::SetupIppAI::BasicInstaller::RemoveWebPrinting
SetupIppAI::BasicInstaller::RemoveWebPrinting was unable to initialize the IIS metabase because it has been uninstalled.
SetupIppAI::BasicInstaller::RemoveWebPrinting was unable to delete key with HRESULT {hr}.
RemoveWebExtension()
pszScripts.Allocate(dwMDRequiredDataLen)
pIMetaBase->GetData(hMeta, cszW3Svc, &mr, &dwNewRequiredDataLen)
WriteStrippedScriptValue(pIMetaBase, hMeta, pszScripts.Elements, dwMDRequiredDataLen)
pszMimeMap.Allocate(dwMDRequiredDataLen / sizeof(WCHAR))
pIMetaBase->GetData(hMeta, cszMimeMap, &mr, &dwNewRequiredDataLen)
WriteStrippedMimeMapValue(pIMetaBase, hMeta, pszMimeMap.Elements, dwMDRequiredDataLen)
pIMetaBase->SaveData()
Removing Web Extension
Windows::WCP::SetupIppAI::BasicInstaller::RemoveWebExtension
pCgiRestrictionCollection->DeleteElement(varIndex)
SetupIppAI::BasicInstaller::RemoveWebExtension was unable to remove CGI restriction because it was already removed.
varIndex.Clear()
pApplicationDependenciesCollection->DeleteElement(varIndex)
SetupIppAI::BasicInstaller::RemoveWebExtension was unable to remove application dependency because it was already removed.
Removing the ScriptMap
.printer
Windows::WCP::SetupIppAI::BasicInstaller::WriteStrippedScriptValue
pIMetaBase->SetData(hMeta, cszW3Svc, &mr)
Removing the MimeType
Windows::WCP::SetupIppAI::BasicInstaller::WriteStrippedMimeMapValue
Windows::WCP::SetupIppAI::BasicInstaller::SetElementProperty
bstrPropName
pElement->GetPropertyByName(bstrPropName, &pPropElement)
pPropElement->put_Value(*varPropValue)
Windows::WCP::SetupIppAI::BasicInstaller::SetElementStringProperty
varPropValue.scode
SetElementProperty(pElement, szPropName, &varPropValue)
Windows::WCP::SetupIppAI::BasicInstaller::FindElementInCollection
bstrKeyName
pCollection->get_Count(&count)
pCollection->get_Item(varIndex, &pElement)
pElement->GetPropertyByName(bstrKeyName, &pKeyProperty)
pKeyProperty->get_Value(&varKeyValue)
varKeyValue.Clear()
((HRESULT)0x8002802BL)
System\CurrentControlSet\Services\W3SVC
w3svc
Internet Printing
W3PRT
%ws\msw3prt.dll
Printers
/LM/W3svc/1/Root
.webpnp,application/octet-stream
MimeMap
%windir%\system32
%windir%
SetupMxdwAI
Setup MXDW AI Installation Called Offline.
onecore\base\wcp\plugins\printadvancedinstaller\dll\setupmxdwai.cpp
Windows::WCP::SetupMxdwAI::BasicInstaller::Install
ClearMxdwUninstallRegistryKeysOffline(Services)
Setup MXDW AI Installation Called Online. 
InstallMxdwPrintQueue()
InstallTheMxdwDriverAndQueue()
ClearMxdwUninstallRegistryKeys()
SetupMxdwAI Install Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
Windows::WCP::SetupMxdwAI::BasicInstaller::Uninstall
Setup MXDW AI Uninstallation Called Offline.
SetMxdwUninstallRegistryKeysOffline(Services)
Setup MXDW AI Uninstallation Called Online.
UninstallMxdwPrintQueue()
SetMxdwUninstallRegistryKeys()
SetupMxdwAI Uninstall Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
%SystemRoot%\system32\spool\tools\Microsoft XPS Document Writer
Microsoft XPS Document Writer
PORTPROMPT:
Microsoft XPS Document Writer v4
WinPrint
prnms001.Inf
SetupMxdwAI: InstallMxdwPrintQueue(): ::AddPrinter() FAILED!
Windows::WCP::SetupMxdwAI::InstallMxdwPrintQueue
GetLastError
SetupMxdwAI: InstallMxdwPrintQueue(): The MXDW's Print Queue has been successfully installed.
Windows::WCP::SetupMxdwAI::UninstallMxdwPrintQueue
pPrinterInfo.Allocate(cbPrinterInfo)
EnumPrintersW(0x00000002, nullptr, 2, pPrinterInfo.Elements, cbPrinterInfo, &cbPrinterInfo, &cPrinters)
printer
SetupMxdwAI::UninstallMxdwPrintQueue failed to open printer '{printer}' with error {error}.
SetupMxdwAI::UninstallMxdwPrintQueue failed to delete printer '{printer}' with error {error}.
SetupMxdwAI: UninstallMxdwPrintQueue(): The MXDW's Print Queue has been successfully uninstalled.
Windows::WCP::SetupMxdwAI::UninstallMxdwDriver
DeletePrinterDriverExW(nullptr, nullptr, const_cast<LPWSTR>(g_wszpDriverNameValue), 0x00000001, 0)
DeletePrinterDriverPackageW(nullptr, pszInfPath, nullptr)
SetupMxdwAI: UninstallMxdwDriver(): The MXDW driver has been successfully uninstalled.
SetupMxdwAI::IsMxdwPrintQueueInstalled failed to enumerate printers with HRESULT {hr}.
INSTALLED
NOT INSTALLED
SetupMxdwAI: IsMxdwPrintQueueInstalled(): The MXDW Print Queue is {str}
SetupMxdwAI::GetMxdwDriverInfPath failed to enumerate printers with HRESULT {hr}.
SetupMxdwAI::GetMxdwDriverInfPath failed to allocate memory.
SetupMxdwAI: IsMxdwPrintDriverInstalled(): The MXDW Print Driver is {str}
Windows::WCP::SetupMxdwAI::SetMxdwUninstallRegistryKeys
::RegOpenKeyExW(hKey, lpSubKey, ulOptions, samDesired, &ahkSubKey)
::RegSetValueExW(ahkSubKey, g_wszRemoveMXDWKeyValueName, 0, ( 4ul ), (const BYTE *)&dwRemoveMXDW, sizeof(dwRemoveMXDW) )
SetupMxdwAI: SetMxdwUninstallRegistryKeys(): SUCCESSFUL!.
Windows::WCP::SetupMxdwAI::SetMxdwUninstallRegistryKeysOffline
services->get_System(system.GetInitPointer())
system->OpenRegistryKey( 0, ((((0x00020000L)) | (0x0001) | (0x0008) | (0x0010)) & (~(0x00100000L))) | ((((0x00020000L)) | (0x0002) | (0x0004)) & (~(0x00100000L))), szSubKey, &subKey, &disposition )
((HRESULT)0x80040150L)
subKey->SetValue( 0, szValue, ( 4ul ), (const BYTE *)&dw, sizeof(dw), 0 )
SetupMxdwAI: SetMxdwUninstallRegistryKeysOffline(): SUCCESSFUL!.
Windows::WCP::SetupMxdwAI::GetTheMxdwStagedPath
static_cast<DWORD>(122L)
Windows::WCP::SetupMxdwAI::InstallTheMxdwDriverAndQueue
InstallMxdwDriverStoreAndDriver()
Windows::WCP::SetupMxdwAI::InstallMxdwDriverStoreAndDriver
GetTheMxdwStagedPath(pszMxdwStagedPath, (sizeof(pszMxdwStagedPath) / sizeof(pszMxdwStagedPath[0])))
Windows x64
StringCchCopyW(szInfFullPath, (sizeof(*RtlpNumberOf(szInfFullPath))), pszMxdwStagedPath)
StringCchCatW(szInfFullPath, (sizeof(*RtlpNumberOf(szInfFullPath))), L"\\")
StringCchCatW(szInfFullPath, (sizeof(*RtlpNumberOf(szInfFullPath))), g_wszInfName)
::UploadPrinterDriverPackageW(pwszServer, szInfFullPath, pwszEnvironment, dwFlags, hwnd, szDriverStorePath, &cchDriverStorePath )
::InstallPrinterDriverFromPackageW(pwszServer, pwszInfPath, g_wszpDriverNameValue, pwszEnvironment, dwFlags)
SetupMxdwAI: InstallMxdwDriverStoreAndDriver(): The MXDW's Driver Store and Driver successfully installed.
RemoveMXDW
\Registry\Machine\System\CurrentControlSet\Control\Print
System\CurrentControlSet\Control\Print
SetupLprAI
onecore\base\wcp\plugins\printadvancedinstaller\dll\setuplprai.cpp
Windows::WCP::SetupLprAI::BasicInstaller::Install
SetupLprAI Install called 
SetupLprAI::BasicInstaller::Install cannot install monitor because it is already installed.
SetupLprAI::BasicInstaller::Install cannot install monitor because the spooler is not running.
SetupLprAI Install Called in a phase other than PHASE_CMI_PASS_ONLINE 
Windows::WCP::SetupLprAI::BasicInstaller::Uninstall
SetupLprAI::BasicInstaller::Uninstall cannot remove monitor because it has already been removed.
SetupLprAI::BasicInstaller::Uninstall cannot remove monitor because the spooler is not running.
SetupLprAI Uninstall Called in a phase other than PHASE_CMI_PASS_ONLINE 
LPRMon.dll
LPR Port
SetupWfsAI
SetupWfs Advanced Installer called while the print spooler is offline.  The installation 
will complete when the spooler is next started.
SetupWfs Advanced Installer called offline.  The installation will complete when the spooler is next started.
onecore\base\wcp\plugins\printadvancedinstaller\dll\setupwfsai.cpp
Windows::WCP::SetupWfsAI::BasicInstaller::Install
SetWfsRegistryKeyOffline(Services, &dwKeyValue, pszFilename, (cchActualSize + 1)*sizeof(WCHAR))
WaitForPendingOfflineOperation()
InstallLocalFaxPrinter()
SetupWFSAI Install Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
SetupWfs Advanced Installer called while the print spooler is offline.  The uninstallation 
will complete when the spooler is next started.
SetupWfs Advanced Installer called offline.  The uninstallation will complete when the spooler is next started.
Windows::WCP::SetupWfsAI::BasicInstaller::Uninstall
ClearWfsRegistryKeyOnline()
UninstallLocalFaxPrinter()
SetupWfsAI Uninstall Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
Windows::WCP::SetupWfsAI::SetWfsRegistryKeyOffline
RtlInitLUnicodeStringFromNullTerminatedString(szFaxServicingKey, &szSubKey)
RtlInitLUnicodeStringFromNullTerminatedString(szFaxServicingOperation, &szServiceFaxValue)
system->OpenRegistryKey(0, ((((0x00020000L)) | (0x0002) | (0x0004)) & (~(0x00100000L))), szSubKey, &subKey, &disposition)
subKey->SetValue(0, szServiceFaxValue, ( 4ul ), (const BYTE *)pdwKeyValue, sizeof(*pdwKeyValue), 0 )
SetupWfsAI: SetWfsRegistryKeyOffline(): SUCCESSFUL!.
Windows::WCP::SetupWfsAI::ClearWfsRegistryKeyOnline
RegOpenKeyExW((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), szFaxServicingKeyOnline, 0, (0x0001) | (0x0002), &hKey )
ClearWfsRegistryKeyOnline was unable to clear the serviceFax registry key with error {error}.
Microsoft Shared Fax Monitor
FXSMON.DLL
Windows::WCP::SetupWfsAI::InstallLocalFaxPrinter
IsLocalFaxPrinterInstalled(&bFaxPrinterPresent)
InstallFaxPrinterDrivers()
SetupWfsAI::InstallLocalFaxPrinter was unable to add monitor because it is already installed.
RefreshPorts()
AddLocalFaxPrinter(L"Fax", 0)
OnEachSendToPathDo(CreateFaxRecipientShortcuts)
SetupWfsAI::UninstallLocalFaxPrinter was unable to remove fax recipient shortcuts with HRESULT {hr}.
Windows::WCP::SetupWfsAI::UninstallLocalFaxPrinter
GetFirstLocalFaxPrinterName(wszLocalFaxPrnName, 260)
OpenPrinterW(wszLocalFaxPrnName, &hPrinter, &PrinterDefaults)
DeletePrinter(hPrinter)
SetupWfsAI::UninstallLocalFaxPrinter was unable to delete the monitor because it has already been deleted.
SetupWfsAI::UninstallLocalFaxPrinter was unable to delete the monitor because it is still in use.
IsFaxDriversPresent(&bFaxPrinterPresent)
Microsoft Shared Fax Driver
SetupWfsAI::UninstallLocalFaxPrinter was unable to delete the driver because it is in use.
Windows::WCP::SetupWfsAI::InstallFaxPrinterDrivers
IsFaxDriversPresent(&bIsPresent)
GetInfFilePath(wszInfFilePath, 260)
InstallPrinterDriverFromPackageW(0, wszInfFilePath, L"Microsoft Shared Fax Driver", 0, 0 )
Windows::WCP::SetupWfsAI::WaitForPendingOfflineOperation
RegOpenKeyExW((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), szFaxServicingKeyOnline, 0, (0x0001) | (0x0010), &hKey )
RegNotifyChangeKeyValue(hKey, 0, (0x00000004L) | (0x10000000L), notifyEvent, 1)
static_cast<DWORD>(1460L)
Windows::WCP::SetupWfsAI::IsFaxDriversPresent
Not-null check failed: lpbIsPresent
((HRESULT)0x8000FFFFL)
pPrinterDriverInfo.Allocate(cb)
EnumPrinterDriversW(0, 0, 1, pPrinterDriverInfo.Elements, cb, &cb, &dwNumPrinterDrivers )
Windows::WCP::SetupWfsAI::GetInfFilePath
Not-null check failed: lpwzInfFilePath
%windir%\inf\prnms002.inf
SetupGetInfDriverStoreLocationW(szExpandedFilePath, 0, 0, lpwzInfFilePath, cchMaxInfFilePath, 0)
Windows::WCP::SetupWfsAI::OnEachSendToPathDo
RegOpenKeyExW((( HKEY ) (ULONG_PTR)((LONG)0x80000002) ), c_szProfileListKey, 0, ((((0x00020000L)) | (0x0001) | (0x0008) | (0x0010)) & (~(0x00100000L))), &hkeyProfileList )
dwError
RegOpenKeyExW(hkeyProfileList, szSubkey, 0, ((((0x00020000L)) | (0x0001) | (0x0008) | (0x0010)) & (~(0x00100000L))), &hkey)
RegGetValueW(hkey, nullptr, c_szProfileImagePathValue, 0x00000004 | 0x00000002, nullptr, reinterpret_cast<LPBYTE>(szSendToPath), &cbValue)
StringCchCatW(szSendToPath, (sizeof(*RtlpNumberOf(szSendToPath))), L"\\")
StringCchCatW(szSendToPath, (sizeof(*RtlpNumberOf(szSendToPath))), c_szSendToPath)
pfAction(szSendToPath)
SetupWfsAI::CreateFaxRecipientShortcuts was unable to load description string with HRESULT {hr}.
SetupWfsAI::OnEachSendToPathDo was unable to expand environment strings with error {error}.
SetupWfsAI::CreateFaxRecipientShortcuts was unable to load shortcut name string with HRESULT {hr}.
%s\%s.lnk
SetupWfsAI::CreateFaxRecipientShortcuts was unable to create link with HRESULT {hr}.
SetupWfsAI::CreateFaxRecipientShortcuts was unable to create target path string with HRESULT {hr}.
%s\*.lnk
%s\%s
SetupWfsAI::RemoveFaxRecipientShortcuts was unable to delete file '{file}' with error {error}.
SetupWfsAI::RemoveFaxRecipientShortcuts was unable to full path string with HRESULT {hr}.
SetupWfsAI::RemoveFaxRecipientShortcuts shortcuts have already been removed.
SetupWfsAI::RemoveFaxRecipientShortcuts was unable to create search format string with HRESULT {hr}.
Windows::WCP::SetupWfsAI::CreateLink
psl.CoCreateInstance(CLSID_ShellLink, 0, CLSCTX_INPROC_SERVER)
psl->SetPath(lpszPathObj)
psl->SetDescription(lpszDesc)
psl->SetIconLocation(lpszIconPath, iIconNdx)
psl->SetArguments(lpszArgument)
psl->QueryInterface(IID_IPersistFile, (LPVOID*)&ppf)
ppf->Save(lpszPathLink, 1)
SetupWfsAI::IsFaxRecepientShortcut was unable to expand environment strings for WFS path with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to initialize COM with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to CoCreate IShellLink with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to expand environment strings for target path with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to IShellLink::GetPath with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to IPersistFile::Load with HRESULT {hr}.
SetupWfsAI::IsFaxRecepientShortcut was unable to query interface for IPersistFile with HRESULT {hr}.
Windows::WCP::SetupWfsAI::RefreshPorts
pBuff.Allocate(cbNeeded + 200)
EnumPortsW(0, 1, pBuff.Elements, cbNeeded + 200, &cbNeeded, &cReturned)
/SendTo
@%windir%\system32\FXSRESM.dll,-120
%windir%\System32\WFSR.dll
@%windir%\system32\FXSRESM.dll,-121
AppData\Roaming\Microsoft\Windows\SendTo
ProfileImagePath
Software\Microsoft\Windows NT\CurrentVersion\ProfileList
serviceFax
SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print
\Registry\Machine\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print
FSetupMpdwAI
Setup MPDW AI Installation Called Offline.
onecore\base\wcp\plugins\printadvancedinstaller\dll\setupmpdwai.cpp
Windows::WCP::SetupMpdwAI::BasicInstaller::Install
ClearMpdwUninstallRegistryKeysOffline(Services)
Setup MPDW AI Installation Called Online. 
InstallMpdwPrintQueue()
InstallTheMpdwDriverAndQueue()
ClearMpdwUninstallRegistryKeys()
SetupMpdwAI Install Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
Windows::WCP::SetupMpdwAI::BasicInstaller::Uninstall
Setup MPDW AI Uninstallation Called Offline.
SetMpdwUninstallRegistryKeysOffline(Services)
Setup MPDW AI Uninstallation Called Online.
UninstallMpdwPrintQueue()
SetMpdwUninstallRegistryKeys()
SetupMpdwAI Uninstall Called in a phase besides PHASE_CMI_PASS_ONLINE or PHASE_CSI_OFFLINE
%SystemRoot%\system32\spool\tools\Microsoft Print To PDF
Microsoft Print to PDF
Microsoft Print To PDF
prnms009.Inf
SetupMpdwAI: InstallMpdwPrintQueue(): ::AddPrinter() FAILED!
Windows::WCP::SetupMpdwAI::InstallMpdwPrintQueue
SetupMpdwAI: InstallMpdwPrintQueue(): The MPDW's Print Queue has been successfully installed.
Windows::WCP::SetupMpdwAI::UninstallMpdwPrintQueue
SetupMpdwAI::UninstallMpdwPrintQueue failed to open printer '{printer}' with error {error}.
SetupMpdwAI::UninstallMpdwPrintQueue failed to delete printer '{printer}' with error {error}.
SetupMpdwAI: UninstallMpdwPrintQueue(): The MPDW's Print Queue has been successfully uninstalled.
Windows::WCP::SetupMpdwAI::UninstallMpdwDriver
SetupMpdwAI: UninstallMpdwDriver(): The MPDW driver has been successfully uninstalled.
SetupMpdwAI::IsMpdwPrintQueueInstalled failed to enumerate printers with HRESULT {hr}.
SetupMpdwAI: IsMpdwPrintQueueInstalled(): The MPDW Print Queue is {str}
SetupMpdwAI::GetMpdwDriverInfPath failed to enumerate printers with HRESULT {hr}.
SetupMpdwAI::GetMpdwDriverInfPath failed to allocate memory.
SetupMpdwAI: IsMpdwPrintDriverInstalled(): The MPDW Print Driver is {str}
Windows::WCP::SetupMpdwAI::SetMpdwUninstallRegistryKeys
::RegSetValueExW(ahkSubKey, g_wszRemoveMPDWKeyValueName, 0, ( 4ul ), (const BYTE *)&dwRemoveMPDW, sizeof(dwRemoveMPDW) )
SetupMpdwAI: SetMpdwUninstallRegistryKeys(): SUCCESSFUL!.
Windows::WCP::SetupMpdwAI::SetMpdwUninstallRegistryKeysOffline
SetupMpdwAI: SetMpdwUninstallRegistryKeysOffline(): SUCCESSFUL!.
Windows::WCP::SetupMpdwAI::GetTheMpdwStagedPath
Windows::WCP::SetupMpdwAI::InstallTheMpdwDriverAndQueue
InstallMpdwDriverStoreAndDriver()
Windows::WCP::SetupMpdwAI::InstallMpdwDriverStoreAndDriver
GetTheMpdwStagedPath(pszMpdwStagedPath, (sizeof(pszMpdwStagedPath) / sizeof(pszMpdwStagedPath[0])))
StringCchCopyW(szInfFullPath, (sizeof(*RtlpNumberOf(szInfFullPath))), pszMpdwStagedPath)
SetupMpdwAI: InstallMpdwDriverStoreAndDriver(): The MPDW's Driver Store and Driver successfully installed.
RemoveMPDW
\Registry\Machine\System\CurrentControlSet\Control\Print
System\CurrentControlSet\Control\Print
Software\Microsoft\Fax\Setup
IsFaxPrinterShared
SHRFAX:
MemAlloc() failed, size=%d
Microsoft-Windows-Fax-Common-EnableServerPolicy
slc.dll
SLGetWindowsInformationDWORD
RegOpenKeyEx() failed, ec=%d
RegSetValueEx() failed[%s], ec=%d
RegQueryValueEx() failed[%s], ec=%d
Software\Microsoft\Fax\Client
DebugLevel
uH_Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
onecore\internal\sdk\inc\wil\Staging.h
WilStaging_02
Local\SM0:%lu:%lu:%hs
PrintAdvancedInstaller.pdb
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.pdata
.rsrc$01
.rsrc$02
PrintAdvancedInstaller.DLL
InstallLocalFaxPrinter
UninstallLocalFaxPrinter
DllCanUnloadNow
DllCsiGetHandler
__C_specific_handler
_purecall
_vsnwprintf
_wcsnicmp
_wcsicmp
malloc
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
__CxxFrameHandler3
_lock
_unlock
__dllonexit
_onexit
GetLastError
DisableThreadLibraryCalls
DeleteCriticalSection
InitializeCriticalSection
HeapDestroy
OpenSCManagerW
OpenServiceW
QueryServiceStatusEx
CloseServiceHandle
CoUninitialize
CoInitializeEx
RegOpenKeyExW
CompareStringW
CoCreateInstance
RegCloseKey
RegSetValueExW
ExpandEnvironmentStringsW
GetModuleFileNameW
RegDeleteValueW
GetTickCount64
RegQueryValueExW
CreateEventW
RegNotifyChangeKeyValue
WaitForSingleObject
RegEnumKeyExW
RegGetValueW
FindFirstFileW
FindClose
SHLoadIndirectString
DeleteFileW
FindNextFileW
CloseHandle
Sleep
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-libraryloader-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
OLEAUT32.dll
RtlRaiseStatus
ntdll.dll
?RtlTraceVa@Rtl@WCP@Windows@@YAXKKPEAU_RTL_TRACING_FACILITY@123@QEBD_KPEAD@Z
?RtlTraceFormat_PCULONG@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
RtlReportErrorOrigination
?RtlTraceFormat_PCHRESULT@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCSTR@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
?RtlTraceFormat_PCWSTR@Rtl@WCP@Windows@@YAXPEAUIRtlFormattedOutputStream@13@PEBX@Z
RtlInitLUnicodeStringFromNullTerminatedString
ConvertNtStatusToHResult
WCP.dll
SetupGetInfDriverStoreLocationW
SETUPAPI.dll
OpenPrinterW
SetPrinterDataW
ClosePrinter
EnumPrintProcessorsW
AddPrinterW
EnumPrintersW
DeletePrinter
DeletePrinterDriverExW
DeletePrinterDriverPackageW
EnumPrinterDriversW
UploadPrinterDriverPackageW
InstallPrinterDriverFromPackageW
AddMonitorW
DeleteMonitorW
EnumPortsW
WINSPOOL.DRV
memcpy_s
??1exception@@UEAA@XZ
??0exception@@QEAA@XZ
??0exception@@QEAA@AEBV0@@Z
_vsnprintf_s
memmove_s
?terminate@@YAXXZ
??1type_info@@UEAA@XZ
SetLastError
TraceMessage
HeapFree
HeapAlloc
GetProcessHeap
GetVersionExW
LoadLibraryW
GetProcAddress
FreeLibrary
OutputDebugStringW
GetModuleFileNameA
CreateSemaphoreExW
EnterCriticalSection
ReleaseSemaphore
GetModuleHandleExW
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
ReleaseMutex
FormatMessageW
ReleaseSRWLockExclusive
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
CreateMutexExW
AcquireSRWLockShared
GetModuleHandleW
DebugBreak
IsDebuggerPresent
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
SHChangeNotify
SHGetMalloc
SHGetSpecialFolderLocation
SHELL32.dll
GetPrinterW
SetPrinterW
_CxxThrowException
memcmp
memcpy
memset
wcscmp
h8;;X
:eop`
.?AVResultException@wil@@
.?AVexception@@
w3svc/1/root/printers
%ws%c.printer,%ws\msw3prt.dll,1,GET,POST%c
application
system.webServer/security/applicationDependencies
system.webServer/security/isapiCgiRestriction
MACHINE/WEBROOT/APPHOST
%windir%\system32\wfs.exe
%windir%\system32\wfs.exe
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
CSI Print Advanced Installer plug-in
FileVersion
10.0.22621.440 (WinBuild.160101.0800)
InternalName
PrintAdvancedInstaller.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
PrintAdvancedInstaller.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.440
VarFileInfo
Translation
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
9Ocr4
Ge]L*
E0C1)0'
 Microsoft Operations Puerto Rico1
229879+4675790
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
jFtg)]
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,VTHIx2tpfffc1wa70gHKjBiaViuPC6p9e5+DCC+VJlc=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
20220720041509.964Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:897A-E356-17011%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
220302185128Z
230511185128Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:897A-E356-17011%0#
Microsoft Time-Stamp Service0
@IK,p
2-c1'
%G_rU
QeV\q
U6^_nmH
V3]2<n`V
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
ql#C'
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:897A-E356-17011%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220719221120Z
20220720221120Z0t0:
1,0*0
1(0&0
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
)QLx2
yf>Q{
