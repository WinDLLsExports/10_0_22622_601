!This program cannot be run in DOS mode.
RichU
.text
h.rdata
H.data
.pdata
H.idata
H.pldata
`fothk
`.edata
@INIT
bGFIDS
B.rsrc
B.reloc
{ AVH
D$ fE
VWATAUAWH
A_A]A\_^
WATAUAVAWH
XdvLH
D$(XdvS3
XdvMI
A_A^A]A\_
H+C@H
x AVH
t1L;A
XdvMI
L$(E3
WAVAWH
XdvLH
D$(XdvS3
XdvNH
@A_A^_
WATAUAVAWH
XdvNH
XdvND
u$H9=5n
XdvMH
 A_A^A]A\_
XdvNH
XdvNH
WATAUAVAWH
D$(XdvS3
D$(XdvS3
A_A^A]A\_
t$ WATAVH
L$ E3
wwtk-
wlt`-
A^A\_
t$ UWAVH
XdvNH
XdvNH
UWATAVAWH
XdvNH
XdvNA
XdvNH
A_A^A\_]
|$ UH
L$(E3
D$0H+D$8H=
R$fA;Z*
L$ E3
L$@H3
L$ E3
H3t$`A
H+C(Hi
9T$ t
;D$ r#
9T$(t
L$8H3
gfffffffA
L$8H3
t+v Mc
WATAUAVAWH
t7B9T
 A_A^A]A\_
UVWATAUAVAWH
Lc|$xD
Lcl$ A
0A_A^A]A\_^]
u-@8=P
WATAUAVAWH
dvafK
 A_A^A]A\_
` UAVAWH
A_A^]
x AVH
x UAVAWH
AuFaH
t$(E3
AuFaH
A_A^]
dvafH
L$ E3
x ATAVAWH
 A_A^A\
dvafH
9|$`u
x AVH
UVWAVAWH
 A_A^_^]
|$ UATAUAVAWH
A+Ap;
D+G$D
E+A$E
E99t;3
A+Ap;
A+Ap;
E99t;3
tAE81t<3
A+Ap;
0A_A^A]A\]
t$ WATAUAVAWH
St*A;
 A_A^A]A\_
wht^A
wkt_A
w^tRA
x AW3
wotfD
wrtfD
|$(A_
t$ WATAUAVAWH
D$ Lc
L$0H3
A_A^A]A\_
VWAVH
@A^_^
D$4H!D$4H
t<H9{
dvssH
dvssH
dvssH
UATAUAVAWH
dvssH
dvssI
dvssH
A_A^A]A\]
@8yht
@8{hu$H
x AVH
L$ UVWATAUAVAWH
D8uXtlI
dvssH
dvssH
A_A^A]A\_^]
dvssH
dvssH
dvssH
L$@H3
x AVH
VWATAVAWH
D$pE3
A_A^A\_^
\$ UVWATAUAVAWH
dvssH
D$@H+
D$PE3
dvssI
A_A^A]A\_^]
|$ UAVAWH
|$(E3
E L9x
XfD99
dvssH
A_A^]
t8D9Ih|
t8D9I`|
UAVAWH
dvssA
dvssfA
dvssA
dvssH
@A_A^]
t8D9IP|
t(D9I0|
WAVAWH
D$0E3
A_A^_
H WATAUAVAWH
A_A^A]A\_
SUVWATAUAVAWH
HA_A^A]A\_^][
DvIdH
AB8AC
DvIdH
D$ KAEL
x AVH
UWAVH
D$ E3
DvIdH
DvIdH
0A^_]
@SVWATAUAVAWH
\$H@8s@
H!t$ A
DvIdI
DvIdH
`A_A^A]A\_^[
\$ UVWATAUAVAWH
A_A^A]A\_^]
#:D$@u
DvIdI
L$ SVWH
DvIdH
x AUAVAWH
 A_A^A]
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
BB8BC
D$(E3
D$(E3
D$(E3
L$0t'H
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
L$0t'H
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
8Q$t,H9Q
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
D$(E3
UWATAVAWH
A_A^A\_]
x ATAVAWH
XdvNH
XdvNH
XdvMH
 A_A^A\
WATAUAVAWH
A_A^A]A\_
t$ WH
WAVAWH
0A_A^_
WAVAWH
0A_A^_
x ATAVAWH
@A_A^A\
VWATAVAWH
0A_A^A\_^
WATAUAVAWH
A_A^A]A\_
WAVAWH
0A_A^_
WAVAWH
0A_A^_
x ATAVAWH
@A_A^A\
XdvNH
XdvNH
UATAUAVAWH
D$ E3
D$ E3
D$ E3
L9mHt
G0D9h
D9jpu)L
D9ipu
G0D9h
E8)u!
E8)u}H
E8)u_H
E8)u*H
A_A^A]A\]
UATAUAVAWH
SHE8*
A_A^A]A\]
x ATAVAWH
KhL9!t
@A_A^A\
` UAVAWH
0A_A^]
UATAUAVAWH
D$ E3
2E8btu,
tvD9f
tQL9e
KHE8!
A_A^A]A\]
x ATAVAWH
@A_A^A\
-fffffff
fffffff
fffffff
fffffff
.fffffff
fffffff
fffffff
fffff
AQAPRQPH
(D$ H
0XYZAXAY
ffffff
fffff
fffff
PluginTest
DrvIso
InfoDisc
DdiStd
DdiMore
AutoFail
EtwLog
DdiAdd
Plugin %d was not loaded with error 0x%x
\DosDevices\VerifierExt
XdvTipStopTime
XdvVerifierOptions
VerifierOptions
\Device\VerifierExt
VerifyDriverLevel
VerifyDrivers
VerifierTriageContext
XdvExtensionOption
XdvTimedFactor
XdvPersistDisableRule
XdvRuleSuppress
XdvTipTag
XdvTipPerformanceControl
XdvDebugControl
XdvDebugRules
Driver Verifier: Failed to query dispatch table!
Driver Verifier: Bugcheck suppressed with Error Code: 0x%X Error String: '%s'
Driver Verifier: Rule reporting failed with NTSTATUS code 0x%X
Driver Verifier: Bugcheck suppressed with Error Code: 0x%X Error String: '%s'
Context Object (IRP or Miniport): 0x%p
Tracked Object (OID, Port number, IRP, etc.): 0x%p
Driver Verifier: Violation reported with Error Code: 0x%X Error String: '%s'
Context Object (IRP or Miniport): 0x%p
Tracked Object (OID, Port number, IRP, etc.): 0x%p
\Registry\Machine\System\CurrentControlSet\Control\Session Manager\Memory Management
DriverVerifier
VerifierSettingState
Failed to register rule class %d for reporting. NTSTATUS code: 0x%x
DRIVER VERIFIER DETECTED VIOLATION
DRIVER VERIFIER IOMANAGER VIOLATION
DRIVER VERIFIER DMA VIOLATION
UNKNOWN VIOLATION REPORTED VIA DRIVER VERIFIER
XDV Internal problem 2.1. Data cleanup.
VerifierExt
XDV Internal problem 1.1. Data cleanup.
XDV Internal problem 1.2. Data cleanup.
Driver Verifier: XdvQueryRuleSuppression: wrong rule ID: %d
IoCreateDeviceSecure
IoValidateDeviceIoControlAccess
D:P(A;;GA;;;SY)(A;;GA;;;BA)
SeConvertStringSecurityDescriptorToSecurityDescriptor
Properties
Class
NoDisplayClass
NoUseClass
Security
DeviceType
DeviceCharacteristics
Exclusive
\Registry\Machine\System\CurrentControlSet\Control\Class
{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}
PoFxCompleteDevicePowerNotRequired
PoFxCompleteIdleCondition
PoFxCompleteIdleState
PoFxIdleComponent
PoFxNotifySurprisePowerOn
PoFxPowerControl
PoFxRegisterDevice
PoFxReportDevicePoweredOn
PoFxSetComponentLatency
PoFxSetComponentResidency
PoFxSetComponentWake
PoFxSetDeviceIdleTimeout
PoFxStartDevicePowerManagement
PoFxUnregisterDevice
IRP_MJ_WRITE
IRP_MJ_SYSTEM_CONTROL
IRP_MJ_SHUTDOWN
IRP_MJ_SET_VOLUME_INFORMATION
IRP_MJ_SET_SECURITY
IRP_MJ_SET_QUOTA
IRP_MJ_SET_INFORMATION
IRP_MJ_SET_EA
IRP_MJ_READ
IRP_MJ_QUERY_VOLUME_INFORMATION
IRP_MJ_QUERY_SECURITY
IRP_MJ_QUERY_QUOTA
IRP_MJ_QUERY_INFORMATION
IRP_MJ_QUERY_EA
IRP_MJ_POWER
IRP_MJ_PNP
IRP_MJ_LOCK_CONTROL
IRP_MJ_INTERNAL_DEVICE_CONTROL
IRP_MJ_FLUSH_BUFFERS
IRP_MJ_FILE_SYSTEM_CONTROL
IRP_MJ_DIRECTORY_CONTROL
IRP_MJ_DEVICE_CONTROL
IRP_MJ_DEVICE_CHANGE
IRP_MJ_CREATE_NAMED_PIPE
IRP_MJ_CREATE_MAILSLOT
IRP_MJ_CREATE
IRP_MJ_CLOSE
IRP_MJ_CLEANUP
KeAcquireInStackQueuedSpinLock
KeAcquireInStackQueuedSpinLockAtDpcLevel
KeAcquireInStackQueuedSpinLockForDpc
KeAcquireQueuedSpinLock
KeAcquireSpinLockAtDpcLevel
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
KeReleaseSpinLockFromDpcLevel
KeReleaseInStackQueuedSpinLock
KeReleaseInStackQueuedSpinLockForDpc
KeReleaseInStackQueuedSpinLockFromDpcLevel
KeReleaseMutant
KeReleaseMutex
KeReleaseQueuedSpinLock
KeTryToAcquireQueuedSpinLock
KeTryToAcquireSpinLockAtDpcLevel
usec:
 step var:
 sop:
 tin:
 tout:
 yield 
 musecs, reason: 
 begin tid: 
 hash: 
 pri change: 
 phs: 
 reason: 
CuzzRandomSeed=
RESET: 
new phase init
change point
waitforvar
 has high starvation: 
 not yielding
lowpri
AutofailAddDriver
VerifierExt!%s: unable to allocate additional resources for driver list
AutoFailInject
VerifierExt!%s: would have injected failure for function %s
VerifierExt!%s: injecting failure for function %s
\Registry\Machine\System\CurrentControlSet\Services\VerifierExt\Extensions\
\Registry\Machine\OSBOOT\ControlSetOverride\Session Manager\Memory Management\Extensions\
wdf01000.sys
ndis.sys
Autofail
ExAllocatePoolWithTagPriority
ExAllocatePoolWithTag
ExAllocatePool
ExAllocatePool2
ExAllocatePool3
IoAllocateIrp
IoAllocateMdl
IoAllocateWorkItem
MmAllocateContiguousMemory
MmAllocateContiguousMemorySpecifyCache
MmAllocatePagesForMdl
MmMapIoSpace
MmMapLockedPagesSpecifyCache
DriverEntry
DriverUnload
AutofailControl
VerifierExt!%s: Unrecognized stack fail type: %x
VerifierExt!%s: invalid IOCTL received: 0x%0x
StringToULong64
VerifierExt!%s: registry data format error: %s
exemptedstacks
failuremode
GetRegistryInformation
VerifierExt!%s: FailureMode value from registry is invalid {%d} 
testflags
Driver Verifier: Counter: %s: %d
LogDriverEntry_entry
LogDriverUnload_entry
Driver Verifier: XdvTimed extension started.
XdvTimedCleanup
Driver Verifier: Failed to stop XdvTimed extension: %d
Driver Verifier: XdvTimed extension stopped.
*** Driver Verifier rule 0x%X is violated on the time limit of %d milliseconds ***
*** Choose to either :
    (B)reak to investigate, 
    (C)ontinue to bugcheck, 
    (E)xtend the timelimit and continue? 
More debugging info: 
    Error String: '%s' 
    Context Object (IRP or Miniport): 0x%p 
    Tracked Object (OID, Port number, IRP, etc.): 0x%p 
Timeout on completing an NDIS OID request.
2: Timeout on sending a NET_BUFFER_LIST by MiniportSendNetBufferLists.
1: Timeout on sending a NET_BUFFER_LIST by MiniportSendNetBufferLists.
0: Timeout on sending a NET_BUFFER_LIST by MiniportSendNetBufferLists.
2: The miniport driver hasn't processed any NBL in the past 22+ seconds.
1: The miniport driver hasn't processed any NBL in the past 22 seconds.
0: The miniport driver hasn't processed any NBL in the past 22 seconds.
The filter driver failed to complete FilterPause within 10 seconds.
Timeout on sending a NET_BUFFER_LIST by NdisFilterSendNetBufferLists.
Timeout on sending a NET_BUFFER_LIST by NdisFilterSendNetBufferLists (check the lower edge).
Timeout on receiving a NET_BUFFER_LIST by FilterReceiveNetBufferLists.
Timeout on receiving a NET_BUFFER_LIST by FilterReceiveNetBufferLists (in the upper driver).
Timeout on NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION after NDIS_STATUS_DOT11_ASSOCIATION_START.
Timeout on NDIS_STATUS_DOT11_CONNECTION_COMPLETION/NDIS_STATUS_DOT11_ROAMING_COMPLETION after NDIS_STATUS_DOT11_CONNECTION_START/NDIS_STATUS_DOT11_ROAMING_START.
Timeout on NDIS_STATUS_DOT11_CONNECTION_START after OID_DOT11_CONNECT_REQUEST.
Timeout on NDIS_STATUS_DOT11_LINK_QUALITY after NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION.
Timeout on NDIS_STATUS_DOT11_SCAN_CONFIRM after OID_DOT11_SCAN_REQUEST.
ZwCreateKey
KeSetEvent
ExFreePoolWithTag
ExAcquireFastMutex
ExAllocatePoolWithQuota
ExAllocatePoolWithQuotaTag
DriverCancel
A registered driver cancel routine was called.
The driver should have released global cancellation lock!
Test: Oops! Something went wrong.
DriverName: %S, SigningLevel: %d, IsBootDriver: %d
Return value of MmMapIoSpaceInfo: %p
DriverName: %S, SigningLevel: %d, IsBootDriver: %d, CallerAddress: 0x%x
At Entry - DriverName: %S, SigningLevel: %d, IsBootDriver: %d, CallerAddress: 0x%x
At Exit - DriverName: %S
Registered IRP_MJ_DEVICE_CONTROL routine was called.
ZwCreateKey is called by %S
IoOpenDriverRegistryKey
ZwCreateKeyTransacted
ZwDeleteKey
ZwDeleteValueKey
ZwOpenKey
ZwOpenKeyTransacted
ZwOpenKeyEx
ZwOpenKeyTransactedEx
ZwQueryKey
ZwRenameKey
ZwSetInformationKey
ZwSetValueKey
ZwQueryValueKey
RtlCreateRegistryKey
RtlCheckRegistryKey
RtlDeleteRegistryValue
RtlWriteRegistryValue
RtlQueryRegistryValues
RtlQueryRegistryValuesEx
NtCreateFile
ZwCreateFile
NtOpenFile
ZwOpenFile
NtDeleteFile
ZwDeleteFile
IoCreateFile
IoCreateFileEx
IoCreateFileSpecifyDeviceObjectHint
Failed to get driver isolation per driver data for %S
Registry operations should not use absolute paths.
Registry operations should only use key handles returned from WDF or WDM APIs.
Failed to initialize per driver data. Status = 0x%08x
Failed to get key path from handle. Status = 0x%08x
<unknown>
DRIVER_ISOLATION_VIOLATION
%s: %S: %s%s'%wZ\%wZ'
%s: %S: %s%s'%wZ'
\Registry\Machine\System\CurrentControlSet\Services\
\Registry\Machine\System\CurrentControlSet\Control\
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\
\Registry\Machine\Hardware\DeviceMap\
\Registry\User\.DEFAULT\
relative to RTL_REGISTRY_ABSOLUTE: 
relative to RTL_REGISTRY_SERVICES: 
relative to RTL_REGISTRY_CONTROL: 
relative to RTL_REGISTRY_WINDOWS_NT: 
relative to RTL_REGISTRY_DEVICEMAP: 
relative to RTL_REGISTRY_USER: 
 Attempt to modify key 
%s: %S: %s%Z'%wZ'
Failed to store parameters handle key path. Status = 0x%08x
 Detected creation of unisolated registry key 
 Detected deletion of unisolated registry key 
 Detected deletion of value under unisolated registry key 
 Detected opening of unisolated registry key 
 Detected querying of unisolated registry key 
 Detected rename of unisolated registry key 
 Detected information change of unisolated registry key 
 Detected setting of value under unisolated registry key 
 Detected querying of value under unisolated registry key 
 Detected validation of unisolated registry key 
 Detected querying of value(s) under unisolated registry key 
File operations should not use absolute paths.
\system32\driverstore\filerepository\
Files in the driver store should not be modified.
\Device\BootDevice
\SystemRoot
\Device\HarddiskVolume
\Windows
\driverdata
\DriverStore\Nodes
Failed to validate file path '%wZ'. Status = 0x%08x
 Detected opening of file 
 Detected creation of file 
 Detected deletion of file 
\Registry\Machine\Hardware
\Registry\Machine\System\CurrentControlSet\Control\ACPI
\Registry\Machine\System\CurrentControlSet\Control\Arbiters
\Registry\Machine\System\CurrentControlSet\Control\Processor
\Registry\Machine\System\CurrentControlSet\Control\PnP\PCI
\Registry\Machine\System\CurrentControlSet\Control\Wdf
\Registry\Machine\System\CurrentControlSet\Control\WMI\GlobalLogger
\Registry\Machine\System\CurrentControlSet\Services\Wdf01000
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\WUDF\Services
\Registry\Machine\System\CurrentControlSet\Control\MiniNt
\Registry\Machine\System\CurrentControlSet\Control\EnhancedStorage
\Registry\Machine\System\CurrentControlSet\Control
\Registry\Machine\System\CurrentControlSet\Services\TPM
\Registry\Machine\OSBOOT\System\CurrentControlSet\Services\TPM
\Registry\Machine\System\CurrentControlSet\Control\IntegrityServices
\Registry\Machine\System\CurrentControlSet\Services\storflt
\Registry\Machine\System\CurrentControlSet\Services\USBHUB\hubg
\Registry\Machine\System\CurrentControlSet\Services\USBHUB\uxd_control\devices
\Registry\Machine\System\CurrentControlSet\Services\USBHUB\uxd_control\policy
\Registry\Machine\System\CurrentControlSet\Services\USBHUB\uxd_control\pnp
\Registry\Machine\System\CurrentControlSet\Control\usb
\Registry\Machine\Devices\usb
\Registry\Machine\Devices\usb_usbflags
\Registry\Machine\System\CurrentControlSet\Control\usbflags
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\WUDF
\Registry\Machine\System\CurrentControlSet\Control\WppRecorder
\Registry\Machine\System\CurrentControlSet\Control\SystemInformation
\Registry\Machine\System\CurrentControlSet\Control\Session Manager\BAM
\Registry\Machine\System\CurrentControlSet\Control\FirmwareResources
\Registry\Machine\Devices\CurrentControlSet\Control\FirmwareResources
\Registry\Machine\Devices\ControlSet001\Control\FirmwareResources
\Registry\Machine\System\CurrentControlSet\Services\Bthport\Parameters
\Registry\Machine\Devices\bthportparams
\Registry\Machine\System\CurrentControlSet\Control\GraphicsDrivers
\Registry\Machine\System\CurrentControlSet\Control\Video
\Registry\Machine\Hardware\DeviceMap\Video
\Registry\Machine\System\CurrentControlSet\Control\Terminal Server\WinStations
\Registry\Machine\Software\Policies\Microsoft\Windows NT\Terminal Services
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\Control Panel\Theme
\Registry\Machine\System\CurrentControlSet\Control\BitLocker
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\BitLocker
\Registry\Machine\System\CurrentControlSet\Policies\Microsoft\FVE
\Registry\Machine\System\CurrentControlSet\Services\Swenum\Devices
\Registry\Machine\System\CurrentControlSet\Services\Swenum\Notify
\Registry\Machine\System\CurrentControlSet\Control\MediaCategories
\Registry\Machine\Software\Microsoft\OEM\Device\Capture
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile
\Registry\Machine\System\MountedDevices
\Registry\Machine\System\CurrentControlSet\Control\CrashControl
\Registry\Machine\Hardware\DeviceMap\KeyboardClass
\Registry\Machine\Hardware\DeviceMap\KeyboardPort
\Registry\Machine\System\CurrentControlSet\Services\kbdhid\crashdump
\Registry\Machine\Hardware\DeviceMap\PointerClass
\Registry\Machine\Hardware\DeviceMap\PointerPort
\registry\machine\system\currentcontrolset\services\usbhub\uxd_control\devices
\registry\machine\system\currentcontrolset\services\usbhub\uxd_control\policy
\registry\machine\system\currentcontrolset\services\usbhub\uxd_control\pnp
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Virtualization
\Registry\Machine\Hardware\DeviceMap\Scsi
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\NetworkServiceTriggers
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Virtualization\HvSocket
\Registry\Machine\System\CurrentControlSet\Control\Ataport
\Registry\Machine\System\CurrentControlSet\Control\Storage\StorageTelemetry
\Registry\Machine\System\CurrentControlSet\Control\Storage\StorageTelemetry\ATA
\Registry\Machine\System\CurrentControlSet\Control\Lsa\DPL
\Registry\Machine\System\CurrentControlSet\Policies
\Registry\Machine\Software\Microsoft\Windows\CurrentVersion\Group Policy\State\Machine
\Registry\Machine\Software\Policies\Microsoft\Windows\LLTD
\Registry\Machine\System\CurrentControlSet\Services\lltdio
\Registry\Machine\System\CurrentControlSet\Control\Power\EnergyEstimation\Storage\HDD
\Registry\Machine\System\CurrentControlSet\Services\Partmgr
\Registry\Machine\System\CurrentControlSet\Services\Partmgr\Parameters
\Registry\Machine\Hardware\DeviceMap\SERIALCOM
\Registry\Machine\System\CurrentControlSet\Control\Session Manager\Power
\Registry\Machine\System\CurrentControlSet\Services\i8042prt\crashdump
\Registry\Machine\System\CurrentControlSet\Services\hyperkbd\crashdump
\Registry\Machine\System\CurrentControlSet\Services\\hyperkbd\crashdump
\Registry\Machine\System\CurrentControlSet\Services\bthusb
\Registry\Machine\System\CurrentControlSet\Services\wlansvc
\Registry\Machine\OSData\System\CurrentControlSet\Services\wlansvc\Parameters\OEM\SystemCapabilities
\Registry\Machine\Software\Microsoft\wlansvc
\Registry\Machine\System\Setup
\Registry\Machine\Hardware\Description\System
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Virtualization\Hypervisor
\Registry\Machine\System\CurrentControlSet\Services\Winsock\Parameters
\Registry\Machine\System\CurrentControlSet\Control\QoS
\Registry\Machine\System\CurrentControlSet\Services\bowser
\Registry\Machine\System\CurrentControlSet\DifDrvIsoTest
wdfilter.sys
wdboot.sys
mssecflt.sys
cng.sys
werkernel.sys
ahcache.sys
cea.sys
clipsp.sys
fileinfo.sys
ksecpkg.sys
pcw.sys
pdc.sys
statesepext.sys
cmimcext.sys
watchdog.sys
xro.sys
wof.sys
classpnp.sys
hal.dll
ci.dll
mcupdate.dll
win32kbase.sys
win32kfull.sys
win32kmin.sys
acpi.sys
pci.sys
wdfldr.sys
wudfrd.sys
wpprecorder.sys
mssmbios.sys
bam.sys
uefi.sys
bthport.sys
dxgkrnl.sys
dxgmms2.sys
fvevol.sys
ks.sys
mmcss.sys
mountmgr.sys
crashdmp.sys
kbdclass.sys
kbdhid.sys
mouclass.sys
usbhub.sys
vhdmp.sys
storport.sys
npsvctrig.sys
hvsocket.sys
basicrender.sys
basicdisplay.sys
ataport.sys
dam.sys
ehstorclass.sys
lltdio.sys
partmgr.sys
serial.sys
msdmfilt.sys
i8042prt.sys
hyperkbd.sys
bthusb.sys
wdiwifi.sys
volmgr.sys
fdc.sys
hvservice.sys
rfcomm.sys
storqosflt.sys
bowser.sys
difdrvisotest.sys
netio.sys
tcpip.sys
tcpipreg.sys
fltmgr.sys
ntfs.sys
filecrypt.sys
rdbss.sys
vmswitch.sys
mrxsmb.sys
cdd.dll
csc.sys
dfsc.sys
http.sys
luafv.sys
mup.sys
srvnet.sys
\Windows\apppatch\sysmain.sdb
\Windows\Fonts
\Windows\system32\win32k.sys
\Windows\system32\win32kfull.sys
\Windows\system32\kdbus.dll
\Windows\system32\dwminit.dll
\Windows\system32\FNTCACHE.DAT
clfs.sys
\Registry\Machine\System\Select
Current
\Registry\Machine\System\ControlSet%03d
\Registry\Machine\System\CurrentControlSet
Untrusted
Medium
System
Protected-Process
IoCreateDevice
IofCompleteRequest
SanitizeDeviceName(): failed to allocate memory for driver name.
AddDriver(): failed to allocate memory for driver entry!
Tracking driver %S with fill pattern 0x%02x
AddIrp(): failed to allocate memory for irp entry!
TrackingIrpCount: %d
%S ScanCount: %d
Unknown
DriverName=%S, NumberOfLeaks=%d, IntegrityLevel=%s, IoctlCode=0x%08x
Failed to report rule violation: %x
Failed to get device name from driver object!
Failed to get caller token information!
Failed to track irp for device %S!
Failed to sanitize device name for driver %S!
Exception occurred while scanning IRP buffer for driver %S!
Failed to allocate MDL for user buffer!
Information disclosure detected:
Driver Name: %S
IOCTL: 0x%08x
IRQL: %d
Caller Integrity Level: AppContainer
Caller Integrity Level: %s
Caller Integrity Level: Unknown
Failed to allocate buffer for output string!
 %02X 
-------------------- Truncated --------------------
%S ViolationCount: %d
Failed to get process token 0x%08x!
Failed to get the size of the integrity token 0x%08x!
Failed to allocate memory for token!
Failed to get the integrity level token 0x%08x!
Failed to get integrity level from SID!
Failed to get app container status 0x%08x!
ZwFlushKey
ZwEnumerateValueKey
ZwEnumerateKey
ZwClose
PsTerminateSystemThread
PsSetLoadImageNotifyRoutine
PsSetCreateThreadNotifyRoutine
PsSetCreateProcessNotifyRoutine
PsGetVersion
PsCreateSystemThread
ProbeForWrite
ProbeForRead
PoRequestPowerIrp
ObReleaseObjectSecurity
ObReferenceObjectByHandle
ObGetObjectSecurity
MmUnsecureVirtualMemory
MmUnlockPagableImageSection
MmSecureVirtualMemory
MmResetDriverPaging
MmPageEntireDriver
MmLockPagableSectionByHandle
MmLockPagableDataSection
MmFreePagesFromMdl
MmFreeNonCachedMemory
MmFreeContiguousMemory
MmAllocatePagesForMdlEx
MmAllocateNonCachedMemory
KeTryToAcquireGuardedMutex
KeSetTimerEx
KeSetTimer
KeResetEvent
KeRemoveEntryDeviceQueue
KeRemoveDeviceQueue
KeRemoveByKeyDeviceQueue
KeReleaseGuardedMutexUnsafe
KeReleaseGuardedMutex
KeRegisterNmiCallback
KeReadStateTimer
KeReadStateEvent
KePulseEvent
KeLeaveGuardedRegion
KeLeaveCriticalRegion
KeInsertDeviceQueue
KeInsertByKeyDeviceQueue
KeInitializeTimerEx
KeInitializeTimer
KeInitializeSemaphore
KeInitializeDeviceQueue
KeEnterGuardedRegion
KeEnterCriticalRegion
KeDeregisterNmiCallback
KeDelayExecutionThread
KeClearEvent
KeCancelTimer
KeAcquireGuardedMutexUnsafe
KeAcquireGuardedMutex
IoWritePartitionTable
IoWriteErrorLogEntry
IoWMIRegistrationControl
IoWMIAllocateInstanceIds
IoUpdateShareAccess
IoUnregisterShutdownNotification
IoStartNextPacket
IoSetShareAccess
IoSetPartitionInformation
IoSetDeviceToVerify
IoSetDeviceInterfaceState
IoRemoveShareAccess
IoRegisterShutdownNotification
IoRegisterDriverReinitialization
IoRegisterDeviceInterface
IoReadPartitionTable
IoRaiseInformationalHardError
IoRaiseHardError
IoIsWdmVersionAvailable
IoInitializeTimer
IoGetInitialStack
IoGetFileObjectGenericMapping
IoGetDmaAdapter
IoGetDeviceToVerify
IoGetDeviceObjectPointer
IoGetConfigurationInformation
IoFreeController
IoDisconnectInterrupt
IoDetachDevice
IoDeleteSymbolicLink
IoDeleteDevice
IoDeleteController
IoCreateUnprotectedSymbolicLink
IoCreateSynchronizationEvent
IoCreateSymbolicLink
IoCreateNotificationEvent
IoCreateController
IoConnectInterrupt
IoCheckShareAccess
IoBuildDeviceIoControlRequest
IoAttachDevice
IoAllocateController
ExUuidCreate
ExUnregisterCallback
ExTryToAcquireFastMutex
ExSetTimerResolution
ExRegisterCallback
ExRaiseStatus
ExRaiseDatatypeMisalignment
ExRaiseAccessViolation
ExIsProcessorFeaturePresent
ExInitializePagedLookasideList
ExDeleteResourceLite
ExDeletePagedLookasideList
ExCreateCallback
ExConvertExclusiveToSharedLite
ExAcquireSharedWaitForExclusive
ExAcquireSharedStarveExclusive
ExAcquireResourceSharedLite
ExAcquireResourceExclusiveLite
CmUnRegisterCallback
CmRegisterCallbackEx
CmRegisterCallback
ZwSetValueKey should only be called at IRQL = PASSIVE_LEVEL.
ZwQueryValueKey should only be called at IRQL = PASSIVE_LEVEL.
ZwQueryKey should only be called at IRQL = PASSIVE_LEVEL.
ZwOpenKey should only be called at IRQL = PASSIVE_LEVEL.
ZwFlushKey should only be called at IRQL = PASSIVE_LEVEL.
ZwEnumerateValueKey should only be called at IRQL = PASSIVE_LEVEL.
ZwEnumerateKey should only be called at IRQL = PASSIVE_LEVEL.
ZwDeleteKey should only be called at IRQL = PASSIVE_LEVEL.
ZwCreateKey should only be called at IRQL = PASSIVE_LEVEL.
ZwClose should only be called at IRQL = PASSIVE_LEVEL.
RtlDeleteRegistryValue should only be called at IRQL = PASSIVE_LEVEL.
PsTerminateSystemThread should only be called at IRQL = PASSIVE_LEVEL.
PsSetLoadImageNotifyRoutine should only be called at IRQL = PASSIVE_LEVEL.
PsSetCreateThreadNotifyRoutine should only be called at IRQL = PASSIVE_LEVEL.
PsSetCreateProcessNotifyRoutine should only be called at IRQL = PASSIVE_LEVEL.
PsGetVersion should only be called at IRQL = PASSIVE_LEVEL.
PsCreateSystemThread should only be called at IRQL = PASSIVE_LEVEL.
ProbeForWrite should only be called at IRQL <= APC_LEVEL.
ProbeForRead should only be called at IRQL <= APC_LEVEL.
The last parameter of PoRequestPowerIrp must be null.
ObReleaseObjectSecurity should only be called at IRQL <= APC_LEVEL.
ObReferenceObjectByHandle should only be called at IRQL = PASSIVE_LEVEL.
ObGetObjectSecurity should only be called at IRQL <= APC_LEVEL.
MmUnsecureVirtualMemory should only be called at IRQL <= APC_LEVEL.
MmUnlockPagableImageSection should only be called at IRQL <= APC_LEVEL.
MmSecureVirtualMemory should only be called at IRQL <= APC_LEVEL.
MmResetDriverPaging should only be called at IRQL <= APC_LEVEL.
MmPageEntireDriver should only be called at IRQL <= APC_LEVEL.
MmLockPagableSectionByHandle should only be called at IRQL <= APC_LEVEL.
MmLockPagableDataSection should only be called at IRQL <= APC_LEVEL.
MmFreePagesFromMdl should only be called at IRQL <= DISPATCH_LEVEL.
MmFreeNonCachedMemory should only be called at IRQL <= APC_LEVEL.
MmFreeContiguousMemory should only be called at IRQL <= DISPATCH_LEVEL.
MmAllocatePagesForMdlEx should only be called at IRQL <= DISPATCH_LEVEL.
MmAllocatePagesForMdl should only be called at IRQL <= DISPATCH_LEVEL.
MmAllocateNonCachedMemory should only be called at IRQL <= APC_LEVEL.
KeTryToAcquireGuardedMutex should only be called at IRQL <= APC_LEVEL.
KeSetTimerEx should only be called at IRQL <= DISPATCH_LEVEL.
KeSetTimer should only be called at IRQL <= DISPATCH_LEVEL.
KeSetEvent should only be called at IRQL <= DISPATCH_LEVEL.
KeSetEvent should only be called at IRQL <= APC_LEVEL when Wait is set to TRUE.
KeResetEvent should only be called at IRQL <= DISPATCH_LEVEL.
KeRemoveEntryDeviceQueue should only be called at IRQL <= DISPATCH_LEVEL.
KeRemoveDeviceQueue should only be called at IRQL == DISPATCH_LEVEL.
KeRemoveByKeyDeviceQueue should only be called at IRQL == DISPATCH_LEVEL.
KeReleaseSpinLockFromDpcLevel should only be called at IRQL >= DISPATCH_LEVEL.
KeReleaseSpinLock should only be called at IRQL = DISPATCH_LEVEL.
KeReleaseMutex should only be called at IRQL <= DISPATCH_LEVEL.
KeReleaseGuardedMutexUnsafe should only be called at IRQL <= APC_LEVEL.
KeReleaseGuardedMutex should only be called at IRQL <= APC_LEVEL.
KeRegisterNmiCallback should only be called at IRQL <= APC_LEVEL.
KeReadStateTimer should only be called at IRQL <= DISPATCH_LEVEL.
KeReadStateEvent should only be called at IRQL <= DISPATCH_LEVEL.
KePulseEvent should only be called at IRQL <= DISPATCH_LEVEL.
KeLeaveGuardedRegion should only be called at IRQL <= APC_LEVEL.
KeLeaveCriticalRegion should only be called at IRQL <= APC_LEVEL.
KeInsertDeviceQueue should only be called at IRQL == DISPATCH_LEVEL.
KeInsertByKeyDeviceQueue should only be called at IRQL == DISPATCH_LEVEL.
KeInitializeTimerEx should only be called at IRQL <= DISPATCH_LEVEL.
KeInitializeTimer should only be called at IRQL <= DISPATCH_LEVEL.
KeInitializeSemaphore should only be called at IRQL <= DISPATCH_LEVEL.
KeInitializeDeviceQueue should only be called at IRQL <= DISPATCH_LEVEL.
KeEnterGuardedRegion should only be called at IRQL <= APC_LEVEL.
KeEnterCriticalRegion should only be called at IRQL <= APC_LEVEL.
KeDeregisterNmiCallback should only be called at IRQL <= APC_LEVEL.
KeDelayExecutionThread should only be called at IRQL <= APC_LEVEL.
KeClearEvent should only be called at IRQL <= DISPATCH_LEVEL.
KeCancelTimer should only be called at IRQL <= DISPATCH_LEVEL.
KeAcquireSpinLockRaiseToDpc should only be called at IRQL <= DISPATCH_LEVEL.
KeAcquireSpinLockAtDpcLevel should only be called at IRQL >= DISPATCH_LEVEL.
KeAcquireGuardedMutexUnsafe should only be called at IRQL <= APC_LEVEL.
KeAcquireGuardedMutex should only be called at IRQL <= APC_LEVEL.
The IRP can only be completed with STATUS_SUCCESS.
IoWritePartitionTable should only be called at IRQL = PASSIVE_LEVEL.
IoWriteErrorLogEntry should only be called at IRQL <= DISPATCH_LEVEL.
IoWMIRegistrationControl should only be called at IRQL = PASSIVE_LEVEL.
IoWMIAllocateInstanceIds should only be called at IRQL = PASSIVE_LEVEL.
IoUpdateShareAccess should only be called at IRQL = PASSIVE_LEVEL.
IoUnregisterShutdownNotification should only be called at IRQL = PASSIVE_LEVEL.
IoStartNextPacket should only be called at IRQL == DISPATCH_LEVEL.
IoSetShareAccess should only be called at IRQL = PASSIVE_LEVEL.
IoSetPartitionInformation should only be called at IRQL = PASSIVE_LEVEL.
IoSetDeviceToVerify should only be called at IRQL <= DISPATCH_LEVEL.
IoSetDeviceInterfaceState should only be called at IRQL = PASSIVE_LEVEL.
IoRemoveShareAccess should only be called at IRQL = PASSIVE_LEVEL.
IoRegisterShutdownNotification should only be called at IRQL = PASSIVE_LEVEL.
IoRegisterDriverReinitialization should only be called at IRQL = PASSIVE_LEVEL.
IoRegisterDeviceInterface should only be called at IRQL = PASSIVE_LEVEL.
IoReadPartitionTable should only be called at IRQL = PASSIVE_LEVEL.
IoRaiseInformationalHardError should only be called at IRQL <= APC_LEVEL.
IoRaiseHardError should only be called at IRQL <= APC_LEVEL.
IoIsWdmVersionAvailable should only be called at IRQL = PASSIVE_LEVEL.
IoInitializeTimer should only be called at IRQL = PASSIVE_LEVEL.
IoGetInitialStack should only be called at IRQL <= APC_LEVEL.
IoGetFileObjectGenericMapping should only be called at IRQL = PASSIVE_LEVEL.
IoGetDmaAdapter should only be called at IRQL = PASSIVE_LEVEL.
IoGetDeviceToVerify should only be called at IRQL <= DISPATCH_LEVEL.
IoGetDeviceObjectPointer should only be called at IRQL = PASSIVE_LEVEL.
IoGetConfigurationInformation should only be called at IRQL = PASSIVE_LEVEL.
IoFreeController should only be called at IRQL == DISPATCH_LEVEL.
IoDisconnectInterrupt should only be called at IRQL = PASSIVE_LEVEL.
IoDetachDevice should only be called at IRQL = PASSIVE_LEVEL.
IoDeleteSymbolicLink should only be called at IRQL = PASSIVE_LEVEL.
IoDeleteDevice should only be called at IRQL <= APC_LEVEL.
IoDeleteController should only be called at IRQL = PASSIVE_LEVEL.
IoCreateUnprotectedSymbolicLink should only be called at IRQL = PASSIVE_LEVEL.
IoCreateSynchronizationEvent should only be called at IRQL = PASSIVE_LEVEL.
IoCreateSymbolicLink should only be called at IRQL = PASSIVE_LEVEL.
IoCreateNotificationEvent should only be called at IRQL = PASSIVE_LEVEL.
IoCreateFile should only be called at IRQL = PASSIVE_LEVEL.
IoCreateDevice should only be called at IRQL <= APC_LEVEL.
IoCreateController should only be called at IRQL = PASSIVE_LEVEL.
IoConnectInterrupt should only be called at IRQL = PASSIVE_LEVEL.
IoCheckShareAccess should only be called at IRQL = PASSIVE_LEVEL.
IoBuildDeviceIoControlRequest should only be called at IRQL <= APC_LEVEL.
IoAttachDevice should only be called at IRQL = PASSIVE_LEVEL.
IoAllocateController should only be called at IRQL == DISPATCH_LEVEL.
ExUuidCreate should only be called at IRQL = PASSIVE_LEVEL.
ExUnregisterCallback should only be called at IRQL <= APC_LEVEL.
ExTryToAcquireFastMutex should only be called at IRQL <= APC_LEVEL.
ExSetTimerResolution should only be called at IRQL <= APC_LEVEL.
ExRegisterCallback should only be called at IRQL <= APC_LEVEL.
ExRaiseStatus should only be called at IRQL <= APC_LEVEL.
ExRaiseDatatypeMisalignment should only be called at IRQL = PASSIVE_LEVEL.
ExRaiseAccessViolation should only be called at IRQL = PASSIVE_LEVEL.
ExIsProcessorFeaturePresent should only be called at IRQL = PASSIVE_LEVEL.
ExInitializePagedLookasideList should only be called at IRQL <= APC_LEVEL.
ExDeleteResourceLite should only be called at IRQL <= APC_LEVEL.
ExDeletePagedLookasideList should only be called at IRQL <= APC_LEVEL.
ExCreateCallback should only be called at IRQL <= APC_LEVEL.
ExConvertExclusiveToSharedLite should only be called at IRQL <= APC_LEVEL.
ExAllocatePool should only be called at IRQL <= DISPATCH_LEVEL.
ExAllocatePool can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPool.
ExAllocatePool can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not DontUseThisType.
ExAllocatePool can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPoolCacheAligned.
ExAllocatePool can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not MaxPoolType.
ExAllocatePoolWithTag should only be called at IRQL <= DISPATCH_LEVEL.
ExAllocatePoolWithTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPool.
ExAllocatePoolWithTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not DontUseThisType.
ExAllocatePoolWithTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPoolCacheAligned.
ExAllocatePoolWithTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not MaxPoolType.
ExAllocatePoolWithTagPriority should only be called at IRQL <= DISPATCH_LEVEL.
ExAllocatePoolWithTagPriority can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPool.
ExAllocatePoolWithTagPriority can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not DontUseThisType.
ExAllocatePoolWithTagPriority can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPoolCacheAligned.
ExAllocatePoolWithTagPriority can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not MaxPoolType.
ExAllocatePoolWithQuota should only be called at IRQL <= DISPATCH_LEVEL.
ExAllocatePoolWithQuota can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPool.
ExAllocatePoolWithQuota can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not DontUseThisType.
ExAllocatePoolWithQuota can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPoolCacheAligned.
ExAllocatePoolWithQuota can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not MaxPoolType.
ExAllocatePoolWithQuotaTag should only be called at IRQL <= DISPATCH_LEVEL.
ExAllocatePoolWithQuotaTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPool.
ExAllocatePoolWithQuotaTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not DontUseThisType.
ExAllocatePoolWithQuotaTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not PagedPoolCacheAligned.
ExAllocatePoolWithQuotaTag can be called at DISPATCH_LEVEL only if a NonPagedXXX is specified for PoolType, not MaxPoolType.
ExAcquireSharedWaitForExclusive should only be called at IRQL <= APC_LEVEL.
ExAcquireSharedStarveExclusive should only be called at IRQL <= APC_LEVEL.
ExAcquireResourceSharedLite should only be called at IRQL <= APC_LEVEL.
ExAcquireResourceExclusiveLite should only be called at IRQL <= APC_LEVEL.
ExAcquireFastMutex should only be called at IRQL <= APC_LEVEL.
CmUnRegisterCallback should only be called at IRQL <= APC_LEVEL.
CmRegisterCallbackEx should only be called at IRQL <= APC_LEVEL.
CmRegisterCallback should only be called at IRQL <= APC_LEVEL.
AddDevice
ExEnterPriorityRegionAndAcquireResourceExclusive
ExEnterPriorityRegionAndAcquireResourceShared
ExEnterCriticalRegionAndAcquireResourceExclusive
ExEnterCriticalRegionAndAcquireResourceShared
ExEnterCriticalRegionAndAcquireSharedWaitForExclusive
ExReleaseResourceAndLeavePriorityRegion
ExReleaseResourceAndLeaveCriticalRegion
The driver is releasing a stack queued spin lock without acquiring first.
The driver is claiming to leave critical region from outside some critical region.
ZwWriteFile
ZwSetInformationFile
ZwSetEaFile
ZwFlushBuffersFileEx
ZwFlushBuffersFile
ZwCreateDirectoryObject
RtlCreateSystemVolumeInformationFolder
NtWriteFile
NtSetInformationFile
IoOpenDeviceRegistryKey
IoOpenDeviceInterfaceRegistryKey
IoGetDriverDirectory
IoGetDeviceDirectory
CcFastCopyWrite
CcDeferWrite
CcCopyWriteEx
CcCopyWrite
ZwWriteFile should only be called at IRQL = PASSIVE_LEVEL.
ZwSetInformationKey should only be called at IRQL = PASSIVE_LEVEL.
ZwSetInformationFile should only be called at IRQL = PASSIVE_LEVEL.
ZwSetEaFile should only be called at IRQL = PASSIVE_LEVEL.
ZwRenameKey should only be called at IRQL = PASSIVE_LEVEL.
ZwOpenKeyTransactedEx should only be called at IRQL = PASSIVE_LEVEL.
ZwOpenKeyTransacted should only be called at IRQL = PASSIVE_LEVEL.
ZwOpenKeyEx should only be called at IRQL = PASSIVE_LEVEL.
ZwFlushBuffersFileEx should only be called at IRQL = PASSIVE_LEVEL.
ZwFlushBuffersFile should only be called at IRQL = PASSIVE_LEVEL.
ZwDeleteValueKey should only be called at IRQL = PASSIVE_LEVEL.
ZwDeleteFile should only be called at IRQL = PASSIVE_LEVEL.
ZwCreateKeyTransacted should only be called at IRQL = PASSIVE_LEVEL.
ZwCreateFile should only be called at IRQL = PASSIVE_LEVEL.
ZwCreateDirectoryObject should only be called at IRQL = PASSIVE_LEVEL.
RtlWriteRegistryValue should only be called at IRQL = PASSIVE_LEVEL.
RtlCreateSystemVolumeInformationFolder should only be called at IRQL = PASSIVE_LEVEL.
RtlCreateRegistryKey should only be called at IRQL = PASSIVE_LEVEL.
NtWriteFile should only be called at IRQL = PASSIVE_LEVEL.
NtSetInformationFile should only be called at IRQL = PASSIVE_LEVEL.
NtCreateFile should only be called at IRQL = PASSIVE_LEVEL.
IoOpenDeviceRegistryKey should only be called at IRQL = PASSIVE_LEVEL.
IoOpenDeviceInterfaceRegistryKey should only be called at IRQL = PASSIVE_LEVEL.
IoGetDriverDirectory should only be called at IRQL = PASSIVE_LEVEL.
IoGetDeviceDirectory should only be called at IRQL = PASSIVE_LEVEL.
IoCreateFileSpecifyDeviceObjectHint should only be called at IRQL = PASSIVE_LEVEL.
IoCreateFileEx should only be called at IRQL = PASSIVE_LEVEL.
CcFastCopyWrite should only be called at IRQL <= APC_LEVEL.
CcDeferWrite should only be called at IRQL <= APC_LEVEL.
CcCopyWriteEx should only be called at IRQL <= APC_LEVEL.
CcCopyWrite should only be called at IRQL <= APC_LEVEL.
KeSaveExtendedProcessorState
KeRestoreExtendedProcessorState
FltMgr.sys
Double OID request detected at MiniportOidRequest.
OID_DOT11_CONNECT_REQUEST is failed by MiniportOidRequest after NDIS_STATUS_DOT11_CONNECTION_START is inidcated.
A different OID is being completed other than the pending OID.
Double OID completion detected at MiniportOidRequest.
This OID should only be completed with NDIS_STATUS_NOT_ACCEPTED, NDIS_STATUS_SUCCESS, or NDIS_STATUS_PENDING.
This OID should only be completed with NDIS_STATUS_NOT_ACCEPTED, NDIS_STATUS_REQUEST_ABORTED, NDIS_STATUS_SUCCESS, or NDIS_STATUS_PENDING.
9: The miniport driver didn't process any NBL too long before this moment.
9: Timeout on sending a NET_BUFFER_LIST by MiniportSendNetBufferLists.
Double OID completion detected at NdisMOidRequestComplete.
A different OID is being completed at NdisMOidRequestComplete rather than the one previously sent by MiniportOidRequest.
NdisMOidRequestComplete should not be called with 3rd parameter (i.e., Status) as NDIS_STATUS_PENDING.
This OID should only be completed with NDIS_STATUS_NOT_ACCEPTED or NDIS_STATUS_SUCCESS.
This OID should only be completed with NDIS_STATUS_NOT_ACCEPTED, NDIS_STATUS_REQUEST_ABORTED, or NDIS_STATUS_SUCCESS.
OID_DOT11_CONNECT_REQUEST is failed by NdisMOidRequestComplete after NDIS_STATUS_DOT11_CONNECTION_START is inidcated.
NDIS_STATUS_DOT11_CONNECTION_START is inidcated without a prevoius OID_DOT11_CONNECT_REQUEST.
NDIS_STATUS_DOT11_DISASSOCIATION without NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION first.
NDIS_STATUS_DOT11_CONNECTION_COMPLETION missing for the previous NDIS_STATUS_DOT11_CONNECTION_START.
NDIS_STATUS_DOT11_CONNECTION_START indicated between NDIS_STATUS_DOT11_ROAMING_START and NDIS_STATUS_DOT11_ROAMING_COMPLETION.
NDIS_STATUS_DOT11_ROAMING_START indicated between NDIS_STATUS_DOT11_CONNECTION_START and NDIS_STATUS_DOT11_CONNECTION_COMPLETION.
NDIS_STATUS_DOT11_ROAMING_COMPLETION missing for the previous NDIS_STATUS_DOT11_ROAMING_START.
NDIS_STATUS_DOT11_CONNECTION_COMPLETION without an NDIS_STATUS_DOT11_CONNECTION_START indicated first.
NDIS_STATUS_DOT11_ROAMING_COMPLETION without an NDIS_STATUS_DOT11_ROAMING_START indicated first.
NDIS_STATUS_DOT11_CONNECTION_COMPLETION indicated without an NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION for an NDIS_STATUS_DOT11_ASSOCIATION_START.
NDIS_STATUS_DOT11_ROAMING_COMPLETION indicated without an NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION for an NDIS_STATUS_DOT11_ASSOCIATION_START.
NDIS_STATUS_DOT11_ASSOCIATION_START indicated outside the connection/roaming operations.
Double association start.
NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION indicated without an NDIS_STATUS_DOT11_ASSOCIATION_START first.
The filter driver can only return NDIS_STATUS_SUCCESS or NDIS_STATUS_PENDING from FilterPause.
The filter driver calls NdisFPauseComplete without its FilterPause returning NDIS_STATUS_PENDING first.
VerifierExt.pdb
.text$mn
.text$mn$00
.text$mn$21
.rdata$brc
.gehcont
.rdata
.rdata$zzzdbg
.xdata
.data$brc
.data
.pdata
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
.pldata
fogrp
.edata
.gfids
.rsrc$01
.rsrc$02
cuzzlog
VfIsRuleClassEnabled
RtlEqualUnicodeString
IofCompleteRequest
RtlInitUnicodeString
IoCreateSymbolicLink
IoDeleteSymbolicLink
IoDeleteDevice
VfQueryDispatchTable
CarInitializeRuleViolationDetails
CarReportRuleViolationForTriage
vDbgPrintEx
RtlGetPersistedStateLocation
wcscpy_s
RtlDeleteRegistryValue
CarRegisterDefaultRuleClassConfiguration
CarSetCustomRuleIdRange
CarDeregisterRuleClassConfiguration
ExAllocateFromNPagedLookasideList
ExAcquireSpinLockExclusive
ExAllocatePool2
ExReleaseSpinLockExclusive
ExInitializeNPagedLookasideList
ExFreeToNPagedLookasideList
ExFreePoolWithTag
RtlWalkFrameChain
KeGetCurrentIrql
wcstoul
ZwOpenKey
ZwQueryValueKey
ZwClose
ZwSetValueKey
IoGetStackLimits
EtwWriteTransfer
EtwUnregister
EtwRegister
ntoskrnl.exe
MmGetSystemRoutineAddress
ObOpenObjectByPointer
IoCreateDevice
IoDeviceObjectType
ZwSetSecurityObject
RtlSetDaclSecurityDescriptor
IoIsWdmVersionAvailable
RtlLengthSid
RtlAddAccessAllowedAce
RtlAbsoluteToSelfRelativeSD
wcschr
ExAllocatePoolWithTag
_wcsnicmp
RtlCreateSecurityDescriptor
SeExports
RtlLengthSecurityDescriptor
_snwprintf
SeCaptureSecurityDescriptor
RtlGetSaclSecurityDescriptor
RtlGetOwnerSecurityDescriptor
RtlGetGroupSecurityDescriptor
RtlGetDaclSecurityDescriptor
RtlFreeUnicodeString
ZwCreateKey
DifRegisterPlugin
KeIsExecutingDpc
KeDelayExecutionThread
KeQueryDpcWatchdogInformation
PsGetCurrentThreadId
KeAcquireSpinLockRaiseToDpc
KeInitializeSpinLock
RtlCaptureStackBackTrace
KeReleaseSpinLock
ExReleaseSpinLockShared
ExAcquireSpinLockShared
PsGetCurrentProcessId
RtlCompareUnicodeString
RtlAppendUnicodeStringToString
DbgPrompt
IoAllocateWorkItem
ExSetTimer
ExDeleteTimer
ExAllocateTimer
ExReleaseSpinLockSharedFromDpcLevel
ExAcquireSpinLockSharedAtDpcLevel
IoUninitializeWorkItem
IoFreeWorkItem
IoQueueWorkItem
KeFlushQueuedDpcs
DifGetPluginPerDriverData
DifUtilDbgPrint
CarReportRuleViolation
CarRegisterRuleOverride
RtlFreeAnsiString
KeEnterCriticalRegion
ExAcquireResourceExclusiveLite
CarRegisterRuleClassConfiguration
RtlUnicodeStringToAnsiString
RtlInitAnsiString
ExReleaseResourceLite
ExInitializeResourceLite
KeLeaveCriticalRegion
ZwQueryKey
RtlAppendUnicodeToString
RtlAppendStringToString
ExAcquireResourceSharedLite
RtlPrefixUnicodeString
ObfDereferenceObject
iswdigit
RtlCopyUnicodeString
IoFileObjectType
ObReferenceObjectByHandle
iswalnum
RtlFindUnicodeSubstring
_vsnwprintf
_wcsicmp
__C_specific_handler
MmIsAddressValid
MmUnlockPages
MmProbeAndLockPages
ZwOpenProcessTokenEx
RtlSubAuthoritySid
RtlRandomEx
IoAllocateMdl
DifPluginSimplePerfControl
_vsnprintf
MmUserProbeAddress
_snprintf_s
ZwQueryInformationToken
IoFreeMdl
MmMapLockedPagesSpecifyCache
DifPopThreadContextData
DifPushThreadContextData
DifFindThreadContextData
CarCreateRuleViolationDetails
CarDeleteRuleViolationDetails
KeQueryPerformanceCounter
KeStallExecutionProcessor
HAL.dll
USVATAUAVAWH
H9]xt
H9Mxt#H
pA_A^A]A\^[]
f9,Qu
SeTsI
WATAUAVAWH
 A_A^A]A\_
UVWAVAWH
9:u|B
 A_A^_^]
@USVWATAUAVAWH
fD9$Cu
SeAlA
XA_A^A]A\_^[]
WATAUAVAWH
 A_A^A]A\_
n0fD;
UWAVH
E8!E(
SeSdH
pA^_]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
D8MHt
PA_A^A]A\_^]
L$(E3
UWAVH
E(H9]
0A^_]
L$ UH
H WAVAWH
PpRbH
0A_A^_
WAVAWH
PpUcC
L$8fD
L$0E3
@A_A^_
L$XH3
VerifierExt.sys
AutoFailInject
SetXdvKernelUtilities
XdvHibernationNotification
XdvLoadDifPlugins
XdvQueryDispatchTable
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Driver Verifier Extension
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
VerifierExt.sys
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
VerifierExt.sys
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
XDV driver loaded!
A Driver Verifier rule violation has been detected by VerifierExt.
Start
Error
Information
System
XDV driver unloaded!
Driver Event: entry function/DDI calls
CRIM0
Microsoft-Windows-Kernel-XDV/Analytic
System
TTBLd
TEMP`
EventData
IRP_Address
IRP_Stack_Loc_Code
IRP_Parameters
Module
UInt32_Event_Number
Address_Stack
IRP_Address
IRP_Stack_Loc_Code
IRP_Parameters
Module
UInt32_Event_Number
Address_Stack
EventData
RuleId
ErrorMessage
Module
RuleId
ErrorMessage
Module
PRVAP
Microsoft-Windows-Kernel-XDV
OPCOT
win:Start
win:Stop
LEVLd
win:Error
win:Informational
ms:ReservedKeyword44
ms:Telemetry
ms:Measures
ms:CriticalData
Driver Verifier Extension>Driver Verifier component to help find bugs in device drivers.
WEVT_TEMPLATE
en-US
^0^B^
P(P:P
SiUO\t]
R5X_X
TPV@W0X0Y
W^XfZ
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
'nvhJ
,EuGoOlh11a502dUmXXl4hDFGKghkqbo7fBy4lG9TKtg=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
nT^YQp
Xrtsh
20220506222135.648Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:0A56-E329-4D4D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
220302185122Z
230511185122Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:0A56-E329-4D4D1%0#
Microsoft Time-Stamp Service0
Io00Ck
!vr})
g{N+3
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
9omXZ
GvuIU
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:0A56-E329-4D4D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220506175247Z
20220507175247Z0w0=
1/0-0
1(0&0
?^KX$jDRQ
654.s
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
