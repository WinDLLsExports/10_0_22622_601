!This program cannot be run in DOS mode.
RichM
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$0H3
t$ WH
x ATAVAWH
@A_A^A\
WAVAWH
(t$PL
(|$@I
A_A^_
WAVAWH
A_A^_
UVWAVAWH
L$PH3
`A_A^_^]
s WATAUAVAWH
T$PD+D$L+T$HH
L$XH3
A_A^A]A\_
SVWAVAWH
A_A^_^[
q9R4Z
p AWH
UWAVH
q9R4Z
\$ UVWATAUAVAWH
A9>ug
H9=YK
A_A^A]A\_^]
UVWATAUAVAWH
D$H9E
A_A^A]A\_^]
p AWH
p WAVAWH
@A_A^_
WATAVH
A^A\_
u"9_0u
x ATAVAWH
@A_A^A\
h VWAVH
@A^_^
WATAVH
A^A\_
VWAVH
!|$`H
@A^_^
\$ UVWATAVH
@A^A\_^]
@SUVWATAVH
HA^A\_^][
q:R0<
\$ UVWATAVH
`A^A\_^]
UVWAVAWH
@A_A^_^]
WAVAWH
A_A^_
VWATAUAVH
A^A]A\_^
WAVAWH
@A_A^_
l$ WAVAWH
@A_A^_
WAVAWH
@A_A^_
UWATAVAWH
A_A^A\_]
q`W~$
ATAUAWH
A_A]A\
UVWATAUAVAWH
T$X+D$LI
D$P+D$H
T$h+D$\H
A_A^A]A\_^]
UATAUAVAWH
tKD!m
A_A^A]A\]
` AUAVAWH
@A_A^A]
` AUAVAWH
@A_A^A]
` AUAVAWH
@A_A^A]
UVWATAUAVAWH
pA_A^A]A\_^]
p AWH
UVWATAUAVAWH
D$XE3
`A_A^A]A\_^]
@USVWAUAVAWH
L!t$@
D$pE3
L$0E3
D!t$(H
L$@L!t$@H
A_A^A]_^[]
\$ E3
t$ WAVAW
A_A^_
x ATAVAWH
fD99t4I
@A_A^A\
L$ SVWAVH
(A^_^[
x ATAVAWH
A_A^A\
UVWAVAWH
D$HH;
D$PH;C
L$XH3
`A_A^_^]
{ ATAVAWH
A_A^A\
{ AWH
VATAUAVAWH
@A_A^A]A\^
WAVAWH
A_A^_
WAVAWH
@A_A^_
WAVAWH
@A_A^_
x AWH
{ AVH
H9L$Xt
D$XE3
q9R4Z
x AWH
UWATAUAWH
!D$8H
H!D$0
H!D$(E3
H!D$ E3
L$`E3
A_A]A\_]
UVWAUAVH
D$X98t
A^A]_^]
x UATAUAVAWH
H!\$0H
D$(E3
H!\$8H
D$0E3
H!\$(H
D$ E3
D$(H!\$ L
H!\$0H
D$ E3
H!\$8H
D$0E3
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAVH
D$ E3
L$hH3
pA^A\_^]
x AWH
WAVAWH
A_A^_
UWATAVAWH
A_A^A\_]
x AVH
x AUAVAWH
@A_A^A]
x ATAVAWH
@A_A^A\
SUVWATAUAWH
D$8E3
PA_A]A\_^][
p AWH
t$ UWATAVAWH
H!]@H
A_A^A\_]
USVWATAUAVAWH
t$PE3
D$HE3
EgH!t$ H
A_A^A]A\_^[]
UVWATAUAVAWH
}X''''
`A_A^A]A\_^]
s AWH
WAVAWH
A_A^_
VWATAVAWH
A_A^A\_^
VWATAVAWH
@A_A^A\_^
UWATAVAWH
A_A^A\_]
x UATAUAVAWH
L$p!|$@A
H!|$PH
D$`H!|$HH
D$0E3
D$`H;
A_A^A]A\]
p WATAWH
D$@H!\$8A
D$0!\$(H!\$ H
A_A\_
ATAVAWH
!\$`I
!\$(D
@A_A^A\
l$ VWATAVAWH
 A_A^A\_^
USVWATAUAVAWH
taD9g
x@D9e
A_A^A]A\_^[]
s AWH
!\$PA
!\$(I![
L$@H3
VWATAVAWH
@A_A^A\_^
VWAUAVAWH
D$HH+
A_A^A]_^
UVWATAUAVAWH
@A_A^A]A\_^]
\$ UVWATAUAVAWH
L$pE3
fD9 t
L$HfD
D$`I+
A_A^A]A\_^]
SUVWATAUAVAWH
(A_A^A]A\_^][
SUVWATAUAVAWH
(A_A^A]A\_^][
x ATAVAWH
@A_A^A\
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
WATAVH
A^A\_
h VWAVH
@A^_^
x ATAVAWH
A_A^A\
qQ\tI
t$@E3
k AWH
x ATAVAWH
t=f9(t8H
A_A^A\
UATAUAVAWH
fD9+u
A_A^A]A\]
x AVH
ATAVAWH
H!_(H
@A_A^A\
WAVAWH
@A_A^_
c AUAVAWH
L$`H3
A_A^A]
UWATAVAWH
E8H!]8H
p UXY
A_A^A\_]
@SUVWAUAVAWH
L$xH3
A_A^A]_^][
UVWATAUAVAWH
L$PE3
A_A^A]A\_^]
q9R4Z
VWATAVAWH
A_A^A\_^
ATAUAWH
rPI9X
@A_A]A\
x ATAVAWH
@A_A^A\
UVWATAUAVAWH
@A_A^A]A\_^]
VWAVH
@A^_^
WAVAWH
A_A^_
q9R4Z
p AWH
s WATAUAVAWH
D$HD+
T$DE+
L$PH3
A_A^A]A\_
VWAUAVAWH
A_A^A]_^
WAVAWH
@A_A^_
WAVAWH
@A_A^_
@USVWATAUAVAWH
L$PE3
A_A^A]A\_^[]
p WAUAVH
A^A]_
h VWATAUAWH
A_A]A\_^
L$0E3
x UATAUAVAWH
A_A^A]A\]
p AWH
t$ WATAUAVAWH
D!|$@L!|$HM
A_A^A]A\_
q8Q2&
UVWATAUAVAWH
DD$@A
A_A^A]A\_^]
SUVWAVH
0A^_^][
UVWATAUAVAWH
D$0E3
d$(E3
d$HE3
d$@E3
pA_A^A]A\_^]
UVWAVAWH
x!9l$pu
@A_A^_^]
t$ WAVAWH
@A_A^_
D$ E3
UVWATAUAVAWH
tFD9=
@A_A^A]A\_^]
@USVWATAVAWH
!u@E3
H!uHH
@A_A^A\_^[]
ATAVAWH
@A_A^A\
p WAVAWH
@A_A^_
x UATAUAVAWH
D!l$D3
D!d$H
L!d$`D!d$LD!d$XD!d$P
D$LE3
D9t$Pt
A_A^A]A\]
VWATAUAVH
@A^A]A\_^
WAVAWH
H!X A
H!\$ 3
9\$pt;H
@A_A^_
s WATAUAVAWH
!\$xI
A_A^A]A\_
UVWATAWH
@A_A\_^]
x UATAUAVAWH
D9t$`
9D$Xw
D$@E3
fD9ep
A_A^A]A\]
h VWATAUAWH
9l$pt
D$xE3
D$xE3
A_A]A\_^
qI[T-7|
UVWATAVH
@A^A\_^]
p WATAUAVAWH
A_A^A]A\_
q UXY
@USVWAUAVAWH
A_A^A]_^[]
VWATAUAVH
9D$@t
A^A]A\_^
p WATAWH
@A_A\_
q:Xz6
UATAUAVAWH
t)D95j
A_A^A]A\]
ATAVAWH
@A_A^A\
WATAUAVAWH
A_A^A]A\_
p"T^o
WAVAWH
@A_A^_
UVWAVAW
A_A^_^]
UWATAVAWH
!]gE3
|$HH!\$@E3
H!\$ H
A_A^A\_]
VWAVH
fD91uCH
fD94~u
fD94~u
 A^_^
UVWATAUAVAWH
fD9,Ku
fD9;I
fD9+t|H
u?fD9;u9
>.u+H
fF9,gu
)fD9/u
@A_A^A]A\_^]
UVWATAUAVAWH
fE9$vu
D$PL;
A_A^A]A\_^]
p WAVAWH
 A_A^_
VWAVH
uGfD9s
fD9sbu
 A^_^
VWAVH
f9+u9H
f9,~u
tPfD9t~
f9,~u
fD9t~
 A^_^
p AWH
VWATAVAWH
@A_A^A\_^
UVATAVAWH
!\$xH!
@A_A^A\^]
@USVWAUAVAWH
t$ E3
@A_A^A]_^[]
VWATAUAWH
PA_A]A\_^
VWAVH
(t$@I
VWAVH
@A^_^
q)PpD7
t$ WATAWH
)t$`H
L$XH3
(t$`I
A_A\_
UVWAVAWH
H+EHH
PA_A^_^]
UVWATAUAVAWH
PA_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
9|$pu
 A_A^A]A\_
x ATAVAWH
@A_A^A\
UVWATAUAVAWH
@A_A^A]A\_^]
@USVWATAUAVAWH
D$p;E
D9t$t
D9t$t
A_A^A]A\_^[]
UVWATAUAVAWH
@A_A^A]A\_^]
WAVAWH
@A_A^_
VWATAVAWH
A_A^A\_^
WATAUAVAWH
l$pD9)t
fD9(t
A_A^A]A\_
\$ UVWATAUAVAWH
t$HIcE8H
fD90t
IcE8H
L;|$P
L$XD9I8
A_A^A]A\_^]
WAVAWH
<wfD9
AfD9<ot
 A_A^_
h VWATH
@USVWATAVAWH
pA_A^A\_^[]
WATAUAVAWH
A_A^A]A\_
VWATAVAWH
PA_A^A\_^
t$ UWAUAVAWH
D$8E3
D$ E3
A_A^A]_]
s AWH
|$@E3
h WATAUAVAWH
D$xE3
A_A^A]A\_
p AWH
p WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
d$ !\$@3
PA_A^A]A\_^]
x UATAUAVAWH
l$ E3
A_A^A]A\]
VWATAUAVH
@A^A]A\_^
h VWATH
@A\_^
L$@E3
UVWATAUAVAWH
$tiH9U
A_A^A]A\_^]
L$0H3
H USVWATAUAVH
A^A]A\_^[]
UVWATAV
A^A\_^]
D$0E3
WAVAWH
pQ\tI
0A_A^_
VWATAUAVH
A^A]A\_^
WAVAWH
@A_A^_
VWATAVAWH
A_A^A\_^
x ATAVAWH
@A_A^A\
WAVAWH
A_A^_
ATAVAWH
@A_A^A\
WATAUAVAWH
A_A^A]A\_
WAVAWH
H!X L
@A_A^_
x AVH
UVWATAUAVAWH
fF9$p
@A_A^A]A\_^]
x ATAVAWH
0A_A^A\
@USVWAUAVAWH
A_A^A]_^[]
x ATAUAWH
H9\$pv]H
H9\$pw
0A_A]A\
VWAUAVAWH
A_A^A]_^
` AUAVAWH
D$PE3
fD90t
L$PH3
A_A^A]
UVWATAUAVAWH
L$XE3
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
WATAUAVAWH
fD9 t
A_A^A]A\_
UWATAVAWH
t$ E3
t$ E3
A_A^A\_]
\$ UVWATAUAVAWH
@A_A^A]A\_^]
x UATAUAVAWH
fD9 t%f
8.t5fD9
fD9 t
D$ E3
A_A^A]A\]
t$ WAUAVH
A^A]_
s WAVAWH
A_A^_
VWATAVAWH
@A_A^A\_^
x ATAVAWH
@A_A^A\
WATAUAVAWH
A_A^A]A\_
WAVAWH
A_A^_
VWAUAVAWH
!l$@H
A_A^A]_^
x ATAVAWH
@A_A^A\
H!9H!y
h VWATAUAWH
A_A]A\_^
ATAVAWH
A_A^A\
VWAVH
 A^_^
qzUtG
pzUtG
t$ WAVAWH
@A_A^_
UVWATAUAVAWH
p*\x}
D9mPH
HcUHH
`A_A^A]A\_^]
UWATAVAWH
H!}@H
A_A^A\_]
VWAUAVAWH
!|$pL
H!|$ I
A_A^A]_^
UVWATAUAVAWH
fA9?t
`A_A^A]A\_^]
WAVAWH
@A_A^_
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
D$0E3
A_A^A]A\]
x ATAVAWH
A_A^A\
VWAUAVAWH
H!\$0H
H!\$(L
@A_A^A]_^
UVWAUAWH
!X H!X
H!\$ H
@A_A]_^]
SUVWAUAVAWH
A![ L
H!\$ H
@A_A^A]_^][
VWATAVAWH
@A_A^A\_^
VWATAVAWH
@A_A^A\_^
UVWATAUAVAWH
i>f9M
d$hL+
A_A^A]A\_^]
x UATAUAVAWH
D9mWA
A_A^A]A\]
UVWATAUAVAWH
H!l$ H
PA_A^A]A\_^]
ATAVAWH
fD9 t
@A_A^A\
t$ UWAUAVAWH
A_A^A]_]
WAVAWH
@A_A^_
x AUAVAWH
@A_A^A]
k AVH
WATAUAVAWH
A_A^A]A\_
x ATAVAWH
@A_A^A\
UATAUAVAWH
A_A^A]A\]
WATAUAVAWH
\$PH!|$HH
A_A^A]A\_
VWATAUAVH
A^A]A\_^
x ATAVAWH
@A_A^A\
p9R4Z
q9R4Z
s ATAVAWH
A_A^A\
L$ UWAVH
t$ E3
s WAVAWH
L$XH3
A_A^_
VWAWH
@A__^
x AUAVAWH
@A_A^A]
x ATAVAWH
p`W~$
@A_A^A\
q`W~$
p AWH
p ATAVAWH
@A_A^A\
VWAVH
UVWATAUAVAWH
A96twH
E9.twH
@A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
VWAWH
@A__^
h VWAUAVAWH
A_A^A]_^
VWATAVAWH
A_A^A\_^
ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
D$DDtXH
@USWATAUAVAWH
EHt6H
EHt>H
t4A9~
t.HcC<
EPt>H
pA_A^A]A\_[]
q0R^G'
p AWH
D$$I;
u.L93t
p0R^G'
WAVAWH
\$ A;
0A_A^_
SVWAVH
\$px#H+
8A^_^[
VWAVH
\$px I+
@A^_^
D$HE3
D$HE3
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
ffffff
oD$ f
oL$0f
oT$@f
o\$PH
x AVH
IMM32.dll
Global\WMS:VcfFirstWarningThreshold
Global\WMS:VcfSecondWarningThreshold
CAudioLevels::Initialize - Entered.
WMSAud
termsrv\wms\src\sessionagent\audiolevels.cpp
%s(%d) - %s - Assertion failed:  %s (%s)  hr = 0x%08X
Assertion failed:  %s(%d) - %s - %s (%s)  hr = 0x%08X
CAudioLevels::Uninitialize - Entered.
CAudioLevels::Uninitialize
eFlow < (sizeof(*RtlpNumberOf(m_AudioDevice)))
CBRAEx
CAudioLevels::Set
CAudioLevels::Set eFlow = %s, nVolume = %f, fMuted = %s
CAudioLevels::OnDefaultDeviceChanged
cbBuffer >= sizeof (*pAudioLevel)
CAudioLevels::OnDataReceived
(BYTE *) pAudioLevel == pbEnd
FALSE
Assertion failed:  %s(%d) - %s - %s (%s)
%s(%d) - %s - Assertion failed:  %s (%s)
ASSERT
hr == S_OK
termsrv\wms\src\sessionagent\blankscreenwindow.cpp
wParam != 0
CBlankScreenWindow::OnEraseBkgnd
fSuccess
nResult != 0
CBlankScreenWindow::RecalcBackground
hbmCompatible != 0
hdcMem
0 != hbmOld
hbrush
logFont.lfHeight != 1
CBlankScreenWindow::CreatePointFontIndirect
hFont
CBlankScreenWindow::OnCreate
CBlockSessionWindow::s_srwScreen
bstrNewMsg
CBlockSessionWindow::SetBlankedMessage
termsrv\wms\src\sessionagent\blocksessionwindow.cpp
CBlockSessionWindow::OnCreate
CBlockSessionWindow::s_DesktopSwitchEventProc - Detected desktop switch
cxScreen
CBlockSessionWindow::RenderText
hOldFont
0xFFFFFFFF != clrOld
iResult
hTmpObj
s_hWinEventHook
CBlockSessionWindow::HookWindowHooks
Segoe
CSharedReaderWriterLock::CSharedReaderWriterLock
termsrv\wms\Src\inc\SrcSharedReaderWriterLock.h
pszBlockMessage != NULL
CBlockSessionWorkItem::Initialize
termsrv\wms\src\sessionagent\blocksessionworkitem.cpp
m_bstrBlockMessage
pszBlockMessage != 0
CBlockSessionWorkItem::s_QueueWorkItem
pWorkItem
CBlockSessionWorkItem::Block - idSession = %d message = %s
CBlockSessionWorkItem::Block - Exiting, returning 0x%08x.
CBlockSessionWorkItem::Unblock
CBlockSessionWorkItem::Unblock - Exiting, returning 0x%08x.
UiCreationThread
CChatAgent::~CChatAgent - session %lu
ppv != 0
CChatAgent::NondelegatingQueryInterface
termsrv\wms\src\sessionagent\chatagent.cpp
CChatAgent::Initialize
CChatAgent::Initialize
m_pQueueChatEvents
CChatAgent::GetTsInfo
guidTeacherChat != __uuidof(struct GUID_NULL)
CChatAgent::SendMsg
bstrMessage != 0
CChatAgent::SendMsg - guidTeacherChat = %s
CChatAgent::SendError
bstrErrorMsg != 0
CChatAgent::SendError - guidTeacherChat = %s
CChatAgent::SendError - hrError = 0x%8.8lx, bstrErrorMsg = %s
CChatAgent::Connect
bstrTeacherUserName != 0
CChatAgent::Connect - guidTeacherChat = %s
CChatAgent::Connect - bstrTeacherUserName = %s
CChatAgent::Disconnect
CChatAgent::Disconnect - guidTeacherChat = %s
CChatAgentEventQueue::DispatchEvent
termsrv\wms\src\sessionagent\chatagenteventqueue.cpp
((HRESULT)0x80070057L)
CChatAgentEventQueue::PostError - guidTeacherChat = %s
CChatAgentEventQueue::PostError
CChatAgentEventQueue::PostError - hrError = 0x%8.8lx, pszMsg = %s
pErrorEvent
CChatAgentEventQueue::ThreadProc
m_pChatDialog
CChatAgentWorkItem::Execute
termsrv\wms\src\sessionagent\chatagentworkitem.cpp
CChatDialog::~CChatDialog
CChatDialog::Destroy
CChatDialog::Initialize
termsrv\wms\src\sessionagent\chatdialog.cpp
CChatDialog::Initialize - guidTeacherChat = %s
CChatDialog::Initialize - pszTeacherDomainAndName = %s, pszStudentName = %s
Msftedit.dll
m_hInstMsftEdit
m_prgszMessageFormats
cchFormat != 0
*(rgStringResources[idxString].m_pcchResource)
CChatDialog::InitializeStringResources
*(rgCtrls[idxCtrl].m_phwndCtrl)
CChatDialog::InitializeControls
CChatDialog::DialogProc
lptrPreviousValue != 0 || dwRet == 0
CChatDialog::OnInitDialog
pEvent != 0
CChatDialog::OnSendMsg
pEvent->m_guidChat == m_guidTeacherChat
CChatDialog::OnWmsConnected
CChatDialog::OnWmsDisconnected
CChatDialog::OnWmsSendError
CChatDialog::OnSize
hdwpRet
CChatDialog::OnGetMinMaxInfo
CChatDialog::OnChatSendButtonClicked
pEvent
pEvent->m_bstrMessage
hwndFocus
CChatDialog::OnWmsDestroyDialog
pszInput
CChatDialog::GetRichEditText
CChatDialog::SetRichEditText
eUserType >= 0
CChatDialog::AddUserTime
eUserType < __MUT_Count
cchText
CChatDialog::ShowError
pszName
CChatDialog::GetTeacherName
CChatDialogList::m_lockChatDialogs
CChatDialogList::Add
termsrv\wms\src\sessionagent\chatdialoglist.cpp
CChatDialogList::Add - guidTeacherChat = %s
CChatDialogList::Add - pszTeacherName = %s, pszStudentName = %s
CChatDialogList::Add - there is a duplicate chat window for this chat guid.
%s(%d) - %s - Test failed:  %s
pChatDialog == 0
CBRLA
pChatDialog != NULL
CChatDialogList::RemoveAll
CChatDialogList::Find
CChatDialogList::Find - guidTeacherChat = %s
CChatDialogList::CreateChatDialog
CChatDialogList::CreateChatDialog - guidTeacherChat = %s
CChatDialogList::CreateChatDialog - pszTeacherName = %s, pszStudentName = %s
pDialog
CChatDialogList::PostChatEvent
CChatDialogList::PostMsg
CChatDialogList::PostMsg - guidTeacherChat = %s
pMsgEvent
pMsgEvent->m_bstrMessage
CChatDialogList::PostError
CChatDialogList::PostError - guidTeacherChat = %s
CChatDialogList::PostError - hrError = 0x%8.8lx, pszMsg = %s
CChatDialogList::PostDisconnecting
CChatDialogList::PostDisconnecting - guidTeacherChat = %s
pDisconnectEvent
CChatDialogList::PostConnecting
CChatDialogList::PostConnecting - guidTeacherChat = %s
pConnectEvent
CChatDialogList::Dump
CChatDialogList::Dump - guidTeacherChat = %s
CAutoReadLock::~CAutoReadLock
CSharedReaderWriterLock::UnlockRead - SRW read lock %s released
m_pReaderLock
CAutoReadLock::CAutoReadLock
CSharedReaderWriterLock::LockRead - Waiting for SRW read lock %s, owner = 0x%X (contention count = %d).
CSharedReaderWriterLock::LockRead - SRW read lock %s acquired (contention count = %d)
CAutoWriteLock::~CAutoWriteLock
m_tidWriteLockOwner == ::GetCurrentThreadId ()
m_cCurrentThreadWriteLockCount != 0
CSharedReaderWriterLock::UnlockWrite
CSharedReaderWriterLock::UnlockWrite - SRW write lock %s released (contention count = %d)
m_pWriterLock
CAutoWriteLock::CAutoWriteLock
CSharedReaderWriterLock::LockWrite - Waiting for SRW write lock %s, owner = 0x%X (contention count = %d).
m_tidWriteLockOwner == 0
CSharedReaderWriterLock::LockWrite
CSharedReaderWriterLock::LockWrite - SRW write lock %s acquired (contention count = %d)
CCloseAppWorkerThread
pWorkItem != NULL
CCloseAppWorkerThread::ProcessWorkItem
termsrv\wms\src\sessionagent\closeappworkerthread.cpp
CCloseAppWorkerThread::ProcessWorkItem - cannot close app(%d) because the create time does not match.
pEntry != 0
CCloseAppWorkerThread::DiscardWorkItem
WmsSessionAgentDeviceEventHiddenWindowClass
termsrv\wms\src\sessionagent\deviceeventwindow.cpp
WmsSessionAgent Device Event Hidden Window
fStatus
CDeviceEventWindow::OnCreate
m_fImpersonated
explorer.exe A:
CDeviceEventWindow::ShowExplorer
pszCmdLine[13] == L'A'
unitmask != 0
CDeviceEventWindow::GetFirstDriveFromMask
CDeviceEventWindow::OnDeviceChange
CDeviceEventWindow::OnDeviceChange - OnDeviceChange unitmask = %x, flags = %x
CDeviceEventWindow::OnDeviceChange - OnDeviceChange drive = %c, path = "%s", InstanceId = "%s"
Ignoring because device is not sessionized
Ignoring because we're not under a hypervisor
cbWtsBuf == sizeof(WTS_CONNECTSTATE_CLASS)
Ignoring because session is not active
CDeviceEventWindow::OnDeviceChange - Forcing session ID match for a device under a hypervisor
CDeviceEventWindow::OnDeviceChange - OnDeviceChange device session matches current session %d, launching explorer.
CDeviceEventWindow::OnDeviceChange - OnDeviceChange device session %d does not match current session %d, ignoring event.
\\.\A:
szVolumePath[4] == L'A'
CDeviceEventWindow::s_DriveLetterToDeviceInstancePath
storageDeviceNumber.DeviceType == 0x00000007
pDiDetail
pszDevicePath != NULL
CDeviceEventWindow::s_DevicePathToDeviceInstanceId
ppszDeviceInstanceId != NULL
CDeviceEventWindow::s_DevicePathToDeviceInstanceId - Device %s no longer exists.
pszDeviceInstanceId
pszInstanceId
CDeviceEventWindow::s_GetUInt32Property
pUInt32
CDiskProtectionNotificationSinkThread
m_hVcfFirstWarningEvent
CDiskProtectionNotificationSinkThread::Initialize
termsrv\wms\src\sessionagent\diskprotectionnotificationsinkthread.cpp
m_hVcfSecondWarningEvent
CDiskProtectionNotificationSinkThread::ShowWarningDialog - Waiting for warning dialog to complete.
Disk protection notification is not initialized; exiting.
CDiskProtectionNotificationSinkThread::ThreadProc
Disk protection is not active; exiting.
CDiskProtectionWarningThread
CDiskProtectionWarningThread::ThreadProc
termsrv\wms\src\sessionagent\diskprotectionwarningthread.cpp
pThis
CDiskProtectionWarningThread::s_TaskDialogCallbackProc
CDiskProtectionWarningThread::TaskDialogCallbackProc - Thread kill event is signaled, exiting task dialog.
CDiskProtectionWarningThread::TaskDialogCallbackProc
termsrv\wms\src\sessionagent\drivelettercachemanager.cpp
WMSDL
CDriveLetterCacheManager::Initialize - Sent a SADLE_Started event to CStation.
CDriveLetterCacheManager::Uninitialize
pCachedDataTemp
CDriveLetterCacheManager::OnDataReceived
pSerializedCache->eEvent == SADLE_SerializedCache
CDriveLetterCacheManager::OnReceivedCache - Received %i bytes of serialized drive letter cache from CStation.
pbMessage
CDriveLetterCacheManager::OnCacheUpdated
CDriveLetterCacheManager::OnCacheUpdated - Sent %i bytes of serialized drive letter cache to CStation.
CDriveLetterMonitorThread
m_pDriveLetterCacheManager == NULL
CDriveLetterMonitorThread::Initialize
termsrv\wms\src\sessionagent\drivelettermonitorthread.cpp
m_pszRegKeyDriveLetterCache == 0
m_pszRegKeyDriveLetterCache
(lr == 0L) || (lr == 2L)
lr == 0L
CDriveLetterMonitorThread::Uninitialize
CDriveLetterMonitorThread::ThreadProc - Entered.
rghEvents[ET_REGISTRY_CHANGE] != 0
CDriveLetterMonitorThread::ThreadProc
CDriveLetterMonitorThread::ThreadProc - Cache has been updated by rdpclip.exe, serializing ...
CDriveLetterMonitorThread::ThreadProc - Exiting, returning 0x%08x.
m_hkeyDriveLetterCache != 0
CDriveLetterMonitorThread::SerializeDriveLetterCache
pszValueName
pbValue
pbSerialized
cchValueName <= cchMaxValueName
cbValue <= cbMaxValue
CDriveLetterMonitorThread::SerializeDriveLetterCache - Serialized %i entries, total bytes = %i.
CDriveLetterMonitorThread::DeserializeDriveLetterCache
cbSerialized == cbCache
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value name marker = 0x%04X
iMarker == s_kiMarkerValueName
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value name cch = 0x%04X
cchValueName <= 2147483647
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value name = %s
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value data marker = 0x%04X
iMarker == s_kiMarkerValue
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value data type = 0x%04X
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Value data cb = 0x%04X
CDriveLetterMonitorThread::DeserializeDriveLetterCache - Deserialized %i entries, total bytes = %i.
*ppbSource + cbDest <= pbEnd
CDriveLetterMonitorThread::DeserializeData
err == 0
Software\Microsoft\Terminal Server\%d\Drive Letter Cache\
CFlowStateList::m_lockFlowStateList
pFlowEntry
CFlowStateList::Add
termsrv\wms\src\sessionagent\flowstatelist.cpp
allowed
BLOCKED
CFlowStateList::Add - idFlow = %I64u  %s  m_fNeedParseResponse = %s
fFound
CFlowStateList::Remove - idFlow = %I64u  %s
CGetImmersiveBackgroundWindowWorkItem::s_QueueWorkItem - threshold windows version detected, bailing out
CGetImmersiveBackgroundWindowWorkItem::s_QueueWorkItem
termsrv\wms\src\sessionagent\getimmersivebackgroundwindowworkitem.cpp
CGetImmersiveBackgroundWindowWorkItem::Execute
CGetImmersiveBackgroundWindowWorkItem::Execute - exiting, hAbort was signalled
dwWait != ((DWORD)0xFFFFFFFF)
dwWait == 258L
Couldn't find immersive background window
cRetries > 0
idThread != 0
ImmersiveBackgroundWindow
CGetStreamDataThread
\\.\wmswlfltr
m_hDriver != ((HANDLE)(LONG_PTR)-1)
CGetStreamDataThread::Initialize
termsrv\wms\src\sessionagent\getstreamdatathread.cpp
CGetStreamDataThread::InitializeStringResources
CGetStreamDataThread::ThreadProc - get %d errors, exiting the thread
CGetStreamDataThread::ThreadProc - Exiting, returning 0x%08x.
CGetStreamDataThread::ThreadHelper - Entered
CGetStreamDataThread::ThreadHelper
pStreamDataList
CGetStreamDataThread::ThreadHelper - Exiting, returning 0x%08x.
*phStreamDataAvailableEvent
CGetStreamDataThread::AttachEventsToDriver
*phProcessDataAvailableEvent
CGetStreamDataThread::SetWebLimitStateToDriver
CGetStreamDataThread::HandleInspectionData
Allowed
Blocked
CGetStreamDataThread::HandleInspectionData - pszUrl = %s, %s
CGetStreamDataThread::HandleInspectionData - pszRefUrl = %s, %s
CGetStreamDataThread::HandleInspectionData - idFlow = %I64u  %s
CGetStreamDataThread::InjectData
CGetStreamDataThread::Inject502Response
pStreamSegment
CGetStreamDataThread::Compose502Response
pmbszPayload[cbmbszPayload] == '\0'
pszResp
CGetStreamDataThread::ComposePayload
pszPayload
pmbszPayload
cb == cbmbszPayloadBuf
pszUrlSegment
CGetStreamDataThread::ComposeUrlListSegment
cchBufUrlUnicode
%s<br />
<a href="http://%s/">%s</a><br />
<html><head><style type="text/css">h1 {font-size:2.3em; color:#b7b7b7; font-weight:300; line-height:70%%;}p.sansserif{font-family:Arial, Helvetica, sans-serif; color:#b7b7b7; line-height:10%%;}p.sansserif2{font-family:Arial, Helvetica, sans-serif; color:#b7b7b7; line-height:150%%;}p.sansserif3{font-family:Arial, Helvetica, sans-serif; color:#ffffff; line-height:150%%;}p.sansserif4{font-family:Arial, Helvetica, sans-serif; color:#b7b7b7; line-height:150%%; font-size:2.3em; font-weight:300%%;}</style></head><body><p class="sansserif3">.</p><p class="sansserif4">%s</p><p class="sansserif">%s</p><p class="sansserif2">%s</p></body></html>
HTTP/1.1 502 Unreachable Server
Content-Type: text/html; charset=utf-8
Content-Length: %d
Software\Microsoft\Windows MultiPoint Server
AcceptedPrivacyStatement
termsrv\wms\src\sessionagent\identifysession.cpp
CIdentifySessionWindow::SetIdentifySessionMessage
hOriginalFont != 0
CIdentifySessionWindow::RenderText
nPreviousBkMode
fResult
RECTHEIGHT (rcTextBox) > 0
hLastFont != 0
CIdentifySessionWindow::WndProc posting WM_CLOSE message to 0x%p (m_hWnd 0x%IX)
pszStationName != 0
CIdentifySessionWorkItem::Initialize
termsrv\wms\src\sessionagent\identifysessionworkitem.cpp
CIdentifySessionWorkItem::s_QueueWorkItem
CIdentifySessionWorkItem::Execute
Can't identify session when it's locked.
CIdentifySessionWorkItem::Identify
CIdentifySessionWorkItem::Identify - idSesion = %d, pszStationName = %s, pszStationHost = %s, pszSessionHost = %s
CIdentifySessionWorkItem::Identify - In a RAIL session, intentionally not displaying identify station window.
CIdentifySessionWorkItem::Identify - Exiting, returning 0x%08x.
CIdleTime::Initialize
termsrv\wms\src\sessionagent\idletime.cpp
m_hWnd
cElapsed <= MAXDWORD
CIdleTime::GetInactiveTicks
InitCOMSecurity
termsrv\wms\src\sessionagent\main.cpp
ProcessCommandLine
fSuccess == TRUE
wWinMain
WMS:SessionAgent:SingleInstance:Mutex
s == Gdiplus::Ok
SrcRes.dll
pSessionAgent
wWinMain - Exiting.
CMMNotificationClient::NondelegatingQueryInterface
termsrv\wms\src\sessionagent\mmnotificationclient.cpp
CMMNotificationClient::Initialize - Enter.
CMMNotificationClient::Initialize
CMMNotificationClient::Uninitialize - Enter.
CMMNotificationClient::Uninitialize
CMMNotificationClient::OnDefaultDeviceChanged - pszDefaultDeviceId = %s, eFlow = %s, eRole = %s
CMMNotificationClient::OnDefaultDeviceChanged
hScm != 0
CMMNotificationClient::InterrogateAudioSrv
audiosrv
hAudioSrv != 0
CMMNotificationClient::InterrogateAudioSrv - returning 0x%08X
Software\Microsoft\Windows Multipoint Server
EnableDesktopMonitoring
CPrivacyManagerThread
termsrv\wms\src\sessionagent\privacymanagerthread.cpp
CPrivacyManagerThread::ThreadProc
m_hKillEvent
CProcessInfoWindow::Initialize
termsrv\wms\src\sessionagent\processinfowindow.cpp
m_hUserAgentSpawnedEvent
dwWait == ((((DWORD )0x00000000L) ) + 0 )
CProcessInfoWindow::StartProcessInfoAgent - pszguidWindow=%s
CProcessInfoWindow::StartProcessInfoAgent
-f %s %s %d %I64d
 %d %I64d
CProcessInfoWindow::OnCreate
dwSuccess != 0
m_dwCookie == pCDS->dwData
CProcessInfoWindow::OnCopyData
CProcessInfoWindow::OnCopyData - pszProcessInfo=%s
pszTokenEnd
CProcessInfoWindow::NextToken
prgWmsRunningApp
CProcessInfoWindow::ParseRunningAppString
CProcessInfoWindow::GenerateRandomCookie
CProcessInfoWindow::GenerateRandomCookie - ERROR: CryptReleaseContext failed
WmsProcessInfoWindowClass
hCursor
CProjectionNotificationWnd::CreateNotificationWindow
termsrv\wms\src\sessionagent\projectionnotificationwnd.cpp
Projection Notification Window Class
Wms Projection Notification
CProjectionNotificationWnd::OnCreate
CProjectionNotificationWnd::UpdateWindowRgn
hWndRgn != 0
hInnerRectRgn != 0
(nResult != 1) && (nResult != 2)
nResult == 3
CProjectionNotificationWnd::OnPaint
hbrBorderColor != 0
CProjectionNotificationWnd::OnDisplayChange
DisableLockWorkstation.WMS.RemoteControl.bak
DisableLockWorkstation.WMS.RemoteControl.DeletePolicyOnRestore
CProjectionThread::m_ProjectionThreadLock
CProjectionThread::Initialize
termsrv\wms\src\sessionagent\projectionthread.cpp
CProjectionThread::Initialize - Exiting, returning 0x%08x.
bstrTeacherName
CProjectionThread::Share
Control
Project
CProjectionThread::Share - eMode = %s, cMaxViewers = %d, bstrTeacherName = %s
*pbstrInvitation
m_bstrTeacherName
bstrPassword
bstrGroup
m_pProjectionNotificationWnd
m_bstrInvitation
CProjectionThread::Share - Exiting, returning 0x%08x.
CProjectionThread::View - bstrInvitation:%s, bstrTitle:%s
CProjectionThread::View
CProjectionThread::View - Starting WmsUserAgent
CProjectionThread::View - WmsUserAgent is running
m_pMarshalSessionAgent == NULL
wait == ((((DWORD )0x00000000L) ) + 0 )
m_hViewerThread
CProjectionThread::s_ViewerMonitoringThreadProc
m_hUserAgentProcess
CProjectionThread::ViewerMonitoringThreadProc
CProjectionThread::ViewerMonitoringThreadProc - Exiting, returning 0x%08x.
CProjectionThread::StopShare
CProjectionThread::StopShare - Exiting, hr = 0x%08x.
CProjectionThread::StartViewer
pszArgs
-p %d "%s" "%s"
CProjectionThread::EnableKeyboard
CProjectionThread::EnableKeyboard
CProjectionThread::DisableKeyboard
s_hLLKeyboardHook
CProjectionThread::DisableKeyboard
WmsSharingGroup
s_RunFileLockTsThread
lpParameter
ImpersonateUserThreadProc
termsrv\wms\src\sessionagent\runfile.cpp
cchSessionAgentFileName
cchCmdline != 0
pwszProcessCmdLine
"%s" %s
dwStatus == ((((DWORD )0x00000000L) ) + 0 )
CSessionAgent::RunFile
bstrThreadMessage
hImpersonateUserThread
OrchestrationBlockSessionWindowClass
OrchestrationIdentifySessionWindowClass
Software\Microsoft\Windows MultiPoint Server\ProjectingMyOwnDesktop
CSessionAgent
CSessionAgent::m_ThumbNailLock
CSessionAgent::m_lockInitializeOrchestration
CSessionAgent::~CSessionAgent - session %lu
CSessionAgent::Initialize
termsrv\wms\src\sessionagent\sessionagent.cpp
IsImmersiveProcess
user32.dll
m_pfnIsImmersiveProcess || (::GetLastError () == 127L)
CSessionAgent::Initialize - IsImmersiveProcess export not found in user32.dll
TaskbarCreated
m_TaskbarCreatedMessage != 0
CSessionAgent::Initialize - session %lu
WmsSessionAgent Hidden Window Class
WmsSessionAgent Hidden Window
cbReturned == sizeof (*peConnectState)
CSessionAgent::NondelegatingQueryInterface
CSessionAgent::InitializeOrchestration
CSessionAgent::InitializeOrchestration
m_hSessionConnectEvent != 0
CSessionAgent::InitializeChatAgent
CSessionAgent::InitializeChatAgent
pChatAgent
CSessionAgent::OnSessionChange - session %lu, %s
!s_fAlreadyLoggedOn
CSessionAgent::OnSessionLogon
cchLockMessage > 0
bstrLockMessage
uptrTimer
CSessionAgent::InitializeProjection
bstrInvitation
CSessionAgent::InitializeProjection - Exiting, returning 0x%08x.
CSessionAgent::OnRemoteConnect
CSessionAgent::OnRemoteConnect - Exiting, returning 0x%08x.
pgrfSession != 0
CSessionAgent::GetSessionFlags
pbstrSidString != 0
CSessionAgent::GetUserSid
*pbstrSidString
CSessionAgent::IsAdminSessionHelper
WTSQueryUserToken returned ERROR_NO_TOKEN - erroring out, but not asserting.
fImpersonated
pSidAdminGroup
dwRet == 0
enabled
disabled
false
CSessionAgent::IsAdminSessionHelper - m_fIsAdmin=%s, m_fIsMogUser=%s, Orchestration is %s
CSessionAgent::IsCurrentDashboardUser
(lr == 0L)
Software\Microsoft\Windows MultiPoint Server\DiskProtection
DisableLogonNotification
Disk protection notification toast is disabled by reg key
CSessionAgent::ShowDiskProtectionStatus
retval
CSessionAgent::CheckForPublicNetwork
CSessionAgent::InitializeDiskProtectionStatus
pIWmsDiskProtection != NULL
CSessionAgent::InitializeToastSubsystem
CSessionAgent::InitializeToastSubsystem
CSessionAgent::OnShowDiskProtectionStatus
CSessionAgent::OnShowDiskProtectionStatus
Disk protection is not installed
Platform is not NT
OsVersionInfo.dwPlatformId == 2
CBRLAEx
cchToastMessage > 0
pszLongToastBuffer
CSessionAgent::OnCheckForPublicNetwork
CSessionAgent::OnCheckForPublicNetwork
CSessionAgent::OnCheckForPublicNetwork - Public network detected.
peIdentifyStationState
CSessionAgent::GetStatus
CSessionAgent::IsRailSession
cbReturned == sizeof (eSessionType)
pdwInactiveTicks
CSessionAgent::CurrentActivity
pbstrCurrentActivity
bstrTempCurrentActivity
pfIsLocked
CSessionAgent::LockSessionIfInLockAllState
CSessionAgent::LockSessionIfInLockAllState
 - Blocking failed
%s(%d) - %s - ERROR 0x%08X: %s
pcRunningApp
CSessionAgent::GetRunningApps
pprgWmsRunningApp
CSessionAgent::GetRunningApps
hInfoReadyEvent
hUserAgentExitEvent
CSessionAgent::GetRunningApps - did not get InfoReady event when user agent exits.
CSessionAgent::CloseApplication - idProcess = %lu, ullCreateTime = 0x%I64x, idWindow = 0x%I64x
idProcess
CSessionAgent::CloseApplication
idThread && idWindowProcess == idProcess
idSession == m_idSession
pbTempDataBits
CSessionAgent::GetThumbnailBits
pbstrInvitation
CSessionAgent::ShareDesktop
m_ProjectionThread.IsInitialized()
Request to take control, but orchestration is not enabled for this session.
Request to share desktop, but orchestration is not enabled and the request was not from the same user.
bstrInvitation != 0
CSessionAgent::ViewDesktop
bstrTitleMessage != 0
Request to take control of a session, but this user is not an admin or WmsOperator
peCurrentBroadCastState
CSessionAgent::GetScreenState
pfIsDisconnected
pfIsPrivate
CSessionAgent::OnTimerWait for %d Msec and retry failed toast.
CSessionAgent::OnTimer
CSessionAgent::WndProc - TaskbarCreated message received
CSessionAgent::WndProc - Toast Clicked, dwCookie = 0x%x
CSessionAgent::WndProc - Toast Dismissed, Reason = %d, dwCookie = 0x%x
CSessionAgent::WndProc - Toast Failed, dwCookie = 0x%x
CSessionAgent::OnDestroy
Block Message
CurrentDashboardUser
SOFTWARE\Microsoft\Windows MultiPoint Server\Orchestration
WmsOperators
lParam
termsrv\wms\src\sessionagent\sessionagentprocesses.cpp
cchUserAgentFileName
StartUserAgent
pszCmdLine
RunProcessAsCurrentUserWithStartupInfo
WmsUserAgent.exe
::$DATA
\UNC\
\\?\Volume
{00000000-0000-0000-0000-000000000000}
termsrv\wms\src\sessionagent\sessionagentutils.cpp
BuildFormattedToastStringFromResource
IsAutomaticUpdateInProgress
SYSTEM\CurrentControlSet\Services\Wms\Parameters
InstallingUpdates
CSessionAgentWorkerThread::MyImpersonateLoggedOnUser
termsrv\wms\src\sessionagent\sessionagentworkerthread.cpp
CSessionAgentWorkerThread::ThreadProc - Entered.
CSessionAgentWorkerThread::ThreadProc - Exiting
CSessionAgentWorkerThread::ProcessWorkItem
CSessionAgentWorkerThread::DiscardWorkItem
CSessionAudioDevice::m_lock
CSessionAudioDevice::NondelegatingQueryInterface
termsrv\wms\src\sessionagent\sessionaudiodevice.cpp
CSessionAudioDevice::Initialize
CSessionAudioDevice::Initialize - No default %s endpoint present
CSessionAudioDevice::Initialize - Default %s endpoint is not connected.
CSessionAudioDevice::Uninitialize
CSessionAudioDevice::Uninitialize m_pVolume object is invalid, doing alternate clean-up.
CSessionAudioDevice::SetLevels - flVolume = %.20f
CSessionAudioDevice::SetLevels
CSessionAudioDevice::OnDeviceChanged Device does not exist for eFlow = %s
CSessionAudioDevice::OnDeviceChanged
CSessionAudioDevice::OnDeviceChanged Pending volume levels exist for eFlow = %s
CSessionAudioDevice::OnDeviceChanged No pending volume levels for eFlow = %s
CSessionAudioDevice::OnDeviceChanged Device already exists for eFlow = %s
m_eDataFlow != eAll
CSessionAudioDevice::OnNotify
CSessionAudioDevice::OnNotify - Send VC:  SAE_VolumeChange, m_eDataFlow = %s, fMasterVolume = %.20f, fMuted = %s
termsrv\wms\src\sessionagent\streamdatareader.cpp
cbBuf >= cbRequested
CStreamDataReader::CNetworkStream::GetBytesInHostOrder
CStreamDataReader::ParseResponse - HTTP/1.x StatusCode=%s
CStreamDataReader::ParseResponse - HTTP/1.x ContentType=%s
CStreamDataReader::ParseGetHeader - GET url=%s
CStreamDataReader::ParseGetHeader - GET host=%s
CStreamDataReader::ParseConnectHeader - CONNECT url=%s
CStreamDataReader::ParseTlsHeader
pszBuf
cchSize
CStreamDataReader::ParseTlsHeader - TLS ServerName = %s
CStreamDataReader::SubStr
CONNECT 
Content-Type: 
HTTP/1.
Referer: 
Host: 
eBitmapSize < __OTS_COUNT
CThumbnail::InitializeCapture
termsrv\wms\src\sessionagent\thumbnail.cpp
m_hTNMemDC
m_hTNMemBitmap
hBmpDibSection
m_hOldTNBitmap != 0 && m_hOldTNBitmap != (LongToHandle(0xFFFFFFFFL))
cbBuffer >= 0
m_hBuffer
m_pvBuffer
image/jpeg
CThumbnail::GetBitmapJpeg
Unable to open input desktop.
hdcDefaultDesktop
fSuccess || ::GetLastError () == 5L
pbDataBits
pGdipBitmap
sGdiResult == Gdiplus::Ok
uliNewPosition.HighPart == 0
uliNewPosition.LowPart > 0
eResult == 0
status == Gdiplus::Ok
CThumbnail::GetEncoderClsid
cbSize != 0
prgImageCodecInfo
CThumbnail::OnSessionChange - fIsAdmin=%s, fIsMogUser=%s, m_eBitmapState=%u
m_bstrMessage
CToastWorkItem::Initialize
termsrv\wms\src\sessionagent\toastworkitem.cpp
pWorkerThread != 0
CToastWorkItem::s_QueueWorkItem
pIWmsToast != 0
Failed to display toast
CToastWorkItem::Execute
CUrlFilter::m_lockUrlFilter
CUrlFilter::Initialize
termsrv\wms\src\sessionagent\urlfilter.cpp
m_pszWebLimitUserRegPath
%s\%s
m_hWebLimitStateChangeEvent
CUrlFilter::Rate
blocked
CUrlFilter::Rate - pszHostName = %s, %s
text/html
text/xml
application/atom+xml
application/rss+xml
application/xhtml+xml
message/
multipart/
CUrlFilter::SetUserWebLimiting
err == 0L
err == 0L || err == 2L
http://%s
Software\Policies\Microsoft\Windows Multipoint Server
SuppressPrivacyNotification
CUserPrivacyNoticeWorkItem::s_QueueWorkItem - session %u
CUserPrivacyNoticeWorkItem::s_QueueWorkItem
termsrv\wms\src\sessionagent\userprivacynoticeworkitem.cpp
CUserPrivacyNoticeWorkItem::Execute - privacy notifications have been disabled by policy.
CUserPrivacyNoticeWorkItem::Execute
err == ERROR_FILE_NOT_FOUND
CUserPrivacyNoticeWorkItem::Execute - user %s has already accepted the privacy notice.
hThread != 0
CUserPrivacyNoticeWorkItem::s_ShowTaskDialog
user's hive is not available to record acceptance of the privacy agreement.
CUserPrivacyNoticeWorkItem::s_ShowTaskDialog - user %s has accepted the privacy notice.
err == ERROR_SUCCESS
CUserPrivacyNoticeWorkItem::s_ShowTaskDialog - user %s has declined the privacy notice.
CUserPrivacyNoticeWorkItem::s_TaskDialogCallbackProc
"%s" https://go.microsoft.com/fwlink/?LinkId=734730
CVirtualChannel
m_hChannel == NULL
CVirtualChannel::Initialize
termsrv\wms\src\sessionagent\virtualchannel.cpp
m_hFile == INVALID_HANDLE_VALUE
m_overlapped.hEvent == NULL
CVirtualChannel::Initialize channel name = %S.
sizeof (m_hFile) == cbReturned
m_overlapped.hEvent
CVirtualChannel::Terminate Entered
CVirtualChannel::Terminate
CVirtualChannel::Write Entered
m_hChannel != NULL
CVirtualChannel::Write
m_hFile != INVALID_HANDLE_VALUE
pBuffer != NULL
cbBuffer != 0
cbWritten == cbBuffer
hHeap
CVirtualChannel::ThreadProc
pbBuffer
CVirtualChannel::ThreadProc - Stop signaled for channel %S.
CVirtualChannel::ThreadProc - Received %d bytes on channel %S.
SUCCEEDED (hr)
CVirtualChannel::ThreadProc - Error %d on channel %S; channel stopped.
CVirtualChannel::HandleIoCompletion
cbRead > 0
pbNewBuffer
CVirtualChannel::GrowBuffer
CVirtualChannel::ReadSync
CWebLimitingThread
CWebLimitingThread::Initialize
termsrv\wms\src\sessionagent\weblimitingthread.cpp
CWebLimitingThread::Initialize - Exiting, returning 0x%08x.
CWebLimitingThread::ThreadProc
CWebLimitingThread::ThreadProc
CWebLimitingThread::ThreadProc - Exiting, returning 0x%08x.
Software\Microsoft\Windows MultiPoint Server\Orchestration
AutoLaunch
CWmsDashboardWorkItem::s_QueueWorkItem
termsrv\wms\src\sessionagent\wmsdashboardworkitem.cpp
CWmsDashboardWorkItem::Execute
lr == 0L || lr == 2L
CWmsDashboardWorkItem::s_LaunchWmsDashboard - start
CWmsDashboardWorkItem::s_LaunchWmsDashboard
CWmsDashboardWorkItem::s_LaunchWmsDashboard - command: %s
CWmsDashboardWorkItem::s_LaunchWmsDashboard - WmsDashboard launched
"%s\Windows MultiPoint Server\WmsDashboard.exe" -autolaunch
[%I64u] [%u-%02u-%02u %02u:%02u:%02u.%03u] %s [%X.%X.%X] 
hRecord
__EHM_MsiWrite
termsrv\wms\src\common\ehmlib\ehmlib.cpp
rc == 0L
__EHM_FlatFileWrite
10.0.10011.16384
level < (sizeof(*RtlpNumberOf(s_rgEventDescriptor)))
DEBUGMSGV
CRawInput Hidden Input Window Class
CRawInput Hidden Input Window
CUnknown::NondelegatingQueryInterface
termsrv\wms\src\common\srccom\srcunknown.cpp
Utils::StringTableHelper
termsrv\wms\src\common\srcutils\debughelpers.cpp
WTS_CONSOLE_CONNECT
WTS_CONSOLE_DISCONNECT
WTS_REMOTE_CONNECT
WTS_REMOTE_DISCONNECT
WTS_SESSION_LOGON
WTS_SESSION_LOGOFF
WTS_SESSION_LOCK
WTS_SESSION_UNLOCK
WTS_SESSION_REMOTE_CONTROL
eRender
eCapture
eConsole
eMultimedia
eCommunications
WTTS_Starting
WTTS_Started
WTTS_Stopping
WTTS_Stopped
CWorkerThread::m_lockThreadStatus
m_eThreadStatus == WTTS_Stopped
CWorkerThread::Start
termsrv\wms\src\common\srcutils\workerthread.cpp
m_hThreadKillEvent
m_hThreadStarted
m_hThread
 - thread failed to start.
CWorkerThread::Start - %s thread started:  id = 0x%X  obj = 0x%X
CWorkerThread::Stop
CWorkerThread::Stop - %s thread failed to stop gracefully; calling TerminateThread():  id = 0x%X  obj = 0x%X
CWorkerThread::WaitForThreadToStop
::GetThreadId (m_hThread) != GetCurrentThreadId()
CWorkerThread::WaitForThreadToStop - Waiting for %s thread to stop:  id = 0x%X  obj = 0x%X
 - thread failed to stop.
CWorkerThread::WaitForThreadToStop - %s thread stopped:  id = 0x%X  obj = 0x%X
CWorkerThread::s_ThreadProc
pThis->m_hThreadStarted
lpFilename != NULL
GetModulePath
termsrv\wms\src\common\srcutils\srcutils.cpp
cchFileName != 0
pszFullPath
AppendFileNameToModulePath
LoadResourceDLL
hInst
cch == 7
LoadCOLORREFFromRes
pszColor[6] == 0
cch != 0
LoadLongFromRes
LoadStringsFromRes
prgszStrings[idxString][cch-1] == 0
LoadIconsFromResource - LoadImage for small icon (%d x %d) failed. 0x%lx
LoadIconsFromResource - LoadImage for big icon (%d x %d) failed. 0x%lx
CreateFontFromResource
cch > 0 && cch < ((sizeof(*RtlpNumberOf(lf.lfFaceName))) - 1)
hFont != 0
idProcess != 0
GetProcessCreateTime
LogEventMessage1
CreateWmsSid
pSDTempBuffer
CreateSecurityDescriptor
CopyString
*ppszDest
bstrTemp
SafeOuterMessagePump - Entered.
SafeOuterMessagePump - Told to stop, pumping any messages left in the Queue.
SafeOuterMessagePump - Done processing messages in the Queue.
SafeOuterMessagePump
SafeOuterMessagePump - Exiting
HandleDeviceRemovalErrorSilently
The virtual channel is no longer present.
HandleVirtualChannelErrorSilently
The client does not support this virtual channel.
IsSystemRtl
cchLanguages > 0
pzzLanguages
IsSystemRtl:  %s
cchData == kcchReadingLayout
IsSystemRtl:  Preferred language %s readingLayout = %d
GenerateDumpFileName
cchUsedWithoutNull != 0 && cchUsedWithoutNull != (sizeof(*RtlpNumberOf(szModulePathName)))
*pszModuleFileName != L'\0'
%s\%s_%d_%s_%s.dmp
WriteDumpOnExceptionUnhandled exception 0x%08X
WriteDumpOnException
WriteDumpOnExceptionCreating dump file:  %s
hFile != ((HANDLE)(LONG_PTR)-1)
!fSuccess
{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
nr != -1
GuidToString
GetTokenInformationWithLocalAlloc
(err == 24L) || (err == 122L)
pTokenInformation
WaitForShellReady - Waiting for shell...
Shell_TrayWnd
WaitForShellReady
WaitForShellReady - exiting, hAbort was signalled
WaitForShellReady - Found the shell window.
*pAdjustedWidth <= iMaxWidth
AdjustImageSize
*pAdjustedHeight <= iMaxHeight
abs((iImageWidth * (*pAdjustedHeight) - (*pAdjustedWidth) * iImageHeight)) <= (iImageWidth + iImageHeight + 1)
IsDesktopVisible
ProductDumpsDir
SOFTWARE\Microsoft\Windows MultiPoint Server
CInjectEscKeyThread
hDesktop
CInjectEscKeyThread::ThreadProc
termsrv\wms\src\common\srcutils\injectesckeythread.cpp
CInjectEscKeyThread::ThreadProc - Current desktop is %s
WinLogon
CInjectEscKeyThread::ThreadProc - detected a Winlogin desktop during Screen Lock. Injecting an <Esc> key
CInjectEscKeyThread::ThreadProc - SendInput() failed, gle = 0x%08X
CWorkerQueueThread::m_lockListWorkItems
CWorkerQueueThread::Start
termsrv\wms\src\common\srcutils\workerqueuethread.cpp
m_hWorkItemsAvailable == 0
m_hWorkItemsAvailable
CWorkerQueueThread::Enqueue - Failed to queue work item; queue %s (0x%p) state is %s
CWorkerQueueThread::Enqueue
CWorkerQueueThread::ThreadProc - Entered.
CWorkerQueueThread::ThreadProc
CWorkerQueueThread::ThreadProc - Told to stop.
CWorkerQueueThread::ThreadProc - Exiting
m_cRef == 0
CRefCount::~CRefCount
termsrv\wms\src\common\srcutils\refcount.cpp
cNewRef >= 0
CRefCount::Release
CChatEventQueue::EnqueueEvent
termsrv\wms\src\common\srcutils\chateventqueue.cpp
CChatEventQueue::ProcessWorkItem - 0x%p DispatchChatEvent returned RPC error 0x%lx
SOFTWARE\Microsoft\Windows MultiPoint Server
termsrv\wms\src\common\srcutils\platformutils.cpp
is not
PlatformUtils::IsHypervisorPresent - The system %s running under a hypervisor
PlatformUtils::IsHypervisorPresent - Clearing fVirtualized because we're running in the hypervisor's root partition
Public
Private
Domain
PlatformUtils::IsPublicNetwork
(eNetworkCategory >= NLM_NETWORK_CATEGORY_PUBLIC) && (eNetworkCategory <= NLM_NETWORK_CATEGORY_DOMAIN_AUTHENTICATED)
not connected
connected
PlatformUtils::IsPublicNetwork - %s network %s (%s) (%s)
termsrv\wms\src\common\srcutils\rdslistenerconfig.cpp
GetSessionSid
termsrv\wms\src\common\srcutils\registry.cpp
RegUtil::GetStringValue
cb % sizeof (WCHAR) == 0
Registry key not found
RegUtil::ReadOptionalBase64RegValue
cbDecodedValue % sizeof (WCHAR) == 0
pszDecodedValue
RegUtil::ReadOptionalBase64RegValue Decoded %s from registry: '%s'
RegUtil::IsRegKeyExisting
RegUtil::WaitForHive - waiting for HKEY_USERS\%s
hRegNotifyEvent
RegUtil::WaitForHive
RegUtil::WaitForHive - exiting, hAbort was signalled
dwWait == ((((DWORD )0x00000000L) ) + 0 ) + EWH_REGISTRY_CHANGE
RegUtil::WaitForHive - opened HKEY_USERS\%s
termsrv\wms\src\common\srcutils\wmscrypt.cpp
WmsDecrypt
Unable to decrypt autologon password data
(plainText.cbData) % sizeof(WCHAR) == 0
cchPlainText > 0
pszTempPlainText
pszTempPlainText[cchPlainText-1] == L'\0'
WmsBase64Encode
pszTemp
WmsBase64Decode
pbTemp
Software\Microsoft\Windows\CurrentVersion\Policies\System
DisableLockWorkstation
termsrv\wms\src\common\srcutils\lockworkstation.cpp
err == 2L
RestoreLockWorkstation
RestoreLockWorkstation - restoring original policy setting of %s = %d
CMachineUserSettingsUtils::s_IsChatEnabled
termsrv\wms\src\common\srcutils\machineusersettingsutils.cpp
CMachineUserSettingsUtils::s_IsAdminOrchestrationEnabled
SOFTWARE\Microsoft\Windows MultiPoint Server
SOFTWARE\Microsoft\Windows MultiPoint Server\Orchestration
EnableIm
EnableAdminSessionOrchestration
ProjectAllInvitation
Software\Microsoft\Windows Multipoint Server\Orchestration
Software\Microsoft\Windows Multipoint Server\Orchestration\WebLimiting
cchUrls >= 1
BstrToMultiSz
termsrv\wms\src\common\srcutils\weblimitutil.cpp
cchUrls <= 1 * 1024 * 1024
pszzUrlsMultiSz
BstrToMultiSz - pszSource = %s
cchDestRemaining > 1
cchUrlsMultiSz + 1 <= cchUrlsMultiSzBuf
ppszzAllowList != 0
GetWebLimitAllSetting
ppszzBlockList != 0
IsLimited
IsAllowList
AllowList
BlockList
Software\Microsoft\Windows Multipoint Server\Orchestration\WebLimiting\Global
termsrv\wms\src\common\srcutils\usermanagement.cpp
dwError == 122L
pszDomainName
status == ((NTSTATUS)0x00000000L)
CUserManagement::s_GetUserSIDEx
CUserManagement::s_InitLsaUnicodeString
CUserManagement::s_GetLocalGroupSid
CDesktopCaptureWorkerThread
m_hDefaultDesktop
CDesktopCaptureWorkerThread::SetDesktop
termsrv\wms\src\common\srcutils\desktopcaptureworkerthread.cpp
m_hCaptureNowEvent
m_hImageReadyEvent
m_eThreadStatus == WTTS_Starting || m_eThreadStatus == WTTS_Started
CDesktopCaptureWorkerThread::GetActiveDesktopImage
CDesktopCaptureWorkerThread::ThreadProc
CDesktopCaptureWorkerThread::CaptureDesktopImage
hdcDesktop
PlatformSkuUtils::IsRole
termsrv\wms\src\common\srcutils\platformskuutils.cpp
RoleInstalled
WM_ENDSESSION
WM_QUERYENDSESSION
CWmsAgentBaseWnd::WndProc - got %s, wParam=%d, lParam=%d
CSRCWindow::s_SharedWindowProc
termsrv\wms\src\common\srcwnd\srcwnd.cpp
CSRCWindow::s_SharedWindowProc - Set CSRCWindow (0x%08X) m_hWnd to 0x%08X
CSRCWindow::s_CreateWindowHelper
CSRCWindow::CSRCWindow - obj = 0x%X
CSRCWindow::~CSRCWindow - Closing event m_hWndDestroyed 0x%X
CSRCWindow::Initialize::s_lock
pszClassName != NULL
CSRCWindow::Initialize
m_hWndDestroyed
atom != 0
m_hInst != NULL
CSRCWindow::CreateEx
m_szClassName[0] != 0
CSRCWindow::CreateEx
m_hWnd == NULL
CSRCWindow::CreateEx - Created window:  "%s" (0x%08X) 
CSRCWindow::CreateOnNewThread
CSRCWindow::CreateOnNewThread
m_pMessagePumpThread
CSRCWindow::Destroy
CSRCWindow::Destroy - Called on same thread; sending s_WM_WMS_Destroy message
CSRCWindow::Destroy - Called on different thread; posting s_WM_WMS_Destroy message to thread id 0x%X and waiting
wait == WAIT_TIMEOUT
CSRCWindow::Destroy - Wait for m_hWndDestroyed completed
CSRCWindow::OnNcCreate
CSRCWindow::OnNcDestroy - Removed property from CSRCWindow 0x%08X (m_hWnd 0x%08X) 
CSRCWindow::OnPaint
CSRCWindow::ShowCursor
CSRCWindow::WaitForMessagePumpThreadToEnd
SrcWnd:this
CWmsShellBaseWindow::s_lockDrawImage
termsrv\wms\src\common\srcwnd\wmsshellbasewnd.cpp
Background image is NULL
CWmsShellBaseWindow::s_DrawBackgroundImageHelper
Logo (white) image is NULL
hInstRes != 0
CWmsShellBaseWindow::s_Initialize
CThreadedDialog::Create
CThreadedDialog::OnNcDestroy
CDlgMessagePumpThread
CDlgMessagePumpThread::m_lockWindow
CDlgMessagePumpThread::ThreadProc
termsrv\wms\src\common\srcwnd\dlgmessagepumpthread.cpp
m_pDlg
CDlgMessagePumpThread::ThreadProc - Entered, m_pDlg.m_id = %d.
CDlgMessagePumpThread::ThreadProc Exiting - m_pDlg.m_id=%d
CDlgMessagePumpThread::CreateDlg
m_hInstRes != NULL
CWmsDlg::CreateEx
termsrv\wms\src\common\srcwnd\wmsdlg.cpp
m_hwndDlg
CWmsDlg::s_DialogProc
WmsDlg:this
CWmsDesktop::m_lockDesktop
default
CWmsDesktop::Initialize
termsrv\wms\src\common\srcwnd\wmsdesktop.cpp
m_cWmsDesktopRef == 0
CWmsDesktop::Uninitialize
CWmsDesktop::Uninitialize - 0x%IX
CWmsDesktop::s_ForceSwitchDesktop
CWmsDesktop::s_ForceSwitchDesktop - Attempt %3d:  SwitchDesktop() returned error 0x%08X
CWmsDesktop::s_ForceSwitchDesktop - timed out waiting to dismiss secure desktop
CWmsDesktop::GetWmsDesktop - m_cWmsDesktopRef=%u 0x%IX
CWmsDesktop::GetWmsDesktop
m_hWmsDesktop
CWmsDesktop::GetWmsDesktop - Created desktop 0x%IX
m_hPreviousDesktop == NULL
m_hPreviousDesktop
m_cWmsDesktopRef != 0
(m_cWmsDesktopRef+1) != 0
m_cWmsDesktopRef == 1
CWmsDesktop::SwitchToPreviousDesktop
CWmsDesktop::SwitchToPreviousDesktop - Switching to previous desktop 0x%IX
CWmsDesktop::SwitchToPreviousDesktop - Switching to default desktop 0x%IX
CWmsDesktop::ReleaseWmsDesktop - m_cWmsDesktopRef=%u 0x%IX
CWmsDesktop::ReleaseWmsDesktop
CWmsDesktop::ReleaseWmsDesktop - Closing desktop 0x%IX
CMessagePumpThread
CMessagePumpThread::m_lockWindow
termsrv\wms\src\common\srcwnd\messagepumpthread.cpp
CMessagePumpThread::ThreadProc - Entered, m_pWnd=0x%X.
CMessagePumpThread::ThreadProc
m_pWnd
CMessagePumpThread::ThreadProc Exiting - m_pWnd=0x%X (HWND 0x%X)
m_pWnd->GetWindowHandle() == NULL
hDefaultDesktop
CMessagePumpThread::ThreadProc SetThreadDesktop failed error %ul - m_pWnd=0x%X (HWND 0x%X)
CMessagePumpThread::CreateWnd
m_hWindowCreatedEvent != 0
CheckGdiplusError
termsrv\wms\src\common\srcutils\gdiputils.cpp
LoadPNGFromByteArray
pTemp
hrcPng != 0
LoadPNGFromResource
hPng != 0
pData != 0
assert
fileName
lineNumber
function
macro
message
version
assert
fileName
lineNumber
function
macro
message
hresult
version
Microsoft.Windows.RemoteDesktop.MultiPoint
WmsSessionAgent.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
ImmDisableIME
RevertToSelf
ImpersonateLoggedOnUser
CreateProcessAsUserW
RegDeleteKeyW
RegCreateKeyExW
RegCloseKey
RegNotifyChangeKeyValue
RegQueryInfoKeyW
RegEnumValueW
RegSetValueExW
EventRegister
EventUnregister
OpenSCManagerW
OpenServiceW
ControlService
CloseServiceHandle
RegOpenKeyExW
RegGetValueW
CryptAcquireContextW
CryptGenRandom
CryptReleaseContext
ConvertSidToStringSidW
GetUserNameW
CreateWellKnownSid
LookupAccountSidW
ADVAPI32.dll
IsDebuggerPresent
GetLastError
MulDiv
InitializeSRWLock
ProcessIdToSessionId
GetCurrentProcessId
FreeLibrary
LoadLibraryExW
SetLastError
LocalFree
GetTimeFormatEx
FormatMessageW
GetCurrentThreadId
AcquireSRWLockExclusive
TryAcquireSRWLockExclusive
ReleaseSRWLockExclusive
AcquireSRWLockShared
TryAcquireSRWLockShared
ReleaseSRWLockShared
CloseHandle
GetVolumeInformationW
GetDriveTypeW
GetVersionExW
CreateFileW
DeviceIoControl
LocalAlloc
OpenEventW
WaitForMultipleObjects
WaitForSingleObject
CreateEventW
ResetEvent
VerifyVersionInfoW
VerSetConditionMask
WideCharToMultiByte
GetTickCount64
SetUnhandledExceptionFilter
HeapSetInformation
CreateMutexW
SetEvent
CreatePipe
SetHandleInformation
WriteFile
CreateThread
GetModuleFileNameW
GetExitCodeProcess
GetExitCodeThread
GetProcAddress
GetModuleHandleW
GetSystemDirectoryW
MultiByteToWideChar
GlobalAlloc
GlobalLock
GlobalUnlock
GlobalFree
lstrcmpiW
GetProcessHeap
HeapAlloc
ReadFileEx
WaitForSingleObjectEx
HeapFree
GetOverlappedResult
HeapReAlloc
ReadFile
KERNEL32.dll
CreateCompatibleBitmap
CreateCompatibleDC
SelectObject
SetTextColor
CreatePatternBrush
DeleteObject
DeleteDC
GetDeviceCaps
CreateFontIndirectW
GetTextExtentPointW
SetBkMode
CreateRectRgn
CombineRgn
CreateSolidBrush
GetDIBits
CreateDIBSection
SetStretchBltMode
SetBrushOrgEx
StretchBlt
GDI32.dll
GetSystemMetrics
GetClientRect
FillRect
GetDC
InvalidateRect
ReleaseDC
PostMessageW
SystemParametersInfoW
SetRect
DrawTextW
SetWinEventHook
UnhookWinEvent
LoadStringW
GetDlgItem
SetWindowLongPtrW
SendMessageW
SetWindowTextW
GetWindowRect
GetWindowPlacement
IsIconic
ShowWindow
GetForegroundWindow
FlashWindowEx
BeginDeferWindowPos
DeferWindowPos
EndDeferWindowPos
SetFocus
DestroyWindow
EnableWindow
SetThreadDesktop
FindWindowW
GetWindowThreadProcessId
RegisterRawInputDevices
GetMessageW
TranslateMessage
DispatchMessageW
ChangeWindowMessageFilterEx
LoadCursorW
SetLayeredWindowAttributes
SetWindowRgn
BeginPaint
EndPaint
MoveWindow
UpdateWindow
UnhookWindowsHookEx
SetWindowsHookExW
CallNextHookEx
RegisterWindowMessageW
SetTimer
GetWindowTextW
KillTimer
ExitWindowsEx
PostQuitMessage
OpenInputDesktop
GetUserObjectInformationW
GetThreadDesktop
CloseDesktop
USER32.dll
__CxxFrameHandler4
wcsncpy_s
_purecall
memcpy_s
_vsnwprintf
_wcsnicmp
realloc
_vsnprintf
wcschr
_wtoi
_wtoi64
_wcsicmp
iswalpha
__C_specific_handler
toupper
malloc
wcsstr
_callnewh
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
_wcmdln
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
NetUserGetLocalGroups
NetApiBufferFree
NETAPI32.dll
CoCreateInstance
CoMarshalInterThreadInterfaceInStream
CoGetInterfaceAndReleaseStream
CoInitializeEx
CoUninitialize
CoInitializeSecurity
CoCreateGuid
StringFromGUID2
CoTaskMemAlloc
CoTaskMemFree
CreateStreamOnHGlobal
ole32.dll
OLEAUT32.dll
CreateEnvironmentBlock
DestroyEnvironmentBlock
USERENV.dll
COMCTL32.dll
GdiplusStartup
GdiplusShutdown
GdipAlloc
GdipFree
GdipCreateBitmapFromGdiDib
GdipCloneImage
GdipDisposeImage
GdipSaveImageToStream
GdipGetImageEncodersSize
GdipGetImageEncoders
gdiplus.dll
IdnToUnicode
Normaliz.dll
GetUserNameExW
Secur32.dll
SetupDiGetClassDevsW
SetupDiEnumDeviceInterfaces
SetupDiGetDeviceInterfaceDetailW
SetupDiCreateDeviceInfoList
SetupDiOpenDeviceInterfaceW
SetupDiGetDevicePropertyW
SetupDiDestroyDeviceInfoList
SetupDiOpenDeviceInfoW
SETUPAPI.dll
ShellExecuteExW
SHGetKnownFolderPath
SHELL32.dll
StrStrIW
SHLWAPI.dll
InternetCrackUrlW
WININET.dll
WinStationQueryInformationW
WINSTA.dll
WTSFreeMemory
WTSQuerySessionInformationW
WTSQueryUserToken
WTSRegisterSessionNotification
WTSUnRegisterSessionNotification
WTSVirtualChannelOpen
WTSVirtualChannelQuery
WTSVirtualChannelClose
WTSVirtualChannelWrite
WTSAPI32.dll
EventSetInformation
EventWrite
EventWriteTransfer
LookupAccountNameW
OpenProcessToken
CopySid
InitializeAcl
AddAccessAllowedAce
AddAccessDeniedAce
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
SetSecurityDescriptorOwner
SetSecurityDescriptorGroup
RegSetKeyValueW
GetTokenInformation
RegDeleteKeyValueW
LsaOpenPolicy
LsaNtStatusToWinError
LsaLookupNames2
LsaFreeMemory
LsaClose
Sleep
GetStartupInfoW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
K32GetModuleBaseNameW
GetLocalTime
GetThreadId
TerminateThread
OpenProcess
GetProcessTimes
GetSystemPreferredUILanguages
GetLocaleInfoEx
GetDateFormatEx
GetSystemInfo
GetRawInputData
LoadImageW
MsgWaitForMultipleObjects
PeekMessageW
IsDialogMessageW
GetWindowInfo
GetDesktopWindow
MapVirtualKeyW
SendInput
GetPropW
DefWindowProcW
CreateWindowExW
GetClassInfoW
RegisterClassW
ShowWindowAsync
SetPropW
RemovePropW
ValidateRect
ShowCursor
CreateDialogParamW
OpenDesktopW
SwitchDesktop
CreateDesktopW
wcsrchr
wcstoul
_wtol
wcsnlen
swprintf_s
CryptUnprotectData
CryptBinaryToStringW
CryptStringToBinaryW
CRYPT32.dll
msi.dll
MiniDumpWriteDump
dbghelp.dll
GdipCreateImageAttributes
GdipDisposeImageAttributes
GdipCreateFromHDC
GdipDeleteGraphics
GdipDrawImageRectI
GdipGetImageWidth
GdipGetImageHeight
UrlUnescapeW
WakeAllConditionVariable
SleepConditionVariableSRW
FindResourceW
LoadResource
SizeofResource
LockResource
VirtualProtect
LoadLibraryExA
RaiseException
VirtualQuery
GdipLoadImageFromStream
memset
wcscmp
HH-mm-ss
yyyyy-MM-dd
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
    <assemblyIdentity
        name="WmsSessionAgent"
        processorArchitecture="amd64"
        version="1.0.0.0"
        />
    <description>Wms Session Agent</description>
    <dependency>
        <dependentAssembly>
            <assemblyIdentity
                type="win32"
                name="Microsoft.Windows.Common-Controls"
                version="6.0.0.0"
                processorArchitecture="amd64"
                publicKeyToken="6595b64144ccf1df"
                language="*"
            />
        </dependentAssembly>
    </dependency>
    <asmv3:application xmlns:asmv3="urn:schemas-microsoft-com:asm.v3">
        <asmv3:windowsSettings
             xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">
          <dpiAware>true</dpiAware> 
        </asmv3:windowsSettings>
    </asmv3:application>
    <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1"> 
        <application> 
            <!-- Windows 7 -->
            <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
            <!-- Windows 8 -->
            <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
            <!-- Windows 8.1 -->
            <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
            <!-- Windows 10 -->
            <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>  
        </application> 
    </compatibility>
</assembly>
IDATx
Y@Ufd\22
8k_=<88Ad
GUPEU
9k3DF"
_YyiM
D899A
jx}?#
'K8[D
3u8gq
amATC
bT (b,N,
0b8;[lvH
?V\DD
hC55a]H1.
XD~,"
a<6L'9
l`Y*e
u]sxx
>L5h/2
CSU<:8do
!j*qzC][
_(F#+-s
leCcPB
kA!o?
cwQcP
,'s9.
a>sWz
lJf2B
}+/dY\
Qf#}&
gdYAQ$
*i(d/O
J/d.r
oDpyFQ
#ggg[u
Y%3Jf
g%''g
Pmx*Uj
t#bRBH@
88>`<
"XfsE
-PlLwn
p%E6'
W|/ES
2e>/6
sk9/%
QQ\Fi
6!R7I
t" )\W
;?2dYZ
ziXDKHJu`
Y&cewj
Yk9<<
mKm[1
CLd4r
T)=.@%
Xd0r$
T,j,b
{rZ>Ba7u
qJu-)0
gGU7J
u|T<)?
BKB6>
mM^R%}
OJ%tS*
jPc@,b
'hEK: XE
?c.pSP)k
c:}i;
&W\dOz
y3+,+
$Pjs,7
5Q.Na
.RJ6v
~:u8l
Jhw^@
7@].Iw
51EEK
;wV07[
clB7M
z% j?S
#AADaJ
PD5/6
{vWc@
hY(U*
Hrp8I
rp.@u
rSd47
}Xkq,
Tt01=
 Ji_:
}[Q~I 
pJELT
\.o0Nx
IDAT@
{~ynn
2XE(-
byyy1
Vz1drP
4_2N,
K2_i!
K*f=W*
G>01Q
Y-fr]
Y~2"+
z0Msc
{SSS#
i_Y^^
aJ=NX0
kkkC?g
vU)Cd
g)mV=
kkkh4
W^y>V
y;hJO
KKKh4
j5LNN&V8
O)mRJ
0BHH)
zzz[uuu'vvv
<==_fgh
DDDf~~~
]]_Kwwy
]]`;vvye
[[]2oorX
[[]%nnqM
brrr%
())PQRR
CCE"ffiN
bbd@}}
NOQ$uqwY
AA@Tvtu
cdg?tsxqrru
<cchl
:99 lmn
%'()IJMesv{
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Wms Session Agent
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WmsSessionAgent.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WmsSessionAgent.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
