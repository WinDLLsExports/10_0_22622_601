!This program cannot be run in DOS mode.
GRich
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$0H3
D$PE3
D$(E3
D$(E3
D$(E3
D$(E3
L$pH3
D$PE3
L$`H3
L$pH3
D$XE3
\$ UVWAVAWH
fA94@u
fA94@u
fA94@u
A_A^_^]
\$ UH
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
q0R^G'
q0R^G'
q:_0#
|$ AVH
VWAVH
p:_0#
p:_0#
p:_0#
@A^_^
q:_0#
@SVWH
p:_0#
\$ UH
M H1E
 H3E H3E
ntelA
ineID
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
x AVH
D$pE3
L$(E3
t5fA9(t/I
|$ UH
x AVH
WAVAWH
 A_A^_
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
D$8E3
@SUVWH
D$0L;
u%H!\$8H
D$@E3
UVWATAUAVAWH
@8=b<
ty@8=><
t"@8=
fA9>u
@A_A^A]A\_^]
L$ SWH
L$XH+
WATAUAVAWH
H9/sDH
 A_A^A]A\_
x AVH
H9;s!
x AVH
uPH9i
L$ SVWH
HcT$0HcL$4H
v$H;Q
qkPtW>(
UATAUAVAWH
A_A^A]A\]
fA;Z*
fA9Z*v#A
L$ E3
D$`E3
L$`H3
WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
H!\$8!\$@H
|$hD+
L$hH3
A_A^_
@SUVWAVH
\$(H9
@A^_^][
@SUVWAVH
\$(H9
@A^_^][
qkX4A?
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
x ATAVAWH
 A_A^A\
t$ WH
@USVWATAUAVAWH
p[]:`
A_A^A]A\_^[]
UWAVH
|$ UATAUAVAWH
A_A^A]A\]
\$ UVWATAUAVAWH
A_A^A]A\_^]
fD9,Au
fF9,pu
fF9<`u
@USVWATAUAVAWH
D9l$D
D$XH9
fD9,Au
A_A^A]A\_^[]
x AVH
s WAVAWH
A_A^_
!D$0H
X UVWAVAWH
fD9<Fu
A_A^_^]
@USVWATAUAVAWH
EXH!}`H!}hE3
p[]:`
L$ E3
A_A^A]A\_^[]
\$ UVWATAUAVAWH
T$ E3
fE9<Lu
D$@E3
f94xu
D$@E3
A_A^A]A\_^]
x AVH
@USVWAVH
p[]:`
H!|$ L
pA^_^[]
USVWATAUAVAWH
D;f4sJH
hA_A^A]A\_^[]
s@9K(w;
+C(9C,w19K0w,
+C09C4w"9K8w
+C89C<w
+K@9KDw
w19K w,
+C 9C$w"9K(w
+C(9C,w
+K09K4w
WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
H!\$8!\$@H
|$hD+
L$hH3
A_A^_
SWATAUAVAWH
l$pE3
!T$DE3
d$XH!T$PM
L$ E3
|$`M;
A_A^A]A\_[
@USVWAVH
H!D$`
A^_^[]
WAVAWH
 A_A^_
WATAUAVAWH
D;6s*A
A_A^A]A\_
@USVWAVAWH
XA_A^_^[]
\$ UVWATAVH
PA^A\_^]
UVWATAVH
A^A\_^]
UVWATAUAVAWH
p[]:`
A_A^A]A\_^]
USVWATAVAWH
p[]:`
xZD95
A_A^A\_^[]
UVWATAUAVAWH
8D$1u
D8t$0u
p[]:`
p@\6o
tPH9E
tJ!C$H
D9t$8
T$ E3
A_A^A]A\_^]
UVWATAUAVAWH
p[]:`
A_A^A]A\_^]
UVWATAUAVAWH
D$HL!|$PH
D$`L!|$XH
L!>D9;t
D$0E3
T$ E3
fD9$Au
\$0E3
A_A^A]A\_^]
UAVAWH
ueL9y u:A
fD9<Bu
D9}g|oH
A_A^]
UVWAVAWH
p[]:`
D9}0tqH
A_A^_^]
UVWATAUAVAWH
p[]:`
L!L$ L
A_A^A]A\_^]
UVWATAUAVAWH
xiH;]
tWD96uRD
D!uOL
A_A^A]A\_^]
x AVH
paPtl
L$ E3
@USVWATAUAVAWH
p[]:`
D$`E3
fE9<Au
D$`E3
L$dE3
D9|$d
A_A^A]A\_^[]
L$HE3
L$ E3
D$(E3
D$0[H
q@Z4x
VWAVH
tVfE90tPH
qaPtl
qpW^(
qxPV!'
q[]:`
qKUVP
D$ E3
D$ E3
q RpL
q@QXC'X
L$PH3
t$ WH
@USWH
\$ UVWAVAWH
L$ E3
A_A^_^]
@USVWH
_^[]H
@USWH
@VATAUAVAWH
A_A^A]A\^
@VATAUAVAWH
A_A^A]A\^
@VATAUAVAWH
A_A^A]A\^
t$ AWH
|$<E2
d$4E2
L$`E3
d$ AUAVAWH
t$<E2
|$4E2
L$PE3
A_A^A]
@VATAUAVAWH
t$\E2
|$TE2
A_A^A]A\^
@VATAUAVAWH
t$tE2
|$dE2
A_A^A]A\^
t$ AWH
t$<E2
d$4E2
L$`E3
t$ AWH
t$<E2
|$4E2
L$PE3
@VATAUAVAWH
t$\E2
|$TE2
A_A^A]A\^
@VATAUAVAWH
t$dE2
|$TE2
A_A^A]A\^
d$ AUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]
d$ AUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]
t$ AWH
|$<E2
d$4E2
L$`E3
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$\E2
|$TE2
A_A^A]A\^
@VATAUAVAWH
t$\E2
|$TE2
A_A^A]A\^
@VATAUAVAWH
t$\E2
|$TE2
A_A^A]A\^
d$ AUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]
d$ AUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]
t$ AWH
|$<E2
d$4E2
L$`E3
!L$8I
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
@VATAUAVAWH
t$lE2
|$dE2
A_A^A]A\^
@VATAUAVAWH
t$`E2
|$TE2
A_A^A]A\^
@VATAUAVAWH
t$LE2
|$DE2
L$pE3
A_A^A]A\^
t$4@2
L$`E3
@VATAUAVAWH
t$PE2
|$DE2
L$pE3
A_A^A]A\^
d$ AUAVAWH
t$<E2
|$4E2
L$PE3
A_A^A]
d$ AUAVAWH
t$<E2
|$4E2
L$`E3
A_A^A]
t$D@2
L$pE3
D$(E3
t$XE3
WATAUAVAWH
A_A^A]A\_
t$ WAVAWH
H!\$8!\$@H
|$hD+
L$hH3
A_A^_
SWATAUAVAWH
l$pE3
!T$DE3
d$XH!T$PM
L$ E3
|$`M;
A_A^A]A\_[
x AVH
UAVAWH
fE9<Au(A
A_A^]
UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
A_A^A]A\_^]
{ AVH
UVWAVAWH
p[]:`
pA_A^_^]
UVWATAUAVAWH
`A_A^A]A\_^]
VWAVH
@USVWAVH
fD94Ft
PA^_^[]
q@\6o
UVWAVAWH
p[]:`
paPtl
t$ E3
A_A^_^]
UWAVH
p[]:`
@USVWATAUAVAWH
E0fD9
T$XE3
A_A^A]A\_^[]
p[]:`
UWAVH
x UAVAWH
A_A^]
x AWH
UWATAUAVH
A^A]A\_]
UVWATAVH
p[]:`
PA^A\_^]
UVWAVAWH
t(f90t#L
A_A^_^]
L$ SUVWAVH
fD93t!H
PA^_^][
L$ UH
L$PH3
T$hE3
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
x ATAVAWH
A_A^A\
x AVH
s WAVAWH
A_A^_
USVWATAUAVAWH
A_A^A]A\_^[]
@USVWATAVAWH
A_A^A\_^[]
@USWH
USVWH
D;M(ux
x_^[]
t$ WH
UWATAUAVH
D$ E3
A^A]A\_]
UATAUAVAWH
|$ E3
t$ E3
t$ E3
A_A^A]A\]
@USVWATAUAVAWH
D$hE3
|$ E3
A_A^A]A\_^[]
x ATAVAWH
 A_A^A\
|$8E3
SVWATAUAVAWH
D$`E3
A_A^A]A\_^[
x AVH
t8D9A
USVWATAUAVAWH
HA_A^A]A\_^[]
p AWH
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
UVWATAUAVAWH
pA_A^A]A\_^]
UWATAVAWH
A_A^A\_]
L$HHc
UATAUAVAWH
D97u%A
A_A^A]A\]
x UATAUAVAWH
A_A^A]A\]
x AVAWM
|$0A_A^
t$ WATAUAVAWH
VUUUA
0A_A^A]A\_
VUUUUUUUI
t$ UWATAVAWH
A_A^A\_]
UWAVH
UVWATAVH
A^A\_^]
x UATAUAVAWH
A_A^A]A\]
VWAVH
 A^_^
UATAUAVAWH
D$HE3
D$hL!t$`H
L$xA3
L$xE3
L$xE3
L$xD3
D$xE+
D$xD3
L$xA3
L$xA3
L$xE3
D$HH;
L$HH;L$H
D$HH;
L$HH;L$HrgH
D$HH;
L$HH;L$HrAH
T$@H;
T$@L;
D$pA;
+D$pA;
T$@M;
T$@L;
+D$pA;
D$@D;E
D$xD3
L$8E3
T$HH;
T$@wAA
H;D$Hw
D$HE3
D$XE3
L9u8u
t%D;M@
A_A^A]A\]
UWAWH
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
fD9$Bu
A_A^A\_]
q2_<S.
UVWATAVH
p[]:`
A^A\_^]
VWAVH
 A^_^
pkX4A?
9Y uBH9Y
UWAWH
UWAWH
UWAVH
x AVH
WAVAWH
\$ E3
0A_A^_
D$ E3
x AVH
x AVH
api-ms-win-security-provider-l1-1-0.dll
ext-ms-win-devmgmt-policy-l1-1-0.dll
ext-ms-win-devmgmt-policy-l1-1-0
ext-ms-win-devmgmt-policy-l1-1-1
ext-ms-win-devmgmt-policy-l1-1-2
ext-ms-win-devmgmt-policy-l1-1-3
ext-ms-win-ntuser-gui-l1-1-0.dll
ext-ms-win-ntuser-windowstation-l1-1-0.dll
ext-ms-win-rtcore-ntuser-sysparams-l1-1-0.dll
cryptngc.dll
bad array new length
Unknown exception
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
Software\Microsoft\IdentityCRL
{ba1e4578-b17c-48b0-986e-2178f2da7eef}
DeviceSessionKey
CredentialKey
LatestDPAPIKeyVersion
Local\SM0:%lu:%lu:%hs
TraceLoggingRegister failed with 0x%x, continuing...
onecoreuap\ds\ext\live\identity\cloudapplugin\msacloudap.cpp
MicrosoftAccount
Microsoft Enhanced RSA and AES Cryptographic Provider
HandlePluginUninitialize
LiveConvertIdentityToSid
onecoreuap\ds\ext\live\identity\cloudapplugin\utils.cpp
D7F9888F-E3FC-49b0-9EA6-A85B5F392A4F
ValidateSerializedProtocolBuffer
ValidateCachedLogonInfo
ValidateOpaqueInfo
DeserializeOpaqueBlob
SerializeOpaqueBlob
http://Passport.NET/tb
MemberName
GetAuthDataFromPackedCredentials
GetLogonCredsFromAuthData
spAuthData == nullptr, Status=0x%x.
Unexpected credBag type. credType=%d.
%I64x
GetSystemStoreEntryFromCID
Software\Microsoft\IdentityCRL\StoredIdentities
Query for CID failed with %d, continuing...
PopulateUserInfo
FirstName
LastName
DisplayName
HasPassword
GetVersionTimeStamp
Invalid GUID passed to GetVersionTimeStamp. GUID = {%08lX-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}
GetVersionTimeStamp :: GUID = {%08lX-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}, Timestamp = %I64d
GetVersionGuid :: GUID = {%08lX-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}, Timestamp = %I64d
UpdateTokenFromValidationInfo
WLIDCUpdateToken failed with error 0x%x
BuildCredentialKey
UnChunkProofOfPossessionCacheEntry
Microsoft_WindowsLive:SerializedMaterial:
%ls%-d
GenerateHmacEncapsulateProofOfPossessionTokenPayload
GetAppContainerInfo
liveIdService
hr=0x%X
LiveMapHResultToNtStatus
status=0x%x
IsWinLogon
hUserToken == nullptr, isWinLogon is false by default
GetTokenInformation function failed with error %d, isWinLogon is false by default.
LUID=[%d,%d]
status = LsaGetLogonSessionData(&logonId, &pLogonSessionData)
Checked LogonSessionData's UserFlags, isWinLogon is true.
DefaultCredSaved
DefaultCredsMissing
PersistedFromCache
DefaultCredsPersistFailed
DefaultCredsInvalid
GetStoredIdentityProperty(defaultCredsSaved) failed with 0x%0x.
GetSID failed with 0x%0x.
RpcExceptionCode hr = 0x%x.
DeserializeObject() completed with hr = 0x%x.
FreeObject() in SerializationDefinition.h completed with hr = 0x%x.
Caught exception in FreeObject(), hr = 0x%x.
RPC error=%d.
onecoreuap\ds\ext\Live\identity\Include\SerializationDefinition.h
AHandleGetUnlockKey
onecoreuap\ds\ext\live\identity\cloudapplugin\logon.cpp
credValue == nullptr. Status=0x%x.
sessionkeyValue == nullptr. Status=0x%x.
Invalid credType = %lu, Status=0x%x.
HandleConnectIdentity
Local Sid = %ls. Profile loaded = %d
Failed to allocate locally unique ID, status = 0x%x
The requested user was previously connected. (hr = 0x%x)
ps:password
WLIDCUpdateConnectedIdentity failed with error 0x%x
GetCurrentUserSidString failed with error 0x%x
GetStoredIdentityProperty failed with error 0x%x
HandleDisconnectIdentity
login.live.com
NgcDeleteUserIdKey failed, hr=0x%x.
NgcEnumUserIdKeys failed, hr=0x%x.
HandleRenewCertificate
HandleIsConnected
Unable to query user's PPCRL_CREDPROPERTY_DEFAULTCREDSAVED value with error 0x%x
HandleValidateUserInfo
Query for DPAPI Key version failed with %d, continuing...
GetSystemStoreEntryFromCID failed with %d, continuing...
ShouldUpdateDefaultCreds updateDefaultCreds=%d status=%d, continuing...
HandleUserProfileLoaded
ImpersonateLoggedOnUser failed, error = 0x%x
Unable to query user's SID with error 0x%x
Local Sid = %ls.
DefaultCredsUpdateRequired
Persisted
WLIDCCreateContextEx failed with error 0x%x
HandleGetToken
HandleGetKeys
WLIDCGetKeyWithVersion failed with error 0x%x
WLIDCGetKeyLatest failed with error 0x%x
LogonIdentity
Failed to retrieve the requested user's SID, hr = 0x%x
Caller Local Sid = %ls.
Bogus cred type, pLogonCreds->credType = %d
Attempting live authentication with cred type = %d
%ls\%ls\%ls
StringCchPrintf failed with 0x%x, continuing...
WriteBufferToRegistry failed with 0x%x, continuing...
AcquireTokenFromSvc
WLIDCAcquireTokens failed, hr=0x%x
AcquireTokenFromSvc failed, hrRequestStatus = 0x%x, hrAuthState = 0x%x
GetMSAPasswordPolicyFromService
hr = pNtServiceContext->WLIDCGetConfigDWORDValue(WLID_CONFIG_MIN_PASSWORD_LENGTH, &providerPasswordLength)
hr = pNtServiceContext->WLIDCGetConfigDWORDValue(WLID_CONFIG_MIN_PASSWORD_CHAR_GROUPS, &providerPasswordCharacterGroups)
GetMSAPasswordPolicyFromRegistry
ProviderPasswordLength
.DEFAULT\Software\Microsoft\IdentityCRL
hr = registryHelper.ReadDwordFromRegistry(HKEY_USERS, WLID_REG_SYSTEM_USER_IDCRL_PATH, WLID_REG_PROVIDER_DEFAULT_PASSWORD_LENGTH, &providerPasswordLength)
ProviderPasswordCharacterGroups
hr = registryHelper.ReadDwordFromRegistry(HKEY_USERS, WLID_REG_SYSTEM_USER_IDCRL_PATH, WLID_REG_PROVIDER_DEFAULT_PASSWORD_CHARACTER_GROUPS, &providerPasswordCharacterGroups)
2.5.4.3
HandleGetDefaultCredentialComplexity
HandleGenericCallPkg
MicrosoftAccount:target=SSO_POP_User:user=
MicrosoftAccount:target=SSO_POP_Device
User token missing for connected account.
ULongAdd hr = 0x%x.
SerializeObject() completed with hr = 0x%x.
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
RegDeleteKeyExW
advapi32.dll
RegDeleteKeyW
onecore\internal\sdk\inc\wil\opensource\wil\result.h
bad allocation
QueryWlidsvcProperties
TraceServiceStatus
onecoreuap\ds\ext\live\identity\lib\rpcclient\wlidclient.cpp
ServicesActive
WlidSvc
Service status: dwCheckPoint=0x%x, dwControlsAccepted=0x%x, dwCurrentState=0x%x, dwServiceSpecificExitCode=0x%x, dwServiceType=0x%x, dwWaitHint=0x%x, dwWin32ExitCode=0x%x.
wlidsvc
AllowMicrosoftAccountSignInAssistant
Accounts
RPC AsyncInitializeHandle failed, hr = %#x
RPC failed to create new event, hr = %#x
RPC call threw an exception code, hr = %#x
RPC call failed, hr = %#x
Encountered error while waiting on RPC call, hr = %#x
RPC Async complete call failed, hr = %#x
WLIDCpGetConfigDWORDValue
RPC call timed out, hr = %#x
RPC call was cancelled, hr = %#x
WLIDCConnectIdentity
WLIDCUpdateConnectedIdentity
WLIDCDisconnectIdentity
WLIDCCreateContextEx
WLIDCCreateContextWithLogonId
WLIDCSetAuthData
WLIDCDeleteContextEx
WLIDCGetServiceConfig
WLIDCAcquireTokens
WLIDCAcquireTokensEx
WLIDCGetCachedTokens
WLIDCGetUserExtendedProperty
WLIDCGetIdentityProperty
WLIDCEnumIdentities
WLIDCHasPersistedCredential
WLIDCPersistCredential
WLIDCPersistCredentialForConnectedUser
WLIDCRemovePersistedCredential
WLIDCGetConfigDWORDValue
WLIDCGetUserPropertiesFromSystemStore
WLIDCRenewCertificate
WLIDCGetConfigString
WLIDCGetKeyLatest
WLIDCGetKeyWithVersion
WLIDCUpdateToken
WLIDCGetSignedTokens
WLIDCGetDeviceDAToken
WLIDCGetProofOfPossessionTokens
WLIDCRegisterUserIdkey
WLIDCGetScenarioInlineUrlWithContextData
WLIDCAcquireTokensWithNGC
WLIDCCleanupIdentity
WLIDCProvisionIdentityWithTransferToken
@6666666
@66\[
6666666[
Security=impersonation dynamic false
ncalrpc
CredSerializationHelper::EncryptBufferForSameLogon
onecoreuap\ds\ext\live\identity\lib\serialization\credserializationhelper.cpp
Invalid dataSize %d. HR=0x%x.
hr = SafeCopyMemory(pBuffer, bufferSize, pData, dataSize)
CryptProtectMemory failed. HR=0x%x.
CredSerializationHelper::DecryptBufferInPlaceForSameLogon
Invalid bufferSize %d. HR=0x%x.
CryptUnprotectMemory failed. HR=0x%x.
Invalid padding %d. HR=0x%x.
CredSerializationHelper::SerializeCredentials
EncryptBufferForSameLogon failed. HR=0x%x.
hr = StringCchLength(pKeyName, STRSAFE_MAX_CCH, &keyNameSizeChars)
CredSerializationHelper::SerializeNgcKeyNameAndAuthTicket
hr = StringCchLength(pNgcTicket, STRSAFE_MAX_CCH, &ngcTicketSizeChars)
hr = SerializeCredentials( pContextLite, WLIDCredentialTypeNGCAndAuthTicket, WLIDCredentialAttributeNGCKeyName, pKeyName, static_cast<DWORD>(keyNameSizeChars), WLIDCredentialAttributeNGCAuthTicket, pNgcTicket, static_cast<DWORD>(ngcTicketSizeChars), true, ppEncoded, pEncodedSizeBytes)
CredSerializationHelper::DeSerializeCredentials
DeserializeObject failed. HR=0x%x.
UnprotectCredentialString failed. HR=0x%x.
CredSerializationHelper::UnprotectCredentialString
CredUnprotect failed. HR=0x%x.
CredIsProtected failed. HR=0x%x.
CredSerializationHelper::FreeCredentialBagContent
CredSerializationHelper::GetDATokenParamIndices
Keywords
Connected
AccountType
LocalConnected
SystemStoreLite::IsConnected
onecoreuap\ds\ext\live\identity\lib\systemstorelite\systemstorelite.cpp
Failed to retrieve the current user's SID string. (hr = 0x%0x)
SystemStoreLite::IsConnectedSID
GetStoredIdentityProperty failed. (hr = 0x%0x)
SystemStoreLite::GetStoredIdentityProperty
Failed to retrieve the SYSTEM user's SID string. (hr = 0x%0x)
%s\%s
StringCchPrintf failed. (hr = 0x%0x)
System store not found.
RegOpenKeyEx failed. (win32 = 0x%0x)
SystemStore property not found.
RegEnumKey failed. (win32 = 0x%0x)
StringCchPrintf failed for user SID path. (hr = 0x%0x)
StringCchPrintf failed for full user SID path. (localHr = 0x%0x)
SID missing from LiveID key. (win32 = 0x%0x)
RegGetValue failed. (win32 = 0x%0x)
StringCbLengthW failed. (hr = 0x%0x)
StringCchCopyW failed. (hr = 0x%0x)
SystemStoreLite::GetCurrentUserSidString
OpenThreadToken failed. (win32 = 0x%0x)
OpenProcessToken failed. (win32 = 0x%0x)
OpenProccessToken failed. (win32 = 0x%0x)
LocalAlloc failed. (win32 = 0x%0x)
ConvertSidToStringSid failed. (win32 = 0x%0x)
SystemStoreLite::GetSystemSidString
CreateWellKnownSid failed. (win32 = 0x%0x)
ConvertSidToStringSidW failed. (win32 = 0x%0x)
SystemStoreLite::GetRegistryStringValue
FamilyNotifications::GetFlagFromSystemStore
onecoreuap\ds\ext\live\identity\lib\familynotifications\familynotifications.cpp
Flags
Treating family safety flag non-existence as 0 value.
System store's flags = %ls
hr = FamilyNotifications::GetFlagValue(pExecutionContextLite, spFlags, familySafetySetting)
FamilyNotifications::GetFamilyIDFromSystemStore
FamilyID
Treating family ID non-existence as empty value.
System store's family ID = %ls
FamilyNotifications::GetUserSid
hr = CWLIDCCHelper::GetSID(pExecutionContextLite->GetWinApiFunctions(), pUserName, &spSid)
hr = pSystemStoreLiteFunctions->GetCurrentUserSidString(&spSid)
hr = HRESULT_FROM_WIN32(ERROR_NOT_FOUND)
FamilyNotifications::SendWNFNotification
The credential property flags are malformed. flags = %ls, errno = %d, hr = 0x%X
FamilyNotifications::NotifyIfAccountIsFamilyRelated
hr = FamilyNotifications::GetUserSid(pExecutionContextLite, pUserName, spSid)
hr = FamilyNotifications::GetFlagFromSystemStore(pExecutionContextLite, spSid, familySafetySetting)
Sending WNF notification because the Family Safety bit is 1.
hr = FamilyNotifications::GetFamilyIDFromSystemStore(pExecutionContextLite, spSid, spExistingFamilyID)
Sending WNF notification because a Family ID value is present.
Software\Microsoft\IdentityCRL\Trace
AssertFlags
CWLIDCCHelper::ValidateCredUICredBag
onecoreuap\ds\ext\live\identity\lib\utilitieslite\wlidcchelper.cpp
hr = E_INVALIDARG
hr = CredSerializationHelper::GetDATokenParamIndices( pCredBag->credType, daTokenIndex, daExpiryTimeIndex, daCreationTimeIndex, sessionKeyIndex, flowTokenIndex, &expectedArrayLength)
pCredBag->arrCredentials[i].value.length > 0
ValidateCredUICredBag is failing due to unexpected bag type. credType = %d.
CWLIDCCHelper::GetDATokenParamsFromCredBag
hr = CredSerializationHelper::GetDATokenParamIndices( pCredBag->credType, daTokenIndex, daExpiryTimeIndex, daCreationTimeIndex, sessionKeyIndex, flowTokenIndex, nullptr)
CWLIDCCHelper::Base64Decode
CryptStringToBinary failed. err = %d.
hr = HRESULT_FROM_WIN32(win32Error)
hr = E_OUTOFMEMORY
CWLIDCCHelper::DuplicateString
hr = SafeCopyMemory(*ppDestinationString, sourceLengthBytes, pSourceString, sourceLengthBytes)
CWLIDCCHelper::GetSID
hr = HRESULT_FROM_WIN32(GetLastError())
hr = StringCchLengthW(pUserName, STRSAFE_MAX_LENGTH, &userNameLen)
hr = spQualifiedUser.Allocate(qualifiedSize)
%ls\%ls
hr = StringCchPrintf( spQualifiedUser, MAX_PATH, L"%ls\\%ls", machineName, pUserName )
CWLIDCCHelper::SetClockReliabilityData
Software\Microsoft\IdentityCRL\ClockData
Unable to open volatile key. (0x%0x)
CWLIDCCHelper::SetClockReliabilityDataHelper
ClockTimeSeconds
WriteBufferToRegistry failed to write current time. (0x%0x)
WriteBufferToRegistry wrote current time = %I64d
TickCount
WriteBufferToRegistry failed to write tick count. (0x%0x)
WriteBufferToRegistry wrote tick count = %I64d
dest != nullptr
CWLIDCCHelper::ConvertToAnsi
requiredBytes != 0
convertedBytes == requiredBytes
CWLIDCCHelper::ConvertToWide
lengthWCharRequired != 0
urn:liveid:SP800108_CTR_HMAC_SHA256_DOUBLEDERIVED
WS-SecureConversation
LiteCryptUtilities::GetCurrentTimeInSeconds
onecoreuap\ds\ext\live\identity\lib\utilitieslite\litecryptutilities.cpp
LiteCryptUtilities::UrlEscapeStringA
hr=E_OUTOFMEMORY
hr = UrlEscapeW(spInputWideCharBuffer, spEscapedWideCharBuffer, &escapedWideCharBufferLength, URL_ESCAPE_PERCENT|URL_ESCAPE_ASCII_URI_COMPONENT|URL_ESCAPE_AS_UTF8|URL_ESCAPE_SEGMENT_ONLY )
LiteCryptUtilities::Base64EncodeA
LiteCryptUtilities::HmacEncapsulateString
hr = StringCchLengthA(pPayLoadString, STRSAFE_MAX_CCH, &rawPayloadSizeCharacters)
hr = spBuffer.Allocate(rawPayloadSizeBytes)
hr = StringCchCopyA(spBuffer, rawPayloadSizeBytes, pPayLoadString)
hr = HRESULT_FROM_WIN32(pNgcFunctions->BCryptGenRandom(nullptr, randomBytes, sizeof(randomBytes), BCRYPT_USE_SYSTEM_PREFERRED_RNG))
hr = Base64EncodeA(randomBytes, sizeof(randomBytes), &spEncodedRandom)
hr = UrlEscapeStringA(spEncodedRandom, &spEscapedRandom)
ct=%I64u&hashalg=%s&%s&nonce=%s
hr = StringCchLengthA(pEncapsulationTempate, STRSAFE_MAX_CCH, &templateSizeCharacters)
hr = StringCchLengthA(spEscapedRandom, STRSAFE_MAX_CCH, &nonceSizeCharacters)
SHA256
hr = StringCchPrintfExA( spUnsignedEncapsulatedPayload, bufferSizeCharacters, nullptr, &remainingSizeCharacters, STRSAFE_FILL_BEHIND_NULL, pEncapsulationTempate, currentTime, SHA256_ALGORITHM, pPayLoadString, static_cast<LPCSTR>(spEscapedRandom))
hr = pNgcFunctions->NgcSignWithSymmetricPopKey( pSessionKey, sessionKeyLength, reinterpret_cast<const BYTE*>(LiteCryptUtilities::SeedLabel::SecureConversation), static_cast<DWORD>(strlen(LiteCryptUtilities::SeedLabel::SecureConversation) * sizeof(CHAR)), randomBytes, sizeof(randomBytes), reinterpret_cast<PBYTE>(static_cast<CHAR*>(spUnsignedEncapsulatedPayload)), static_cast<DWORD>(unsignedEncapsulatedPayloadSize), &spHashValue, &hashSize)
hr = Base64EncodeA(spHashValue, hashSize, &spEncodedHash)
hr = UrlEscapeStringA(spEncodedHash, &spEscapedHash)
hr = sessionKeyManager.SignWithSessionKey( &sessionKeyExecutionContext, hLogonUserToken, SessionKey(pSessionKey, sessionKeyLength, static_cast<SessionKeyTypes::Type>(sessionKeyType)), CBytePtr(randomBytes, ARRAYSIZE(randomBytes), false), CStringA(LiteCryptUtilities::SeedLabel::SecureConversation), PPCRL_NGC_DERIVED_KEY_LENGTH_BYTES, CStringA(spUnsignedEncapsulatedPayload), encodedHash, derivedKeyAlgorithm, needsDeviceDARefresh)
hr = UrlEscapeStringA(encodedHash, &spEscapedHash)
hr = StringCchLengthA(spEscapedHash, STRSAFE_MAX_CCH, &hashSize)
hr = StringCchCatA(spBuffer, bufferSizeCharacters, spUnsignedEncapsulatedPayload)
&hash=
hr = StringCchCatA(spBuffer, bufferSizeCharacters, "&"PPCRL_OTC_HASH"=")
hr = StringCchCatA(spBuffer, bufferSizeCharacters, spEscapedHash)
&dd=1
hr = StringCchCatA(spBuffer, bufferSizeCharacters, "&"PPCRL_OTC_DOUBLE_DERIVATION)
LiteCryptUtilities::DeriveKeyWithSP800108
SHA256
SP800_108_CTR_HMAC
hr = HRESULT_FROM_WIN32(::BCryptOpenAlgorithmProvider( &spDeriveAlg, BCRYPT_SP800108_CTR_HMAC_ALGORITHM, nullptr, 0))
hr = HRESULT_FROM_WIN32(::BCryptGenerateSymmetricKey( spDeriveAlg, &spDeriveKey, nullptr, 0, static_cast<PUCHAR>(const_cast<BYTE*>(pSecret)), secretSizeBytes, 0))
hr = HRESULT_FROM_WIN32(::BCryptKeyDerivation( spDeriveKey, &keyDerivationDescription, pDerivedKey, derivedKeySizeBytes, &keySizeBytes, 0))
LiteCryptUtilities::DecryptContent
hr = HRESULT_FROM_WIN32(::BCryptOpenAlgorithmProvider( &spAlgorithm, BCRYPT_AES_ALGORITHM, nullptr, 0))
ChainingModeCBC
ChainingMode
hr = HRESULT_FROM_WIN32(::BCryptSetProperty( spAlgorithm, BCRYPT_CHAINING_MODE, reinterpret_cast<PUCHAR>(BCRYPT_CHAIN_MODE_CBC), static_cast<ULONG>(sizeof(BCRYPT_CHAIN_MODE_CBC)), 0))
hr = HRESULT_FROM_WIN32(::BCryptGenerateSymmetricKey( spAlgorithm, &spKey, nullptr, 0, static_cast<PUCHAR>(const_cast<BYTE*>(pEncryptionKey)), encryptionKeySizeBytes, 0))
hr = HRESULT_FROM_WIN32(::BCryptDecrypt( spKey, static_cast<PUCHAR>(const_cast<BYTE*>(pEncryptedBlob)), encryptedBlobSizeBytes, nullptr, static_cast<PUCHAR>(const_cast<BYTE*>(pInitializationVector)), initializationVectorSizeBytes, nullptr, 0, &resultSizeBytes, BCRYPT_BLOCK_PADDING))
hr = HRESULT_FROM_WIN32(::BCryptDecrypt( spKey, static_cast<PUCHAR>(const_cast<BYTE*>(pEncryptedBlob)), encryptedBlobSizeBytes, nullptr, static_cast<PUCHAR>(const_cast<BYTE*>(pInitializationVector)), initializationVectorSizeBytes, spDecryptedBlob, resultSizeBytes, &resultSizeBytes, BCRYPT_BLOCK_PADDING))
HashDigestLength
onecoreuap\ds\ext\live\identity\lib\utilitieslite\registryhelper.cpp
RegSetKeyValue() failed. (0x%0x)
=L9o<
urn:liveid:SP800-108CTR-HMAC-SHA256
onecoreuap\ds\ext\live\identity\lib\sessionkeymanager\sessionkeymanager.cpp
sessionKey.IsEmpty() == false
SessionKeyManager::SignWithSessionKey
hr = pSessionKeyFunction1->GetDerivedKey( pSessionKeyExecutionContext, logonUserToken, sessionKey1Blob, context, label, derivedKeySizeBytes, pSignatureKey)
hr = UnPackSessionKeys( sessionKey, sessionKey1Blob, &pSessionKeyFunction1, sessionKey2Blob, &pSessionKeyFunction2)
hr = pSessionKeyFunction1->SignMessage( pSessionKeyExecutionContext, pSignatureKey, context, label, derivedKeySizeBytes, message, signature)
Session key signing failed with error: %x. Continuing with single session key
SessionKeyManager::UnPackSessionKeys
bpSessionKey.GetLength() > 4 * sizeof(DWORD)
hr = GetSessionKeyFunctions(sessionKey.GetSessionKeyType(), pSessionKeyFunctions1)
hr = SafeCopyMemory(&sessionKey1SizeBytes, sizeof(DWORD), pSessionKey, sizeof(DWORD))
hr = SafeCopyMemory(&sessionKey1Type, sizeof(DWORD), pSessionKey, sizeof(DWORD))
hr = GetSessionKeyFunctions(sessionKey1Type, pSessionKeyFunctions1)
sessionKey1SizeBytes < (bpSessionKey.GetLength() - (4 * sizeof(DWORD)))
hr = SafeCopyMemory(&sessionKey2SizeBytes, sizeof(DWORD), pSessionKey, sizeof(DWORD))
hr = SafeCopyMemory(&sessionKey2Type, sizeof(DWORD), pSessionKey, sizeof(DWORD))
hr = GetSessionKeyFunctions(sessionKey2Type, pSessionKeyFunctions2)
sessionKey2SizeBytes == (bpSessionKey.GetLength() - (4 * sizeof(DWORD)) - sessionKey1SizeBytes)
TpmSessionKeyFunctions::ImportSessionKey
hr = pNgcFunctions->NgcImportSymmetricPopKey( &accountInfo, nullptr, NGC_DEVICE_KEY_TRANSPORT_KEY, reinterpret_cast<const BYTE*>(sessionKey.GetString()), sessionKey.GetLength() * sizeof(CHAR), &decryptedSessionKey, &decryptedSessionKeySizeBytes)
onecoreuap\ds\ext\live\identity\lib\sessionkeymanager\tpmsessionkeyfunctions.cpp
hr = PassportEncode::Base64Encode(spSignatureBlob, signatureBlobSizeBytes, signature)
TpmSessionKeyFunctions::SignMessage
hr = PassportEncode::Base64Decode(signature, rawSignature)
TpmSessionKeyFunctions::VerifySignature
TpmSessionKeyFunctions::DecryptMessage
hr = pNgcFunctions->NgcVerifyWithSymmetricPopKey( key.GetBuffer(), key.GetLength(), reinterpret_cast<const BYTE*>(label.GetString()), static_cast<DWORD>(label.GetLength()), context.GetBuffer(), context.GetLength(), reinterpret_cast<const BYTE*>(message.GetString()), message.GetLength() * sizeof(CHAR), reinterpret_cast<const BYTE*>(rawSignature.GetString()), rawSignature.GetLength() * sizeof(CHAR))
hr = SafeCopyMemory( plainText.GetBufferSetLength(decryptedBlobSizeBytes), decryptedBlobSizeBytes, spDecryptedBlob, decryptedBlobSizeBytes)
hr = pNgcFunctions->NgcDecryptWithSymmetricPopKey( key.GetBuffer(), key.GetLength(), reinterpret_cast<const BYTE*>(label.GetString()), static_cast<DWORD>(label.GetLength()), context.GetBuffer(), context.GetLength(), reinterpret_cast<const BYTE*>(initializationVector.GetString()), initializationVector.GetLength() * sizeof(CHAR), reinterpret_cast<const BYTE*>(cipherText.GetString()), cipherText.GetLength() * sizeof(CHAR), &spDecryptedBlob, &decryptedBlobSizeBytes)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/onecoreuap\ds\ext\Live\identity\Include\TransferImp.h
CAutoRevertToSelf::Revert
hr = HRESULT_FROM_WIN32(lastError)
ObfuscatedSessionKeyFunctions::GetDerivedKey
hr = CWLIDCCHelper::ConvertToWide(&memoryManager, sessionKeyProtected, &spSessionKeyProtectedBlob)
onecoreuap\ds\ext\live\identity\lib\sessionkeymanager\obfuscatedsessionkeyfunctions.cpp
hr = GetDeviceRegistryPath(pExecutionContextLite, keyIdentifier, deviceRegKeyPath)
ObfuscatedSessionKeyFunctions::PersistSessionKey
hr = HRESULT_FROM_WIN32(LOCAL_STATUS)
hr = autoRevert.Revert(false)
hr = GetDeviceSessionKeyFromStore(pExecutionContextLite, deviceName, sessionKeyProtected)
ObfuscatedSessionKeyFunctions::RetrieveSessionKey
HRESULT_FROM_WIN32(hr = pWinApiLite->GetLastError())
hr = PassportEncode::Base64Decode( sessionKeyProtected.GetString(), sessionKeyProtected.GetLength(), sessionKeyDecoded)
hr = GetDeviceRegistryPath(pExecutionContextLite, deviceName, deviceRegKeyPath)
ObfuscatedSessionKeyFunctions::GetDeviceSessionKeyFromStore
ObfuscatedSessionKeyFunctions::GetDeviceRegistryPath
hr = CWLIDCCHelper::ConvertToAnsi(&memoryManager, wstrSessionKey, &spSessionKeyBlob)
production
hr = pSystemStoreLiteFunctions->GetCurrentUserSidString(&spCurrentUserSid)
ServiceEnvironment
Software\Microsoft\IdentityCRL\DeviceIdentities
http://www.w3.org/2001/04/xmldsig-more#hmac-sha256
SymmetricSessionKeyFunctions::ImportSessionKey
SymmetricSessionKeyFunctions::GetDerivedKey
onecoreuap\ds\ext\live\identity\lib\sessionkeymanager\symmetricsessionkeyfunctions.cpp
SymmetricSessionKeyFunctions::SignMessage
hr = LiteCryptUtilities::DeriveKeyWithSP800108( sessionKey.GetBuffer(), sessionKey.GetLength(), context.GetBuffer(), context.GetLength(), label.GetString(), derivedKey.GetBufferSetLength(derivedKeySizeBytes), derivedKeySizeBytes)
SymmetricSessionKeyFunctions::VerifySignature
hr = xmlSig.GetHMACDigest(signature)
SymmetricSessionKeyFunctions::DecryptMessage
hr = xmlSig.VerifySignature()
hr = LiteCryptUtilities::DecryptContent( key.GetBuffer(), key.GetLength(), reinterpret_cast<const BYTE*>(initializationVector.GetString()), initializationVector.GetLength(), reinterpret_cast<const BYTE*>(cipherText.GetString()), cipherText.GetLength(), &spDecryptedBlob, &decryptedBlobSizeBytes)
onecoreuap\ds\ext\live\identity\passport\lib\xmlsig\xmlsig2.cpp
CXmlSig2::ComputeSHADigest
hr = g_algProvCache.GetAlgorithmProv( xmlRef.m_wstrAlgIdDigest, 0, hAlgProv)
hr = referenceHash.AddData( (const PBYTE)(xmlRef.m_pcszCanonicalizedText), xmlRef.m_cchLenCanonicalizedText)
hr = referenceHash.Initialize( hAlgProv, NULL, 0)
hr = referenceHash.GetValue( bpDigest.GetBufferSetLength(dwSize, FALSE), dwSize)
hr = referenceHash.GetSize(&dwSize)
CXmlSig2::ComputeReferenceDigest
hr = ComputeSHADigest(xmlRef, strEncodedDigest)
hr = GetHMACDigest(strComputedSigValue)
hr = g_algProvCache.GetAlgorithmProv( m_wstrAlgId, BCRYPT_ALG_HANDLE_HMAC_FLAG, hAlgProv)
CXmlHMACSHASig2::CheckSignedInfo
hr = signedInfoHash.Initialize( hAlgProv, m_pbSecretKey.GetBuffer(), m_pbSecretKey.GetLength())
CXmlHMACSHASig2::GetHMACDigest
hr = signedInfoHash.GetSize(&dwSize)
hr = signedInfoHash.AddData( const_cast<PUCHAR>(reinterpret_cast<const UCHAR*>(static_cast<LPCSTR>(m_strC14NSignedInfo))), m_strC14NSignedInfo.GetLength() *sizeof(CHAR))
hr = CheckSignedInfo()
hr = signedInfoHash.GetValue( bpSigValue.GetBufferSetLength(dwSize, FALSE), dwSize)
hr = CheckDigestedReferences()
CXmlHMACSHASig2::VerifySignature
NtQuerySystemInformation
CloudAP_DefaultCredsState
PartA_PrivTags
DefaultCredSaved
CloudAP_CallAuthPkg
UserTokenMissingForConnectedAccount
statusUserToken
GetPoPTokens
hrAccountType
statusUserToken
AccountType
CloudAP_WLIDCAcquireTokensEx
CloudAP_WLIDCAcquireTokensEx_MappedStatus
PartA_PrivTags
UserStoreRead
PartA_PrivTags
UserStoreStateChange
DefaultCredValueBefore
PartA_PrivTags
MSADaTokenLogonType
LogonType
PartA_PrivTags
MSALogonProfileLoad
IsInternetPresent
isConnectedAccountUpdateOperation
isProfileLoadedPostInteractiveLogon
finalStateLookupResult
Status
firstPersistFailed
DefaultCredValue
DefaultCredValueAfter
CredType
PartA_PrivTags
SkipTokenUpdateOnProfileLoadInfo
isProfileLoadedPostInteractiveLogon
DefaultCredValue
PartA_PrivTags
Disconnect
PartA_PrivTags
Connect
HasCloudPassword
PartA_PrivTags
NgcSignWithUserIdKeyEx
PartA_PrivTags
NgcGetUserIdKeyPublicKey
PartA_PrivTags
NgcEnumUserIdKeys
PartA_PrivTags
ContainerStatus
NgcCreateUserIdKeyEx
NgcCreateUserIdKey
NgcEnumContainers
PartA_PrivTags
ContainerStatus
NgcCreateContainer
NgcDeleteContainerEx
NgcDeleteContainer
QueryWlidsvcProperties
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
RPCCallTimedOut
RpcFunction
RpcTimeoutInterval
PartA_PrivTags
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityFailure
PartA_PrivTags
wilActivity
hresult
threadId
currentContextName
currentContextMessage
ActivityFailure
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityStoppedAutomatically
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
QueryWlidsvcProperties
PartA_PrivTags
wilActivity
hresult
threadId
QueryWlidsvcProperties
PartA_PrivTags
wilActivity
threadId
RPCServerUnavailable
ApiContext
ServiceEnabledByPolicy
ServiceStartType
ServiceState
PartA_PrivTags
DeviceIdTpmSignFailure
MSAClientTraceLoggingProvider
MSAClientTraceLoggingProvider
RSDS,=<
yiR3,
MicrosoftAccountCloudAP.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
yiR3,
SetNamedSecurityInfoW
PolicyManager_GetPolicyInt
LoadImageW
GetThreadDesktop
GetUserObjectInformationW
GetSystemMetrics
NgcUnpackCredData
NgcEnumUserIdKeys
NgcDeleteUserIdKey
NgcDeleteContainer
NgcDeleteContainerEx
NgcCreateContainer
NgcEnumContainers
NgcCreateUserIdKey
NgcCreateUserIdKeyEx
NgcGetKeyAttestationForUserIdKey
NgcRenewKeyAttestation
NgcFreeEnumState
NgcSignWithSymmetricPopKey
NgcDecryptWithSymmetricPopKey
NgcVerifyWithSymmetricPopKey
NgcGetUserIdKeyPublicKey
NgcGetSymmetricPopKeyTransportKey
NgcGetSymmetricPopKeyTransportKeyName
NgcSignWithUserIdKey
NgcSignWithUserIdKeyEx
NgcSignWithUserIdKeySilent
NgcImportSymmetricPopKey
NgcPackAuthBuffer
NgcGetLogonDecryptionKeyName
MicrosoftAccountCloudAP.dll
CloudAPPluginInitialize
_initterm
_initterm_e
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__mbscmp
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o__set_errno
_o__stricmp
_o__wcsicmp
_o__wtoi64
_o_calloc
_o_free
_o_malloc
_o_wcstol
_o_wmemcpy_s
__C_specific_handler
memset
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
OutputDebugStringW
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
DisableThreadLibraryCalls
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
IsProcessorFeaturePresent
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
EventRegister
EventSetInformation
EventWriteTransfer
EventUnregister
BCryptCreateHash
BCryptHashData
BCryptFinishHash
BCryptDestroyHash
UuidFromStringW
SizeofResource
LockResource
LoadResource
FindResourceExW
RegCloseKey
GetTokenInformation
LsaGetLogonSessionData
CoTaskMemFree
LocalFree
AllocateLocallyUniqueId
CryptDecodeObject
LocalAlloc
CertRDNValueToStrW
RegSetValueExW
RegQueryValueExW
RegCreateKeyExW
RegOpenKeyExW
RegEnumKeyExW
LoadLibraryExW
RegDeleteValueW
RegOpenCurrentUser
RegGetValueW
RegDeleteKeyExW
RegDeleteTreeW
RegQueryInfoKeyW
RegEnumValueW
MesEncodeFixedBufferHandleCreate
MesBufferHandleReset
MesHandleFree
MesDecodeBufferHandleCreate
UuidCreate
I_RpcBindingInqLocalClientPID
CryptProtectData
CryptUnprotectData
CryptProtectMemory
CryptUnprotectMemory
GetCurrentThread
GetFileVersionInfoExW
GetFileVersionInfoSizeExW
GetModuleFileNameW
GetThreadPreferredUILanguages
GetVersionExW
LookupAccountNameW
ConvertSidToStringSidW
CreateWellKnownSid
IsValidSid
OpenThread
OpenThreadToken
RevertToSelf
ImpersonateLoggedOnUser
GetProcessIdOfThread
GetUserDefaultLocaleName
OpenProcessToken
GetProfileType
LogonUserExExW
VerQueryValueW
LsaRegisterLogonProcess
LsaConnectUntrusted
LsaLookupAuthenticationPackage
LsaCallAuthenticationPackage
LsaDeregisterLogonProcess
GetSecurityDescriptorDacl
GetSecurityDescriptorSacl
CreateEventW
CreateEventExW
WaitForMultipleObjectsEx
BCryptGenRandom
EventActivityIdControl
RpcAsyncInitializeHandle
InitOnceBeginInitialize
RpcSsDestroyClientContext
OpenServiceW
QueryServiceConfigW
RpcAsyncCompleteCall
ReleaseSRWLockExclusive
Ndr64AsyncClientCall
RpcAsyncCancelCall
InitOnceComplete
AcquireSRWLockExclusive
OpenSCManagerW
CloseServiceHandle
QueryServiceStatus
RpcBindingFromStringBindingW
RpcStringBindingComposeW
RpcBindingSetAuthInfoExW
RpcStringFreeW
RpcBindingFree
CredIsProtectedW
CredUnprotectW
NdrMesTypeDecode3
NdrMesTypeEncode3
NdrMesTypeFree3
NdrMesTypeAlignSize3
InitializeCriticalSection
DeleteCriticalSection
EnterCriticalSection
LeaveCriticalSection
MultiByteToWideChar
GetTickCount64
WideCharToMultiByte
CryptStringToBinaryW
BCryptDestroyKey
BCryptKeyDerivation
BCryptGetProperty
BCryptDecrypt
CryptBinaryToStringA
BCryptOpenAlgorithmProvider
BCryptCloseAlgorithmProvider
BCryptSetProperty
BCryptGenerateSymmetricKey
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
bcrypt.dll
RPCRT4.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
SspiCli.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
CRYPT32.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
USERENV.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-security-credentials-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
CryptReleaseContext
CryptAcquireContextA
CryptDestroyKey
UrlEscapeW
CRYPTSP.dll
api-ms-win-core-url-l1-1-0.dll
GetComputerNameW
api-ms-win-core-kernel32-legacy-l1-1-0.dll
RtlLengthRequiredSid
RtlInitializeSid
RtlSubAuthoritySid
RtlInitUnicodeString
RtlUpcaseUnicodeString
RtlFreeUnicodeString
NtQueryInformationToken
RtlCapabilityCheck
NtQueryWnfStateData
RtlPublishWnfStateData
ntdll.dll
_time64
memmove_s
api-ms-win-crt-time-l1-1-0.dll
strrchr
wcsstr
__CxxFrameHandler3
_CxxThrowException
ResolveDelayLoadedAPI
DelayLoadFailureHook
HeapSize
HeapReAlloc
HeapDestroy
RaiseException
SetThreadToken
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
ApiSetQueryApiSetPresence
api-ms-win-core-apiquery-l1-1-0.dll
wcscmp
memcmp
memcpy
memmove
.?AVbad_array_new_length@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@std@@
.?AVCAtlException@ATL@@
.?AVtype_info@@
ew|>&=4_
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
MicrosoftAccount Cloud AP Plugin
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
MicrosoftAccountCloudAP.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
MicrosoftAccountCloudAP.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
