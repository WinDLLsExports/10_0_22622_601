!This program cannot be run in DOS mode.
6Rich6k
.text
`.data
.idata
@.rsrc
@.reloc
FSoftware\Microsoft\Direct3D
LoadDebugRuntime
d3d8d.dll
Direct3DCreate8
Hardware\DirectDrawDrivers
Description
DriverName
Software\Microsoft\DirectDraw\GammaCalibrator
Software\Microsoft\Direct3D\Drivers
SoftwareOnly
CalibrateGammaRamp
advapi32.dll
AddMandatoryAce
Local\__DDrawExclMode__
Local\__DDrawCheckExclMode__
/k@Z>
jLowVidMemCap
D3D9on12.dll
GetPrivateDDITable
OpenAdapter
MinimumLocalVidMem
User/kernel-mode driver mismatch
USER32
ChangeDisplaySettingsExA
D3DREF8.DLL
ForceDriverFlagsOff
EnumDisplayDevicesA
GetMonitorInfoA
display
Primary Display Driver
EnumDisplayMonitors
KERNEL32
IsDebuggerPresent
mscat32.dll
wintrust.dll
CryptCATOpen
CryptCATClose
CryptCATGetCatAttrInfo
CryptCATAdminCalcHashFromFileHandle
CryptCATAdminEnumCatalogFromHash
CryptCATAdminAcquireContext
CryptCATAdminReleaseContext
CryptCATAdminReleaseCatalogContext
CryptCATCatalogInfoFromContext
CryptCATEnumerateCatAttr
WinVerifyTrust
InstalledDisplayDrivers
IsWow64Process
Wow64EnableWow64FsRedirection
SUBSYS_
KV_DISPLAY
DXT1H
DXT1J
DXT3K
DXT3M
DXT5N
DXT5P
D3D8_IdHot_Ctrl_SnapDesktop
Local\D3D8CheckFullscreenSemaphore
D3D8GetSWInfo
ShowFrameRate
FlipNoVsync
Software\Microsoft\DirectDraw
ForceRefreshRate
DWM_DX_FULLSCREEN_TRANSITION_EVENT
Adapter %d FPS = %ld.%01ld
user32.dll
DisableProcessWindowsGhosting
DisableDM
DisableST
DisableVBFailovers
Reserved bit(s) set in instruction parameter token!  Aborting validation.
Reserved bit(s) set in destination parameter token!  Aborting validation.
Reserved bit(s) set in source %d parameter token!  Aborting validation.
Out of memory.
Version Token: Code and declaration pointers passed into shader vertex shader validator cannot both be NULL.
Version Token: Vertex shader version %d.%d is too high for device. Maximum supported version is %d.%d. Aborting shader validation.
Version token: 0x%x indicates a pixel shader.  Vertex shader version token must be of the form 0xfffe****.
Version Token: 0x%x is invalid. Vertex shader version token must be of the form 0xfffe****. Aborting vertex shader validation.
Version Token: %d.%d is not a supported vertex shader version. Aborting vertex shader validation.
Out of memory.
Out of memory.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. Max allowed is %d.  Aborting shader decl. validation.
Declaration Token #%d: Stream number %d is out of range. There are no streams available.  Aborting shader decl. validation.
Declaration Token #%d: Stream number must not be specified for tesselator stream.
Declaration Token #%d: Stream number %d has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Tesselation stream has already been declared.  Aborting shader decl. validation.
Declaration Token #%d: Cannot set stream input without first setting stream #.  Aborting shader decl. validation.
Declaration Token #%d: SKIP not permitted in fixed-function declarations.
Declaration Token #%d: Invalid reg num: %d. Max allowed is %d.
Declaration Token #%d: Unrecognized stream data type.
Declaration Token #%d: Input register %d already declared.
Declaration Token #%d: Cannot set tesselator stream input without first setting tesselator stream #.  Aborting shader decl. validation.
Declaration Token #%d: Invalid input reg num: %d. Max allowed is %d.
Declaration Token #%d: Duplicate declaration of input register %d as destination for normal generation.
Declaration Token #%d: Tess datatype must be FLOAT2 for UV generation.
Declaration Token #%d: Input register number must not be specified (does not apply) for UV tesselation.
Declaration Token #%d: Stream selector token must be followed by at least one stream data definition token.
Declaration Token #%d: Write to const register %d is not valid.  There are no constant registers available.
Declaration Token #%d: Write to const register %d is out of range.  Max offset is %d.
Declaration Token #%d: Unrecognized stream declaration token.  Aborting shader decl. validation.
Declaration Token %d: Source input register %d for normal generation has not been declared.
Declaration Token #%d: Input reg %d specified as destination for normal generation is already declared elsewhere.
Unrecognized instruction. Aborting vertex shader validation.
Instruction not supported by version %d.%d vertex shader.
Invalid parameter count.
first
second
third
Invalid reg type for %s source param.
Invalid reg num: %d for %s source param. Max allowed for this type is %d.
Reg num: %d for %s source param on matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
Cannot negate second source parameter to vector*matrix instructions.
Invalid src mod for %s source param.
Address mode must be absolute (%s source param).
Relative addressing of constant register must reference a0.x only.
Cannot swizzle second source parameter to vector*matrix instructions.
Read of uninitialized component%s(*) in %s%d: %s
Out of memory
Address register not available for vertex shader version %d.%d.  Version 1.1 required.
Format for address register must be a0.x.
Only the mov instruction is allowed to write to the address register.
Invalid reg type for dest param.
Invalid dest reg num: %d. Max allowed for this reg type is %d.
Dst modifiers not allowed for vertex shaders.
Dest shifts not allowed for vertex shaders.
Dest write mask cannot be empty.
The only valid write masks for the FRC instruction are .xy and .y.
Absolute and relative addressing of constant registers cannot be combined in one instruction.
Different relative addressing of constant registers cannot be combined in one instruction.
%d different temp registers (r#) read by instruction.  Max. different temp registers readable per instruction is %d.
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d.
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.
Multiple constant registers cannot be read by a matrix op.
Multiple input registers cannot be read by a matrix op.
Number of instruction slots used too high: %d. Max. allowed is %d.
Vertex shader must minimally write first two (x,y) components of oPos output register.  Affected component%s(*): %s
Vertex shader must minimally write first two (x,y) components of oPos output register.
%s(%d) : 
(Statement %d) 
Direct3D Shader Validator: Out of memory.
D3D PixelShader Validator: Out of memory.
(Validation Error) 
(Global Validation Error) 
(Validation Warning) 
(Global Validation Warning) 
Version Token: 0x%x indicates a vertex shader.  Pixel shader version token must be of the form 0xffff****.
Version Token: 0x%x is invalid. Pixel shader version token must be of the form 0xffff****. Aborting pixel shader validation.
Version Token: Pixel shader version %d.%d is too high for device.  Maximum supported version is %d.%d. Aborting shader validation.
Version Token: %d.%d is not a supported pixel shader version. Aborting pixel shader validation.
Unrecognized instruction. Aborting pixel shader validation.
Instruction not supported by version %d.%d pixel shader.
Second source parameter for texm3x3spec must be c#.
Src reg for tex* instruction must be t# register (%s source param).
Invalid reg type (%s source param).
Invalid reg num %d (%s source param).  Max allowed for this type is %d.
_bx2 is a valid src mod for texM* instructions only (%s source param).
Invalid src mod for tex* instruction (%s source param).
Source swizzle not allowed for tex* instruction (%s source param).
Src selector .b (%s source param) is only valid for instructions that occur in the alpha pipe.
Invalid src swizzle for %s source param.
Cannot apply a negation source modifier on data that was last written with the saturate destination modifier. Affected components(*) of %s source param: %s
, texm3x2depth
Texture register result of texkill%s or texm*pad instructions must not be read. Affected components(*) of %s source param: %s
Texture register result of texbem or texbeml instruction must not be read by tex* instruction. Affected components(*) of %s source param: %s
Texture register that has been read by a tex* instruction cannot be read by a non-tex* instruction. Affected components(*) of %s source param: %s
Multiple dependent texture reads are disallowed (%s source param).  Texture read results can be used as an address for subsequent read, but the results from that read cannot be used as an address in yet another subsequent read.
Destination of texm3x2depth instruction (t%d) is not available elsewhere in shader.
Must use texture register a dest param for tex* instructions.
tex* instructions must write all components.
Instruction modifiers are not allowed for tex* instructions.
Dest shift not allowed for tex* instructions.
Invalid dst modifier.
Invalid dst shift.
Dest write mask must be .rgb, .a, or .rgba (all).
%d different texture registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different temp registers (r#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different input registers (v#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different constant registers (c#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
Tex register t%d already declared.
t# registers must appear in sequence (i.e. t0 before t2 OK, but t1 before t0 not valid).
Cannot use tex* instruction after non-tex* instruction.
Incomplete texm* sequence.
Invalid texm* sequence.
Invalid texm* register.
First source for cnd instruction must be 'r0.a'.
Maximum of 3 cmp instructions allowed.
The only valid modifiers for the first source parameter of lrp are: reg (no mod) or 1-reg (complement).
Const declaration (def) must appear before other instructions.
Destination for def instruction must be of the form c# (# = reg number, no modifiers).
Invalid const register num: %d. Max allowed is %d.
Dest write mask must be .rgb, or .rgba (all) for dp3.
Maximum of 4 dp4 instructions allowed.
First arithmetic instruction cannot have co-issue ('+') set; there is no previous arithmetic instruction to pair with.
Cannot set co-issue ('+') on a texture instruction.  Co-issue only applies to arithmetic instructions.
Cannot set co-issue ('+') on consecutive instructions.
nop instruction cannot be co-issued.
dp4 instruction cannot be co-issued.
Co-issued instructions cannot both be dot-product, since each require use of the color/vector pipeline to execute.
Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used by the dot product.
Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instructions cannot both write to the same components of a register.  Affected components: %s
Co-issued instructions cannot both write to color components.
Co-issued instructions cannot both write to alpha component.
Co-issued instructions must both write to the same register type for pixelshader version <= 1.0.
Co-issued instructions must both write to the same register number for pixelshader version <= 1.0.
Too many texture addressing instruction slots used: %d. Max. allowed is %d. (Note that some texture addressing instructions may use up more than one instruction slot)
Too many arithmetic instruction slots used: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Total number of instruction slots used too high: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
r0 must be written by shader. Uninitialized component%s(*): %s
(Source param) 
(First source param) 
(Second source param) 
(Third source param) 
%sSource register type must be texture coordinate input (t#) for texcrd instruction.
%sSource register type must be temp (r#) or texture coordinate input (t#) for tex* instruction.
%sInvalid register number: %d.  Max allowed for this type is %d.
_dz(=_db) modifier on source param for texld only allowed if source is a temp register (r#).
_dz(=_db) modifier on source param for texld only allowed in second phase of a shader.
_dz(=_db) modifier on source param for texld must be paired with source selector .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
_dz(=_db) modifier cannot be used on source parameter for texcrd. It is only available to texld instruction, when source parameter is temp register (r#).
_dw(=_da) modifier on source param for texld only allowed if source is a texture coordinate register (t#).
_dw(=_da) modifier on source param must be paired with source selector .xyw(=.rga).
%sInvalid source modifier for tex* instruction.
Source for texcrd requires component selector .xyw(==.rga), or .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Using a texture coordinate register (t#) as source for texld requires component selector .xyw(=.rga), or .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
Using a temp register (r#) as source for texld requires component selector .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
%sInvalid source selector for tex* instruction.
Texture coordinate register t%d read more than once in shader with different source selector (swizzle). Multiple reads of identical texture coordinate register throughout shader must all use identical source selector. Note this does not restrict mixing use and non-use of a source modifier (i.e. _dw/_da or _dz/_db, depending what the swizzle allows) on these coordinate register reads.
%sInput registers (v#) are not available in phase 1 of the shader.
%sTexture coordinate registers (t#) are not available to arithmetic instructions.
%sInvalid register type.
%sInvalid register number: %d. Max allowed for this type is %d.
%sInvalid source modifier.
%sInvalid source selector.
_dz(=_db) modifier may only be used at most 2 times in a shader.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first. Also: Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first.
The current tex* instruction reads from %c%d, which was written earlier by another tex* instruction in the same block of tex* instructions.  Dependent reads are not permitted within a single block of tex* instructions.  To perform a dependent read, separate texture coordinate derivation from the tex* instruction using the coordinates with a 'phase' marker.
Invalid register type for destination param.
Invalid destination register number: %d. Max allowed for this register type is %d.
texcrd with _dw(=_da) source modifier must use .xy(=.rg) destination writemask.
texcrd must use .xyz(=.rgb) destination writemask.
texld/texkill/texdepth instructions must write all components.
Instruction modifiers not allowed for tex* instructions.
Destination shift not allowed for tex* instructions.
Invalid instruction modifier.
Invalid destination shift.
%d different texture coordinate registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different texture coordinate registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. Second use of this register as a tex* destination is only available after the phase marker. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. An r# register may be used as the destination for a tex* instruction at most once before the phase marker and once after. 
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. To perform two tex* instructions with the same destination register, they must be separated by inserting a phase marker. 
tex* instructions cannot be after arithmetic instructions within one phase of the shader.  Each phase can have a block of tex* instructions followed by a block of arithmetic instructions. 
tex* instructions cannot be after arithmetic instructions. The exception is if a phase marker is present in the shader - this separates a shader into two phases.  Each phase may have a set of tex* instructions followed by a set of arithmetic instructions.  
Multiple phase markers not permitted.  Aborting shader validation.
When a phase marker is present in a shader, texkill is only permitted after the phase marker.
bem may only be used once in a shader.
bem may only be used before the phase marker.
To use bem, a phase marker must be present later in the shader.
Writemask for bem must be '.rg'
First source parameter for bem must be temp (r#) or constant (c#) register.
Second source parameter for bem must be temp (r#) register.
Only one use of texdepth is permitted.
Destination for texdepth must be r5.
When a phase marker is present in a shader, texdepth is only permitted after the phase marker.
After texdepth instruction, r5 is no longer available in shader.
Cannot set co-issue ('+') on a tex* instruction.  Co-issue only applies to arithmetic instructions.
Phase marker cannot be co-issued.
Instruction cannot have co-issue ('+') set without a previous arithmetic instruction to pair with.
phase marker cannot be co-issued.
def cannot be co-issued.
nop cannot be co-issued.
dp4 cannot be co-issued.
bem cannot be co-issued.
Co-issued instructions cannot both be dp3, since each require use of the color pipe to execute.
dp3 needs color pipe to execute, so instruction co-issued with it cannot write to color components.
dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
Individual instruction in co-issue pair cannot write both alpha and color component(s).
Co-issued instructions cannot both write to the same component(s).  One instruction must write to alpha and the other may write to any combination of red/green/blue.  Destination registers may differ.
One of the instructions in a co-issue pair must write to alpha only (.a writemask).
Too many (%d) tex* instructions before phase marker. Max. allowed in a phase is %d.
Too many (%d) arithmetic instructions before phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) tex* instructions after phase marker. Max. allowed in a phase is %d.
Too many (%d) arithmetic instructions after phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) tex* instructions. Max. allowed is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many (%d) arithmetic instructions. Max. allowed (counting any co-issued pairs as 1) is %d. Note that adding a phase marker to the shader would double the number of instructions available.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd. Also: Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd.
PixelShaderVersion
MaxPixelShaderValue
DriverStyle
Software\Microsoft\Direct3D\ReferenceDevice
ntdll.dll
Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
HIGHDPIAWARE
 DisableStripFVF
DisableGB
DisableVidMemVBs
0%xh 
INTERNAL ERROR:View matrix in D3DFE_PROCESSVERTICES structure must be aligned to 16 bytes
DisablePSGP
EmulatePointSprites
DisableMMX
Software\Microsoft\Direct3D\MostRecentApplication
DisableNVPS
Driver failed to create the requested pixel shader. Please contact your friendly video card manufacturer to inquire why this problem was encountered.
%s specified twice in the declaration
Position
Position2
Blend weight
Normal
Normal2
Point size
Diffuse
Specular
Blend indices
Texture
UseVSConverter
UsePSConverter
ProcessInfo
UTCReplace_AppSessionGuid
schemaVersion
Microsoft.Windows.Graphics.D3D8
d3d8.pdb
.rdata$brc
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gfids
.giats
.rdata
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.xdata$x
.edata
.data$brc
.data$r$brc
.data
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
.rsrc$01
.rsrc$02
)SWhP
,SVWh
D$LGP
D$LGP
D$ Ph
;D$0s
D$0Pj
D$0Pj
tcWSQ
D$8Pj
;G,s/Q
;G,s@
;V,sY
|$$9t$
t-9t$
t'9t$
D$@v-
TA;L$Pr
kD$,,
D$Lt(
L$|_^[3
L$\_^[3
VWj0j@
,A;L$(r
\$<9^
QCOMu
D$$tO
t!Qj@
D$8tM
D$|PR
D$LPt
9G u5
SVWj<
DXT1t
DXT4t
DXT5t
9w<u#
D$D9W
69W(t1
@(9D$
9T$@u
9T$ u
9T$0t
|$,t]
GD3BD
QVPtA
DXT1t 
DXT2t
DXT3t
DXT4t
DXT5u>
D$$Vj@
F<t]3
+O +G
D$ +FX+^TPS
tFWj@
t5PWS
t$ ;_
|$\;L$`u&
+T$4+
;t$8u
;T$0u
D$<+D$,
I(+H 
SVWj0
G(@t-
G(@tI
L$ QP
OP_^[
@( u@
B<;Btu
B@;Bxu
BD;B|u
SVWj<
DXT1w0t(
DXT4w#t9
DXT2t1
YUY2t
DXT3t!3
DXT5t
DXT1t
DXT2t
DXT4t
D$HSVW
@VSWQ
9Y,vs
L$,QP
D$ PP
C;Y,r
D$$+D$
D$(+D$ j
L$T_^[3
D$`SVW
D$h;O4u`
D$h;O8u;
L$l_^[3
t0j,j
tkh`T
w@SVW
;N$s+
;C8u&91u"
t,h\A
u^h(U
t#h4U
ALSVW
QLSVW
DXT1t
DXT2t
DXT4t
DXT5u
] VWSj
DXT1t
DXT4t
DXT5t
@SVWj
9_ vi
9_ vi
9w vC
9w vG
G,Hu$
t9jZW
T$,RQ
L$LQS
T$,;T$L
UYVYt
YUY2u
PQVQW
D$HPQ
t$4Wj
D$TPQ
D$TPQ
D$@;L$$
8_LvZ
;rtu(;Bxu#
FtWPQ
L$4_^[3
T$$Rj
8_Lv\
;zpu.;rtu);Bxu$
D$dPj
D$|Pj
D$(9D$8
|$$t?;\$Du9;|$Hu3
\$L;B
|$(;D$8
|$(;|$8
L$ J;
;rxu(;B|u#
t$ PS
L$<_^[3
E SVW
E SVW
OH_^[
y{_^[
D$\VW
L$d_^3
KH_^[
y4_^[
L$p^[3
yD9qHr
qH_^]
E SVW
E SVW
OH_^[
NH^[]
D$\VW
L$d_^3
L$p^[3
9wptA9wtu<
@H@u?
DXT1t
DXT4t
DXT5t
L$t_^[3
F\=DXT3
t)=DXT1t"=DXT2
=DXT4t
=DXT5t
=DXT3
#t/=DXT1t
=DXT2t!
=DXT4t
=DXT5u
DXT1t
DXT4t
DXT5t
VWj<j
PQSVW
=FILEt
=LINEu
PQSVW
PQSVW
=FILEt
=LINEu
FXj@t=
FXj@t=
F _[^
r"HPSj
F [_^
N(G;y
r/HPWhde
F _^[
PQh0g
PSh h
v{PRh
D$xSj
t7SVW
PQh0j
p h<j
IuE;xDu,
HPQh`z
HPQhde
F _^[
t"hxt
F _^[
PRh0g
PWh h
B8;A8
;B(u&
B8;A8t
B(;A(t
v"QRh@
v"PRh
F [_^
F [_^
QQPWj
HPQh`z
Gxt#j
Gxt#j
G(QPj
r/HPSh(
PRh0g
PWh h
VHu7;
vJPQh
UYVYtP
YUY2tH
@P=DXT3wot
=DXT1tW=DXT2um
=DXT4t
=DXT5t
T$Lf;
L$(9L$
L$(;L$
=UYVYu
=YUY2u
=DXT1u
=DXT2u
=DXT3u
=DXT4u
=DXT5u
w_t$-
wlt^=
wIt"-
f;\$$
f;L$$
"""""""
"""""""""""""""""""""""""""""""
PQSVW
PQSVW
PQSVW
PQSVW
jjjjj
PQSVW
DXT1t#
DXT2t
DXT3t
DXT4t
DXT5t
PQSVW
L$$_^[3
D$(Pj
L$l^3
w ^_[
PQSVW
tDj0j
L$T_^[3
L$T_^[3
L$ PV
L$ PV
L$hPV
F 9N$v
A;N$r
B;V$r
K09_4tE
L$4_^[3
L$|_^3
D$4Pj
D$4Pj
D$4Pj
D$4Pj
D$4Pj
D$4Pj
D$$u4
t@9^tt;
;CHw+
;CHv6
;GHw0
GL;GHv
GD_^[
;CHv>
GLV;GHv
;CHvG
CD_^[
CPPWj
{H_^[
{H_^[
G4_^[
O4_^[
G@+GD;
G@+GD;
;Gdu(9_<u#
Gt_^[
Gt_^[
Gt_^[
A$;GHwXf
GL$_^[
(;GHv
GL(_^[
;GHw-
;GHw*
;GHw=f
;GHwIf
 ;GHv
GL _[]
;GHw6
_L_^[]
;GHw~
B$_^[
C,_^[
H;GHv
H;GHv
t;GHv
_[;FHv
u WVP
;~(vN
;~$v;
PQSVW
PQSVW
;GHw2
;GHw#
;GHw7
H;GHv
H;GHv
B0;CH
4;CHv
B$_^[
G,_^[
B$_^[
G$_^[
y>_^[
L$<_^
f#V\f
F4;F0t
F4;F0t
D$(SV
F4;F0t
L$4_^[3
F4;F0t
L$$_^[3
F4;F0t
L$<_^[3
F4;F0t
F4;F0t
F4;F0t
F4;F0t
L$4_^[3
F4;F0t
L$4_^[3
F4;F0t
L$4_^
L$<_^3
L$<_^[3
D$$VW
L$,_^3
L$<_^[3
D$0tv
|$,;|$ 
K$Pt5
tn;7uc
C4;C0t
L$(VW
f#V\f
f#F\f
RGBGt
GRGBu
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
D$PPj
L$0QPQ
L$0QPQ
0watL
w5t)=
 t*VW
 t*VW
T$ u~
\$ tg
L$d_^[3
L$\_^[3
t$|WP
t$|WP
t$(WV
t$8WV
u'VPS
9D$(us
D$LPS
D$ )D$
9D$0u
D$dPS
j,h`y
Y__^[
d3d8.dll
Direct3D8EnableMaximizedWindowedModeShim
ValidatePixelShader
ValidateVertexShader
DebugSetMute
Direct3DCreate8
wcscpy_s
malloc
_stricmp
_wcslwr
strcpy_s
wcsrchr
strrchr
_vsnprintf
_purecall
__CxxFrameHandler3
sscanf_s
_XcptFilter
_amsg_exit
_initterm
_except_handler4_common
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UAE@XZ
DefWindowProcA
GetMonitorInfoA
IntersectRect
SetRect
GetClientRect
DisplayConfigGetDeviceInfo
ClientToScreen
GetWindowInfo
OffsetRect
GetSystemMetrics
EnumDisplayDevicesA
ReleaseDC
EnumDisplaySettingsA
GetDC
SystemParametersInfoA
SetWindowPos
GetForegroundWindow
IsWindowVisible
ShowWindow
IsZoomed
SetWindowLongA
CallWindowProcA
SendMessageA
PostMessageA
IsIconic
GetWindowLongA
GetKeyState
GetWindowRect
OpenClipboard
EmptyClipboard
SetClipboardData
CloseClipboard
IsWindow
GetWindowThreadProcessId
OpenInputDesktop
GetUserObjectInformationA
CloseDesktop
GetThreadDesktop
RegisterHotKey
UnregisterHotKey
SetRectEmpty
UnionRect
SetForegroundWindow
SetCursor
GetCursor
DestroyIcon
GetDesktopWindow
GetWindowDC
CreateIconIndirect
GetIconInfo
GetCursorPos
SetCursorPos
USER32.dll
RegOpenKeyA
RegQueryValueExA
RegCloseKey
RegEnumKeyA
AddAccessAllowedAce
GetLengthSid
ConvertStringSidToSidA
SetSecurityInfo
InitializeAcl
InitializeSecurityDescriptor
IsValidSid
InitializeSid
GetSidLengthRequired
GetSidSubAuthority
SetSecurityDescriptorDacl
RegOpenKeyExA
ADVAPI32.dll
GetFileVersionInfoSizeExA
VerQueryValueA
GetFileVersionInfoExA
api-ms-win-core-versionansi-l1-1-0.dll
GetProcessDpiAwarenessInternal
SetProcessDpiAwarenessInternal
ext-ms-win-rtcore-ntuser-dpi-l1-1-0.dll
GetCurrentDpiInfo
api-ms-win-gdi-dpiinfo-l1-1-0.dll
RtlDllShutdownInProgress
VerSetConditionMask
ntdll.dll
OsThunkDdReenableDirectDrawObject
OsThunkDdSetGammaRamp
OsThunkDdCreateD3DBuffer
OsThunkDdQueryDirectDrawObject
OsThunkDdResetVisrgn
OsThunkDdWaitForVerticalBlank
OsThunkDdReleaseDC
OsThunkDdGetDriverState
OsThunkD3dValidateTextureStageState
OsThunkDdFlip
OsThunkD3dContextCreate
OsThunkDdDeleteSurfaceObject
OsThunkDdGetDriverInfo
OsThunkD3dContextDestroyAll
OsThunkDdGetFlipStatus
OsThunkDdCanCreateD3DBuffer
OsThunkDdDestroySurface
OsThunkD3dDrawPrimitives2
OsThunkDdSetExclusiveMode
OsThunkDdGetDC
OsThunkDdDestroyD3DBuffer
OsThunkDdCreateSurface
OsThunkDdLock
OsThunkD3dContextDestroy
OsThunkDdUnlock
OsThunkDdGetBltStatus
OsThunkDdGetAvailDriverMemory
OsThunkDdFlipToGDISurface
OsThunkDdAttachSurface
OsThunkDdDeleteDirectDrawObject
OsThunkDdUnlockD3D
OsThunkDdCreateSurfaceObject
OsThunkDdLockD3D
OsThunkDdGetScanLine
OsThunkDdBlt
OsThunkDdCreateSurfaceEx
OsThunkDdCanCreateSurface
d3d8thk.dll
BitBlt
D3DKMTQueryAdapterInfo
D3DKMTGetDeviceState
D3DKMTGetResourcePresentPrivateDriverData
D3DKMTOfferAllocations
CreateDCA
D3DKMTSignalSynchronizationObjectFromCpu
D3DKMTWaitForSynchronizationObject2
D3DKMTOpenResource2
D3DKMTLock
D3DKMTUnlock
D3DKMTMarkDeviceAsError
D3DKMTGetScanLine
D3DKMTSignalSynchronizationObject2
D3DKMTQueryResourceInfo
D3DKMTCreateContextVirtual
D3DKMTSetAllocationPriority
D3DKMTSignalSynchronizationObjectFromGpu2
D3DKMTGetMultisampleMethodList
D3DKMTReserveGpuVirtualAddress
D3DKMTDestroyDevice
D3DKMTCreateDCFromMemory
D3DKMTSubmitWaitForSyncObjectsToHwQueue
D3DKMTCreatePagingQueue
D3DKMTSubmitCommandToHwQueue
D3DKMTCreateContext
D3DKMTReclaimAllocations2
D3DKMTSignalSynchronizationObject
D3DKMTSubmitSignalSyncObjectsToHwQueue
D3DKMTSetDisplayMode
DeleteDC
D3DKMTWaitForSynchronizationObjectFromGpu
D3DKMTSignalSynchronizationObjectFromGpu
D3DKMTInvalidateCache
D3DKMTDestroyHwQueue
D3DKMTRender
D3DKMTSubmitCommand
D3DKMTCreateDevice
D3DKMTSetVidPnSourceOwner
D3DKMTSetDisplayPrivateDriverFormat
D3DKMTSharedPrimaryLockNotification
D3DKMTQueryAllocationResidency
D3DKMTCreateAllocation2
D3DKMTDestroyPagingQueue
D3DKMTOpenResource
D3DKMTDestroyDCFromMemory
D3DKMTOpenAdapterFromHdc
D3DKMTUpdateGpuVirtualAddress
D3DKMTCreateSynchronizationObject
D3DKMTReclaimAllocations
D3DKMTGetDisplayModeList
D3DKMTCreateSynchronizationObject2
D3DKMTSetGammaRamp
D3DKMTDestroySynchronizationObject
D3DKMTWaitForSynchronizationObject
D3DKMTUpdateAllocationProperty
D3DKMTUnlock2
D3DKMTSubmitPresentToHwQueue
D3DKMTEscape
D3DKMTGetSharedPrimaryHandle
D3DKMTUnregisterTrimNotification
D3DKMTWaitForSynchronizationObjectFromCpu
D3DKMTRegisterTrimNotification
D3DKMTSharedPrimaryUnLockNotification
D3DKMTCreateHwQueue
D3DKMTCloseAdapter
D3DKMTFreeGpuVirtualAddress
D3DKMTDestroyAllocation
D3DKMTDestroyContext
D3DKMTMapGpuVirtualAddress
D3DKMTCreateAllocation
D3DKMTLock2
D3DKMTDestroyAllocation2
D3DKMTEvict
D3DKMTPresent
D3DKMTMakeResident
GetRandomRgn
DeleteObject
SetStretchBltMode
GdiEntry1
GetRegionData
CreateRectRgn
GetDIBits
GetDeviceGammaRamp
GdiEntry13
StretchBlt
CreateCompatibleBitmap
GetDeviceCaps
GetNearestColor
CreateCompatibleDC
SelectObject
CreateDIBitmap
GetObjectA
GetSystemPaletteEntries
GDI32.dll
WaitForSingleObject
ReleaseMutex
GetLastError
GetNativeSystemInfo
LoadLibraryA
GetProcAddress
FreeLibrary
DeleteCriticalSection
EnterCriticalSection
LeaveCriticalSection
GetCurrentThreadId
InitializeCriticalSection
HeapFree
CreateMutexA
GetModuleHandleA
OpenMutexA
DisableThreadLibraryCalls
CloseHandle
HeapAlloc
LocalFree
GetCurrentProcessId
GetProcessHeap
LocalAlloc
lstrcmpA
Sleep
OutputDebugStringW
LoadLibraryW
WideCharToMultiByte
DebugBreak
GetTickCount
LoadLibraryExW
VerifyVersionInfoA
GetCurrentProcess
SetErrorMode
MultiByteToWideChar
CreateFileA
GetSystemDirectoryA
GlobalAddAtomA
CreateSemaphoreA
ReleaseSemaphore
OpenEventW
ResetEvent
OutputDebugStringA
GetModuleFileNameA
SetNamedPipeHandleState
ConnectNamedPipe
DisconnectNamedPipe
FlushFileBuffers
ReadFile
PeekNamedPipe
WriteFile
FormatMessageW
GetModuleHandleW
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
KERNEL32.dll
DwmIsCompositionEnabled
dwmapi.dll
RegCreateKeyExA
RegGetValueA
RegSetValueExA
EventSetInformation
EventRegister
EventWriteTransfer
EventUnregister
RegCreateKeyA
EtwEventWriteNoRegistration
IsProcessorFeaturePresent
GetVersionExA
QueryPerformanceFrequency
_CIcos
_CIexp
_CIlog
_CIlog10
_CIpow
_CIsqrt
_CxxThrowException
_ftol2_sse
floor
memcpy
memset
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Direct3D
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
D3D8.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
D3D8.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
<0<h<
>.?G?
0"010B0M0S0Y0_0i0o0u0
2(2-2M2{2
333K3
4.4L4
6\7`7d7h7l7p7t7x7
?j?t?
031V1
4/494\4f4q4
7Q8y8
:7<s<
<5=;>y>
0c1#2c2
5L5c5
899J9{9
9+:5:M:T:
;";N;V;];u;
<)<6<;<H<X<_<o<v<
=/=G=b=h=t=z=
>(>1><>A>L>R>Z>`>
1!121q1
2B2G2L2Q2V2[2`2e2j2o2t2y2~2
3#3(3-32373<3A3F3K3P3V3\3a3f3k3p3u3z3
4!4&4+40454:4?4D4I4N4S4X4]4b4g4l4q4v4{4
5#5)5F5y5
=L=P=T=X=\=`=d=h=l=l>p>t>x>
H0g1t1|1
2.2.3;3
4Z5y5
6/6h6
6E7\7d7
=2>N>
1,2=2
4Y4k4
5F6X6
8 8X8
:N:{:
:>;c;
<G=Y=d=
=<>M>
?7?i?{?
,0T0}0
0S1`1
2+3U3
3 4F4g4
495)666
6C7\7
7:8~8
9/:::L:e:u:
:.;5;F;T;
;&<S<`<j<'=
1!1+151q1{1
2%2/292C2M2W2a2k2u2
3S4Z4l4
575C5Q5
6)7a7
969n9
:5:>:J:i:
;$<o<v<
? ?$?(?
0!0J0o0
1.262@2H2
475C5
:):[:
2*424j4
777@7O7c7v7/8d8
8.;A;
;D<W<
=&>@>Z?c?o?
1-2@2@3
9.:>:~;
<$<)<.<3<:<?<Z<}<
<9=O=l=|=
>&>0>:>D>N>X>b>l>v>
? ?*?4?>?H?R?\?f?p?z?
0$0.080B0L0V0`0j0t0~0
1>1Z1
1;2Z2
5O5W5
6M7a7
8]9e9
;g;m;s;
=9=N=
071@1I1
2Z2l2s2
2:3p3
?+?y?
5-5|5
6,7<7U7i7v7
:v: ;7;
=Q>`>o>~>
:/:K:g:{:
;/=X=
1L1%2]2
2Q3s3
3@3\3c3o3
4 4$4(4,4\4i4s4
5"5`5
767z7*8
;^<i<t<
<"=S=_=
=A>Y>g>r>}>
3?3w3
6?6x6
6,7:7A7H7O7V7]7d7k7r7y7
798B8Q8
;1<K<P<m<
>%>[>g>
?"?0?E?L?Y?|?
40H0w0
011H1L1z1
2:2T2j2
5j5q5
8#8Y8
8'9-939
:)=1=8=?=D=M=e=
>.>7>E>S>f>p>
?Y?c?j?w?
=#=)=.=3=9=>=E=K=T=]=
0!0m0~0
3(3-373<3F3K3U3Z3d3i3s3x3
4&4-464
5K5V5h5
5S6}6
7-797I7V7m7
;<<e<t<
<+=8=x=
10@0M0p0~0
1(1Q1_1k1
1$2(2,20242
656G6
939B9W9`9o9t9
:,:2:8:>:q:w:
;!;+;1;7;I;X;h;
<*<><M<R<W<\<a<f<p<
=#=)=/=;=@=U=d=p=
>=>^>f>n>}>
?7?e?|?
0*0;0T0h0n0
1M1]1
3 3%3*3/3U3
3<4V4e4k4q4w4[5
7A7N7\7h7n7
708=8G8S8Y8I9W9c9y9
00181d1
1D2S2j2{2
4,4?4J4h4q4
<5=2>
1&2c2
323Y3
5F6s6
8G8X8
:0:F:
0)1`1
4L4o4
4-5X5
5:6V6\6
9#9i9
:B;b;q;x;
<'<g<v<
>>>F>L>a>
>K?R?
1 1$1m1
9!9p9x9
9/:::G:X:
;O;k;
>@>G>t>
>A?[?
0^0e0
4/5A5
606E6R6[6w6
="=,=6=@=}=
>$>*>4>>>H>R>\>d>l>s>}>
1'1@1c1
3)8?8
9>9y9
9V:m:
;+;I;T;s;
<%<.<s<+=Z=
=->V>
>+?V?
3(3^3
4>4m4~4
4p5X6z6
627o7
<&===X=
=G>\>
142[2|2
888q8
8)9c9
9W:}:
:1;j;
<8=J=_=p=
>(>->?>
?Q?\?|?
020F0i0x0
3=3I3q3
5>5^5
5!666X6
7 8<8
9K9c9l9
9];q;
<0<4<8<<<@<D<
>8>O>f>!?Q?l?
0 0T0h8
9-:?:
=3>u>
?\?p?
1z1O4
9?:U:
;?<G<v<
>(>_>
?>?p?
1B1[1
3?3V3j3
7_8,:
:";6;
=(=K=
0%1,131
3A4e4
6&6B6o6
7`8r8
9&9D9~9
:O:x:
;?;j<q=
; <$=
1>1W1
2-2_2
2#3<3
9&>->~>
>o?v?
363T3
3/4Q4
4/5n5
768=8c8|8
:D;v;
;.<5<
=N>\?
031q1
3S3}3
4C5m5
7v9}9
;"<(<
<F=M=
0+0_0
3,4\4
738g8
:C;|;
?M?_?
0D0s0
1&1@1Q1
2R2t2
3&373Y3
7f8y8
9c:}:
:C;K;t;
;G<V<p<
<"=J=
>B>V>g>
!040Y0
0c1}1
425Y5#6
94:Q;B<g<
=Y>`?g?
0 0$0(0,0
4]4t4
5h6u6
7$7L7V7a7g7~8
8%9E9e9
7)8}8
<!<*<7<^<
=D=K=o=v=
=5>m>
>.?H?L?
1 2E2J2
2<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3
5064686<6@6
74798~8
:6:d:h:l:p:t:
;#;.;<;@;D;H;L;P;T;
<%<,<3<:<A<G<R<^<
<,=U=
=X>g>
5L6Q6
8(868M8B9m9
;,;j;~;6<
=D>H>L>P>i>x>
?N?w?
1,10141h1z1
686<6@6D6Y6
707d7k7
8O9\9
:+:::L:
<'<9<o<
=X=\=
>p>t>x>|>
>9?Z?c?j?
040i0
5=5D5R5
7s8z8
;F;h;
=C=I=O=U=
>'>J>m>
?+?0?5?s?
030I0_0p0u0{0
1F1M1a1n1
2G2b2z2
2 3M3s3
4!4I4_4
5+5K5w5
6+6:6?6G6L6d6t6
6p7t7x7|7
9H9u9
:%:+:q:x:
;*;[;
=U>\>h>
?O?[?j?
1!1P1[1b1
252?2J2V2g2
3!3B3I3j3
4Q4}4
5x5|5
636=6G6Q6[6e6
6'7a7
7"8=8_8
9>9x9
:[:{:
:?;i;(<4<@<X<
<4=;=@=W=^=c=
081K1
2=2D2)3L3P3T3p3t3
43494?4E4
5?5b5
6 6%6c6p6
7'7=7S7d7i7o7u7}7
718L8w8
9-9D9c9
:w:|:
;/;B;Q;h;u;
=+=5=:=M=W=\=
=H>N>
>Z?u?
0-0h0z0
182G2q2
4:5D5g50696M6
7f7m7
8L9P9T9X9\9
3$3.383B3L3V3`3j3t3~3
4(424<4F4P4Z4d4n4x4
5'515:5?5E5O5Y5b5g5m5w5
6!6*6/656?6I6R6W6]6g6q6z6
7%7/797B7G7M7W7a7j7o7u7
8)82878=8F8K8P8U8Z8_8d8o8y8
9#9-979A9K9U9_9i9s9}9
:6:A:R:b:g:m:t:
;&;+;1;;;E;O;Y;c;m;w;
<%<6<C<K<Q<W<]<c<i<o<w<}<
=!=+=5=?=I=S=]=g=q={=
>%>1>;>E>O>Y>c>m>w>
?-?B?b?n?|?
0K1Z1s1
5*5=5N5v5`6
7+7y7
848L8x8
5064686<6@6D6H6L6[7b7
<2=R=
040g0
1H1T1j1
303V3y3
4@4b4|4
4+5M5o5
5[6y6W7^7
8 8$8(8,8k8s8
=V>d>
111=1l1x1
2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
2;3C3O3
5G5x5
6]6}6
9 9$9X9d9y9
:$:9:
:(;8;A<
=(=Y=
=8>G>
2h3z3
6Y6v6
787D7
8(8:8j8
;.;9;T;o;
;_<|<
=D=c=
424T4r4
,0L0W0
1=1F1K1Q1h1
3(3b3~3
4,4J4h4
555W5o5
6/6G6_6w6
777O7g7
8'8?8W8o8
9c9':9:P:Y:d:B;M;d;m;x;
;(<:<
=/=A=s=
?.?_?
060m0
041y1
3U3T4!535t5
8r97:
;,;u;
<'=l=
4 4J4V4w4}4
5T5g5
6)616S6X6c6
9X:j:
;B;k;
;(<:<^<
=(=@=
=H>Z>
?T?b?
232_2
404x4
4D5m5
6.6K6s6
7S7~7
='=c>
0;0/1\1`1d1h1l1p1t1x1|1
292D2
373R3
5>5j5
6(7:7n7
838X8g8
969?9
:H:Z:
;K;s;
</<q<
=G=x=
>8>I>z>
?>?r?
081J1|1
3U3m3v3
484J4~4
5,5h5z5
6(6_6
6=7U7
7#8=8
9?9`9
:@:X:s:
;H;Z;
;3<X<
<8=J=~=
>(?:?n?
0N0f0
0@1g1
1 2H2Z2
383G3
4 4)4h4z4
6&7H7Z7
8*8^8
:8:J:{:
:3;G;~;
0M0o0
181J1~1
2M2f2~2
2 3L3
4+4F4y4
5*5^5
6R6q6
617Q7
8*9O9j9
;*;Y;
<><\<|<
=)=h=z=
>X>j>
?N?w?
0*0^0
1*1^1
2>2h2
314m4
4'5U5^5
7(7<7
8W8`8
8)9i9
9&:H:W:
:6;_;x;
<"<H<Z<
<(=:=r=
=(>G>x>
?*?\?{?
0X0j0
1<1f1
282J2
3X3|3
4&4>4V4n4
5.5F5^5v5
6.6F6^6v6
838K8c8
9-9E9]9u9
:5:M:e:}:
;!;<;W;r;
</<V<s<
=8=S=n=
>2>M>
?&?@?Z?t?
0/1:1l1
5;5H5h5z5
5'6B6j6
7(8:8n8
94:x:
;-;=;
=Y>u>
1>2V2
484I4z4
5*5i5
6D6a6
7/8\8c8
8(9B9
;A;];
0 1I1g1
2Y4m4
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
=8=J=~=
?Q?}?
0(1:1n1
252U2p2
3F3s3
3%4?4
636H6:7?9~9
=J>e>
8@9y:
;1;l;
<9<h<
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6]7{7
8B9p9
?C?s?
5"6J6]6c6
657Z7
8!9W9d9
9.:>:H:v:
?+?g?
1,172r273
5J5~5}6
<"<]<
<!=f=
>1>j>
>"?8?
0<0T0
8R;t;
4=4Z4
626e6y6
7@7f7
8.8|8
<"=0=]=
0*0E0`0{0
1 1$1(1,1014181X1f1{1
3*3[3
4^4v4
5 5h5w5
6!7@7_7
98:T:
;2<U<
=<={=
=8>^>
?>?|?
@0h0z0
181b1
4t5L6?7
;+;C;x;
<Q=p=
=6>R>l>
>'???w?
0)0J0
181S1
2(353
6h7~7
7,8o8v8
9)9t9
2(2}2
4V5]5
7?7|7
8)9n9
<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<P=W=
0c1}1
3044484<4@4D4H4L4P4T4X4
>/?z?
161l1
1)2f2
3 3$3(3,3
5&6064686<6@6D6H6
707j7
<J=k=
H0U0o0
182J2d2
313`3r3
5`6{6
7r8~8
:9:U:x:
:8;J;
;!<:<e<
<"=Q=l=
=>>[>
=0P0c0
383W3c3
3?4M4
6'696
7(8:8k8
;*;?;j;
=A>W>
4Z5{5
5G6f6
6%7.7E7
<,<h<
< =A=b=
1I2b2
203L3x4
4f516C6
7E8f8
829s9
:%:?:
=-=B=H>
6,7074787)8N8
2a3q3w4
676i6
8.8Q8
252m2
6 6L9
<O<x<
=Z=t=
= >H>Z>
202r2
=/>R>n>
2H2U2i2
7-7i7x7
8*8H8q8
8?9b9
<6=W=
,0P0}0
2F2$3D3
718A8
999i9
344;4
>\>4?}?
9H9Z9
:$:z:
:8;X;
</<p<
<M=`=
=#>d>w>
>A?T?
0)1`1s1
2)2f2
3A3P3
484E4_4
686G6a6|6
:';];
1d1w1
5"5e5x5
5)6<6}6
9)9j:
;B;V;
>U>v>
2+262M2|2
4J5]5
6I6l6
9*959l:
:/;B;
;-<Z=
=?>R>
2<2*3
354H4
435J5
6+6J6]6h6
7*7h7
8?8O8`8f9
<$=7=B=l=(>;>
>Z?m?
$0:0r0
1_1o1
1I2\2
2'3?3j3
3@4S4
5 5b5|5
576Q6
6,7;7
9P9c9
9@:Z:q:
:(;:;N;
>%?8?
"050v0
1'2F2Q2y2
2-3F3|3
4C4V4
4:5M5
7j8}8
9_9r9
:(:Q:
:';>;I;y;(<x<
>S?f?
0 1C1
222o2
3!3_3y3d4w4
5)535=5G5Q5
5B6U6
5P6T6X6\6
9@:e<
8V9_9h9{9
6W8e8
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>8???
=Z>I?
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
9$;V;
;8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<
2T5X5\5`5d5h5l5p5t5x5
5064686<6@6D6H6L6P6T6X6\6`6d6h6l6
=<>b?
:[;b;
;:=M>[>x>
>0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?
0@3D3H3L3P3T3X3m4t4
4$5y5
6U7u7
8*9G9
:V:n:
:&;a;z;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
788J8
8+9h9z9
9I:u;
> >$>(>,>0>
2)3z4
687J7
04080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
0O1v1
2,2E2
8I9*:
7x8m9
3,4k5
6U6r6
7"7X7j7
9-9:9W9`9f9
:3:8:D:U:]:p:|:
;1;H;];
>">(>.>4>:>@>G>N>U>\>c>j>q>y>
?0?6?<?B?H?N?U?\?c?j?q?x?
0"0.0B0O0v0
2+232W2`2
2X3]3o3
5"5e5q5}5
6M6\6
6-797E7Q7]7i7u7
848t8
819V:
<Q<t<
>$?T?
0D0t0
141d1
112a2
2!3[3
314a4
5A5d5
6$6q6
717k7
8A8d8
819a9
;A;q;
<4<d<
<$=T=
?A?d?
010a0
1,1d1
2A2d2
343n3
3$4T4
7D7t7
848d8
94989D9d9p9
:$:0:T:\:d:l:t:|:
;0;<;\;h;
< <(<4<T<`<
= =,=L=X=`=
>8>@>L>l>t>
?$?0?8?l?t?|?
0 0t0
1$10181l1t1|1
2 2(2@2d2l2t2
3$3,343@3H3`3
4<4D4L4X4`4x4
505T5\5d5p5x5
686@6H6T6\6t6
7,7P7X7`7l7t7
8$8,8D8h8p8x8
9L9T9\9h9p9
:(:0:H:l:t:|:
;$;,;4;@;H;`;
< <(<4<<<T<x<
<0=8=@=L=T=l=
>H>P>X>d>l>
?<?D?L?X?`?
000T0\0d0p0x0
1(101H1l1t1|1
2,242<2H2P2h2
3(3L3T3\3h3p3
4 4(4\4d4l4x4
5(505d5l5t5
6$60686l6t6|6
7$7,787@7t7|7
8$8X8`8h8t8|8
9 9(949<9T9x9
9@:T:\:d:l:t:
;$;,;8;@;t;|;
<4<<<D<P<X<p<
=L=T=\=h=p=
>(>H>T>t>
?$?,?8?@?t?|?
,040<0H0P0
1 1(141<1p1x1
1 2(202<2D2x2
2(30383D3d3p3
4@4H4P4\4|4
5P5X5`5l5t5
6$6D6P6X6
7<7D7L7X7`7
8D8L8T8`8h8
9L9T9\9x9
:8:X:t:x:
0 0$0(0,040X0d0
