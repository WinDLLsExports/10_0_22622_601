!This program cannot be run in DOS mode.
mRich
.text
`.data
.idata
@.rsrc
@.reloc
bad allocation
ForceRemove
NoRemove
Delete
{1b7cd997-e5ff-4932-a7a6-2a9e636da385}
toolUI
edgehtml.dll
F12\F12Tab2.dll
F12\F12Tab.dll
DllGetClassObject
debug
JS_DEBUG_DSH
 #%lu
F12 Debugger Script Engine
dbgsh://%d/%s
A script error has occurred in the remote side JavaScript:
Message: %s
File: %s
Line: %u
remotescripterror
detach
closed
vector too long
bad array new length
Unknown exception
map/set too long
iertutil.dll
ATL:%p
@Qm6t
{DB78C36C-0C1D-4D30-B722-2D4C252523F1}
\Required Categories
CLSID\
\Implemented Categories
Module
Module_Raw
REGISTRY
HKEY_CLASSES_ROOT
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
HKEY_USERS
HKEY_PERFORMANCE_DATA
HKEY_DYN_DATA
HKEY_CURRENT_CONFIG
AppID
CLSID
Component Categories
FileType
Interface
Hardware
SECURITY
SYSTEM
Software
TypeLib
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
RegDeleteKeyExW
advapi32.dll
RegDeleteKeyW
APPID
RemoteDiagnostics.js
dsh://%d/%s
F12DSEDEBUGENABLED
Unknown remote file
breakFlags
portName
commandId
OnGetBreakFlagsResult
OnBreakpointHit
column
message
OnRemoteScriptError
TakeMemorySnapshot
GetHWND
GetBreakFlags
OnHWND
OnConnect
OnMessage
OnDetach
engineId
OpenAndReadFileFromModuleResources '%s' failed
UTF-8
attach
break
Cw48?
message
partId
objectId
sizeIsApproximate
<Type Name Not Found>
isNew
isRoot
isSiteClosed
external
winrt
properties
indices
relationships
events
prototype
functionName
scopes
elementAttributesSize
elementTextChildrenSize
internalProperties
value
numberValue
Infinity
-Infinity
stringValue
UNKNOWN relationshipinfo
UNKNOWN
isGetter
isSetter
length
!aeJ@
unordered_map/set too long
invalid hash bucket count
connect
=L9o<
atlthunk.dll
AtlThunk_AllocateData
AtlThunk_InitData
AtlThunk_DataToCode
AtlThunk_FreeData
WM_F12_SITE_COMMAND
UTF-16LE
rt, ccs=
sfs+/v/+/v++/v9+/v8
Object
oJ3]1"
false
\u%04x
RSDS7
DiagnosticsTap.pdb
.rdata$brc
.rdata$r$brc
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gfids
.giats
.rdata
.rdata$sxdata
.rdata$voltmd
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.text$di
.text$mn
.text$x
.text$yd
.xdata$x
ATL$__a
ATL$__m
ATL$__z
.edata
.data$brc
.data$r$brc
.data$rs$brc
.data
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
.rsrc$01
.rsrc$02
Cl9sTt
C Ph4)
pShd)
;^$t,
QQSVWj
QQSVW
X[_^]
PQSVW
9s<t5
"9_4t"
PQQSVW
0Qh$)
uGf9C
G,PVQh 
9F(u{
uT93tP
Q$9PPt
 9qPt
9s0tx
sBj%V
L$HQP
PQjeZ
SSSSSSPSSSV
uUSSSSSSS
PSSSV
97uGh$S
j%Yf;
awJtd
?=u/W
D$<PV
QQQQQQQPQQQ
uBhP.
toj'[f;
j}Xf9
j=Xf9
PQVQQQWS
j=Xf9
j{Xf9
j{Xf9
j}Xf9
j{Xf;
90tF9s
K 99t
N,P;N0t
9f;:u
)_^[]
t#SVj
C4Wj@
I9w8u
QQSVW
C(Ph@Q
G7PVh
G7PVh
N499t
u<hT3
uKhX5
)_^[]
^d9;t
ND;NHt
_D+_@V
K(91t
QQQSP
;F|u/SW
;F|u/
;A<u/j
QQSVW
)_^[]
;Gpt@
|};Cptx
N(99t
;w(t7
C4;C8t
)_^[]
>,uQW3
xM;~$}H
G;~$|
)_^[]
t%h(8
Y__^[
5ineI
5ntel
Y__^[
>@s5f
?@s-f
DiagnosticsTap.dll
DllCanUnloadNow
DllGetClassObject
DllInstall
DllRegisterServer
DllUnregisterServer
.?AV<lambda_1aa29260efe18fb4a9a0da353288df9a>@@
.?AVbad_array_new_length@std@@
.?AVbad_alloc@std@@
.?AVexception@std@@
.?AVCAtlException@ATL@@
.?AV<lambda_ea7eab20e2b470d7486fb5b54d604fa1>@@
.?AV<lambda_1aa29260efe18fb4a9a0da353288df9a>@@
.?AV<lambda_6e895be48cbc1d1bc3210ae5ed3d15e2>@@
.?AV<lambda_1aa29260efe18fb4a9a0da353288df9a>@@
.?AVlength_error@std@@
.?AV<lambda_1aa29260efe18fb4a9a0da353288df9a>@@
.?AVtype_info@@
.?AVEventHelper@@
.?AV_Ref_count_base@std@@
.?AV?$_Ref_count@E@std@@
.?AVCSecurityDesc@ATL@@
.?AVCAccessAce@CDacl@ATL@@
.?AVCDacl@ATL@@
.?AVCAce@CAcl@ATL@@
.?AVCAcl@ATL@@
.?AVCSid@ATL@@
?_Xlength_error@std@@YAXPBD@Z
?_Xbad_function_call@std@@YAXXZ
msvcp_win.dll
_isnan
_finite
_initterm
_initterm_e
api-ms-win-crt-math-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler3
__std_terminate
__std_type_info_compare
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__fpclass
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__itow_s
_o__purecall
_o__recalloc
_o__register_onexit_function
_o__seh_filter_dll
_o__ui64tow_s
_o__wfopen_s
_o_calloc
_o_ceil
_o_fclose
_o_fgetws
_o_free
_o_malloc
_o_terminate
_o_wcscat_s
_o_wcscpy_s
_o_wcsncat_s
_o_wcsncpy_s
_o_wcstol
_o_wmemcpy_s
__current_exception
__current_exception_context
_except_handler4_common
memset
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
RegCloseKey
RegQueryInfoKeyW
RegEnumKeyExW
RegOpenKeyExW
RegSetValueExW
RegCreateKeyExW
RegDeleteValueW
GetSecurityDescriptorOwner
GetSecurityDescriptorGroup
GetSecurityDescriptorDacl
GetSecurityDescriptorSacl
GetSecurityDescriptorControl
ADVAPI32.dll
GetLastError
FindAtomW
GetModuleHandleW
LoadLibraryExW
GetProcAddress
GetUserDefaultLCID
OutputDebugStringW
GetEnvironmentVariableW
SizeofResource
LockResource
LoadResource
FindResourceExW
DeleteCriticalSection
InitializeCriticalSection
SetEvent
EnterCriticalSection
LeaveCriticalSection
GetModuleFileNameW
CloseHandle
FreeLibrary
GetCurrentThreadId
CreateEventW
CreateThread
WaitForSingleObject
RaiseException
SetLastError
lstrcmpiW
MultiByteToWideChar
GetThreadLocale
SetThreadLocale
CompareStringOrdinal
GetCurrentProcess
OpenProcess
CreatePipe
DuplicateHandle
GetCurrentProcessId
ReadFile
WriteFile
HeapSize
HeapReAlloc
HeapFree
HeapAlloc
GetProcessHeap
HeapDestroy
VirtualFree
VirtualAlloc
LoadLibraryExA
EncodePointer
DecodePointer
IsProcessorFeaturePresent
FlushInstructionCache
InterlockedPushEntrySList
InterlockedPopEntrySList
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
IsDebuggerPresent
KERNEL32.dll
OLEAUT32.dll
CreateUri
CoInternetCombineUrlEx
urlmon.dll
DefWindowProcW
IsWindow
PostMessageW
PostQuitMessage
SendMessageW
PostThreadMessageW
PeekMessageW
GetMessageW
TranslateMessage
DispatchMessageW
RegisterClassExW
GetClassInfoExW
LoadCursorW
CreateWindowExW
SetWindowLongW
GetWindowLongW
CallWindowProcW
CharNextW
UnregisterClassA
USER32.dll
CoCreateInstance
CoTaskMemFree
CoTaskMemRealloc
CoTaskMemAlloc
StringFromGUID2
api-ms-win-core-com-l1-1-0.dll
GetSidLengthRequired
InitializeSid
GetSidSubAuthority
CopySid
GetLengthSid
IsValidSid
InitializeAcl
AddAce
GetAclInformation
SetSecurityDescriptorDacl
MakeSelfRelativeSD
GetSecurityDescriptorLength
MakeAbsoluteSD
InitializeSecurityDescriptor
GetTokenInformation
OpenProcessToken
FindFirstFileW
FindClose
FindResourceW
GetModuleHandleExW
PathGetCharTypeW
SHLWAPI.dll
RegisterWindowMessageW
memcmp
memcpy
memmove
REGISTRY
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
F12 Developer Tools Diagnostics TAP
FileVersion
11.00.22621.1 (WinBuild.160101.0800)
InternalName
DiagnosticsTap.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
DiagnosticsTap.dll
ProductName
Internet Explorer
ProductVersion
11.00.22621.1
VarFileInfo
Translation
    NoRemove CLSID
    {
        ForceRemove {8C0C62FD-37F1-11E3-8259-6C3BE516EAD0} = s 'TapObject Class'
        {
            ForceRemove Programmable
            InprocServer32 = s '%MODULE%'
            {
                val ThreadingModel = s 'Apartment'
            }
            TypeLib = s '{8C0C62FB-37F1-11E3-8259-6C3BE516EAD0}'
            Version = s '1.0'
        }
    }
    NoRemove CLSID
    {
        ForceRemove {CA7C1262-EA3B-4508-B120-DF9BCDEF3E60} = s 'LocalDebuggeeScriptHostFactory2 Class'
        {
            ForceRemove Programmable
            InprocServer32 = s '%MODULE%'
            {
                val ThreadingModel = s 'Both'
            }
            TypeLib = s '{8C0C62FB-37F1-11E3-8259-6C3BE516EAD0}'
            Version = s '1.0'
        }
    }
    NoRemove CLSID
    {
        ForceRemove {8C0C6304-37F1-11E3-8259-6C3BE516EAD0} = s 'MessageDispatch Class'
        {
            ForceRemove Programmable
            InprocServer32 = s '%MODULE%'
            {
                val ThreadingModel = s 'Both'
            }
            TypeLib = s '{8C0C62FB-37F1-11E3-8259-6C3BE516EAD0}'
            Version = s '1.0'
        }
    }
stdole2.tlbWWW
"DiagnosticsTapLibWWW
TapObjectWWWd
ITapObjectWW
ULONG_PTRWWWd
NInitializeWW
readHandleWW
writeHandleWd
GetBreakFlagsWWW
XpFlagsOutWWW,
tIDiagnosticsScriptEngineSite,
OnMessageWWW
TpszDataW
ulDataCountW
"IActiveScriptErrorWW
tRemoteGetExceptionInfoWW
pexcepinfoWW
GetSourcePositionWWW
nspdwSourceContext
pulLineNumberWWW
."plCharacterPositionW
GetSourceLineTextWWW
pbstrSourceLineW,
S{OnScriptErrorWWW
pScriptErrord
RemoveEngineSite
pEngineSiteToRemoveW
LocalDebuggeeScriptHostFactory2WX
ILocalDebuggeeScriptHostFactory2
targetProcessIdW
duplicatedReadHandle
7EduplicatedWriteHandleWWW
uiWriteHandleWWWX
InitializeWithExistingPipeWWX
%ProcessIdWWW
-IDiagnosticsMessageHandlerWW
OnExecuteScriptW
t2pScriptW
NpFileNameWWW
dOnConnectWWW
->portName
jsonData
OnDetachX
hCreateDebuggerScriptHostAtWebApp
pToolWindowW
ppWebApp 
8[JDebugEngineSiteW
RIDebugEngineSite
8mzIScriptEventProvider
EaddEventListener
teventNameWWW
~4listener
removeEventListenerW
wisEventListenerAttachedW
attachedCountWWW
rtremoveAllEventListenersW
connectW
createPortWWL
MessageDispatchW
IMessageDispatch
{loadScriptInProc
scriptFileNameWW
isAttachedWW
DebugMessagePortx
IDebugMessagePortWWWx
namex
postMessageW
;data
^spSucceededWW*
ILocalDebuggeeScriptHostFactory2 interface$
IDiagnosticsMessageHandler interfaceWW0
method addEventListener - Add an event listener.WW6
method removeEventListener - Remove an event listener.`
method isEventListenerAttached - Determine if an event listener is attached to a specific event.WWE
method removeAllEventListeners - Remove all attached event listeners.W
// Scoping function
(function () {
    // Disable the usage of ActiveX
    ActiveXObject = null;
    function EventHelper() {
        /// <summary>
        ///     This object is used as a base class for objects that require event listener functions
        ///     It stores a set of attached event listeners that are the callbacks for events,
        ///     and provides a fire event helper function that is used internally to mimic real events.
        /// </summary> 
        this.__eventListeners = {};
    }
    EventHelper.prototype.addEventListener = function (eventName, listener) {
        if (!this.__eventListeners[eventName]) {
            this.__eventListeners[eventName] = [];
        }
        this.__eventListeners[eventName].push(listener);
    };
    EventHelper.prototype.removeEventListener = function (eventName, listener) {
        if (this.__eventListeners[eventName]) {
            for (var i = 0; i < this.__eventListeners[eventName].length; i++) {
                if (this.__eventListeners[eventName][i] === listener) {
                    this.__eventListeners[eventName].splice(i, 1);
                    break;
                }
            }
        }
    };
    EventHelper.prototype.isEventListenerAttached = function (eventName, listener) {
        if (this.__eventListeners[eventName]) {
            if (listener) {
                for (var i = 0; i < this.__eventListeners[eventName].length; i++) {
                    if (this.__eventListeners[eventName][i] === callback) {
                        return 1;
                    }
                }
            } else {
                return this.__eventListeners[eventName].length;
            }
        }
        return 0;
    };
    EventHelper.prototype.removeAllEventListeners = function () {
        this.__eventListeners = [];
    };
    EventHelper.prototype.__fireEvent = function (eventName, params) {
        if (this.__eventListeners[eventName]) {
            for (var i = 0; i < this.__eventListeners[eventName].length; i++) {
                this.__eventListeners[eventName][i](params);
            }
        }
    };
    toolUI = function () {
        // Track existing ports with private access
        var privatePorts = {};
        var isAttached = true;
        var createPortInternal = function ScriptedHost$createPortInternal(portName) {
            /// <signature>
            /// <summary> 
            ///     Creates a port and its private data for storage to use later when 
            ///     connecting the incoming events from VS to the actual script objects
            ///     they correspond to.
            /// </summary>
            /// <param name='portName' type='String' optional='false'>
            ///     The portName that will identify the port
            /// </param>
            /// <returns type="Object">An object containing the internal data and the public port to return to callers.</returns>
            /// </signature>
            // Only create one port of a given name.
            if (privatePorts.hasOwnProperty(portName)) {
                throw new Error("A port with that name already exists.");
            }
            var _internalData = {
                isConnected: false,
                eventManager: new EventHelper()
            };
            var _port = {
                name: portName,
                postMessage: function (data) {
                    if (_internalData.isConnected) {
                        external.sendMessage("OnMessage", this.name, data);
                    } else {
                        throw new Error("Cannot postMessage on an unconnected port.");
                    }
                },
                addEventListener: _internalData.eventManager.addEventListener.bind(_internalData.eventManager),
                removeEventListener: _internalData.eventManager.removeEventListener.bind(_internalData.eventManager)
            };
            var privatePort = { internalData: _internalData, port: _port };
            privatePorts[portName] = privatePort;
            return privatePort;
        };
        var diagnosticsEventManager = new EventHelper();
        var breakFlags = 0;
        var hwnd = 0;
        external.addEventListener("message", function (e) {
            switch (e.commandId) {
                case "OnHWND":
                    hwnd = e.hwnd;
                    break;
                case "OnConnect":
                    var privatePort = createPortInternal(e.portName);
                    privatePort.internalData.isConnected = true;
                    diagnosticsEventManager.__fireEvent("connect", privatePort.port);
                    break;
                case "OnMessage":
                    if (privatePorts.hasOwnProperty(e.portName)) {
                        privatePorts[e.portName].internalData.eventManager.__fireEvent("message", { data: e.data });
                    } else {
                        throw new Error("Diagnostics message received for unknown port.");
                    }
                    break;
                case "OnDetach":
                    privatePorts = {};
                    isAttached = false;
                    diagnosticsEventManager.__fireEvent("detach", {});
                    break;
                case "OnBreakpointHit":
                    diagnosticsEventManager.__fireEvent("breakpointhit", {});
                    break;
                case "OnGetBreakFlagsResult":
                    breakFlags = parseInt(e.breakFlags, 10);
                    break;
                case "OnRemoteScriptError":
                    diagnosticsEventManager.__fireEvent("scripterror", e);
                    break;
            }
        });
        // Public Diagnostics API:
        var diagnostics = {
            // diagOM supports ES5
            engineSupportsES5: true,
            createPort: function ScriptedHost$Diagnostics$createPort(portName) {
                /// <signature>
                /// <summary> Creates a port to be used to talk to script running in the diagnostics engine in the remote target.</summary>
                /// <param name='portName' type='String' optional='false'>
                ///     The portName that will identify the port
                /// </param>
                /// <returns type="Object">The port object which can be connected, postMessage'd and listened on (using the "message event").</returns>
                /// </signature>
                return createPortInternal(portName).port;
            },
            connect: function ScriptedHost$Diagnostics$connect(port) {
                /// <signature>
                /// <summary> Connects a port to the remote target - on the remote side, a "connect" event will be fired with the other end of the port.</summary>
                /// <param name='port' type='Object' optional='false'>
                ///     The port to connect to the remote side.
                /// </param>
                /// </signature>
                if (!privatePorts.hasOwnProperty(port.name)) {
                    throw new Error("You must use a port created by ScriptedHost.Diagnostics.createPort");
                }
                external.sendMessage("OnConnect", port.name);
                privatePorts[port.name].internalData.isConnected = true;
            },
            addEventListener: diagnosticsEventManager.addEventListener.bind(diagnosticsEventManager),
            removeEventListener: diagnosticsEventManager.removeEventListener.bind(diagnosticsEventManager),
            getBreakFlags: function () {
                // sendMessage requires at least one after the message ID string, however we don't use any for GetBreakFlags
                external.sendMessage("GetBreakFlags", "empty");
                // GetBreakFlags triggers a synchronous message back to us of commandId "OnGetBreakFlagsResult" which sets breakFlags above.
                return breakFlags; 
            },
            getHWND: function () {
                external.sendMessage("GetHWND", "empty");
                // A synchronous message will be sent back which will update the value of hwnd above.
                return hwnd;
            },
            takeMemorySnapshot: function (portName, uid, startPartId) {
                external.sendMessage("TakeMemorySnapshot", portName, uid, "" + startPartId);
            }
        };
        return diagnostics;
    }();
    // Hacks to get console working without code changes
    mainBrowser = browser;
})();
<0@0H0P0h0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7d7p7|7
8 8(80888@8H8P8X8`8h8p8x8
9 9,989P9\9h9
:,:8:D:h:l:|:
;$;4;8;<;T;X;\;p;
<(<,<D<H<`<d<|<
=(=8=H=X=h=x=
> >,>0>
1"1'1-11161<1Q1v1
2j2r2|2
3B3Y3q3z3
4Z4`4p4w4}4
425;5w5
8*929;9]9
;E;q;
>^?g?
0O0o0{0
797[7v7
8/8b8q8
8&949Y9
94:T:|:
:9;Q;^;c;
>+>l>
5!6J6[6]7c7u7
888]8
;-<6<W<
>">m>
0@1V1
1e2#3,32373L3j3
3V4`4f4
5!5:5
8)8B8X8
8M9|9
9A:L:S:Z:a:h:|:
=5>f>
?S?t?
12191c1
2u2z2
333>3P3k3
4.4A4c4
6^7N8
<1<Y<h<
>a>l>|>
>,?o?z?
1G1U1s1
3S3[3
666M6
7-7D7w7
7/868
9R9a9
96:E:g:p:
;g;r;y;
040A0q0
1(111g1n1u1
5H5q5
6W6{6
7+7G7
7%878=8F8L8
9@9M9
: :%:s:~:
;!;R;
<:<N<x<
<#=,=K=k=
?9?H?V?
0"0A0P0^0
0/1r1
1"2?2R2
3"3>3G3b3
4$4O4U4k4t4
485K5
5-6F6
788c8
;5;s;
<"<q<
001;1H1~1
1"262U2
3,323;3B3_3
424=4
;1<><Y<s<!=b=
=5>n>
? ?g?
2H2U2
3H3W3
555G5b5
737_7
7"8q8
;$;<;C;J;e;
<(=9=I=]=
>=>G>x>
?/?9?S?]?
0G0o0
0#1m1
3!333x3
474y4
4S5Z5r5
5]6f6~6
8:8Y8d8m8z8
;+<:<~<
<:=a=z=
>s>z>
?#?*?1?8???L?
1$1Z1
2*292O2^2h2
2(3D3t3
5 5W5
7-7i7
838]8
9i9v9
9 :L:
0"0)000?0
0`1y1
2"2/2N2
4$505
9=9F9m9
:f:~:
;1;O;{;
<$<_<
=%>]>
3'3C3S3
3.474
4'5g5
5#6z6
7)8j8u8
969g9
9+:`:
=)=2=
=$>2>=>E>Y>K?
121m1s1z1
2K2d2
3&4S4
8L849z9
=S=p=
>A?Z?v?
0M0^0
1>1z1
2B2`2
6*6H6
7*7@7_7v7
7'8n8y8
859[9k9
9R:y:
<Y<`<r<
=K=W=j=
>+>0>F>
>(?e?
90b0k0
353W3
4%444G4_4
5A5k5{5
5(6\6e6
:,:l:
<*<h<
>W>`>
?I?s?
1R1H2
7f7t7
8E8]8
8?9P9a9g9
;E;r;
=.=D=y=
>1>s>
V1Z1^1b1f1j1n1r1
2%2/2;2P2
4Z4c4
5N5W5
6S6a6
7F7c7
8+949~9
93:b:}:
;J;r;
?U?^?h?
.070A0O0
0;1e1
091R2
3Q4Z4
5,5L5q5
6C6N6U6i6
7:7C7
889h9v9
:A:Z:
3&3B3M3[3
7 7R8d8
8:9e9l9s9
<N<[<
???e?
0M0Y0`0e0j0p0y0~0
2<2P2n2
3"30373?3N3X3t3{3
4A4H4n4
5b5x5
6$6*616J6S6Y6h6n6y6~6
7 7+707@7E7U7Z7j7o7
8!8:8@8G8[8q8
50e0o0
0>1F1
6#7=8V8h8
8?9s9
<I<n<
<$=*=[=
>U>l>}>
?/?B?
0*0J1
3(3a3
4L4^4l4
5$5>5f5
556>6G6P6W6v6
7;7]7v7
8>8v8
9c9x9
:0:x:
;I;r;
<8=s=
=:>}>
1)2<2L2
4+4j4{4
5/6@6J6l6
6e7t7
738`8g8
;g;&<2<
=(=-=F=K=X=
0=0u0
3%3,333:3A3H3O3W3_3g3s3|3
4"4(4.444;4B4I4P4W4^4e4m4u4}4
737:7@7R7\7
8#8r8
9J9e91:Q:[:z:
;\;b;~;
;U<^<f<
=+=4=V=]=|=
>*>6>B>N>b>n>z>
0&1b1
3#3M3
3^4r4
515=5I5
6A6d6
7:7]7
7!8Q8t8
9<9|9
9*:Z:
>4>l>
2=2m2
3(3K3
494\4
757e7
96:Y:
;)<Y<
=9>q>
0F0v0
3A3t3
5#6F6i6
9#989a9r9v9
:$:,:4:<:D:L:X:x:
;(;4;T;\;h;
<0<8<D<d<p<
=(=H=T=t=
>$>D>L>X>`>
?@?T?\?d?l?t?
0<0X0h0t0|0
1(141T1\1d1l1t1
2$2X2h2t2
3 3@3H3T3t3|3
444D4P4p4x4
5(5H5T5t5|5
6$6D6L6X6`6x6
7$707P7X7`7h7p7|7
8(8H8P8X8d8
9D9T9`9h9
: :(:H:d:t:
;$;X;h;x;
< <(<0<8<@<P<X<|<
=$=4=<=D=L=T=\=d=l=t=|=
>(>8>D>d>p>
?(?L?T?\?d?l?t?|?
0$0,040<0D0P0p0x0
1$1,141<1H1P1
2$2,242<2D2P2p2x2
3$3,343<3H3h3t3
4(40484@4L4l4t4
5,545<5D5L5X5`5x5
6$6P6d6l6t6|6
7 7(747T7\7h7
8$8,8D8h8p8x8
8 9(909<9\9d9p9
:(:H:P:\:|:
;0;@;L;l;t;|;
<4<<<D<L<T<\<d<l<x<
=(=H=X=`=|=
>4><>D>L>T>\>d>l>t>|>
? ?(?0?8?D?d?l?x?
0 0,040L0\0x0
1$101h1p1
2 2,242L2T2x2
383@3H3P3X3`3l3
484D4\4`4
5 545<5P5X5`5h5l5p5x5
1 1$1(14181<1H1
20242L2P2h2t2
3 3<3t3
3,4d4
4,5D5`5
6 686
