!This program cannot be run in DOS mode.
.text
`.data
.idata
@.didat
.rsrc
@.reloc
api-ms-win-appmodel-runtime-l1-1-1.dll
RPCRT4.dll
api-ms-win-shcore-thread-l1-1-0.dll
urlmon.dll
dmiso8601utils.dll
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lstd::exception: %hs
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
generic
unknown error
iostream
iostream stream error
system
Local\SM0:%lu:%lu:%hs
invalid string position
string too long
Windows.Foundation.Uri
Windows.Foundation.Collections.ValueSet
Windows.Foundation.PropertyValue
onecoreuap\base\diagnosis\platform\notifications\client\src\adaptiveimage.cpp
Windows.Internal.Notifications.WpnAppInfoProvider_UWP
Windows.Internal.Notifications.WpnAppInfoAggregator
Windows.Internal.Notifications.ToastActivator_Collection
Windows.Internal.Notifications.ToastActivator_AppLaunch
Windows.Internal.Notifications.ToastActivator_Protocol
Windows.Internal.Notifications.ToastActivator_Background
Windows.Internal.Notifications.ToastActivator_Foreground
Windows.Internal.Notifications.ToastActivatorSwitch
Windows.Internal.Notifications.AdaptiveImage
Windows.Internal.Notifications.AdaptiveNotification
Windows.Internal.Notifications.WpnClient
;]86L
Windows.ApplicationModel.AppInfo
onecoreuap\base\diagnosis\platform\notifications\client\src\adaptivenotification.cpp
title
subtitle
profile
AdaptiveCard
version
selectAction
Action.Submit
Action.OpenUrl
maxLines
images
style
altText
bad conversion
Windows.Data.Json.JsonValue
JTk_S/
storeAppInstall
onecoreuap\base\diagnosis\platform\notifications\client\src\applaunchenforcer.cpp
onecoreuap\base\diagnosis\platform\notifications\client\src\cwpnclient.cpp
onecoreuap\base\diagnosis\platform\notifications\client\src\cnotificationvalueset.cpp
onecoreuap\base\diagnosis\platform\notifications\client\src\Utilities.h
priority
Software\Microsoft\Windows\CurrentVersion\PushNotifications\ActivationPlugins
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivatorswitch.cpp
vector<T> too long
applaunch
legacytoastlaunch
background
foreground
protocol
ActivatableAboveLock
IsGroupActivation
TargetApplicationPackageFamilyName
decline
onecoreuap\base\diagnosis\platform\notifications\client\src\WpnClientTelemetry.h
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivator_foreground.cpp
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
Windows.Foundation.Collections.IIterator`1<String>
Windows.Foundation.Collections.IVectorView`1<String>
Windows.Foundation.Collections.IVector`1<String>
Windows.Internal.StateRepository.Application
Windows.ApplicationModel.Activation.Private.ApplicationActivation
Windows.ApplicationModel.Activation.ToastNotificationActivatedEventArgs
3,\'M
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivator_background.cpp
Windows.System.Internal.UserManager
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivator_protocol.cpp
Windows.System.Launcher
Windows.System.LauncherOptions
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivator_applaunch.cpp
onecoreuap\base\diagnosis\platform\notifications\client\src\ctoastactivator_collection.cpp
LaunchArgs
Software\Microsoft\Windows\CurrentVersion\PushNotifications\AppInfoProviders
onecoreuap\base\diagnosis\platform\notifications\client\src\cappinfoaggregator.cpp
onecoreuap\base\diagnosis\platform\notifications\client\src\cappinfoprovider_uwp.cpp
activatibleClassId
/Z,P4m
;]86L
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\Staging.h
WilStaging_02
ToastGeneric
badge
onecoreuap\base\diagnosis\platform\notifications\client\notificationparser\src\notificationparser.cpp
visual
activationType
launch
template
items
appLogoOverride
item-type
content
hint-maxLines
image
placement
person
circle
hint-crop
adaptive
toast
audio
actions
header
displayName
experienceType
bindings
group
progress
//binding[starts-with(@template, '%s')]
addImageQuery
baseUri
prefix
spritesheet-src
status
valueStringOverride
subgroups
subgroup
inputs
input
action
selection
selections
placeHolderContent
defaultInput
arguments
decline 
imageUri
TileSmall
TileMedium
TileLarge
TileWide
TileGeneric
displayTimestamp
%I64u
glyph://
https://
http://
file:///
ms-appdata:///
ms-appx:///
onecoreuap\base\diagnosis\platform\notifications\client\notificationparser\src\util.cpp
ms-resource:
ms-lang=
ms-contrast=
ms-scale=
standard
white
black
onecoreuap\base\diagnosis\platform\notifications\client\toastactivationplugin\src\toastactivationeventargs.cpp
Arguments
UserInput
Windows.Launch
onecoreuap\base\diagnosis\platform\notifications\client\toastactivationplugin\src\toastactivationplugin.cpp
Windows.BackgroundTasks
Windows.PreInstalledConfigTask
Windows.UpdateTask
Windows.AppService
Windows.AppointmentDataProvider
Windows.ContactDataProvider
Windows.EmailDataProvider
Windows.UserDataTaskDataProvider
Windows.PrintWorkflowBackgroundTask
Windows.BarcodeScannerProvider
Windows.PosPaymentConnector
Windows.PrintSupportExtension
Windows.PrintSupportWorkflow
onecoreuap\shell\lib\activationevents\src\activatedeventargsbase.cpp
ActivationKind
PreviousExecutionState
UserContext
SplashScreen
ActivationValueSetReference
IsForeground
IsHolographic
IsInitialized
AamActivationId
AamActivityId
Windows.Search
Windows.ShareTarget
Windows.File
Windows.Protocol
Windows.FileOpenPicker
Windows.FileSavePicker
Windows.CachedFileUpdater
Windows.ContactPicker
Windows.Device
Windows.PrintTaskSettings
Windows.Print3DWorkflow
Windows.CameraSettings
Windows.AppointmentsProvider.AddAppointment
Windows.AppointmentsProvider.ReplaceAppointment
Windows.AppointmentsProvider.RemoveAppointment
Windows.AppointmentsProvider.ShowTimeFrame
Windows.AppointmentsProvider.ShowAppointmentDetails
Windows.Contact.Call
Windows.Contact.Message
Windows.Contact.Map
Windows.Contact.Post
Windows.Contact.VideoCall
Windows.ContactsProvider.ShowContact
Windows.ContactsProvider.AddContact
Windows.RestrictedLaunch
windows.LockScreenCall
Windows.VoiceCommand
Windows.WebAccountProvider
Windows.ComponentUI
windows.lockScreen
Windows.DialProtocol
Windows.PersonalAssistant.Launch
Windows.UserDataAccountsProvider
Windows.Internal.FilePickerExperience
Windows.AppUriHandler
Windows.PeoplePane
Windows.LockScreenComponent
Windows.ContactPanel
Windows.OopWebView
Windows.PrintWorkflowForegroundTask
Windows.StartupTask
Windows.CommandLineLaunch
Windows.BarcodeScannerPreviewProvider
Windows.PhoneCallActivation
CurrentlyShownApplicationViewId
ViewSwitcher
MultiView:AamActivationId
IsApplicationMultiviewActivationPolicyEnabled
ntdll.dll
MicrosoftTelemetryAssertTriggeredUM
ToastActivationStop
PartA_PrivTags
AppUserModelId
ActivationType
ArgumentLength
InputCount
__TlgCV__
OperationResult
ToastActivationStart
PartA_PrivTags
AppUserModelId
ActivationType
__TlgCV__
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FeatureError
featureId
featureVersion
featureBaseVersion
featureStage
lineNumber
module
process
originFile
originLineNumber
originModule
originName
message
callerModule
callerReturnAddressOffset
originCallerModule
originCallerReturnAddressOffset
FeatureVariantUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
variantKind
variant
addend
EnabledFeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
FeatureUsage
featureId
featureVersion
featureBaseVersion
featureStage
enabled
addend
Microsoft.Windows.Notifications.WpnClientTelemetry
Microsoft.Windows.Wil.FeatureLogging
RSDS8
WpnClient.pdb
.rdata$brc
.rdata$T$brc
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gfids
.giats
.rdata
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.text
.text$di
.text$mn
.text$x
.text$yd
.tls$
.tls$ZZZ
.xdata$x
minATL$__a
minATL$__f
minATL$__m
minATL$__r
minATL$__z
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.data$brc
.data$r$brc
.data
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
.didat$5
.rsrc$01
.rsrc$02
("zNn
u$WSQ
v0h@8
v hh8
Z\9;s
VWjbZ
VWjkZ
SVWQQ3
97s/j
PQQSVW
u!hx9
93uHWV
&PWSV
|$hWQ
|$hWQ
Pj,hH?
z$;7t.
y7Ph@A
WSh8C
PQQSVW
WPQQV
PQSVW
tOf98tJj
8FHt"9VLu
CX9{`t)
PQSVW
QQQQQQP
PQSVW
PQQSVW
Pj8hh>
PjAh8J
Pj0h`I
tGVVhH
PQSVW
Pj2hhH
QQSVW
A ;B0t
;K0t(
G ;A0t(
;K0t<
;H0t&
PQSVW
PQSVW
P9w u
;Q0t=
;Q0t=
;Q0t3
;Q0t'
WPQQV
PQSVW
693t'
PQSVW
PQQSVW
L$,_^[3
L$0QP
PQSVW
QQQQQQP
PQQSVW
Pj3h0<
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQVW
PQQSVW
PQSVW
PQQSVW
u$h<W
u$hPW
u$h$W
D$(PQ
T$0QQV
L$4^3
PQSVW
PQSVW
D$@PQQ
D$,PQQ
D$HPQQ
1f;2u
1f;2u
9>u,h
1f;2u
1f;2u
1f;2u
1f;2u
L$4_^[3
QSh,Y
QSh4Y
1f;2u
1f;2u
1f;2u
1f;2u
1f;2u
0Xjsf
1Yj-Xjwf
XjnZjof
jnZjoXjtf
s"XjiYjff
t ;3r
93uHWV
PQQSVW
PQSVW
PQQSVW
D$0Pj h
D$0Pj
D$0Pj
QSVW3
VRh`^
C$9s0t%
9s,t%
t)9O(t$
9~ t(
QQSVW
D$XSVW
D$LPj
L$<QP
D$LPj
D$LPj
L$@QP
D$LPj-h
tLVh\o
PQQSVW
Y__^[
QRPhh
Y__^[
FindPackagesByPackageFamily
UuidCreate
SHGetThreadRef
CoInternetCombineUrl
CreateUri
NdrDllGetClassObject
NdrDllCanUnloadNow
NdrOleFree
NdrOleAllocate
ISO8601StringToSystemTime
WpnClient.dll
DllCanUnloadNow
DllGetActivationFactory
DllGetClassObject
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@@
.?AVrange_error@std@@
.?AVruntime_error@std@@
?_Xbad_alloc@std@@YAXXZ
?_Xout_of_range@std@@YAXPBD@Z
?_Winerror_map@std@@YAPBDH@Z
?_Xlength_error@std@@YAXPBD@Z
?_Syserror_map@std@@YAPBDH@Z
??1?$codecvt@GDH@std@@MAE@XZ
?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ
?_Init@locale@std@@CAPAV_Locimp@12@_N@Z
?_Incref@facet@locale@std@@UAEXXZ
??Bid@locale@std@@QAEIXZ
??0?$codecvt@GDH@std@@QAE@I@Z
?in@?$codecvt@GDH@std@@QBEHAAHPBD1AAPBDPAG3AAPAG@Z
?_New_Locimp@_Locimp@locale@std@@CAPAV123@ABV123@@Z
?_Addfac@_Locimp@locale@std@@AAEXPAVfacet@23@I@Z
?id@?$codecvt@GDH@std@@2V0locale@2@A
?_Getcat@?$codecvt@GDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
??4?$_Yarn@D@std@@QAEAAV01@PBD@Z
msvcp110_win.dll
__CxxFrameHandler3
_vsnwprintf
memcpy_s
??3@YAXPAX@Z
_purecall
??1exception@@UAE@XZ
??0exception@@QAE@XZ
??0exception@@QAE@ABV0@@Z
_vsnprintf_s
_itow_s
?what@exception@@UBEPBDXZ
??0exception@@QAE@ABQBD@Z
malloc
sprintf_s
??_V@YAXPAX@Z
memmove_s
realloc
wcschr
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UAE@XZ
_except_handler4_common
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
OutputDebugStringW
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
WindowsDeleteString
WindowsDuplicateString
WindowsCreateString
WindowsGetStringRawBuffer
WindowsCreateStringReference
RaiseException
RoOriginateError
CoTaskMemAlloc
CoCreateFreeThreadedMarshaler
RoGetActivationFactory
RtlInitUnicodeString
RtlDeriveCapabilitySidsFromName
AppXGetPackageCapabilities
EqualSid
AppXFreeMemory
CoTaskMemFree
CoTaskMemRealloc
RegOpenKeyExW
RegQueryValueExW
RegQueryInfoKeyW
RegEnumKeyExW
RegCloseKey
RoActivateInstance
RoTransformError
CoGetApartmentType
InitializeSRWLock
AcquireSRWLockExclusive
AcquireSRWLockShared
ReleaseSRWLockExclusive
ReleaseSRWLockShared
SHTaskPoolQueueTask
EventUnregister
EventRegister
EventSetInformation
EventWriteTransfer
DeleteCriticalSection
InitializeCriticalSectionEx
GetTickCount64
LeaveCriticalSection
EnterCriticalSection
PathIsFileSpecW
PathFindFileNameW
CompareStringOrdinal
InitOnceBeginInitialize
InitOnceComplete
CoCreateInstance
RtlGetDeviceFamilyInfoEnum
RtlIsMultiUsersInSessionSku
WindowsIsStringEmpty
WindowsStringHasEmbeddedNull
DisableThreadLibraryCalls
DecodePointer
InitOnceExecuteOnce
EncodePointer
RoOriginateErrorW
Sleep
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
WakeAllConditionVariable
SleepConditionVariableSRW
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
ntdll.dll
api-ms-win-appmodel-identity-l1-2-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-shcore-taskpool-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-shlwapi-legacy-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
combase.dll
wcstoul
_errno
_wcstoui64
swprintf_s
wcsrchr
_wcsicmp
wcscspn
HSTRING_UserSize
HSTRING_UserMarshal
HSTRING_UserFree
HSTRING_UserUnmarshal
SetThreadpoolTimer
CreateThreadpoolTimer
WindowsCompareStringOrdinal
QuirkIsEnabledForPackage
SystemTimeToFileTime
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
ExpandEnvironmentStringsW
MultiByteToWideChar
FindResourceExW
SizeofResource
LoadResource
LockResource
WindowsSubstringWithSpecifiedLength
GetModuleHandleExA
ResolveDelayLoadedAPI
DelayLoadFailureHook
OLEAUT32.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-quirks-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
_CxxThrowException
_ftol2
memcmp
memcpy
memmove
memset
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Windows Push Notifications Client
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WpnClient
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WpnClient.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
<?xml version='1.0' encoding='utf-8'?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
<xsd:simpleType name="brandingToken">
<xsd:restriction base="xsd:token">
<xsd:pattern value="[Nn][Oo][Nn][Ee]"></xsd:pattern>
<xsd:pattern value="[Ll][Oo][Gg][Oo]"></xsd:pattern>
<xsd:pattern value="[Nn][Aa][Mm][Ee]"></xsd:pattern>
<xsd:pattern value="[Nn][Aa][Mm][Ee][Aa][Nn][Dd][Ll][Oo][Gg][Oo]"></xsd:pattern>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="templateNamesUap">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="TileSmall"></xsd:enumeration>
<xsd:enumeration value="TileMedium"></xsd:enumeration>
<xsd:enumeration value="TileWide"></xsd:enumeration>
<xsd:enumeration value="TileTall"></xsd:enumeration>
<xsd:enumeration value="TileLarge"></xsd:enumeration>
<xsd:enumeration value="TileGeneric"></xsd:enumeration>
<xsd:enumeration value="ToastGeneric"></xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:complexType name="audioType">
<xsd:attribute name="src" type="xsd:string" use="optional"></xsd:attribute>
<xsd:attribute name="loop" type="xsd:boolean" use="optional"></xsd:attribute>
<xsd:attribute name="silent" type="xsd:string" use="optional"></xsd:attribute>
</xsd:complexType>
<xsd:complexType name="headerType">
<xsd:attribute name="id" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="title" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="arguments" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="activationType" type="xsd:string" use="optional"></xsd:attribute>
</xsd:complexType>
<xsd:simpleType name="inputTypes">
<xsd:restriction base="xsd:token">
<xsd:enumeration value="text"></xsd:enumeration>
<xsd:enumeration value="selection"></xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:complexType name="inputType">
<xsd:sequence minOccurs="0" maxOccurs="5">
<xsd:element ref="selection"></xsd:element>
</xsd:sequence>
<xsd:attribute name="id" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="type" type="inputTypes" use="required"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="selectionType">
<xsd:attribute name="id" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="content" type="xsd:string" use="required"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="actionType">
<xsd:attribute name="content" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="arguments" type="xsd:string" use="required"></xsd:attribute>
<xsd:attribute name="activationType" type="xsd:string" use="optional"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="actionsType">
<xsd:sequence>
<xsd:element minOccurs="0" maxOccurs="5" ref="input"></xsd:element>
<xsd:element minOccurs="0" maxOccurs="5" ref="action"></xsd:element>
</xsd:sequence>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="textType">
<xsd:simpleContent>
<xsd:extension base="xsd:string">
<xsd:attribute name="id" use="optional" type="xsd:nonNegativeInteger"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
<xsd:complexType name="imageType">
<xsd:attribute name="id" use="optional" type="xsd:nonNegativeInteger"></xsd:attribute>
<xsd:attribute name="src" use="required" type="xsd:anyURI"></xsd:attribute>
<xsd:attribute name="addImageQuery" use="optional" type="xsd:boolean"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="progressType">
<xsd:attribute name="title" use="optional" type="xsd:string"></xsd:attribute>
<xsd:attribute name="status" use="required" type="xsd:string"></xsd:attribute>
<xsd:attribute name="value" use="required" type="xsd:string"></xsd:attribute>
<xsd:attribute name="valueStringOverride" use="optional" type="xsd:string"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="subgroupType">
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="text"></xsd:element>
<xsd:element ref="image"></xsd:element>
</xsd:choice>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="groupType">
<xsd:sequence>
<xsd:element minOccurs="1" maxOccurs="unbounded" ref="subgroup"></xsd:element>
</xsd:sequence>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="bindingType">
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="text"></xsd:element>
<xsd:element ref="image"></xsd:element>
<xsd:element ref="group"></xsd:element>
<xsd:element ref="progress"></xsd:element>
</xsd:choice>
<xsd:attribute name="template" use="required" type="xsd:string"></xsd:attribute>
<xsd:attribute name="baseUri" use="optional" type="xsd:anyURI"></xsd:attribute>
<xsd:attribute name="branding" use="optional" type="brandingToken"></xsd:attribute>
<xsd:attribute name="addImageQuery" use="optional" type="xsd:boolean"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="visualType">
<xsd:sequence minOccurs="1" maxOccurs="unbounded">
<xsd:element ref="binding"></xsd:element>
</xsd:sequence>
<xsd:attribute name="version">
<xsd:simpleType>
<xsd:restriction base="xsd:nonNegativeInteger"></xsd:restriction>
</xsd:simpleType>
</xsd:attribute>
<xsd:attribute name="baseUri" use="optional" type="xsd:anyURI"></xsd:attribute>
<xsd:attribute name="branding" use="optional" type="brandingToken"></xsd:attribute>
<xsd:attribute name="addImageQuery" use="optional" type="xsd:boolean"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="tileType">
<xsd:sequence minOccurs="1" maxOccurs="1">
<xsd:element ref="visual"></xsd:element>
</xsd:sequence>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="toastType">
<xsd:all>
<xsd:element minOccurs="1" maxOccurs="1" ref="visual"></xsd:element>
<xsd:element minOccurs="0" maxOccurs="1" ref="audio"></xsd:element>
<xsd:element minOccurs="0" maxOccurs="1" ref="actions"></xsd:element>
<xsd:element minOccurs="0" maxOccurs="1" ref="header"></xsd:element>
</xsd:all>
<xsd:attribute name="activationType" use="optional" type="xsd:string"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:complexType name="badgeType">
<xsd:attribute name="value" use="optional" type="xsd:string"></xsd:attribute>
<xsd:attribute name="ImageUri" use="optional" type="xsd:anyURI"></xsd:attribute>
<xsd:anyAttribute processContents="skip"></xsd:anyAttribute>
</xsd:complexType>
<xsd:element name="selection" type="selectionType"></xsd:element>
<xsd:element name="input" type="inputType"></xsd:element>
<xsd:element name="audio" type="audioType"></xsd:element>
<xsd:element name="header" type="headerType"></xsd:element>
<xsd:element name="actions" type="actionsType"></xsd:element>
<xsd:element name="action" type="actionType"></xsd:element>
<xsd:element name="text" type="textType"></xsd:element>
<xsd:element name="image" type="imageType"></xsd:element>
<xsd:element name="progress" type="progressType"></xsd:element>
<xsd:element name="subgroup" type="subgroupType"></xsd:element>
<xsd:element name="group" type="groupType"></xsd:element>
<xsd:element name="binding" type="bindingType"></xsd:element>
<xsd:element name="visual" type="visualType"></xsd:element>
<xsd:element name="tile" type="tileType"></xsd:element>
<xsd:element name="toast" type="toastType"></xsd:element>
<xsd:element name="badge" type="badgeType"></xsd:element>
</xsd:schema>
<?xml version='1.0' encoding='utf-8'?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl">
<xsl:output method="xml" indent="yes"></xsl:output>
<xsl:template match="@*">
<xsl:copy></xsl:copy>
</xsl:template>
<xsl:template name="CopyText">
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:template>
<xsl:template name="CopyImage">
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:template>
<xsl:template name="CopyProgress">
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:template>
<xsl:template match="progress">
<xsl:copy>
<xsl:call-template name="CopyProgress"></xsl:call-template>
</xsl:copy>
</xsl:template>
<xsl:template match="text">
<xsl:copy>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:template>
<xsl:template match="image">
<xsl:copy>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:template>
<xsl:template match="group">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="text|image|subgroup"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="subgroup">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="text|image"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="actions">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="action|input"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="action">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:copy>
</xsl:template>
<xsl:template match="input">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="selection"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="selection">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:copy>
</xsl:template>
<xsl:template match="audio">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:copy>
</xsl:template>
<xsl:template match="header">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:copy>
</xsl:template>
<xsl:template match="toast">
<xsl:copy>
<xsl:if test="//commands[@scenario]">
<xsl:attribute name="scenario">
<xsl:value-of select="//commands/@scenario"></xsl:value-of>
</xsl:attribute>
</xsl:if>
<xsl:apply-templates select="@*|visual"></xsl:apply-templates>
<xsl:apply-templates select="audio"></xsl:apply-templates>
<xsl:apply-templates select="commands|actions"></xsl:apply-templates>
<xsl:apply-templates select="header"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="visual">
<xsl:copy>
<xsl:apply-templates select="@*|binding"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="binding">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="hint-originalTemplate">
<xsl:value-of select="@template"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="template">ToastGeneric</xsl:attribute>
<xsl:apply-templates select="." mode="run2"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastGeneric&apos;]" mode="run2">
<xsl:apply-templates select="text|image|group|progress"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastText01&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastText02&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastText03&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastText04&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2 or @id=3]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastImageAndText01&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="placement">appLogoOverride</xsl:attribute>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastImageAndText02&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="placement">appLogoOverride</xsl:attribute>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastImageAndText03&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="placement">appLogoOverride</xsl:attribute>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;ToastImageAndText04&apos;]" mode="run2">
<xsl:if test="not(../../@activationType)">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="placement">appLogoOverride</xsl:attribute>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@placement=&apos;attribution&apos;]">
<xsl:copy>
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2 or @id=3]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="commands">
<xsl:element name="actions">
<xsl:for-each select="command">
<xsl:choose>
<xsl:when test="@id=&apos;snooze&apos; or @id=&apos;dismiss&apos;">
<xsl:element name="action">
<xsl:attribute name="activationType">system</xsl:attribute>
<xsl:attribute name="hint-legacyCommandId">
<xsl:value-of select="@id"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="arguments">
<xsl:value-of select="@arguments"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="content"></xsl:attribute>
</xsl:element>
</xsl:when>
<xsl:when test="@id=&apos;video&apos; or @id=&apos;voice&apos;">
<xsl:element name="action">
<xsl:attribute name="activationType">LegacyToastLaunch</xsl:attribute>
<xsl:attribute name="hint-legacyCommandId">
<xsl:value-of select="@id"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="arguments">
<xsl:value-of select="@arguments"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="content"></xsl:attribute>
</xsl:element>
</xsl:when>
<xsl:when test="@id=&apos;decline&apos;">
<xsl:element name="action">
<xsl:attribute name="activationType">system</xsl:attribute>
<xsl:attribute name="hint-legacyCommandId">
<xsl:value-of select="@id"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="arguments">
<xsl:value-of select="@arguments"></xsl:value-of>
</xsl:attribute>
<xsl:attribute name="content"></xsl:attribute>
</xsl:element>
</xsl:when>
</xsl:choose>
</xsl:for-each>
</xsl:element>
</xsl:template>
</xsl:stylesheet>
<?xml version='1.0' encoding='utf-8'?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:msxsl="urn:schemas-microsoft-com:xslt" exclude-result-prefixes="msxsl">
<xsl:output method="xml" indent="yes"></xsl:output>
<xsl:template match="@*">
<xsl:copy></xsl:copy>
</xsl:template>
<xsl:template name="CopyText">
<xsl:copy-of select="@*|text()"></xsl:copy-of>
</xsl:template>
<xsl:template name="CopyImage">
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:template>
<xsl:template match="text">
<xsl:copy>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:template>
<xsl:template match="image">
<xsl:copy>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:template>
<xsl:template match="group">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="text|image|subgroup"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="subgroup">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="text|image"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="tile">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:apply-templates select="visual"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="badge">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
</xsl:copy>
</xsl:template>
<xsl:template match="visual">
<xsl:copy>
<xsl:call-template name="CopyImage"></xsl:call-template>
<xsl:apply-templates select="binding"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="binding">
<xsl:copy>
<xsl:copy-of select="@*"></xsl:copy-of>
<xsl:attribute name="hint-originalTemplate">
<xsl:value-of select="@template"></xsl:value-of>
</xsl:attribute>
<xsl:apply-templates select="." mode="templateName"></xsl:apply-templates>
<xsl:apply-templates select="." mode="textAndImages"></xsl:apply-templates>
</xsl:copy>
</xsl:template>
<xsl:template match="binding[starts-with(@template,&apos;TileSmall&apos;) or starts-with(@template,&apos;TileMedium&apos;) or starts-with(@template,&apos;TileLarge&apos;) or starts-with(@template,&apos;TileTall&apos;)]" mode="templateName">
<xsl:apply-templates select="@template"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[starts-with(@template, &apos;TileSquare&apos;)]" mode="templateName">
<xsl:attribute name="template">TileMedium</xsl:attribute>
</xsl:template>
<xsl:template match="binding[starts-with(@template, &apos;TileWide&apos;)]" mode="templateName">
<xsl:attribute name="template">TileWide</xsl:attribute>
</xsl:template>
<xsl:template match="binding[starts-with(@template, &apos;TileSquare70x70&apos;) or starts-with(@template, &apos;TileSquare71x71&apos;)]" mode="templateName">
<xsl:attribute name="template">TileSmall</xsl:attribute>
</xsl:template>
<xsl:template match="binding[starts-with(@template, &apos;TileSquare310x310&apos;)]" mode="templateName">
<xsl:attribute name="template">TileLarge</xsl:attribute>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWideImageCollection&apos; or @template=&apos;TileWide310x150ImageCollection&apos;]" mode="templateName">
<xsl:attribute name="template">TileWideThumbnailCollection</xsl:attribute>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageCollection&apos;]" mode="templateName">
<xsl:attribute name="template">TileLargeThumbnailCollection</xsl:attribute>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150ImageAndText01&apos; or @template=&apos;TileWideImageAndText01&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150PeekImageAndText04&apos; or @template=&apos;TileSquarePeekImageAndText04&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">4</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text08&apos; or @template=&apos;TileWideText08&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text01&apos; or @template=&apos;TileWideText01&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310BlockAndText02&apos; or @template=&apos;TileSquareBlockAndText02&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">0</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">headerNumeral</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=4 or @id=5]">
<xsl:sort select="@*" data-type="number"></xsl:sort>
</xsl:apply-templates>
<text></text>
<xsl:apply-templates select="text[@id=6 or @id=7]">
<xsl:sort select="@*" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150SmallImageAndText02&apos; or @template=&apos;TileWideSmallImageAndText02&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="25">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150BlockAndText01&apos; or @template=&apos;TileWideBlockAndText01&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="70">
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=4]">
<xsl:sort select="@*" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:copy>
<xsl:attribute name="hint-style">headerNumeral</xsl:attribute>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=6]">
<xsl:copy>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage03&apos; or @template=&apos;TileWidePeekImage03&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImageAndText01&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="50">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup hint-weight="50"></subgroup>
</group>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text></text>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150SmallImageAndText03&apos; or @template=&apos;TileWideSmallImageAndText03&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Image&apos; or @template=&apos;TileSquareImage&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Image&apos; or @template=&apos;TileWideImage&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150ImageAndText02&apos; or @template=&apos;TileWideImageAndText02&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=1 or @id=2]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Text03&apos; or @template=&apos;TileSquareText03&apos;]" mode="textAndImages">
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text04&apos; or @template=&apos;TileWideText04&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Text01&apos; or @template=&apos;TileSquareText01&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare70x70Image&apos; or @template=&apos;TileSquare71x71Image&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150PeekImageAndText01&apos; or @template=&apos;TileSquarePeekImageAndText01&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150SmallImageAndText04&apos; or @template=&apos;TileWideSmallImageAndText04&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150SmallImageAndText01&apos; or @template=&apos;TileWideSmallImageAndText01&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Text04&apos; or @template=&apos;TileSquareText04&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImagesAndTextList05&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4 or @id=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=3]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6 or @id=7]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage05&apos; or @template=&apos;TileWidePeekImage05&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150PeekImageAndText02&apos; or @template=&apos;TileSquarePeekImageAndText02&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImagesAndTextList03&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=4]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=3]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=6]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageAndText01&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Text02&apos; or @template=&apos;TileSquareText02&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Image&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150Block&apos; or @template=&apos;TileSquareBlock&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">headerNumeral</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310TextList01&apos;]" mode="textAndImages">
<group>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
<text></text>
<group>
<subgroup>
<xsl:for-each select="text[@id=4]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=5 or @id=6]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
<text></text>
<group>
<subgroup>
<xsl:for-each select="text[@id=7]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=8 or @id=9]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage02&apos; or @template=&apos;TileWidePeekImage02&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310BlockAndText01&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
<text></text>
<group>
<subgroup hint-weight="70">
<xsl:apply-templates select="text[@id=4 or @id=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
<text></text>
<xsl:apply-templates select="text[@id=6 or @id=7]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
<subgroup hint-weight="30">
<xsl:for-each select="text[@id=8]">
<xsl:copy>
<xsl:attribute name="hint-style">headerNumeral</xsl:attribute>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=9]">
<xsl:copy>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150PeekImageAndText03&apos; or @template=&apos;TileSquarePeekImageAndText03&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150ImageCollection&apos; or @template=&apos;TileWideImageCollection&apos; or @template=&apos;TileSquare310x310ImageCollection&apos;]" mode="textAndImages">
<xsl:apply-templates select="image[@id&gt;=1 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150SmallImageAndText05&apos; or @template=&apos;TileWideSmallImageAndText05&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="85">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150BlockAndText02&apos; or @template=&apos;TileWideBlockAndText02&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="70">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">headerNumeral</xsl:attribute>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-align">right</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text02&apos; or @template=&apos;TileWideText02&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup>
<xsl:for-each select="text[@id=2]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup>
<xsl:for-each select="text[@id=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup>
<xsl:for-each select="text[@id=6]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=7]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup>
<xsl:for-each select="text[@id=8]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=9]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text03&apos; or @template=&apos;TileWideText03&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text05&apos; or @template=&apos;TileWideText05&apos;]" mode="textAndImages">
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text06&apos; or @template=&apos;TileWideText06&apos;]" mode="textAndImages">
<group>
<subgroup>
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text07&apos; or @template=&apos;TileWideText07&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="25">
<xsl:for-each select="text[@id=2]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:for-each select="text[@id=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:for-each select="text[@id=6]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=7]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:for-each select="text[@id=8]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=9]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text09&apos; or @template=&apos;TileWideText09&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text10&apos; or @template=&apos;TileWideText10&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="10">
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:for-each select="text[@id=4]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:for-each select="text[@id=6]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=7]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:for-each select="text[@id=8]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=9]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150Text11&apos; or @template=&apos;TileWideText11&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage01&apos; or @template=&apos;TileWidePeekImage01&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage04&apos; or @template=&apos;TileWidePeekImage04&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImage06&apos; or @template=&apos;TileWidePeekImage06&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageAndText01&apos; or @template=&apos;TileWidePeekImageAndText01&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="10"></subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup hint-weight="10"></subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageAndText02&apos; or @template=&apos;TileWidePeekImageAndText02&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">peek</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="10"></subgroup>
<subgroup>
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
<subgroup hint-weight="10"></subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text01&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id&gt;=2 and @id&lt;=10]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text02&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text03&apos;]" mode="textAndImages">
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;=11]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text04&apos;]" mode="textAndImages">
<group>
<subgroup>
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=20]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup>
<xsl:apply-templates select="text[@id=21]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=22]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text05&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text06&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=20]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="25">
<xsl:apply-templates select="text[@id=21]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=22]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text07&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text08&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=2]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=3]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=4]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=5]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=6]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=7]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=8]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=9]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=10]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=11]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=12]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=13]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=14]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=15]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=16]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=17]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=18]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=19]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=20]"></xsl:apply-templates>
</subgroup>
</group>
<group>
<subgroup hint-weight="10">
<xsl:apply-templates select="text[@id=21]"></xsl:apply-templates>
</subgroup>
<subgroup>
<xsl:apply-templates select="text[@id=22]"></xsl:apply-templates>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310Text09&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text hint-style="body"></text>
<xsl:for-each select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text hint-style="body"></text>
<xsl:apply-templates select="text[@id=4 or @id=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310TextList02&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text></text>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text></text>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310TextList03&apos;]" mode="textAndImages">
<group>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=4]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup>
<xsl:for-each select="text[@id=5]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=6]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageAndText02&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=1 or @id=2]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImagesAndTextList01&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=4]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=5 or @id=6]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=3]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=7]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=8 or @id=9]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImagesAndTextList02&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="20">
<xsl:for-each select="image[@id=3]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310SmallImagesAndTextList04&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="85">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="85">
<xsl:for-each select="text[@id=3]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=4]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="image[@id=2]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
<text></text>
<group>
<subgroup hint-weight="85">
<xsl:for-each select="text[@id=5]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=6]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="image[@id=3]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare71x71IconWithBadge&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">icon</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare71x71_IconWithBadgeAndText&apos;]" mode="textAndImages">
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">icon</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=1]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150IconWithBadge&apos;]" mode="textAndImages">
<xsl:if test="text[@id=1]">
<xsl:attribute name="displayName">
<xsl:value-of select="text[@id=1]/text()"></xsl:value-of>
</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">icon</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150IconWithBadgeAndText&apos;]" mode="textAndImages">
<xsl:if test="text[@id=4]">
<xsl:attribute name="displayName">
<xsl:value-of select="text[@id=4]/text()"></xsl:value-of>
</xsl:attribute>
</xsl:if>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">icon</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id=2 or @id=3]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageAndTextOverlay01&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageAndTextOverlay02&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text></text>
<text></text>
<text></text>
<text></text>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">3</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageAndTextOverlay03&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<text></text>
<text></text>
<text></text>
<text></text>
<xsl:apply-templates select="text[@id&gt;=2 and @id&lt;=4]">
<xsl:sort select="@*" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection01&apos; or @template=&apos;TileWidePeekImageCollection01&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection02&apos; or @template=&apos;TileWidePeekImageCollection02&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id&gt;=2 and @id&lt;=5]">
<xsl:sort select="@id" data-type="number"></xsl:sort>
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection03&apos; or @template=&apos;TileWidePeekImageCollection03&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection04&apos; or @template=&apos;TileWidePeekImageCollection04&apos;]" mode="textAndImages">
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection05&apos; or @template=&apos;TileWidePeekImageCollection05&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=6]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">caption</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=2]">
<xsl:copy>
<xsl:attribute name="hint-style">captionSubtle</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileWide310x150PeekImageCollection06&apos; or @template=&apos;TileWidePeekImageCollection06&apos;]" mode="textAndImages">
<group>
<subgroup hint-weight="30">
<xsl:for-each select="image[@id=6]">
<xsl:copy>
<xsl:attribute name="placement">inline</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
<subgroup>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-style">body</xsl:attribute>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</subgroup>
</group>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageCollectionAndText01&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:for-each select="text[@id=1]">
<xsl:copy>
<xsl:attribute name="hint-wrap">true</xsl:attribute>
<xsl:attribute name="hint-maxLines">2</xsl:attribute>
<xsl:call-template name="CopyText"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare310x310ImageCollectionAndText02&apos;]" mode="textAndImages">
<xsl:attribute name="hint-overlay">30</xsl:attribute>
<xsl:for-each select="image[@id=1]">
<xsl:copy>
<xsl:attribute name="placement">background</xsl:attribute>
<xsl:call-template name="CopyImage"></xsl:call-template>
</xsl:copy>
</xsl:for-each>
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;= 2]">
<xsl:sort select="@*" data-type="number"></xsl:sort>
</xsl:apply-templates>
</xsl:template>
<xsl:template match="binding[@template=&apos;TileSquare150x150_Search&apos; or @template=&apos;TileWide310x150_Search&apos;]" mode="textAndImages">
<xsl:apply-templates select="image[@id=1 or @id=2]"></xsl:apply-templates>
<xsl:apply-templates select="text[@id&gt;=1 and @id&lt;= 11]"></xsl:apply-templates>
</xsl:template>
<xsl:template match="binding" mode="textAndImages">
<xsl:apply-templates select="text|image|group"></xsl:apply-templates>
</xsl:template>
</xsl:stylesheet>
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0004080<0D0H0L0P0X0\0`0d0l0p0t0x0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,30343<3@3H3d3h3l3p3t3x3|3
4$4,404D4H4X4\4`4p4t4|4
5 5$585<5D5H5L5\5d5h5|5
6(6,606@6D6H6X6\6`6p6t6|6
7 7(70787@7H7P7X7`7h7p7x7
8 8(80888@8H8P8X8
9 9$9(9,9<9@9D9H9L9P9T9X9\9`9d9h9l9x9
485c5
9!9B9F9L9P9V9Z9r9v9|9
:7:Q:v:
=L=]=j=~=
>0>P>f>
?*?D?U?
>0H0~0
1)1B1T1v1
1R2Y2e2p2
7 8N8
9=9G9g9z9
:4:=:
;L;p;
<1<;<
<]=x=
>(>Q>Z>f>s>
?<?K?S?`?
0#1/1_1k1
4@4n4
5]6h6
6e7p7
8,9P9n9
:5:>:D:I:h:u:
;$;4;h;u;
<*<[<|<
='={=
>A>g>
?+?>?G?~?
0:0I0g0t0
1+2<2K2R2
8%90:w:
;%<4<u<
=/>P>c>v>
 0&0M0\0c0
1,161I1W1a1}1
2"2G2X2g2y2~2
3"323A3O3c3|3
454K4Z4y4
5L5h5u5
6Y6o6{6
8C8Y8{8
8#959e9
;>;T;k;|;
</<z<
<%=9=u=
>)>e>y>
?U?i?
4I5O5y5
6F6X6f6r6
8 8-8V8k8
:/:;:M:]:c:m:w:
:Q;W;{<
>&>K>`>
?"?3?z?
0!050<0C0
1$1f1,3|3
5)565k5
6R7g7
7X8b8t8
:<;O;
;>=L=k=
?&?E?M?`?h?
0%0?0p0
3"4P4x4
5-5:5A5m5{5
737Y7w7
7*8H8
919Z9x9
9 :8:X:
:5;W;
<L<u<k=
='>?>
>W?d?{?
0"0:0R0
1)1/161=1O1Y1a1h1o1
2%212=2I2h2}2
2>4J4c4~4
899Q9^9t9
9,:V:h:v:
<4=D=b=r=
>/>h?u?
Q0l0u0
0&1/1A1R1n1
2$2F2
2A3M3]3m3
6&787F7R7
859}9
:2:=:B:i:
F2k2w2$313L3U3
364T4
4`5?6
9I9Q9b9j9
9":(:F:\:
=U=g=
?"?)?0?7?
0$0d0s0
1,1N1]1|1
2$2L2k2q2
3C3z3
4i4x4
666H6V6b6
8(8X8
8$9\9q9
93:s:
=)=V=
1*1e1
152H2
2;3H3
3/4p4v4
5&5D5T5b5
6b7l7~7
9B:\:
;*<?<
=H=\=
>f>v>
2K3X3
4$4I4R4t4
5%5I5U5]6
7#7P7`7~7
7F8t8
9/9i9z9
90:p:
; ;4;`;
;%<L<h<
=%?G?f?
1J2p2
3c3o3
4&464N4T4
5'5a5
6$777F7W7
8#858D8j8w8
8&939T9]9f9
:#:+:=:d:j:
;S;i;
<!</<A<k<{<
>5>E>x>
>1?L?U?
1%181c1{1
1*2Y2v2
3W3o3x3
5 5o5
626H6S6X6
6&7B7I7P7W7
9/9?9k9v9
:X:t:
;A;\;e;
<$<*<<<F<O<U<
<<=t=
=%>.><>Q>w>
080q0
101g1
2A2w2
343h3~3
4+4^4
4<5d5~5
6r7|7
9$9B9R9`9r9
:Y;2<><N<^<p<
<$=:=E=J=q=
>,>5>
?:?o?}?
0,0t0
1(161B1s1
2*2^2s213L3U3
4 4'4.4@4H4P4W4^4e4l4
5-545;5B5I5
6 6.6E6W6
9%9+919D9K9O9V9Z9k9v9}9
=s=}=
=8>B>T>s>
>3?@?p?{?
2#2Y2
3&4V4p4}4
4K5X5
6h7x7
7H8X8m8
8(989M9i9y9
:-:I:Y:b:
;);9;B;
=h>x>
>H?Y?n?
0O0_0
1D1W1r1
2$2=2m2|2
373>3E3L3|3
4 4'4M4\4
5"5)555G5R5x5
6%6P6W6^6e6
717[7
9-9Y9
;@;S;d;u;
<1<B<r<
<(=B=S=
>>>K>]>e>v>}>
?'?.?X?b?p?
0F0p0
1*1:1A1H1O1V1]1d1k1u1
2V2H>Z>
>%?3?E?S?c?s?
0'0C0V0w0
1A1V1b1n1v1
1)222>2F2]2
5&525:5I5
546V6~6
8X9k9!:q:
>)???
2 2?2E2N2W2a2j2t2}2
2^3g3
4O4a4t4
5A5w5
8M8u8{8
869E9u9
:':z:
:+;;;^;i;u;};
<(<S<
=,=4=;=G=X=h=
>R>X>v>+?
2a2h2o2v2}2
6-6J6V6
7G7]7i7
8)858
:9:S:_:
:/;F;U;~;
<*<;<V<
?#?\?
0(1;1I1a1
2"2Q2]2u2
3'3a3|3
4$4>4J4
5!515=5U5e5q5
6&6<6B6
7&7D7P7\7
8)8C8O8~8
:$:9:
<'<D<S<
=X=a=
=,>5>
?S?k?
0%010M0Y0
2#272_2|2
3"3i3{3
3$404J4f4o4
4X5g5
5%6>6
8"8/8<8I8b8n8
869a9v9
:*:e:
;D<c<
=5=^=
>4>J>g>}>
171M1\1
262S2_2
2'3<3H3w3
4'4A4M4u4
5)5C5O5b5
5/6E6]6w6
8!8]8x8
9D:^:m:
:(;M;e;
;&<N<
>5>y>
>0?C?R?
I0V0c0p0}0
0G1a1
2(272
344V4
6(696H6_6l6
7@7R7{7
8)8F8
:1:H:r:
;0;K;W;o;
<J<x<
=1>>>K>X>e>r>
?2?`?
&0P0`0o0
0.1:1X1m1
3&3?3Y3`3
404?4P4]4
4J5f5r5
6@6X6
8*8B8
9W:r:
;/;P;
<0<y<
=U=d=
>;?B?b?q?
081I1X1_1
4*4V4
5/5D5b5h5}5
6)6V6f6
7'7O7
8/8f8
9<9a9z9
:_;h;
;P<]<
<(=4=l=
>3>Y>b>h>
?I?W?m?
)0/0t0
1Y1o1
192O2x2
3D3s3
494B4U4
5&5`5o5
6)6R6
6#767E7W7v7
8 8H8g8u8
969L9k9t9
;C;Y;|;
;:<b<}<
=%=@=_=
>$>9>f>
?'?0?A?
0F0q0z0
181I1
2 272E2p2
3O3|3
5"52595B5I5P5W5^5e5l5s5z5
6$6;6D6
797_7h7v7
888>8Y8g8
9G9U9}9
:9:?:[:i:
;A;O;t;z;
<2<@<}<
<-=;=`=f=
?U?[?r?
)0/0F0\0
1(1>1~1
2*2n2t2
3,3B3
4M4c4
5&5m5s5
586>6U6k6
7/7S8e8
939E9`9
9#:5:P:l:
;%;B;c;u;
<&<C<c<x<
=-=4=[=q=
>!>(>/>6>=>c>u>
?%?\?
0/0S0e0~0
1B1K1a1
4R4X4q4
6X6n6
777=7V7
8#8<8R8
8S9z9
: :&:.:4:g:
;8;M;Z;w;
<!<4<9<?<S<X<d<u<}<
=#=/=Q=h=}=
>(?2?M?
0(030:0R0X0^0d0j0p0w0~0
1$101@1I1]1k1|1
1"222B2R2j2
3#3*303:3I3Q3]3b3h3}3
4h4m4
7%727F7S7g7w7
8*8?8
;=;`;
<2<U<x<
>T?w?
031V1y1
3=3u3
4.5^5
9@9m9
9(:h:
;H;k;
8)9t9
:6:n:
:2;U;x;
<;<^<
=1=A=
=<>P>X>`>h>p>
?$?0?P?\?|?
0$0<0D0L0p0
1$1D1L1T1\1d1l1t1
2$2,242<2H2h2p2x2
3X3l3|3
404<4\4d4p4
5 5<5L5X5`5
6(606<6D6d6l6t6|6
7H7X7h7p7
8 8,848h8x8
9 9@9L9l9t9|9
:8:H:T:\:
;$;,;4;<;D;L;T;\;t;
<,<8<\<d<l<t<|<
= =<=L=X=x=
>$>,>4>@>`>l>
?<?D?P?p?
0 0(040T0\0d0l0t0
1 1(141T1\1d1l1t1|1
2$2,242<2D2L2T2`2
3$303T3\3d3l3t3|3
4(4H4X4|4
5,545<5H5h5p5x5
6$606T6\6d6l6t6|6
7 7D7L7T7\7d7l7t7|7
8 8@8H8T8t8|8
9$9,949@9d9l9t9|9
: :@:H:P:\:|:
;(;L;T;\;d;l;t;|;
< <(<0<<<\<d<l<t<|<
= =H=X=
>8>D>d>l>
?<?H?P?|?
0$0(0,040<0@0D0H0L0P0T0X0\0`0
0 0(00080@0H0P0X0`0h0p0x0
141L1l1
0 0(00040
