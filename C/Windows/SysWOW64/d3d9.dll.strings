!This program cannot be run in DOS mode.
>U~9>H
>Rich\
.text
`.data
.idata
@.didat
.rsrc
@.reloc
Local\D3D9CheckFullscreenSemaphore
KERNEL32
DWM_DX_FULLSCREEN_TRANSITION_EVENT
FlipNoVsync
ShowFrameRate
ForceRefreshRate
Software\Microsoft\DirectDraw
DisablePSGP
DD_RUNTIME_VERSION
display
ForceDriverFlagsOff
LowVidMemCap
FullDebug
DisableGB
DisableStripFVF
EmulateStateBlocks
UMD did not provide non-null pfnPresent1, and null pfnPresent.
UMD did not provide non-null pfnCreateResource2, and null pfnCreateResource.
UMD did not provide non-null pfnFlush1, and null pfnFlush.
UMD did not provide non-null pfnBufBlt1, and null pfnBufBlt.
UMD did not provide non-null pfnTexBlt1, and null pfnTexBlt.
UMD did not provide non-null pfnVolBlt1, and null pfnVolBlt.
Local\__DDrawExclMode__
Local\__DDrawCheckExclMode__
%s\%s
MostRecentApplication
MaximizedWindowedMode
Software\Microsoft\Direct3D\Shims\MaximizedWindowedMode
ext-ms-win-core-resourcepolicy-l1-1-0.dll
CreateGameConfigStoreClient
FreeGameConfigStoreClient
USER32
ChangeDisplaySettingsExA
DisableVBFailovers
DisableST
DisableDM
D3DProxyWindow
ext-ms-win-rtcore-ntuser-dpi-l1-1-0.dll
ext-ms-onecore-dcomp-l1-1-0.dll
ext-ms-win-dx-dxdbhelper-l1-1-0.dll
ext-ms-win-dwmapidxgi-ext-l1-1-1.dll
ext-ms-win-dwmapidxgi-ext-l1-1-0
ext-ms-win-dwmapidxgi-ext-l1-1-1
9Cannot allocate memory
endloop
endrep
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
sntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
onecore\internal\sdk\inc\wil/Staging.h
WilStaging_02
Local\SM0:%lu:%lu:%hs
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\enum.cpp
GameConfigStore API Failure.
Software\Microsoft\Direct3D\Shims
Unrecognized D3DDEVTYPE. GetAdapterCaps fails.
Software\Microsoft\DirectDraw\GammaCalibrator
SoftwareOnly
gdi32.dll
D3DKMTCloseAdapter
D3DKMTEnumAdapters2
D3DKMTQueryAdapterInfo
QueryFinalGPUPreferenceDecision returned unexpected hybridPreference.
Invalid flags specified. GetAdapterIdentifier fails.
Invalid Adapter number specified. GetAdapterIdentifier fails.
Invalid adapter specified. GetAdapterMonitor returns NULL
Invalid adapter specified. CheckDeviceFormat fails
Invalid device specified to CheckDeviceFormat
Must specify either D3DUSAGE_DEPTHSTENCIL, D3DUSAGE_RENDERTARGET, or Usage 0 for D3DRTYPE_SURFACE. CheckDeviceFormat fails.
Format is not in approved list for Z buffer formats. CheckDeviceFormats fails.
D3DUSAGE_AUTOGENMIPMAP is not supported for depth/stencil.  CheckDeviceFormat fails
Invalid resource type specified. CheckDeviceFormat fails.
Neither D3DUSAGE_DEPTHSTENCIL nor D3DUSAGE_RENDERTARGET are supported for volumes. CheckDeviceFormat fails.
D3DUSAGE_AUTOGENMIPMAP is not supported for volumes.  CheckDeviceFormat fails
Invalid usage flag specified. CheckDeviceFormat fails.
D3DUSAGE_QUERY_VERTEXTEXTURE can only be specified with a texture resource type. CheckDeviceFormat fails.
D3DFMT_BINARYBUFFER can only be used with Offscreen Plain surfaces. CheckDeviceFormat fails.
D3DUSAGE_AUTOGENMIPMAP is not allowed for multi-element formats. CheckDeviceFormat fails.
Driver does not support dynamic textures.
Dynamic textures cannot be rendertargets or depth/stencils.
Driver does not support displacement maps.
D3DUSAGE_DMAP is only valid with D3DRTYPE_TEXTURE. CheckDeviceFormat fails.
Invalid value for BackBufferFormat. ValidatePresentParameters fails.
BackBuffer format is not supported for FlipEx swapchain. ValidatePresentParameters fails.
BackBufferCount must be 1 if SwapEffect is COPY. ValidatePresentParameters fails.
BackBufferCount must be less than D3DPRESENT_BACK_BUFFERS_MAX_EX. ValidatePresentParameters fails.
BackBufferCount must be less than D3DPRESENT_BACK_BUFFERS_MAX. ValidatePresentParameters fails.
Invalid value for MultiSampleQuality.  ValidatePresentParameters fails.
D3DSWAPEFFECT_FLIPEX swap effect is available for D3D9Ex only
Invalid value for SwapEffect. Must be one of D3DSWAPEFFECT_COPY, D3DSWAPEFFECT_DISCARD, D3DSWAPEFFECT_FLIP, D3DSWAPEFFECT_FLIPEX, or D3DSWAPEFFECT_OVERLAY. ValidatePresentParameters fails.
Multisampling requires D3DSWAPEFFECT_DISCARD. ValidatePresentParameters fails.
Multisampling can't allow lockable backbuffers. ValidatePresentParameters fails.
Invalid bit set in Flags member. ValidatePresentParameters fails.
D3DPRESENTFLAG_DISCARD_DEPTHSTENCIL set, but depth stencil was not asked to be auto-created. ValidatePresentParameters fails.
D3DPRESENTFLAG_LOCKABLE_BACKBUFFER is not supported for D3DSWAPEFFECT_FLIPEX swap effect.
D3DPRESENTFLAG_DEVICECLIP is not supported for D3DSWAPEFFECT_FLIPEX swap effect.
FullScreen_RefreshRateInHz must be zero for windowed mode. ValidatePresentParameters fails.
pFullscreenDisplayMode must be NULL for windowed mode. ValidatePresentParameters fails.
Invalid value for PresentationInterval. ValidatePresentParameters fails.
Must be fullscreen for adapter group device. ValidatePresentParameters fails.
Must be fullscreen in order to use NOAUTOROTATE. ValidatePresentParameters fails.
PresentationInterval not supported by device. ValidatePresentParameters fails.
D3DSWAPEFFECT_NO_PRESENT only works when the device is windowed. ValidatePresentParameters fails.
EnableAutoDepthStencil must be the same on all heads. ValidatePresentParameters fails.
AutoDepthStencilFormat must be the same on all heads when EnableAutoDepthStencil is TRUE.
ValidatePresentParameters fails.
BackBufferFormat must be the same on all heads when EnableAutoDepthStencil is TRUE.
BackBufferWidth must be the same on all heads when EnableAutoDepthStencil is TRUE.
BackBufferHeight must be the same on all heads when EnableAutoDepthStencil is TRUE.
pFullscreenDisplayMode may not be NULL when not choosing Windowed mode. ValidatePresentParameters fails.
PRESENT_PARAMETERS::BackBufferWidth, BackBufferHeight, BackBufferFormat, & FullScreen_RefreshRateInHz must all be equivalent to the corresponding parameters in the D3DDISPLAYMODEEX pFullscreenDisplayMode data.
When specifying NOAUTOROTATE, BackBufferWidth and Height must be equivalent to the DisplayMode in the IDENTITY orienation.
ValidatePresentParameters fails.
PRESENT_PARAMETERS::BackBufferWidth, BackBufferHeight, BackBufferFormat, & FullScreen_RefreshRateInHz must all be equivalent to the corresponding parameters in the D3DDISPLAYMODEEX pFullscreenDisplayMode data.
ValidatePresentParameters fails.
Unrecognized values in D3DDISPLAYMODEEX pFullscreenDisplayMode parameters.
ValidatePresentParameters fails.
Cannot use NOAUTOROTATE without using Ex routines. ValidatePresentParameters fails.
Unable to create a fullcreen device from a terminal server session. ValidatePresentParameters fails.
Invalid iAdapter parameter. ValidateCreateDevice failed.
App specified D3DDEVTYPE_SW without first registering a software device. ValidateCreateDevice failed.
Invalid device type. ValidateCreateDevice failed.
Must be master adapter to create adapter group device. ValidateCreateDevice failed.
Invalid BehaviorFlags parameter. ValidateCreateDevice failed.
Invalid Flags parameter: Exactly one of the following must be set: D3DCREATE_HARDWARE_VERTEXPROCESSING, D3DCREATE_SOFTWARE_VERTEXPROCESSING or D3DCREATE_MIXED_VERTEXPROCESSING. ValidateCreateDevice failed.
Pure device cannot perform software processing. ValidateCreateDevice failed.
Device cannot perform hardware processing. ValidateCreateDevice failed.
Device cannot perform mixed processing because driver cannot do hardware T&L. ValidateCreateDevice failed.
Hardware not capable of creating a pure device. ValidateCreateDevice failed.
Must specify software, hardware, or mixed vertex processing. ValidateCreateDevice failed.
Invalid adapter specified. GetAdapterDisplayModeEx fails
Invalid pMode parameter specified for GetAdapterDisplayModeEx
Invalid adapter specified. CheckDepthStencilMatch fails.
Invalid device specified to CheckDepthStencilMatch
D3DFMT_UNKNOWN is not a valid format. CheckDepthStencilMatch fails.
RenderTarget Format is not supported for this Adapter/DevType/AdapterFormat. This error can happen if the application has not successfully called CheckDeviceFormats on the specified Format prior to calling CheckDepthStencilMatch. The application is advised to call CheckDeviceFormats on this format first, because a success return from CheckDepthStencilMatch does not guarantee that the format is valid as a RenderTarget for all possible cases i.e. D3DRTYPE_TEXTURE or D3DRTYPE_SURFACE or D3DRTYPE_CUBETEXTURE.
DepthStencil Format is not supported for this Adapter/DevType/AdapterFormat. This error can happen if the application has not successfully called CheckDeviceFormats on the specified Format prior to calling CheckDepthStencilMatch. The application is advised to call CheckDeviceFormats on this format first, because a success return from CheckDepthStencilMatch does not guarantee that the format is valid as a DepthStencil buffer for all possible cases i.e. D3DRTYPE_TEXTURE or D3DRTYPE_SURFACE or D3DRTYPE_CUBETEXTURE.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\lhddi.c
OsThunkDDISetDisplayMode failed in SetDisplayModeCB
OsThunkDDIPresent failed in PresentCB
OsThunkDDIPresent failed in SubmitPresentToHwQueueCB
Trying to destroy unknown device context
OsThunkDDISubmitWaitForSyncObjectsToHwQueue failed in SubmitCommandToHwQueueCB
OsThunkDDISubmitCommandToHwQueue failed in SubmitCommandToHwQueueCB
Failing CreateDeviceLHDDI because a driver update is in progress
OsThunkDDICreateDevice failed in CreateDeviceLHDDI
d3d9on12.dll
Could not find the load user mode driver name
Driver filename contains relative path
Could not load user mode driver DLL
GetPrivateDDITable
OpenAdapter
Could not find function OpenAdapter in user mode driver DLL
Failed to allocate memory for default device context
OsThunkDDICreateContext failed in CreateDeviceLHDDI
UMD failed CreateDevice in CreateDeviceLHDDI
OsThunkDDIQueryAdapterInfo failed in CreateDeviceLHDDI
MinimumLocalVidMem
OsThunkDDIRegisterTrimNotification failed in CreateDeviceLHDDI
Unexpected failure during QueryUserGlobalSettings for DX_DATABASE_QUERY_TYPE_VRR_ENABLE.
Failed to set process VRR eligible in kernel.
OsThunkDDIQueryResourceInfoFromNtHandle failed in OpenResourceLH
OsThunkDDIQueryResourceInfo failed in OpenResourceLH
OpenResourceLH failed due to incorrect PrivateRuntimeDatatSize
Out of memory in OpenResourceLH
OsThunkDDIOpenResourceFromNtHandle failed in OpenResourceLH
OsThunkDDIOpenResource failed in OpenResourceLH
Opened and created resources don't match, unable to open the shared resource.
UMD failed OpenResource call in OpenResourceLH
Unexpected failure in CreateSurfaceLH
Out of memory in CreateSurfaceLH
The specified display mode is unsupported. CreateDevice/Reset Fails
The specified display mode is unsupported. CreateDevice/Reset succeeds, but Present will fail
Mode: SourceId %d, Format 0x%x, Width %d, Height %d, Rotation %d, Refresh %d
The driver does not support content protection. CreateDevice/Reset Fails
Driver did not return a valid resource handle
DwmDxGetWindowsSharedSurface succeeded but returned NULL shared handle
OpenResourceLH failed on handle returned by DwmDxGetWindowsSharedSurface in DDBltLH
Failed to Open a shared surface for redirection
UMD failed GetCaps call in QueryLHDDICaps
DX9 Driver should not use D3DVTXPCAPS_NO_VSDT_UBYTE4 cap, it should instead not set the D3DDTCAPS_UBYTE4 bit in D3DCAPS9.DeclTypes
Unexpected error in D3D8GetLDDMDriverName
D3D8GetLDDMDriverName could not find UMD name
User/kernel-mode driver mismatch
GetDC only supports D3DFMT_R5G6B5, D3DFMT_X1R5G5B5, D3DFMT_R8G8B8, and D3DFMT_X8R8G8B8.
Tried to release NULL DC.  ReleaseDC fails.
Unexpected format mapping the color key
Lock to map the overlay colorkey failed
Flush failed mapping the colorkey value
Colorfill blt failed
UMD failed Flush in D3D9PresentOverlay
UMD failed Colorfill in D3D9PresentOverlay
UMD failed Present in D3D9PresentOverlay
UMD failed CreateAuthenticatedChannel call
UMD failed CreateCryptoSession call
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\d3dmem.cpp
Bad pointer given. Memory allocation fails
Software\Microsoft\Direct3D
Software\Microsoft\Direct3D\Drivers
System\CurrentControlSet\Control\GraphicsDrivers\Scheduler
6@i*T:J
1:clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\ddgdi32.c
The original surface has less subsurfaces than the view. Can't open a view into the texture/surface/buffer.
The original surface has more subsurfaces than the view. Can't open a view into the texture/surface/buffer.
GetWindowInfo Failed ?
OffsetRect Failed on rOrigDest?
OffsetRect Failed on prect[cnt]?
MemAlloc failed to allocate pOrigClipList, out of memory
No target hWnd specified. Present fails.
D3DREF9.DLL
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\swapchan.cpp
Specified number of backbuffers is greater than maximum allowed!
Failed to create composition surface.
Failed to create proxy window, falling back to application window.
Failed to bind swapchain to DWM.
Failed to unbind swapchain from DWM.
DDraw support is required for extended primary surface creation
Failed to create dummy primary surface
Failed to create driver primary surface chain
Failed to create driver primary surface
Invalid pointer to destination surface specified. GetFrontBufferData fails.
Destination Surface was not allocated with owner Device. GetFrontBufferData fails. 
Content protection is enabled. GetFrontBufferData fails. 
Destination surface must have format D3DFMT_A8R8G8B8. GetFrontBufferData fails.
Destination surface is an invalid type. GetFrontBufferData fails.
Destination surface must be in system or scratch memory. GetFrontBufferData fails.
No primary present. GetFrontBufferData fails.
Destination surface not big enough to hold the size of the screen. GetFrontBufferData fails.
Unable to lock destination surface. GetFrontBufferData fails.
BitBlt() failed in GetFrontBufferData to copy rect from primary
Unable to GetDC from caller provided destination surface. GetFrontBufferData fails.
CreateOffscreenPlainSurface failed inside CSwapchain::GetFrontBufferData
DdBltLH failed inside CSwapchain::GetFrontBufferData
Unable to Get Palette Entries.
hDeviceWindow must not be NULL. Each addtional swapchain must have each unique device window
hDeviceWindow is same as CreateDevice or focus window, should be different
Unable to create multiple overlay swapchains. CreateDevice/Reset Failed
SetCooperativeLevel returned failure. CreateDevice/Reset Failed
Failed to take VidPn source ownership. CreateDevice/Reset Failed
zero width and/or height and unable to get client. CreateDevice/Reset fails.
SetDialogBoxMode can only be used with GDI friendly back buffer format
SetDialogBoxMode can only be used with D3DMULTISAMPLE_NONE
SetDialogBoxMode can only be used with D3DSWAPEFFECT_DISCARD
SetDialogBoxMode can only be used with lockable backbuffers
Unable to set the new mode. CreateDevice/Reset Fails
Device is going to be taken by other process/thread
Not enough memory to create CCursor
winmm.dll
Unable to load winmm
timeBeginPeriod
timeEndPeriod
Unable to bind winmm library functions
Overlay flag specified for a non overlay swapchain. Present fails.
Failed to determine if emulated ownership is still taken
Failed to reacquire emulated ownership
Protected content requires a device window. Present fails.
Protection not set on the device window. Present fails.
Present not allowed between BeginScene and EndScene. Present fails.
pSrcRect pDestRect pDirtyRegion must be NULL with D3DSWAPEFFECT_FLIP. Present Fails.
pSrcRect pDestRect must be NULL with D3DSWAPEFFECT_FLIPEX. Present Fails.
D3DSWAPEFFECT_FLIPEX is not supported unless device was created with CreateDeviceEx
D3DPRESENT_DONOTFLIP with D3DSWAPEFFECT_FLIP is supported in fullscreen mode only
D3DPRESENT_DONOTFLIP is supported with D3DSWAPEFFECT_FLIPEX or D3DSWAPEFFECT_FLIP only
D3DPRESENT_DONOTFLIP is not supported unless device was created with CreateDeviceEx
D3DPRESENT_FLIPRESTART is only supported with D3DSWAPEFFECT_FLIP
D3DPRESENT_FLIPRESTART is not yet supported with Windowed Present
D3DPRESENT_FLIPRESTART is not supported unless device was created with CreateDeviceEx
D3DPRESENT_VIDEO_RESTRICT_TO_MONITOR only supported in windowed presents
D3DPRESENT_VIDEO_RESTRICT_TO_MONITOR only supported for video decode swapchains with D3DPRESENTFLAG_VIDEO
D3DPRESENT_FORCEIMMEDIATE is only supported with D3DSWAPEFFECT_FLIPEX for windowed mode
D3DPRESENT_FORCEIMMEDIATE is only supported with D3DSWAPEFFECT_COPY for full-screen mode
D3DPRESENT_FORCEIMMEDIATE is only supported in windowed presents
D3DPRESENT_FORCEIMMEDIATE is not supported unless device was created with CreateDeviceEx
Present with non-null pDirtyRegion with must be D3DSWAPEFFECT_COPY or D3DSWAPEFFECT_FLIPEX
Non zero pDirtyRegion with Present must be of RDH_RECTANGLES type
Non zero pDirtyRegion with Present has insufficient rdh.nRgnSize
A BackBuffer in this swap chain is Locked. Present failed.
Driver failed to unlock MultiSample backbuffer. Present fails.
Driver failed to lock MultiSample backbuffer. Present Fails.
A prior call to DrawPrim2 has failed; returning error from Present.
BitBlt or StretchBlt failed in Present
Driver failed Flip. Present Fails.
Failed to copy contents from the front buffer to the backbuffer.
user32.dll
DisableProcessWindowsGhosting
Device Window must be a top level window. CreateDevice fails.
Exclusive Mode has been taken by other app or other device on the same adapter. SetCooperativeLevel returns D3DERR_DEVICELOST.
SetDialogBoxMode is not supported for D3DSWAPEFFECT_FLIPEX swap effect
SetDialogBoxMode can only be used with exclusive fullscreen device.
Blt from front buf to GDI primay failed. SwitchGDIMode Fails.
Driver failed Blt. SwitchGDIMode Fails.
Driver failed FlipToGDISurface. SwitchGDIMode Fails.
Protection not set on the device window.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\ddcreate.cpp
****Direct3D DRIVER DISABLING ERROR****:Unable to allocate memory for texture formats!
****Direct3D DRIVER DISABLING ERROR****:Unable to allocate memory for Z/Stencil formats!
****Direct3D DRIVER DISABLING ERROR****:Unable to allocate memory for extended mode formats!
****Direct3D DRIVER DISABLING ERROR****:Unable to allocate memory for supported queries!
****Direct3D DRIVER DISABLING ERROR****:Second call to DdQueryDirectDrawObject failed!
****Direct3D DRIVER DISABLING ERROR****:DX9 Driver did not set D3DDEVCAPS2_STREAMOFFSET!
****Direct3D DRIVER DISABLING ERROR****:DX9 Driver did not support TIMESTAMP correctly!
*****The SW driver is disabled because it claims to support D3DFORMAT_OP_DISPLAYMODE*****
 DX9 and above drivers must set D3DDEVCAPS2_STREAMOFFSET flag. Disabling HAL
 DX9 drivers should not set D3D3CAPS_MANAGEDDEVICE. Disabling HAL
***Driver disabled because it reported a format with D3DFORMAT_OP_3DACCELERATION without D3DFORMAT_OP_DISPLAYMODE
***Driver disabled because it reported an alpha format with D3DFORMAT_OP_3DACCELERATION
***Driver disabled because it reported both D3DFMT_R5G6B5 and D3DFMT_X1R5G5B5 as a display mode
***Driver disabled because it reported both D3DFMT_D15S1 and D3DFMT_S1D15
***Driver disabled because it reported both D3DFMT_D24S8 and D3DFMT_S8D24
***Driver disabled because it reported both D3DFMT_D24X8 and D3DFMT_X8D24
***Driver disabled because it reported both D3DFMT_D24X4S4 and D3DFMT_X4S4D24
***Driver disabled because it reported D3DFORMAT_MEMBEROFGROUP_ARGB on an invalid format
D3D9_IdHot_Ctrl_SnapDesktop
TerminalServices-RemoteConnectionManager-b7857721-7a62-4a37-aff3-253fe2b8b0e8-MaxSessions
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\dxgcreat.cpp
Failure trying to create a video device
Failure trying to create a capture container
Failure trying to create a DXVA-HD device
Failure trying to create the IDirect3DDevice9Video interface
Failure trying to create the IDirect3DDevice9On12 interface
ResetEx can only be called from the thread that the device was created from.
No Swap Chain present, ResetEx fails
ResetEx fails. D3DERR_DEVICEREMOVED returned.
ResetEx fails. D3DERR_DEVICELOST returned.
Can't ResetEx a Device w/o Focus window to Fullscreen
Neither hDeviceWindow nor Focus window specified. ResetEx fails.
hDeviceWindow must not be NULL. Each addtional adapter must have each unique device window
All user created stateblocks must be freed before ResetEx can succeed. ResetEx Fails.
All user created queries must be freed for un-managed devices before ResetEx can succeed. ResetEx Fails.
Failed to update video mode on additional adapter in adapter group
All user created D3DPOOL_DEFAULT surfaces must be freed before ResetEx can succeed. ResetEx Fails.
All user created authenticated channels must be freed before ResetEx can succeed. ResetEx Fails.
All user created crypto sessions must be freed before ResetEx can succeed. ResetEx Fails.
Device Reset failed. ResetEx Fails.
AutoDepthStencilFormat does not match BackBufferFormat because the current Device requires the bitdepth of the zbuffer to match the render-target. ResetEx Failed
Failure trying to create automatic zstencil surface. ResetEx Fails
ResetEx failed and ResetEx/CheckDeviceState/Release are the only legal APIs to be called subsequently
ResetEx failed and ResetEx/TestCooperativeLevel/Release are the only legal APIs to be called subsequently
Driver returned an error, due to a number of possibilities, including lack of memory and driver bugs.
iSwapChain is out of range
GetDisplayModeEx is not enabled on this device. GetDisplayModeEx fails.
Depth format not supported by REF.
Stencil format not supported by REF.
Unable to colorfill the specified format for this driver
To use CheckResourceResidency call Device::QueryInterface(IID_IDirect3DDevice9Ex) first
Number of resources cannot be zero.
Number of resources is limitet to %d.
Failed to allocate memory for a handle list.
NULL resource pointer is passed. Resource index: %d.
CheckResourceResidency can only be called on POOL_DEFAULT resources
CheckResourceResidency failed.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\d3dobj.cpp
Surface already locked.  GetDC fails.
Texture already locked.  GetDC fails.
GetDC is not supported for depth/stencil buffers.
For D3DPOOL_DEFAULT surfaces, GetDC requires the surface be either a lockable
render target, an offscreen plain, or created with D3DUSAGE_DYNAMIC.
Unable get an hDC on a D3DPOOL_SCRATCH surface.  GetDC fails.
GetDC only supports D3DFMT_R5G6B5, D3DFMT_X1R5G5B5, D3DFMT_A1R5G5B5, D3DFMT_R8G8B8, D3DFMT_X8R8G8B8, and D3DFMT_A8R8G8B8.
Unable to get DC from kernel. GetDC fails.
Unable to create scratch DC. GetDC fails.
Unable to create scratch DIB section. GetDC fails.
DC not previously acquired from this surface.  ReleaseDC fails.
Unable to release DC in kernel.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\dxvahd.cpp
D3DFMT_UNKNOWN specified in CreateVideoSurface
Invalid pool type specified in CreateVideoSurface
Invalid usage flag specified in CreateVideoSurface
Invalid surface type specified in CreateVideoSurface
Invalid number of surface specified in CreateVideoSurface
Unsupported format specified in CreateVideoSurface
Failed to to create video surfaces
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\vbuffer.cpp
Failed to copy vertex buffer
Failed to lock driver vertex buffer
Failed to unlock driver vertex buffer
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\ibuffer.cpp
Failed to copy index buffer
Failed to lock driver index buffer
Failed to unlock driver index buffer
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\texture.cpp
Multiple element textures cannot be mip-maps
D3DUSAGE_AUTOGENMIPMAP is invalid with D3DPOOL_SYSTEMMEM
Invalid Pool specified for texture
D3DPOOL_SCRATCH resources aren't allowed to have any usage flags.
Invalid usage flag specified for texture.
Managed textures cannot be dynamic.
Only SysMem and Managed textures support D3DUSAGE_LOADONCE
Depth formats other than D3DFMT_D16_LOCKABLE or D3DFMT_D32F_LOCKABLE are not lockable.
Pool must be D3DPOOL_DEFAULT for RenderTarget and DepthStencil Usages
SystemMem, Scratch and Managed textures do not support this format.
This format is not supported for SystemMem, Scratch or Managed textures
Invalid format specified for texture
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\volume.cpp
LockBox failed on a volume level; volume was already locked.
Failed to lock level of a driver volume
Unknown DXT format?
%cs_%d_%d
ps_2_x
vs_2_x
ps_2_sw
vs_2_sw
ps_3_sw
vs_3_sw
Out of memory.
Direct3D9: Shader Validator: 
Version Token: 0x%x indicates a vertex shader.  Pixel shader version token must be of the form 0xffff****.
Version Token: 0x%x is invalid. Pixel shader version token must be of the form 0xffff****. Aborting pixel shader validation.
Version Token: Shader version %s is not supported by hardware. 
ps_1_0 is no longer supported.  It turned out that pixel shader capable hardware will always support at least ps_1_1 (which is not as limited a model as ps_1_0 was). To convert a ps_1_0 shader up to ps_1_1, the only change needed is to make the version number 1_1. 
Version Token: Shader version %s is not supported. Aborting pixel shader validation.
Instruction not supported by %s shader.
Invalid parameter count.
first
second
third
(%s source param) Modifiers are not allowed on constants for ps_1_x.
Second source parameter for texm3x3spec must be c#.
Src reg for tex* instruction must be t# register (%s source param).
Invalid reg type (%s source param).
Invalid reg num %d (%s source param).  Max allowed for this type is %d.
_bx2 is a valid src mod for texM* instructions only (%s source param).
_bx2 cannot be used on src register for texreg2ar or texreg2gb instructions.
_bx2 cannot be used on src register for texbem or texbeml instructions.
Invalid src mod for tex* instruction (%s source param).
Source swizzle not allowed for tex* instruction (%s source param).
Invalid reg type for %s source param.
Invalid reg num: %d for %s source param. Max allowed for this type is %d.
For ps_1_2 or ps_1_3, the cmp or dp4 instructions cannot have a source register the same as the destination register.
Invalid src mod for %s source param.
Src selector .b (%s source param) is only valid for instructions that occur in the alpha pipe.
Invalid src swizzle for %s source param.
Cannot apply a negation source modifier on data that was last written with the saturate destination modifier. Affected components(*) of %s source param: %s
When using the bias source modifier on a register, the previous writer should apply the saturate modifier. This would ensure consistent behaviour across different hardware. Affected components(*) of %s source param: %s
When using the complement source modifier on a register, the previous writer should apply the saturate destination modifier. This would ensure consistent behaviour across different hardware. Affected components(*) of %s source param: %s
, texm3x2depth
Texture register result of texkill%s or texm*pad instructions must not be read. Affected components(*) of %s source param: %s
Texture register result of texbem or texbeml instruction must not be read by tex* instruction. Affected components(*) of %s source param: %s
Register data that has been read by a texbem or texbeml instruction cannot be read later, except by another texbem/l.
Read of uninitialized component%s(*) in %s%d: %s
Invalid reg type for dest param.
Invalid dest reg num: %d. Max allowed for this reg type is %d.
Destination of texm3x2depth instruction (t%d) is not available elsewhere in shader.
Must use texture register a dest param for tex* instructions.
tex* instructions must write all components.
Instruction modifiers are not allowed for tex* instructions.
Dest shift not allowed for tex* instructions.
Invalid dst modifier.
Invalid dst shift.
Dest write mask must be .rgb, .a, or .rgba (all).
%d different temp registers (r#) read by instruction.  Max. different temp registers readable per instruction is %d.
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.
Incomplete texm* sequence.
Invalid texm* sequence.
Invalid texm* register.
The only valid modifiers for the first source parameter of lrp are: reg (no mod) or 1-reg (complement).
Previous writer to the first source register of lrp instruction should apply the saturate destination modifier.  This ensures consistent behaviour across different hardware. Affected components(*) of first source register: %s
Destination for def instruction must be of the form c# (where # = reg number). In addition there may be no mask (equivalent to full .xyzw, which is fine).
Invalid const register num: %d. Max allowed is %d.
c%d already def'd in the shader. 
Cannot set co-issue ('+') on consecutive instructions.
Too many texture addressing instruction slots used: %d. Max. allowed is %d. (Note that some texture addressing instructions may use up more than one instruction slot)
Too many arithmetic instruction slots used: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Total number of instruction slots used too high: %d. Max. allowed (counting any co-issued pairs as 1) is %d.
Version Token: Shader version %s is not supported by device. 
Instruction not supported by version %s shader.
(Source param) 
(First source param) 
(Second source param) 
(Third source param) 
%sModifiers are not allowed on constants for ps_1_4.
%sSource register type must be texture coordinate input (t#) for texcrd instruction.
%sSource register type must be temp (r#) or texture coordinate input (t#) for tex* instruction.
%sInvalid register number: %d.  Max allowed for this type is %d.
_dz(=_db) modifier on source param for texld only allowed if source is a temp register (r#).
_dz(=_db) modifier on source param for texld must be paired with source selector .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
_dz(=_db) modifier cannot be used on source parameter for texcrd. It is only available to texld instruction, when source parameter is temp register (r#).
_dw(=_da) modifier on source param for texld only allowed if source is a texture coordinate register (t#).
_dw(=_da) modifier on source param must be paired with source selector .xyw(=.rga).
%sInvalid source modifier for tex* instruction.
Source for texcrd requires component selector .xyw(==.rga), or .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
Using a texture coordinate register (t#) as source for texld requires component selector .xyw(=.rga), or .xyz(=.rgb). Note: Using no selector is treated same as .xyz here.
Using a temp register (r#) as source for texld requires component selector .xyz(==.rgb). Note: Using no selector is treated same as .xyz here.
%sInvalid source selector for tex* instruction.
Texture coordinate register t%d read more than once in shader with different source selector (swizzle). Multiple reads of identical texture coordinate register throughout shader must all use identical source selector. Note this does not restrict mixing use and non-use of a source modifier (i.e. _dw/_da or _dz/_db, depending what the swizzle allows) on these coordinate register reads.
%sTexture coordinate registers (t#) are not available to arithmetic instructions.
%sInvalid register type.
%sInvalid register number: %d. Max allowed for this type is %d.
%sInvalid source modifier.
%sInvalid source selector.
Invalid register type for destination param.
Invalid destination register number: %d. Max allowed for this register type is %d.
texcrd with _dw(=_da) source modifier must use .xy(=.rg) destination writemask.
texcrd must use .xyz(=.rgb) destination writemask.
texld/texkill/texdepth instructions must write all components.
Instruction modifiers not allowed for tex* instructions.
Destination shift not allowed for tex* instructions.
Invalid instruction modifier.
Invalid destination shift.
Cannot set co-issue ('+') on a tex* instruction.  Co-issue only applies to arithmetic instructions.
Phase marker cannot be co-issued.
dp4 cannot be coissued.
Instruction cannot have co-issue ('+') set without a previous arithmetic instruction to pair with.
(previous instruction)
%s phase marker cannot be co-issued.
%s def cannot be co-issued.
%s nop cannot be co-issued.
%s dp4 cannot be co-issued.
%s bem cannot be co-issued.
Co-issued instructions cannot both be dp3, since each require use of the color pipe to execute.
(previous instruction) dp3 needs color pipe to execute, so instruction co-issued with it cannot write to color components.
dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
(previous instruction) dp3 which writes alpha cannot co-issue since it uses up both the alpha and color pipes.
(previous instruction) Individual instruction in co-issue pair cannot write both alpha and color component(s).
Individual instruction in co-issue pair cannot write both alpha and color component(s).
Co-issued instructions cannot both write to the same component(s).  One instruction must write to alpha and the other may write to any combination of red/green/blue.  Destination registers may differ.
One of the instructions in a co-issue pair must write to alpha only (.a writemask).
Too many (%d) tex* instruction slots used before phase marker. Max. allowed in a phase is %d.
Cannot fit shader into length limits for target shader model (ps_1_4). 
Too many (%d) arithmetic instruction slots used before phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) tex* instruction slots used after phase marker. Max. allowed in a phase is %d.
Too many (%d) arithmetic instruction slots used after phase marker. Max. allowed in a phase (counting any co-issued pairs as 1) is %d.
Too many (%d) tex* instruction slots used. Max. allowed is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Too many (%d) arithmetic instruction slots used. Max. allowed (counting any co-issued pairs as 1) is %d. Note that adding a phase marker to the shader would double the number of instructions available.
Version Token: Pixel shader version ps_2_sw is for software rasterizers only (e.g. the reference device). Aborting shader validation.
ps_2_x extended instruction not supported by the hardware (static flow control not supported).
ps_2_x extended instruction not supported by the hardware (gradient instructions not supported).
ps_2_x extended instruction not supported by the hardware (predication not supported).
ps_2_x extended instruction not supported by the hardware (dynamic flow control not supported).
ps_2_x extended instruction not supported by the hardware (neither predication or static flow control supported).
Instruction not supported by version %s pixel shader.
(Fourth source param) 
First source parameter for texld must be temp (r#) or texture coordinate input(t#) register.
Second source parameter for texld must be sampler stage (s#).
Third and fourth parameters to texldd must be temp (r#), texture (t#), input (v#) or constant (c#) register.
%sUnexpected source parameter.
%sSource modifier not allowed for tex* instruction.
%sSource swizzles not allowed on tex* instruction.
%s instruction requires parameter to be label (l#). 
breakp requires parameter to be predicate register (p0). 
%s requires the first parameter to be a label (l#). 
 (second)
On current device, %s requires the condition%s parameter to be boolean constant register (b#). 
On current device, %s requires the condition%s parameter to be predicate register (p0). 
%s requires the condition parameter%s to be boolean constant register (b#), or predicate register (p0). 
%s requires the condition parameter%s to be boolean constant register (b#). 
rep requires parameter to be integer constant register (i#). 
%sInvalid source register type for instruction.
%sRegister number: %d on this parameter for a matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
Cannot negate second source parameter to vector*matrix instructions.
Cannot use negate on source parameter(s) to %s instruction.
%s%s requires replicate swizzle for this parameter in order to select component. i.e. .x | .y | .z | .w (or rgba equivalent)
Parameter(s) for %s instruction must specify default swizzle (.xyzw, or none specified.).  The exception is (on shader version > ps_2_0) if the condition is the predicate register, p0, in which case a replicate swizzle must be used in order to select a component. i.e. .x | .y | .z | .w (or rgba equivalent) 
When predicate register is used as the condition for a %s instruction, a replicate swizzle must be specified, to select a component. i.e. .x | .y | .z | .w (or rgba equivalent)
Parameter(s) for %s instruction must specify default swizzle (.xyzw, or none specified.) 
Const bool (b#) parameter to %s instruction must specify default swizzle (.xyzw, or none specified.) 
Predicate register (p0) parameter to %s instruction must specify replicate swizzle in order to select component. i.e. .x | .y | .z | .w (or rgba equivalent)
Cannot swizzle second source parameter to vector*matrix instructions.
%sInvalid source selector: %s. The only available source swizzles in this shader version are: .rgba/xyzw (same as not specifying swizzle), .r/x, .g/y, .b/z, .a/w, .gbra/yzxw, .brga/zxyw and .abgr/wzyx. 
ps_2_0 does not support predication.
vs_2_x predication not supported by the hardware.
%s instruction cannot be predicated.
Source predicate must be p0 register.
Source predicate p0 must use one of the following swizzles: .x | .y | .z | .w | .xyzw (same as swizzle not present)
The only modifier allowed for source predicate p0 is the not (!) modifier.
When writing to oDepth with predication, p0 must use a replicate swizzle to select a single component: .x | .y | .z | .w
Sampler register s%d has not been declared.
Component%s of register %s%d being read, but not declared. v# and t# registers must be declared using a dcl statement (down to the component level) in %s. Undeclared component%s(*) being read: %s
Note that the %s component of %s%d was previously initialized, but then became uninitialized by a previous instruction (e.g. SINCOS clobbers components).
Writemask cannot be empty.
texkill must write all components.
texld* must not specify a writemask (same as full mask). texld* instructions always write 4 components, including defaults if the source texture being sampled contains fewer than 4 components. 
Dest writemask for SINCOS must be .xy, .x or .y.
_sat not permitted on tex* instructions.
_sat not permitted with frc instruction.
_sat not permitted with SINCOS instruction.
_sat not permitted with setp instruction.
Instruction modifiers other than _sat or _pp not permitted. (_sat is permitted only on arithmetic ops, except frc or SINCOS)
Instruction shifts not permitted.
xyzw (same as not specifying mask)
%s instruction must use destination writemask: .%s
Dest register cannot be the same as first source register for m*x* instructions.
Dest register for m*x* instructions cannot be the same as one of the additional registers implied by the second source register.
Shader uses texture addressing operations in a dependency chain that is too complex for the target shader model (%s) to handle.  
Dependent tex-op sequence too long (%dth order). A 1st order dependent tex-op is a tex[ld*|kill] instruction in which either: (1) an r# reg is input (NOT t# reg), or (2) output r# reg was previously written, now being written AGAIN. A 2nd order dependent tex-op occurs if: a tex-op reads OR WRITES to an r# reg whose contents, BEFORE executing the tex-op, depend (perhaps indirectly) on the outcome of a 1st order dependent tex-op. An (n)th order dependent tex-op derives from an (n-1)th order tex-op. A given tex-op may be dependent to at most 3rd order (ps_2_0/x only).
%d different input (v#) or texture (t#) registers read by instruction.  Max. different input/texture registers readable per instruction is %d.
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d.(There is one exception: this rule does not apply to the SINCOS macro instruction.)
%d constant registers (c#) read by instruction.  Max. constant registers readable per instruction (even if they are the same) is %d.  This is in addition to the read port limit of %d for constants, which restricts how many *different* constants can be read. (There is one exception: none of this applies to the SINCOS macro instruction.)
Multiple constant registers cannot be read by a matrix op.
Multiple input/texture registers cannot be read by a matrix op.
def or dcl instructions must appear before other instructions.
Destination for defi instruction must be i# register (where # = reg number). In addition there may be no mask (equivalent to full .xyzw, which is fine).
Invalid constant integer (i#) register num: %d. Max allowed is %d.
i%d.x (which represents rep iteration count) cannot be negative. i%d.x is currently def'd as %d. 
i%d.x (which represents rep iteration count) cannot be greater than %d. i%d.x is currently def'd as %d. 
i%d.yzw have no meaning in this shader model; they must simply be 0. 
i%d already def'd in the shader. 
Destination for defb instruction must be b# register (where # = reg number). In addition there may be no mask (equivalent to full .xyzw, which is fine).
Invalid constant bool (b#) register num: %d. Max allowed is %d.
b%d must only be defined as true (0x00000001) or false (0x00000000). 
b%d already def'd in the shader. 
Dest register for SINCOS cannot be the same as first source register.
Second source paramter for SINCOS must be a constant register.
Third source paramter for SINCOS must be a constant register.
Second and third source parameters for SINCOS cannot be the same constant register.
Source selector for first source parameter for SINCOS must be .x, .y, .z or .w.
Second and third source parameters for SINCOS cannot have a modifier.
Second and third source parameters for SINCOS must use default swizzle (no swizzle specified, or .xyzw). 
Third source parameter for dp2add must use a replicate swizzle (.r, .g, .b, .a) to select a scalar component.
oDepth may only be written using the mov instruction.
Source parameter for instruction writing to oDepth cannot use a modifier.
Source parameter for instruction writing to oDepth must use a replicate source swizzle. i.e.: .x | .y | .z | .w or .r | .g | .b | .a.  This identifies the scalar component of the source to send to oDepth.
Write to oDepth register cannot use _sat instruction modifier.
Write to oDepth register must not specify any writemask. (Note, this is equivalent to using a full writemask) oDepth is a scalar output, however a specific rgba/xyzw channel does not apply; the writemask is meaningless. 
oDepth already written.
Subroutine with label #%d called, but never defined.
Subroutine label #%d never referenced.
End of shader reached without 'ret' to terminate subroutine.
End of shader reached and rep construct was not completed with an endrep. 
End of shader reached and 'if' construct was not completed with 'else'/'endif'. 
Subroutine label number, %d, is too large. Maximum label number is %d. Aborting shader validation.
Subroutine label number: %d already defined earlier. Aborting shader validation.
Cannot call subroutine label defined earlier in shader (label #%d in this case).  Subroutine call must reference label defined later in shader. Aborting shader validation. 
'label' is only permitted directly after a 'ret' instruction. Aborting shader validation. 
Label is defined inside a subroutine or main program. Label must follow the ret instruction. Aborting shader validation. 
Compiled code results in dynamic flow control nesting depth that exceeds limit of %d for target (%s). 
Depth of dynamic 'if' nesting exceeds limit of %d (callnz with predicate counts as a dynamic 'if' nesting level). Aborting shader validation. 
Compiled code results in subroutine call nesting depth that exceeds limit of %d for target (%s). 
Depth of subroutine call nesting exceeds limit of %d. Aborting shader validation. 
Out of memory. Aborting shader validation. 
'ret' instruction not permitted from inside any flow control block. Aborting shader validation. 
Compiled code results in loop nesting depth that exceeds limit of %d for target (%s). 
Depth of loop nesting exceeds limit of %d. Aborting shader validation. 
'endrep' instruction does not match up to a 'rep'. Aborting shader validation. 
Compiled code results in dynamic 'if'/'endif' nesting depth that exceeds limit of %d for target (%s). 
Depth of dynamic 'if' nesting exceeds limit of %d. Aborting shader validation. 
Compiled code results in static 'if'/'endif' nesting depth that exceeds limit of %d for target (%s). 
Depth of static 'if' nesting exceeds limit of %d. Aborting shader validation. 
'endif' instruction does not match up to an 'if' or 'else'. Aborting shader validation. 
'else' instruction does not match up to an 'if'. Aborting shader validation. 
'else' already used for current 'if' construct. Aborting shader validation. 
Compiled code results in dynamic 'if'/'endif' nesting depth that exceeds limit of %d for target (%s) (due to conditional break that counts towards the same limit). 
Depth of dynamic 'if' nesting exceeds limit of %d, due to break_cmp that counts towards same limit. Aborting shader validation. 
'break' instruction not within a local rep/endrep construct. Aborting shader validation. 
A 'ret' instruction must be followed by either (1) the end of the shader or (2) a 'label' instruction. Aborting shader validation.
texld/texldb/texldp/dsx/dsy instructions with r# as source cannot be used inside dynamic conditional 'if' blocks, dynamic conditional subroutine calls, or rep with break*. 
Compiled shader code has has many operations that use the texture unit (%d). Max. allowed by the target (%s) is %d.
Too many (%d) tex* instruction slots used. Max. allowed is %d.
Compiled shader code uses too many arithmetic instruction slots (%d). Max. allowed by the target (%s) is %d.
Too many (%d) standard (non tex*) instruction slots used. Max. allowed is %d.
Compiled shader code uses too many instruction slots (%d). Max. allowed by the target (%s) is %d.
Too many (%d) total instruction slots used. Max. allowed is %d.
Version Token: Pixel shader version ps_3_sw is for use with software rasterizers only (e.g. the reference device). Aborting shader validation.
fourth
%s requires %s parameter to be label (l#). 
%s requires second source parameter (the condition) to be boolean constant register (b#), or predicate register (p0). 
loop requires first parameter to be loop counter (aL). 
%s requires %s parameter to be integer constant register (i#). 
%s requires parameter (the branch condition) to be boolean constant register (b#), or predicate register (p0). 
First source parameter for texld* must be temp (r#), input (v#) or constant (c#) register.
Source modifier not allowed on sampler (s#) parameter to texld* instruction.
Second source parameter for texld* must be sampler stage (s#).
Third and fourth parameters to texldd must be temp (r#), input (v#) or constant (c#) register.
Unexpected source parameter.
(%s source param) Invalid register number: %d.  Max allowed for this type is %d.
(%s source param) Negate or abs modifiers not permitted on source parameters to texld*
Invalid reg num for MISCTYPE.
Relative addressing only permitted on input (v#) registers (%s source param).
Relative address register must be aL register (%s source param).
Invalid register number, %d, specified for aL register. Max # supported is %d (%s source param).
vFace or vPos registers cannot be used as sources for matrix operations.
Reg num: %d for %s source param on matrix instruction causes attempt to access out of range register number %d. Max allowed for this type is %d.
Cannot use abs on source parameter(s) on to vFace register.
Cannot use negate or abs on second source parameter to vector*matrix instructions.
Cannot use negate or abs on source parameter(s) to %s instruction.
vFace register must not specify a swizzle (i.e. default swizzle), as it is an implied scalar.
vFace register can only be used as one of the sources to if_(cond), break_(cond), setp_(cond), or the condition in a cmp.
%s requires replicate swizzle for source parameter(s) in order to select component. For the vPos register, this can either be .x or .y (z,w are not available). 
%s requires replicate swizzle for source parameter(s) in order to select component. i.e. .x | .y | .z | .w (or rgba equivalent)
Parameter(s) for %s instruction must specify default swizzle (.xyzw, or none specified.).  The exception is if the condition is the predicate register, p0, in which case a replicate swizzle must be used in order to select a component. i.e. .x | .y | .z | .w (or rgba equivalent)
aL can only be referenced in the following scenarios: (1) inside a loop/endloop block, or (2) in a subroutine for which in all cases some call below in the stack is in a loop/endloop block. 
vFace
Component%s of register %s%d being read, but not declared. v# registers must be declared using dcl statement(s) (down to the component level). Affected components (*): %s
Component(s) of register vPos being read, but not declared. vPos must be declared using a dcl statement. Affected components (*): %s
vPos does not have .z or .w channels in this shader model. Attempt to read following unavailable component(s) (*): %s
vFace being read, but not declared. vFace must be declared if it is used:  dcl vFace
_centroid flag only permitted on dcl v# statements.
The only instruction allowed to write to the predicate register is setp.
The setp instruction must write to the predicate register.
Absolute and relative addressing of input registers cannot be combined in one instruction.
Different relative addressing of input registers cannot be combined in one instruction.
When constant registers are read multiple times in a single instruction, the _abs modifier must either be present on all of the constants, or none of them. 
%d different input registers (v*#) read by instruction.  Max. different input registers readable per instruction is %d.
Multiple input registers cannot be read by a matrix op.
i%d.x (which represents loop or rep iteration count) cannot be negative. i%d.x is currently def'd as %d. 
i%d.x (which represents loop or rep iteration count) cannot be greater than %d. i%d.x is currently def'd as %d. 
i%d.y (which represents loop initial value) must be in the range [0, %d]. i%d.y is currently def'd as %d. 
i%d.z (which represents loop step value) must be in the range [-%d, %d]. i%d.z is currently def'd as %d. 
i%d.w has no meaning; it must simply be 0. 
Dest for SINCOS must be a temp (r#) register.
oDepth may not be written by the %s instruction.
When writing to oDepth, %s instruction must use replicate swizzle on source parameter(s), in order to select single component. i.e. .x | .y | .z | .w (or rgba equivalent)
Write to oDepth register must not specify any writemask. (Note, this is equivalent to using a full writemask) oDepth is a scalar output, however a specific rgba/xyzw channel does not apply -> the writemask is meaningless. 
End of shader reached and '%s' construct was not completed with a '%s'. 
'endloop' instruction does not match up to an 'loop'. Aborting shader validation. 
'break' instruction not within a local loop/rep construct. Aborting shader validation. 
texld/texldb/texldp/dsx/dsy instructions with r# as source cannot be used inside dynamic conditional 'if' blocks, dynamic conditional subroutine calls, or loop/rep with break*. 
Too many instruction slots (%d) used by shader. Max. allowed is %d.
Version token: 0x%x indicates a pixel shader.  Vertex shader version token must be of the form 0xfffe****.
Version Token: 0x%x is invalid. Vertex shader version token must be of the form 0xfffe****. Aborting vertex shader validation.
vs_1_0 is no longer supported.  It turned out that vertex shader capable hardware will always support at least vs_1_1 (which is not as limited a model as vs_1_0 was). To convert a vs_1_0 shader up to vs_1_1, the only change needed is to make the version number 1_1. 
Version Token: Shader version %s is not supported. Aborting vertex shader validation.
%s requires replicate swizzle for the source parameter in order to select component. i.e. .x | .y | .z | .w (or rgba equivalent)
Address mode must be absolute (%s source param).
Relative addressing of constant register must reference a0.x only.
Dst modifiers not allowed for vertex shaders.
Dest shifts not allowed for vertex shaders.
Dest write mask cannot be empty.
%s instruction cannot write to scalar output registers (oFog, oPts).
M*x* matrix instructions cannot write to scalar output registers (oFog, oPts).
When writing to scalar output register, %s instruction must use replicate swizzle on source parameter(s), in order to select single component. i.e. .x | .y | .z | .w (or rgba equivalent)
Scalar output registers (oFog, oPts) must have full write mask.
Absolute and relative addressing of constant registers cannot be combined in one instruction.
Different relative addressing of constant registers cannot be combined in one instruction.
Number of instruction slots used too high: %d. Max. allowed is %d.
By the end of a vertex shader, any oTn register written must not have gaps in components, starting from x, in order xyzw. To satisfy this, oT%d requires writing of the additional component%s(*): %s 
Version Token: Vertex shader version vs_2_sw is for software use only. Aborting shader validation.
vs_2_x extended instruction not supported by the hardware (dynamic flow control not supported).
vs_2_x extended instruction not supported by the hardware (predication not supported).
vs_2_0 does not support predication.
Predicate register read, but uninitialized. Note that the predicate register must be written by setp before it is used, and that flow control instructions invalidate the predicate register's contents. Affected components(*): %s
When writing to scalar output (oFog, oPts) with predication, p0 must use a replicate swizzle to select a single component: .x | .y | .z | .w
%s requires second source parameter (the condition) to be boolean constant register (b#). 
%s requires parameter (the branch condition) to be boolean constant register (b#). 
Relative addressing only permitted on constant registers (%s source param).
Relative address register must be a# register or aL register (%s source param).
Invalid register number, %d, specified for a# (address) register. Max # supported is %d (%s source param).
Cannot use negate on second source parameter to vector*matrix instructions.
Parameter(s) for %s instruction must specify default swizzle (.xyzw, or none specified.).  The exception is (on shader version > vs_2_0) if the condition is the predicate register, p0, in which case a replicate swizzle must be used in order to select a component. i.e. .x | .y | .z | .w (or rgba equivalent) 
Relative addressing of destination not permitted on destination in this shader model.
Destination for def instruction must be c# register (where # = reg number). In addition there may be no mask (equivalent to full .xyzw, which is fine).
Dest register type for SINCOS must be temp (r#).
Dest mask for SINCOS must be one of: .x | .y | .xy 
More than 2 constants (even identical ones) cannot be read by an instruction. (There is one exception: this rule does not apply to the SINCOS instruction.)
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d. 
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d. (There is one exception: this rule does not apply to the SINCOS instruction.)
Shader has too much flow control complexity for the target (%s). 
Too may static flow control instructions (%d) for this shader model.  Maximum allowed is %d. The shader instructions that count as 1 static flow control instruction each are: (1)call, (2)callnz (with static condition), (3)if (static branch), (4)else (paired with static if), (5)loop, (6)rep. 
Compiled code results in subroutine nesting depth that exceeds limit of %d for target (%s). 
Version Token: Vertex shader version vs_3_sw is for software use only. Aborting shader validation.
Version Token: Shader version %s is not supported. Aborting vertex shader validation. 
Instruction not supported by this vertex shader version.
When writing to scalar output (psize) with predication, p0 must use a replicate swizzle to select a single component: .x | .y | .z | .w
First source parameter for texldl must be temp (r#), input (v#) or const (c#) register.
(%s source param) Source modifier not allowed on texcoord for texldl.
(%s source param) Source modifier not allowed on sampler (s#).
Second source parameter for texldl must be sampler stage (s#).
Relative addressing of source register only permitted on input (v#) and constant (c#) registers (%s source param).
Relative address register for constant (c#) must be a# register or aL register (%s source param).
Relative address for input (v#) can only be aL register (%s source param).
%s instruction does not support _sat modifier.
Invalid dst modifier for vertex shader.
Relative addressing of destination only permitted on output registers (o#).
Relative addressing of o# register requires aL register.
When relative addressing of output o# registers is used, position0 must be declared in o%d only, psize0 (if present) must be declared in o%d only, and indexing from/into o%d, or o%d (psize0 case only) is undefined. Indexing into any other declared o# is fine. If relative addressing of o# is not used in the shader, these restrictions on register numbers do not apply. 
%s instruction cannot write to scalar output register.
M*x* matrix instructions cannot write to scalar output register.
Scalar output register must have full write mask.
Attempt to write undeclared component%s of output register o%d (*): %s. Components of o# registers to be written must be declared by a dcl statement.
%d different constant registers (c#) read by instruction.  Max. different constant registers readable per instruction is %d. 
Compiled shader code uses too many instruction slots (%d). Max. allowed by the target (%s), including cap for instruction limit, is %d.
Compiled shader code uses too many instructions (%d). Max. allowed by the target (%s), including cap for instruction limit, is %d.
Reserved bit(s) set in instruction parameter token!  Aborting validation.
dcl instruction should have exactly 2 parameter tokens.  Aborting validation.
Bit 31 not set in dcl info token!  Aborting validation.
Reserved bit(s) set in destination parameter token!  Aborting validation.
Reserved bit(s) set in dcl info token!  Aborting validation.
Reserved bit(s) set in source %d parameter token!  Aborting validation.
Expected relative address token.  Aborting validation.
Reserved bit(s) set in relative address token for source parameter %d!  Aborting validation.
When aL is used as a relative address, it must not specify any swizzle, as it is a scalar register. Aborting validation.
Instruction length specified for instruction (%d) does not match the token count encountered (%d). Aborting validation.
Unexpected DWORD count for instruction.  Aborting validation.
Unrecognized instruction. Aborting pixel shader validation.
Direct3D9: Decl Validator: 
Declaration can't map to LEGACY fixed function FVF because position cannot have usage index greater than 0. Usage index specified is %d.
Declaration can't map to fixed function FVF because position must use D3DDECLTYPE_FLOAT3.
Declaration can't map to fixed function FVF because D3DDECLUSAGE_POSITIONT must use D3DDECLTYPE_FLOAT4 data type.
Declaration can't map to LEGACY fixed function FVF because driver does not support blend weight.
Declaration can't map to fixed function FVF because blendweight must use D3DDECLTYPE_FLOAT1/2/3/4.
Declaration can't map to LEGACY fixed function FVF because normal cannot have usage index greater than 0. Usage index specified is %d.
Declaration can't map to fixed function FVF because normal must use D3DDECLTYPE_FLOAT3.
Declaration can't map to LEGACY fixed function FVF because device does not support psize. 
Declaration can't map to fixed function FVF because pointsize must use type D3DDECLTYPE_FLOAT1. 
Declaration can't map to fixed function FVF because color0/color1 cannot have type other than D3DDECLTYPE_D3DCOLOR
Declaration can't map to fixed function FVF because diffuse0(==color0) defined multiple times.
Declaration can't map to fixed function FVF because specular0/color1 cannot have type other than D3DDECLTYPE_D3DCOLOR
Declaration can't map to fixed function FVF because specular0(==color1) defined multiple times.
Declaration can't map to LEGACY fixed function FVF because device does not support blendindices. 
Declaration can't map to fixed function FVF because blendindices must use type D3DDECLTYPE_UBYTE4 or D3DDECLTYPE_D3DCOLOR. 
Declaration can't map to LEGACY fixed function FVF because device requires texcoord to use type D3DDECLTYPE_FLOAT2. 
Declaration can't map to fixed function FVF because texcoord type must be one of: D3DDECLTYPE_FLOAT1/2/3/4.
Declaration can't map to legacy fixed function FVF because vertex element ordering must follow FVF order. 
Declaration cannot combine generation method 'lookup'/'lookuppresampled' with methods other than 'default'.
Declaration element [%d] specifies generation method 'lookup', but stream (%d) and offset (%d) partially overlap with vertex element [%d] (having method 'default'). Elements with generation method 'lookup' must satisfy either of two conditions: (1) stream+offset+type for 'lookup' element does not overlap at all with any other element having method 'default'. In this case, it is required that incoming vertex data at stream+offset+type specified for 'lookup' element contains coordinates for the lookup. After being used the coords will be discarded and replaced by lookup results in the set of data passed to the rest of the vertex pipe.(2) stream+offset exactly matches another element in declaration having method 'default', and the types of both are the same. In this case, coordinates for lookup come from 'default' element, and output vertex data after lookup contains both 'default' data, plus new lookup results. 
Declaration element [%d] specifies generation method '%s', but the stream (%d) and offset (%d) specified do not match up with any element in the declaration that has method 'default'.
Declaration element [%d] specifies generation method 'lookup', where stream (%d) and offset (%d) match another element with method 'default'. This is fine, however both elements must list the same data type, which they currently do not.
Declaration element [%d] specifies generation method '%s'. For this method, the input data type listed must be equal to the type at the 'default' element with the specified source stream (%d) and offset (%d). 
Declaration element [%d] specifies generation method '%s'. For this method, the input data type must be one of: float3, float4, d3dcolor, ubyte4 or short4. Type provided for this element is: %s
Transformed vertex declaration (containing usage+index D3DDECLUSAGE_POSITIONT,0) must only use stream 0 for all elements.  i.e. When vertex processing is disabled, only stream 0 can be used. 
The usage+index pairs: (D3DDECLUSAGE_POSITION,0) and (D3DDECLUSAGE_POSITIONT,0) cannot both be present in a single vertex declaration. 
Declaration has too many vertex elements (%d).  Max allowed, including D3DDECL_END(), is %d. Aborting decl validation.
Offset must be multiple of DWORD size (4 bytes). Encountered offset: %d
Usage field contains value that is not a member of D3DDECLUSAGE. Value: 0x%x. Aborting decl validation.
UsageIndex %d is too high.  Max allowed is %d.
Usage D3DDECLUSAGE_TESSFACTOR should be used only with data type D3DDECLTYPE_FLOAT1 and usage index 0.
Declaration can't map to fixed function FVF because usage+index %s,%d is not supported.
Declaration can't map to fixed function FVF because a usage+index pair (%s,%d) that is not valid for fixed function appears between two vertex elements that have usage+index pairs valid for fixed function. For a vertex declaration to map to fixed function, all individual elements that are valid for fixed function must appear contiguously starting from the first element.  Remaining elements at the end do not have to be valid for fixed function, as long as there are few enough that they can be aliased internally to texcoord(n), texcoord(n+1) etc. up to max. texcoord7 (thereby appearing to conform to an FVF, although the aliased values should not be used). 
Usage+UsageIndex pair: %s%d was already defined by element %d.
Stream index %d is too high.  Max allowed is %d.
Stream number (%d) too high for device.  Max allowed by the device is %d.
Stream %d was defined earlier. Current stream index is %d. All vertex element entries for a given stream index must be contiguous.
Vertex element offset is equal to the previous element offset, but device does not support it (D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET is not set). Offset into stream #%d specified as %d. Expected offset to be at least %d.
Decl element type is %s; D3DDECLTYPE of greater enumerated value than D3DDECLTYPE_SHORT4 cannot be used with tesselation.
Type field contains value that is not a member of D3DDECLTYPE. Value: 0x%x.  Aborting decl validation.
Input type: '%s' not supported by pre-DX9 driver.
Device does not support %s.
Method field contains value that is not a member of D3DDECLMETHOD. Value: 0x%x. Aborting decl validation.
Generation method: 'lookup' is not supported by the device.
Generation method: 'lookup' and 'lookuppresampled' can only be used once in a decl.  Occurence #%d encountered.
Generation method: 'lookup' must use type D3DDECLTYPE_FLOAT2/3/4.
Generation method: 'lookup' must use usage D3DDECLUSAGE_SAMPLE.
Generation method: 'lookuppresampled' is not supported by the device.
Generation method: 'lookuppresampled' must use usage D3DDECLUSAGE_SAMPLE.
Decl using method other than '%s' cannot be used with points or lines. Encountered method: '%s'.
Decl cannot be used with software vertex processing when generation method other that 'default' is used. 
Type, Stream, and Offset fields are not used in combination with generation method D3DDECLMETHOD_UV or D3DDECLMETHOD_LOOKUPPRESAMPLED, so Type is required to be D3DDECLTYPE_UNUSED, and Stream and Offset are required to be 0. This 0 requirement is arbitrary, and there is no relevance/conflict if another vertex element actually occupies Stream 0 and Offset 0 using D3DDECLMETHOD_DEFAULT. Encountered Stream=%d, Offset=%d, Type=%d.
Cannot specify method %s when device does not support RT-Patches. 
Cannot specify method %s or %s on a DX8 driver. On DX8 drivers supporting RT-Patches, the only generation methods allowed are %s and %s. 
Vertex declaration containing generation methods %s, %s or %s cannot be used with Draw*Primitive*() or DrawTriPatch().  DrawRectPatch() must be used.
Vertex declaration containing generation method %s cannot be used with Draw*Primitive*(). DrawTriPatch() or DrawRectPatch() must be used.
Vertex declaration containing generation methods %s or %s cannot be used with DrawTriPatch() or DrawRectPatch().  Draw*Primitive*() must be used.
Type %s can only be used with generation methods %s or %s. Generation method encountered specified is: %s. 
Usage: 'sample' can be used only with methods D3DDECLMETHOD_LOOKUP or D3DDECLMETHOD_LOOKUPPRESAMPLED.
Declaration can't map to fixed function FVF because it has blend weights and a vertex element with D3DDECLUSAGE_POSITIONT. 
Declaration can't map to fixed function FVF because there are too many blend weights (%d). Max allowed is %d.
Declaration can't map to fixed function FVF because there are gaps in the texture coordinates. 
Declaration can't map to fixed function FVF because position field is missing. Usage: %s, with usage index 0 is required for fixed function.
Declaration can't map to fixed function FVF because nonzero stream index is used. 
On a device that does not support ps_3_0, a transformed vertex declaration must specify elements in FVF order. 
Declaration can't map to fixed function FVF because a generation method other than D3DDECLMETHOD_DEFAULT is used.
Declaration can't map to fixed function FVF because the type for this element is unsupported.
Declaration can't map to fixed function FVF because gaps or overlap between vertex elements are not allowed. Offset encountered is: %d, but expected offset is %d.
Declaration can't map to fixed function FVF because fixed function requires that generation method %s can only be used with usages %s or %s.
Declaration can't map to fixed function FVF because fixed function requires that generation methods %s, %s or %s can only be used with type %s and usage being one of: %s, %s, %s or %s.
Declaration can't map to fixed function FVF because fixed function pipeline does not support generation methods %s or %s. 
Declaration can't map to legacy FVF because a nonzero stream index is used: %d.
Declaration can't map to fixed function FVF because there are both (a) elements with usage+index pairs that are not valid for fixed function and (b) generation methods other than DEFAULT in the same decl. For a vertex declaration to map to fixed function, all individual elements with usage+index pairs valid for fixed function must appear contiguously starting from the first element.  Remaining elements at the end do not have to be valid for fixed function, as long as there are few enough that they can be aliased internally to texcoord(n), texcoord(n+1) etc. up to max. texcoord7 (thereby appearing to conform to an FVF, although the aliased values should not be used). Additionally, when such aliasing occurs, all elements in the decl are then required to simply use generation method D3DDECLMETHOD_DEFAULT, for mapping to fixed function to work.
Declaration can't map to fixed function FVF because there are too many usage+index pairs that are not valid for fixed function. To clarify: For a vertex declaration to map to fixed function, all individual elements with usage+index pairs valid for fixed function must appear contiguously starting from the first element.  Remaining elements at the end do not have to be valid for fixed function, as long as there are few enough that they can be aliased internally to texcoord(n), texcoord(n+1) etc. up to max. texcoord7 (thereby appearing to conform to an FVF, although the aliased values should not be used). 
Unrecognized instruction. Aborting vertex shader validation.
Relative address must specify a single component selector (.x, .y, .z or .w) to indicate relative address component. Aborting validation.
Reserved bit(s) set in parameter %d source token!  Aborting validation.
DriverStyle
D3DREF8.DLL
D3D8GetSWInfo
WinSta0
Default
Segoe UI Light
Segoe UI SemiBold
Segoe UI
Segoe Pseudo
Yu Gothic UI Light
Yu Gothic UI Semibold
Yu Gothic UI
Malgun Gothic Semilight
Malgun Gothic Bold
Malgun Gothic
Leelawadee UI Semilight
Leelawadee UI Bold
Leelawadee UI
Microsoft YaHei UI Light
Microsoft YaHei UI Bold
Microsoft YaHei UI
Microsoft JhengHei UI Light
Microsoft JhengHei UI Bold
Microsoft JhengHei UI
oLW\f
f4Og|
X\?E/5
l6s+o
sQPI[5T
bgOne
m]#0D
Da6N^
@W=7A=
d|BNeU
,B>DY
Vving1
gxI3!'
ew0hp
WAxK0i
FWph?r
'R{=f
xv#?H
7T})gW
%UM;%
hwp1p0
+dBVY
Ly^X`
hgtlCm
^BNQ,^
z?801i:It6
$>b~t
1o?-XfF
$(SQO
rY&'K
VY$[X
VG2/iI
S~=5p
bWti^
ul%G1
byjA`
w9X!P/
NtQuerySystemInformation
__D3DVisualProxyProp__
onecoreuap\windows\directx\dxg\common\proxywindow\proxywindow.cpp
TreatAsDesktopFullscreen
Proxy window promotion failed
__D3DProxyProp__
HIGHDPIAWARE
@clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\d3ddev.cpp
D3DDEVTYPE_NULLREF does not support D3DCREATE_ADAPTERGROUP_DEVICE
UseVSConverter
UsePSConverter
Invalid HWND specified for hwndFocusWindow, CreateDeviceEx fails
Invalid HWND specified for PresentationParams.hDeviceWindow. CreateDeviceEx fails.
Fullscreen CreateDevice must specify Focus window
hDeviceWindow is same as CreateDeviceEx or focus window, should be different
Failed to create DirectDraw. CreateDeviceEx Failed.
Failed to create additional DirectDraw for group device. CreateDeviceEx Failed.
Unrecognized or unsupported DeviceType. CreateDeviceEx Failed.
Failed to allocate space for the device object. CreateDeviceEx Failed.
Failed to initialize Framework Device. CreateDeviceEx Failed.
DisableVidMemVBs
Failed to initialize D3DDevice. CreateDeviceEx Failed.
Not enough memory
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\vdecl.cpp
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\devstate.cpp
Invalid state value passed to GetTransform. GetTransform failed.
Invalid state value passed to MultiplyTransform
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\halvalid.cpp
Unsupported color operation.
Unsupported alpha operation.
Unsupported color argument.
Unsupported alpha argument.
Unsupported result argument.
Unsupported texture transform flag D3DTTFF_PROJECTED.
Number of coordinates specified by texture transform flags is unsupported.
Illegal to use anisotropic filtering on displacement map.
Unsupported mag filter.
Unsupported min filter.
Unsupported mip filter.
Unsupported max anisotropy level.
Max anisotropy level less than 1.
Unsupported mipmap level of detail bias.
Unsupported texture address mode.
D3DRS_POSITIONDEGREE should be D3DDEGREE_LINEAR or D3DDEGREE_CUBIC
D3DRS_NORMALDEGREE should be D3DDEGREE_LINEAR or D3DDEGREE_QUADRATIC
tesselation level must be greater or equal to 1.0f
Number of clip planes exceeds maximum.
Unsupported source blend texture operation.
Unsupported destination blend texture operation.
Unsupported renderstate D3DRS_EDGEANTIALIAS.
Unsupported renderstate D3DRS_DITHERENABLE.
Unsupported value D3DZB_USEW for renderstate D3DRS_ZENABLE.
Unsupported renderstate D3DRS_DEPTHBIAS.
Unsupported renderstate D3DRS_SLOPESCALEDEPTHBIAS.
Unsupported cull mode on device.
Unsupported independent write mask on device.
Unsupported D3DRS_ZFUNC state on device.
Unsupported D3DRS_ALPHAFUNC state on device.
Unsupported stencil condition state on device.
Unsupported D3DRS_TWOSIDEDSTENCILMODE state on device.
Unsupported CCW stencil condition renderstate on device.
Renderstate D3DRS_POINTSIZE_MAX exceeds maximum.
Unsupported renderstate D3DRS_LOCALVIEWER.
Renderstate D3DRS_VERTEXBLEND requires too many matrices.
Unsupported renderstate D3DRS_INDEXEDVERTEXBLENDENABLE.
Unsupported renderstate D3DRS_FOGENABLE.
Unsupported renderstate D3DRS_RANGEFOGENABLE.
Unsupported table fog.
Unsupported D3DRS_SEPARATEALPHABLENDENABLE state on device.
Unsupported D3DRS_SRCBLENDALPHA operation.
Unsupported D3DRS_DESTBLENDALPHA operation.
Unsupported D3DRS_BLENDOPALPHA operation.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\ddidx8.cpp
Resource manager failed to create or update video memory VB/IB
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\ddidx9.cpp
Failed to set texture to PS converter
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\ddidx10.cpp
User mode driver failed SetRenderState call
User mode driver failed SetTextureStageState call
User mode driver failed SetVertexShaderDecl call
User mode driver failed SetVertexShaderFunc call
User mode driver failed SetVertexShaderConstant call
User mode driver failed SetVertexShaderConstantI call
User mode driver failed SetClipPlane call
AYUhg
GraphicsPerfSvc
igdumdim32.dll
RGBGE
GRGBG
DXT1H
DXT1J
DXT3K
DXT3M
DXT5N
DXT5P
NotifyGraphicsPerformanceMonitor
PartA_PrivTags
UTCReplace_AppSessionGuid
schemaVersion
WnfStatus
SwapChainLuid
GetServiceInfoHr
ServiceType
ServiceStartType
ServiceCurrentState
ServiceWin32ExitCode
ServiceSpecificExitCode
CacheInitialized
ProcessInfo
UTCReplace_AppSessionGuid
schemaVersion
SetDialogBoxMode
UTCReplace_AppSessionGuid
schemaVersion
bEnableDialogs_in
GetAvailableTextureMem
UTCReplace_AppSessionGuid
schemaVersion
availableMem_out
callCount_out
PresentWithAdapterGroup
UTCReplace_AppSessionGuid
schemaVersion
requireAdapterGroupShim_in
adapterGroupCount_in
adapterLuid_in
PresentWithGammaCorrection
UTCReplace_AppSessionGuid
schemaVersion
PresentWithDirtyRegion
UTCReplace_AppSessionGuid
schemaVersion
dirtyRegion_in
PresentWithHwndOverride
UTCReplace_AppSessionGuid
schemaVersion
PresentWithScrOrDestRect
UTCReplace_AppSessionGuid
schemaVersion
srcRect_in
right
bottom
dstRect_in
right
bottom
MultipleSwapChainPresent
UTCReplace_AppSessionGuid
schemaVersion
CreateAuthenticatedChannel
UTCReplace_AppSessionGuid
schemaVersion
FullscreenPresentInfo
UTCReplace_AppSessionGuid
schemaVersion
swapChainLuid
processDPIAwareness
FullscreenPresentRectStatus
rectMatchCount
rectMismatchCount
windowRectAndClientRectMismatchCount
windowRectAndDisplayRectMismatchCount
windowRectNotLocatedAtDisplayRectOriginCount
windowRectAndDisplayRectIntersectCount
windowRectHeightLargerThanDisplayRectCount
windowRectWidthLargerThanDisplayRectCount
MaximumWindowRect
right
bottom
MinimumWindowRect
right
bottom
DisplayRect
right
bottom
SwapChainStatus
UTCReplace_AppSessionGuid
schemaVersion
swapChainLuid
presentCount
isDestroying
ResetSwapChain
UTCReplace_AppSessionGuid
schemaVersion
deviceId
swapChainLuid
adapterLuid
D3DDisplayModeEx
size_in
width_in
height_in
refreshRate_in
format_in
D3DPRESENT_PARAMETERS
backBufferWidth_in
backBufferHeight_in
backBufferFormat_in
backBufferCount_in
multiSampleType_in
multiSampleQuality_in
swapEffect_in
windowed_in
flags_in
fullScreen_RefreshRateInHz_in
presentationInterval_in
windowless_in
maximizedWindowedModeEnabled_out
adapterSupportsMaximizedWindowedModeForGameDVR_in
CoinVelocityGameConfigStoreOverride
gameConfigStoreOverrideEnabled_in
gameConfigStoreOverrideVariant_in
MaximizedWindowedModeShim
maximizedWindowedModeShimEnabled_in
gameConfigStoreEnabled_in
shimCompatValue_in
regCompatEnabled_in
windowed_out
SwapEffectUpgradesShim
swapEffectUpgradesShimEnabled_in
gameConfigStoreEnabled_in
shimCompatValue_in
regCompatEnabled_in
swapEffect_out
TelemetryThrottled
UTCReplace_AppSessionGuid
Bucket
IntervalEventCount
IntervalDuration
IntervalStartTime
CreateDevice
UTCReplace_AppSessionGuid
schemaVersion
deviceId
enumEx_in
deviceEx_in
CreateDeviceParams
adapterLuid
deviceType_in
behaviorFlags_in
Requests9on12
VideoProcessorStreamFormat
UTCReplace_AppSessionGuid
schemaVersion
streamIndex
sampleFormat
VideoProcessorStreamAlpha
UTCReplace_AppSessionGuid
schemaVersion
streamIndex
alpha
VideoProcessorStreamUsage
UTCReplace_AppSessionGuid
schemaVersion
numSourceStreams
VideoProcessorAlpha
UTCReplace_AppSessionGuid
schemaVersion
alpha
VideoProcessorProcAmp
UTCReplace_AppSessionGuid
schemaVersion
brightness
contrast
saturation
SetVideoProcessorBltStatePrivate
UTCReplace_AppSessionGuid
schemaVersion
SetVideoProcessorStreamStatePrivate
UTCReplace_AppSessionGuid
schemaVersion
CreateExtensionDevice
UTCReplace_AppSessionGuid
schemaVersion
extensionGuid
DecodeExecuteExtension
UTCReplace_AppSessionGuid
schemaVersion
Microsoft.Windows.Graphics.D3D9
break
break_cmp
breakp
callnz
comment
dp2add
endif
if_cmp
label
phase
sincos
texld[b|p]*
texbem
texbeml
texcoord/texcrd
texdepth
texdp3
texdp3tex
texkill
texldl
texldd
texreg2ar
texreg2gb
texreg2rgb
texm3x2depth
texm3x2pad
texm3x2tex
texm3x3
texm3x3pad
texm3x3tex
texm3x3spec
texm3x3vspec
RaiseFailFastException
ARelease Exclusive Mode Mutex Failed.
Application attempts to leave exclusive mode on different thread than the device was created on. Dangerous!!
Failed to create exclusive mode mutex.
DX9 D3D interfaces are not supported on PROCESSOR_ARCHITECTURE_IA64
D3D ERROR: D3D header version mismatch.
The application was compiled against and will only work with D3D_SDK_VERSION (%d), but the currently installed runtime is version (%d).
Recompile the application against the appropriate SDK for the installed runtime.
Creating D3D enumeration object failed; out of memory. Direct3DCreate fails and returns NULL.
Extended D3D enumeration object cannot be created with Windows XP driver model.
DXCaptureReplay.dll
D3DPERF_BeginEventGenerated
GetRealPtrPtrD3DPERF_BeginEvent
D3DPERF_EndEventGenerated
GetRealPtrPtrD3DPERF_EndEvent
D3DPERF_SetMarkerGenerated
GetRealPtrPtrD3DPERF_SetMarker
D3DPERF_SetRegionGenerated
GetRealPtrPtrD3DPERF_SetRegion
Failure trying to create an IDirect3D9ExOverlayExtension interface
Failure trying to create an IDirect3D9ExEnumerationSettings interface
HAL Disabled: VS2.0+ hardware must not set D3DVTXPCAPS_NO_VSDT_UBYTE4
HAL Disabled: VS2.0+ hardware must support at least 8 vertex streams
Invalid Adapter number specified. GetAdapterLUID fails.
Invalid adapter specified. GetAdapterModeCountEx returns zero.
Invalid D3DDISPLAYMODEFILTER specified. GetAdapterModeCountEx returns zero.
The specfied adapter is not part of the desktop.  GetAdapterModeCountEx returns zero.
Invalid adapter specified. EnumAdapterModesEx fails.
Invalid pMode parameter specified for EnumAdapterModesEx
No modes with the specified format are available.  EnumAdapterModes fails.
Invalid mode index.  EnumAdapterModes fails.
Invalid D3DDISPLAYMODEFILTER specified. EnumAdapterModesEx fails.
Invalid adapter specified. CheckDeviceType fails.
Invalid device specified to CheckDeviceType
Fullscreen mode not supported for SWAPEFFECT_OVERLAY. ValidateOverlayParameters fails.
9Ex is required for SWAPEFFECT_OVERLAY. ValidateOverlayParameters fails.
MulitSampling is not supported for SWAPEFFECT_OVERLAY. ValidateOverlayParameters fails.
PresentStatistics are not supported for SWAPEFFECT_OVERLAY. ValidateOverlayParameters fails.
Overlays are not supported. ValidateOverlayParameters fails.
Invalid flag combinations. ValidateOverlayParameters fails.
Limited RGB is not supported. ValidateOverlayParameters fails.
BT709 is not supported. ValidateOverlayParameters fails.
BT601 is not supported. ValidateOverlayParameters fails.
BT709 xvYCC is not supported. ValidateOverlayParameters fails.
BT601 xvYCC is not supported. ValidateOverlayParameters fails.
Invalid adapter specified. CheckDeviceMultiSampleType fails.
Invalid device specified to CheckDeviceMultiSampleType
D3DFMT_UNKNOWN is not a valid format. CheckDeviceMultiSampleType fails.
Invalid sample type specified. CheckDeviceMultiSampleType fails.
Invalid adapter specified. CheckDeviceFormatConversion fails.
D3DFMT_UNKNOWN is not a valid format. CheckDeviceFormatConversion fails.
Invalid adapter specified. GetDeviceCaps fails.
CalibrateGammaRamp
Invalid initialization function specified. RegisterSoftwareDevice fails.
A software device is already registered.
No display devices are available.
RegisterSoftwareDevice fails
Exclusive Mode has been taken by other app or other device on the same adapter.
GetMonitorInfo failed inside CEnum::GetAllFrontBuffers
CreateOffscreenPlainSurface failed inside CEnum::GetAllFrontBuffers
GetFrontBufferData failed inside CEnum::GetAllFrontBuffers
LockRect failed inside CEnum::GetAllFrontBuffers
BitBlt failed inside CEnum::GetAllFrontBuffers
CreateDCFromMemory failed inside CEnum::GetAllFrontBuffers
OsThunkDDISetQueuedLimit failed in D3D9SetMaxFrameLatency
UMD failed Flush call in D3D9SetSchedulingPriority
OsThunkDDISetContextSchedulingPriority failed in D3D9SetSchedulingPriority
UMD failed Flush call in D3D9GetSchedulingPriority
OsThunkDDIGetDeviceSchedulingPriority failed in D3D9GetSchedulingPriority
OsThunkDDIGetDeviceState failed in D3D9GetPresentStats
OsThunkDDIRender failed in RenderCB
OsThunkDDIGetDisplayModeList failed in GetDisplayModeList
Out of memory in GetDisplayModeList
Out of memory in GetMultisampleMethodListCB
OsThunkDDIGetMultisampleMethodList failed in GetMultisampleMethodListCB
OsThunkDDILock failed in LockCB
OsThunkDDICreateAllocation failed in AllocateCB
Out of memory in QueryResidencyCB
OsThunkDDIQueryAdapterInfo failed in QueryAdapterInfoCB
OsThunkDDIQueryAdapterInfo failed in QueryAdapterInfoCB2
OsThunkDDIEscape failed in EscapeCB
Trying to destroy device default context
UMD failed to provide WDDM2.1 synchronization DDIs pfnAcquireResource and pfnReleaseResource.
Out of memory allocating surface memory while lost
Reporting OUTOFVIDMEMORY in legacy memory management mode
ReleaseProcessVidPnSourceOwnersAndRetry
OsThunkDDISetVidPnSourceOwner failed in D3D9SetVidPnSourceOwner
UMD failed Flush call in D3D9SetDisplayModeLH
EnumDisplaySettings failed
Display mode is filtered and is not current. User might not be able to see anything.
UMD failed SetDisplayMode call in D3D9SetDisplayModeLH
Locking emulated Gdi primary in DdLockLH
UMD failed LockAsync for a secondary lock (i.e. multiple locks before unlock) in DdLockLH.
UMD failed Lock in DdLockLH
UMD failed Unlock call in DdUnlockLH
DwmDxGetWindowSharedSurface failed in DdBltLH
Unexpected DWM return code.
Failed to allocate surf memory to open a shared surface for redirection
UMD failed Flush in DdBltLH
UMD failed ColorFill call in DdBltLH
Failed to adjust Present Limit
UMD modified back buffer multiplicity, but is not LDA.
UMD failed Present call in DdBltLH
Cannot present protected content via Blt.  Present fails.
UMD failed Blt call in DdBltLH
UMD failed Flush call in DdBltLH
UMD failed Present call in DdFlipLH
UMD failed Flush call in DdFlipLH
OsThunkDDISetGammaRamp failed in DdSetGammaRampLH
OsThunkDDIGetScanLine failed in DdGetScanLineLH
UMD failed GetCaps call in DXVAGetGuidsLH
Too many DXVA GUIDs specified in DXVAGetGuidsLH
Out of memory in DXVAGetGuidsLH
Too many DXVA extension GUIDs specified in DXVAGetGuidsLH
UMD returned too many Formats in DXVAGetUncompressedFormatsLH
Out of memory in DXVAGetUncompressedFormatsLH
UMD failed GetCaps call in DXVAGetUncompressedFormatsLH
Failure in DXVAGetCompressedBufferInfoLH
Out of memory in DXVACreateLH
UMD failed GetCaps call in DXVACreateLH
UMD reported too many extension GUIDs in DXVACreateLH
UMD failed CreateVideoProcessDevice in DXVACreateLH
UMD failed CreateExtensionDevice in DXVACreateLH
UMD failed Destroy call in DXVADestroyLH
DXVA1 decoder called Execute without prior locking the configuration
UMD failed DecodeExecute call in DecodeExecute
UMD failed DestroyDecodeDevice call in CreateDecodeDevice
Driver succeeded CreateDecodeDevice but failed to return a handle
UMD failed CreateDecodeDevice call in CreateDecodeDevice
DXVA1 decoder called BeginFrame without prior locking the configuration
UMD failed call in DXVABeginFrameLH
DXVA1 decoder called EndFrame without prior locking the configuration
UMD failed call in DXVAEndFrameLH
NumConfigs == 0 in ConfigureDXVADecode
NumConfigs too large in ConfigureDXVADecode
Out of memory in ConfigureDXVADecode
UMD failed GetCaps call in ConfigureDXVADecode
DXVA1 decoder called Execute by extension function without prior locking the configuration
Out of memory in DecodeExtensionExecute
UMD failed DecodeExtensionExecute call in DecodeExtensionExecute
Out of memory in DXVAExecuteLH
UMD failed GetCaps call in DXVAExecuteLH
UMD failed SetVideoProcessBlt call in DXVAExecuteLH
UMD failed SetVideoProcessRenderTarget call in DXVAExecuteLH
UMD failed VideoProcessBeginFrame call in DXVAExecuteLH
UMD failed ExtensionExecute call in DXVAExecuteLH
UMD failed GetCaps call in GetDecodeGuidCountLH
UMD failed GetCaps call in GetDecodeGuidsLH
UMD failed GetCaps call in GetDecodeRenderTargetFormatCountLH
pData->Count too large in GetDecodeRenderTargetFormatsLH
UMD failed GetCaps call in GetDecodeRenderTargetFormatsLH
UMD failed GetCaps call in GetVideoProcessorRenderTargetFormatCountLH
UMD failed GetCaps call in GetVideoProcessorRenderTargetFormatsLH
pData->Count too large in GetVideoProcessorRenderTargetFormatsLH
UMD failed GetCaps call in GetVideoProcessorSubStreamFormatCountLH
UMD failed GetCaps call in GetVideoProcessorSubStreamFormatsLH
pData->Count too large in GetVideoProcessorSubStreamFormatsLH
UMD failed GetCaps call in GetDecodeCompressedBufferCountLH
UMD failed GetCaps call in GetDecodeCompressedBuffersLH
UMD failed GetCaps call in GetDecodeConfigurationCountLH
UMD failed GetCaps call in GetDecodeConfigurationsLH
UMD failed CreateDecodeDevice call in CreateDecodeDeviceLH
UMD failed GetCaps call in GetVideoProcessorDeviceGuidCountLH
UMD failed GetCaps call in GetVideoProcessorDeviceGuidsLH
UMD failed GetCaps call in GetVideoProcessorCapsLH
UMD failed GetCaps call in GetProcAmpRangeLH
UMD failed GetCaps call in GetFilterPropertyRangeLH
UMD failed CreateVideoProcessDevice call in CreateVideoProcessDeviceLH
UMD failed GetCaps call in GetExtensionGuidCountLH
UMD failed GetCaps call in GetExtensionGuidsLH
UMD failed GetCaps call in GetDXVAExtensionCapsLH
UMD failed CreateExtensionDevice call in CreateDXVAExtensionDeviceLH
UMD failed DecodeBeginFrame call in DecodeBeginFrameLH
UMD failed DecodeEndFrame call in DecodeEndFrameLH
UMD failed SetDecodeRenderTarget call in DecodeSetRenderTargetLH
Out of memory in DecodeExecuteLH
UMD failed DecodeExtensionExecute call in DecodeExecuteLH
UMD failed DecodeExecute call in DecodeExecuteLH
UMD failed DestroyDecodeDevice call in DecodeDestroyLH
UMD failed VideoProcessBeginFrame call in VideoProcessBeginFrameLH
UMD failed VideoProcessEndFrame call in VideoProcessEndFrameLH
UMD failed SetVideoProcessRenderTarget call in VideoProcessSetRenderTargetLH
Out of memory in VideoProcessBltLH
UMD failed VideoProcessBlt call in VideoProcessBltLH
UMD failed VideoProcessDestroy call in VideoProcessDestroyLH
UMD failed ExtensionExecute call in DXVAExtensionExecuteLH
UMD failed DestroyExtensionDevice call in DXVAExtensionDestroyLH
UMD failed GetCaptureAllocationHandle call in GetCaptureAllocationHandleLH
UMD failed CaptureToSysMem call in VideoVidToSysBltLH
UMD failed GetCaps call in GetVPDevCapsLH
pData->Count too large in GetVPOutputFormatsLH
UMD failed GetCaps call in GetVPOutputFormatsLH
pData->Count too large in GetVPInputFormatsLH
UMD failed GetCaps call in GetVPInputFormatsLH
pData->Count too large in GetVPCapsLH
UMD failed GetCaps call in GetVPCapsLH
pData->Count too large in GetVPCustomRatesLH
UMD failed GetCaps call in GetVPCustomRatesLH
UMD failed GetCaps call in GetVPFilterRangeLH
UMD failed CreateVideoProcessor call in CreateVideoProcessorLH
UMD failed SetVideoProcessBltState call in SetVideoProcessBltStateLH
UMD failed GetVideoProcessBltStatePrivate call in GetVideoProcessBltStatePrivateLH
UMD failed SetVideoProcessStreamState call in SetVideoProcessStreamStateLH
UMD failed GetVideoProcessStreamStatePrivate call in GetVideoProcessStreamStatePrivateLH
UMD failed VideoProcessBltHD call in VideoProcessBltHDLH
UMD failed DestroyVideoProcessor call in DestroyVideoProcessorLH
UMD failed GetCaps call in GetDriverInfo2LH
UMD failed GetCaps call in CanRestoreNowLH
Out of memory in CanRestoreNowLH
UMD failed Flush call in D3D9ResetDevice
Error creating new device in D3D9ResetDevice
Out of memory in D3D9ResetDevice
UMD failed CreateResource call in D3D9ResetDevice
UMD failed pfnRename in HandleLockAsync
UMD failed Flush call in WaitForQueuedPresent
UMD failed Present call in D3D9PresentOverlay
UMD failed Flush call in D3D9PresentOverlay
Cannot present protected content because fullscreen exclusive mode or an overlay is required.  Present fails.
Cannot present protected content because an RDP driver being active.  Present fails.
UMD failed GetCaps call to get the authenticated channel certificate size
UMD failed GetCaps call to get the authenticated channel certificate
UMD failed AuthenticatedChannelKeyExchange call
UMD failed QueryAuthenticatedChannel call
UMD failed ConfigureAuthenticatedChannel call
Driver reported content protection caps without populating the function table
Driver reported session key refresh cap without populating the function table
Driver reported encrypted readback cap without populating the function table
Driver reported encrypted readback key cap without populating the function table
UMD failed CryptoSessionKeyExchange call
IsWow64Process
Wow64EnableWow64FsRedirection
r`+s:
*+/%0BWN
r?w}I
wG3F 
9;clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\dllmain.c
Could not create all necessary mutexes, exiting.
/k@Z>
jXVEPG?bC
Lost due to display uniqueness change
MemAlloc failure in GetSurfaceHandle(). Can't create new texture/surface/buffer.
MemAlloc failure in GetSurfaceHandle(). Can't create new texture/surface/buffer
Kernel failed registration of sys-mem object; out of system-memory condition
Driver not handled DP2
GetDC failed. Unable to accelerate Present.
CreateRectRgn failed. Unable to accelerate Present.
GetRandomRgn failed. Unable to accelerate Present.
GetRegionData failed. Unable to accelerate Present.
Unable to present with invalid source RECT
Unable to present with invalid destionation RECT
MemAlloc fail to allocate pDstDirtyRegion, out of memory
Get EXTENDEDCAPS from the driver failed
Invalid ppBackbuffer parameter passed to GetBackBuffer
GetBackBuffer failed due to Device being lost
Invalid iBackBuffer parameter passed to GetBackBuffer
Current device doesn't support D3DCAPS_READ_SCANLINE functionality. GetRasterStatus fails.
Device failed GetScanline. GetRasterStatus fails
Device failed GetScanline. GetRasterStatus fails.
PID=%d: Adapter %d FPS = %.3f
Failed to flip to extended primary surface
Failed to flip from extended primary surface
The specified mode is unsupported. CreateDevice/Reset Fails
Display Mode not supported by this device type. Use CheckDeviceType(X, X, <Desired fullscreen format>). CreateDevice/Reset Fails
Display mode is unsupported
PresentStats is not enabled on this device. GetLastPresentCount fails.
PresentStats is not enabled on this device. GetPresentStats fails.
Unable to override the overlay device window. PresentOverlay fails.
Overlay stretching is unsupported. PresentOverlay fails.
The overlay display size is too big. PresentOverlay fails.
Empty display rect in UpdateFullscreenPresentInfo
GetWindowInfo failed or returned empty rect in UpdateFullscreenPresentInfo
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\d3dobj.hpp
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\surface.hpp
Discardable Z/Stencil cannot be lockable.
DDraw and Direct3D are not supported in less than 8bpp modes. Creating Device fails.
Could not create driver, CreateDC failed! Creating Device fails.
Insufficient system memory! Creating Device fails. 
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\dwinproc.cpp
Could not get exclusive mode when we thought we could
Unable to restore to original desktop mode
GetMonitorInfo failed inside CEnum::GetDesktopRect
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\overlay.cpp
Invalid adapter specified. CheckDeviceOverlayType fails.
Invalid device specified to CheckDeviceOverlayType.
Invalid pOverlayCaps parameter specified for CheckDeviceOverlayType.
Unable to get the current display mode. CheckDeviceOverlayType fails.
Invalid pMode parameter specified for CheckDeviceOverlayType.
Overlay cap is not supported.  CheckDeviceOverlayType fails.
System\CurrentControlSet\Control\Terminal Server
RDPVGSInstalled
clientcore\windows\DirectX\dxg\Inactive\misc\pixel.cpp
Invalid Rect: zero-area.
pRect doesn't fit inside the surface
pRect.left must be multiple of 8 for D3DFMF_A1 surfaces
pRect.width must be multiple of 8 for D3DFMF_A1 surfaces
Rects for DXT surfaces must be on 4x4 boundaries
Rects for 4:2:0 YUV surfaces must be on 2x2 boundaries
Rects for 4:2:2 YUV surfaces must be on even horizontal boundaries
Invalid Box passed: non-positive volume.
Box doesn't fit inside the volume
Boxes for DXT volumes must be on 4x4 boundaries
Final Release for a device can only be called from the thread that the device was created from.
No Swap Chain present; CreateAdditionalSwapChain fails
Invalid backbuffer format specified. CreateAdditionalSwapChain fails
Neither hDeviceWindow nor Focus window specified. CreateAdditionalSwapChain fails
Out of memory creating swap chain. CreateAdditionalSwapChain fails
Failure initializing swap chain. CreateAdditionalSwapChain fails
Failure caching created explicit swap chain. CreateAdditionalSwapChain fails
Can't Create Additional SwapChain with fullscreen device
Out of memory extended array tracking explicit swap chains. CacheExplicitSwapChain fails
iSwapChainOrdinal is out of range
Invalid parameter for pCursorBitmap
Cursor Surface wasn't allocated with this Device. SetCursorProperties fails
The cursor bitmap must be lockable.  SetCursorProperties fails.
Invalid Format for pCursorBitmap. Must be D3DFMT_A8R8G8B8.
Failed to Initialize Cursor: Width must be a power of 2.
Failed to Initialize Cursor: Height must be a power of 2.
Cursor xHotSpot must be smaller than its width.
Cursor yHotSpot must be smaller than its height.
Cursor width must be smaller than all display widths.
Cursor height must be smaller than all display heights.
Device is lost. SetCursorProperties does nothing.
Device is lost. SetCursorPosition does nothing.
Device is lost. ShowCursor does nothing.
SetDialogBoxMode can't be called during in-scene.
SetDialogBoxMode can not be used with D3DCREATE_ADAPTERGROUP_DEVICE
SetDialogBoxMode can not be used with non-GDI device
To use PresentEx call Device::QueryInterface(IID_IDirect3DDevice9Ex)
Invalid D3DGAMMARAMP pointer. SetGammaRamp ignored.
No Swap Chain present; SetGammaRamp fails
Invalid D3DGAMMARAMP pointer. GetGammaRamp ignored
No Swap Chain present; GetGammaRamp fails
No Swap Chain present; GetBackBuffer fails
No Swap Chain present; Present fails
Invalid pointer specified. GetDirect3D fails.
SrcSurface was not allocated with this Device. UpdateSurface fails.
DstSurface was not allocated with this Device. UpdateSurface fails.
Destination surface is read only. UpdateSurface failed.
Source for UpdateSurface is already Locked. UpdateSurface failed.
Destination for UpdateSurface is already Locked. UpdateSurface failed.
Source and dest surfaces are different formats. UpdateSurface fails
UpdateSurface for Z/Stencil is only supported between a LOCKABLE in POOL_SYSTEMMEM and a non-LOCKABLE format. UpdateSurface fails.
The destination surface must be created using D3DPOOL_DEFAULT. UpdateSurface fails.
The source surface must be created using D3DPOOL_SYSTEMMEM. UpdateSurface fails.
UpdateSurface does not support multisampled surfaces.  UpdateSurface fails.
The source surface cannot be a render target.  UpdateSurface fails.
Invalid source rect specified. UpdateSurface failed
Invalid dest rect specified. UpdateSurface failed
Invalid destination surface interface specified. GetRenderTargetData fails
Dest surface was not allocated with this Device. GetRenderTargetData fails.
The destination surface must be a texture or an offscreen plain surface.  GetRenderTargetData fails
The destination surface must be created using D3DPOOL_SYSTEMMEM.  GetRenderTargetData fails
Invalid source surface interface specified. GetRenderTargetData fails
Source surface was not allocated with this Device. GetRenderTargetData fails.
The source surface must be a render target.  GetRenderTargetData fails
The render target must be created using D3DPOOL_DEFAULT.  GetRenderTargetData fails
RenderTarget is Locked. GetRenderTargetData fails.
Destination surface is Locked. GetRenderTargetData fails.
The source format is different than the dest format.  GetRenderTargetData fails
The surfaces are not the same size. GetRenderTargetData fails
Cannot perform copies from multisampled render targets. GetRenderTargetData fails
Could not lock sys-mem destination for UpdateSurface?
Failing copy from video-memory surface to system-memory or managed surface because device is lost. UpdateSurface returns D3DERR_DEVICELOST
Unable to update surface due to driver failure.
Format not understood - cannot perform the copy. UpdateSurface fails.
SrcTexture was not created with this Device. UpdateTexture fails
DstTexture  was not created with this Device. UpdateTexture fails
Cannot update from an autogenerated mipmap to a non-autogenerated one.
Cannot update from a multi-level non-autogenerated mipmap to an autogenerated one.
Source Texture for UpdateTexture must be in POOL_SYSTEMMEM.
Destination Texture for UpdateTexture must be in POOL_DEFAULT.
UpdateTexture failed to copy
D3DFMT_UNKNOWN is not a valid format. CreateTexture fails.
D3DPOOL_MANAGED is not valid with IDirect3DDevice9Ex
Failure trying to create a texture
D3DFMT_UNKNOWN is not a valid format. CreateVolumeTexture fails.
Failure trying to create a volume texture
D3DFMT_UNKNOWN is not a valid format. CreateCubeTexture fails.
Failure trying to create cubemap
D3DFMT_UNKNOWN is not a valid format. CreateRenderTarget fails.
Failure trying to create render-target
Invalid usage flag specified for CreateRenderTargetEx.
D3DFMT_UNKNOWN is not a valid format. CreateRenderTargetEx fails.
D3DFMT_UNKNOWN is not a valid format. CreateDepthStencilSurface fails.
Failure trying to create zstencil surface
Invalid usage flag specified for CreateDepthStencilSurfaceEx.
D3DFMT_UNKNOWN is not a valid format. CreateDepthStencilSurfaceEx fails.
Invalid usage flags. CreateVertexBuffer fails.
Failure trying to create Vertex Buffer
Invalid usage flags. CreateIndexBuffer fails
Failure trying to create indexbuffer
The specified adapter does not support a D3D9 hardware device
Not enough memory to create resource manager
CreateDevice failed, because it is called from DllMain.
Exception encountered calling InitializeCriticalSection in CBaseDevice::Init!
Failed to initialize primary swapchain
AutoDepthStencilFormat does not match BackBufferFormat because the current Device requires the bitdepth of the zbuffer to match the render-target. See CheckDepthStencilMatch documentation. CreateDevice fails.
Failure trying to create automatic zstencil surface. CreateDevice Failed.
Invalid pointer to D3DCAPS9 specified. GetDeviceCaps fails
No Swap Chain present; GetFrontBufferData fails
The surface cannot be used as render target because it is a part of fullscreen swap chain and not the back buffer 0.
D3DPOOL_DEFAULT must be set for surfaces passed to StretchRect and ColorFill
Destination textures passed to StretchRect or ColorFill must have D3DUSAGE_RENDERTARGET set
Source textures passed to StretchRect must have D3DUSAGE_RENDERTARGET set for pre DX9 drivers
Depth/stencil textures cannot be used with StretchRect or ColorFill
Invalid surface passed to StretchRect or Colorfill
Invalid source surface interface specified. StretchRect fails
Invalid filter specified (must be D3DTEXF_NONE, D3DTEXF_POINT, or D3DTEXF_LINEAR). StretchRect fails
SrcSurface was not allocated with this Device. StretchRect fails.
Invalid dest surface interface specified. StretchRect fails
DstSurface was not allocated with this Device. StretchRect fails.
StretchRect failed; Destination surface is read only.
Source surface is Locked. StretchRect fails.
Destination surface is Locked. StretchRect fails.
Same surface specified for both Src and Dest. StretchRect fails
Unable to src format to dest format. StretchRect fails
Invalid source rectangle specified. StretchRect failed.
Invalid dest rectangle specified. StretchRect failed.
Invalid source rect specified. StretchRect failed
Invalid dest rect specified. StretchRect failed
Driver does not support D3DTEXF_POINT when stretching.  StretchRect fails
Driver does not support D3DTEXF_POINT when shrinking.  StretchRect fails
Driver does not support D3DTEXF_POINT.  StretchRect fails
Driver does not support D3DTEXF_LINEAR when stretching.  StretchRect fails
Driver does not support D3DTEXF_LINEAR when shrinking.  StretchRect fails
Driver does not support D3DTEXF_LINEAR.  StretchRect fails
StretchRect cannot be called for a Depth/Stencil surface while in a scene. StretchRect fails
Both surfaces dest must be depth/stencil if either one is. StretchRect fails
Format conversion not supported for depth/stencil. StretchRect fails
Unable to stretch depth/stencil surfaces. StretchRects fails
Subrects are not allowed for depth/stencil surfaces. StretchRects fails
StretchRects does not support discardable depth/stencil surfaces. StretchRects fails
This driver does not support depth/stencil copies. StretchRects fails
Unable to stretch DXT surfaces. StretchRects fails
If the destination surface is an offscreen plain surface, the source must also be an offscreen plain.  StretchRect failed
Unable to stretch from an offscreen plain to another offscreen plain.  StretchRect failed
Drivers older than DX9 cannot stretch from an RT texture to anything.  StretchRect failed
Invalid surface interface specified. ColorFill fails
Surface was not allocated with this Device. ColorFill fails.
ColorFill failed; surface is read only.
Surface is Locked. ColorFill fails.
Invalid rectangle specified. ColorFill failed.
Invalid rect specified. ColorFill failed
DXT surfaces require 4 pixel alignment. ColorFill fails
Depth/Stencil surfaces are not supported by ColorFill. ColorFill fails
D3DFMT_UNKNOWN is not a valid format. CreateOffscreenPlainSurface fails.
CreateOffscreenPlainSurface: Pool must be D3DPOOL_SCRATCH, D3DPOOL_SYSTEMMEM or D3DPOOL_DEFAULT.
This format is not supported for offscreen plain surfaces. CreateOffscreenPlainSurface fails.
D3DFMT_BINARYBUFFER requires Height set to one. CreateOffscreenPlainSurface fails.
Failure trying to create offscreen plain surface
DXVA-HD requires IDirect3DDevice9Ex
Driver doesn't export DXVA-HD caps
To use WaitForVBlank call Device::QueryInterface(IID_IDirect3DDevice9Ex) first
To use GetGPUThreadPriority call Device::QueryInterface(IID_IDirect3DDevice9Ex) first
To use SetGPUThreadPriority call Device::QueryInterface(IID_IDirect3DDevice9Ex) first
Not available on non-LDDM devices.
Max latency is the same as the maximum number of back buffers,
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\video.cpp
D3DFMT_UNKNOWN is not a valid format. CreateSurface fails.
Invalid Usage flag specified. CreateSurface fails.
Invalid pool specified. CreateSurface failed.
This format is not supported. CreateSurface fails.
Failure trying to create surface
Invalid pointer specified for number of compressed buffers. GetDXVACompressedBufferInfo fails.
Invalid pointer specified for uncompressed data. GetDXVACompressedBufferInfo fails.
Invalid number of compressed buffers specified: GetDXVACompressedBufferInfo fails
Invalid GUID pointer specified. GetDXVACompressedBufferInfo fails.
Invalid pointer specified for number of guids. GetDXVAGuids fails.
Invalid number of guids specified: GetDXVAGuids fails
Invalid pointer specified for number of formats. GetUncompressedDXVAFormats fails.
Invalid number of formats specified. GetUncompressedDXVAFormats fails.
Invalid GUID pointer specified. GetUncompressedDXVAFormats fails.
Invalid pointer specified for uncompressed data. GetDXVAInternalInfo fails.
Invalid pointer specified for memory usage. GetDXVAInternalInfo fails.
Invalid guid pointer specified. GetDXVAInternalInfo fails.
Invalid pointer specified for DXVA interface. CreateDXVADevice fails.
Invalid pointer specified for uncompressed data. CreateDXVADevice fails.
Invalid guid pointer specified. CreateDXVADevice fails.
Invalid data pointer specified. CreateDXVADevice fails.
Unable to allocate system memory. CreateDXVADevice fails.
Unsupported guid specified. CreateDXVADevice fails.
Surface was not allocated with this Device. BeginFrame fails.
Invalid input data pointer specified. BeginFrame fails.
Invalid output size pointer specified. BeginFrame fails.
Invalid output data pointer specified. BeginFrame fails.
Invalid input data pointer specified. EndFrame fails.
Invalid input data pointer specified. Execute fails.
Invalid output data pointer specified. Execute fails.
Invalid buffer array specified. Execute fails.
Insufficient system memory. Execute fails
Bad surface interface specified. Execute fails
Surface was not allocated with this Device. Execute fails.
Surface was not allocated with this Device. QueryStatus fails.
Invalid flags specified. QueryStatus fails
Unsupported Interface identifier passed to QueryInterface for IDirect3DDXVA2Container9
Capture buffers cannot have backbuffers. CreateSurface failed.
Invalid source surface interface specified. VidToSysBlt fails
Source surface was not allocated with this Device. VidToSysBlt fails.
The source surface must be a render target.  VidToSysBlt fails
The source surface must be created using D3DPOOL_DEFAULT.  VidToSysBlt fails
Invalid destination surface interface specified. VidToSysBlt fails
Destination surface was not allocated with this Device. VidToSysBlt fails.
The destination surface must be an offscreen plain.  VidToSysBlt fails
The destination surface must be created using D3DPOOL_SYSTEMMEM.  VidToSysBlt fails
Source surface is Locked. VidToSysBlt fails.
Destination surface is Locked. VidToSysBlt fails.
The source format is different than the dest format.  VidToSysBlt fails
The source rectangle is invalid.  VidToSysBlt fails
The destination rectangle is invalid.  VidToSysBlt fails
Shrinking or stretching is not allowed. VidToSysBlt fails
Cannot perform copies from multisampled render targets. VidToSysBlt fails
Failure trying to create a decode device
Failure trying to create a video process device
Failure trying to create a DXVA extension device
Unsupported Interface identifier passed to QueryInterface for IDirect3DDecodeDevice9
Unsupported Interface identifier passed to QueryInterface for IDirect3DVideoProcessDevice9
DXVA2_VIDEOPROCESSBLT::NumSrcSurfaces is too large. It must be less than or equal to MAX_DEINTERLACE_SURFACES.  VideoProcessBlt fails.
Unsupported Interface identifier passed to QueryInterface for IDirect3DDXVAExtensionDevice9
Invalid pointer specified for DXVA2_EXTENSIONEXECUTE. ExtensionExecute fails.
Surface was not allocated with this Device.
Unsupported Interface identifier passed to QueryInterface for IDirect3DCaptureContainer9
cclientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\swddi.c
Software Driver failed creation of surface
Software Driver doesn't support creation of surfaces
D3D9GetSWInfo
D3D9GetSWInfoEx
Invalid flags to SetPrivateData
Invalid size for IUnknown to SetPrivateData
SetPrivateData failed a memory allocation
FreePrivateData called but failed to find a match
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\surface.cpp
Device is not capable of sharing resource. CreateRenderTarget/CreateDepthStencil fails.
Multisample surfaces are not shareable.  CreateRenderTarget/CreateDepthStencil fails.
DXT Formats require width/height to be a multiple of 4. CreateRenderTarget/CreateDepthStencil failed.
Width/Height must be non-zero. CreateRenderTarget/CreateDepthStencil failed
The format is not supported by this device. CreateRenderTarget/CreateDepthStencil failed
Specified usage can only be used when creating a shared surface
Multi-Sampled render-targets are not lockable. CreateRenderTarget failed
Multi-Sampled Depth Stencil buffers are not lockable. CreateDepthStencil failed
Out of Memory creating surface. CreateRenderTarget/CreateDepthStencil failed
Error during initialization of surface. CreateRenderTarget/CreateDepthStencil failed
Device is not capable of sharing resource. CreateOffscreenPlainSurface fails.
Source of shared surface must be in D3DPOOL_SYSTEMMEM. CreateOffscreenPlainSurface fails.
Source of shared offscreen plain surface doesn't have the same size
Source of shared offscreen plain surface doesn't have the same format
*pSharedHandle must be a valid pointer to create such D3DPOOL_SYSTEMMEM texture. CreateOffscreenPlainSurface fails.
Only support such D3DPOOL_SYSTEMMEM surface with zero backbuffers. CreateOffscreenPlainSurface fails.
Resource must be in D3DPOOL_DEFAULT or D3DPOOL_SYSTEMMEM if pSharedHandle is not NULL. CreateOffscreenPlainSurface fails.
This Z format is not supported for CreateSurface
DXT Formats require width/height to be a multiple of 4. CreateSurface failed.
Width/Height must be non-zero. CreateSurface failed.
Invalid usage flags specified. CreateSurface failed.
Width and Height specified imply surface larger than 2GB. CreateSurface failed.
Out of memory allocating memory for surfaces.
Driver failed CreateSurface call
LockRect failed on a surface; surface was already locked for an ImageSurface
UnlockRect failed on a mip level; surface wasn't locked for an ImageSurface
Driver failed unlock call
Unsupported multisample type requested. CreateRenderTarget/CreateDepthStencil failed.
Failed to create driver surface
Failed to open a read-only share. CreateRenderTarget/CreateDepthStencil failed.
LockRect for a driver-allocated Surface failed
D3DLOCK_READONLY is not allowed with D3DLOCK_DISCARD
Invalid dwFlags parameter passed to LockRect
LockRect failed on a mip level; surface is read only.
LockRect failed on a surface; surface was already locked.
Error trying to lock driver surface
UnlockRect failed; surface wasn't locked.
SetPriority called on a non-managed surface. SetPriority returns zero.
GetPriority called on a non-managed surface. GetPriority returns zero.
PreLoad called on non-managed surface. Ignored.
SetPriority not valid on contained surfaces. Call the parent object's method.
GetPriority not valid on contained surfaces. Call the parent object's method.
PreLoad not valid on contained surfaces. Call the parent object's method.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\dxcursor.cpp
Destroy Failed to Destroy Old hwcursor Icon
Width*Height overflowed. Unable to create Cursor
Out of Memory when allocating pMonoMask. Unable to create Cursor
Width*Height*4 overflowed. Unable to create Cursor
Out of Memory when allocating pColorMask. Unable to CreateCursor
Failed to lock pCursorBitmap, it must be lockable. CreateCursor failed
Driver surface failed to unlock pCursorBitmap
Failed to create screen DC
Failed to create DC
Failed to create AND mask
Failed to Destroy Old hwcursor Icon
Cursor not available for this device
Failed to lock pCursorBitmap surface; Surface must be lockable.
Failed to lock driver cursor surface.
Driver surface failed to unlock driver cursor surface
Failed to Hide Cursor.
Failed to CursorInit.
Invalid surface specified in ConvertSurfaceFromAPItoDDI
Unsupported IID specified in IDirect3DDXVAHDDevice9::QueryInterface
Failed to to create a video processor
Failed to to destroy a video processor
Unsupported IID specified in IDirect3DDXVAHDVideoProcessor9::QueryInterface
Invalid reference frames specified in VideoProcessBltHD
Invalid output surface specified in VideoProcessBltHD
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\cprotect.cpp
Unsupported Interface identifier passed to QueryInterface for IDirect3DDevice9Video
Invalid ChannelHandle pointer specified.  CreateAuthenticatedChannel fails.
Invalid output interface pointer specified.  CreateAuthenticatedChannel fails.
Failure trying to create the athenticated channel
Invalid output interface pointer specified.  CreateCryptoSession fails.
Failure trying to create the crypto session
Unsupported Interface identifier passed to QueryInterface for IDirect3DAuthenticatedChannel9
Unsupported channel type.  GetCertificateSize fails.
Invalid pointer.  GetCertificateSize fails.
Invalid pointer.  GetCertificate fails.
Invalid certificate size.  GetCertificate fails.
Unsupported channel type.  Initialize fails.
Invalid input pointer specified. Query fails.
Invalid output pointer specified. Query fails.
Invalid input size specified. Query fails.
Invalid output size specified. Query fails.
Invalid input pointer specified. Configure fails.
Invalid output pointer specified. Configure fails.
Invalid input size specified. Configure fails.
Unsupported Interface identifier passed to QueryInterface for IDirect3DCryptoSession9
Invalid destination surface interface specified. EncryptionBlt fails
Dest surface was not allocated with this Device. EncryptionBlt fails.
The destination surface must be an offscreen plain surface.  EncryptionBlt fails
The destination surface must be created using D3DPOOL_SYSTEMMEM.  EncryptionBlt fails
Invalid source surface interface specified. EncryptionBlt fails
Source surface was not allocated with this Device. EncryptionBlt fails.
Source surface is Locked. EncryptionBlt fails.
Destination surface is Locked. EncryptionBlt fails.
The source format is different than the dest format.  EncryptionBlt fails
The surfaces are not the same size. EncryptionBlt fails
Cannot perform copies from multisampled render targets. EncryptionBlt fails
Invalid destination surface interface specified. DecryptionBlt fails
Dest surface was not allocated with this Device. DecryptionBlt fails.
Invalid destination surface type.  DecryptionBlt fails
Invalid source surface interface specified. DecryptionBlt fails
Source surface was not allocated with this Device. DecryptionBlt fails.
The source surface must be created using D3DPOOL_SYSTEMMEM.  DecryptionBlt fails
Source surface must be an offscreen plain surface.  DecryptionBlt fails
Source surface is Locked. DecryptionBlt fails.
Destination surface is Locked. DecryptionBlt fails.
The source format is different than the dest format.  DecryptionBlt fails
The surfaces are not the same size. DecryptionBlt fails
Cannot perform copies to multisampled render targets. DecryptionBlt fails
NULL surface pointer passed.  GetSurfacePitch fails.
NULL surface pitch pointer passed.  GetSurfacePitch fails.
Surface was not allocated with this Device. GetSurfacePitch fails.
NULL pointer passed.  StartSessionKeyRefresh fails.
Invalid size passed.  StartSessionKeyRefresh fails.
NULL key pointer passed.  GetEncryptionBltKey fails.
Invalid key size passed.  GetEncryptionBltKey fails.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\resource.cpp
Priority set on non-managed object. SetPriority returns zero.
Priority accessed on non-managed object. GetPriority returns zero.
Failed to allocate texture heap.
Failed to allocate memory to grow heap.
Max simultaneous textures not set. Forced to 1.
Out of memory allocating texture heap.
Texture does not have sufficient miplevels for current LOD. LOD set to GetLevelCount()-1.
No such texture found. Cannot evict textures used in current scene.
All textures in use, cannot evict texture.
All POOL_MANAGED resources in this device freed. No further video memory available.
Cannot create Vidmem or Driver managed VB/IB. Will ***NOT*** failover to Sysmem.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\mipmap.cpp
Device is not capable of sharing resource. CreateTexture fails.
Source of shared texture must be in D3DPOOL_SYSTEMMEM. CreateTexture fails.
Source of shared mipmap doesn't have the same size.
Source of shared mipmap doesn't have the same format.
Source of shared mipmap doesn't have enough levels for initialization.
*pSharedHandle must be a valid pointer to create such D3DPOOL_SYSTEMMEM texture. CreateTexture fails.
Only support such D3DPOOL_SYSTEMMEM texture with single mipmap level. CreateTexture fails.
Resource must be in D3DPOOL_DEFAULT or D3DPOOL_SYSTEMMEM if pSharedHandle is not NULL. CreateTexture fails.
Usage flag can only be used when creating a shared surface
Auto-generated mipmaps cannot be USAGE_DXVA
Auto-generated mipmaps need to set Levels to zero or one
Too many levels for mip-map of this size. CreateTexture failed.
No more than 32 levels are supported. CreateTexture failed
Device doesn't support mip-map textures; CreateTexture failed.
Device does not support non-pow2 width for texture
Device doesn't support non-pow2 width for multi-level texture
Device does not support non-pow2 height for texture. CreateTexture failed.
Device doesn't support non-pow2 height for multi-level texture. CreateTexture failed.
Device requires square textures only. CreateTexture failed.
Texture width for D3DFMT_A1 surfaces should be less than 8192. CreateTexture failed.
Texture height for D3DFMT_A1 surfaces should be less than 2048. CreateTexture failed.
Texture width for D3DFMT_A1 surfaces should be a multiple of 32
Textures with D3DFMT_A1 format cannot be mip-maps
Texture width is larger than what the device supports. CreateTexture failed.
Texture height is larger than what the device supports. CreateTexture failed.
Device doesn't support multi-level mipmaps. CreateTexture failed.
DXVA textures must be created with D3DPOOL_DEFAULT. CreateTexture failed.
DXT Formats require width/height to be a multiple of 4. CreateTexture failed.
Width and Height must be non-zero. CreateTexture failed.
Out of Memory creating texture. CreateTexture failed.
Error during initialization of texture. CreateTexture failed.
Width and Height imply mip map levels larger than 2GB.
Tried to create mip map chain larger than 2GB.
Out of memory allocating memory for mip-map levels.
Out of memory creating mipmap
Out of memory creating miplevel
Failed to open a read-only share with usage of RenderTaget or DepthStencil.
Failed to allocate mip-map object when copying
Invalid dwLOD passed to SetLOD; clamping to number-of-levels-minus-one.
LOD set on non-managed object
Illegal filter type
Filter type not supported (check texture filter caps)
GenerateMipSublevels called on non-autogenerated mipmap
Invalid level number passed GetLevelDesc of IDirect3DTexture9
Invalid level number passed GetSurfaceLevel of IDirect3DTexture9
Out of memory obtaining surface level
Invalid level number passed LockRect of IDirect3DTexture9
Invalid level number passed UnlockRect of IDirect3DTexture9
Source and Destination for UpdateTexture are not compatible. Since both have the same number of mip-levels; their widths must match.
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of mip-levels; the widths of the bottom-most levels of the source must match all the corresponding levels of the destination.
Source and Destination for UpdateTexture are not compatible. Since both have the same number of mip-levels; their heights must match.
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of mip-levels; the heights of the bottom-most levels of the source must match all the corresponding levels of the destination.
A Texture has been locked with D3DLOCK_NO_DIRTY_UPDATE but no call to AddDirtyRect was made before the texture was used. Hardware texture was not updated.
Destination MipMap is read only. UpdateTexture failed.
Failed to update texture; not clearing dirty state
AddDirtyRect for a Texture failed
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\mipvol.cpp
Device is not capable of sharing resource. CreateVolumeTexture fails.
Shared resource must be in D3DPOOL_DEFAULT. CreateVolumeTexture fails.
Source of shared texture must be in D3DPOOL_SYSTEMMEM. CreateVolumeTexture fails.
Source of shared mip volume doesn't have the same size.
Source of shared mip volume doesn't have the same format.
Source of shared mip volume doesn't have enough levels for initialization.
Invalid flag specified for volume texture creation.
No more than 32 levels are supported. CreateVolumeTexture failed
Too many levels for volume texture of this size.
Width must be power of two for mip-volumes
Height must be power of two for mip-volumes
Depth must be power of two for mip-volumes
Texture width is larger than what the device supports. CreateVolumeTexture fails
Texture height is larger than what the device supports. CreateVolumeTexture fails
Texture depth is larger than what the device supports. CreateVolumeTexture fails
Device doesn't support volume textures; creation failed.
Device doesn't support mipped volume textures; creation failed.
DXT Formats require width/height to multiples of 4. CreateVolumeTexture fails
Width/Height/Depth must be non-zero.  CreateVolumeTexture fails
Out of Memory creating mip-volume
Error during initialization of mip-volume
Error during initialization of texture. CreateVolumeTexture failed.
Tried to create volume larger than 2GB.
Out of memory allocating memory for mip-volume levels
Out of memory creating VolumeTexture
Out of memory creating volume level
Failed to allocate mip-volume object when copying
Invalid level number passed GetLevelDesc for a VolumeTexture
Invalid level number passed GetVolumeLevel
Out of memory obtaining volume level
Invalid level number passed LockBox
Invalid level number passed UnlockBox
Source and Destination for UpdateTexture are not compatible. Since both have the same number of levels; their widths must match.
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of levels; the widths of the bottom-most levels of the source must match all the corresponding levels of the destination.
Source and Destination for UpdateTexture are not compatible. Since both have the same number of levels; their heights must match.
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of levels; the heights of the bottom-most levels of the source must match all the corresponding levels of the destination.
Source and Destination for UpdateTexture are not compatible. Since both have the same number of levels; their depths must match.
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of levels; the depths of the bottom-most levels of the source must match all the corresponding levels of the destination.
A volume texture has been locked with D3DLOCK_NO_DIRTY_UPDATE but no call to AddDirtyBox was made before the texture was used. Hardware texture was not updated.
Destination MipVolume is read only. UpdateTexture failed.
Failed to update volume texture; not clearing dirty state
AddDirtyBox for a Volume Texture failed
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\cubemap.cpp
Device is not capable of sharing resource. CreateCubeTexture fails.
Shared resource must be in D3DPOOL_DEFAULT. CreateCubeTexture fails.
Source of shared texture must be in D3DPOOL_SYSTEMMEM. CreateCubeTexture fails.
Source of shared cubemap doesn't have the same size.
Source of shared cubemap doesn't have the same format.
Source of shared cubemap doesn't have enough levels for initialization.
No more than 32 levels are supported for a cubemap texture
Too many levels for Cube Texture of this size.
Device requires that edge must be power of two for cube-maps
Texture width is larger than what the device supports. Cube Texture creation fails.
Texture height is larger than what the device supports. Cube Texture creation fails.
Device doesn't support Cube Texture; Cube Texture creation failed.
Device doesn't support mipped cube textures; creation failed.
DXT Formats require edge to be a multiples of 4. Cube Texture creation fails.
Edge must be non-zero. Cube Texture creation fails.
Out of Memory creating cubemap
Error during initialization of cubemap
Error during initialization of texture. CreateCubeTexture failed.
Tried to create cubemap face mip chain larger than 2GB.
Tried to create cubemap larger than 2GB.
Out of memory creating cube map level
Failed to allocate cube-map object when copying
Invalid level number passed CCubeMap::GetLevelDesc
Invalid level number passed GetCubeMapSurface
Invalid face type passed GetCubeMapSurface
Invalid face type passed CCubeMap::LockRect
Invalid level number passed CCubeMap::LockRect
Invalid face type passed CCubeMap::UnlockRect
Invalid level number passed CCubeMap::UnlockRect
Source and Destination for UpdateTexture are not compatible. Since both have the same number of levels; their widths must match. UpdateTexture for CubeTexture fails
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of levels; the widths of the bottom-most levels of the source must match all the corresponding levels of the destination. UpdateTexture for CubeTexture fails
Source and Destination for UpdateTexture are not compatible. Since both have the same number of levels; their heights must match. UpdateTexture for CubeTexture fails
Source and Destination for UpdateTexture are not compatible. Since they have the different numbers of mip-levels; the heights of the bottom-most levels of the source must match all the corresponding levels of the destination. UpdateTexture for CubeTexture fails
A Cube Texture has been locked with D3DLOCK_NO_DIRTY_UPDATE but no call to AddDirtyRect was made before the texture was used. Hardware texture was not updated.
Destination Cubemap is read only. UpdateTexture failed.
Failed to update texture; not clearing dirty state for Cubemap
Invalid FaceType parameter to AddDirtyRect for Cubemap
AddDirtyRect for a Cube Texture failed
Vertex buffer cannot be of zero size
Vertex buffer pool should be default, managed or sysmem
D3DUSAGE_SOFTWAREPROCESSING can be set only when device is mixed or software mode. CreateVertexBuffer fails.
D3DUSAGE_DYNAMIC cannot be used with managed vertex buffers
Vertex buffer size needs to enough to hold one vertex
The driver cannot share this kind of Vertex Buffer
Cannot create Vidmem or Driver managed vertex buffer. Will ***NOT*** failover to Sysmem.
Cannot lock the destination buffer for initialization. CreateVertexBuffer fails.
Cannot lock the source buffer for initialization. CreateVertexBuffer fails.
Out of Memory creating vertex buffer
Driver vertex buffer failed to unlock
Driver failed to unlock vertex buffer
Driver managed vertex buffer failed to Unlock.
Failed to lock driver managed vertex buffer
Driver managed vertex buffer failed to recache Lock.
IndexBuffer must be in D3DFMT_INDEX16 or INDEX32 formats. CreateIndexBuffer fails.
Index buffer should be large enough to hold at least one index
Index buffer pool should be default or managed or sysmem
D3DUSAGE_SOFTWAREPROCESSING can be set only when device is mixed mode. CreateIndexBuffer fails.
D3DUSAGE_DYNAMIC cannot be used with managed index buffers
The driver cannot share this kind of Index Buffer
Cannot create Vidmem or Driver managed index buffer. Will ***NOT*** failover to Sysmem.
Cannot lock the destination buffer for initialization. CreateIndexBuffer fails.
Cannot lock the source buffer for initialization. CreateIndexBuffer fails.
Out of Memory creating index buffer
Failed to lock driver indexbuffer
Driver failed to unlock index buffer
Driver index buffer failed to unlock
Driver managed index buffer failed to Unlock.
Failed to lock driver managed index buffer
Driver managed index buffer failed to recache Lock.
PreLoad called on non-managed object
LOD accessed on non-managed object
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\mipsurf.cpp
LockRect failed on a mip level; surface was already locked.
Driver surface failed to unlock for a Level of a Texture
LockRect for a level of a Texture failed
D3DLOCK_DISCARD is allowed only with dynamic textures
D3DLOCK_DISCARD is allowed only on level 0 (the top mip level). DISCARD in this case will discard the entire mipmap.
Subrects not allowed with D3DLOCK_DISCARD
Invalid dwFlags parameter passed to LockRect for a Level of a Texture
LockRect failed on a mip level; surface was already locked for a Level of a Texture
Failed to lock driver mip-map surface
UnlockRect failed on a mip level; surface wasn't locked.
LockBox for a Volume fails
D3DLOCK_DISCARD is allowed only on level 0 (the top mip level). DISCARD in this case will discard the entire volume.
Subboxes not allowed with D3DLOCK_DISCARD
Invalid dwFlags parameter passed to LockBox for a level of a VolumeTexture
LockBox failed on a mip level; volume was already locked.
UnlockBox failed on a volume level; volume wasn't locked.
Driver volume failed to unlock
UnlockBox failed on a mip level; volume wasn't locked.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\cubesurf.cpp
LockRect failed on a cube map level; surface was already locked.
UnlockRect failed on a cube map level; surface wasn't locked.
Driver cube-map surface failed to unlock
LockRect for a level of a Cube Texture failed
D3DLOCK_DISCARD is allowed only on D3DCUBEMAP_FACE_POSITIVE_X and the top mip level. DISCARD in this case will discard the entire cubemap.
Invalid dwFlags parameter passed to LockRect for a Surface of a driver allocated Cubemap
LockRect failed on a Cube level; surface was already locked.
Failed to lock driver cube-map surface
UnlockRect failed on a driver-allocated Cube level; surface wasn't locked.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\buffer.cpp
Out Of Memory allocating vertex or index buffer
Device is not capable of sharing resource. CreateVertexBuffer/CreateIndexBuffer fails.
Shared resource must be in D3DPOOL_DEFAULT. CreateVertexBuffer/CreateIndexBuffer fails.
Source of shared buffer must be in D3DPOOL_SYSTEMMEM. CreateVertexBuffer/CreateIndexBuffer fails.
Source of shared buffer does not match the length/format/type of the created buffer. CreateVertexBuffer/CreateIndexBuffer fails.
Out of Memory creating command buffer
Error during initialization of command buffer
Failed to allocate command buffer
Failure creating command buffer
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\buffer.hpp
Lock failed for readonly buffer.
%s(%d) : 
(Statement %d) 
IDirect3DShaderValidator9::Begin called out of order. ::End must be called first.
IDirect3DShaderValidator9::Instruction called out of order. ::Begin must be called first.
IDirect3DShaderValidator9::Instruction called out of order. After end token there should be no more instructions.  Call ::End next.
IDirect3DShaderValidator9::Instruction called with NULL == pdwInst or 0 == cdw.
Bad version token.  DWORD count > 1 given. Expected DWORD count to be 1 for version token.
Bad version token.  It indicates neither a pixel shader nor a vertex shader.
Bad end token.  DWORD count > 1 given. Expected DWORD count to be 1 for end token.
IDirect3DShaderValidator9::End called out of order. Call to ::Begin, followed by calls to ::Instruction must occur first.
Shader missing end token.
Version token 0x%x does not represent a pixel shader.
Out of memory
Version token 0x%x does not represent a vertex shader.
Multiple dependent texture reads are disallowed (%s source param).  Texture read results can be used as an address for subsequent read, but the results from that read cannot be used as an address in yet another subsequent read.
%d different input registers (v#) read by instruction.  Max. different input registers readable per instruction is %d.
%d different texture registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
%d different temp registers (r#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different input registers (v#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different constant registers (c#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
%d different texture registers (t#) read over 2 co-issued instructions. Max. different register numbers from any one register type readable across co-issued instructions is %d.
Tex register t%d already declared.
t# registers must appear in sequence (i.e. t0 before t2 OK, but t1 before t0 not valid).
Cannot use tex* instruction after non-tex* instruction.
First source for cnd instruction must be 'r0.a'.
Maximum of 3 cmp instructions allowed.
Const declaration (def) must appear before other instructions.
Dest write mask must be .rgb, or .rgba (all) for dp3.
Maximum of 4 dp4 instructions allowed.
First arithmetic instruction cannot have co-issue ('+') set; there is no previous arithmetic instruction to pair with.
Cannot set co-issue ('+') on a texture instruction.  Co-issue only applies to arithmetic instructions.
(previous instruction) nop instruction cannot be co-issued.
nop instruction cannot be co-issued.
(previous instruction) dp4 instruction cannot be co-issued.
dp4 instruction cannot be co-issued.
Co-issued instructions cannot both be dot-product, since each require use of the color/vector pipeline to execute.
(previous instruction) Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used.
Dot-product needs color/vector pipeline to execute, so instruction co-issued with it cannot write to color components.
(previous instruction) Dot-product which writes alpha cannot co-issue, because both alpha and color/vector pipelines used by the dot product.
(previous instruction) Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instruction cannot write all components - must write either alpha or color.
Co-issued instructions cannot both write to the same components of a register.  Affected components: %s
Co-issued instructions cannot both write to color components.
Co-issued instructions cannot both write to alpha component.
r0 must be written by shader. Uninitialized component%s(*): %s
_dz(=_db) modifier may only be used at most 2 times in a shader.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first. Also: Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that an unfortunate effect of the phase marker earlier in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including the one noted here, are lost. In order to read alpha from an r# register after the phase marker, write to it first.
Read of uninitialized component%s(*) in %s%d: %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. In order to read blue again, write to it first.
The current tex* instruction reads from %c%d, which was written earlier by another tex* instruction in the same block of tex* instructions.  Dependent reads are not permitted within a single block of tex* instructions.  To perform a dependent read, separate texture coordinate derivation from the tex* instruction using the coordinates with a 'phase' marker.
%d different texture coordinate registers (t#) read by instruction.  Max. different texture registers readable per instruction is %d.
Register r%d (and thus texture stage %d) already used as a destination for a tex* instruction in this block of the shader. Reuse of a texture stage in ps_1_4 may only be accmplished by splitting the tex* ops across a phase marker.
tex* instructions cannot be after arithmetic instructions within one phase of a ps_1_4 shader.  Each phase can have a block of tex* instructions followed by a block of arithmetic instructions. 
Multiple phase markers not permitted.  Aborting shader validation.
Earlier texld instruction used _dz(=_db) modifier on source param. When a phase marker is present, the _dz modifier is only permitted after the phase marker.
v# register read by instruction(s) before phase marker.  This is not permitted. When a phase marker is present, v# register reads are only permitted after the phase marker.
When a phase marker is present in a shader, texkill is only permitted after the phase marker.
bem may only be used once in a shader.
bem can only be used before a phase marker (required) later in the shader.
Writemask for bem must be '.rg'
First source parameter for bem must be temp (r#) or constant (c#) register.
Second source parameter for bem must be temp (r#) register.
Only one use of texdepth is permitted.
Destination for texdepth must be r5.
After texdepth instruction, r5 is no longer available in shader.
When a phase marker is present in a shader, texdepth is only permitted after the phase marker.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd. Also: Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that an unfortunate effect of the phase marker in the shader is that the moment it is encountered in certain hardware, values previously written to alpha in any r# register, including r0, are lost. So after a phase marker, the alpha component of r0 must be written.
r0 must be written by shader. Uninitialized component%s(*): %s. Note that when texcrd is used with a .xy(==.rg) writemask, as it is in this shader, a side effect is that anything previously written to the z(==b) component of the destination r# register is lost and this component becomes uninitialized. The blue component of r0 must to be written after the texcrd.
def and dcl instructions must appear before other instructions.
dcl instruction is missing a parameter.
Invalid register type for dcl.  Must be t#, v# or s#.
Invalid register number: %d. Max allowed for %s# register is %d.
Register %s%d has already been declared.
dcl %s# does not support any modifiers.
dcl %s# must have one of the following masks: x, xy, xyz or xyzw (alternatively: r, rg, rgb, or rgba).
dcl %s# only supports the _centroid modifier (optional hint), and/or _pp modifier (partial precision hint). No other modifiers supported.
dcl %s# must be one of the following types: dcl_2d, dcl_cube or dcl_volume.
dcl %s# must not specify a writemask (equivalent to a full mask). When samplers are used for texture lookup, 4 components are always returned, including defaults for components that may not be present in the texture format set at the sampler. 
dcl %s# does not support any modifiers. 
dcl must specify non-empty mask.
Src and dest registers for NRM cannot be the same.
Dest writemask for NRM must be .xyzw (default) or .xyz (or equivalent rgba notation)
Dest register for CRS cannot be the same as a source register.
Swizzle not permitted on source paramters to CRS.
Write mask for CRS must be one of: .x | .y | .z | .xy | .xz | .yz | .xyz (or rgba equivalent)
Dest register for POW cannot be the same as second source register.
Dest register for LRP cannot be the same as first or third source register.
Co-issue ('+') is not supported in this shader version.
Pixel shader must minimally write to oC0 (with a mov instruction).
When a %s shader writes to oCn, it must write to all of oC(n-1) down to oC0 (no gaps).
oCn registers may only be written using the mov instruction.
Source parameter for instruction writing to oCn cannot use a modifier.
Source parameter for instruction writing to oCn cannot use swizzles.
Write to oCn register cannot use _sat instruction modifier.
Write to oCn register must use full writemask (equivalent to not specifying writemask at all).
oC%d already written. (oCn registers can only be written at most once each)
Invalid register type for dcl.  Must be input register (v#), sampler (s#), position (vPos) or face (vFace).
dcl can't specify empty writemask.
dcl for %s register does not support any modifiers. 
dcl %s# only supports the (optional) _pp modifier (partial precision hint), and/or the _centroid modifier (relevant to multisampling). No other modifiers supported.
Sampler %s%d already declared. 
dcl %s# must not specify a writemask (equivalent to a full mask). 
Declaration for register %s%d overlaps previous declaration for the following component(s) of the same register (*): %s
Unrecognized usage type in dcl statement.
dcl usage index, %d, is too high.  Max allowed is %d.
When multple usages are declared for various components of a given input v# register, the _centroid hint can only be specified on either (a) all usages declared for the register, or (b) on none of them.  Also note that the usage 'color' (with any index) has special behavior: even if the centroid hint is not specified for color, it is assumed to be set. 
dcl usage+index psize0 cannot be used in a pixel shader.
dcl for input v# register must specify usage+index (semantic). i.e. dcl_texcoord5 v%d. Note that the semantics position0, positiont0, psize0, tessfactor(n) and sample(n) are not permitted.
dcl usage+index positiont0 cannot be used in a pixel shader.
dcl usage 'tessfactor' is not avaliable to the pixel shader. 
dcl usage 'sample' is not avaliable to the pixel shader. 
dcl usage+index: %s,%d has already been specified for an input register.
%s register already declared.
z or w components of vPos register are not available in this shader version, and cannot be dcl'd.
Format for address register must be a0.x.
Only the mov instruction is allowed to write to the address register.
The only valid write masks for the FRC instruction are .xy and .y.
Vertex shader must write all four components (xyzw) of oPos output register.
Vertex shader must minimally write all four components (xyzw) of oPos output register.  Missing component%s(*): %s
Input register v%d was not declared with a dcl statement.  Attempt to read component%s(*): %s
Only the mova instruction is allowed to write to the address register.
mova instruction can only write to the address register.
Dest register type for NRM must be temp (r#).
Dest register type for CRS must be temp (r#).
Dest register type for POW must be temp (r#).
Dest register type for LRP must be temp (r#).
Second and third source params for SGN must both be different temp (r#) registers.
First source param for SGN cannot be the same register as the second or third params.
Second and third source params for SGN cannot use a source selector, and cannot have a modifier. 
Too many output registers declared (%d).  When no output register has been declared with the semantic 'psize0', %d o# registers are available.  When an o# register has been declared with the semantic 'psize0' (same as 'psize'), %d registers are available.
Invalid register type for dcl.  Must be input register (v#), output register (o#) or sampler (s#).
dcl usage 'tessfactor' is not permitted for vertex shader input registers.
Input cannot be dcl'd with usage+index positiont0, as vertex data containing this semantic has special meaning to the API: skip vertex processing altogether.
Vertex shader output is not permitted to be dcl'd with the usage+index positiont0.
Vertex shader output dcl with usage 'tessfactor' must have usage index 0, and register must have .x write mask. This semantic is for special purpose use only: creating vertex data that is to be used with tesselation, where a scalar tessfactor is needed.  If you are not doing tesselation, do not bother using this semantic. 
Output register dcl'd with usage+index psize0 takes as special meaning as a scalar, so no writemask must be specified (identical to full write mask). In addition, no other semantics may declared for the same output register as one assigned to psize0. 
Output register cannot be dcl'd with usage 'sample'.
dcl usage+index: %s,%d has already been specified for an output register.
Attempt to read undeclared component%s of input register v%d (*): %s. Components of v# registers to be read must be declared by a dcl statement.
D3DDECLUSAGE_POSITION
D3DDECLUSAGE_BLENDWEIGHT
D3DDECLUSAGE_BLENDINDICES
D3DDECLUSAGE_NORMAL
D3DDECLUSAGE_PSIZE
D3DDECLUSAGE_TEXCOORD
D3DDECLUSAGE_TANGENT
D3DDECLUSAGE_BINORMAL
D3DDECLUSAGE_TESSFACTOR
D3DDECLUSAGE_POSITIONT
D3DDECLUSAGE_COLOR
D3DDECLUSAGE_FOG
D3DDECLUSAGE_DEPTH
D3DDECLUSAGE_SAMPLE
unknown
position
blendweight
blendindices
normal
psize
texcoord
tangent
binormal
tessfactor
positiont
color
depth
sample
D3DDECLMETHOD_DEFAULT
D3DDECLMETHOD_PARTIALU
D3DDECLMETHOD_PARTIALV
D3DDECLMETHOD_CROSSUV
D3DDECLMETHOD_UV
D3DDECLMETHOD_LOOKUP
D3DDECLMETHOD_LOOKUPPRESAMPLED
D3DDECLTYPE_FLOAT1
D3DDECLTYPE_FLOAT2
D3DDECLTYPE_FLOAT3
D3DDECLTYPE_FLOAT4
D3DDECLTYPE_D3DCOLOR
D3DDECLTYPE_UBYTE4
D3DDECLTYPE_SHORT2
D3DDECLTYPE_SHORT4
D3DDECLTYPE_UBYTE4N
D3DDECLTYPE_SHORT2N
D3DDECLTYPE_SHORT4N
D3DDECLTYPE_USHORT2N
D3DDECLTYPE_USHORT4N
D3DDECLTYPE_UDEC3
D3DDECLTYPE_DEC3N
D3DDECLTYPE_FLOAT16_2
D3DDECLTYPE_FLOAT16_4
D3DDECLTYPE_UNUSED
Cannot convert vertex declaration for dx8 driver because generation method '%s' is specified.  The only generation methods which can be used with a dx8 driver are 'crossuv' and 'uv' (or else 'default', which does not specify any data generation).
Declaration can't map to fixed function on dx8 driver because there is a nonzero stream index AND there are element(s) that do not map to FVF. 
Declaration can't map to fixed function on dx8 driver because there are both (a) elements with usage+index pairs that are not valid for dx8 driver and (b) generation methods other than DEFAULT in the same decl. For a vertex declaration to map to fixed funtion on dx8 drvier, all individual elements with usage+index pairs valid for dx8 must appear contiguously starting from the first element.  Remaining elements at the end do not have to be valid for fixed function, as long as there are few enough that they can be aliased internally to texcoord(n), texcoord(n+1) etc. up to max. texcoord7 (thereby appearing to conform to an FVF, although the aliased values should not be used). Additionally, when such aliasing occurs, all elements in the decl are then required to simply use generation method D3DDECLMETHOD_DEFAULT, for mapping to fixed function to work.
Cannot convert vertex declaration for dx8 driver because the number of skipped bytes must be a multiple of DWORD size (4 bytes). The number of skipped bytes to reach the current element is: %d.
Declaration can't map to fixed function on dx8 driver because there are too many usage+index pairs that are not valid for dx8 driver. To clarify: For a vertex declaration to map to fixed function on a dx8 driver, all individual elements with usage+index pairs that are valid for fixed funtion on dx8 must appear contiguously starting from the first element.  Remaining elements at the end do not have to be valid for fixed function, as long as there are few enough that they can be aliased internally to texcoord(n), texcoord(n+1) etc. up to max. texcoord7 (thereby appearing to conform to a dx8 decl, although the aliased values should not be used). 
Cannot convert vertex declaration for dx8 driver because the current element overlaps the previous element. Current offset is %d, but is expected to be at least %d.
(Decl Element [%d]) 
Invalid register type for dcl.  Must be input register (v#).
dcl must specify full writemask in this shader version (same as not specifying mask) for %s# registers.
dcl usage 'tessfactor' is not permitted for vertex input shaders.
dcl usage: %s%d has already been specified.
clientcore\windows\DirectX\dxg\Inactive\D3D9\ref\common\refdev.cpp
new failure on texture create
malloc failure on texture create
clientcore\windows\DirectX\dxg\Inactive\D3D9\ref\drv\refif.cpp
This callback shouldnever be called on DDIs DX7 and beyond
An older interface shouldnever call this DLL
This DDI should notbe called from DDIs previous to DX7
Delete should have already taken place
CSEx for an attached texture?
CSEx for an attached execute buffer?
Bad attachment List
Flipping chains should not be mipmaps
Cant have multisample for volume textures
Runtime should have disallowed locking DXTn on non 4x4 boundary.
Software\Microsoft\Direct3D\ReferenceDevice
PixelShaderVersion
PixelShader1xMaxValue
EnableLegacyApproximations
RefCapValue
RefCapDisable
CapsFile
D3DDEVCAPS_HWINDEXBUFFER
D3DDEVCAPS_HWVERTEXBUFFER
D3DDEVCAPS_DRAWPRIMITIVES2EX
D3DDEVCAPS_PUREDEVICE
D3DDEVCAPS_DRAWPRIMTLVERTEX
D3DDEVCAPS_TEXTURESYSTEMMEMORY
D3DDEVCAPS_TLVERTEXSYSTEMMEMORY
D3DDEVCAPS_EXECUTESYSTEMMEMORY
DevCaps
D3DPMISCCAPS_NULLREFERENCE
D3DPMISCCAPS_SEPARATEALPHABLEND
D3DPMISCCAPS_BLENDOP
D3DPMISCCAPS_FOGINFVF
D3DPMISCCAPS_TSSARGTEMP
D3DPMISCCAPS_CLIPTLVERTS
D3DPMISCCAPS_COLORWRITEENABLE
D3DPMISCCAPS_CULLCCW
D3DPMISCCAPS_CULLCW
D3DPMISCCAPS_CULLNONE
D3DPMISCCAPS_MASKZ
PrimitiveMiscCaps
D3DPRASTERCAPS_MULTISAMPLE_TOGGLE
D3DPRASTERCAPS_COLORPERSPECTIVE
D3DPRASTERCAPS_ZFOG
D3DPRASTERCAPS_WFOG
D3DPRASTERCAPS_WBUFFER
D3DPRASTERCAPS_ANISOTROPY
D3DPRASTERCAPS_FOGRANGE
D3DPRASTERCAPS_DEPTHBIAS
D3DPRASTERCAPS_SLOPESCALEDEPTHBIAS
D3DPRASTERCAPS_MIPMAPLODBIAS
D3DPRASTERCAPS_FOGTABLE
D3DPRASTERCAPS_FOGVERTEX
D3DPRASTERCAPS_ZTEST
D3DPRASTERCAPS_DITHER
RasterCaps
D3DPCMPCAPS_ALWAYS
D3DPCMPCAPS_GREATEREQUAL
D3DPCMPCAPS_NOTEQUAL
D3DPCMPCAPS_GREATER
D3DPCMPCAPS_LESSEQUAL
D3DPCMPCAPS_EQUAL
D3DPCMPCAPS_LESS
D3DPCMPCAPS_NEVER
ZCmpCaps
D3DPBLENDCAPS_INVSRCCOLOR2
D3DPBLENDCAPS_SRCCOLOR2
D3DPBLENDCAPS_BLENDFACTOR
D3DPBLENDCAPS_BOTHINVSRCALPHA
D3DPBLENDCAPS_BOTHSRCALPHA
D3DPBLENDCAPS_SRCALPHASAT
D3DPBLENDCAPS_INVDESTCOLOR
D3DPBLENDCAPS_DESTCOLOR
D3DPBLENDCAPS_INVDESTALPHA
D3DPBLENDCAPS_DESTALPHA
D3DPBLENDCAPS_INVSRCALPHA
D3DPBLENDCAPS_SRCALPHA
D3DPBLENDCAPS_INVSRCCOLOR
D3DPBLENDCAPS_SRCCOLOR
D3DPBLENDCAPS_ONE
D3DPBLENDCAPS_ZERO
SrcBlendCaps
DestBlendCaps
AlphaCmpCaps
D3DPSHADECAPS_FOGGOURAUD
D3DPSHADECAPS_ALPHAGOURAUDBLEND
D3DPSHADECAPS_SPECULARGOURAUDRGB
D3DPSHADECAPS_COLORGOURAUDRGB
ShadeCaps
D3DPTEXTURECAPS_MIPCUBEMAP
D3DPTEXTURECAPS_MIPVOLUMEMAP
D3DPTEXTURECAPS_MIPMAP
D3DPTEXTURECAPS_VOLUMEMAP
D3DPTEXTURECAPS_CUBEMAP
D3DPTEXTURECAPS_PROJECTED
D3DPTEXTURECAPS_ALPHAPALETTE
D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE
D3DPTEXTURECAPS_ALPHA
D3DPTEXTURECAPS_PERSPECTIVE
TextureCaps
D3DPTFILTERCAPS_CONVOLUTIONMONO
D3DPTFILTERCAPS_MAGFGAUSSIANQUAD
D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD
D3DPTFILTERCAPS_MINFGAUSSIANQUAD
D3DPTFILTERCAPS_MINFPYRAMIDALQUAD
D3DPTFILTERCAPS_MAGFANISOTROPIC
D3DPTFILTERCAPS_MAGFLINEAR
D3DPTFILTERCAPS_MAGFPOINT
D3DPTFILTERCAPS_MIPFLINEAR
D3DPTFILTERCAPS_MIPFPOINT
D3DPTFILTERCAPS_MINFANISOTROPIC
D3DPTFILTERCAPS_MINFLINEAR
D3DPTFILTERCAPS_MINFPOINT
TextureFilterCaps
VertexTextureFilterCaps
CubeTextureFilterCaps
VolumeTextureFilterCaps
D3DPTADDRESSCAPS_MIRRORONCE
D3DPTADDRESSCAPS_INDEPENDENTUV
D3DPTADDRESSCAPS_BORDER
D3DPTADDRESSCAPS_CLAMP
D3DPTADDRESSCAPS_MIRROR
D3DPTADDRESSCAPS_WRAP
TextureAddressCaps
VolumeTextureAddressCaps
D3DLINECAPS_FOG
D3DLINECAPS_ALPHACMP
D3DLINECAPS_BLEND
D3DLINECAPS_ZTEST
D3DLINECAPS_TEXTURE
LineCaps
MaxTextureWidth
MaxTextureHeight
MaxVolumeExtent
MaxTextureRepeat
MaxTextureAspectRatio
MaxAnisotropy
MaxVertexW
GuardBandLeft
GuardBandTop
GuardBandRight
GuardBandBottom
ExtentsAdjust
D3DSTENCILCAPS_DECR
D3DSTENCILCAPS_INCR
D3DSTENCILCAPS_INVERT
D3DSTENCILCAPS_DECRSAT
D3DSTENCILCAPS_INCRSAT
D3DSTENCILCAPS_REPLACE
D3DSTENCILCAPS_ZERO
D3DSTENCILCAPS_KEEP
StencilCaps
D3DFVFCAPS_PSIZE
FVFCaps
D3DTEXOPCAPS_LERP
D3DTEXOPCAPS_MULTIPLYADD
D3DTEXOPCAPS_DOTPRODUCT3
D3DTEXOPCAPS_BUMPENVMAPLUMINANCE
D3DTEXOPCAPS_BUMPENVMAP
D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA
D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR
D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA
D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR
D3DTEXOPCAPS_PREMODULATE
D3DTEXOPCAPS_BLENDCURRENTALPHA
D3DTEXOPCAPS_BLENDTEXTUREALPHAPM
D3DTEXOPCAPS_BLENDFACTORALPHA
D3DTEXOPCAPS_BLENDTEXTUREALPHA
D3DTEXOPCAPS_BLENDDIFFUSEALPHA
D3DTEXOPCAPS_ADDSMOOTH
D3DTEXOPCAPS_SUBTRACT
D3DTEXOPCAPS_ADDSIGNED2X
D3DTEXOPCAPS_ADDSIGNED
D3DTEXOPCAPS_ADD
D3DTEXOPCAPS_MODULATE4X
D3DTEXOPCAPS_MODULATE2X
D3DTEXOPCAPS_MODULATE
D3DTEXOPCAPS_SELECTARG2
D3DTEXOPCAPS_SELECTARG1
D3DTEXOPCAPS_DISABLE
TextureOpCaps
MaxTextureBlendStages
MaxSimultaneousTextures
VertexProcessingCaps
MaxActiveLights
MaxUserClipPlanes
MaxVertexBlendMatrices
MaxVertexBlendMatrixIndex
MaxPointSize
MaxPrimitiveCount
MaxVertexIndex
MaxStreams
MaxStreamStride
VertexShaderVersion
MaxVertexShaderConst
MaxVShaderInstructionsExecuted
MaxVertexShader30InstructionSlots
MaxNpatchTessellationLevel
MaxPShaderInstructionsExecuted
MaxPixelShader30InstructionSlots
D3DPS20CAPS_NOTEXINSTRUCTIONLIMIT
D3DPS20CAPS_NODEPENDENTREADLIMIT
D3DPS20CAPS_PREDICATION
D3DPS20CAPS_GRADIENTINSTRUCTIONS
D3DPS20CAPS_ARBITRARYSWIZZLE
PS20Caps.Caps
D3DPS20_MAX_DYNAMICFLOWCONTROLDEPTH
PS20Caps.DynamicFlowControlDepth
D3DPS20_MAX_NUMTEMPS
PS20Caps.NumTemps
D3DPS20_MAX_STATICFLOWCONTROLDEPTH
PS20Caps.StaticFlowControlDepth
D3DPS20_MAX_NUMINSTRUCTIONSLOTS
PS20Caps.NumInstructionSlots
D3DDTCAPS_DEC3N
D3DDTCAPS_FLOAT16_4
D3DDTCAPS_FLOAT16_2
D3DDTCAPS_UDEC3
D3DDTCAPS_USHORT4N
D3DDTCAPS_USHORT2N
D3DDTCAPS_SHORT4N
D3DDTCAPS_SHORT2N
D3DDTCAPS_UBYTE4N
D3DDTCAPS_UBYTE4
DeclTypes
D3D_MAX_SIMULTANEOUS_RENDERTARGETS
NumSimultaneousRTs
DDCAPS2_CANSHARERESOURCE
DDCAPS2_CANAUTOGENMIPMAP
DDCAPS2_DYNAMICTEXTURES
DDCAPS2_CANRENDERWINDOWED
DDCAPS2_CANMANAGERESOURCE
Caps2
D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD
Caps3
D3DDEVCAPS2_STREAMOFFSET
DevCaps2
D3DLINECAPS_ANTIALIAS
D3DPRASTERCAPS_SCISSORTEST
D3DSTENCILCAPS_TWOSIDED
D3DPMISCCAPS_MRTINDEPENDENTBITDEPTHS
D3DPMISCCAPS_INDEPENDENTWRITEMASKS
D3DPMISCCAPS_PERSTAGECONSTANT
D3DVTXPCAPS_TEXGEN_SPHEREMAP
D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET
D3DDEVCAPS2_PRESAMPLEDDMAPNPATCH
D3DDEVCAPS2_DMAPNPATCH
D3DDEVCAPS2_ADAPTIVETESSNPATCH
D3DDEVCAPS2_ADAPTIVETESSRTPATCH
D3DVS20CAPS_PREDICATION
VS20Caps.Caps
D3DVS20_MAX_DYNAMICFLOWCONTROLDEPTH
VS20Caps.DynamicFlowControlDepth
D3DVS20_MAX_NUMTEMPS
VS20Caps.NumTemps
D3DVS20_MAX_STATICFLOWCONTROLDEPTH
VS20Caps.StaticFlowControlDepth
D3DPMISCCAPS_POSTBLENDSRGBCONVERT
D3DPMISCCAPS_MRTPOSTPIXELSHADERBLENDING
D3DPMISCCAPS_CLIPPLANESCALEDPOINTS
D3DDEVCAPS_QUINTICRTPATCHES
D3DDEVCAPS_NPATCHES
D3DDEVCAPS_RTPATCHHANDLEZERO
D3DDEVCAPS_RTPATCHES
D3DDEVCAPS_HWTRANSFORMANDLIGHT
D3DVTXPCAPS_LOCALVIEWER
D3DVTXPCAPS_TWEENING
D3DVTXPCAPS_POSITIONALLIGHTS
D3DVTXPCAPS_DIRECTIONALLIGHTS
D3DVTXPCAPS_MATERIALSOURCE7
D3DVTXPCAPS_TEXGEN
D3DRR ASSERT: <%d,%s> %s
EnableDebugging
clientcore\windows\DirectX\dxg\Inactive\D3D9\Ref\inc\refdev.hpp
Surface being deleted has someoutstanding locks
rpcrt4.dll
UuidCreate
UuidToStringA
RpcStringFreeA
\\.\pipe\D3DDMPipe
%s_%s
Software\Microsoft\Direct3D\Debuggers
\\.\pipe\
onecoreuap\restricted\windows\inc\private\directx\dxg\WorkerThreadHelper.h
Unexpected result from WaitForMultipleObjects
Unexpected result from MsgWaitForMultipleObjects
@Qm6t
Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers
 clientcore\windows\DirectX\dxg\Inactive\D3D9\D3D\tnl\fe.h
Not enough memory to create vertex declaration
There was some error when Reset()ing the device; as a result some resources may not be freed.
Could not allocate the FE/PSGP data structure (D3DFE_PROCESSVERTICES).
Failed to initialize CD3DBase.
Failed to initialize transformation state.
Could not allocate memory for internal data structure pMatrixDirtyForDDI.
Could not allocate memory for renderstate processing bit vectors
Could not allocate memory for internal data structure m_pLightArray
**** The D3DUSAGE_RENDERTARGET is not set on this surface.
**** You need to add D3DUSAGE_RENDERTARGET to the Usage parameter
**** when creating the surface.
Could not allocate memory for internal data structure GeometryFuncsGuaranteed
Failed to create front-end data-structures.
Not enough memory to create render state array
0%xh 
INTERNAL ERROR:View matrix in D3DFE_PROCESSVERTICES structure must be aligned to 16 bytes
Failed to initialize PSGP object
Failed to create VS converter callback object
Failed to allocate memory for CVSConverterEventHandlerCallbacksI
Failed to initialize VS converter object
Could not allocate memory for internal buffer HVBuf
Could not allocate memory for the light array
EmulatePointSprites
Could not allocate memory for internal vertex decl cache
The dwCount parameter is too big.
failed to allocate space for rects
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\dlld3d.cpp
OS Detection failed - turning off VB swapping
Empty
Dirty region covers full screen
Region Count: %d 
Rect %d { TopLeft: (%d, %d), BottomRight: (%d, %d)} 
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\d3dbase.cpp
There was some error when resetting pixel shaders
Failed to call VS converter.
There was some error when resetting shaders
Failed to initialize D3DDevice
Failed to initialize device state
Could not allocate internal light array m_pCreatedLights
Could not allocate internal bit vector for m_pCreatedLights
Could not allocate internal CFVFToDecl object
Could not allocate internal handle array m_pPaletteArray
Could not allocate internal constant array m_pVSConstantsF
Could not allocate internal constant array m_pVSConstantsI
Could not allocate internal constant array m_pVSConstantsB
Could not allocate memory for pixel shader float constants
Could not allocate memory for pixel shader integer constants
Could not allocate memory for pixel shader bool constants
No PUREDEVICE support available on this driver
The currently installed driver is not supported.
Could not allocate internal driver interface object
Failed to create dummy render target
EvictManagedResources failed.
CheckDepthStencilMatch doesn't succeed on current Render Target and Depth/ Stencil pair.
Device Lost. Please call TestCooperativeLevel or Reset to try and recover.
Driver failed ValidateDevice.
BeginScene, already in scene. BeginScene failed.
Cannot be recording state macros when calling BeginScene. BeginScene failed.
BeginScene failed.
EndScene, not in scene. EndScene failed.
Cannot be recording state macros when calling EndScene. EndScene failed.
EndScene failed.
MultiplyTransform failed.
SetTransform failed.
Illegal to set render target 0 to NULL
Device does not support that RTIndex
Render Target wasn't created with this Device. SetRenderTarget fails
**** when creating the surface. SetRenderTarget failed.
The surface cannot be set as render target because it is a part of fullscreen swap chain and not the back buffer 0.
Render target already set in another index. SetRenderTarget failed.
SetRenderTarget failed.
Invalid ptr to IDirect3DSurface9*. GetRenderTarget failed.
Zbuffer wasn't created with this Device. SetDepthStencilSurface fails
**** The D3DUSAGE_DEPTHSTENCIL is not set on this surface.
**** You need to add D3DUSAGE_DEPTHSTENCIL to the Usage parameter
**** when creating the surface. SetDepthStencilSurface failed.
Invalid ptr to IDirect3DSurface9*. GetDepthStencilSurface failed.
SetViewport failed.
SetScissorRect failed.
SetMaterial failed.
Failed to allocate the internal light array
SetLight failed.
SetRenderState failed.
SetClipStatus is not available for D3DCREATE_PUREDEVICE. SetClipStatus failed.
GetClipStatus is not available for D3DCREATE_PUREDEVICE. GetClipStatus failed.
Invalid vertex buffer pointer. ProcessVertices failed.
VertexBuffer not created with this device. Process Vertices failed.
ProcessVertices is not available for a PUREDEVICE. ProcessVertices failed.
SetTexture failed.
SetTextureStageState failed.
SetSamplerState failed.
LightEnable failed.
CreateQuery failed.
To use text API call Device::QueryInterface(IID_IDirect3DDevice9Ex)
Device does not support convolution mono filter
Maximum monochrome convolution kernel size is %dx%d
Convolution kernel size cannot be zero
Pointers to weights should be NULL
SetConvolutionMonoKernel failed.
ComposeRects failed.
SetCurrentTexturePalette failed.
Application cannot set a non-opaque palette alpha value (peFlags other than 0xFF) unless the device exposes D3DPTEXTURECAPS_ALPHAPALETTE. SetPaletteEntries failed.
Failed to set palette entries. SetPaletteEntries failed.
Could not allocate space to hold palette. SetPaletteEntries failed.
SetClipPlane failed.
SetStreamSource failed.
SetStreamSourceFreq failed.
Stream source frequency divider should be greater or equal to 1
Please set only one of D3DSTREAMSOURCE_INDEXEDDATA or D3DSTREAMSOURCE_INSTANCEDATA
StreamIndex must be greater than zero for D3DSTREAMSOURCE_INSTANCEDATA streams
SetIndices failed.
Invalid index buffer format
SetFVF failed
SetVertexDeclaration failed
SetVertexShader failed.
Not that many float constant registers
SetVertexShaderConstantF failed.
Not that many integer constant registers
SetVertexShaderConstantI failed.
Not that many BOOL constant registers
SetVertexShaderConstantB failed.
Cannot allocate memory for the pixel shader object. CreatePixelShader failed.
Driver failed to create the requested pixel shader.
CreatePixelShader failed.
SetPixelShader failed.
GetPixelShader is not available for PUREDEVICE. GetPixelShader failed.
Not that many constant registers in the pixel machine. SetPixelShaderConstantF failed.
SetPixelShaderConstantF failed.
Not that many constant registers in the pixel machine. SetPixelShaderConstantI failed.
SetPixelShaderConstantI failed.
Not that many constant registers in the pixel machine. SetPixelShaderConstantB failed.
SetPixelShaderConstantB failed.
Need to call BeginScene before rendering.
Vertex shader declaration is not set
Current vertex declaration cannot be used with pre-DX9 drivers because it cannot be mapped to a valid FVF
DrawPrimitive failed.
DrawIndexedPrimitive failed.
DrawRectPatch failed.
DrawTriPatch failed.
High order surfaces unsupported on current device. DeletePatch failed.
DeletePatch failed.
DrawPrimitiveUP - vertex stream stride cannot be zero
DrawPrimitiveUP failed.
DrawIndexedPrimitiveUP - vertex stream stride cannot be zero
DrawIndexedPrimitiveUP failed.
Cannot support more than 64K rectangles. Clear failed.
Invalid flag D3DCLEAR_STENCIL; current zbuffer's pixel format doesnt support stencil bits. Clear failed.
Flags not valid. Clear failed.
Clear failed.
Driver failed a command batch will synchronizing a synchronous call with the command stream. (No error will be returned to the app)
Out of memory in StateInitialize
Current palette not set
Resource manager failed to create or update video memory VB
The resource manager failed to promote or update a dirty texture. The texture will be disabled.
GetMaterial does not work in pure-device
GetTransform does not work in pure-device
GetLight does not work in pure-device
GetLightEnable does not work in pure-device
GetClipPlane does not work in pure-device
GetTextureStageState does not work in pure-device
GetSamplerState does not work in pure-device
GetRenderState does not work in pure-device
GetPixelShaderConstantF does not work in pure-device
GetPixelShaderConstantI does not work in pure-device
GetPixelShaderConstantB does not work in pure-device
GetVertexShaderConstantF does not work in pure-device
GetVertexShaderConstantF failed
GetVertexShaderConstantI does not work in pure-device
GetVertexShaderConstantI failed
GetVertexShaderConstantB does not work in pure-device
GetVertexShaderConstantB failed
clientcore\windows\DirectX\dxg\Inactive\D3D9\D3D\inc\query.hpp
Cannot allocate room for Query
DeleteQuery failed
Failed to set texture stage state to PS converter
clientcore\windows\DirectX\dxg\Inactive\Misc\ffconverter.cpp
Failed to create VS converter object
Failed to allocate memory for m_pApiVertexShaderConstantsF
Failed to create PS converter object
Failed to initialize PS converter object.
Failed to set texture factor to PS converter
Failed to set specular enable to PS converter
Invalid ppvObj parameter passed to CVertexDeclaration::QueryInterface
Unsupported Interface identifier passed to QueryInterface
Not enough memory to create a vertex declaration
Failed to create PSGP declaration object
Not enough memory to create vertex descriptors
Vertex shader function usage (%s, %d) does not have corresponding usage in the current vertex declaration
Failed to create an internal vertex shader
Invalid ppvObj parameter passed to CVertexShaderFunc::QueryInterface
Too many DCL instructions
Not enough memory to create a vertex shader
Unable to parse shader code
Failed to create vertex shader code
Failed to create an internal vertex shader function
Failed to create DX8 declaration
Failed to create vertex declaration
Failed to create vertex shader
Not enough memory to create internal shader object
Failed to create internal vertex declaration
Out of memory in creating vertex declaration cache
Failed to create a vertex declaration in vertex cache
Viewport outside the render target surface
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\vwport.cpp
Unsupported renderstate D3DRS_SCISSORTESTENABLE.
Scissor rect outside the render target surface
Invalid renderstate %d. SetRenderState failed.
Invalid render state value. GetRenderState failed.
invalid renderstate %d. GetRenderState failed.
GetTextureStageState failed.
Already in the state record mode. BeginStateBlock failed.
Could not allocate memory for new state block. BeginStateBlock failed.
BeginStateBlock failed.
Not in state record mode. EndStateBlock failed.
Cannot allocate memory for the state block object.
EndStateBlock failed.
We are in state record mode.
State block release failed.
Invalid ppvObj parameter passed to CStateBlockAPI::QueryInterface
Unsupported interface identifier passed to QueryInterface
Cannot capture when in the state record mode. Capture state block failed.
Capture state block failed.
We are in state record mode. Apply state block failed.
Apply state block failed.
Cannot create state block when in the state record mode. CreateStateBlock failed.
CreateStateBlock failed.
Cannot set software vertex processing mode on device, created with hardware vertex processing
Cannot set hardware vertex processing mode on device, created with software vertex processing
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\rgblt.cpp
Failed to allocate internal specular table
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\lighting.cpp
Not enough memory to grow light array
Invalid light index. GetLight failed.
Invalid light index OR light is not initialized. GetLightEnable failed.
Validation failed in sampler %d.
Device does not support texture filtering for texture in sampler %d
User should use D3DTEXF_POINT for min and mag filters and D3DTEXF_NONE for the mip filter
Unsupported independent u and v address modes in sampler %d.
Invalid texture stage %d. This stage should not be enabled.
Validation failed in texture stage %d.
Number of simultaneous textures exceeds maximum.
D3DRS_MAXTESSELLATIONLEVEL must be greater or equal D3DRS_MINTESSELLATIONLEVEL
Render target does not support alpha blending.
Number of active lights exceeds maximum.
Invalid stream source index %d. The maximum valid index is %d.
Invalid stream source %d. Offsets are not supported.
Invalid stream source %d. The stride exceeds the device maximum.
Shader is invalid.
Invalid vertex declaration.
Dimensions of render target %d do not match target 0.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\drawprim.cpp
Destination vertex buffer has not enough space. ProcessVertices failed.
Number of output texture coordinates and their format should be
the same in the destination vertex buffer and as computed for current D3D settings.
Computed output FVF is 0x%08X
Only FLOATs and D3DCOLOR are allowed as vertex declaration data type in ProcessVertices
Cannot lock destination buffer
ProcessVertices failed.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\vshader.cpp
The output of the current vertex shader cannot be used with the current device, because it cannot be mapped to a valid FVF
The output of the current vertex shader cannot be used with the current device, because the shader does not output position
Failed to set PSGP active vertex shader
Failed to set PSGP vertex declaration
The current vertex declaration has gaps in texture coordinates and cannot be used with pre-DX9 drivers. For pre-DX9 drivers declaration with transformed vertices must be convertable to a valid FVF
The current vertex declaration has transformed vertices and cannot be mapped to a valid FVF. Such declaration can only be used with drivers, which support pixel shaders 3.0+
The output vertex shader declaration in the current vertex shader cannot be used with the current driver because it cannot be mapped to a valid FVF
Failed to set vertex shader constants
Stream 0 is not set and FVF vertex declaration is used
Index stream is not set
Texture format bits in the output FVF for this device should be 0
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\pshader.cpp
invalid version token
Shader code size is too big. Possibly, missing D3DVS_END()
DeletePixelShader failed
Invalid ppvObj parameter passed to CPShader::QueryInterface
Cannot allocate memory for shader
Not that many constant registers in the pixel machine. GetPixelShaderConstantF failed.
Not that many integer constant registers in the pixel machine. GetPixelShaderConstantI failed.
Not that many bool constant registers in the pixel machine. GetPixelShaderConstantB failed.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\shadergraph.cpp
Out of memory allocating m_pOutputDecl
Out of memory allocating VertexDeclaration 
Failed to create output vertex declaration
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\stateset.cpp
Not enough memory to create state set object
State block handle is greater than available number of blocks
State block is not initialized
Invalid state block handle
State block not initialized
Unable to capture light state (light not set?)
Not enough memory to create state block buffer
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\query.cpp
Invalid ppvObj parameter passed to IDirect3DQuery9::QueryInterface
Unsupported interface identifier passed to IDirect3DQuery9::QueryInterface
IDirect3DQuery9::Issue failed.
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\ddi.cpp
%s is not supported by the current DDI
Driver failed to handle SceneCapture
Cannot allocate internal backup TLVBuf
Cannot allocate internal data structure CTLStream
Driver failed ContextCreate
Driver did not correctly allocate DrawPrim buffer
Driver not handled in DrawPrimitives2
Driver failed Lock in FlushStates
Driver out of video memory!
Driver could not parse this batch!
Driver returned error: %s
Driver failed command batch. Attempting to reset device state. The device may now be in an unstable state and the application may experience an access violation.
Driver failed SetRenderTarget call
Failed allocate memory for temporary vertices
Out of memory during point sprite emulation
Error in PSGP
Failed to allocate Command Buffer
Could not lock command buffer
Could not allocate internal vertex buffer
Could not lock internal vertex buffer
Driver does not support Clear
Error in Clear
Driver failed to lock a vertex buffer when attempting to cache the lock.
Driver failed the command batch submitted to it when attempting to swap the current pointer in response to D3DLOCK_DISCARDCONTENTS.
Cannot allocate space for handle factory
Failed to reserve handle 0
Cannot allocate device handle for a state block
Declaration is too complex for the Driver to handle.
The declaration is too complex for the driver to handle
Could not grow clip buffer
Driver failed UpdatePalette call
Driver failed SetPalette call
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\drawprim.hpp
Integer multiply overflow
Could not allocate internal index buffer
Could not lock internal index buffer
Cannot allocate internal stream m_pTLStream
Cannot allocate internal stream m_pTLStreamW
Cannot allocate internal stream m_pTLStreamNPatch
Cannot allocate internal stream m_pTLStreamClip
Cannot allocate internal stream m_pIndexStream
Cannot allocate internal stream m_pTLStreamRO
Cannot allocate internal stream m_pTLIndexStreamRO
Cannot allocate dummy array
Could not allocate internal handle factory m_pVShaderArray
Vertex shader Zero'th handle allocation failed
Could not allocate internal handle factory m_pVShaderFuncArray
Could not allocate internal handle factory m_pPShaderArray
Driver failed to unlock a vertex buffer when attempting to re-cache the lock.
Error in creating shader handle
Resource manager failed to create or update video memory IB
Failed to create an internal vertex shader handle
DP2 returned error
DP2 returned error- marking failed batch
Failed to create PS converter callback object
Failed to allocate memory for CFFConverterEventHandlerCallbacksLddm
Failed to allocate memory for CFFConverterEventHandlerCallbacksDX9
VS converter must be enabled when the PS converter is enabled.
Failed to create an internal shader handle
UMD failed ValidateDevice call
User mode driver failed UpdateWInfo call
User mode driver failed SetTexture call
User mode driver failed CreatePixelShader call
User mode driver failed SetPixelShader call
User mode driver failed SetPixelShaderConstantF call
User mode driver failed DeletePixelShader call
User mode driver failed SetPixelShaderConstantI call
User mode driver failed SetPixelShaderConstantB call
User mode driver failed SetStreamSource call
User mode driver failed SetIndices call
User mode driver failed SetConvolutionKernelMono call
User mode driver failed ComposeRects call
User mode driver failed DrawPrimitive call
User mode driver failed DrawIndexedPrimitive call
User mode driver failed SetStreamSourceUM call
User mode driver failed SetIndicesUM call
User mode driver failed DrawRectPatch call
User mode driver failed DrawTriPatch call
User mode driver failed DrawPrimitive2 call
User mode driver failed DrawIndexedPrimitive2 call
User mode driver failed CreateVertexShaderDecl call
User mode driver failed DeleteVertexShaderDecl call
User mode driver failed VolBlt call
User mode driver failed BufBlt call
User mode driver failed SetRenderTarget call
User mode driver failed SetDepthStencil call
User mode driver failed TexBlt call
User mode driver failed StateSet call
User mode driver failed SetPriority call
User mode driver failed Clear call
User mode driver failed UpdatePalette call
User mode driver failed SetPalette call
User mode driver failed SetViewport call
User mode driver failed CreateVertexShaderFunc call
User mode driver failed DeleteVertexShaderFunc call
User mode driver failed SetVertexShaderConstantB call
User mode driver failed MultiplyTransform call
User mode driver failed SetTransform call
User mode driver failed SetZRange call
User mode driver failed SetMaterial call
User mode driver failed SetLight call
User mode driver failed CreateLight call
User mode driver failed DestroyLight call
User mode driver failed LightEnable call
User mode driver failed SetScissorRect call
User mode driver failed Blt call
User mode driver failed ColorFill call
User mode driver failed CreateQuery call
User mode driver failed DeleteQuery call
User mode driver failed IssueQuery call
User mode driver failed GetQueryData call
User mode driver failed GenerateMipSublevels
Out of memory in QueryResourceResidency
User mode driver failed QueryResourceResidency
User mode driver failed SetStreamSourceFreq
Vertex does not have enough data for vertex blending
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fe\helxfrm.cpp
clientcore\windows\directx\dxg\inactive\d3d9\d3d\fw\lhbatchfilter.cpp
CBatchFilter:Failed to create internal buffer.
Invalid opcode while processing batch
User-mode driver failed a DDI call in worker thread
DisableThreadedDDI
ForceCritSec
Failed create Initialize a critical section
Failed to create an event during initialization
Failed to take DLL reference count
Failed create a worker thread
Out of memory when creating CBatchFilterI object
d3d9.pdb
.rdata$brc
.rdata$00$brc
.rdata$zz$brc
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gfids
.giats
.rdata
.rdata$00
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zzzdbg
.text
.text$di
.text$lp00d3d9.dll!30_clientonly
.text$mn
.text$mn$00
.text$np
.text$x
.text$yd
.text$zs
.text$zy
.text$zz
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.data$00$brc
.data$dk00$brc
.data$r$brc
.data$zz$brc
.data
.data$00
.data$dk00
.data$zz
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
.didat$5
.rsrc$01
.rsrc$02
u=j,j
taj,j
tJj,j
t7_^[]
WWHPjo
9sDt[
SVWj03
A;KTr
\$ )|$ 
\$@;L$ 
YUY2tR
UYVYtJ
P216tB
P210t:
Y216t2
Y210t*
;N,r#
t$VVj 
SVWhHi
t^Pj@
t!jZV
SVWj<
u49~<t
$<$u#
t19{<u
@t%hx
PPPPh
9w(t"
PQSVW
QWVQP
D$D9A
D$(tg
D$4t.hF
D$8t*
MET1u#h
D$0tP
DXT1t5
DXT2t-
DXT4t
DXT5t
u4G;}
j<^VP
RRPRj
RPPRh
QQjKQ
RRPRj
9X0uX9
QSVW3
;~,vQ
 9V(t
u!9\$
M SVW
u!9\$
M SVW
] VWP
DXT4;
MET1t(
DXT1t
DXT2t
YUY2t7
DXT3u,j
DXT5t
GRGBt
RGBGt
UYVYt
9X0u<
]$SQR
u+;yPt
MET1u
MET1w
DXT4w$tK
YUY2w
DXT1t9
RGBGw
DXT5t
UYVYt
DXT4t
T$@tP
MET1wPtD
DXT4w4t
YUY2w tk
DXT1t
DXT2u:
DXT3t
RGBGw
DXT5t
UYVYt!
D$P9D$
T$P;T$
 t!Qj@
t$(;\$
B@jdX
9;u__^[
F4;F0
L$D_^[3
A ;t$$r
L$<QP
4SVW3
D$TWP
G4;G0
S4_^[
\SVWjP3
9STvA
uK9:tG
PQQQQ
!s@!sD!sH!
!S(!S4
!s@!sD!sH
u=PVj
B9slu
QQSVW
9W0t89
QSQQQP
4SVW3
;8t1B
L$|_^[3
u"9D$
QCOMu
QAQQj
9U$t6
;_,s9QQj
PQQSVW
9_Tvg
;~,r5
jWVjXZ
QWVPj Qj 
^X_^[
D$PPQ
up8\$
L$HS@QPS
uwiF,,
@;F,r
YY9\$
PSSSSSSj
9_@uw9
\$$9^,v.
\$$9^,vI
D$,PSh
@9D$$u
D$$Ph
9^,vb
j`Vh ~
t\Vj@
9y,vv
9X,vk
9O,vE
9>v)S3
 SVWjW
QQSVWj j@
KHu|kA
_h_^[
t%VWP
PQSVW
F<9P0t
j@[tR
F<j@[
PWh`l
PWhPm
jA@Ph8p
8^"t5
8^"t+
PRh(u
e9^8tb
8^ ui
F( uV8
F(@t1
u>8^!t9
QQSVW
~(hX`
~(h d
G<_^u
s>_^3
L$<_^[3
9s<t&
L$D_^3
u*;:t&
dSVWj03
D$DWP
D$D9~
L$<_^[3
^D9N8vq
V<_^[
D$0SVW
L$<_^[3
0<0tO
!D$\A!D$l
D$<}l
L$DPR
D$dPR
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$DPV
D$tPQ
D$tPj
D$tPj
D$tPj
D$tPj
D$DPV
D$tPj
D$tPj
D$tPj
D$DPV
D$tPj
D$DPV
D$DPV
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$tPj
D$DPV
D$tPj
D$tPj
D$DPV
D$tPj
D$tPj
D$tPj
D$DPV
D$tPj
D$DPV
D$DPV
D$DPV
D$tPj
t$$H;
L$TQPj
L$TQPj
DXT1t$
DXT2t
DXT3t
DXT4t
[t49\$
uMSQjPY
6SQjNY
!SQjL
SQjHY
L$4^3
PQSVW
YY_^]
YY_^]
QQSVW3
QQSVW
PQQVW
L$|_^3
[;APu"
FP@tPh0H
#H|t:j
9x@u[
un9_Pu+
w@hd<
FP@tfhL
9B@uK
ADt=h
;A@s!9Q@w
~HC;_
GtQ8X
GP@t 
GtQ8X
GtQ8X
GtQ8X
GtQ8X
GtQ8X
GtQ8X
FP t*
;G0vejT
x(jbX
Fp@9B@u;
Fp@9B@u
QHSVW
uv;FHt
FD9_Dt
FD9_Dt,
;B@u%
CSj0Z
CSj0Z
CSj0Z
FP@t*Q
Fl;Fpw
Fl;Fpw
_[950
Wj8j@
D$ +D$
Sj~VW
L$$_^[3
9V,v%
9G,vX
SSHPjo
<SVWj8
@9C@t
;K0uJ
;C(u'
uH9S uC
u`hc"
t!Vh\m
;WTs'
VWjH3
^,9;v*
;~$vA
u[WWWW
#uNj 
QQSVW
G$t,j
t _^[
9KTvL
C0 u43
9WXt$
GHPt'
8VWj8
GD_^[
t&h,{
j,hx"
Y__^[
QRPh8U
QRPhXU
u/h\q
|$hWQ
t$hVQ
u)h\r
u)h|r
dVWj`
QPVWQ
PQQSVW
RGBGt
GRGBu
Y__^[
uIWj@Z
VVVVj
D$,;D$
L$<WQS
t39>t/
D$$;D$
SSPj]
QWVPWW
E4;D$
9>u&9~
L$,;H
L$LPj
~.VPQ
L$891
@L3BL
D$(f;
L$8tC
T$Ht-
T$PtU
u{9{0
uV9{0uf
9C0t8
CACHj
Wj@j@Z
T$<_3
u79x\t2
9y8v1
G;y8r
u<j8P
A4;A0t
A4;A0t
C4;C0
u"jQh
;APu"
;APu"
FD9_Pu%
AP;BPuE
A@;B@u=
f#F\j
f#V\Xf
f#V\f
;FDu0
 u"hB
WSSSSj
WSSSSSV
9x,v<
9{Tvc
9STv&
u$WSQ
9_`vA
9_dvC
tA9_hv<
w0_^]
G(_^]
w(_^]
,wgtY
QQSVW
QQSVW
L$$_^[3
~ _[^
vTh$p
v,Sh@p
uj9X 
_9X ~Z
)] )]
8s.jq
@u^9E
DXT1t'
DXT2t
DXT3t
DXT4t
DXT5t
DXT1;
DXT5;
DXT2t
YUY2tI
DXT3t
DXT4u5
GRGBt
RGBGt
UYVYt
UYVYt
DXT1t>
DXT2t'
DXT3t
DXT4t
DXT5u,
YY_^]
QQh@s
PQQSVW
97s/j
;V,r%hI
;F,s53
PRRRRRRj
wPPj@
y"h'I
G4j8j@
L$L_^[3
D$8SVW
W 9P u
C(_^[
QQSVW
E  u6!E
y/hG6
u h[6
y'hg6
|$(YY
D$09G
t$49t$
D$@_WQP
D$4;D$
\$@9W
C @;G
t$49G
T$D;C0
u%h">
D$$9Q
;T$0s
L$TVW3
D$DXj
L$T_9s
vhVj@
D$@;D$4
u"hi4
L$0r*
@_^[]
u%hA7
D$89s
;t$8r
9t$ v_
;t$ r
u"hy:
C@;A0t
CA;A4t
CB;A8t
CC;A<t
CD;A@t
CE;ADt
CF;AHt
CG;ALt
CH;APt
CI;ATt
CJ;AXt
CK;A\t
y$hHS
VWtFj8^V
tRj@^V
VWtFj8^V
VWtFj8^V
tLj8^V
tLj@^V
VWtFj8^V
tLj8^V
tRj@^V
tTj8^V
D$HDXED
y1hu?
y.hv>
s!h0#
|$TY3
D$HSVW
@_^[3
D$@SVW
@_^[3
D$HSVW
y/h0?
@_^[3
D$@SVW
yNhR?
@_^[3
pSVWj@3
tSWhp
t-Wh`
QQSVWj j@
PVWjP
D$@v)
TA;L$Pr
L$T9L$
L$\_^[3
hSVWjX3
|$T9{
u?SPQP
DXT1t;
DXT2t3
DXT3t+
DXT4t#
DXT5t
PPPPWWWW
@0 u?
QWQQQPS
L$<^3
D$lVP
L$hQj
|$<97
+WT+OX9pDt*9P\t
D$ ;Adu&
9qDtM
L$89w
L$897|A
L$hQP
D$$H;
L$hQP
T$hRQP
+D$p;
+D$t;
T$hRQP
9rDt\Q
T$,)D$,
D$,h 
D$<vr
y9j7Y
L$49{0t
uwj<P
!D$P!D$Tj
D$(!T$@!T$
D$,L@
_^@[]
ttjX^V
F(9x0t#
>9~$t
SVWj03
9s(t`
+N +F
A0@Vt
uASj@
_^[Y]
9},t3
WWSWj
[SSVR
WWRWj
9{<u/
!S !S$
W9s8u
9^ uPh
D$TPW
t$4WW
D$ YYP
D$\PQ
D$\PQ
D$<;D$@s
QQSVW
t\jH^V
B<;Btu
B@;Bxu
BD;B|u
PQj Z
9s,v]
PPQRVPj
D$$Ph
+T$8;
+D$<;
3D$43
\$Xj(Y
T$4;T$$s
T$4;T$$s
T$4;T$$s
L$49L$$v_
D$4@;D$$
D$tPh
D$49D$$
T$4;T$$s
T$4;T$$s
;t$,|
|$@5z0z
Y+L$,
+L$,3
D$,1D$
+D$ 3
D$43L$
\$,Pj
D$|Pj
D$|Pj
D$|Pj
L$4Q3
T$ptw
D$xPj
D$tPj
D$$3L$
D$$3D$p
D$$3L$,
L$$+L$,
D$$3L$
3D$$3
D$$3L$
D$$3L$<3
9D$\t5
D$ iT$ ^`
D$ 5^`i
D$H3T$T3
\$4PS
3T$T3
\$49D$Tv'
;T$Ts
3T$T3
+L$`B
+L$`3
L$\PR3
t$4+L$d
L$\PR3
+L$`3
D$pj*+
L$tt.
@9D$pu!
D$Tj\
t$Tj Z
@9D$pt
t$tt+
j`_WS
j Xf9
+D$Tk
F9t$pur
@9D$pu/
L$Hj,QP
@9D$pu%
@YY9D$puJ
L$Hj,QP
@9D$pu2
|$(+|$\
@9D$pu/
@9D$pu<
QPRRWQP
D$ iT$ ^`
D$ 5^`i
T$ 3T$T
D$hP3
D$hPj
L$X9L$\
;\$\|
;D$\|
Y+L$\
Y+L$\
+D$\-XJ
3D$X3
D$hPj
D$hPj
L$hQj
D$hPj
D$hPj
D$hPj
D$hPj
D$hPj
D$hPj
L$89T$t
YY_^]
ICM4;
NV12tb
GRGBt,
RGBGt
AYUVt-
UYVYu%
8s,jq
9;tsh<
D$(VPj
t$ Vj
u%9] u[h
8s.jq
TY2t?
;FTs=9
QQSVW
;CTs4
;FTs99
;FTs.9
;FTs$
L$<QS
D$4;D$Tu3
D$8;D$Xu)
=UYVYt
=YUY2t
=RGBGt
=GRGBt
t(VRS
>vt,h
9W ud
9{Tv4
F;sTr
8;STr
9{Tv 
9{Tvj
L$$QW
wq;0w
;NTs$
9~Tv&
;D$(t
;D$(t
L$lQW
T$ljNY;
9L$8t
D$\PSVW
|$LYY
L$TQW
| vVhV
tRj@^V
tXjH^V
tLj@^V
tXjH^V
Z91tV
t"h<r
A0VW3
9PHt}
9x0uE
u&9:u
tsjP^V
QQSVW
9_(t%
QQSVW
L$,_^3
9w(tU
YY+>t
PPPj]
8s.jq
8s.jq
8s.jq
8s.jq
8s.jq
8s.jq
8s.jq
9G v|
9G vb
9G vb
9_ v=
C;_ r
9_ v?
C;_ r
{p_^[
AD_^[
@_^[]
L$,QW
L$LQS
D$d;D$Dur
D$h;D$Huh
L$$QS
L$DQW
D$\;D$<uj
D$`;D$@u`
s`PPQ
B\j Y+
D$ YY
D$ YY
T$$Rj
D$ YY
8^\v(W
w`PPQ
;Qxu>
;A|u6
QQSVW
u@9{(u;
tW9>u-9~
QQSVW
QQSVW
;YUY2_t
;UYVYu
B\j Y+
QQSVW
D$|PRRRVS
D$`Pj
L$@v/
T$ 9T$$
L$|;L$Pu<;T$Tu6
;D$Hs:
|$TA;N
T$ ;D$$s_
L$(;T$$
D$4YY
@;zxt5
f;r|t
GF;|$
D$$YY
|$ O;
sdPPQ
YY_^[
QQSVW
ue9C(u`
QQSVW
B\j Y+
L$<_^[3
;T$ r
9D$ vL
;D$ r
D$,YY
@9GPu
S|XjT
QQSVW
@9GPu
S|BjT
BVW9S@t
MET1u
DXT1tG
DXT2t5
DXT3t-
DXT4t%
DXT5t
~lDXT1
QQSVW
VWjTj
qL9QPr
C9_8t
9DBUGu
u79sHt2
SPRQj
;FHtM
;FHt#j
FHC;X
FD9_Pu+
r.HPRhX
9^ptU;
QHSVW
r#HPQ
FD9~pu[
SVWjP
C9^Tu
CSj0Z
CSj0Z
~6VW3
 t-Qh
tVQh 
9_Pu(
r6HPQhX
ua9_Dt\h
>9_Dt?h
9G@uF
GDt:h
;G@s!9W@w
RQhx*
;APu#
;BPu#
;APu#
FDSW3
C9_Tu
CSj0Z
HPSWh 
 t;Sh
9_Pu(
w@hd<
r4HPQhX
9A@uG
ADt8h
RQh@@
;APu#
;BPu#
;APu#
8t h@-
FP@t*Q
Fl;Fpw
9HLt$h
un9_Pu+
r7HPQh
9B@uK
ADt=h
;A@s!9Q@w
~HC;_
QHSVW
FP t2
FP@t*Q
Fl;Fpw
WPQhX
.t*hp
PSWh 
 tFSh
un9_Pu+
w@hd<
rOHPRh
9B@uK
ADt=h
;A@s!9Q@w
~HC;_
FP tN
RQWh"
FP@tN
;APu#
;APu#
;APu#
t hpT
FP t*
FD9_tt!
SSSSS
V8_8uO
PQQSVW
DXT1t+
DXT2t#
DXT3t
DXT4t
DXT5t
j@h0)
j hD)
j@h8,
j hL,
@Sh4-
`Sj h
Sj@h(3
j hX3
XSj hP2
Sj hD4
Sj hP2
wWtM-
PVhh6
O(_^[
QQSVW
=MET1u
DXT1t#
DXT2t
DXT3t
DXT4t
DXT5t
RGBGt
GRGBt
=DXT1t`=DXT2tK=DXT3tD=DXT4t==DXT5
T$Lf;
t$LPP
9D$<u
BSViu
t898u
DXT2;
tt%=MET1t
=DXT1t
=DXT3t
=DXT4t
=DXT5u
WWPPj
QQQQPQQQQQQ
j@j(Z
j0_Wj
PQSVW
9~Dv'
C;^Dr
9~Lv#
G;~Lr
G;~Tr
DXT1;
DXT2t
DXT3t
9_hs2j
9_hs2j
G9_^[
9~Dv#
C;^Dr
9~Lv#
G;~Lr
G;~Dr
G;~Lr
^:[^]
9w$vIj
vTh$p
v,Sh@p
QPQh?
QQQhx8
WPWh?
E$VW3
E VWj
Pj'SSRQ
V<_^[]
9y,uU
A4;A0t
9~,uW
F4;F0t
39~,uT
F4;F0t
39~,uT
F4;F0t
;P0tz
;P0tk
FHPtI
r0^+R
D$ SV
L$,_^[3
PQSVW
w?t9+
W;q,u23
S9Axv
[j Y;
L$T_^[3
FH tT
;Hlv"hB
F4;F0t
D$,;D$Lu-
D$0;D$Pu#
L$T_^[3
G4;G0t
u@j8P
kF,4P
t;SVW
r\^+R
Cx_^[
D$ Pj_
D$ PjF
D$ Pj_
D$ PjF
D$ Pj
D$(Pj_
D$(PjF
L$L_^[3
L$|_^3
9Y<u 
9Y<u 
w7t1j
L$D_^[3
;CPw*
 ;CPv
CT _^[
;CPw)
A8;A<w
r`_^[;
GT;GPv
;CPv7
sT_^[
;GPvT
GT;GPv
C`RRf
9{Tu-9}
u(9{xu
t@9{|t;
CP_^[
_L;wHw
_|;wHw
_|_^[
.;{Du'
}(WVP
QQSVW
9Q$uP
C RWP
VWjpj"
VWjDj!
;GPw/
;GPw%
;GPw(
;GPv0
;GPw*
;GPw*
FWjDj$
GH+GL9E
GH+GL9E
;Olu$9GDu
9G|tT
G<_^[]
{b&uI
A$;CPw>
(;CPv
CT(_^[
;GPw4
_T_^[]
D$ SVW
L$,_^[3
G _^[
;GPwZ
F4;F0t
;GPw;
F4;F0t
F4;F0t
;CPw&
F4;F0t
G4;G0t
G4;G0t
F4;F0t
G4;G0t
G4;G0t
F4;F0t
{,_^[
9GTu%9E
u 9Gx
VWjDjA
;GPw*
VWjDj$
G _^[
F0;GP
4;GPv
QSVWj jb
;GPw(
;GPw"
;GPw(
VWjDjA
VWjpj"
VWjDj!
;GPw+
VWjDj$
39~,uw
F4;F0t
L$,_^3
xg9|$
F4;F0t
L$4_^[3
39~,uW
F4;F0t
xm9|$
L$4_^[3
39~,uW
F4;F0t
xm9|$
L$<_^[3
F4;F0t
F4;F0t
L$$_^[3
F4;F0t
F4;F0t
39~,uW
F4;F0t
xm9|$
{,_^[3
F4;F0t
L$D_^[3
D$$t,
QSVW3
QSVW3
C9~X|
u!9~\u
3$A<@u
r[9wX|VQ
tc9sX|^Q
!^X_^[
xFjeV
jfVPQ
u+!T$
D$t;D$
t@j@^
t@j@^
t@j@^
tYj@3
 t"WV
 t"WV
QQSVW3
Y(G;}
D$pSV
D$,tN
L$<QWP
L$<QWP
L$<QWP
D$<!{
L$\_^[3
!D$|!
L$dkL$H
L$TkL$,
t$|WPV
t$|WP
;|$dr
t$ 9t$d
D$(;t$d
t$0WS
uI9D$
|$4WSV
t$0WS
;t$luF
L$D_^[3
L$pQQ
D$hSVW
L$XQQ
L$t_^[3
L$d_^[3
L$d_^[3
L$d_^[3
D$ u#
T$0uz
\$ td
D$ u'
D$()D$
9D$4u{
D$\PV
D$()D$
D$XPS
D$`PV
D$`PW
D$8;D$T
D$D#D$,
9t$(ud
D$LPS
D$,}|f
D$HPV
t$ 9\$$
D$PPW
!T$ V
D$PPS
L$(;L$D
GetProcessDpiAwarenessInternal
SetProcessDpiAwarenessInternal
DCompositionCreateSurfaceHandle
DwmpUpdateProxyWindowForCapture
d3d9.dll
Direct3DShaderValidatorCreate9
PSGPError
PSGPSampleTexture
D3DPERF_BeginEvent
D3DPERF_EndEvent
D3DPERF_GetStatus
D3DPERF_QueryRepeatFrame
D3DPERF_SetMarker
D3DPERF_SetOptions
D3DPERF_SetRegion
DebugSetLevel
DebugSetMute
Direct3D9EnableMaximizedWindowedModeShim
Direct3DCreate9
Direct3DCreate9Ex
Direct3DCreate9On12
Direct3DCreate9On12Ex
.?AVResultException@wil@@
.?AVexception@@
.?AVCExpEvalException@D3DDM@@
ew|>&=4_
__CxxFrameHandler3
_vsnwprintf
memcpy_s
??1exception@@UAE@XZ
??0exception@@QAE@XZ
??0exception@@QAE@ABV0@@Z
_vsnprintf_s
_purecall
memmove_s
malloc
_vsnprintf
qsort
_stricmp
strcpy_s
strrchr
abort
sscanf_s
strstr
__iscsym
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
?terminate@@YAXXZ
??1type_info@@UAE@XZ
_lock
_unlock
__dllonexit
_onexit
_except_handler4_common
RtlDllShutdownInProgress
EtwEventWriteTransfer
EtwLogTraceEvent
EtwEventUnregister
EtwEventRegister
VerSetConditionMask
RtlPublishWnfStateData
RtlIsCriticalSectionLockedByThread
EtwGetTraceEnableLevel
EtwRegisterTraceGuidsA
EtwGetTraceLoggerHandle
EtwGetTraceEnableFlags
EtwUnregisterTraceGuids
ntdll.dll
RegOpenKeyExA
RegCloseKey
RegQueryValueExA
RegDeleteValueA
RegEnumValueA
RegQueryInfoKeyA
api-ms-win-core-registry-l1-1-0.dll
AllocateLocallyUniqueId
AddMandatoryAce
AddAccessAllowedAce
GetLengthSid
SetKernelObjectSecurity
InitializeAcl
InitializeSecurityDescriptor
IsValidSid
SetSecurityDescriptorSacl
InitializeSid
GetSidLengthRequired
GetSidSubAuthority
SetSecurityDescriptorDacl
api-ms-win-security-base-l1-1-0.dll
ConvertStringSidToSidW
api-ms-win-security-sddl-l1-1-0.dll
GetCurrentDpiInfo
api-ms-win-gdi-dpiinfo-l1-1-0.dll
DefWindowProcA
LoadIconA
RegisterClassA
CreateWindowExA
EnumDisplayDevicesA
DisplayConfigGetDeviceInfo
SystemParametersInfoA
SetWindowPos
GetMonitorInfoA
IntersectRect
SetRect
GetClientRect
EnumDisplaySettingsA
ClientToScreen
OffsetRect
GetSystemMetrics
ReleaseDC
GetWindowInfo
GetDC
MonitorFromWindow
IsIconic
IsWindow
GetWindowLongA
mouse_event
SetForegroundWindow
GetForegroundWindow
GetAncestor
GetWindowDisplayAffinity
SetWindowDisplayAffinity
SetWindowLongA
IsRectEmpty
EqualRect
EnumDisplayMonitors
IsWindowUnicode
GetWindowLongW
IsWindowVisible
ShowWindow
IsZoomed
SetTimer
KillTimer
SetWindowLongW
CallWindowProcW
CallWindowProcA
SendMessageA
PostMessageA
GetKeyState
GetWindowRect
OpenClipboard
EmptyClipboard
SetClipboardData
CloseClipboard
OpenInputDesktop
GetUserObjectInformationA
CloseDesktop
GetThreadDesktop
RegisterHotKey
UnregisterHotKey
SetRectEmpty
UnionRect
SetCursor
GetCursor
DestroyIcon
GetDesktopWindow
GetWindowDC
CreateIconIndirect
GetCursorPos
SetCursorPos
PtInRect
USER32.dll
GetFileVersionInfoSizeExA
VerQueryValueA
GetFileVersionInfoExA
api-ms-win-core-versionansi-l1-1-0.dll
NtNotifyPresentToCompositionSurface
NtBindCompositionSurface
NtUnBindCompositionSurface
NtQueryCompositionSurfaceStatistics
win32u.dll
D3DKMTGetMultiPlaneOverlayCaps
BitBlt
D3DKMTWaitForVerticalBlankEvent
D3DKMTQueryAdapterInfo
D3DKMTSetContextSchedulingPriority
D3DKMTOpenResourceFromNtHandle
D3DKMTGetDeviceState
D3DKMTGetResourcePresentPrivateDriverData
D3DKMTOfferAllocations
D3DKMTGetOverlayState
D3DKMTOpenSyncObjectFromNtHandle2
D3DKMTFlipOverlay
D3DKMTCreateOverlay
CreateDCA
D3DKMTSignalSynchronizationObjectFromCpu
D3DKMTWaitForSynchronizationObject2
D3DKMTGetContextSchedulingPriority
D3DKMTOpenResource2
D3DKMTLock
D3DKMTUnlock
D3DKMTMarkDeviceAsError
D3DKMTGetScanLine
D3DKMTSignalSynchronizationObject2
D3DKMTQueryResourceInfo
D3DKMTCreateContextVirtual
D3DKMTOpenAdapterFromDeviceName
D3DKMTSetAllocationPriority
D3DKMTSignalSynchronizationObjectFromGpu2
D3DKMTCheckMonitorPowerState
D3DKMTGetMultisampleMethodList
D3DKMTReserveGpuVirtualAddress
D3DKMTDestroyDevice
D3DKMTCreateDCFromMemory
D3DKMTSubmitWaitForSyncObjectsToHwQueue
D3DKMTCreatePagingQueue
D3DKMTReleaseProcessVidPnSourceOwners
D3DKMTSubmitCommandToHwQueue
D3DKMTCreateContext
D3DKMTReclaimAllocations2
D3DKMTSignalSynchronizationObject
D3DKMTSetProperties
D3DKMTSetVidPnSourceOwner1
D3DKMTSubmitSignalSyncObjectsToHwQueue
D3DKMTSetDisplayMode
DeleteDC
D3DKMTWaitForSynchronizationObjectFromGpu
D3DKMTSetQueuedLimit
D3DKMTSignalSynchronizationObjectFromGpu
D3DKMTInvalidateCache
D3DKMTDestroyHwQueue
D3DKMTQueryVidPnExclusiveOwnership
D3DKMTCheckExclusiveOwnership
D3DKMTRender
D3DKMTSubmitCommand
D3DKMTCreateDevice
D3DKMTSetDisplayPrivateDriverFormat
D3DKMTSharedPrimaryLockNotification
D3DKMTUpdateOverlay
D3DKMTQueryAllocationResidency
D3DKMTCreateAllocation2
D3DKMTDestroyPagingQueue
D3DKMTQueryResourceInfoFromNtHandle
D3DKMTOpenResource
D3DKMTDestroyDCFromMemory
D3DKMTOpenAdapterFromHdc
D3DKMTUpdateGpuVirtualAddress
D3DKMTCreateSynchronizationObject
D3DKMTReclaimAllocations
GdiEntry13
D3DKMTGetDisplayModeList
D3DKMTCheckOcclusion
D3DKMTCreateSynchronizationObject2
D3DKMTSetGammaRamp
D3DKMTConfigureSharedResource
D3DKMTShareObjects
D3DKMTQueryStatistics
D3DKMTDestroySynchronizationObject
D3DKMTWaitForSynchronizationObject
D3DKMTUpdateAllocationProperty
D3DKMTUnlock2
D3DKMTSubmitPresentToHwQueue
D3DKMTEscape
D3DKMTGetSharedPrimaryHandle
D3DKMTDestroyOverlay
D3DKMTUnregisterTrimNotification
D3DKMTEnumAdapters
D3DKMTWaitForSynchronizationObjectFromCpu
D3DKMTRegisterTrimNotification
D3DKMTSharedPrimaryUnLockNotification
D3DKMTCreateHwQueue
D3DKMTCloseAdapter
D3DKMTFreeGpuVirtualAddress
D3DKMTDestroyAllocation
D3DKMTDestroyContext
D3DKMTMapGpuVirtualAddress
D3DKMTCreateAllocation
D3DKMTLock2
D3DKMTDestroyAllocation2
D3DKMTEvict
D3DKMTPresent
D3DKMTMakeResident
DdEntry49
DdEntry41
GetRandomRgn
DdEntry1
DeleteObject
DdEntry10
DdEntry11
DdEntry3
DdEntry39
SetStretchBltMode
DdEntry34
DdEntry36
DdEntry18
GdiEntry1
DdEntry5
DdEntry4
DdEntry40
DdEntry48
DdEntry45
GetRegionData
DdEntry53
DdEntry21
DdEntry19
DdEntry13
CreateRectRgn
DdEntry35
DdEntry17
DdEntry56
GetDIBits
DdEntry23
DdEntry28
GetDeviceGammaRamp
DdEntry22
DdEntry37
SetLayout
DdEntry26
DdEntry9
DdEntry12
DdEntry24
DdEntry46
DdEntry50
DdEntry43
StretchBlt
DdEntry44
DdEntry33
DdEntry29
DdEntry31
DdEntry6
DdEntry25
CreateCompatibleDC
DdEntry42
DdEntry16
DdEntry30
CreateDIBSection
SelectObject
CreateCompatibleBitmap
DdEntry54
DdEntry38
DdEntry2
DdEntry20
DdEntry27
GetSystemPaletteEntries
GetDeviceCaps
GetNearestColor
CreateDIBitmap
GDI32.dll
NotifyOverlayWindow
GetModuleFileNameA
HeapFree
GetModuleHandleExW
GetCurrentThreadId
FormatMessageW
HeapAlloc
GetProcAddress
GetProcessHeap
GetModuleHandleW
DebugBreak
CreateSemaphoreExW
SetLastError
EnterCriticalSection
ReleaseSemaphore
LeaveCriticalSection
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
WaitForSingleObject
ReleaseMutex
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
CloseThreadpoolTimer
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
CreateMutexExW
AcquireSRWLockShared
DeleteCriticalSection
GetCurrentProcessId
IsDebuggerPresent
GetNativeSystemInfo
OutputDebugStringA
FreeLibrary
LoadLibraryExW
LocalFree
LocalAlloc
InitializeCriticalSection
LoadLibraryA
SetErrorMode
lstrcmpA
InitializeSRWLock
GetCurrentProcess
GetProcessId
Sleep
QueryPerformanceFrequency
LoadLibraryW
WideCharToMultiByte
GetSystemTime
QueryPerformanceCounter
GetModuleHandleA
FreeLibraryAndExitThread
CreateSemaphoreExA
DisableThreadLibraryCalls
VerifyVersionInfoA
GetTickCount
OpenEventW
ResetEvent
GlobalAddAtomA
CreateSemaphoreA
CreateMutexW
OpenMutexW
SetNamedPipeHandleState
ConnectNamedPipe
DisconnectNamedPipe
FlushFileBuffers
ReadFile
PeekNamedPipe
WriteFile
GetPrivateProfileStringA
TransactNamedPipe
WaitNamedPipeA
CreateFileA
CreateNamedPipeA
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
GetSystemTimeAsFileTime
KERNEL32.dll
DwmIsCompositionEnabled
dwmapi.dll
QueryServiceStatus
QueryServiceConfigA
OpenServiceA
OpenSCManagerA
api-ms-win-service-winsvc-l1-1-0.dll
CloseServiceHandle
api-ms-win-service-management-l1-1-0.dll
ApiSetQueryApiSetPresence
api-ms-win-core-apiquery-l1-1-0.dll
GetModuleFileNameW
GetProcessMitigationPolicy
WaitForMultipleObjects
GetModuleHandleExA
SetEvent
CreateThread
CreateEventA
sprintf_s
strcat_s
EtwEventWriteNoRegistration
RegCreateKeyExA
RegGetValueA
RegSetValueExA
RegEnumKeyExA
UnregisterClassA
PeekMessageA
LoadCursorW
TranslateMessage
SetPropW
AttachThreadInput
MsgWaitForMultipleObjects
RemovePropW
GetPropW
DestroyWindow
DispatchMessageA
GetWindow
GetWindowThreadProcessId
EventSetInformation
EventRegister
EventWriteTransfer
EventUnregister
api-ms-win-eventing-provider-l1-1-0.dll
CoUninitialize
CoCreateInstance
CoInitializeEx
api-ms-win-core-com-l1-1-0.dll
GetFileSize
GetVersionExA
GetLogicalProcessorInformation
ResolveDelayLoadedAPI
DelayLoadFailureHook
_CIcos
_CIexp
_CIlog
_CIlog10
_CIpow
_CIsin
_CIsqrt
_CxxThrowException
_ftol2
_ftol2_sse
floor
memcmp
memcpy
memmove
memset
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Direct3D 9 Runtime
FileVersion
10.0.22621.436 (WinBuild.160101.0800)
InternalName
D3D9.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
D3D9.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.436
VarFileInfo
Translation
Start
Log Always
D3DSWAPEFFECT_DISCARD
D3DSWAPEFFECT_FLIP
D3DSWAPEFFECT_COPY
D3DSWAPEFFECT_OVERLAY
D3DSWAPEFFECT_FLIPEX
D3DPRESENT_DONOTWAIT
D3DPRESENT_LINEAR_CONTENT
D3DPRESENT_DONOTFLIP
D3DPRESENT_FLIPRESTART
D3DPRESENT_VIDEO_RESTRICT_TO_MONITOR
D3DPRESENT_FORCEIMMEDIATE
WEVTp
CHANl
Microsoft-Windows-Direct3D9/Analytic
BMAPD
VMAP<
D3D9PresentFlags
D3D9SwapEffect
TEMP$
EventData
pSwapchain
Flags
pSwapchain
Flags
EventData
Result
Result
EventData
pSwapchain
Width
Height
BackbufferFormat
BackbufferCount
SwapEffect
Windowed
PresentationInterval
AdditionalSwapchain
pSwapchain
Width
Height
BackbufferFormat
BackbufferCount
SwapEffect
Windowed
PresentationInterval
AdditionalSwapchain
EventData
LogicalSurfaceHandle
BackBufferCount
SharedHandles
LogicalSurfaceHandle
BackBufferCount
SharedHandles
EventData
EventData
LogicalSurfaceHandle
BackBufferNumber
BackBufferHandle
LogicalSurfaceHandle
BackBufferNumber
BackBufferHandle
EventData
LogicalSurfaceHandle
AdjustValue
FenceValue
LogicalSurfaceHandle
AdjustValue
FenceValue
EventData
ReturnValue
PresentCount
PresentRefreshCount
SyncRefreshCount
SyncQPCTime
ReturnValue
PresentCount
PresentRefreshCount
SyncRefreshCount
SyncQPCTime
PRVAD
Microsoft-Windows-D3D9
OPCOx
win:Info
win:Start
win:Stop
LEVL8
win:LogAlways
Present
Reset
BindToDWM
DWMRedirection
FlipExSurfaceTimeout
FlipExSemaphoreTimeout
GetPresentStats
KEYW0
Events
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787|7
8(848@8L8X8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
;)<X=m=
>!>+>1>?>E>O>Y>c>m>w>
?"?&?A?a?
0<1B1m1
2%2:2
334J4g4z4
5>5U5[5B6t7
=-=U=r=
30D0<2E2c2
283P304K4j4
5;5q5
5$6z7
:+:6:
>k>s>~>
?8?\?v?
010P0m0w0
4,4C4l4z4
799?9I9N9
:U:b:h:
:P:T:X:\:`:d:h:l:p:t:x:|:
=O=V>
?&?F?W?\?w?}?
90I0Z0q0
1&2:2H2
3&3>3u3}3
6&646^6j6
7#7S7_7r7
9k:s:
: ;4;
<0<Y<h<
1$1A1J1[1`1l1q1~1
4:4t5
7(7W7
8(8G8p8}8
9C9s9
=c=@>P>g>
?M?\?
0 0(0
061O1c1
2G2]2s2
484S4.5Q5~5
797_7~7
9.<Y<p<u<
2]4b4r4
6<6^6
6(767`7
:':-:n:s:
:1;G;
;.<3<
>+>V>e>
?4?[?
0(0v0
4+4B4b4}4
6<6A6
8:8o8t8
<&=,=2=b=i=o=s>|>!?H?k?v?
0J0O0
0D1I1l1q1
1)2.2
4O4T4w4|4
475_5
8H8L8h8l8
9O9T9
:#<L<l<
=T>n>
?&?V?
1(1Q1
4<5[5
7V8h8n8@9G9e9
:;:B:c:
:I;`<
?&?,?E?a?
0n1u1
1V3\3
344C4
5-6I6j6
9X9^9
<Y<{<
=B=l=
2!2%2)2-2
4b5y5
6;6U6a6w6
7,717J7O7f7k7
83888y8
;+;J;e;|;
=%>>>
?]?b?
d0h0l0p0t0x0|0
2u3E5J5
7J8n8
8n9x9
:;:@:t:x:|:
3M3Z3
575S5\5z5
6'6;6b6v6
8/8G8^8u8
9)9?9U9k9
: :7:N:e:|:
;';A;[;t;
<&<?<X<q<
= =9=R=k=
=Q>i>
?1?H?`?x?
H0b0{0
1.1G1`1y1
2#2E2`2y2
3,3P3m3
424T4m4
5)5K5m5
676V6y6
9?:`:k:v:
7_8D>\>t>
?4?L?d?|?
112I2S2a2
5F7N7
:2:e:
;7<H<M<
>M?R?p?
/092Q2i2
3L3`3e3
364;4
>x?}?
0L0q0
091>1
2'353
7R7b7l7
909g9w9|9
:(;f;
<(<2<<<F<P<Z<d<n<x<
="=,=6=@=J=T=^=h=r=|=
>&>O>V>]>d>k>r>y>
?"?(?.?4?:?@?F?L?R?X?^?d?j?p?v?|?
0$0*00060<0B0H0N0T0[0e0o0y0
1$1\1
1L2b2
4E4V4f4y4
5k5x5
616L6
697B7
8-8|8
:=<^<
0A1a1l1
5o6y6
8.838b8
9$9.9%:0:::K:^:
;B<R<W<
> >*>4>>>H>R>\>f>p>z>
?$?.?8?B?L?V?`?j?t?~?
0(020<0F0
3:4B4R4W4t4
5C5a5
6/646j6t6
6Q7[7`7z7
8)8O8[8
9P:_:
<2=6?
0'3!4'414;4[4i4
5"545
566X6`6p6u6
>-><>K>Z>d>i>
?*?9?y?
5]6w6
6?7P7l7
8%9F9V9u9
:":B:^:~:
;:;h;
>L>m>
010K0
1/191Q1\1c1j1o1w1
4&4B4h4
519n9
0*080R0%1S1d1
4p5V7q8
9s;D=
1%111=1
2\2z2
2&3D3j3
5#5(5-52575<5A5F5K5P5U5Z5_5d5i5n5s5x5}5
6 6%6*6/64696>6C6H6M6R6W6\6a6f6k6p6u6z6
7"7'7,71767;7@7E7J7O7T7Y7^7c7h7m7r7w7|7
8!8&8+80858:8?8D8I8N8S8X8]8b8g8l8q8v8{8
:9:@:E:R:W:f:
0M2R2
5,5C5
7N7`7
8+8y8
9X9a9
:$:7:B:I:Z:p:}:
<!<C< =/=
=^>p>
>9?K?
7(9Z:t:
:a<k<
>G>s>U?
1 1M2R2a2|2
6165696=6A6g6
9H:N:U:
=8=U=r=
>,>4>_>m>
?/?L?i?
0:0T0x0C1
3 4-4A4Z4
4R5j6
7F7_7
:^;u;
7,8^8
:4;_;
<8<^<
<!=_=
1#2]2
2*3[3
3+4S4
4)5=5
7!787J7
8$858M8
989J9
>N?U?
000@0D0H0L0y0
6&6e6
7)797
7L8e8
;G<k<,=V=|=
0?0I0s0
1*2W2
?0F0\0t0x0
0;5?5C5G5K5O5S5W5[5_5c5g5k5o5
5^6f6n6
7'7/7`7
8)9T9f9x9o;
494\4
5Y5:6G6
6^7x7
8)9]9
9A:4;^;O<
0k0p0
2@2Z2{2
3B3Q3_3d3u3
5A5Y5
2x2|2
9C:G:K:O:S:W:[:_:c:g:k:
445z6
9!9%9)9-9195999=9A9E9I9M9Q9U9Y9]9a9e9i9m9q9u9y9}9
?.?O?b?
0&0<0i0
1"101
212A2z2
253f3l3
3p4&5-5d5k5
6F6\6
7,7a7
8 8(888t8
0+12191U1\1o1}1
1,2{3
3$4B4_4
7:7A7r7
9:9G9
:0;7;
= =B=]=m=
?.?F?
4b5i5
6V6]6
7#7'7+7/737S7W7[7_7c7g7k7o7s7w7{7B8
9A9e9
:@:v:
;E;L;r;y;
<#<'<+</<N<
>!>A>r>
010l0
4*5~5
6,7_7
8:9Q9s9
:@;e;
;p<u<|<
? ?I?
3"3e3
5>5d5
5@6~6
7;7e7
:L:o:y:
:,;n;
<@<i<
0.1~1
3X4y4
5Y5w5
879d9p9
>0>4>
2 2$2
2;3T3n3D4x4
677w7
9&:T;
>8>T>q>
0U1\1h1
4$4V4
5I5|5
7"8P8
<a<s<
=;=B=
0(070D0S0d0
0:1Q1d1k1q1}1
2%2|2
3A4K4[4
7S8s8
939o9
>)>>>L>^>p>w>
?*?6?<?M?S?Y?g?l?z?
0#060l0}0
1"1,121>1K1w1
2"232=2[2i2{2
3&3;3b3{3
4:4H4X4
:;;t;y;
<&<-<7<[<q<v<
>_>r>^?e?t?
0h1p1
6)7O7[7`7w7
8/868=8D8L8Y8g8
9*9n9
:':4:D:|:
;$;R;
0W2q2
5-64607F7
;H;U;o;
<#<|<a>u>
0)0M0
0(151M1]1
2&3*3.32363:3>3B3X3d3v3
3>4S4g4o4w4
405>5L5Z5
5(616
7#7[7b7
90:_:n:
;4;T;
; <<<J<T<e<
=O=T=]=
?5?k?y?
#0A0F0
8.939>9K9~9
96:a:k:y:
<!=#>
?D?V?
95:[:j:w:
;(<N=g=
>+>6>?>s>
!0(0N0U0l0p0t0
1I2f2o2
233@3k3
4:5@5!676U6^6d6l6r6)7y7
5a6q6
6A8Q8
2(2=2J2g2p2v2
3$3)3/3C3H3T3e3m3
4A4X4m4
6"6=6
7*7K7r7
9#9)9/959;9A9H9O9V9]9d9k9r9z9
:1:7:=:C:I:O:V:]:d:k:r:y:
;&;<;D;h;q;
>)>5>R>
?#?7?G?W?d?}?
1$2+2
2T3X3\3`3d3h3l3p3t3x3h4l4p4t4x4
5:5C5O5W5m5
6$6H6q6z6
9&:s:
=&=M=
=D>K>
0D0P0`0h0}0
1%1/191K1j1v1
6"6:6X6j6
687G7h7z7
9E;Q;];e;z;
<:<_<g<s<{<
 0,0R0\0p0|0
1+1Y1d1n1s1x1}1
2)2O2
8 8$8(8,808
9&9,999
:>:V:g:
:5<_<
0S0m0x0
0E1Q1]1e1z1
2 2&2/252;2K2T2_2k2p2y2
3)353?3K3U3a3n3t3
4)464A4F4Q4V4a4f4q4v4
5_6i6d7z8
:^;q;w;};
=$=7=K=e=u=z=
>J>i>
6+7F7
8*8:8D8T8^8h8z8
:/;0<U<a<
<V>z>
1%2B2#4/4;4G4S4_4k4w4
9/:D:M;
;"<'<
>`>d>h>l>p>t>x>|>
>:?M?g?
0q0x0
1f5k5
7'7T7w7
7!8D8g8
8>9q9
9 :C:s:
<><a<
<$=b=
?J?m?
0P0s0
141q1
172Z2}2
2-3]3
445W5z5$6
828e8
8+9N9q9
:-:P:s:
;:;d;
;$<G<t<
<.=z=
021J2
293Q3%4U4x4
4,5u5
6C6f6
7E7h7
7(8X8
9;9k9
;;;k;
<A<d<
< =Z=
>0>S>
?6?Y?
0#0F0
1I1|1
3@3p3
4@4c4
5J5m5
6)6L6o6
7A7d7
8&8D8N8j8t8
8(969T9h9r9
:":,:>:U:
<"<Q<e<
= =W=
>;>C>Y>j>|>
?G?R?p?
0,1Q1`1o1~1
2(373F3
4(4m4
485G5V5e5t5
5!606T6
647S7
7 858T8
:::J:
<:<@<I<Q<`<
=-=D=R=]=k=
2C3[3s3
6A6F6
9,9G9_9~9
;$;0;9;G;L;u;
;2<F<R<^<
=8=G=S=X=z=
>">.>3>N>Y>r>x>
?2?B?U?{?
2-222w2
3(3C3H3Y3
3%4>4C4T4
4K5P5
5K6e6
7"7'787}7
8(8@8e8s8E9K9P9
;J;b;z;
<"<8<=<I<N<]<}<
=!=C=
>A>S>X>
>0?5?
0+000H0M0g0w0
1L1]1b1s1
2'2<2S2y2
3@3S3\3r3"4'4
5/5?5a5
6/646a6f6
7H7Q7V7
;M;R;n;s;@<g<s<
?.?F?
0*0M0R0
1$131K1V1i1v1
2)2J2S2f2
23383R3n3
3`4q4v4
4A5v5
878N8Y8c8
:3;Z;t;,<4<A<l=q=
=2>7>O>T>
>W?u?z?
1-121W1_1i1
12272G2x2
4'474<4
1;1{1
425<5s5z5
5)6i6
8X8$9X9\:
0b2n2
343D3
3)474>4E4L4S4Z4a4h4o4v4}4
5-5A5K5^5q5
5:8?8[8x8
80959
:-:2:b:l:
:?<D<
<I=N=
=@>R>
>5?:?
2,3:3
4U4Z4
4+606Z6
7#888i8
9V9`9
:A:V:b:u:
;);8;R;o;t;
;)<0<U<\<l<x<
=%=*=9=`=
>,>;>@>_>x>
>X?]?x?}?
1?1`1l1q1
222;2Y2
2!3@3L3X3
4L4|4
5/5@5E5e5j5
6)6Q6_6
7'7-787R7h7m7
8&8Q8
98<B<^<
2%2P2X2m2
2J3O3g3s3x3
4;4[4`4x4
4Q5z5
7D7X7l7q7
8P8]8b8
8*9:9?9e9|9
91:J:]:w:
?Q?f?
0U0n0u0z0
1"1'161R1f132
3*3F3\3p3q4
595d5t5
5+6<6A6]6r6
767X7]7o7
9(9k9|9
:.:P:a:f:
;!;L;Q;t;y;
;E=J=
>.?3?
1.1:1?1c1h1
353L3o3
4K4\4a4r4
5&5=5T5k5
6#6:6Q6h6
7 777N7e7|7
848K8b8y8
9':[:
<1<V<
=O=T=e=??
0^0u1
1j2{2
3"3'3
375<5i6n6
8G8S8_8k8w8
9%9Z9d9
:':,:G:L:t:
;<<R<W<o<t<
>@>E>V>k>z>
?-?2?K?_?d?o?
0!0Y0j0o0~0
121r1
1,5S5,6Z6
=!=j=v=
>$>)>G>X>l>q>
? ?&?/?8?B?K?U?^?h?q?{?
40T0|0
0>1_1i1x1
2-2v2
3#3(373k3
5.5s5
637y7
8 9%9V9[9
:":::?:N:
<0<r<
=D=x=
?2?F?`?y?
0/0R0
1%1F1Z1w1
2U2s2
4W4u4
495>5[5`5
6F6]6s6x6
7+7@7l7
8#8(8M8
;*;/;L;Z;x;};
<,<C<^<l<s<x<
=$=)=8=v=
?&?J?r?
0)0g0
4G526M6d6
7(7@7E7T7o7
818=8F9y9
= =%=5=N=S=u=
?(?0?<?a?f?{?
,0=0B0Q0
151k1p1
182f2w2|2
3'3i3z3
4C4T4Y4h4
6*6v6
7A768X8e8k8
9'9F9[:i:
;.<?<D<S<r<
<!=&=5=M=R=y=
>(>-><>
>,?Y?k?p?
1H1.4h4u4
5%555?5O5(818O8
9$9*90969<9B9H9N9T9Z9`9f9l9r9x9~9
: :&:,:2:8:>:D:J:P:V:\:b:h:n:t:z:
;";&;*;.;2;6;:;>;B;F;J;N;R;V;Z;^;b;f;j;n;r;v;z;~;
<"<&<*<.<2<6<:<><B<F<J<N<R<V<Z<^<b<f<j<n<r<v<z<~<
7G7]7q7u7y7}7
3$4P4
6G;|;j<v<
>2?t?}?
:0X0e0
1)1d1u1
2H2h2~2
3'3B3\3m3
485E5W5`5i5o5t5y5
9!9P9~9
;@;U;
<3<J<
515d5
;0;<;
<1Y1g1
2/2l2
3*4{4
565f5t5
7'7A7a7|7
:C:O:
;5;A;b;/<j=
=@>L>
0+0M0_0
151e1
2_6c6g6k6o6s6w6{6
9^9p9
=;>A>X>
?(?<?P?g?}?
0A1O1
1n2}2
3F4Y4
4*5B5N5u5
7&7D7
8<9J9g9
9Q:~:
0"1(1b1+2
3'353;3G3
5w5~5
6-6T6h6n6
8<9M9h9
:$:m:{:
:.;=;O;U;
=5=u=
>5>P>W>
>;?R?`?}?
0%0,0D0S0~0
1 1-1
5(5O5u5
717e7
9%9*9/949A9F9L9
:):A:g:t:
;8;f;};
<3<j<o<
%000O0g0
2e2s2x2
2+393>3|3
455K5
5J7Y7`7v7
7=8X8p8
9A9U9l9
9!:_:
:1;E;`;
>1>q>W?e?v?
0'0F0]0
2T2z2'3@3Q3v3
4&4I4
4'5O5[5e5l5
7)8)9J9O9
:*:;:n:
;9;S;
<%<R<e<
?@?l?
3&4p4
8(8-8M8R8
9&:Y:
;f;o;
>h>t>
^0q0v0
6Q6u6z6
:!;E;J;
;'<c<
=->L>Q>
0:0S0X0
152P2V4u4
6!6J6O6
7*8W8
8N9o9|9e:
>U?y?~?
0:1U1c1h1
2\3w3
4I5r5
666`6
9!:3:8:~:
:J;T;
>>>C>S>
73888
a0s0x0
0E1^1c1
2(2-2E2
<=<O<
<)=8=^=~=
?>?_?~?
2"2'2
4.6I6N6o7{7
8/9B9G9v9
:2:7:f:
:7<h<
<N=g=l=
>>>C>x>
?)?.?\?y?
'0?0D0
1+1x1
2#262O2^2l2
2M3`3e3
7\7a7
9.939
:5:L:Y:_:}:
;!;';7;N;T;
<!<?<H<q<|<
=#=)=X=o=|=
>8>\>.?Z?
1I2]2b2
4I5\5a5
7Q8d8i8
97:M:R:e:q:
:U;h;m;
;K<S<T=Y=
=->A>F>h>r>
?(?2?
.0A0F0
1.2A2F2u2
3Q4d4i4
7K8]8b8
:+:5:d:
;8<a<
<,=P=
?$?7?J?]?p?
P0\0s0
1 1c1
2!2+252?2I2S2]2g2q2{2
3%3/393C3M3W3a3k3u3
4)434=4G4Q4[4e4o4y4
5%5/595C5M5W5y5
6%6/6A6
7F7L7R7k7
71888
:N;c;
;Y<h<q<
>>>d>v>
3#4(4
6R6_6)7a7
8 82878
:5:~:
=W=i=
=!>K>
0@0k0
1!1O1
4#596I6l6
6(7>7s7
8E8N8
8>9Q9V9
:';=;B;u;
;O<b<g<
=/=\=
0/0~0
2\2s2y2
3M4U4]4m4
5r5w5V6d6
2*2F2`2
3'3:3A3\3
5#6r6
9Q9V9
9':6:C:
=1=}=
5_5|5
878x8
8'9o9
7=8a8|8
:9;w;
;i<s<
3)393F3
666;6
7e:t:
0'1b1q2
4+585A5y5
7-7@7O7`7g7x7
859E9J9
:*:[:p:~:
;.;K;
090_0
2]3X5]5
6_6o6{6
8;9|9
:%:+:g:
>^?g?m?
7&7.7d7
9-:=:I:
<*<0<
?#?^?
2:3x3
3^4o4t4
4#5|5
5)6=6T6
7/7E7^7
8[8m8r8
959C9H9c9|9
:0:5:S:
:@;V;[;y;
<1<?<M<R<w<
3V3\3b3f4
8D8I8p8)9
1I1N1
2=2T2
2f3>4e4j4
62676p6
6U7h7
8F9i9
:9;r;
=!=1=7=b=
>2>`>
>3?x?
0,3>3_3
4*4F4\4{4
555L5Y5w5
6N6^6
8 9X9
:7:O:
;T;f;
<2<X<l<
=.===l=s=
1 1g1
2!2d2o2|2
3,393>3[3z3
4&4K4j4v4
566H6W6a6l6~6
787F7M7r7x7
1%1:1A1N1U1
282\2c2
3,343W4^4
6q7x7
<'<p<
2G3N3t3{3
5,535@5G5
1 2'2Z2a2y2
3%3,3=3D3V3]3
9"9L9S9h9o9}9
:(:;:`:r:
>!>.>x> ?/?s?y?
4&4-494D4T4a4f4
5^5i5v5|5
6:6A6I6T6d6q6v6
6&7-7u7|7
9 9G9
>e>x>
>0?r?
1M1Y1
3Y3i3v3
505;5
6'6<6D6j6
7.7@7
8)868a8l8
8,9K9S9n9v9
;g;p;{;
;%<6<F<Y<
?+?[?d?
0-0T0g0
1!1E1`1j1
3U4g4w4
6 6/676F6N6T6e6y6
9 9)9Z9
<#<2<?<Z<
<.=9=E=P=c=
=H>[>
?%?=?a?i?
1b2m2}2
4'464>4D4U4i4q4
7$7S7q7
8\8c8
9#9+9L9T9u9}9
:&:?:e:l:
>A?L?Y?a?h?y?
0,010;0L0U0
1(1/1>1E1Q1\1l1y1~1
:L:S:
1-1?1F1
3`6g6
9e:{:
2%2:3A3V3]3r3y3
3 4'4
0L1S1
2.252M2T2e2l2~2
5"5=5
6;7@7
;X<j<
2L2Q2
4K4P4
4/545
5'6,6
6A7Y7
8'8G8~8
9/9y9~9
;1;^;c;
;N=s=
2o3{3S4_4
919O9h9
<U<l<
=:=P=
=:>?>_>u>
2@3E3f3}3
44494U4k4
5X6l6
7%7;7M7_7q7
8)8.8P8h8
8?9X9s9
9!:=:
;K;h;
;0<5<^<c<
4;4X4l4
54696[6s6
6<7C7
7^8c8~8
9o9#:;:
:$;P;];
;,<G<
<i>n>
0.0<1K1Z1i1
4C5H5
6\6a6
8M8b8t8
909A9
;C;[;
?$?6?H?
1-2G2
4M5|5
5Q6}6
8#9R9y9
9::i:
;>;N;y;
<P<`<
<0=Z=p=
>5>Y>
?.?<?V?
0Q0~0
0N1f1
2J2u2z2
293U3
515=5I5N5p5
5M6m6~6
7G8\8
8+9d9t9
9):A:
;Y;^;
<=<N<S<t<
?%?<?
1:2q2
3$3@3O3
4V5y5
8/9E9Q9]9b9
<$<;<
=`>}>
?O?d?{?
3V3k3
3+4@4W4
5C6X6o6
7/7[7n7s7
9)9@9
:';<;S;
<;=X=o=
>/>c>
>&?:?
0'0>0
0<1U1n1s1
2"2;2@2c2w2
363J3a3
4\4u4
4Q5g5l5
6&6z6
7*7}7
8'8}8
9'9O9
:(:I:b:
;6;K;a;
=(=4=@=L=Q=s=
>">9>
31H1_1
2'2>2V2v2
3?3\3i3o3
4$4S4p4}4
8m8{8
<3=m=
?6???^?
0=0R0p0
111J1f1
262h2x2}2
3(4=4D4Y4
666?6]6u6
747=7R7h7|7
7H8U8^8
8d9k9
:::A:Z:
<#<2<J<]<l<{<
=#=X=
"0T0a0j0
3 3Y3|3
334Y4m4
5P6U6w6
7)7J7
7<8x8
8I9k9p9
9H:d:
=L=Q=
>">Q>e>|>
>Y?q?
0<0S0
1k1p1
2N2S2
3,313I3$44494
5)525
7-727
849d9
9M:c:h:
;$;j=
6$6D6T6Y6
9#:K:f:
>+>\>
?.?<?R?
0G1i1~1
2_2d2
3M4b4y4
5a6v6
727I7
7<8R8q8~8
919A9F9g9~9
:Z:p:
:(;?;W;
<!<9<
=0?G?L?
0-0^0n0
011R1
3L3i3n3
575O5l5
6c6h6
617S7X7
8#8;8M8l8
9"949F9f9~9
:":D:\:
;%;=;O;b;x;
<0<H<\<
>:>R>n>
051M1
2o3t3
3?4W4
5,5M5R5
6)7B7[7`7
8(8-8P8d8{8
9'9>9j:
<(<B<
</=k=
>E>v>
0 060
414m4
4]5o5
909K9f9}9
9+:>:C:]:u:
:#;(;X;
;U<w<
>I>e>y>
4"4]4e4
6g7l7A8X8
8c9z9
9X:o:
:I;`;
;B<Y<
=W>\>}>
>T?Y?
0:1Q1
2(2H2Q2y2
2C3J3Q3
3"4'4
6Q7[7y7~7
8&8_8g8
999Z9`9
9!:k:
=2=[=
?$???^?r?
0>1C1`1e1
3a3f3
31464e4
676N6
;N;S;r;
;1<6<W<n<
=O=T=
=b>g>
2@3I3]3z3
3`4g4n4
999>9
9':t:|:
;=;b;
=H=n>s>
?#?I?Z?k?
1\1o1
2Y2p2u2
2N3S3t3
535P5
7 7r7
:L:k:
<$<8<L<{<
===T=
>B>G>
0E0d0
1i2n2
405<5S6Z6
6>7U7
8d8{8
8&939
9F:]:
< =2=7=
>">8>^>r>
1(2:2?2 3%3V3j3
374C4
4c5j5
5k6r6
7&8=8i8
9_9q9
:-:Y:
<(<N<b<y<
<l=~=
=J>a>0?5?p?u?
2R3n3s3
334K4d4y4
4"595k5p5
5G6^6
6V7j7
8)8Y8^8
:,;E;k;
< =7=
>2?I?
80L0c0V1m1
1]2t2
2M3_3d3
5'5,5
9!929D9P9n9s9
;W<n<
<P=g=
3h4z4
5?5D5
617C7H7
7]8z8
8)9R9j9
<&<=<T<
>5?:?_?d?
1$1p1
7B7T7a7h7o7v7}7
9F9\9{9
:F:M:T:
:"<8<^<
>S>_>
2)212
3 4L4
:1:`:i:p:
::;V;
;j<y<
<e=o=v=}=
?J?n?
5:5I5[5
5H6~6
7#797Y7
8-848:8H8O8U8c8j8p8~8
9!:?:q;
>">X>
?@?I?
222U2
5/5F5`5z5
6%6B6_6u6
7%7C7c7F9
:#:7:
8H8O8!9
9#:K:
?5?L?U?\?c?i?~?
$0T0x0
1L1Y1c1p1
2W2m2
4C4p4
696e6
8F8c8
=L>v>
?E?c?
0B1_1
4+4i4x4
6_6w6
7d9h9l9p9t9
<2<O=y=
?@?h?
0*1V1
1;2^2
3)373c3m3{3
778t8
:W:m:
;6;f;
=-=V=
=c>q>
?'?D?a?~?
2C2W2
:L:r:y:
=2=I=
1*1T1~1
3.3T3
4,4n4
5+5A5|5
6L6y6
6'7S7
7$8K8
;.;@;R;u;
=">Y>
?:?`?e?u?z?
2"3r3
3%4K4q4
5'5n5}5
787g7n7
:';q;u;y;};
<F=m=
>3>_>
?@?e?l?s?z?
1G2r2
3:3q3
4<5_5
637M7
7#8I8
8$9X:~:
;(<g<u<
F1O1|1
2A3a4e4i4m4q4u4y4}4
5 5/5
667l7
9n9k:
:Z;_;f;k;r;y;
<:=d=
>W>[>_>c>g>k>o>
>2?6?:?>?B?n?
101Z1|1
3.4a4
7R7g7
979T9q9
<3<`<
40444T4(6
6[7w7
9,:>:
<H<z<
=H=d=
>*>E>_>y>
031c1
5>5h5
6U6a6
8H8<9A9H9M9T9[9b9g9n9
; <J<p<u<
=:=X=
151[1
1(272~2
3M4T4
485<5@5D5H5h5l5p5t5x5
5-6Z6{6
6>7E7]7d7
8#8C8G8K8O8S8W8w8o9
97:z:
<N=o=
?B?L?Y?
809J9]9
;f;l;r;x;~;
<#<'<+</<3<7<;<P<U<[<a<g<m<s<y<
="='=-=3=9=?=E=K=Q=W=]=c=i=o=u={=
0=0]0o0
0D1N1k1
2<2L2j2
3:3t3
516Y6c6
7$7E8O8a8
8_9f9
;:;?;_;
<n=.>U>
020B0f0r0
1*161K1[1
202X2f2
3.3=3W3^3u3
454F4V4_4
5K5n5
6*6A6a6{6
7*7E7f7v7
8!848D8T8p8u8
9 9G9S9i9s9
:;:d:q:
;8;E;];m;
<-<=<g<
=0=N=m=
>I>s>
?C?{?
1(191B1G1R1[1a1i1u1|1
2*21282?2U2h2o2y2
4 4*444;4B4G4L4a4k4u4
5!5+565@5G5N5S5X5p5w5~5
6%6,636:6@6E6]6g6q6{6
757?7I7P7U7Z7k7u7
8$8.888B8L8V8[8`8x8
9(9-9?9I9S9]9g9q9{9
:0:7:>:E:L:Q:V:g:l:q:
;#;0;;;@;M;X;];j;u;z;
<$<.<8<B<L<V<`<j<t<~<
=%=*=/===B=G=S=X=g=l=x=}=
>#>(>9>>>C>O>T>d>i>n>{>
?"?)?0?7?<?A?R?W?\?j?o?t?
0 0%01060G0Q0[0e0o0t0y0
1+10151F1L1Q1c1h1z1
2(222<2F2P2U2Z2n2x2
3,333:3A3H3O3T3Y3k3p3
4-42474H4R4\4a4f4
7#7B7K7V7
9 9-979=9C9T9Z9g9m9s9y9
:#:-:7:=:G:Q:W:a:k:q:{:
;%;+;1;7;=;C;I;O;V;\;b;h;n;t;z;
<&<0<:<D<N<X<^<h<r<x<
='=-=3=9=?=E=K=Q=W=]=c=i=o=u={=
>)>/>9>C>I>S>]>c>m>w>}>
?)?/?5???I?O?U?_?i?o?u?{?
0#0)03090C0M0W0]0g0q0{0
1!1'111;1A1K1U1[1e1o1u1
2$2/2P2h2
8_8(9F9
:F:c:
3C4!7(74787[7r7
8!8(8L8X8d8
8S9h9
:*:/:6:<:`:
5b6g6
6Z7j7
:V:_:l:
;-;S;Y;_;u;|;
<)<1<7<
=7>>>d>h>l>p>t>x>
Y0l0y0
2"2'242f2u2
3#3,3L3i3
34494
595]5z5
636l6
7G7N7
9&9T9x9
9E:Y:f:
;7;Y;r;
<%<:<G<l<
=H=U=m=}=
102g2b3
2:253
7!8<8
9U9n9
<N<]<
>N>t>
?4?Q?n?
1*171K1c1p1w1
232V2l2
3"3\3y3
4(404X4a4
5d5m5
5h:{:
:0;N;Y;
;">O>x>
?R?z?
0L0|0
1"1?1Z1
4/5(6$7
0;0M0Y0t0
2>2G2P2
3M3n3v3
3T4f4
5&5T5r5z5
6E7O7
8'909M9
;);E;x;
<<<d<
=7=D=b=
=6>t>
?.?9?
0(0<0U0s0
1)1.1C1s1
2I2s2
3+3S3c3h3y3
3!484b4g4|4
7H7g7
808G8
8!989b9g9|9
;L<p<
= =T=k=
=!>8>
0'0>0N0S0d0y0
3#343I3`3
4-4?4D4U4j4
535h5m5
6)6@6
6,7C7H7m7
8#8J8c8
9H9M9m9
:3:h:m:
;5;L;s;
<?<D<i<
= =C=
>=>T>s>
?C?x?}?
<0d0{0
2=2T2s2
3Z3q3
4 474S4
495>5I5c5h5y5
6Q6h6
7#7(797N7e7
8(8D8I8h8
9%9X9o9
:3;c;
< <1<F<]<
=#=d=i=
='>V>
?T?q?v?
021S1
112H2q2v2
2)3>3C3X3g3l3
4L4c4
5!5[5v5{5
6,6T6f6k6
7'7]7t7
7(8?8V8s8
9Q9h9
:':<:S:
;B;Y;s;
<8<J<O<`<
="=E=Y=^=
?1?A?F?W?l?
0+0k0
1C1q1v1/2g2y2~2
3$3;3{3
4,4S4
5@6E6d6{6
7*7/7@7U7l7
:':R:c:q:
::;Q;
<3<g<y<~<
=1=H=e=w=
?4?K?s?
060P0g0~0
0-1:1L1Q1b1
222L2c2z2
213H3
4"434H4_4
6Q6h6
7*7?7V7s7
818K8b8y8
8-9?9D9U9
:6:S:
;*;A;Q;V;g;|;
<$<;<{<
=,=S=
=7>b>|>
> ?%?D?[?
0 050L0s0
0;1R1l1
2A2F2
2&3@3P3U3f3
505x5
6"6D6I6^6
7A7b7
7A8Y8p8
9-9B9Y9s9
8I9o;
.0<0v0
061A1
1-2p2
405D5t5{5
9+:0:?:
:b;g;v;\<s<
=b=y=
=W>\>w>
4"4p4
5)5;5E5L5
7:8`8
969i9n9}9
:;:@:K:{:
:#;e;|;
;*<B<Y<i<n<
=(=K=P=w=|=
>&>;>R>s>
>&?=?M?R?c?x?
0+000
111H1c1
3,3C3c3
4v5{5
6%6x6
=/=p=
>3>q>
?,?1?B?W?n?
O0f0v0{0
1 1s1
2;2R2w2
;D;V;[;
;C<a<
212Z2
3*4B4I4g4l4
5.5Z5
6(6?6p6
767>7Y7c7~7
8(83878;8?8C8G8K8O8S8W8
969N9S9u9
:M:n:s:
:*;D;l;
>*>/>R>l>
?&?V?x?
191E1Q1V1x1
122S2
3!3;3M3e3
6U6Z6y6
8E9P9d9x9
:0:G:
>#>v>
131I1
5P5|5
6R6w6
7'7w7
<H=`=w=
]0#171<1K1
212N2b2g2v2
7#7)8.8=8]8b8
92:E:J:
;X;p;
<4<s<
=@>V>o>t>
94;B;G;Y;
/2(8H8O<}<
=.=P=q=
;*<d<
3,3}3
3)4}4
8=9N9
93:D:
>T>k>
0#0z0
3,3w3
5"5@5T5
6#7a7
7#8k8
;K;_;};
<8<L<
=I=s=
2N2S2
;7;D;I;x;
<H<U<
=V>-?2?A?
1W1\1k1
1#2>2R2`2
2B3`3
3+5I5\5
7*7G7L7b7u7z7
;o<z<
=<>]>o>
?'?>?X?
2;3<4y4
4K5W5v5
7,7K7W7c7n7
8W8v8
:':[:e:
=Y=^=
?!?&?D?M?
353N3g3
5#525g5w5|5
7:7?7Q7
758W8z8
8g9%:
:6;V;
0,1D1
2,212I2
3'3`3
42474F4
6)7b7y7~7
<@<[<w<
=7=K=
'0,0;012
5<6c6
7>8W8o8
:H:U:i:
:s;^=s>
8A8V8[8j8
9$9A9
0_1l2
3=4R4]4
5-5?5
6.6s6
717n7
;*;;;
<!<=<O<
5&5d5
72777Y7o7t7
9$9)9H9M9m9
:(:%;@;g<
>">'>6>}>
242j2o2~2[3
4D5f5t5y5
:Z;s;
;i=5>
?C?i?
262a2
4c4x4,5
5A6V6[6j6F7
9.9H9f9~9
:A:P:s:x:
2G2o3
596j6|6
7Y7p7
>G?h?v?
1"1L1
2L2c2~2
2$393>3N3
4<4(5
7G7L7d7s7x7
7%8T8t8y8
:0;l;
?5?U?Z?r?
222P2
4$5J5
5 6O6o6t6
758l8
9$9^:
:Y;i;n;
?8?=?U?
1[2`2
4=5j5|5
6*6/6>6
7*7/7>7
728b8t8y8
8I9v9
:@:R:W:f:
;-;2;A;i;
<?<}<
<5=c=
?4?c?
161;1K1
152b2w2|2
2V3n3
0J1O1
1/2L2Q2
8;9Q9`9
91:?:D:t:y::;s=
0V0m0
1C1Z1
1:2w2
273w3
314q4
516q6
6 777
97:z:
=-=w=
=H>z>
>/?M?U?m?
>3>R>i>
112o2
9/9e9
:*:.:2:6:::>:B:F:J:N:R:V:Z:^:b:f:j:n:r:v:z:~:
=&=-=4=;=B=I=P=W=^=e=l=s=z=
>(>2><>F>P>Z>d>n>x>
?"?,?6?B?L?V?`?j?t?~?
0(020H0e0j0o0
2(2C2H2i2~2
3)333/4
5R5u5
8>8f8
:M:[:
:n;|;
?:?Q?
1T2!3
4.4Z4\=X>N?
1u2i3o4i5k6g7
7.7o7
8V8q8
939N9v9
8I8g8
?%?t?
>"?X?
9y:j;
U0{4L5
;p<p?
2g405
:J<h=
8K;/<
2O3f6c7-8
;h=]>'?
9#9?9}9
<{<u?
5L5l5x5
5(606d6l6t6
787D7L7l7
8X8l8
9P9X9`9l9t9
:4:<:D:P:X:p:
; ;(;0;8;D;L;
<$<,<4<<<D<|<
=(=L=T=\=d=l=t=|=
> >,>4>L>
?,?H?X?d?l?
0 0(0L0T0\0h0p0
1 1<1D1L1X1x1
282L2\2l2x2
3$30383P3t3
444D4P4X4p4
5L5T5\5h5p5
6 6(6\6d6l6x6
7$70787P7t7|7
7$8,848@8H8|8
949<9D9P9X9p9
:L:T:\:h:p:
;8;D;d;p;
<(<0<d<t<
=,=4=<=D=L=T=\=d=l=t=|=
>$>,>4><>D>L>T>`>
? ?8?\?d?l?x?
0$0H0P0X0d0l0
141X1`1h1t1|1
2$2,2`2h2p2
3,303P3p3
4 4<4L4T4\4
4 5(505<5D5x5
6(6H6P6X6`6|6
7$7,747<7D7L7T7\7d7l7t7|7
8 8(808@8d8l8t8|8
9(9H9P9X9h9
:$:,:4:<:D:L:T:\:d:l:t:|:
;0;8;@;L;T;t;
<$<,<4<<<D<L<T<\<d<l<t<|<
= =T=\=d=p=x=
>,>4><>H>h>t>
> ?(?0?<?D?x?
(00080D0L0
181@1H1T1\1t1
2,2P2X2`2l2t2
3 3,343L3p3x3
40484@4L4T4l4
5,5P5X5`5l5
6L6`6h6p6x6
70787@7L7T7l7
8,8P8X8`8l8t8
9 9,949L9p9x9
:0:8:@:L:T:l:
;,;P;X;`;l;t;
< <,<4<L<p<x<
=0=8=@=L=T=l=
>,>P>X>`>l>t>
?$?X?`?h?t?|?
0$0,0`0h0p0|0
1 1,141h1p1x1
2 2(242<2p2x2
2 3(303<3D3x3
3(40484D4L4
40585@5L5T5
6(606d6t6
7$7,747@7H7`7
7 8(808<8D8\8l8
9$949P9X9`9l9t9
: :,:4:L:p:x:
; ;(;@;d;l;t;
<$<,<8<@<t<|<
<$=,=4=@=H=|=
=,>4><>H>P>
?4?<?D?P?X?
0\0p0
1 1(101@1\1`1l1
242<2D2P2X2
3$3X3`3h3t3
444<4D4P4X4
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0l0p0t0x0|0
2<2H2L2P2T2X2\2
0 0$0
JvD?c
od2<ik
q5{Ah!
q"+?B<
?yz_l4
</sin
8qBvAr
P%d!D
p5BwG
{lq^m
1G&H,4
:gLB@
},VPsG
])}x#
&wE!B
20%60Qg/
BVjJ84~s
<F&!t
j.;Hq(
dme}Y
!_,gJM
 9"[s<
EoYt,
~L$jfJh:@`
>[zY]
nj1b:}
9"^_<
F5p#Y
{%(|j
FPL'k
(-",~
o"uK~
+o]+K
a&+l9
*uEjs
w_=8p
/i-~i
HN#_B
[&2R>
hdbyh
(j`K>
Zh4@b
~w|&=
*}+YPZ
5Tajo
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,nRy1SVQeNgrGGb310y4o0QJvv9nf814mfe19so/81GY=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
20220713032259.841Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:C4BD-E37F-5FFC1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
220302185116Z
230511185116Z0
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:C4BD-E37F-5FFC1%0#
Microsoft Time-Stamp Service0
U 9#V
YCZHOUg%
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1)0'
 Microsoft Operations Puerto Rico1&0$
Thales TSS ESN:C4BD-E37F-5FFC1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220713034135Z
20220714034135Z0t0:
1,0*0
1(0&0
s@-Zs
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
]Q#(f
?M.#<
