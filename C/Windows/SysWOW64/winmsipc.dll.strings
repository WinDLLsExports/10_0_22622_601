!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.didat
.rsrc
@.reloc
u$WSQ
j PhTn
PQQSVW
j Yj@
v0hdq
Z\9;s
SVWQQ3
97s/j
L$d^3
PQQSVW
t>9|$
j!hht
j0h8{
t+Sh`e
PWj j
y+Php
y+Php
y9PhP
y+Php
y+Phd
y+Ph`
y+Phd
y+PhH
y+Ph8
y+PhX
y+Phd
y+PhH
y+PhH
y+PhX
y+Phh
y+Phh
.Sh0{
u QSP
y+Ph8
y+Phh
@Sh0{
y+Ph 
y+PhH
y+Phh
t&h86
y+Ph(
y+Phh
y+Php
y+Phh
y+PhP
y+Php
PQQVW
PQQVW
PQSVW
93uHWV
&PWSV
D$<VW
L$D_^3
D$<VW
L$D_^3
D$<VW
L$D_^3
D$LVW
L$T_^3
D$<VW
L$D_^3
D$<VW
L$D_^3
L$,^3
t]_9~
wU_9~
wR_9~
_wD9~
xAhhm
Zf;TA
Zf;TA
|$,PWWVW
SVWj [
y+Php#
y+Ph8$
y+Phx%
<wFt=
u>j;Xjc
Wj;Xje
Pj;Xjj
Ij;Xji
Bj;Xjd
;j;Xja
$j;Xjg
j;Xjf
j;Xjh
j;Xjbf
j;Zf9
j\Zf;TA
j\Zf;
u~h$&
YPh$&
j:Yf;H
u6h8&
YPh8&
j0Yf;
DtCSV
;t04u
~,9~$t
tC97u?j
FYY;u
FYY;u
9;w/hW
y+PhH0
u9QhH3
9f;8u
 t=hW
PQQSVW
VVSQVh
xyu,hW
VVVVPQVh
xsu,hW
tAA;M
WPh8?
WSVVh
jAh@`
j-Xf9C
j-Xf9C
j9Xf;
j9Xf;
j"Yj$f
98t&SR
uAC;]
WVhP"
RQPh`"
QQQQVPQh
RRPQVSRh
SSSSPQSh
SSPQSh
7SSSV
6j@SS
8{u.9]
G,+L$
9J8v%V
D$(QQ
$SQjLPW
D$@jlP
D$(QQ
D$@jlP
D$$j@P
D$$j@P
D$ j@P
D$ j@P
t+9J8r
+v)+F
r-+>+
f;<Nu
PWh|n
VPWSh
9r8v%
;0v6f
D$(QQ
$SQjLPW
D$@jlP
D$(QQ
D$@jlP
D$$j@P
D$$j@P
D$ j@P
D$ j@P
PVh|n
j\Zf;TA
t4j#Z
j\_f9|A
t_j?Yf;
PSSVS
w+QVQj
[;D$(u
;T$,u
t$TQVh
Nu!h(m
j\Zf;TA
u-Wh`p
;7t*9
jAh@r
t'=$I
D$HSVW
L$T_^[3
O4_^]
O4_^]
j)hPs
j5hPs
QQQWS
j=h`z
jZh`z
jch`z
JSVWj
uSf9Q
RSA1u
RSA2u$
uEf9Q
RSA2u$
u7VWh@
SVjLYhhm
9^ v'
G;~ r
tJhhm
wWhhm
A;N r
9W v^
F;w r
tI9;v0
tFhhm
VWhhm
aWhhm
trhhm
wlhhm
u&f98t
wlhhm
8f;9j
_u&f98t
wlhhm
u&f98t
u!j>Q
y+Ph0{
y+Ph8
y+Ph8
y+PhL
y+Ph8
y+Ph8
y+Ph0
y+Ph8
y+PhL
y+Ph`
y+Ph8
y+Php
;q4s)
HYY9E
u&f90t
u&f90t
0f;1u
0f;1u
</t{<\tw<.uw
>w,tZ
r,PSW
y+PhP
j0XhF
qDPh`
8Wpu+
8WqtR
thj<_W
tehhm
t]hhm
9VPt9
y.Shx
PVj"Q
v+Rh|
s[hhm
y+Ph8
9X,tAj
r@hhm
j/XPW
j/Yf9
u18^tu,
y+Ph@
t/+>S
PQQVW
PPVWP
D$dVW
T$LPh
L$l_^3
tN97t/
PQSVW
y;Vhh
y+Vh0{
y(Ph8
YWhPn
y6Vh0{
u4F;7
uMhPn
>fuC3
PQSVW
^\Wh|
VWPh@
wiPWj
DWVQhl
QSVWh
9~,um9~
V4;V$s
F(Pj'
_^[Y]
t"j Yf;
j;Xf;
j Xf;
9;t'h
9^4t,
t+-n-
w,_^[
C t7;K$u2h
Y;C(u
9s u;hP
PQSVW
YYt*hh
s+PhX
t+Phh
y9PhP
PPPPQQPP
{ _^[]
;G(tB
;G(tL
j0_j0
;G(tp
s ;s$to
t.+>S
t/+>S
t'=UUU
93vOk
y%Ph8!
jPhx#
y9PhP3
;0uB9E
;0uB9E
:f;>u
:f;>u
:f;>u
1f;2u
1f;2u
j-Xf9DN
uyf9DN
j-Yf9
t1f;E
t+f;E
j\[f9_
j/Zf;
t.f;E
t(f;E
j/[f9\p
?j\Zf9Tw
t,f;E
t&f;E
tnhhm
t%f;E
Bj _f9<P
9Y,v#
W;q4s&
tihhm
tnhhm
v0j&Xf
gt3f;E
ouwjtXf9F
unf9V
@jtXf9F
uXf9V
pu,f9V
QQSV3
tghhm
^f98u
$tYhL
j$hx@
j,hx@
j8hx@
j<hx@
jDhx@
jMhx@
jUhx@
jYhx@
j]hx@
jahx@
jehx@
jmhx@
jqhx@
jyhx@
j}hx@
Y9X,t
sKjdY
sKjdY
QQSVW
j&hxA
j#h D
j"h D
u'h V
j)h D
j@h D
jtYQf
jrYQf
jfYQf
jaYQf
jlYQf
jnYQf
juYQf
jl^Qf
L$,_^[3
QQSVW
j\YQf
j0YQf
j0YQf
j"Y_^f
j]Yf9
9j]Zf;
j9Xf;
j8Xf;
j9Xf;
j5Xf;
j0_f;
j9[f;
P^j9Xf;
j0_f;
juXf;
j%h0W
j!h0W
u"hlE
u"hlE
u"hlE
j#hpY
j$hpY
j%hpY
j%hXZ
u%hlE
u"hlE
u"hlE
u"hlE
t#9x0t
j+hXZ
j h([
j%hp\
j&hp\
j&hp\
j(hp\
u"hlE
j(hp\
j%hp\
j+hX^
j.hX^
j/hX^
j/hX^
j0hX^
j0hX^
j3hX^
j3hX^
j+hX^
j*h0_
j+h0_
u"hlE
j+h0_
j,h0_
j,h0_
j-h0_
j-h0_
j.h0_
u"hlE
j.h0_
j4h0_
j,h0_
j*h0_
u'h@b
j)hXb
j*hXb
j,hXb
j-hXb
j0hXb
u6hpe
j3hXb
j4hXb
j(hXb
u*hxe
j9hxd
j:hxd
j:hxd
j;hxd
u"hlE
j;hxd
j<hxd
u"hlE
j<hxd
j=hxd
u"hlE
j=hxd
j?hxd
j?hxd
jBhxd
jBhxd
jGhxd
u"hlE
jGhxd
t4hhe
jGhxd
jHhxd
jGhxd
u'hpe
jHhxd
jIhxd
jIhxd
j9hxd
9>uOjL
9>uGh
u6hhg
uNh`g
u*hhg
j+h8f
j,h8f
u"hlE
j,h8f
j-h8f
u"hlE
j-h8f
t4htg
j-h8f
j.h8f
j-h8f
u"hlE
j.h8f
ta9x(t\
j3h8f
j+h8f
q49>uDj 
j hhh
j&h(i
j!h(i
u"hlE
u"hlE
u"hlE
j+h(i
u%hlE
Vu"hlE
j(hPl
j$hPl
j<hPl
j h@m
j h@m
j h@m
PSh8l
y+Phxw
y+Ph0{
PWSSQ
y(Vh0{
y9Ph8|
y+WhX
yvWhH
y+WhH
y+Phx
y+Whh
y+WhP
y8VhH
YYVhPn
y+PhPn
WVQPj
y+Ph8
y(PhPn
wBPSj
?w-SV
y%WhPn
PQSVW
PQQVW
!D$<!D$@
D$HPj
T$@kL$0
D$LPj
C;\$8r
tE9>t
QVWhp
QSVWh
QVWh(
SVWht2
t0f;E
YYVhPn
YYShPn
SVWhP
SSSSh(
tef97t`9u
tNf93tI
tTf97tO9u
t=f93t8
tTf97tO9u
t=f93t8
O(PPj
YYVhPn
H(9X,vES
H(;X,r
0f;2u f
F,9_,t
F(9_(t
F$9_$t
y+PhH
y(ShPn
j%Yj f
9C<t{
9C$u/hW
s$PVW
s$PVW
y1VhP%
t0h,&
YYShPn
y+Wh0{
y+Wh0{
uNht2
y8Wh<(
YYWhPn
y8Wh\(
YYWhPn
YYVhPn
y+Ph0,
SSSSSS
y+PhPn
N$9^(vE
C;^(r
CPhh4
6PhP.
t(;8w$
t/QPhhX
t+QhhX
t+PhhX
PPPPj
N(PPPj
PQQQW
SRQWPj
98u*V
QQPQQQ
C(+C$
QQQPQQQ
PPPPQ
QQQQW
t39Q(t.
t39Q(t.
t39Q(t.
RRRRQPRj
y1PhH
RVVVPW
y+Phx
y+Ph 
tJf97tE
t.h\j
9K(vP
PPRPPPPP
PQSVW
OHSFV
WRPQh8
QRPh8
t+PhPn
t+PhPn
t+PhPn
t(PhPn
QPRh@
SSSSSV
WQRPV
PRVShp
t+PhPn
t+PhPn
t+PhPn
t+PhPn
t+PhPn
PQQVS
t+PhPn
D$`SVW
L$l_^[3
PQQSS
PQSVW
y:Php
y+Phh
t+PhPn
y+Ph@
y+Ph0{
0uqj0
y+Ph@
y+Phx
y+VhPn
y+Vh(
y6PhPn
t+ShPn
y+Ph@
y+ShPn
'Ph0{
'Ph0{
'Ph0{
VWVPj
'Vh0{
PVQVVVQ
WWWWWW
y+Wh0{
E hD 
RQPSh
QPhx$
y0h@*
yOVhL+
y(PhP,
y(Vh0{
tUj/V
PQhP2
RQhp^
tfh`j
WPhDj
KPhPn
SSSSSS
PQh(o
PQQRW
y(VhPn
9X`uPhXw
y+Phh
y+QhPn
VVVVQQ
PVVVQQ
&Ph0{
PQQQQQQQ
WWWPQQ
vqhPn
QQSVW
t2SQQ
F@!s7
yLPh(
y+Ph(
ADPRR
w!+t$
L$$_^3
G<!s7
F<!s7
y(PhP
9^Hw,h
y(Phx
~(WSQQ
y(PhP
F<!s7
y+Phx
9wPv%SV
F;wPr
xThhp
8_^[]
M QRSP
y+Ph8
PRRRQR
y+Phh
y+Phx
y.Phh
y+Phx
N@hPn
WWWWWW
Vj<Wj
QQQQj
t.+>S
9sHuMh
x\SjU
9{0vj
9X0vY
G;x0s
QQWWW
u:9F(u
y%Ph(
y+Ph0{
PPPPP
[(^_[
t2ht(
t2h4(
j-XSf
t/h$)
^,hh*
u1h$)
0_^[]
u:9F(u
u6hh-
u6h`-
u6hX-
u*hX-
u'hh-
u'h`-
jUh8.
j^h8.
jwh0/
u6h,2
u6hL2
uQh82
u*hD2
j'hX1
j)hX1
u'h,2
j)hX1
j+hX1
u'hL2
j+hX1
j-hX1
u"hlE
j-hX1
9xHuJh
j1hX1
j+hX1
j)hX1
j'hX1
E h\2
jVh\2
jjjjjj
PQQQSVW
j$hXG
j:hXG
y+Ph(N
yVPhPO
yIPhpU
SSSSS
tTWVh
SSSSSj
jBh@Y
jEh@Y
jFh@Y
y(Ph8;
jGh@Y
y(Ph0W
jJh@Y
y(PhXX
jKh@Y
jPh@Y
jTh@Y
jUh@Y
jWhXZ
y(Ph0[
j]h@Y
jah@Y
jkh@Y
jrh@Y
jwh@Y
j|h@Y
j?h@Y
SPhpc
y+PhXh
SSSSSS
SSSSSj
WWWWWWQW
WWWWWWQj
QSSSQ
<C/u#j
y%Sh0{
<G/u!j
y+PhP
y+Php~
y+PhX
y+Ph@
y+Ph`
y$Sh0
y+PhX
<G/u!j
y+PhP
y+Ph`
y+Php
y+PhP
0f;2u
j!_;u
QSSWP
tFj!Zf9W
?w}t$j
QSVWj
CP tR
{L?uL
~L}uA
9wh~ZV
F;wh|
+GL+OL
9GD|.
tiSj0Zj
OHt*f;
t$Ff;
~$_^[
j\Xf9FHu
<G/u!j
y+PhX
y+PhP
y+Ph 
y+Ph0{
y+PhP
y+Ph0{
y+Ph0
y+Php
yOVh@
u+QhPn
u+QhPn
QVQVP
y(Wh0{
y+VhX
y(VhPn
QSVWj
WVVVVQ
RRVPQWRj
>,u'W3
;p4t#
6;s4u
8_u@hPn
8@uP9_
<C/u&j
Y__^[
QRPh ,
QRPh@,
PQQSVW
Y__^[
QRPh`,
VWj03
PPPPP
CRYPT32.dll
OLEAUT32.dll
bad allocation
bad function call
regex_error(error_collate): The expression contained an invalid collating element name.
regex_error(error_ctype): The expression contained an invalid character class name.
regex_error(error_escape): The expression contained an invalid escaped character, or a trailing escape.
regex_error(error_backref): The expression contained an invalid back reference.
regex_error(error_brack): The expression contained mismatched [ and ].
regex_error(error_paren): The expression contained mismatched ( and ).
regex_error(error_brace): The expression contained mismatched { and }.
regex_error(error_badbrace): The expression contained an invalid range in a { expression }.
regex_error(error_range): The expression contained an invalid character range, such as [b-a] in most encodings.
regex_error(error_space): There was insufficient memory to convert the expression into a finite state machine.
regex_error(error_badrepeat): One of *?+{ was not preceded by a valid regular expression.
regex_error(error_complexity): The complexity of an attempted match against a regular expression exceeded a pre-set level.
regex_error(error_stack): There was insufficient memory to determine whether the regular expression could match the specified character sequence.
regex_error(error_parse)
regex_error(error_syntax)
regex_error
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
WINHTTP.dll
WININET.dll
Invalid parameter passed to C runtime function.
[%u]%hc
RtlTrace error: hr = 0x%08x
false
generic
unknown error
iostream
iostream stream error
system
uFsTrace error: hr = 0x%08x
Unknown
%s%sException at %s(%lu)%s%s
HRESULT = 0x%08x
FsException::setDetailedMessage - Error in ::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf.
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
Microsoft::InformationProtection::LogFunctionHelper::LogFunctionHelper
onecoreuap\ds\security\rm\client\src\base\Logging\IpcLogging.h
-%hs hr=0x%x
Microsoft::InformationProtection::LogFunctionHelper::~LogFunctionHelper
Failure
os::IpcOsInitializeCriticalSectionAndSpinCount(&m_cs, 0)
onecoreuap\ds\security\rm\client\src\base\FsCommon\FastMutex.h
CorrelationId
DataSize
ScenarioId
ContentId
IssuerName
IssuerId
RACObjectId
OwnerId
DurationWithoutExternalOps
Status
SubType
TokenProvided
UserProvided
AuthCallbackProvided
ConnectionMode
HRESULT
HomeTenant
GuestTenant
HttpCall
DnsSuccess
UserInfo.Principal
LicenseId
LicensePropertyType
IsFromTemplate
OperationName
TemplatesCount
ServerType
ReinterpretKeyHandle
KeyHandle
AppInfo.Name
AppInfo.Version
DeviceInfo.OSArch
AppInfo.ClientHierarchy
Identity.Status
Identity.Failure
Identity.Type
Identity.IntranetUrl
Identity.ExtranetUrl
Identity.UserProvided
ConnectionInfo.IntranetUrl
ConnectionInfo.ExtranetUrl
SDKVersion
NoOfDomainsSearched
NoOfDomainsSkipped
TemplateId
CallBackStatus
Duration
StartTime
EndTime
FileExtension
FileFormat
PolicyType
ErrorCode
StatusCode
Result
LicenseFormat
RACType
CallbackTime
VerifyCertChainDuration
VerifySignatureDuration
LicenseType
Online
Offline
Renew
Expired
False
Template
Adhoc
Success
AADRM
ApiOp
HttpOp
DnsLookupOp
ServiceDiscoveryOp
RenewUserOp
GetUserOp
StoreOp
ParseLicenseOp
RegistryBasedLocator
UrlBasedLocator
GlobalServiceLocator
AddRAC
DeleteRAC
UnhandledError
MsipcActivity
alnum
alpha
blank
cntrl
digit
graph
lower
print
punct
space
upper
xdigit
SOFTWARE\Microsoft\WinMSIPC
Trace
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_coinit.h
HandleException
NullHandleException
InvalidHandleTypeException
Assert
Error
Warning
Trace
onecoreuap\ds\security\rm\client\src\msipc\api\ippapi.cpp
IpcAccessCheck
wszRequestedRights
*** Error tracing API entry
IpcAccessCheck
0 != hKey
onecoreuap\ds\security\rm\client\src\msipc\api\ippapi.cpp
os::IpcOsStringCchLength(wszRequestedRights, IPC_OS_MAX_CCH, 0)
pfAccessGranted
pKey->IsValid()
AccessCheck returned %s
*** Error tracing API exit
IpcCloseHandle
handle
IpcCloseHandle
IpcFreeMemory
IpcFreeMemory
0 == pConnectionInfo || SUCCEEDED(ipp::ConnectionInfo::Check(pConnectionInfo))
0 == pvReserved
os::IpcOsStringCchLength(wszID, IPC_OS_MAX_CCH, 0)
ppvTemplate
0 != g_pFactory
HRESULT_FROM_WIN32(ERROR_FILE_NOT_FOUND)
pvCreateInfo
unknown type for dwType
phLicense
EDITRIGHTSDATA
dwFlags
ipp::IppUser::Check(pOwner)
(0 == dwFlags) || (IPC_CL_FLAG_QUERY_ONLY == dwFlags)
(0 == dwFlags)
0 != pAutoTemplateBuffer.get()
IppGetUser(IPP_GU_TEMPLATE, &userFromTemplateInfo, IPP_GU_SKIP_EXPIRY_CHECK, pIpcContext, &hUser)
0 != hUser
pUser->IsValid()
ipp::IppUtil::ConvertBufferToString(pAutoTemplateBuffer, &wszTemplate, false)
IpcCreateLicenseInternal( pvCreateInfo, dwType, dwFlags, pOwner, pCreator, pIpcContext, phLicense)
converting 0x%x to HRESULT_FROM_WIN32(ERROR_FILE_NOT_FOUND)
IpcCreateLicense
NULL == pvReserved
IpcCreateLicense((LPCVOID)wszTemplateId, IPC_CL_TEMPLATE_ID, dwFlags, pOwner, pCreator, phLicense)
IpcCreateLicenseFromTemplateID
wszTemplateID
pvReserved
IpcCreateLicenseFromTemplateID
IpcCreateLicenseFromTemplateIdInternal( wszTemplateID, dwFlags, NULL, NULL, pvReserved, phLicense)
IpcpCreateLicenseFromTemplateId
wszTemplateId
pOwner
pCreator
IpcpCreateLicenseFromTemplateId
ipp::IppUser::CheckBootstrapUser(pCreator)
IpcCreateLicenseFromTemplateIdInternal( wszTemplateId, dwFlags, pOwner, pCreator, pvReserved, phLicense)
IpcpCreateLicenseFromTemplateID
IpcCreateLicenseFromKey
IpcCreateLicenseFromKey
IpcCreateLicense((LPCVOID)hKey, IPC_CL_KEY, dwFlags, NULL, NULL, phLicense)
0 != pTemplateIssuer
0 == dwFlags
IpcCreateLicenseFromScratch
pTemplateIssuer
IpcCreateLicenseFromScratch
IpcCreateLicenseFromScratchInternal( pTemplateIssuer, dwFlags, NULL, NULL, pvReserved, activity, phLicense)
IpcpCreateLicenseFromScratch
IpcpCreateLicenseFromScratch
IpcCreateLicenseFromScratchInternal( pTemplateIssuer, dwFlags, pOwner, pCreator, pvReserved, activity, phLicense)
IpcpCreateLicenseFromTemplate
wszTemplate
pContext
IpcpCreateLicenseFromTemplate
0 != wszTemplate
ipp::IppUtil::CheckPromptContext(pContext)
ipp::IppUser::Check(pCreator)
hr = CERT_E_MALFORMED
IppGetUser(IPP_GU_CONNECTION_INFO, &connInfo, 0, pContext, &hUser)
os::IpcOsStringCchLength(wszTemplate, IPC_OS_MAX_CCH, &cchLength)
IpcDecryptInternal
cbCiphertext > 0
pbCiphertext
pcbResult
pcbHash
pbHash == nullptr
cbHash == 0
IpcDecrypt (deferred)
dwBlockNumber
fFinal
cbCiphertext
IpcDecryptInternal
IpcDecrypt
IpcSetLicenseProperty
hLicense
fDelete
dwType
pvLicenseInfo
IpcSetLicenseProperty
0 != hLicense
INVALID_HANDLE_VALUE != hLicense
pLicense->IsValid()
!fDelete
ipp::IppAcl::Check(pAcl)
ipp::CipherInfo::Check(pCipherInfo)
The connection string associated with a license cannot be set.
Changing of owner is not allowed for Republish only license
ipp::IppTerm::Check(pTerm)
*pdwIntervalTime <= USHRT_MAX
ipp::LicenseNameValue::Check(pNameValueList)
The flag specifying whether the license is created based on an official template cannot be set.
The flag specifying whether the license is created by RMSO cannot be set.
ipp::IppUtil::CheckTemplateInfo(pDescriptor)
Using AES256 - CBC4K Encryption package
Using AES128 - CBC4K Encryption package
Using AES128 - ECB Encryption package
Using AES256 - CBC512NOPAD Encryption package
Using AES128 - CBC512NOPAD Encryption package
Unknown preferred encryption package.
Signer info cannot be set.
The flag specifying docTrackingUrl cannot be set.
IpcEncryptInternal
cbPlaintext > 0
pbPlaintext
pbHash != nullptr
IpcEncrypt(deferred)
cbPlaintext
IpcEncryptInternal
IpcEncrypt
IpcGetGlobalProperty
IpcGetGlobalProperty
ppvInfo
pvLicense
ipp::IppUtil::CheckBuffer(pvLicense)
ipp::IppUtil::CheckBuffer(pvUseLicense)
phKey
Getting user identity from license
IpcGetKeyInternal
IppGetUser( IPP_GU_LICENSE, &userFromLicense, dwFlags & ipp::IppUtil::GetValidIppGetUserFlags(), pIpcContext, &hUser)
Done getting identity from license
Creating a key
Done creating key
IpcGetKey
IpcGetKey
ipp::IppUtil::CheckGetKeyFlags(dwFlags)
IpcGetKeyInternal( &activity, pvLicense, dwFlags, NULL, NULL, pContext, NULL, pvReserved, phKey )
ipp::IppUtil::CheckNameValue(&argCheck)
phIpcAuthToken
IpcCreateOAuth2Token
wszAuthToken
IpcCreateOAuth2Token
IpcpGetKey
pConsumer
pToken
pvUseLicense
IpcpGetKey
ipp::IppUser::CheckBootstrapUser(pConsumer)
ipp::IppUtil::CheckToken(pToken)
SetAuthPreferences()
IpcGetKeyInternal( &activity, pvLicense, dwFlags, pConsumer, pToken, pContext, pvUseLicense, pvReserved, phKey )
ipp::IppUtil::CheckToken(pcToken)
ppcTil
pConnectionInfo
(!(IPC_GTL_FLAG_SKIP_USER & dwFlags)) || pcLocalIppUser
+++++++++ Getting user identitiy before getting templates ++++++++
       Extranet URL: %ws
       Intranet URL: %ws
       UserID: %ws
IpcGetTemplateListInternal
--------- Done getting user Identity hr = 0x%x ---------
Can't get User Handle hr = 0x%x
+++++++ Getting all templates +++++++
------- Done getting all templates -------
+++++++ Getting templates for the user: %ws +++++++
-------- Done getting templates -------
IpcpGetTemplateListForUser
pcToken
IpcpGetTemplateListForUser
ipp::IppUtil::CheckGetTemplateListFlags(dwFlags)
IpcGetTemplateListInternal( &activity, pConnectionInfo, pCreator, pvReserved, dwFlags, lcid, pcToken, pContext, ppcTil)
IpcGetTemplateList
IpcGetTemplateList
IpcGetTemplateListInternal( &activity, pConnectionInfo, NULL, pvReserved, dwFlags, lcid, NULL, pContext, ppcTil)
IpcGetTemplateIssuerList
IpcGetTemplateIssuerList
ipp::IppUtil::CheckGetTemplateIssuerListFlags(dwFlags)
ppcTemplateIssuers
!pConnectionInfo
IppGetUser Failed hr = 0x%x
IPC_GTIL_FLAG_DEFAULT_SERVER_ONLY is specified but couldn't get the default user.
HRESULT_FROM_WIN32(ERROR_INTERNAL_ERROR)
No template issuers available locally or from non-default servers, default service discovery failed. Failed hr = 0x%x
hrIppGetUser
IpcpGetUserListForIssuer
IpcpGetUserListForIssuer
ppcUsers
IppGetUser(dwType, pvInfo, dwFlags, pIpcContext, phUser)
ipp::IppUtil::CheckIppGetUserFlags( dwFlags )
pvInfo
phUser
ipp::IppUtil::CheckUserInfoConnection( pUserConnectionInfo )
ipp::IppUtil::CheckUserInfoLicense(pLicenseInfo)
ipp::IppUtil::CheckUserInfoTemplate( pTemplateInfo )
Getting templates for user
IppGetUser
Done getting templates with result: hr = 0x%x
IpcGetKeyProperty
IpcGetKeyProperty
ppvKeyInfo
os::IpcOsStringCchCopy(wszOut, cchUserName, wszDisplayUserName)
IpcGetLicenseProperty
IpcGetLicenseProperty
ppvLicenseInfo
IpcGetSerializedLicenseProperty
dwPropID
IpcGetSerializedLicenseProperty
NULL != pvLicense
ppvProperty
A key handle is required for accessing this property
IPC_LI_CONTENT_KEY is not a valid dwPropID value for this API
storing cached license in key
ipp::IppUtil::CheckSerializeLicenseType(dwType)
0 != pvLicenseInfo
ipp::IppUtil::CheckSerializeLicenseFlags(dwFlags)
ppvLicense
Creating license from template ID
IpcSerializeLicenseInternal
IpcCreateLicenseInternal( pvLicenseInfo, IPC_CL_TEMPLATE_ID, 0, NULL, pCreator, pIpcContext, reinterpret_cast<PIPC_LICENSE_HANDLE>(&hLicense) )
License Created
0 != pLicense.get()
Getting templated for rollover check
Serialize is not supported for this CLC
Done with getting templates
Serializing the license
Done serializing the license
Done creating a key
IpcSerializeLicense
IpcSerializeLicense
IpcSerializeLicenseInternal( &activity, pvLicenseInfo, dwType, dwFlags, NULL, NULL, pContext, phKey, ppvLicense)
IpcpSerializeLicense
IpcpSerializeLicense
IpcSerializeLicenseInternal( &activity, pvLicenseInfo, dwType, dwFlags, pCreator, pToken, pContext, phKey, ppvLicense)
IpcSetGlobalProperty
IpcSetGlobalProperty
g_fIsEnvironmentChangeOK
IPC_EI_API_MODE
ipp::IppUtil::CheckApiMode(nApiMode)
IPCP_EI_STORE_NAME
IPC_EI_APPLICATION_ID
pAppId->cbSize >= sizeof(IPC_AAD_APPLICATION_ID)
pAppId->wszClientId
Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pAppId->wszClientId, IPC_OS_MAX_CCH, &_cchLen)
0 != _cchLen
pAppId->wszRedirectUri
Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pAppId->wszRedirectUri, IPC_OS_MAX_CCH, &_cchLen)
IPC_EI_STORE_PATH_ROOT
IPC_EI_LOG_CONFIGURATION
pLoggingConfig->cbSize >= sizeof(IPC_LOGGING_CONFIGURATION)
0 == ((~IPC_LOGGING_MASK) & pLoggingConfig->dwLogTypes)
dwReservedCheck != (dwReservedCheck & pLoggingConfig->dwLogTypes)
E_OUTOFMEMORY
FALSE
IPC_EI_ENABLE_TELEMETRY
IpcCreateLicenseMetadataHandle
pvSerializedLicense
phMetadata
IpcCreateLicenseMetadataHandle
NULL != pvSerializedLicense
OWNER
pKey->AccessCheck(IPC_GENERIC_ALL)
(IPC_USER_TYPE_EMAIL == pOwner->dwType) && (0 == wcsicmp(wszEmailFromCLC, pOwner->wszID))
IpcSetLicenseMetadataProperty
hLicenseMetadata
IpcSetLicenseMetadataProperty
0 != hLicenseMetadata
INVALID_HANDLE_VALUE != hLicenseMetadata
!fDelete && NULL != pvLicenseInfo
pLicenseMetadata->IsValid()
ipp::IppUtil::CheckNotificationType(dwNotificationType)
ipp::IppUtil::CheckNotificationPreference(dwNotificationPref)
IpcSerializeLicenseWithMetadata
IpcSerializeLicenseWithMetadata
0 != pLicenseMetadata.get()
IpcpBootstrapUser
pUser
IpcpBootstrapUser
ipp::IppUser::CheckBootstrapUser(pUser)
ppcTi
ppcUser
IppGetUser( IPP_GU_CONNECTION_INFO, &pUserFromConnInfo, pUserFromConnInfo.wszID ? dwFlags : (dwFlags | IPP_GU_NEW), pIpcContext, &hUser)
IpcpGetUseLicenseFromSerializedLicense
pcvLicense
IpcpGetUseLicenseFromSerializedLicense
ppvUseLicense
dwFlags == 0
IpcpGeneratePreLicensesForUsers
pUserList
ppUseLicenses
IpcpGeneratePreLicensesForUsers
ipp::IppUtil::CheckUserList(pUserList)
IpcpGeneratePreLicensesForUsersInternal(pvLicense, pUserList, dwFlags, pIpcContext, ppUseLicenses)
E_INVALIDARG
pFactory != 0 && pFactory->IsValid()
(g_pFactory.get() == 0) || (!pFactory->ProductionCodeOnly())
server
client
Logging Initialized for %hs mode, store name is %ws
ippInitializeAuthAndFileBasedLoggingIfNeeded
Log Version: 1.1
[msipp]: IPP API debug tracing is on.
IpcGetErrorMessageText
hrError
dwLanguageId
IpcGetErrorMessageText
S_OK != hrError
ppwszErrorMessageText
IpcOsGetErrorMessageText( hrError, dwLanguageId, g_hMSIPPHandle, const_cast<LPCWSTR *>(&wszErrorText))
os::IpcOsStringCchCopy(wszOut, cchErrorText, wszErrorText)
IpcGetLastErrorMessageText
IpcGetLastErrorMessageText
os::IpcOsStringCchCopy(wszOut, cchErrorText, wstrErrorMsg.c_str())
IpcpAllocMemory
IpcpAllocMemory
NULL != ppv
IpcpCreateKeyFromKey
dwCipherMode
IpcpCreateKeyFromKey
IPCP_CK_CIPHER_MODE_CBC_4K == dwCipherMode
0 != phKey
IpcpClearKeys
IpcpClearKeys
IpcpGetKeyBits
pbContentKey
pcbContentKey
IpcpGetKeyBits
0 != pcbContentKey
IpcpGetLoggerInstance
ppLoggerInstance
IpcpGetLoggerInstance
0 != IIpcLogger::GetInstance()
IpcpSetLastIpcError
hrErrorCode
IpcpSetLastIpcError
IpcpSetLastFileName
wszFileName
IpcpSetLastFileName
IpcpGetErrorInfoInstance
ppErrorInfoInstance
IpcpGetErrorInfoInstance
IpcRegisterLicenseInternal
pvLicenseWithMetadata
ipp::IppUtil::CheckBuffer(pvLicenseWithMetadata)
!(NULL != pContext && (pContext->dwFlags & IPC_PROMPT_FLAG_OFFLINE))
ipp::IppUtil::ConvertBufferToString(pvLicenseWithMetadata, &wszLicense)
canRegisterPL
IpcRegisterLicense
wszContentName
fSendRegistrationMail
IpcRegisterLicense
IpcpSetKeyBits
cbContentKey
IpcpSetKeyBits
0 != pbContentKey
0 != cbContentKey
IpcpGetUserInfo
IpcpGetUserInfo
ppUserInfo
IppGetUser(IPP_GU_CONNECTION_INFO, &pUserFromConnInfo, 0, pIpcContext, &hUser)
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_pointer.h
Local\SM0:%lu:%lu:%hs
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_ipcmem.h
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_array.h
invalid string position
string too long
Validation failed 'handle'
onecoreuap\ds\security\rm\client\src\base\Handle\IpcHandle.h
Validation failed 'pHandle'
msipc
vector<T> too long
Getting connection info, extranet: %ws, intranet : %ws
Microsoft::InformationProtection::LicensePropertyAllocator::GetProperty
onecoreuap\ds\security\rm\client\src\msipc\api\licensepropertyallocator.cpp
Connection info is NULL
Current owner: %ws
os::IpcOsStringCchCopy(const_cast<LPWSTR>(pOut->wszID), cchID, pOwner->wszID)
onecoreuap\ds\security\rm\client\src\msipc\api\licensepropertyallocator.cpp
IPC_LI_VALIDITY_TIME: %hs
IPC_LI_INTERVAL_TIME: %u days
License is not created from official template. wszId will be NULL
Issuer name: %ws
os::IpcOsStringCchLength(wszIssuerName, IPC_OS_MAX_CCH, &cchIssuerName)
Template name: %ws
os::IpcOsStringCchLength(wszName, IPC_OS_MAX_CCH, &cchName)
Template description: %ws
os::IpcOsStringCchLength(wszDescription, IPC_OS_MAX_CCH, &cchDescription)
Template id: %ws
os::IpcOsStringCchLength(wszTemplateId, IPC_OS_MAX_CCH, &cchTemplateId)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszName), cchName, wszName)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszDescription), cchDescription, wszDescription)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszIssuerDisplayName), cchIssuerName, wszIssuerName)
os::IpcOsStringCchCopy(const_cast<PWSTR>(pOut->wszID), cchTemplateId, wszTemplateId)
Template is from template: %s
Template is from RMSO: %s
os::IpcOsStringCchCopy(wszOut, cchReferralInfoUrl, wstrReferralInfoUrl.c_str())
Referal info URL: %ws
Licesne usees deprecated algorithm: %s
License uses CBC512 no padding: %s 
The prefered encryption package is: %ud 
License handle doesn't have contentId set
HRESULT_FROM_WIN32(ERROR_NO_DATA)
os::IpcOsStringCchCopy(wszOut, cchContentId, wstrContentId.c_str())
License handle doesn't have IssuedTimeSet set
IssuedTimeSet : %hs
Signer Id : %ws, Name = %ws
%s#/summary/%s/%s
License handle doesn't have owner set
os::IpcOsStringCchPrintf( wszDocTrackingUrl, ARRAYSIZE(wszDocTrackingUrl), format, g_wszTrackingPortalBaseUrl, wstrContentId.c_str(), pOwner->wszID)
DocTrackingUrl requested for non RMSO
IsFromRmso
os::IpcOsStringCchCopy(wszOut, trackingUrlsize, wszDocTrackingUrl)
 DocTrackingUrl info URL: %ws
ipp::IppUtil::AreIpcBuffersEqual(pvLicense, pLicense)
using cached parsed license
Microsoft::InformationProtection::LicensePropertyAllocator::GetParsedLicense
parsing new license
spLicense->IsValid()
msipc
https://track.azurerms.com/
ProactiveEULRenewalDisabled
Microsoft.DigitalRightsManagement.Licensing.UserIsExcludedException
TemplateUpdateFrequency
CERT-Machine
CERT-Machine-2048
mailto:
Value
IdentityCacheSize
ServiceDiscovery
Windows
QueryString
wresult
CertificationService
http://microsoft.com/DRM/LicensingService
false
https://licensing.drm.microsoft.com/licensing
TMPV2-
\Template
RepublishOnly
soap:Body
ServiceLocations
RequiresRedirect
GetClientLicensorCertResponse
1.0.0.0
SkipServerInfo
AcquirePreLicense
AcquireLicenseParams
string
ServerService
NoValidation
xsd:string
\Microsoft\WINMSIPC\Server\
<soap:Header>
</soap:Body>
Microsoft.DigitalRightsManagement.PublishingDisabledException
RMS Online
SOFTWARE\Microsoft\WINMSIPC\Server
ServerFeatureInfo
</soap:Envelope>
Verified
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\EnterpriseCertification
AcquireDelegationLicenseResponse
https://discover.aadrm.com/_wmcs/certification
ServiceDiscoveryForUser
Identities
AcquireLicenseForIssuanceLicenseV2
GetLicensorCertificate
Microsoft.DigitalRightsManagement.Licensing.BlackBoxIsInvalidException
MSOSPN
Certificate
AcquireLicense
IssuanceLicV2Enabled
Microsoft.DigitalRightsManagement.Licensing.InvalidPersonaCertTimeException
/server.asmx
xmlns
ServiceDiscoveryService
/Certification.asmx
Global\
ServiceLocation
Header
AcquirePreLicenseResponse
RMSOServerVerification
</CERTIFICATECHAIN>
faultcode
/ServiceLocator.asmx
Feature
AcquireTemplates
CertificationService
LicensingService
LicenseeCerts
AcquireDelegationLicense
\Microsoft\WINMSIPC\
requestParameters
 xsi:nil="1"/>
ServerInfo
Quota
Referral-Info
Message
Templates\
soapenc:arrayType
<?xml version="1.0"
IssuanceLicense
IntranetLicenseURL
external
Envelope
OAUTH2
Microsoft.DigitalRightsManagement.Licensing.NoRightsForRequestedPrincipalException
ServiceLocationResponse
Certification
<CERTIFICATECHAIN>
</CERTIFICATE>
<CERTIFICATE>
<soap:Body>
string
Microsoft.DigitalRightsManagement.Utilities.ADEntrySearchFailedException
LicensingInternalService
http://microsoft.com/DRM/LicensingService
encrypted-rights-data
GetClientLicensorAndUserCertificatesParams
Microsoft.DigitalRightsManagement.Licensing.InvalidPersonaCertSignatureException
serviceDiscoveryRequest
AcquireLicenseForIssuanceLicenseV2Params
http://microsoft.com/DRM/PublishingService
Microsoft.DigitalRightsManagement.Core.VerifyEmailAddressFailedException
MachineCertificateChain
Microsoft.DigitalRightsManagement.Activation.EmailAddressNotVerified
Content-Type: application/x-www-form-urlencoded
AcquirePreLicenseParams
AcquireDelegationLicense
string
soap:Fault
SOFTWARE\Microsoft\WINMSIPC
SOFTWARE\Microsoft\WINMSIPC\Servicelocation\LicensingRedirection\
XmlElement
CorrelationId
Template
Software\Microsoft\WINMSIPC
/ServiceDiscovery.asmx
Software\Microsoft\MSOIdentityCRL
GetClientLicensorAndUserCertificatesResponse
AcquireTemplateInformation
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\RMSOnlineGlobalCertification
Licensing
ServerInfoRequest
/servicediscovery/
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
CertificateChain
TemplateDistributionService
Microsoft.DigitalRightsManagement.Certification.MismatchedIdentificationEmailAddressException
FederationHomeRealm
ServiceDiscoveryUrl
ServiceDiscoveryChecked
TrustIntEKU
UserCertificateResponse
LicensingService
detail
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\EnterprisePublishing
LicensorCertificateResponse
http://microsoft.com/DRM/TemplateDistributionService
faultstring
DelegatedEmailAddress
IssuanceLicenseV2
/licensing/
APPSPECIFIC
Content-Type: application/x-www-form-urlencoded
Accept-Encoding: gzip, deflate
Certify
Microsoft.DigitalRightsManagement.Licensing.IssuanceLicenseIsNotWithinValidTimeRangeException
ServerType
DelegatedIdentities
Hierarchy
AuthType
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\TrustTestRoot
Licenses
UDRMPublishingSignRL_%lu%lu
UnManagedTemplates\
GetClientLicensorCert
SOFTWARE\Microsoft\WINMSIPC\ServiceLocation\CloudPublishing
GetServerInfo
LastUpdatedTime
LICENSEMETADATA
<?xml
DnsRedirectionDisabled
CertificationInternalService
VersionInfo
MaxLengthSignedOfflineIssuanceLicense
Content-Type: text/xml; charset=utf-8
SOAPAction: "http://microsoft.com/DRM/%s/%s"
AcquireLicenseResponse
/License.asmx
/templatedistribution.asmx
http://microsoft.com/DRM/ServiceDiscoveryService
MSOSSP
SOFTWARE\Microsoft\WINMSIPC
PublishingService
xsi:nil
soap:Envelope
MSOIDCRLVersion
RequestParams
</soap:Header>
VersionData
hidden
-GIC-
SOFTWARE\Microsoft\WINMSIPC
DisablePassportCertification
EnableBrowser
AcquireDelegationLicenseParams
LicenseeIdentities
Results
MinimumVersion
Microsoft.DigitalRightsManagement.Cryptography.UnsupportedCryptographicSetException
http://microsoft.com/DRM/ServerService
Microsoft.DigitalRightsManagement.Licensing.UnexpectedPersonaCertException
http://microsoft.com/DRM/LicensingService
FindServiceLocationsForUser
\Identities
JCLC-
http://microsoft.com/DRM/CertificationService
EndUserLicenseService
ServiceDiscovery
ServerInfo
6.0.0.0
 soapenc:arrayType="
/PreLicense.asmx
Trace
Certificate
/publish.asmx
Microsoft.DigitalRightsManagement.Licensing.DrmacIsExcludedException
<?xml version="1.0" encoding="utf-8"?>
TemplateUpdateFrequencyInSeconds
http://microsoft.com/DRM/ServiceLocatorService
SOFTWARE\Microsoft\WINMSIPC
RequiresBrowser
Fault
PersonaCertificates
GetClientLicensorCertParams
MaximumVersion
 xmlns="
ExtranetLicenseURL
Software\Microsoft\WINMSIPC\TrustedServers
CertificateChain
ServerType
System.UnauthorizedAccessException
ServiceLocationRequest
SLCPublicKey
guids
Persistent
/ServerCertification.asmx
AllowOnlyTrustedServers
LANGID=
/certification/
AuthTypes
ServiceLocatorService
Federation
ServiceNames
Microsoft.DigitalRightsManagement.Licensing.UntrustedPersonaCertException
NOLICCACHE
requestParams
soap:Header
Microsoft.DigitalRightsManagement.Core.VerifyMachineCertificateChainFailedException
GetClientLicensorAndUserCertificates
Software\Microsoft\WINMSIPC
TemplatesVersion
MSOSSO
SOFTWARE\Microsoft\WINMSIPC\LicensingRedirection\
1.1.0.0
CertificateChain
Content-Type: text/xml; charset=utf-8
Accept-Encoding: gzip, deflate
SOAPAction: "http://microsoft.com/DRM/%s/%s"
requests
AcquirePreLicense
TrustTestSSLRoot
SOFTWARE\Microsoft\WINMSIPC\Federation
GetClientLicensorAndUserCertificatesEnabled
Version
AcquireLicenseForIssuanceLicenseV2Response
PersonaCerts
 href="
0 == psz || SUCCEEDED(StringCchLengthA(psz, cchMaxLength, 0))
onecoreuap\ds\security\rm\client\src\base\FsCommon\str_t.h
0 != cch
0 != MultiByteToWideChar(CP_ACP, 0, psz, -1, m_wsz, cch)
IpcOsInitializeEventTracing: EventRegister failed with error code: %lu.
IpcOsUninitializeEventTracing: EventUnregister failed with error code: %lu.
IpcOsEventLevelEnabled: Event tracing has not been initialized or initialization failed.
IpcOsEventLevelEnabled: an invalid event level provided, returning false...
IpcOsEventWrite: Event tracing has not been initialized or initialization failed.
IpcOsEventWrite: an invalid event level provided, no event is generated.
IpcOsEventWrite: Event tracing failed due to invalid event data.
IpcOsEventWrite: EventWrite failed with error code: %lu.
IpcOsEventWrite: SafeInt Exception
IpcOsEventWrite: an exception caught during writing an event.
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcossync.cpp
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosmisc.cpp
%d.%d.%d.%d
pGetLanguagesFunc != nullptr
ppdwLcid != nullptr
*ppdwLcid == nullptr
cdwLcid != nullptr
os::IpcOsStringCchLength(&wszLangNames[cOffset], IPC_OS_MAX_CCH, &stDataSize)
*ppwszErrorText == nullptr
hModule != nullptr
hResource != nullptr
HRESULT_FROM_WIN32(GetLastError())
pFilePath
WindowsPortUtil::GetFileNameFromModulePath(wcszModule, wcszFileName, &wszPath)
+[msipc]:IpcOsVerifyCertMicrosoftRooted
-[msipc]:IpcOsVerifyCertMicrosoftRooted hr=0x%x
+[msipc]:MsftRootBuiltinVerification
-[msipc]:MsftRootBuiltinVerification hr=0x%x
+[msipc]:MsftRootCustomVerification
SHA256
-[msipc]:MsftRootCustomVerification hr=0x%x
Windows
SameAsOSVersion
BCryptOpenAlgorithmProvider( &hAlgHandle, BCRYPT_SHA256_ALGORITHM, NULL, BCRYPT_ALG_HANDLE_HMAC_FLAG)
HashDigestLength
BCryptGetProperty( hAlgHandle, BCRYPT_HASH_LENGTH, (PBYTE)&cbHash, sizeof(cbHash), &cbResult, 0)
BCryptCreateHash( hAlgHandle, &hHashHandle, NULL, 0, const_cast<BYTE *>(pbKey), cbKey, 0)
BCryptHashData( hHashHandle, const_cast<BYTE *>(pbData), cbData, 0)
BCryptFinishHash( hHashHandle, pbLocalHash, cbHash, 0)
winmsipc.dll
\\?\UNC\
bad locale name
ios_base::badbit set
ios_base::failbit set
ios_base::eofbit set
invalid stoi argument
stoi argument out of range
Microsoft::FoundationServices::Common::Registry::LogRegistryOperation
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
REGISTRY: %hs [%hs\%ws\%ws] %ws=%ws
Missing
REGISTRY: %hs - %hs [%hs\%ws\%ws] %ws.
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
IncorrectBufferSizeException
DiagnosticTenantId
bd664257d8ba4f5683d748011eb67a1b-7336a5d4-f348-4010-ac80-e0616834cf8e-7517
IDispatch error #%d
Unknown error 0x%0lX
onecoreuap\ds\security\rm\client\src\base\util\ipputil.cpp
pTemplateInfo
pTemplateInfo->lcid != 0
os::IpcOsStringCchLength(pTemplateInfo->wszName, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pTemplateInfo->wszDescription, IPC_OS_MAX_CCH, 0)
cRights > 0
rgwszRights
os::IpcOsStringCchLength(rgwszRights[i], IPC_OS_MAX_CCH, 0)
pvBuffer
pvBuffer->pvBuffer
pvBuffer->cbBuffer != 0
pUserList->cUsers > 0
IppUser::Check(&(pUserList->aUser[i]))
ipp::IppUtil::CheckCipherMode(nCipherMode)
ipp::IppUtil::CheckSymmetricAlgorithmAndKeySize(wszAlgorithm, cbKey)
pNameValue
pNameValue->wszName
pNameValue->wszValue
os::IpcOsStringCchLength(pNameValue->wszName, IPC_OS_MAX_CCH, 0)
os::IpcOsStringCchLength(pNameValue->wszValue, IPC_OS_MAX_CCH, 0)
sizeof(IPC_PROMPT_CTX) == pContext->cbSize
!(pContext->dwFlags & (~dwValidFlags))
CheckIpcCredential(pContext->pcCredential)
pContext->pcCredential
pContext->pcCredential->dwType == IPC_CREDENTIAL_TYPE_OAUTH2
ipp::IppUtil::CheckForServerApiMode(ipp::IppSettings::GetInstance()->GetApiMode())
( pcCredential->dwType == IPC_CREDENTIAL_TYPE_X509 || pcCredential->dwType == IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY || pcCredential->dwType == IPC_CREDENTIAL_TYPE_OAUTH2)
pcCredential->pcCertContext
!(nFlags & ~( IPC_SL_FLAG_REUSE_KEY | IPC_SL_FLAG_KEY_NO_PERSIST | IPC_SL_FLAG_KEY_NO_PERSIST_DISK | IPC_SL_FLAG_DEPRECATED_UNSIGNED_LICENSE_TEMPLATE | IPC_SL_FLAG_KEY_NO_PERSIST_LICENSE | IPC_SL_FLAG_ISSUANCE_LICENSE_V2 | IPCP_SL_FLAG_CHANGE_DISTRIBUTIONPOINT))
!(nFlags & ~(IPC_GK_FLAG_KEY_NO_PERSIST_DISK))
!wcscmp(wszAlgorithm, IPC_ALGORITHM_AES)
0 == cbKey || IPC_AES128_KEY_SIZE == cbKey || IPC_AES256_KEY_SIZE == cbKey
ipp::IppUtil::CheckStructVersion(pConnectionInfo->cbSize, sizeof(IPP_USER_FROM_CONNECTION_INFO))
0 == pConnectionInfo->pConnectionInfo || SUCCEEDED(ipp::ConnectionInfo::Check(pConnectionInfo->pConnectionInfo ))
pLicenseInfo
pLicenseInfo->pvLicense
pLicenseInfo->pvLicense->pvBuffer
cchString < STRSAFE_MAX_CCH
pTemplateInfo->pvTemplate
pTemplateInfo->pvTemplate->pvBuffer
!(dwFlags & (~ GetValidIppGetUserFlags()))
unknown type for dwNotificationType
unknown type for dwNotificationPreference
!(dwFlags & ~(IPC_GTL_FLAGS))
!(dwFlags & ~(IPC_GTIL_FLAG_DEFAULT_SERVER_ONLY | IPC_GTIL_FLAG_USE_PROVIDED_LICENSING_URL))
cbBuffer > sizeof(s_pbUTF8Preamble)
pcbPreamble
*(reinterpret_cast<const wchar_t*>(pvBuffer)) < 0x80
ppwszUTF16
cchUTF8 < STRSAFE_MAX_CCH
0 != cchUTF16
cchUTF16 < STRSAFE_MAX_CCH
pstrUTF16
0 != cchUTF8
(SafeInt<size_t>(pvBuffer->cbBuffer) % sizeof(WCHAR) == 0)
Microsoft::InformationProtection::IppUtil::HandleException
onecoreuap\ds\security\rm\client\src\base\util\ipputil.cpp
SafeIntException
Unknown COM error
Out of memory
Unknown C++ error
Error of unknown type
%ws: %ws
Microsoft::InformationProtection::IppUtil::HandlePublicAPIException
++++++++ WARNING: %ws: %ws ++++++++
++++++++ ERROR: %ws: %ws ++++++++
++++++++ WARNING: %ws ++++++++
++++++++ ERROR: %ws ++++++++
++++++++ ERROR: SafeIntException: arithmetic overflow. ++++++++
++++++++ ERROR: Com error: %ws ++++++++
++++++++ ERROR: Out of memory ++++++++
++++++++ ERROR: caught C++ exception: %ws ++++++++
++++++++ ERROR: caught unnknown C++ error ++++++++
++++++++ ERROR: Error of unknown type ++++++++
Error HRESULT 0x%x mapped to 0x%x
Microsoft::InformationProtection::IppUtil::MapDRMErrorToIPCError
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &lenSrc)
os::IpcOsStringCbCopy(wszDest, cbDest, wszSrc)
cbBuffer < STRSAFE_MAX_CCH
0 == cbBuffer%sizeof(wchar_t)
pRegistry
ppwszValue
HRESULT_FROM_WIN32(status)
ppwszDest
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &uSrcLength)
os::IpcOsStringCchCopy(localStr, uSrcLength, wszSrc)
os::IpcOsGetCurrentUserId(&wszUserID)
os::IpcOsStringCchLength(wszUserID, IPC_OS_MAX_CCH, &cchUserID)
++++++++ WARNING: Couldn't find name and description for the user and system preferred locales. Falling back to the first name and description. ++++++++
Microsoft::InformationProtection::IppUtil::GetNameAndDescriptionFallback
os::IpcOsStringCchCopy(*pwszOut, *pcchRemaining, wszIn.c_str())
copyStringToList - Not enough memory allocated.
Microsoft::InformationProtection::IppUtil::copyStringToList
The URL "%ws" does not point to a trusted server
Microsoft::InformationProtection::IppUtil::IsServerURLTrusted
os::IpcOsCoCreateGuid(&guid)
(0 != uiGUIDLength)
Exception while building user agent string: hr == 0x%x. Setting it to "MSIPC".
MSIPC
os::IpcOsGetFileVersionInfo(wstrAppFilePath.c_str(), dwHandle, SafeInt<DWORD>(vbVersionInfo.size()), &vbVersionInfo[0])
os::IpcOsVerQueryValue(&vbVersionInfo[0], wszSubBlock, (LPVOID*) &pFileInfo, (PUINT)&nBufLen)
0 != dwAppFilePathLength
wstring::npos != nLastSlash
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d.%d", dwMajor, dwMinor, dwBuild, dwRevision)
%d.%d.%d
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d", dwMajor, dwMinor, dwBuild)
amd64
unknown
CurrentMajorVersionNumber
CurrentMinorVersionNumber
CurrentVersion
CurrentBuildNumber
Software\Microsoft\Windows NT\CurrentVersion
MSIPC;version=%ws;AppName=%ws;AppVersion=%ws;AppArch=%ws;PID=%u;OSName=%ws;OSVersion=%ws;OSArch=%ws
os::IpcOsStringCchPrintf( wszUserAgentString, MAX_USER_AGENT_STRING, wszUserAgentStringFormat, os::IpcOsGetBuildVersion(), wstrAppName.c_str(), wstrAppVersion.c_str(), wstrAppArch.c_str(), os::IpcOsGetCurrentProcessId(), os::IpcOsGetOsName(), wstrOsVersion.c_str(), wstrOsArch.c_str())
************* System/App Info *************
* OS: Windows
* OS Version: %ws
* OS Architecture: %ws
* Client Hierarchy: %d
* AppName: %ws
* AppVersion: %ws
* PID: %u
* DateTime (UTC): %hs
******************************************
os::IpcOsStringCchPrintf( s_wszSystemInformationString, ARRAYSIZE(s_wszSystemInformationString), wszSystemInfoFormat, GetOsVersion().c_str(), GetArchitecture(true).c_str(), CUdmgrldr().GetClientHierarchy(), appName.c_str(), appVersion.c_str(), os::IpcOsGetCurrentProcessId(), GetLogableStdStringA(stNow).c_str())
IppUtil::IsPassportCertificationEnabled: hr == 0x%x
False
Could not format a systemtime
StringCchPrintfW( &dateTimeString[0], dateTimeString.size(), wszDateTimeFormat, st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute)
Could not format a filetime
Could not format a time range
os::IpcOsGetErrorMessageText( hrError, 0, g_hMSIPPHandle, const_cast<PCWSTR*>(&wszErrorMessage))
Microsoft::InformationProtection::IppUtil::Base64Encode
wszInput
cbData
CBase64::UDBinToBase64W(cbSize, cbData, &cbOutput, NULL)
CBase64::UDBinToBase64W(cbSize, cbData, &cbOutput, &wstrOutput[0])
CBase64::UDBase64ToBinW(cbInputData, wstrData.c_str(), &cbData, NULL)
CBase64::UDBase64ToBinW(cbInputData, wstrData.c_str(), &cbData, &vbDecodedData[0])
NULL != pv
Microsoft::InformationProtection::IppUtil::WideCharToMultiByte
0 != cNeededLen
cNeededLen == cWrittenLen
GXGetLastHR()
D:(A;OICI;GA;;;BA)(A;OICI;GA;;;SY)(A;OICI;GA;;;%s)
phProv
CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_AES, CRYPT_NEWKEYSET)
CryptImportKey(hProv, (BYTE*)&pbKeyBlob[0], SafeInt<DWORD>(pbKeyBlob.size()), 0, 0, &hKey)
CryptSetKeyParam(hKey, KP_MODE, (BYTE*)&dwMode, 0)
CryptEncrypt(hKey, 0, FALSE, 0, (BYTE*)&encData[0], &dwEncDataLen, cbRequiredBytes)
CryptDecrypt(hKey, 0, FALSE, 0, (BYTE*)&decData[0], &dwDecDataLen)
CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL, CRYPT_NEWKEYSET)
CryptImportKey(hProv, pbKey, SafeInt<DWORD>(cbKey), 0, 0, &hKey)
CryptEncrypt(hKey, 0, FALSE, dwEncryptFlags, (BYTE*)&encData[0], &dwData, cbRequiredBytes)
wszLic
StringCchLengthW(wszLic, STRSAFE_MAX_CCH, &licLen)
Version component is invalid : %ws
Microsoft::InformationProtection::IppUtil::WstringToInteger
onecoreuap\ds\security\rm\client\src\base\util\auto_localfree.h
bad cast
IppUser::Check(&pAce->User)
0 == pszValueName || SUCCEEDED(os::IpcOsStringCchLength(pszValueName, CCH_MAX_REG_VALUE_NAME, 0))
pcchOut
nTypeRead == nType && *pcchOut > 0 && *pcchOut % sizeof (T) == 0
%02d/%02d/%02d %02d:%02d:%02d.%03d
%04d-%02d-%02dT%02d:%02d
%hs - %hs
************* Build Info *****************
* WinMSIPC Version: SameAsOsVersion 
* Official Build
* Flavor: Retail
* Architecture: x86
******************************************
msipc
?456789:;<=
 !"#$%&'()*+,-./0123
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=
Tried to create an Exception with a non-failing error code - hr=0x%x. Converting it to E_FAIL.
HresultException
) [hr = 0x
L'\0' != *rootDirectory
onecoreuap\ds\security\rm\client\src\base\storepath\storepath.cpp
StringCchPrintfW( &descriptor[0], descriptor.size(), wszFormat, userId.c_str())
0 == wcsncmp(uncPathCheck, L"\\\\", 2)
L'\\' != uncPathCheck[2] && L'\0' != uncPathCheck[2] && L'?' != uncPathCheck[2]
wstring::npos != i
DoesDirectoryExist(path)
::CreateDirectory(path.c_str(), pSecurityAttributes)
ConvertStringSecurityDescriptorToSecurityDescriptorW( wszSecurityDescriptor, SDDL_REVISION_1, &(pSecurityAttributes->lpSecurityDescriptor), NULL)
StringCchLength(wszStoreName, STRSAFE_MAX_CCH, &cchStoreName)
(0 < cchStoreName && cchStoreName <= s_cchMaxStoreName)
StringCchCopy( s_wszStoreNameBuffer, _countof(s_wszStoreNameBuffer), wszStoreName)
Logging failed
Logging failed with hr = 0x%x
Formatting log message failed with hr = 0x%x
++++++++ WARNING the ref count of logger instance is 0 +++++++++
Microsoft::InformationProtection::CIpcLogger::Release
onecoreuap\ds\security\rm\client\src\base\logging\ipclogger.cpp
XYTOX
msipc
{{[%I64u][%s]:[%s]:[%d]:[%04d-%02d-%02d %02d:%02d:%02d.%03d]: %s:%s:%d
deque<T> too long
{{========================================= ERROR LOGS BEGIN =========================================================}}
{{========================================= ERROR LOGS END ==========================================================}}
EtwEnabled
MaxFiles
MaxLinesInFile
LogPath
Level
Trace
MaxLinesInMemory
MemoryTracingEnabled
DebugOutputEnabled
.ipclog
.lock
HRESULT_FROM_WIN32(nError)
onecoreuap\ds\security\rm\client\src\base\logging\LogFileSlot.h
StringCchPrintf(&path[0], path.size(), wszPathFormat, basePath.c_str(), iSlot, wszSuffix)
INVALID_HANDLE_VALUE != m_hLogFile
onecoreuap\ds\security\rm\client\src\base\logging\ipcfilelogchannel.cpp
[msipc] All the logging slots are taken.
%ws\LogFile_%d%ws
SetEndOfFile(m_hFile)
onecoreuap\ds\security\rm\client\src\base\logging\circularfilelogger.cpp
INVALID_SET_FILE_POINTER != SetFilePointer(m_hFile, 0, NULL, SEEK_SET)
StringCbLengthA(szMessage, STRSAFE_MAX_CCH, &cbSize)
WriteFile(m_hFile, szMessage, static_cast<DWORD>(cbSize), &dwWritten, NULL)
0 == pszName || SUCCEEDED(cmn::FsStringCchLength(pszName, MAX_PATH, 0))
ReaderWriterLock::LockRead: Error in %lu ResetEvent.
ReaderWriterLock::LockWrite: Error in %lu ResetEvent.
ReaderWriterLock::UnlockRead: Error in %lu SetEvent.
ReaderWriterLock::UnlockWrite: Error in %lu SetEvent.
onecoreuap\ds\security\rm\client\src\base\fscommon\auto_pointer.h
onecoreuap\ds\security\rm\client\src\base\fscommon\auto_handle.h
onecoreuap\ds\security\rm\client\src\base\fscommon\ccachemruqueue.cpp
list<T> too long
REGISTRY: %hs [%hs\%ws\%ws] %ws=dword:%u
onecoreuap\ds\security\rm\client\src\base\fscommon\Registry.h
os::IpcOsStringCchLength(pszSubkey, IPC_OS_MAX_CCH, 0)
onecoreuap\ds\security\rm\client\src\base\fscommon\registry.cpp
os::IpcOsRegCreateKeyEx( hRoot, pszSubkey, 0, 0, 0, KEY_READ | KEY_WRITE, const_cast<SECURITY_ATTRIBUTES*>(pSa), &m_hKey, &dwDisposition)
Create
os::IpcOsStringCchLength(pszKey, CCH_MAX_REG_KEY_NAME, 0)
os::IpcOsRegDeleteKey(m_hKey, pszKey)
Delete
os::IpcOsStringCchLength(pszValue, CCH_MAX_REG_VALUE_NAME, 0)
os::IpcOsRegDeleteValue(m_hKey, pszValue)
Software\Classes\Local Settings\
REGISTRY - Attempted searching for RegKey with %ws           opening a reg key using HKEY_CURRENT_USER_LOCAL_SETTING failed.            Falling back to HKEY_CURRENT_USER.
Microsoft::FoundationServices::Common::Registry::Open
onecoreuap\ds\security\rm\client\src\base\fscommon\registry.cpp
REGISTRY - searched with %ws
pnValue
REG_DWORD == nType && sizeof (DWORD) == cbSize
os::IpcOsRegSetValueEx( m_hKey, pszValueName, 0, REG_DWORD, (PBYTE)&nValue, sizeof (nValue))
Write
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
HKEY_CURRENT_USER_LOCAL_SETTINGS
HKEY_CLASSES_ROOT
UNKNOWN_REGISTRY_ROOT
REGISTRY: %hs [%hs\%ws\%ws] %ws
msipc
onecoreuap\ds\security\rm\client\src\base\fscommon\mutex.cpp
Mutex::Lock - Error in WaitForSingleObject.  rc = %lu.
Mutex::Unlock - Error in ReleaseMutex.  rc = %lu.
sealed-key
sealed-key-v2
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\rmsudcapi.cpp
os::IpcOsCryptGenRandom(hProv, cFill, pbFill)
os::IpcOsCryptCreateHash(hProv, uType, NULL, 0, &hHash)
os::IpcOsCryptGetHashParam(hHash, HP_HASHSIZE, (BYTE*)pcbDigest, &dwDataLen, 0)
os::IpcOsCryptHashData(hHash, pbContent, cbContent, 0)
os::IpcOsCryptGetHashParam(hHash, HP_HASHVAL, pbDigest, (DWORD*)pcbDigest, 0)
hr=os::IpcOsStringCchLength(wszBase64Hash, IPC_OS_MAX_CCH, &cchBase64Hash)
hr = CBase64::UDBase64ToBinW(SafeInt<UINT>(cchBase64Hash), wszBase64Hash, &cbDecoded, NULL)
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\udcapirsa.cpp
os::IpcOsCryptCreateHash(hProv, uAlgID, NULL, 0, &hHash)
os::IpcOsCryptSetHashParam(hHash, HP_HASHVAL, pbDigest, 0)
Microsoft Enhanced RSA and AES Cryptographic Provider
onecoreuap\ds\security\rm\client\src\msipc\cryptutil\udcapiblob.cpp
CryptImportKey(hProv, pbSimpleBlob, cbSimpleBlob, hE1K, 0, &hKey)
CryptImportKey(hProv, (PBYTE)&deskey, sizeof(deskey), NULL, 0, &hKey)
*ppbCapiBlob = new (std::nothrow) BYTE[*pcbCapiBlob]
zdq^`
Vt\pt
[msipc]:Disabled SSPI auth for RMSO
Microsoft Online Services Sign-in Assistant version is %ws
IsMOSSAInstalled
onecoreuap\ds\security\rm\client\src\msipc\http\soaprequest.cpp
[msipc]:IsMOSSAInstalled MOSSA Check hr = 0x%x
onecoreuap\ds\security\rm\client\src\msipc\http\soaprequest.cpp
Microsoft Online Services Sign-in Assistant is Installed
Microsoft Online Services Sign-in Assistant is not Installed
[msipc]:IsMOSSAInstalled hr = 0x%x
+++++++ WARNING Got a non-XML response from the server ++++++
CDRMSoapRequest::PutResponse
drmXml.GetNodeType(&nodeType)
drmXml.FirstChild(&tagchk)
tagchk
drmXml.GetNodeValue(&wszNodeValue)
+++++++ WARNING Got a non-SOAP response from the server ++++++
ExtractParameter(&drmXml, pNewParameter)
drmXml.NextSibling(&tagchk)
drmXml.Parent(&tagchk)
drmXml.GetNodeValue(&m_wszMethodName)
drmXml.GetXMLFragment(FALSE, &m_wszFaultCode)
CXmlenc::UnescapeXML(m_wszFaultCode)
drmXml.GetXMLFragment(FALSE, &m_wszFaultString)
CXmlenc::UnescapeXML(m_wszFaultString)
+++++++ Warning server fault: ++++++
      FaultString: %ws 
      FaultCode: %ws
drmXml.Child(g_wszSOAP_FAULT_DETAIL, 0, &tagchk)
drmXml.Child(g_wszSOAP_FAULT_SERVERINFO, 0, &tagchk)
CXmlenc::UnescapeXML(m_wszFaultCorrelationId)
+++++++ Warning server fault CorrelationId=%ws: ++++++
drmXml.Child(g_wszSOAP_FAULT_EXCEPTION_MESSAGE, 0, &tagchk)
drmXml.GetXMLFragment(FALSE, &m_wszExceptionMessage)
CXmlenc::UnescapeXML(m_wszExceptionMessage)
+++++++++ WARNING Parsing the server response failed with +++++++++
       hr=0x%x
       response=%ws
+++++++++ WARNING Can't use Azure RMS token with an on-prem Server. ++++++++++
CDRMSoapRequest::TryToGetServerInfo
HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
IPC_API_MODE_SERVER == apiMode || connectivity.isConnected || connectivity.isConnectedToInternet
[msipc]:CDRMSoapRequest::DispatchRequest Using ServerInfo
CDRMSoapRequest::DispatchRequest
IPC_API_MODE_SERVER == apiMode || (ipp::IServerInfo::SERVER_TYPE::eOnlineServer != eServerType) || connectivity.isConnectedToInternet
[msipc]:CDRMSoapRequest::DispatchRequest Using Original URL. Ignoring ServerInfo.
[msipc]:CDRMSoapRequest::DispatchRequest hr: 0x%x
+++++++++ WARNING Can't use this token with Azure RMS +++++++++
CDRMSoapRequest::DispatchRequestUseServerInfo
This is Azure RMS and we have a token.
DispatchRequestLocal(pToken->GetTokenType())
This is Azure RMS and we don't have a token, try using adal and get a token from a social idp
This is Azure RMS and we don't have a token, try using the Sign-in Assistant.
DispatchRequestLocal(g_wszAT_MSOSSP)
+++++++++ WARNING This is Azure RMS and Office is calling us without a Token. +++++++++
       Office should retry with a token if an appropriate Identity is signed-in into Office
+++++++++ WARNING Sign-in Assistant is not installed +++++++++
IPCERROR_SIA_NOT_INSTALLED
This is an on-prem server. Use the original url.
+++++++++ AuthType "%ws" is not supported by server. Refreshing ServerInfo +++++++++
CDRMSoapRequest::DispatchRequestLocal
--------- Refreshing ServerInfo done ---------
+++++++++ ERROR After refreshing ServerInfo AuthType: %ws is still not supported by server. This is an invalid token. ++++++++++
++++++++++ Soap call using: +++++++++
       AuthType: %ws
       Url: %ws
       RequerRedirect: %ws
       RequerBrowser: %ws
---------- Soap call done hr = 0x%x ----------
[msipc]:CDRMSoapRequest::DispatchRequestLocal hr: %x
msipc
%I64u
[msipc]:InitMsipcExt Failed hr = 0x%x
Microsoft::InformationProtection::OperatingSystem::IpcOsGetFilePathFromMsipcInstallLocation (g_wszRedirectionUrlFileName, &ipcosPath)
MsipcHostNameRedirection.dat
[msipc]:ReadHostNameRedirectionUrlsFromFile Trying to load file %ws
onecoreuap\ds\security\rm\client\src\msipc\http\drmchttp.cpp
[msipc]:ReadHostNameRedirectionUrlsFromFile File not found.
[msipc]:ReadHostNameRedirectionUrlsFromFile %ws -> %ws
%ws %ws
[msdrm]: IsResponseFromStartingUrl: Found final page: startUrl %S
[msdrm]: AtlEscapeUrl failed
[msdrm]: IsResponseFromStartingUrl: responseUrl %S
+[msdrm]:GetDataFromResponse 
wresult
[msdrm]: InCorrect No. of Forms found in the message: %d
[msdrm]: Incorrect form Action
[msdrm]: Incorrect form method: %ws
[msdrm]: Param Value = %ws
[msdrm]: Param Name = %ws
issuedtoken
[msdrm]: Ignoring un-known parameter type: %ws
-[msdrm]:GetDataFromResponse: All params of interest NOT found
-[msdrm]:GetDataFromResponse: All params of interest (%d) found
Error message 401.3
-[msdrm]:GetDataFromResponse 0x%x
SOFTWARE\Microsoft\WINMSIPC\HostNameRedirection
/_wmcs
pcRedirectorUrlLength
pwszOrgUrl
HostNameRedirection detected: redirecting %ws to %ws
os::IpcOsStringCchCopy(pwszRedirectorUrl, *pcRedirectorUrlLength, wstrNewUrl.c_str())
onecoreuap\ds\security\rm\client\src\msipc\http\drmchttp.cpp
CHttpBase::SetServerInfo
+[msdrm]:CHttpBase::HandlePostRedirects
No HostNameRedirection hr=0x%x
[msdrm]:Posting token to %ws
[msdrm]:MultiByte Error
+++++++++ WARNING: Max number of retries reached. +++++++
[msdrm]: SendRequest hr = 0x%x, HTTPReturnCode=%d
[msdrm]:HandlePostRedirects: When loop ended, response was NOT from starting url.
CHttpBase::HandlePostRedirects
[msdrm]:HandlePostRedirects: m_wszLastRequestURI: %ws
[msdrm]:HandlePostRedirects: wszFirstURL: %ws
[msdrm]:CHttpBase::SendMsgToRMS. Entered function with %s
-[msdrm]:CHttpBase::HandlePostRedirects 0x%x
[msdrm]:CHttpBase::SendMsgToRMS: Returned successfully from GetResponse
[msdrm]:CHttpBase::SendMsgToRMS %s returned hr:%x,ErrorCode=%d when hitting Url=%S
[msdrm]:CHttpBase::SendMsgToRMS: Returned from HandlePostRedirects, hr: %x
[msdrm]:CHttpBase::SendMsgToRMS:  Got final message
+++++++++ ADFS flow silent with url %ws +++++++++
[msdrm]:CHttpBase::SendMsgToRMS. Exiting function with %s, hr : %x
silent flag
CHttpBase::DoGetOpertaion
[msdrm]:CHttpBase::DoGetOpertaion. If non-silent, will try other options
--------- ADFS flow silent done hr=0x%x, status=%d --------
original flags
+++++++++ ADFS flow non-silent with url %ws +++++++++
+++++++++ ADFS flow NEEDS UI ++++++++
--------- ADFS flow non-silent done hr=0x%x, status=%d --------
[msdrm]:CHttpBase::DispatchRequest returned hr:%x,ErrorCode=%d when hitting Url=%S with Post size=%d
ADFS flow: exiting. return hr:%x  HttpStatusErrorCode %d
CHttpBase::DispatchRequest
Decoding failed, try disabling the compression and retrying
     
[msdrm]:FAILED hr: %x
Initializing an HTTP request with WinHTTP url=%ws, UserAgent=%ws
Initializing an HTTP request with WinINET url=%ws, UserAgent=%ws
CHttpBase::InitializeHttpRequest
++++++++ ERROR: could not resolve the proxy: +++++++++
       Url: %ws
       hr: 0x%x
++++++++ ERROR: could not open an internet handle hr=0x%x +++++++++
token_type=acs
++++++++ ERROR: could not connect to the server: +++++++++
       Server: %ws
       hr: 0x%x
HTTP/1.0
++++++++ ERROR: could not disable redirects option on a request hr=0x%x ++++++++
++++++++ ERROR: could open a request: +++++++++
       Server: %ws
       ObjectPath: %ws
       hr: 0x%x
[msdrm]:FAILED AddRequestHeaders: Not able to disable Basic over non-ssl channel 0x%x
++++++++ ERROR: could not set the status callback +++++++++
       hr: 0x%x
Content-Length: 
CHttpBase::SendRequest
++++++++ ERROR No proxy settings are available hr = 0x%x +++++++++
+++++++++ Send Request Failed with status=%d +++++++
+++++++ Sending Request post size=%d +++++++
+++++++++ WARNING: Querying http status code failed. hr=0x%x +++++++
+++++++++ Receive Request Failed with status=%d +++++++
+++++++++ WARNING: Querying redirect location failed. hr=0x%x +++++++
------ Sending Request done. HTTP Status code = %d ------
+++++++ WARNING Can't get a valid token - tried %u times. +++++++
++++++++++ WARNING Got status access denied (not an authentication failure). ++++++++
------- Cred prompt returned: status = %d -------
+++++++ Cred prompt +++++++
+++++++ WARNING NEED UI. +++++++
[msipc]:CHttpBase::SendRequest InternetErrorDlg with status code 0x%x
+++++++ WARNING Can't authenticate with smart card. +++++++
+++++++ WARNING can't prompt for creds with WinHTTP. NEED UI. +++++++
+++++++ NEED UI. +++++++
+++++++ Cred prompt for smart card scenario +++++++
[msipc]:CHttpBase::SendRequest The WinHttpSendRequest() failed with %d, but there is another proxy setting to try with.
[msipc]:-CHttpBase::SendRequest Entered unhandled case (m_dwStatusCode= %d)
++++++++++ WARNING Could not connect. ++++++++
++++++++++ WARNING Setting next proxy settings failed with 0x%x. ++++++++
++++++++++ WARNING Got status forbidden, assuming couldn't authenticate with the client cert. ++++++++
++++++++++ WARNING Revocation check failed ++++++++
Getting the response failed with hr=0x%x
[msipp]:-CHttpBase::SendRequest hr = 0x%x
[msdrm]:Response Url=%S
CHttpBase::CheckResponseBodyForContent
CheckforMaxNumber(dwLength)
CHttpBase::GetResponse
CheckAdd(dwReceived, dwBytesRead)
CheckMultiply(dwReceived, 100)
CHttpBase::GetResponseBody
Getting the response body failed with hr=0x%x
https://
?whr=
CHttpBase::GetAlternateUrl
FederationHomeRealm registry key is detected:
       FederationHomeRealm value: %ws
       BrowserEnabled: %ws
We have the ADFS alternate url cached for this url:
       Original Url: %ws
       Alternate Url: %ws
No federation home realm
Our cache indicates that this url is resolvable and therefore does not use ADFS.
Our cache indicates that this url does not use ADFS.
[msdrm]:ADFS Url for the Url = %S is %S
(0 == _wcslwr_s(wszObjectPath, cchObjectPath + 1))
Our cache indicates that %ws server is not resolvable
[msdrm]:ADFS Url is too large to be logged
++++++++++ Dummy http GET call to see if the %ws url is resolvable. ++++++++++
CHttpBase::ResolveUrlWithGET
[msdrm]:Caching ServerNotResolvable Url is too large to be logged
[msdrm]:Caching ServerNotResolvable Url=%S
[msdrm]:Caching Resolvable UrL is too large to be logged
[msdrm]:Caching Resolvable Url=%S
----------- Dummy GET call done hr=0x%x. ---------
[msipc]IsSmartcardAuthNeeded: From cache, Smart Card Auth is needed
[msipc]IsSmartcardAuthNeeded: Checking for Url: %S
[msipc]IsSmartcardAuthNeeded: Making a Get call to check if Smartcard Auth is needed.
[msipc]IsSmartcardAuthNeeded: From cache, Smart Card Auth is not needed
[msipc]IsSmartcardAuthNeeded: Smart Card Auth is not needed
[msipc]IsSmartcardAuthNeeded: Smart Card Auth is needed
[msipc]:-CHttpBase::SendRequest Token Couldn't handle Error Code 0x%x. hr = 0x%x
[msdrm]:+CHttpBase::LetTokenHandleTheError
AddHttpHeader(wstrRequestIdHeader.c_str())
[msdrm]:-CHttpBase::LetTokenHandleTheError hr = 0x%x
CHttpBase::AddDiagnosticIdsToHeader
Correlation-Id/Request-Id: %ws
Scenario-Id: %ws
AddHttpHeader(wstrScenarioIdHeader.c_str())
[msipc]:CHttpBase::AddDiagnosticIdsToHeader hr = 0x%x
[msipc]: Scenario-Id is not available
HRESULT_FROM_WIN32(os::IpcOsGetLastError())
wszHeader
invalid map/set<T> iterator
[msipc]:CHttpBase::AddHttpHeader hr = 0x%x
map/set<T> too long
rmsoscenarioid: 
rmsocorrelationid: 
Content-Type: application/x-www-form-urlencoded
msipc
IIpcTokenException
[msdrm]:CloseHttpHandle FAILED hr: %x
SymmetricKeyTokenNotUsingWinHttpException
onecoreuap\ds\security\rm\client\src\msipc\http\SymmetricKeyToken.h
SymmetricKeyTokenIncorrectSizeException
Authorization: Bearer 
{     "aud":"AADRM.COM",     "iss":"MSIPC",     "nbf":%I64d,     "exp":%I64d,     "api":"%ws",     "tid":"%ws",     "mcn":"%ws" } 
eyJ0eXAiOiJKV1QiLCJhbGciOiJTaGEyNTYifQ==
onecoreuap\ds\security\rm\client\src\msipc\http\symmetrickeytoken.cpp
g_fGlobalOptionUseWinhttp
(IPCP_TOKEN_TYPE_SYMMETRIC_KEY == pcToken->dwType)
pcToken->pcvTokenData
fCheckTokenSize
CRMSOServerVerification::ValidateRMSOSSLRequest(hRequest)
hRequest
pcSymmetricKey
os::IpcOsStringCchPrintf( &wszJwtToken[0], cchJwtToken, g_wstrJwtTokenFmt.c_str(), stTimeInSecSince1970, endTimeInSecSince1970, m_wstrAppPrincipalId.c_str(), m_wstrBposTenantId.c_str(), wstrMachineName.c_str())
pcSymmetricKey->wszAppPrincipalId
pcSymmetricKey->wszBase64Key
os::IpcOsGetMachineName(&wszMachineName)
pcSymmetricKey->wszBposTenantId
os::IpcOsGetHMACSHA256(m_pbSymmKey, m_cbSymmKey, const_cast<PBYTE>(&vbData[0]), SafeInt<int>(vbData.size()), &pbHash, &cbHash)
[msipc]: IIpcToken::Create Unknown Token type
[msipc]: IIpcToken::ValidateToken Unknown Token type
onecoreuap\ds\security\rm\client\src\msipc\http\iipctoken.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\serverinfocache.cpp
(pcConnInfo->wszIntranetUrl || pcConnInfo->wszExtranetUrl)
pcConnInfo
[msipp]:ServerInfoCache::GetServerInfo GetServerInfo Extranet Url hr=0x%x
[msipp]:ServerInfoCache::GetServerInfo GetServerInfo Intranet Url hr=0x%x
onecoreuap\ds\security\rm\client\src\msipc\http\networkconnectivity.cpp
pNetworkListManager.CoCreateInstance(CLSID_NetworkListManager)
pNetworkListManager->get_IsConnectedToInternet(&bIsConnectedToInternet)
pNetworkListManager->get_IsConnected(&bIsConnected)
Microsoft::InformationProtection::GetNetworkConnectivityInfo
Network connectivity: local - %ws, internet - %ws
Error while trying to get the network connectivity info - hr=0x%x. Will assume it is connected.
onecoreuap\ds\security\rm\client\src\msipc\http\networkconnectivity.cpp
r;msipc
[msipc]:IpcTokenCache::GetCachedToken Using Cached Token
[msipc]:IpcTokenCache::GetCachedToken Adding new token to cache
[msipc]:IpcTokenCache::GetCachedToken Creating a new IIpcToken
X509TokenIncorrectSizeException
X509TokenNotUsingWinHttpException
(IPCP_TOKEN_TYPE_X509 == pcToken->dwType)
onecoreuap\ds\security\rm\client\src\msipc\http\X509Token.h
onecoreuap\ds\security\rm\client\src\msipc\http\x509token.cpp
onecoreuap\ds\security\rm\client\src\msipc\http\winhttpproxywrapper.cpp
wszUrl
g_pfnWinHttpQueryOption(hWinHttpRequest, dwWINHTTP_OPTION_SECURITY_FLAGS, &dwSecurityFlags, &cbSecurityFlags)
+[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps
+[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps Not using https
onecoreuap\ds\security\rm\client\src\msipc\http\rmsoserververification.cpp
-[msipc]:CRMSOServerVerification::CheckRMSOUrlIsHttps hr = 0x%x
hr = HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
CheckRMSOUrlIsHttps(hWinHttpRequest)
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest Microsoft root is required, but the server SSL cert validation failed.
+[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest server SSL cert validation failed, but we don't require Microsoft rooted cert since NoValidation regkey is set and it is not the Production RMSO.
+[msipc]:CRMSOServerVerification::CheckSSLCert
-[msipc]:CRMSOServerVerification::ValidateRMSOSSLRequest hr = 0x%x
+[msipc]:CRMSOServerVerification::GetSSLCert
-[msipc]:CRMSOServerVerification::CheckSSLCert hr = 0x%x
+[msipc]:CRMSOServerVerification::CheckCertEKU
-[msipc]:CRMSOServerVerification::GetSSLCert hr = 0x%x
+[msipc]:CRMSOServerVerification::CheckCertEKU: Dogfood EKU found
+[msipc]:CRMSOServerVerification::CheckCertEKU: Production EKU found
-[msipc]:CRMSOServerVerification::CheckCertEKU hr = 0x%x
+[msipc]:CRMSOServerVerification::CheckCertEKU: Int EKU found
1.3.6.1.4.1.311.76.7.1
1.3.6.1.4.1.311.76.7.2
1.3.6.1.4.1.311.76.7.3
OrgIdIdcrlTokenException
Authorization: MSOID 
onecoreuap\ds\security\rm\client\src\msipc\http\OrgIdIdcrlToken.h
onecoreuap\ds\security\rm\client\src\msipc\http\orgididcrltoken.cpp
(IPCP_TOKEN_TYPE_IDCRL == pcToken->dwType)
fCheck
onecoreuap\ds\security\rm\client\src\msipc\http\windowstoken.cpp
OAuth2TokenException
onecoreuap\ds\security\rm\client\src\msipc\http\oauth2token.cpp
(IPCP_TOKEN_TYPE_OAUTH2 == pcToken->dwType)
(sizeof(IPC_OAUTH2_CALLBACK_INFO_WITH_TOKEN) == pcCallbackInfo->cbSize) || (sizeof(IPC_OAUTH2_CALLBACK_INFO) == pcCallbackInfo->cbSize)
(sizeof(IPC_OAUTH2_CALLBACK_INFO) <= pcToken->cbTokenData)
HTTP_STATUS_DENIED == dwStatusCode
Didn't get a 401 challenge.
IServerInfoNotSupportedException
IServerInfoException
ServerInfoUnSupportedAuthTypeException
ServerInfoInvalidUrlException
!(ipp::IIpcContext::IsOfflineMode(pIpcContext) && bForceDownload)
onecoreuap\ds\security\rm\client\src\msipc\http\serverinfo.cpp
.asmx
drmSoap.SetServerMethod(g_wszPUB_ServerService, g_wszSI_GetServerInfo)
drmSoap.SetServerInfo(wstrServerInfoUrl.c_str(), ipp::IIpcContext::IsSilentMode(pIpcContext) ? HTTP_NO_UI : 0)
drmSoap.CreateRequest( g_wszSI_GetServerInfo, g_wszSI_GetServerInfoRequests, g_wszPUB_ServerServiceNamespace, 1)
drmSoap.SetIpcContext(pIpcContext)
[msipc]:ServerInfo::checkAndSetSecondUrlRegPath Also setting ServerInfo for %ws
wszHostName
wszUrl = CDRMSoapRequest::GetAttributeValue(pServiceLocation, g_wszSI_SLTypeUrl)
pServiceLocation = CDRMSoapRequest::GetElementWithAttributeValue( pServiceLocations, g_wszSI_ServiceLocation, g_wszSI_ServiceLocationType, wszServiceName)
_wmcs
[msipc]:ServerInfoImpl::loadAuthTypesFromRegistry AuthInfo not available
AuthType not supported by server
[msipc]:ServerInfoImpl::GetUrlForAuthType: %ws AuthType not supported by server
(wstring::npos != iAsmxPos)
[msipc]:ServerInfoImpl::GetUrlForAuthType Unknown VRoot type url: %ws
(wstring::npos != iWstrPos)
_ultow_s(dwLangId, wszLangId, MAX_ULONG_STR_LENGTH, 10)
os::IpcOsGetUserPerferredLocale(&dwLangId)
drmSoap.AddStructParameter(g_wszSI_ServerInfoRequest, 1)
[msipc]:ServerInfoImpl::getServerInfoFromServer: Getting Server Info From server
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_ServerFeatureInfo)
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_VersionInfo)
[msipc]:ServerInfoImpl::getServerInfoFromServer  FaultCode = %S , FaultCorrelationId = %S , FaultString = %S 
drmSoap.AddParameter( g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, SOAP_DATA_TYPE_STRING, dwRequestIndex, g_wszSI_ServiceLocations)
(!(E_SOAP_FAULT_RESPONSE == hr))
[msipc]:ServerInfoImpl::getServerInfoFromServer  FaultCode = %S , FaultString = %S 
pSIRVersionInfo = CDRMSoapRequest::GetElementWithAttributeValue( pResultsEle, g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, g_wszSI_VersionInfo)
pResultsEle = drmSoap.GetElement(g_wszSI_Results, 0)
wszVersion = CDRMSoapRequest::GetAttributeValue(pVersionInfo, g_wszSI_Version)
pVersionInfo = CDRMSoapRequest::GetElement(pSIRVersionInfo, g_wszSI_VersionInfo, 0)
[msipc]:ServerInfoImpl::processResponse: Missing ServerType. Setting to Enterprise
[msipc]:ServerInfoImpl::processResponse: Online Server
pServerFeatureInfo = CDRMSoapRequest::GetElement(pSIRServerFeatureInfo, g_wszSI_ServerFeatureInfo, 0)
pSIRServerFeatureInfo = CDRMSoapRequest::GetElementWithAttributeValue( pResultsEle, g_wszSI_ServerInfoRequest, g_wszSI_ServerInfoRequestType, g_wszSI_ServerFeatureInfo)
Microsoft::InformationProtection::ServerInfoImpl::processResponse
[msipc]:ServerInfoImpl::processResponse: Processing IssuanceLicenseV2
onecoreuap\ds\security\rm\client\src\msipc\http\serverinfo.cpp
[msipc]:ServerInfoImpl::processResponse: Processing AuthTypes
[msipc]:ServerInfoImpl::processResponse: Missing IssuanceLicenseV2
wszName = CDRMSoapRequest::GetAttributeValue(pAuthType, g_wszSI_Name)
[msipc]:ServerInfoImpl::processResponse: Missing AuthTypes
pAuthTypeLicensing = CDRMSoapRequest::GetElement(pAuthType, g_wszSI_AuthTypeLicensing, 0)
pAuthTypeCertification = CDRMSoapRequest::GetElement(pAuthType, g_wszSI_AuthTypeCertification, 0)
wszVdir = CDRMSoapRequest::GetValue(pAuthTypeVDir)
pAuthTypeVDir = CDRMSoapRequest::GetElement(pAuthTypeVRoot, g_wszSI_Vdir, 0)
wszRBValue = CDRMSoapRequest::GetValue(pAuthTypeRequiresBrowser)
wszRRValue = CDRMSoapRequest::GetValue(pAuthTypeRequiresRedirect)
wszValue = CDRMSoapRequest::GetValue(pQueryString)
wszName = CDRMSoapRequest::GetName(pQueryString)
os::IpcOsRegSetValueEx(m_hKey, pszValueName, 0, nType, (PBYTE)pszValue, cbValue)
Failure writing to registry value '%ws'.
msipc
Microsoft::InformationProtection::ProxyResolver::ProxyResolver
+ProxyResolver::ProxyResolver
winhttp.dll
onecoreuap\ds\security\rm\client\src\msipc\http\winhttpproxy.cpp
WinHttpFreeProxyResult
WinHttpGetProxyForUrlEx
WinHttpGetProxyResult
WinHttpCreateProxyResolver
-ProxyResolver::ProxyResolver
Using the extended WinHttp APIs for the resolving proxy.
Microsoft::InformationProtection::ProxyResolver::SetNextProxySettingEx
+ProxyResolver::SetNextProxySettingEx
Setting WinHttp proxy: direct=%ws, bypass=%ws, scheme=%d, proxy=%ws, port=%d
Setting WinHttp proxy: type=%d, proxy=%ws, bypass=%ws
+ProxyResolver::SetNextProxySetting
-ProxyResolver::SetNextProxySettingEx hr=0x%x
-ProxyResolver::SetNextProxySetting hr=0x%x
Microsoft::InformationProtection::ProxyResolver::SetNextProxySetting
Microsoft::InformationProtection::ProxyResolver::GetProxyCallBack
+ProxyResolver::GetProxyCallBack dwInternetStatus = %d
ProxyResolver::GetProxyCallBack quitting dwResult=%d
ProxyResolver::GetProxyCallBack ignoring the status.
ProxyResolver::GetProxyCallBack Success
ProxyResolver::GetProxyCallBack Failed with hr=0x%x
+ProxyResolver::GetProxyForUrlEx
-ProxyResolver::GetProxyCallBack
-ProxyResolver::GetProxyForUrlEx hr=0x%x
Microsoft::InformationProtection::ProxyResolver::GetProxyForUrlEx
Microsoft::InformationProtection::ProxyResolver::GetProxyForAutoSettings
+ProxyResolver::GetProxyForAutoSettings
ProxyResolver::ResolveProxy
-ProxyResolver::GetProxyForAutoSettings hr=0x%x
ProxyResolver already Initialized
Microsoft::InformationProtection::ProxyResolver::ResolveProxy
ProxyResolver::ResolveProxy WinHttp proxy configuration: AutoDetect=%ws, AutoConfigUrl=%ws, Proxy=%ws, Bypass=%ws
ProxyResolver: WinHttpGetIEProxyConfigForCurrentUser Failed : %d
ProxyResolved: Autoproxy with Autoconfig Url
ProxyResolved: AutoDetecting
ProxyResolver::ResolveProxy hr=0x%x
ProxyResolved: Using Static Proxy setting
msipc
WindowsUsernameAndPasswordTokenException
(IPCP_TOKEN_TYPE_WINDOWS == pcToken->dwType)
onecoreuap\ds\security\rm\client\src\msipc\http\windowsusernameandpasswordtoken.cpp
pcWinCreds->pwszUserName
pcToken->cbTokenData == sizeof(PCIPCP_WINDOWS_CREDENTIALS)
[msipc]:+WindowsUsernameAndPasswordToken::SetHeader Found URL in NTLM Cache.                   Setting Auth Scheme to NTLM
[msipc]:+WindowsUsernameAndPasswordToken Created
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError
m_pfnHttpSetWindowsCredentialsCallback( hRequest, dwStatusCode, hParentWindow, fSilent, hCancelEvent, m_pvAppData)
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Server already supports Auth Scheme.                                                                                         Credentials might be wrong
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Suppoerted Schemes = %d,                                                                                     First Scheme = %d, Target = %d
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Server doesn't support either                                                           WINHTTP_AUTH_SCHEME_NEGOTIATE or WINHTTP_AUTH_SCHEME_NTLM
HRESULT_FROM_WIN32(ERROR_NOT_AUTHENTICATED)
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Using NTLM Scheme
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError updating Auth Target from %d to %d
[msipc]:+WindowsUsernameAndPasswordToken::HandleCredsError Using NEGOTIATE Scheme
onecoreuap\ds\security\rm\client\src\msipc\http\LoggedOnUserToken.h
LoggedOnUserTokenException
0 == pcToken->cbTokenData
onecoreuap\ds\security\rm\client\src\msipc\http\loggedonusertoken.cpp
[msipc]:+LoggedOnUserToken Created
NULL == pcToken->pcvTokenData
resource
Bearer 
[msipc] ParseChallengeHeader: 401 challenge didn't return a resouce, trying the realm instead
realm
(NULL != spwstrResource) && !spwstrResource->empty()
Invalid challenge returned by the server.
[msipc] ParseChallengeHeader: Parsed the challenge successfully:
onecoreuap\ds\security\rm\client\src\msipc\http\bearerchallengeparser.cpp
[msipc] QueryWWWAuthenticateHeader: Got a %d from the server.
g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_FLAG_NUMBER | dwWINHTTP_QUERY_STATUS_CODE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, &dwStatusCode, &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
ERROR_INSUFFICIENT_BUFFER == dwError
!g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_WWW_AUTHENTICATE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, pvWINHTTP_NO_OUTPUT_BUFFER, &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
g_pfnWinHttpQueryHeaders( hRequest, dwWINHTTP_QUERY_WWW_AUTHENTICATE, g_wszWINHTTP_HEADER_NAME_BY_INDEX, &header[0], &cbQueryBufferLength, lpdwWINHTTP_NO_HEADER_INDEX)
0 == cbQueryBufferLength%sizeof(wchar_t)
Authorization:
onecoreuap\ds\security\rm\client\src\msipc\common\cipherinfo.cpp
ipp::IppUtil::CheckStructVersion(pCipherInfo->cbSize, sizeof(IPC_CIPHER_INFO))
pCipherInfo
ipp::IppUtil::CheckCipherMode(pCipherInfo->dwCipherMode)
ipp::IppUtil::CheckSymmetricAlgorithmAndKeySize(pCipherInfo->wszAlgorithm, pCipherInfo->dwKeySize)
ipp::IppUtil::CheckIV( pCipherInfo->pbIV, pCipherInfo->cbIV, pCipherInfo->dwCipherMode, pCipherInfo->wszAlgorithm, pCipherInfo->dwKeySize)
ipp::IppUtil::CheckPaddingMode(pCipherInfo->dwPaddingMode)
pcbBuffer
[msipc]:IppTerm::Check An invalid term is specified. The duration is less than 1 minute. 
[msipc]:IppTerm::Check An invalid term is specified. The term is NULL.
onecoreuap\ds\security\rm\client\src\msipc\common\ippterm.cpp
os::IpcOsSystemTimeToFileTime(&stStart, &ftStart)
os::IpcOsSystemTimeToFileTime(&stEnd, &ftEnd)
onecoreuap\ds\security\rm\client\src\msipc\common\ippacl.cpp
os::IpcOsStringCchCopy(wszBuffer, cchCharsInBuffer, iter->userId.c_str())
IppUtil::CheckAce(&pAcl->rgUserRights[static_cast<DWORD>(i)])
os::IpcOsStringCchCopy(*wszBuffer, cchCharsInBuffer, propIter->second.c_str())
os::IpcOsStringCchCopy(wszBuffer, cchCharsInBuffer, rightsIter->c_str())
os::IpcOsFileTimeAsSystemTime( static_cast<const IPCOS_FILETIME *>(&(pTerm->ftStart)), &stStart )
wszUserId
E_DRM_RIGHT_NOT_SET
os::IpcOsFileTimeAsSystemTime( &ftEnd, &stEnd )
[msipp]:IppAcl::WriteToLicense Adding full permissions to owner
Internal
[msipp]:IppAcl::WriteToLicense Some rights have already been specified for owner. So not adding full permissions to owner.
pNameValueList
_LCID_
IppUtil::CheckNameValue(&pNameValueList->aNameValuePairs[static_cast<DWORD>(i)])
onecoreuap\ds\security\rm\client\src\msipc\common\namevalue.cpp
os::IpcOsStringCchCopy(pszOut, cchRemaining, pNameValueIn->wszName)
os::IpcOsStringCchLength(pNameValueIn->wszName, IPC_OS_MAX_CCH, &cch)
os::IpcOsStringCchCopy(pszOut, cchRemaining, pNameValueIn->wszValue)
os::IpcOsStringCchLength(pNameValueIn->wszValue, IPC_OS_MAX_CCH, &cch)
os::IpcOsStringCchCopy(wsz, cch, wstrName.c_str())
IppUtil::CheckBuffer(cbRequiredStructs + cbRequiredStrings, pvBuffer, pcbBuffer)
[msipp]:LicenseNameValue::WriteToLicense Skipping NOLICCACHE App data
os::IpcOsStringCchCopy(wsz, cch, wszValue)
(0 == _itow_s(lcid, wsz, ARRAYSIZE(wsz), 10))
[msipp]:LicenseNameValue::WriteToLicense Adding NOLICCACHE because IntervalTime is set to 0
os::IpcOsStringCchCopy(wszNameCopy, cchNameCopy, wszName)
os::IpcOsStringCchLength(wszName, IPC_OS_MAX_CCH, &cchNameCopy)
/-----------------------------------------------------------------------
 exited with return code 
 Public API called: 
\-----------------------------------------------------------------------
 Public API 
IPC_HANDLE: 
IPC_LICENSE_HANDLE: 
IPC_KEY_HANDLE: 
PCIPC_CONNECTION_INFO
IPC_LICENSE_METADATA_HANDLE: 
wszIntranetUrl: 
wszExtranetUrl: 
cbSize:       
PCIPC_PROMPT_CTX
dwFlags:      
hwndParent:   
-->pcCredential:
hCancelEvent: 
IPC_CREDENTIAL_TYPE_X509
PCIPC_CREDENTIAL
pcCertContext: 
dwType:        
pcSymmetricKey: 
IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY
pcOAuth2: 
IPC_CREDENTIAL_TYPE_OAUTH2
ERROR -- UNKNOWN TYPE: 
dwType:    
PCIPC_USER
PCIPC_TEMPLATE_ISSUER
wszID:     
wszDisplayName:    
-->connectionInfo:
PCIPCP_TOKEN
fAllowFromScratch: 
pcvTokenData: 
dwType:       
cbTokenData:  
0x%08X
onecoreuap\ds\security\rm\client\src\msipc\common\traceutil.cpp
Microsoft::InformationProtection::TraceUtil::Trace
[msipp]: Most Recently Used UserIdentity Cache with size %d is enabled.
[msipp]: Most Recently Used UserIdentity Cache is disabled.
onecoreuap\ds\security\rm\client\src\msipc\common\connectioninfo.cpp
os::IpcOsStringCchCopy(reinterpret_cast<wchar_t*>(pbOut), cchIntranetURL, pConnectionInfo->wszIntranetUrl)
os::IpcOsStringCchCopy(reinterpret_cast<wchar_t*>(pbOut), cchExtranetURL, pConnectionInfo->wszExtranetUrl)
ipp::IppUtil::CheckURL(pConnectionInfo->wszIntranetUrl)
ipp::ConnectionInfo::Check(pConnectionInfo)
pConnectionInfo->wszExtranetUrl != 0 || pConnectionInfo->wszIntranetUrl != 0
ipp::IppUtil::CheckURL(pConnectionInfo->wszExtranetUrl)
AES_CBC4K
AES_CBC512NOPAD
symmetric-key-size
symmetric-key-type
E_DRM_ABORTED
DRMENCODINGTYPE_STRING == eType
cbBuffer % sizeof (wchar_t) == 0
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYTYPE, &eType, &cbBuffer, 0)
onecoreuap\ds\security\rm\client\src\msipc\common\drmutil.cpp
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYSIZE, &eType, &cbBuffer, 0)
DRMENCODINGTYPE_UINT == eType
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYTYPE, &eType, &cbBuffer, reinterpret_cast<BYTE*>(static_cast<wchar_t*>(wszKeyType)))
Unknown key type: %s
Unknown key size
CDRMCPub::DRMGetUserRights(hLicense, hUser, i, &hRight)
cbBuffer % sizeof (UINT) == 0
CDRMtoSP::DRMGetInfo( hEnablingBits, g_wszQUERY_SYMMETRICKEYSIZE, &eType, &cbBuffer, reinterpret_cast<BYTE*>(&puKeySize))
Unrecognized user type
wszName
ANYONE
Unrecognized internal user ID
Passport
Unspecified
wszUserIdType
wszNameType
Unsupported user type
CDRMCPub::DRMSetNameAndDescription( hLicense, TRUE, lc, NULL, NULL)
Federation
wszIdType
&amp;
EscapeXML(wszIn, &escaped[0], &cchEscapedSize)
EscapeXML(wszIn, NULL, &cchEscapedSize)
onecoreuap\ds\security\rm\client\src\msipc\drmxrml\xmlenc.cpp
[msdrm]:+DRMConstructCertificateChain
[msdrm]:-DRMConstructCertificateChain HR=%x
</XrML>
<XrML
[msdrm]:+DRMDeconstructCertificateChain iWhich = %d
[msdrm]:-DRMDeconstructCertificateChain HR=%x
<?xml version="1.0"?>
CERTIFICATE
CERTIFICATECHAIN
onecoreuap\ds\security\rm\client\src\msipc\Licenses\IPLLicense.h
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\cjsonpllicense.cpp
!IsTemplate()
IsSigned()
wszPL
!data.empty()
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\IJsonObject.h
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\IJsonObject.h
Failed to parse JSON string : %d Offset: %u
Microsoft::InformationProtection::JsonLicenses::IJsonObject::Deserialize
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::AddSerializableData
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\publishinglicense.cpp
Required element has empty value : %ws
Parent element is not an object
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\publishinglicense.cpp
Value element has empty value : %ws
!m_wstrOrgPayload.empty()
Microsoft::InformationProtection::JsonLicenses::PublishingLicense::FinalizePayload
Parent element is empty when querying member : %ws
Required element not found : %ws
U1(\Q
~)p$w
11eU%
uuuuuuuubtnufruuuuuuuuuuuuuuuuuu
0123456789ABCDEF
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899<
9Y>)F$
raB3G
[*QmU
mr"iR
-sSO\
X5AHx
Z~$|7
s\ax}?
tC7Ddx
eax~Z
ekhHD
k*do^
:V!2m
STv/N
xg^Jp5|
{zel#|67
msipc
invalid stoul argument
stoul argument out of range
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\rsakey.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\rsakey.cpp
Microsoft::InformationProtection::JsonLicenses::RSAKey::AddSerializableData
HRESULT_FROM_WIN32(ERROR_INVALID_DATA)
m_pKeyBlob->InitRSAPublic(m_uPubExponent, SafeInt<UINT>(BYTES_TO_BITS(vbPubKey.size())), &vbPubKey[0])
Microsoft::InformationProtection::JsonLicenses::RSAKey::DeserializeFromObject
Invalid element type : %ws
msipc
Both Extranet URL and Intranet URLs can't be null in Issuer
Microsoft::InformationProtection::JsonLicenses::Issuer::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Issuer::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuer.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuer.cpp
fname
msipc
Microsoft::InformationProtection::JsonLicenses::Signature::AddSerializableData
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\signature.cpp
utf-8
utf-16
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\signature.cpp
Microsoft::InformationProtection::JsonLicenses::Signature::DeserializeFromObject
sha256
msipc
Microsoft::InformationProtection::JsonLicenses::UserCertPublicData::AddSerializableData
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertpublicdata.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertpublicdata.cpp
Microsoft::InformationProtection::JsonLicenses::UserCertPublicData::DeserializeFromObject
issto
msipc
Microsoft::InformationProtection::JsonLicenses::IssuedTo::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::IssuedTo::DeserializeFromObject
Public Key doesn't have required members.
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuedto.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\issuedto.cpp
fname
msipc
Microsoft::InformationProtection::JsonLicenses::Header::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Header::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\header.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\header.cpp
msipc
Microsoft::InformationProtection::JsonLicenses::License::AddSerializableData
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\license.cpp
IppUtil::DecipherTime(wstrIssuedDate.c_str(), &m_creationDate)
IppUtil::DecipherTime(wstrValidUntil.c_str(), &m_validUntil)
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\license.cpp
Microsoft::InformationProtection::JsonLicenses::License::DeserializeFromObject
Expecting an Object element but value is not an Object : %ws
expecting name value pairs to be strings : %ws
msipc
Both TemplateId and CustomPolicy cannot be specified
Microsoft::InformationProtection::JsonLicenses::Policy::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::Policy::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\policy.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\policy.cpp
msipc
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\contentkey.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\contentkey.cpp
Microsoft::InformationProtection::JsonLicenses::ContentKey::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::ContentKey::DeserializeFromObject
msipc
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\sessionkey.cpp
Microsoft::InformationProtection::JsonLicenses::SessionKey::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::SessionKey::AddSerializableData
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\sessionkey.cpp
msipc
wszUser
Microsoft::InformationProtection::JsonLicenses::CustomPolicy::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\custompolicy.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\UserRights.h
wszRight
Element not found : %ws
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\custompolicy.cpp
Expecting an Array element but value is not an Array : %ws
usrts
msipc
Microsoft::InformationProtection::JsonLicenses::UserRights::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\userrights.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\userrights.cpp
Expecting a string element but value is not string : %ws
msipc
hr=os::IpcOsStringCchLength(wszPrimaryKeyIn, IPC_OS_MAX_CCH, &cchPrimaryKeyIn)
hr=os::IpcOsStringCchLength(wszSecKeyIn, IPC_OS_MAX_CCH, &cchSecKeyIn)
onecoreuap\ds\security\rm\client\src\msipc\store\drmstore.cpp
hr = os::IpcOsStringCchLength(wszDirectory, IPC_OS_MAX_CCH, &cchDirectory)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, g_wszLS_FileNameKeyDelimitter)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszFilePath, uLen, wszDirectory)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, wszPrimaryKeyIn)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, L".xml")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, wszSecKeyIn)
[msipc]: FAILED to delete file on read error hr = %x
STORE: Add license %ws
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFilePath, uLen, L".drm")
[msipc]: Deleting unreadable file.
[msipc]: FAILED to write to file. Deleting incomplete file.
[msipc]: FAILED to delete file on error hr = %x
CDRMStore::Add
onecoreuap\ds\security\rm\client\src\msipc\store\drmstore.cpp
hr=os::IpcOsStringCchLength(FindFileData.cFileName, IPC_OS_MAX_CCH, &ccFileName)
STORE: Deleting license - %ws
STORE: Delete license - %ws
CDRMStore::Delete
hr=os::IpcOsStringCchLength(wszFileName, IPC_OS_MAX_CCH, &cchFileName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLockName, uLockNameBufferLength, m_storePath->GetPath().c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszFileName, uFileNameBufferLength, m_storePath->GetPath().c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszFileName, uFileNameBufferLength, FindFileData.cFileName)
hr = DeletePersistedLicenseNoThrow(DRM_LICENSE_TYPE_GIC, FALSE, 0, NULL, racLicense.GetLicenseId().c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszLockName, uLockNameBufferLength, wszFileName)
hr = DeletePersistedLicenseNoThrow(eType, FALSE, 0, NULL, pLicense->GetLicenseId().c_str())
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLicenseID,NULL,&wszLicenseIDMasked)
hr=os::IpcOsStringCchLength(wszLicenseIDMasked, IPC_OS_MAX_CCH, &cchLicenseIDMasked)
NULL != dynamic_cast<const ipp::IEULLicense*>(&license)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszIssuerID, NULL, &wszIssuerIDMasked)
hr=os::IpcOsStringCchLength(wszIssuerIDMasked, IPC_OS_MAX_CCH, &cchIssuerIDMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszCID,NULL,&wszCIDMasked)
hr=os::IpcOsStringCchLength(wszCIDMasked, IPC_OS_MAX_CCH, &cchCIDMasked)
hr=os::IpcOsStringCchLength(wszRACUserNameMasked, IPC_OS_MAX_CCH, &cchRACUserNameMasked)
hr = os::IpcOsMaskFileNameNotAllowedChar(pRACLicense->GetIssuerId().c_str(),NULL,&wszRACIssuerIDMasked)
hr=os::IpcOsStringCchLength(wszHostNameMasked, IPC_OS_MAX_CCH, &cchHostNameMasked)
hr=os::IpcOsStringCchLength(wszUserNameMasked, IPC_OS_MAX_CCH, &cchUserNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uTotalLength, wszPrefixToUse)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszOpenBraceChar)
hr=os::IpcOsStringCchLength(wszRACIssuerIDMasked, IPC_OS_MAX_CCH, &cchRACIssuerIDMasked)
hr=os::IpcOsStringCchLength(wszRACHostNameMasked, IPC_OS_MAX_CCH, &cchRACHostNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszLS_FileNameKeyDelimitter)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszCIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszUserNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszCloseBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszLicenseIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszLS_GIC_Prefix)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszHostNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszIssuerIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACIssuerIDMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, g_wszDefaultForUser)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACUserNameMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszRACHostNameMasked)
hr = GetLicense( eType, pwszSearchData, pbUseRawData, uSearchDataCount, fDefaultForUser, &uCount, &rgwszLicenseFileNames, &rgwszLicenses, pvpRacs ? &rgwszRacFileNames : NULL, pvpRacs ? &rgwszRacs : NULL)
[msdrm]:-CDRMStore::GetLicense type=%d hr=%x
[msdrm]: FAILED while storing the License with hr = %x
pvpLicenses
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACUserName, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACHostName, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
pwszLocalRACList = new (std::nothrow) PWSTR[*puCount]
pwszLocalRACFileNames = new (std::nothrow) PWSTR[*puCount]
CDRMStore::GetPersistedLicense
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszSearchData[i], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszRACIssuerID, uRACIdSize, wszRACIdStart, (uRACIdSize-1))
[msipc]:CDRMStore::GetPersistedLicense File Prefix to search = %ws
hr=os::IpcOsStringCchLength(pwszSearchDataMasked[i], IPC_OS_MAX_CCH, &cchSearchDataMasked)
[msipc]:CDRMStore::GetPersistedLicense Raw Search Data = %ws Masked Data = %ws
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(pwszSearchDataMasked[i], strLen + 1, pwszSearchData[i])
hr = os::IpcOsMaskFileNameNotAllowedChar(pwszSearchData[i],NULL,&pwszSearchDataMasked[i])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszWildCardAsteriskChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, pwszSearchDataMasked[i])
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uPrimaryKeyBufferLength, wszPrefixToUse)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszWildCardAsteriskChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszDefaultForUser)
STORE: Query license - %ws
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszOpenBraceChar)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, g_wszCloseBraceChar)
Not able to read data from file hr=%x
Not able to find any valid files matching the search criteria
CDRMStore::GetFileNamesAndData
STORE: Found license - %ws
(NULL == wszLicenseId)
hr = CheckMultiply(uCountSearchData,sizeof(PWSTR))
[msipp]:-CDRMStore::GetFileNamesAndData hr=%x
DRM_LICENSE_TYPE_UNMANAGED_TEMPLATE != eType
hr = CheckAdd(uPrimaryKeyBufferLength,uTemp)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLicenseId,NULL,&wszLicenseIdMasked)
hr = CheckAdd(uPrimaryKeyBufferLength,uSearchDataLength)
hr = CheckAdd(uPrimaryKeyBufferLength, uTemp)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uPrimaryKeyBufferLength, wszLicenseIdMasked)
hr=os::IpcOsStringCchLength(wszLicenseIdMasked, IPC_OS_MAX_CCH, &cchLicenseIdMasked)
hr = CheckAdd(uPrimaryKeyBufferLength,1)
hr=os::IpcOsStringCchLength(localHostName, IPC_OS_MAX_CCH, &clocalHostName)
hr=os::IpcOsStringCchCopy(wszTempToken, uTempTokenLength, localHostName)
hr=os::IpcOsStringCchLength(wszUrl, IPC_OS_MAX_CCH, &cchUrl)
hr=os::IpcOsStringCchCopy(wszLocalUrl, wszUrlLength, wszUrl)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszLocalHashValue,NULL,&wszMaskedHashValue)
pwszStringArray = new PWSTR[uCount]
hr = CBase64::UDBinToBase64W( cHash, pbHash, &cHashValue, NULL)
hr = CBase64::UDBinToBase64W( cHash, pbHash, &cHashValue, wszLocalHashValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszSecurityDescriptor, lenSD, pwszSDTemplate, wszUserID)
hr = os::IpcOsStringCchLength(wszTemplateHash, IPC_OS_MAX_CCH, &cchHash)
wszString = new WCHAR[static_cast<size_t>(cchString)]
os::IpcOsStringCchCopy(wszString, cchString, (*i).c_str())
hr = os::IpcOsMaskFileNameNotAllowedChar(wszTemplateGuid,NULL,&wszTemplateGuidMasked)
hr = os::IpcOsStringCchLength(wszServerPubKeyDigestMaskedHash, IPC_OS_MAX_CCH, &cchServerPubKeyDigestMaskedHash)
hr = os::IpcOsStringCchLength(wszTemplate, IPC_OS_MAX_CCH, &cchData)
hr = os::IpcOsMaskFileNameNotAllowedChar(wszTemplateHash,NULL,&wszTemplateHashMasked)
hr = os::IpcOsStringCchLength(wszUserIdMaskedHash, IPC_OS_MAX_CCH, &cchUserIdMaskedHash)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszPrimaryKey, uTotalLength, g_wszLS_TEMPLATE_Prefix)
hr = os::IpcOsStringCchLength(wszTemplateHashMasked, IPC_OS_MAX_CCH, &cchTemplateHashMasked)
hr = os::IpcOsStringCchLength(wszTemplateGuidMasked, IPC_OS_MAX_CCH, &cchTemplateGuidMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszTemplateGuidMasked)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszUserIdMaskedHash)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszServerPubKeyDigestMaskedHash)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszPrimaryKey, uTotalLength, wszTemplateHashMasked)
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_handle.h
-Default
msipc
onecoreuap\ds\security\rm\client\src\msipc\drmmain\udmgrldr.cpp
[msdrm]:+DRMSetGlobalOptions eGlobalOptions = DRMGLOBALOPTIONS_USE_SERVERSECURITYPROCESSOR
[msdrm]:+DRMSetGlobalOptions eGlobalOptions = DRMGLOBALOPTIONS_USE_WINHTTP
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcbase.cpp
pwszArrayLocal = new (std::nothrow) PWSTR[cArray]
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcint.h
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(wszToDup, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLocal, strLen + 1, wszToDup)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszToDup[cCount], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszTemp, strLen + 1, pwszToDup[cCount])
hr = CBase64::UDBinToBase64W( uDataLen, pbDataToEncode, &uBase64DataLen, NULL)
hr = CBase64::UDBinToBase64W( uDataLen, pbDataToEncode, &uBase64DataLen, wszEncodedString)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszMaxUINT, strLen, L"%d", uValue)
hr = os::IpcOsCoCreateGuid(&guid)
hr = CheckAdd(uCount,m_ulInitialCount)
hr = CBase64::UDBase64ToBinW(uDataLen, wszEncodedString, &uDecodedDataLen, NULL)
hr = CBase64::UDBase64ToBinW(uDataLen, wszEncodedString, &uDecodedDataLen, pbData)
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_refcount.h
onecoreuap\ds\security\rm\client\src\msipc\drmobjects\drmcbase.h
GetActualIndex(hSession,&uActualIndex)
hr = GetActualIndex(hSession,&uActualIndex)
UDStdPlg Enabling Principal
block-size
IpcSPCloseHandle
[msdrm]:-DRMCloseHandle HR=0x%x
[msdrm]:+DRMCloseHandle
[msdrm]:+DRMCreateBoundLicense 
Created the enabling principal
[msdrm]:+DRMCloseEnvironmentHandle
[msdrm]:-DRMCloseEnvironmentHandle HR=0x%x
IpcSPBindLicense
[msdrm]:-DRMCreateBoundLicense HR=0x%x
IpcSPCreateEnablingPrincipal
Using existing enabling principal
[msdrm]:-DRMCreateEnablingBitsDecryptor HR=0x%x
[msdrm]:+DRMCreateEnablingBitsEncryptor
[msdrm]:+DRMCreateEnablingBitsDecryptor
IpcSPCreateDecryptor
[msdrm]:+DRMCreateEnablingPrincipal
[msdrm]:-DRMCreateEnablingPrincipal HR=0x%x
IpcSPCreateEncryptor
[msdrm]:-DRMCreateEnablingBitsEncryptor HR=0x%x
[msdrm]:-DRMDecrypt HR=0x%x
[msdrm]:+DRMDecryptWithRac
[msdrm]:+DRMDecrypt
IpcSPDecrypt
[msdrm]:+DRMDuplicateHandle
[msdrm]:-DRMDuplicateHandle HR=0x%x
IpcSPDecryptWithRac
[msdrm]:-DRMDecryptWithRac HR=0x%x
[msdrm]:+DRMEncrypt
IpcSPEncrypt
IpcSPGetInfo
[msdrm]:-DRMGetInfo HR=0x%x
[msdrm]:-DRMEncrypt HR=0x%x
[msdrm]:+DRMGetInfo attribute = %S
[msdrm]:+DRMInitEnvironment 
IpcSPGetCurrentTime
[msdrm]:IpcSPCreateSecurityProcessor took %d milliseconds
[msdrm]:Environment Handle Creation took %d milliseconds
IpcSPCreateSecurityProcessor
[msdrm]:IpcSPCreateSecurityProcessor failed with HR=0x%x
[msdrm]:+DRMSignWB
IpcSPSign
[msdrm]:-DRMInitEnvironment HR=0x%x
IpcSPInitialize
IpcSPEnableAndEncrypt
[msdrm]:-DRMEnableAndEncrypt HR=0x%x
[msdrm]:-DRMSignWB HR=0x%x
[msdrm]:+DRMEnableAndEncrypt
[msdrm]:-DRMCreateEnablingBitsSigner HR=0x%x
[msdrm]:+_DRMDecryptECB
[msdrm]:+DRMCreateEnablingBitsSigner
IpcSPAttest
IpcSPCreateMachineCerts
[msdrm]:+RMGetBoundRightKey
[msdrm]:-_DRMDecryptECB HR=0x%x
IpcSPIsActivated
IpcSPGetBoundRightKey
[msdrm]:-RMGetBoundRightKey HR=0x%x
!(dwFlags & ~(IPC_DCIL_SKIP_RIGHTS_CHECK | DRM_ISSUANCELICENSE_V2))
([msdrm]:Referral Info Name=%ls, Referral Info URL=%ls, Rights Template=%ls)
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpub.cpp
[msdrm]:+DRMCreateIssuanceLicense
+DRMCreateUser (username=%ls, userID=%ls, userIdType=%ls)
+DRMSetUserProperties
[msdrm]:CreateHandle FAILED : %x
[msdrm]:CreateEvents FAILED : %x
+DRMAddRightWithUser
+DRMClearAllRights
+DRMCreateRight (right=%ls, # of ExtendedInfo =%d)
hr = CXmlenc::EscapeXML(wszRightName,&wszRightNameInt)
+DRMSetMetaData (Content ID=%ls, Content ID Type=%ls, SKU ID=%ls, SKU ID Type=%ls, Content Type=%ls, Content Name=%ls
hr=os::IpcOsStringCchLength(wszContentId, MAX_CIDSKUID_LENGTH, &cchContentId)
hr = CXmlenc::EscapeXML(wszContentIdType,&wszContentIdTypeInt)
hr = CXmlenc::EscapeXML(wszSKUId,&wszSKUIdInt)
hr = CXmlenc::EscapeXML(wszContentId,&wszContentIdInt)
hr = CXmlenc::EscapeXML(wszContentName,&wszContentNameInt)
+DRMSetApplicationSpecificData Args: Name=%S, Value=%S
hr = CXmlenc::EscapeXML(wszSKUIdType,&wszSKUIdTypeInt)
hr = CXmlenc::EscapeXML(wszContentType,&wszContentTypeInt)
CDRMCPub::DRMSetLicenseMetadataNotEncrypted
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpub.cpp
+DRMSetApplicationSpecificDataNotEncrypted Args: Name=%S, Value=%S
+DRMSetLicenseMetadatNotEncrypted Args: Name=%S, Value=%S
[msdrm]:GetIssuanceLicensePointer FAILED : %x
+DRMGetUserInfo
+DRMGetIssuanceLicenseTemplate
[msdrm]:+DRMGetSignedIssuanceLicense
-DRMGetRightInfo
+DRMGetUsers
-DRMGetUserInfo
+DRMGetRightInfo
-DRMGetUserRights HR=%x
+DRMGetApplicationSpecificData
-DRMGetUsers HR=%x
+DRMGetUserRights
-GetApplicationSpecificDataNotEncrypted HR=%x
CDRMCPub::DRMGetLicenseMetadataNotEncrypted
-DRMGetApplicationSpecificData HR=%x
+DRMGetApplicationSpecificDataNotEncrypted
hIssuanceLicense
-DRMGetLicenseId hr = 0x%x
+DRMGetIssuanceLicenseInfo
+DRMGetLicenseId
+DRMSetNameAndDescription Args: Name=%S, Description=%S
-DRMSetNameAndDescription HR=%x
+DRMGetNameAndDescription
-DRMGetNameAndDescription HR=%x
+DRMSetIntervalTime
-DRMSetIntervalTime HR=%x
+DRMResetValidityTime
-DRMResetValidityTime HR=%x
msipc
MS-GUID
CXmlenc::UnescapeXML(m_wszRightName,&wszOut,&uRightNameLength)
wszOut
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpubimp.cpp
<PARAMETER name="%s"><VALUE encoding="string">%s</VALUE></PARAMETER>
hr=os::IpcOsStringCchLength(m_pwszExtendedInfoName[i], IPC_OS_MAX_CCH, &cchExtendedInfoName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszExtendedInfoXML + static_cast<size_t>(uExtendedInfoXMLLength), uExtendedInfoDataLength - uExtendedInfoXMLLength, wszExtendedInfoXMLTemplate, m_pwszExtendedInfoName[i], m_pwszExtendedInfoValue[i])
<TIME><INTERVALTIME days="%d" /></TIME>
hr=os::IpcOsStringCchLength(m_pwszExtendedInfoValue[i], IPC_OS_MAX_CCH, &cchExtendedInfoValue)
hr=os::IpcOsStringCchLength(wszExtendedInfoXML, IPC_OS_MAX_CCH, &uExtendedInfoXMLLength)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszValidityTimeXML, uValidityTimeXMLTemplateLength, wszValidityTimeXMLTemplate, m_stFrom.wYear, m_stFrom.wMonth, m_stFrom.wDay, m_stFrom.wHour, m_stFrom.wMinute, m_stUntil.wYear, m_stUntil.wMonth, m_stUntil.wDay, m_stUntil.wHour, m_stUntil.wMinute)
<CONDITIONLIST><ACCESS>%s</ACCESS>%s%s</CONDITIONLIST>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIntervalTimeXML, uIntervalTimeXMLTemplateLength, wszIntervalTimeXMLTemplate, m_cIntervalTime)
<TIME><RANGETIME><FROM>%04d-%02d-%02dT%02d:%02d</FROM><UNTIL>%04d-%02d-%02dT%02d:%02d</UNTIL></RANGETIME></TIME>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszConditionListXML), uConditionListXMLTemplateLength, wszConditionListXMLTemplate, static_cast<WCHAR *>(wszUsersXML), static_cast<WCHAR *>(wszTimeXML) ? static_cast<WCHAR *>(wszTimeXML) : L"", static_cast<WCHAR *>(wszIntervalTimeXML) ? static_cast<WCHAR *>(wszIntervalTimeXML) : L"")
<RIGHT name = "%s">%s%s</RIGHT>
hr=os::IpcOsStringCchLength(wszUsersXML, IPC_OS_MAX_CCH, &cchUsersXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsersXML + static_cast<UINT>(uCurrentBufferOffset), uUserXMLLength - uCurrentBufferOffset, wszUserXMLLocal)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uRightXMLTemplateLength, wszRightXMLTemplate, m_wszRightName, wszExtendedInfoXML ? wszExtendedInfoXML : L"", wszConditionListXML ? wszConditionListXML : L"")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uRightXMLTemplateLength, wszRightXMLTemplate, m_wszRightName, wszExtendedInfoXML ? wszExtendedInfoXML : L"", wszConditionListXML ? wszConditionListXML : L"", m_wszRightName)
<%s>%s%s</%s>
hr=os::IpcOsStringCchLength(m_wszRightName, IPC_OS_MAX_CCH, &cchRightName)
hr=os::IpcOsStringCchLength(m_wszUserIdType, IPC_OS_MAX_CCH, &cchUserIdType)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserName, *puUserNameLength, m_wszUserName)
hr=os::IpcOsStringCchLength(m_wszUserName, IPC_OS_MAX_CCH, &cchUserName)
hr=os::IpcOsStringCchLength(m_wszUserId, IPC_OS_MAX_CCH, &cchUserId)
<PRINCIPAL><OBJECT><ID type="%s">%s</ID><NAME>%s</NAME>%s</OBJECT></PRINCIPAL>
<PRINCIPAL><OBJECT><ID type="%s" /><NAME>%s</NAME>%s</OBJECT></PRINCIPAL>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserId, *puUserIdLength, m_wszUserId)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUserIdType, *puUserIdTypeLength, m_wszUserIdType)
hr = CXmlenc::EscapeXML(m_wszUserId, &wszEscapedUserId)
hr = CXmlenc::EscapeXML(m_wszUserIdType, &wszEscapedUserIdType)
<PRINCIPAL><OBJECT><ID type="%s">%s</ID>%s</OBJECT></PRINCIPAL>
hr = CXmlenc::EscapeXML(m_wszUserName, &wszEscapedUserName)
hr = CXmlenc::EscapeXML(iter->second.c_str(), &wszEscapedStr)
hr=os::IpcOsStringCchLength(wszEscapedUserId, IPC_OS_MAX_CCH, &cchEscapedUserId)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate1, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserId), static_cast<const WCHAR *>(wszEscapedUserName), wstrUserPropXml.c_str())
hr=os::IpcOsStringCchLength(wszEscapedUserIdType, IPC_OS_MAX_CCH, &cchEscapedUserIdType)
hr=os::IpcOsStringCchLength(wszEscapedUserName, IPC_OS_MAX_CCH, &cchEscapedUserName)
<OBJECT><ID type="" /></OBJECT>
<OBJECT%s><ID type="%s">%s</ID>%s</OBJECT>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate2, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserName), wstrUserPropXml.c_str())
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszXML), uXMLLength, wszUserXMLTemplate3, static_cast<const WCHAR *>(wszEscapedUserIdType) ? static_cast<const WCHAR *>(wszEscapedUserIdType) : static_cast<const WCHAR *>(wszUserIdTypeUnSpecified), static_cast<const WCHAR *>(wszEscapedUserId), wstrUserPropXml.c_str())
<SKU type="%s">%s</SKU>
<METADATA>%s%s</METADATA>
 type="%s"
<NAME>%s</NAME>
hr=os::IpcOsStringCchLength(m_wszContentId, IPC_OS_MAX_CCH, &cchContentId)
hr = os::IpcOsStringCchLength(m_wszContentIdType == NULL ? L"MS-GUID" : m_wszContentIdType, IPC_OS_MAX_CCH, &cchContentIdType)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(wszCIDXMLEmpty, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszCIDSKUIDXML, strLen + 1, wszCIDXMLEmpty)
hr=os::IpcOsStringCchLength(m_wszSKUId, IPC_OS_MAX_CCH, &cchSKUId)
hr=os::IpcOsStringCchLength(m_wszSKUIdType, IPC_OS_MAX_CCH, &cchSKUIdType)
hr=os::IpcOsStringCchLength(m_wszContentType, IPC_OS_MAX_CCH, &cchContentType)
hr=os::IpcOsStringCchLength(m_wszContentName, IPC_OS_MAX_CCH, &cchContentName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszContentNameXMLData, uLength, wszContentNameXML, m_wszContentName)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCIDSKUIDXML, uXMLLength, wszCIDXML, m_wszContentType ? wszObjTypeXMLData : L"", m_wszContentIdType ? m_wszContentIdType : L"MS-GUID", m_wszContentId, wszContentNameXMLData ? wszContentNameXMLData : L"")
hr=os::IpcOsStringCchLength(m_wszOwnerXML, IPC_OS_MAX_CCH, &cchOwnerXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszObjTypeXMLData, uLength, wszObjTypeXML, m_wszContentType)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCIDSKUIDXML + static_cast<size_t>(uLength), SafeInt<size_t>(uXMLLength) - uLength, wszMetaDataXML, m_wszOwnerXML ? m_wszOwnerXML : L"", wszSKUIDXMLData ? wszSKUIDXMLData : L"")
<POLICY><OBJECT><ID type="filename">%s</ID><VERSIONSPAN min="%s" max="%s" /></OBJECT></POLICY>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszSKUIDXMLData, uLength, wszSKUIDXML, m_wszSKUIdType, m_wszSKUId)
hr=os::IpcOsStringCchLength(wszCIDSKUIDXML, IPC_OS_MAX_CCH, &cchCIDSKUIDXML)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszMaxVersion, IPC_OS_MAX_CCH, &cchMaxVersion)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPolicyByNameXMLTemplate, m_VersionInfo.m_wszName, m_VersionInfo.m_wszMinVersion, m_VersionInfo.m_wszMaxVersion)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszName, IPC_OS_MAX_CCH, &cchName)
hr=os::IpcOsStringCchLength(m_VersionInfo.m_wszMinVersion, IPC_OS_MAX_CCH, &cchMinVersion)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPubKeyXMLTemplate, uDecodedDataLen, m_wszPublicKey)
<POLICY><DIGEST><ALGORITHM>%s</ALGORITHM><VALUE encoding="base64" size="%d">%s</VALUE></DIGEST></POLICY>
<POLICY><PUBLICKEY><ALGORITHM>RSA</ALGORITHM><PARAMETER name="public-exponent"><VALUE encoding="integer32">65537</VALUE></PARAMETER><PARAMETER name="modulus"><VALUE encoding="base64" size="%d">%s</VALUE></PARAMETER></PUBLICKEY></POLICY>
hr=os::IpcOsStringCchLength(m_wszPublicKey, IPC_OS_MAX_CCH, &cchPublicKey)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszPolicyByDigestXMLTemplate, m_DigestInfo.m_wszDigestAlgorithm, m_DigestInfo.m_cbDigest, static_cast<WCHAR *>(wszDigest))
<CONDITION name="OS-Exclusion" type="versionspan">%s-%s</CONDITION>
hr=os::IpcOsStringCchLength(m_DigestInfo.m_wszDigestAlgorithm, IPC_OS_MAX_CCH, &cchDigestAlgorithm)
hr=os::IpcOsStringCchLength(wszDigest, IPC_OS_MAX_CCH, &cchDigest)
phDecryptor
DRMCreateEnablingBitsDecryptor for Any Rights FAILED : %x
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszXML, uXMLLength, wszOSExclusionXMLTemplate, m_VersionInfo.m_wszMinVersion, m_VersionInfo.m_wszMaxVersion ? m_VersionInfo.m_wszMaxVersion : m_VersionInfo.m_wszMinVersion)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCancelEventName, uCancelEventNameBufferLength, g_wszPUB_SignCancelEventName, GetCurrentProcessId(), hIssuanceLicense)
DRMCreateEnablingBitsDecryptor for VIEWRIGHTSDATA FAILED : %x
DRMCreateEnablingBitsDecryptor for EDITRIGHTSDATA FAILED : %x
CIssuanceLicense::GetDecryptor
onecoreuap\ds\security\rm\client\src\msipc\publishing\drmcpubimp.cpp
ParseSignedIssuanceLicense ...
Base64 Decoding ...
Parsing owner ...
CIssuanceLicense::ParseLicense
hr = CXmlenc::EscapeXML(wszReferralInfoName, &wszReferralInfoNameInt)
hr = CXmlenc::EscapeXML(wszReferralInfoURL, &wszReferralInfoURLInt)
DRMDecrypt FAILED : %x
ParseIssuanceLicenseTemplate ...
[msdrm]:DRMGetSignedIssuanceLicense Args: SymKeyType=%S
ISSUE
Intializing License ...
[msdrm]:CheckAndSetArguments FAILED : %x
[msdrm]:DRMSign FAILED  : %x 
[msdrm]:GetSignatureXML FAILED : %x 
<BODY
</BODY>
[msdrm]:signed issuance license size (%d) exceeds limit (%d) : %x 
hr = os::IpcOsStringCchLength(wszLicense, IPC_OS_MAX_CCH, &uLicenselength)
[msdrm]:pIssuanceLicense->GetSignatureXML FAILED  : %x 
hr = os::IpcOsStringCchLength(wszIssuanceLicenseData, IPC_OS_MAX_CCH, &uILDataLengthInWchars)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszLicenseTemp + static_cast<size_t>(uLicenselength), ulength - uLicenselength, L"%s%s", static_cast<WCHAR *>(wszEULSignature), L"</XrML>")
hr = os::IpcOsStringCchLength(wszEULSignature, IPC_OS_MAX_CCH, &uLicenseSignaturelength)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicenseTemp, ulength, wszLicense)
hr = CXmlenc::EscapeXML(pCNameValue->GetName(), NULL ,&cGetName)
hr = CXmlenc::EscapeXML(pCNameValue->GetValue(), NULL ,&cGetValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicenseTemp + static_cast<size_t>(uLicenselength), ulength - uLicenseTempLength, pCCLCPubData->m_wstrCLC.c_str())
<AUTHENTICATEDDATA id="%s" name="%s">%s</AUTHENTICATEDDATA>
hr = CXmlenc::EscapeXML(pCNameValue->GetValue(), &wstrValue[0] ,&cGetValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszApplicationSpecificDataXML + static_cast<size_t> (uXMLLength), SafeInt<size_t>(uApplicationSpecificDataXMLTemplateLen) - uXMLLength, wszApplicationSpecificDataXMLTemplate, wszId, wstrName.c_str(), wstrValue.c_str())
hr=os::IpcOsStringCchLength(wszApplicationSpecificDataXML, IPC_OS_MAX_CCH, &uXMLLength)
hr = CXmlenc::EscapeXML(pCNameValue->GetName(), &wstrName[0] ,&cGetName)
hr=os::IpcOsStringCchLength(pCNameValue->GetName(), IPC_OS_MAX_CCH, &cGetName)
hr=os::IpcOsStringCchLength(pCNameValue->GetValue(), IPC_OS_MAX_CCH, &cGetValue)
<DESCRIPTOR><OBJECT><ID type="MS-GUID">%s</ID><NAME>%s</NAME></OBJECT></DESCRIPTOR>
LCID %d:NAME %s:DESCRIPTION %s;
hr=os::IpcOsStringCchLength(wszNameAndDescriptionXML, IPC_OS_MAX_CCH, &cchNameAndDescriptionXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszNameAndDescriptionXML + static_cast<UINT>(uXMLLength), uNameAndDescriptionXMLTemplateLen - uXMLLength, wszNameAndDescriptionXMLTemplate, pCNameValue->GetData(), pCNameValue->GetName(), pCNameValue->GetValue())
hr=os::IpcOsStringCchLength(wszGUID, IPC_OS_MAX_CCH, &cchGUID)
hr=os::IpcOsStringCchLength(m_wszDescriptorId, IPC_OS_MAX_CCH, &cchDescriptorId)
<POLICYLIST type="inclusion">%s</POLICYLIST>
hr=os::IpcOsStringCchLength(wszUsagePolicyExclusionXML, IPC_OS_MAX_CCH, &cchUsagePolicyExclusionXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszDescriptorXML, static_cast<UINT>(uDescriptorXMLLen), wszDescriptorXMLTemplate, m_wszDescriptorId ? m_wszDescriptorId : static_cast<WCHAR *>(wszGUID), static_cast<WCHAR *>(wszNameAndDescriptionXML))
<POLICYLIST type="exclusion">%s</POLICYLIST>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsagePolicyInclusionXML + static_cast<UINT>(uCurrentBufferOffset), uUsagePolicyInclusionXMLLength - uCurrentBufferOffset, wszXMLData)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszUsagePolicyXML), static_cast<UINT>(uUsagePolicyXMLLength), wszUsagePolicyExclusionXMLTemplate, static_cast<WCHAR *>(wszUsagePolicyExclusionXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszUsagePolicyExclusionXML + static_cast<UINT>(uCurrentBufferOffset), uUsagePolicyExclusionXMLLength - uCurrentBufferOffset, wszXMLData)
hr=os::IpcOsStringCchLength(wszUsagePolicyInclusionXML, IPC_OS_MAX_CCH, &cchUsagePolicyInclusionXML)
<RIGHTSGROUP name="Main-Rights"><RIGHTSLIST>%s</RIGHTSLIST></RIGHTSGROUP>
hr=os::IpcOsStringCchLength(wszRightsXML, IPC_OS_MAX_CCH, &cchRightsXML)
hr=os::IpcOsStringCchLength(wszUsagePolicyXML, IPC_OS_MAX_CCH, &cchUsagePolicyXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszUsagePolicyXML + static_cast<UINT>(uUsagePolicyExclusionXMLLength), static_cast<UINT>(uUsagePolicyXMLLength - uUsagePolicyExclusionXMLLength), wszUsagePolicyInclusionXMLTemplate, static_cast<WCHAR *>(wszUsagePolicyInclusionXML))
<XrML version="1.2" xmlns=""><BODY type="Microsoft Rights Template" version="3.0">%s%s%s%s%s<WORK>%s%s%s</WORK>%s%s%s</BODY></XrML>
<?xml version="1.0"?><XrML version="1.2" xmlns=""><BODY type="Microsoft Rights Label" version="3.0">%s%s%s%s%s<WORK>%s%s%s</WORK>%s%s%s%s</BODY></XrML>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszRightsXML + static_cast<UINT>(uCurrentBufferOffset), uRightXMLLength - uCurrentBufferOffset, wszRight)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast< WCHAR *>(wszRightsGroupXML), static_cast<UINT>(uRightsGroupXMLLength), wszRightsGroupXMLTemplate, static_cast<const WCHAR *>(wszRightsXML))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseTemplate, *puIssuanceLicenseTemplateLength, wszRightsTemplateXMLLocal)
Microsoft Rights Label
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseTemplate, *puIssuanceLicenseTemplateLength, m_wszSignedIssuanceLicenseTemplate)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszRightsTemplateXMLLocal, uRLTemplateLength, wszRLTemplate, m_wszIssuedTimeXML ? m_wszIssuedTimeXML : L"", m_wszValidityTimeXML ? m_wszValidityTimeXML : L"", m_wszNameAndDescriptionXML ? m_wszNameAndDescriptionXML : L"", wszIssuerXRML ? wszIssuerXRML : L"", m_wszReferralInfoXML ? m_wszReferralInfoXML : L"", m_wszMetaDataXML ? m_wszMetaDataXML : L"", m_wszRefreshConditionXML ? m_wszRefreshConditionXML : L"", ((uFlag == 0x01) && m_wszRightsDataXML) ? m_wszRightsDataXML : L"", wszEncryptedRightsXML ? wszEncryptedRightsXML : L"", m_wszUsagePolicyXML ? m_wszUsagePolicyXML : L"", wszAppSpecificData ? wszAppSpecificData : L"", wszLicenseMetadata ? wszLicenseMetadata : L"")
hr=os::IpcOsStringCchLength(m_wszSignedIssuanceLicenseTemplate, IPC_OS_MAX_CCH, &cchSignedIssuanceLicenseTemplate)
{81C42010-208A-458A-BAB6-C3C60F06DD5F}
Microsoft Rights Template
Microsoft Official Rights Template
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><NAME>%s</NAME></OBJECT></DISTRIBUTIONPOINT>
hr=os::IpcOsStringCchLength(m_wszReferralInfoName, IPC_OS_MAX_CCH, &cchReferralInfoName)
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><NAME>%s</NAME><ADDRESS type="URL">%s</ADDRESS></OBJECT></DISTRIBUTIONPOINT>
<DISTRIBUTIONPOINT><OBJECT type="%s"><ID type="MS-GUID">%s</ID><ADDRESS type="URL">%s</ADDRESS></OBJECT></DISTRIBUTIONPOINT>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate2, wszDistPointType, wszGUID, m_wszReferralInfoURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate3, wszDistPointType, wszGUID, m_wszReferralInfoName)
hr=os::IpcOsStringCchLength(m_wszReferralInfoURL, IPC_OS_MAX_CCH, &cchReferralInfoURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszReferralInfoXML, uReferralInfoXMLLength, wszDistPointXMLTemplate1, wszDistPointType, wszGUID, m_wszReferralInfoName, m_wszReferralInfoURL)
<ISSUEDTIME>%04d-%02d-%02dT%02d:%02d</ISSUEDTIME>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIssuedTimeXML, uIssuedTimeXMLLength, wszIssuedTimeXMLTemplate, systime.wYear, systime.wMonth, systime.wDay, systime.wHour, systime.wMinute)
<VALIDITYTIME><FROM>%04d-%02d-%02dT%02d:%02d</FROM><UNTIL>%04d-%02d-%02dT%02d:%02d</UNTIL></VALIDITYTIME>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszValidityTimeXML, uValidityTimeXMLLength, wszValidityTimeXMLTemplate, m_stTimeFrom.wYear, m_stTimeFrom.wMonth, m_stTimeFrom.wDay, m_stTimeFrom.wHour, m_stTimeFrom.wMinute, m_stTimeUntil.wYear, m_stTimeUntil.wMonth, m_stTimeUntil.wDay, m_stTimeUntil.wHour, m_stTimeUntil.wMinute)
<AUTHENTICATEDDATA id="Encrypted-Rights-Data">%s</AUTHENTICATEDDATA>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszEncryptedRightsXML, uEncryptedRightsXMLLength, wszEncryptedRightsXMLTemplate, wszRightsData)
Extranet URL of the original PL is %ws
CIssuanceLicense::ParseSignedIssuanceLicense
<OBJECT
</PRINCIPAL>
<ENABLINGBITS type="%s"><VALUE encoding="base64" size="%d">%s</VALUE></ENABLINGBITS>
hr=os::IpcOsStringCchLength(wszIssuanceLicenseTemplate, IPC_OS_MAX_CCH, &cchIssuanceLicenseTemplate)
hr=os::IpcOsStringCchLength(wszIssuerXML, IPC_OS_MAX_CCH, &cchIssuerXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszObjTagLocation, wszPrincipalEndTagLocation - wszObjTagLocation)
<ISSUER>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML, uIssuerLen, L"<ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, L"</ISSUER>")
hr= DRMtoSPObj.DRMEnableAndEncrypt( hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, NULL,&cbEnablingBits)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszVersionXML)
</ISSUER>
hr = DRMtoSPObj.DRMEnableAndEncrypt( hEnv, UDCRYPTO_CIPHER_AES | UDCRYPTO_CIPHERMODE_ECB, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), pbEncrypedData,cbAlignedRightsDataLen, pbEnablingBitsTmp,&cbEnablingBitsTmp)
hr=os::IpcOsStringCchLength(pdrmCryptoVersion->wszSealedKeyType, IPC_OS_MAX_CCH, &cchSealedKeyType)
hr = DRMtoSPObj.DRMEnableAndEncrypt( hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, pbEnablingBits,&cbEnablingBits)
hr= DRMtoSPObj.DRMEnableAndEncrypt( hEnv, UDCRYPTO_CIPHER_AES | UDCRYPTO_CIPHERMODE_ECB, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulus,cModulus, (const PBYTE)(wszIssuerXML.get()),SafeInt<UINT>(uIssuerCurrentLen)*sizeof(WCHAR), NULL,0, NULL,&cbEnablingBitsTmp)
hr=os::IpcOsStringCchLength(wszEnablingBitsXML, IPC_OS_MAX_CCH, &cchEnablingBitsXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszLicAcqDistPointXML)
hr=os::IpcOsStringCchLength(wszEnablingBitsBase64data, IPC_OS_MAX_CCH, &cchEnablingBitsBase64data)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszEnablingBitsXML), uEnablingBitsXMLLength, wszEnablingBitsXMLTemplate, pdrmCryptoVersion->wszSealedKeyType, (m_uFlags & 0x02) ? (static_cast<UINT>(cbEnablingBits)*8) : cBits, static_cast<WCHAR *>(wszEnablingBitsBase64data))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXMLFull, uIssuerXMLBufferLength, wszIssuerXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszIssuerXMLFull, uIssuerXMLBufferLength, wszActualIssuedPrincipalXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML + static_cast<size_t>(uIssuerCurrentLen), uIssuerLen - uIssuerCurrentLen, wszExtLicAcqDistPointXML)
hr=os::IpcOsStringCchLength(wszActualIssuedPrincipalXML, IPC_OS_MAX_CCH, &cchActualIssuedPrincipalXML)
hr=os::IpcOsStringCchLength(pCNameValue->GetValue(), IPC_OS_MAX_CCH, &uValueLength)
pCNameValue->GetName()
AppSpecificData Name = %S, Value = %S
hr=os::IpcOsStringCchLength(pCNameValue->GetName(), IPC_OS_MAX_CCH, &uNameLength)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszValue, *puValueLength, pCNameValue->GetValue())
os::IpcOsSystemTimeToFileTime(&st, &ft)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszName, *puNameLength, pCNameValue->GetName())
pCNameValue->GetValue()
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszReferralInfoName, *puReferralInfoNameLength, wszTempName)
hr = os::IpcOsStringCchLength(wszTempURL, IPC_OS_MAX_CCH, &cchReferralInfoURLLength)
os::IpcOsFileTimeToSystemTime(&ftAdded, &stAdded)
hr = os::IpcOsStringCchLength(wszTempName, IPC_OS_MAX_CCH, &cchReferralInfoNameLength)
wszNameOut
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszName, *puNameLength, wszNameOut)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszReferralInfoURL, *puReferralInfoURLLength, wszTempURL)
hr = CXmlenc::UnescapeXML(pCNameValue->GetName(),&wszNameOut,&uNameLength)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszDescription, *puDescriptionLength, wszDescriptionOut)
m_pbOfficialTemplateIssuerPubKey = new (std::nothrow) BYTE[m_cbOfficialTemplateIssuerPubKey]
hr = CXmlenc::UnescapeXML(pCNameValue->GetValue(),&wszDescriptionOut,&uDescriptionLength)
wszDescriptionOut
m_pCRACPubData = new (std::nothrow) CRACPubData()
m_pCCLCPubData = new (std::nothrow) CCLCPubData()
CXmlenc::EscapeXML(vNameAndDescriptionItems[i].wstrName.c_str(),&wszEscapedName)
CXmlenc::EscapeXML(vNameAndDescriptionItems[i].wstrDescription.c_str(),&wszEscapedDesc)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp, uTotalLength, wszIL)
hr=os::IpcOsStringCchLength(wszIssuanceLicenseDataTemp, IPC_OS_MAX_CCH, &cchIssuanceLicenseDataTemp)
hr=os::IpcOsStringCchLength(wszIL, IPC_OS_MAX_CCH, &cchIL)
hr=os::IpcOsStringCchLength(wszSignature, IPC_OS_MAX_CCH, &cchSignature)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulength), uTotalLength - ulength, m_pCCLCPubData->m_wszLicensorCertLeafNodeStart, m_pCCLCPubData->m_wszLicensorCertLeafNodeEnd-m_pCCLCPubData->m_wszLicensorCertLeafNodeStart+wcslen(L"</XrML>"))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszILXml, static_cast<UINT>(uTotalLength), wszIssuanceLicenseDataTemp)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulSignatureOffset), uTotalLength - ulSignatureOffset, wszSignature)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuanceLicenseDataTemp + static_cast<UINT>(ulength), uTotalLength - ulength, L"</XrML>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(m_pCCLCPubData->m_wstrIssuedPrincipalXML.c_str(), IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerXML, strLen + 1, m_pCCLCPubData->m_wstrIssuedPrincipalXML.c_str())
<XrML version="1.2" xmlns="" purpose="Content-License"><BODY type="LICENSE" version="3.0">%s%s%s<ISSUER>%s</ISSUER><ISSUEDPRINCIPALS>%s</ISSUEDPRINCIPALS>%s<WORK>%s<RIGHTSGROUP name="Main-Rights"><RIGHTSLIST><RIGHT name = "OWNER"><ACCESS>%s</ACCESS></RIGHT></RIGHTSLIST></RIGHTSGROUP></WORK>%s</BODY>
<PRINCIPAL internal-id="1"><ENABLINGBITS type="%s"><VALUE encoding="base64" size="%d">%s</VALUE></ENABLINGBITS></PRINCIPAL>
hr=os::IpcOsStringCchLength(wszIssuerObjectTagStart, IPC_OS_MAX_CCH, &cchIssuerObjectTagStart)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData + (UINT)cIssuerData, uIssuerDataBufferLength - cIssuerData, L"</ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData, uIssuerDataBufferLength, L"<ISSUER>")
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszIssuerData + (UINT)cIssuerData, uIssuerDataBufferLength - cIssuerData, wszIssuerObjectTagStart)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszLicense), static_cast<UINT>(uLicenseLength), wszLicenseTemplate, m_wszIssuedTimeXML ? m_wszIssuedTimeXML : L"", L"", static_cast<WCHAR *>(wszDescriptor), wszIssuerObjectTagStart, wszGICIssuedPrincipal, m_wszReferralInfoXML ? m_wszReferralInfoXML : L"", m_wszMetaDataXML, static_cast<WCHAR *>(wszEnablingBitsXML), m_wszAppSpecificDataXML ? m_wszAppSpecificDataXML : L"")
<DESCRIPTOR><OBJECT type="Content-License"><ID type="MS-GUID">%s</ID></OBJECT></DESCRIPTOR>
hr = DRMtoSPObj.DRMEnableAndEncrypt( m_hEnv, uCryptoFlags, m_pbSymKey,m_cbSymKey,RMS_SYMMETRIC_KEY_BLOCKLENGTH, cExponent,pbModulusConst,cModulus, (const PBYTE)(wszIssuerData.get()),cIssuerData*sizeof(WCHAR), NULL,0, pbEnablingBits,&cbEnablingBits)
hr=os::IpcOsStringCchLength(wszDescriptor, IPC_OS_MAX_CCH, &cchDescriptor)
<SIGNATURE><ALGORITHM>RSA PKCS#1-V1.5</ALGORITHM><DIGEST><ALGORITHM>%s</ALGORITHM><PARAMETER name="codingtype"><VALUE encoding="string">surface-coding</VALUE></PARAMETER><VALUE encoding="base64" size="%d">%s</VALUE></DIGEST><VALUE encoding="base64" size="%d">%s</VALUE></SIGNATURE>
hr=os::IpcOsStringCchLength(pdrmCryptoVersion->wszHashAlg, IPC_OS_MAX_CCH, &cchHashAlg)
hr=os::IpcOsStringCchLength(wszLID, IPC_OS_MAX_CCH, &cchLID)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszDescriptor), uDescriptorXMLLength, wszDescriptorXMLTemplate, static_cast<WCHAR *>(wszLID))
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszSignature), uSignatureXMLLength, wszSignatureTemplate, pdrmCryptoVersion->wszHashAlg, cHashed*8, static_cast<WCHAR *>(wszEULDigest), cNumOfSigBytes*8, static_cast<WCHAR *>(wszEULSigValue))
<OWNER>%s</OWNER>
hr=os::IpcOsStringCchLength(wszEULDigest, IPC_OS_MAX_CCH, &cchEULDigest)
hr=os::IpcOsStringCchLength(wszEULSigValue, IPC_OS_MAX_CCH, &cchEULSigValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszOwner, uOwnerLength, wszOwnerTemplate, wszObjectNodeStart)
<SECURITYLEVEL name="SDK" value="%s" />
<OBJECT>
</OBJECT>
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(static_cast<WCHAR *>(wszVersionXML), uXMLLength, wszVersionXMLTemplate, static_cast<WCHAR *>(wszVersion))
hr=os::IpcOsStringCchLength(wszVersionXML, IPC_OS_MAX_CCH, &cchVersionXML)
hr = os::IpcOsGetIpcPlatformVersion(&wszVersion)
hr=os::IpcOsStringCchLength(wszVersion, IPC_OS_MAX_CCH, &cchVersion)
hr=os::IpcOsStringCchLength(wszEnablingBits, IPC_OS_MAX_CCH, &cchEnablingBits)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszIssuedPrincipalXML, uIssuedPrincipalXMLLength, wszIssuedPrincipalXMLTemplate, wszPrincipalStart, wszEnablingBits)
<ISSUEDPRINCIPALS><PRINCIPAL internal-id="1">%s%s</PRINCIPAL></ISSUEDPRINCIPALS>
hr=os::IpcOsStringCchLength(wszPrincipalSource, IPC_OS_MAX_CCH, &cchPrincipalSource)
hr=os::IpcOsStringCchLength(wszOSExclusionConditionsXML, IPC_OS_MAX_CCH, &cchOSExclusionConditionsXML)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszOSExclusionConditionsXML + static_cast<UINT>(uCurrentBufferOffset), uOSExclusionXMLLength - uCurrentBufferOffset, wszOSExclusionXML)
hr= publicKey.InitRSAPublic( m_uOfficialTemplateIssuerPubKeyExponent, m_cbOfficialTemplateIssuerPubKey*8, m_pbOfficialTemplateIssuerPubKey)
<CONDITIONLIST>%s%s</CONDITIONLIST>
*pwszLicenseChain = new (std::nothrow) WCHAR[cChain]
hr = CDRMCChain::DRMConstructCertificateChain(1,const_cast<PWSTR *>(&wszLicense),&cChain,*pwszLicenseChain)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszRefreshConditionXML, uRefreshConditionXMLLength, wszRefreshConditionXMLTemplate, L"", wszOSExclusionConditionsXML ? wszOSExclusionConditionsXML : L"")
hr = CDRMCChain::DRMConstructCertificateChain(1,const_cast<PWSTR *> (&wszLicense),&cChain,NULL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszContentId, *puContentIdLength, wszContentIdOut)
m_pbModulusIssuer = new BYTE[m_cModulusIssuer]
hr = CXmlenc::UnescapeXML(m_MetaData.GetContentId(),&wszContentIdOut, &uContentIdLength)
wszContentIdOut
onecoreuap\ds\security\rm\client\src\msipc\DrmObjects\drmcbase.h
os::IpcOsStringCchLength(m_wszInternalChainStart, IPC_OS_MAX_CCH, &cchInternalChainStart)
m_pbModulusIssuedPrincipal = new BYTE[m_cModulusIssuedPrincipal]
PRINT
UNINSTALL
EMBED
EXTRACT
RESTORE
DELETE
VERIFY
FOLDER
INSTALL
RETURN
DIRECTORY
BACKUP
EDITRIGHTSDATA
TRANSFER
EXPORT
msipc
RIGHT
VIEWRIGHTSDATA
jsonClcLicense.get()
onecoreuap\ds\security\rm\client\src\msipc\publishing\jsonissuancelicense.cpp
JsonIssuanceLicense::JsonIssuanceLicense
JsonIssuanceLicense::GetSignedIssuanceLicense
JsonIssuanceLicense::SetJsonData
JsonIssuanceLicense::EncryptPayload
hr = CDRMtoSP::DRMCreateBoundLicense( hEnv, &BindParams, wszCLCChain, &hBoundLicense, NULL)
hr = DRMtoSPObj.DRMCreateEnablingBitsSigner( hBoundLicense, L"ISSUE", NULL, NULL, &hCLCSigner)
pRacPubKeyBlob->InitRSAPublic(pCRACPubData->m_cExponentIssuedPrincipal, SafeInt<UINT>(BYTES_TO_BITS(pCRACPubData->m_cModulusIssuedPrincipal)), pCRACPubData->m_pbModulusIssuedPrincipal)
JsonIssuanceLicense::SignLicense
JsonIssuanceLicense::ParseLicense
JsonIssuanceLicense::DecryptAndParseData
1.0.0.0
JsonIssuanceLicense::SetJsonUserRights
JsonIssuanceLicense::ParseOfficialPolicy
onecoreuap\ds\security\rm\client\src\msipc\publishing\jsonissuancelicense.cpp
hr = DRMtoSPObj._DRMDecryptECB( hDecryptor, 0, SafeInt<UINT>(encryptedBytes.size()), &encryptedBytes[0], &cbDecryptedData, (BYTE*)&strDecryptedData[0])
Can't find the required template. hr = 0x%x
ppcRight
JsonIssuanceLicense::ParseCustomPolicy
JsonIssuanceLicense::ParseUserRights
hr = drmStore.GetLicense(DRM_LICENSE_TYPE_JSON_CLC, wszSearchCriteria, abUseRawData, uSearchCriteriaCount, FALSE, &uCount, &rgwszLicense, NULL)
Rac's Public key doesn't match with PL creators
CDRMtoSP::DRMDecryptWithRac(hRac, SafeInt<UINT>(vEncSessionKey.size()), &vEncSessionKey[0], CRYPT_OAEP, &cbDecSessionKey, &vDecSessionKey[0])
Owner Key is not available in PL.
JsonIssuanceLicense::GenerateOwnerLicense
msipc
https://48fc04bd-c84b-44ac-91b7-a4c5eefd5ac1.rms.na.aadrm.com/_wmcs/licensing
isClcUrlMicrosoftUrl is %ws
CMicrosoftUrlHelper::GetExtranetDistributionPoint
https://exchange.microsoft.com/_wmcs/licensing
https://corprights.microsoft.com/_wmcs/licensing
Will replace external distribution point Url in license
ReplaceWithMicrosoftRMSOURL: Replacing extranet Url %ws with Microsoft RMSO Url: %ws
onecoreuap\ds\security\rm\client\src\msipc\publishing\microsofturlhelper.cpp
needToReplaceWithRMSOUrl is %ws
CMicrosoftUrlHelper::ReplaceWithMicrosoftRMSOUrl
msipc
Internal error: Unexpected error message string index
onecoreuap\ds\security\rm\client\src\base\errormanager\ipcerrormanager.cpp
wszErrStr.is_valid()
Last Error Code set is 0x%x and the error message is %ws
Internal error: Can not initialize Error Manager
os::IpcOsGetErrorMessageText(GetErrorInfo().hrErrorCode, dwLanguageId, g_hMSIPPHandle, const_cast<LPCWSTR*>(&wszErrStr))
os::IpcOsGetErrorMessageFromStringTable(HRErrorToResourceString(errInfo.hrErrorCode), static_cast<WORD>(dwLanguageId), g_hMSIPPHandle, &wszErrStr)
wszErrStr != nullptr
Microsoft::InformationProtection::IpcErrorManager::GetLastIpcError
onecoreuap\ds\security\rm\client\src\base\errormanager\ipcerrormanager.cpp
Internal error: Incorrect error message format
msipc
guest_tenantId
home_tenantId
IsRMSO Getting server info silently to check whether the Urls point to RMSO.
Microsoft::InformationProtection::GetCertAndLicURLsWithoutFallback
Got the Urls: CertURL = %ws LicURL = %ws
Microsoft::InformationProtection::ippIsRMSO
onecoreuap\ds\security\rm\client\src\msipc\core\ippuseridentity.cpp
Failed to get certification and licensing URLs using new service discovery. Falling back to using old service discovery.
os::IpcOsGetCurrentUserId( &m_wszSID )
WindowsAuthProvider
Microsoft::InformationProtection::GetCertAndLicURLsWithFallback
pRACLicense.get()
Microsoft::InformationProtection::IPPUserIdentity::SetCLC
onecoreuap\ds\security\rm\client\src\msipc\core\ippuseridentity.cpp
Microsoft::InformationProtection::IPPUserIdentity::SetRAC
This identity is not allowed for Publishing
This is the default identity
pCLCLicense.get()
No Json CLC available hr = 0x%x
Intranet Licensing redirection detected from %ws to %ws
Extranet Licensing redirection detected from %ws to %ws
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForIdentityInfo
++++++++ INFORMATION: Getting UserIdentity (RAC & CLC) for ++++++++
          User: "%ws",
          IssuerId: "%ws"
          Intranet Url: "%ws",
          Extranet Url: "%ws", 
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForUserInfo
++++++++ INFORMATION: Getting UserIdentity (RAC & CLC) for ++++++++
          User: "%ws",
          IssuerId: "%ws"
          Intranet Url: "%ws",
          Extranet Url: "%ws", 
          Default SD: %ws,
          Require New Identity: %ws
++++++++ INFORMATION: UserIdentity is successfully initialized. ++++++++
+IPPUserIdentity::InitializeIdentityForUserInfo entered
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityFromCache
+++++++++ INFORMATION: Couldn't find the UserIdentity in the cache. Getting it from the server. ++++++++
Microsoft::InformationProtection::IPPUserIdentity::InitializeIdentityForServer
[msipc]:+IPPUserIdentity::GetIdentityFromRegistryOrStore Searching using IssuerId
Microsoft::InformationProtection::IPPUserIdentity::GetIdentityFromRegistryOrStore
++++++++ INFORMATION: Successfully retrieved a new UserIdentity(RAC & CLC) from the server. ++++++++
++++++++ INFORMATION: Successfully retrieved UserIdentity (RAC & CLC) from the license store. ++++++++
--------- Unable to find the user identity information in the registry ----------
Microsoft::InformationProtection::IPPUserIdentity::GetIdentityFromRegistry
[msipc]:+IPPUserIdentity::GetIdentityFromRegistryOrStore Searching using Urls
+++++++++  Finding the user identity information in the registry cache ++++++++++
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValuesForURL
Default server in registry cache is %ws
Identity information from the registry cache
       Email: %ws
       IntranetUrl: %ws
       ExtranetUrl: %ws
Email-ID didn't match
wszServerHostName
ppIdRegValues
IDentity Email: %ws ExtUrl: %ws
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValues
BootstrapIdentityFailure
Microsoft::InformationProtection::IPPUserIdentity::GetNewIdentity
++++++++++ INFORMATION NEEDS ONLINE +++++++++
Intranet DNS redirection detected from %ws to %ws
Extranet DNS redirection detected from %ws to %ws
Microsoft::InformationProtection::IPPUserIdentity::GetNewWindowsIdentity
The default server is not set and is not configured. Setting this as a default server.
+++++++++ Storing new RAC & CLC +++++++++
--------- Done storing RAC & CLC ---------
+++++++++ Getting new RAC and CLC +++++++++
---------- Done getting new RAC and CLC ---------
Symmetric Key Token provided. Caching identity information for the token in registry.
Windows
This server/tenant is for consumption only. Not setting it as a default.
Reset the defaults as the new identity was acquired because of a license redirection.
Microsoft::InformationProtection::IPPUserIdentity::ReadIdentityRegValues
Reg key not defined (%ws)
Retrieve RAC & CLC from the store...
Microsoft::InformationProtection::IPPUserIdentity::ReadCLCAndRACFromStore
Reg value not defined (%ws)
Reg key not defined(%ws)
       UPN: %ws
Setting the default identity information for the server.
       Server Url: %ws
       Server Url from CLC: %ws
       Email from CLC: %ws
       Overwrite global default: %ws
       Overwrite defaults for server: %ws
Failed to retrieve RAC & CLC from the store hr = 0x%x.
       IsFederated: %ws
wszEmail
+SetUpnRegKeys HostName: %ws EMail: %ws UPN %ws IsFederated %ws
Microsoft::InformationProtection::IPPUserIdentity::SetDefaultsForServer
The defaults are already set. 
wszHostNameName
(wszIntUrl || wszExtUrl)
Microsoft::InformationProtection::IPPUserIdentity::SetUpnRegKeys
couldn't open key (%ws) - 0x%X
ippDupEnvHandle(m_hEnv, &(pCloneId->m_hEnv))
CDRMtoSP::DRMDuplicateHandle(m_hSpRAC, &(pCloneId->m_hSpRAC))
+SetServerIdentityRegKeysSetting HostName: %ws EMail: %ws ExtUrl %ws IntUrl %ws
Microsoft::InformationProtection::IPPUserIdentity::SetServerIdentityRegKeys
++++++++ INFORMATION: The machine cert is not found.Trying to activate the machine... ++++++++
Microsoft::InformationProtection::IPPUserIdentity::InitializeUserIdentity
CDRMtoSP::DRMDuplicateHandle(m_hSpCLC, &(pCloneId->m_hSpCLC))
IPP_MACHINE_CERT_LOCK_FOR_USER
ippGetEnvHandle(wszMachineCert, pIpcContext, &hTempEnv)
++++++++ License redirection detected. We need to renew the identity with the new redirection. ++++++++
++++++++ INFORMATION: The machine activation succeeded. ++++++++
++++++++ INFORMATION: The machine cert is not valid. Trying to reactivate the machine... ++++++++
pIdRegValues
m_pRACLicense.get()
Microsoft::InformationProtection::IPPUserIdentity::InitializeIDFromCLCAndRAC
++++++++ Initializing the UserIdentity using RAC & CLC ++++++++++
IsRMSOIdentity hr = 0x%x
Microsoft::InformationProtection::IPPUserIdentity::IsRMSOIdentity
IsExpired hr = 0x%x
Microsoft::InformationProtection::IPPUserIdentity::IsExpired
Default server is not set
IsGlobalDefaultServerSet hr = 0x%x
Default server is set
Microsoft::InformationProtection::IPPUserIdentity::IsGlobalDefaultServerSet
wszCertificationUrl from registry is NULL.
Could not get a url from the registry. hr = 0x%x
Default server is configured in the registry: %ws
Microsoft::InformationProtection::IPPUserIdentity::IsDefaultServerConfigured
Could not get a url from AD. hr = 0x%x
CleanLicenseStoreForUrls Deleting all licenses corresponding to %ws
Default server is the SCP : %ws
wszCertificationUrl from AD is NULL.
VerifyServerIsTrusted No check needed. AllowOnlyTrustedServers reg key is not set or this is RMSO (we always trust RMSO).
Microsoft::InformationProtection::IPPUserIdentity::VerifyServerIsTrusted
Microsoft::InformationProtection::IPPUserIdentity::CleanLicenseStoreForUrls
vpCLCLicenses.size() == vpRACLicenses.size()
Microsoft::InformationProtection::IPPUserIdentity::GetServerIdentityRegValuesForToken
MSIPC-Client
VerifyServerIsTrusted Looks like URLs point to an on-prem server. Verify that the given URLs are trusted.
wszServerURLExt && IppUtil::IsServerURLTrusted(wszServerURLExt) || wszServerURLInt && IppUtil::IsServerURLTrusted(wszServerURLInt)
DefaultIdentityServer
IsFederated
NeedsRenewal
Email
InternalUrl
ExternalUrl
msipc
onecoreuap\ds\security\rm\client\src\msipc\core\ippumcommon.cpp
wszUserSid
os::IpcOsStringCchCopyN(wszTempName, cchLocalName, wszLocalName.c_str(), (cchLocalName - 1))
.aadrm.com
os::IpcOsStringCchLength(wszEnding, IPC_OS_MAX_CCH, &cchEnding)
os::IpcOsStringCchLength(wszString, IPC_OS_MAX_CCH, &cchString)
.rms-bvt.testv1.com
.hostedrms.com
.aadrm.de
invalid vector<T> subscript
[msipc]:getLicensingRedirectionUrl Found Redirection Url %ws -> %ws
DRMtoSPObj.RMGetBoundRightKey( hBoundLicense, g_wszEDITRIGHTSDATARIGHT, NULL, &cbKeyBlob)
((dwFlags & IPC_SL_FLAG_REUSE_KEY) != 0) == (hBoundLicense != 0)
onecoreuap\ds\security\rm\client\src\msipc\core\secureenv.cpp
CDRMtoSP::DRMInitEnvironment(wszMachineCert, &autohEnv)
IsTestHooked()
0 != cbProvidedContentKey
0 != pbProvidedContentKey
DRMtoSPObj.RMGetBoundRightKey( hBoundLicense, g_wszEDITRIGHTSDATARIGHT, pbKeyBlob, &cbKeyBlob)
hr = CDRMtoSP::DRMCreateBoundLicense( pUserIdentity->GetEnvironmentHandle(), &BindParams, pUserIdentity->GetCLCLicense()->GetLicense().c_str(), &hBoundLicense, NULL)
SecureEnvHelper::InitializeEnablingPrincipal(pUserIdentity)
pUserIdentity->GetRACLicense().get()
ippRenewUser( pUserIdentity, 0, pIpcContext)
Main-Rights
CDRMtoSP::DRMCreateEnablingPrincipal( pUserIdentity->GetEnvironmentHandle(), NULL, idStandardEP.wszID, &idNULL, const_cast<PWSTR>(wstrRac.c_str()), &hEnablingPrincipal)
ippRenewUser( pUserIdentity, IPP_GU_CONSUMPTION_MODE, pIpcContext)
pUserIdentity->GetCLCLicense().get()
onecoreuap\ds\security\rm\client\src\base\Util\auto_localfree.h
os::IpcOsGetCurrentUserId( ppwszSid )
CDRMtoSP::DRMCreateBoundLicense( hEnv, &oParams, eulLicense.GetCertificateChain().c_str(), &hBoundLicense, NULL)
EDITRIGHTSDATA
vpCLCs.size() == vpRACs.size()
[msipp]: Error occured while deleteing the RAC HR=0x%x
[msipp]:+IPPLicenseStore::AddRAC
onecoreuap\ds\security\rm\client\src\msipc\core\ipplicensestore.cpp
[msipp]:+IPPLicenseStore::AddCLCWithRAC
[msipp]:+IPPLicenseStore::DeleteRAC
GetTemplates
[msipp]:+IPPLicenseStore::GetTemplates
(0 != vClcs.size()) == (0 != vRacs.size())
[msipp]: Error occured while deleteing the CLC HR=0x%x
wszCLCIssuerUrl
AddCLCWithRAC
vRacObjs.size() > 0
vClcObjs.size() > 0
[msipp]:No of Licenses found: %d
[msipp]:+IPPLicenseStore::GetFirstCLCWithRAC
Microsoft::InformationProtection::IPPLicenseStore::GetCLCForRAC
GetCLCWithRAC
Microsoft::InformationProtection::IPPLicenseStore::GetCLCWithRAC
[msipp]:Failed to parse the %d license set. hr = 0x%x
Microsoft::InformationProtection::IPPLicenseStore::DeleteCLC
Microsoft::InformationProtection::IPPLicenseStore::GetFirstJsonCLC
GetCLCForRAC
[msipp]: Error occured while deleteing the EUL HR=0x%x
AddEULWithRAC
[msipp]:+IPPLicenseStore::AddEULWithRAC
DeleteCLC
DeleteEUL
[msipp]:IPPLicenseStore::GetEULWithRAC No license found
[msipp]:+IPPLicenseStore::GetEULWithRAC
GetEULWithRAC
[msipp]:+IPPLicenseStore::GetMachineCert
GetMachineCert
[msipp]:+IPPLicenseStore::DeleteEUL
[msipp]:ERROR: Not able to delete GICs hr = 0x%x
[msipp]:+IPPLicenseStore::DeleteAllLicenses
DeleteAllLicenses
[msipp]:ERROR: Not able to delete Machine Cert hr = 0x%x
[msipp]:ERROR: Not able to delete EULs hr = 0x%x
[msipp]:ERROR: Not able to delete JSON CLCs hr = 0x%x
[msipp]:ERROR: Not able to delete CLCs hr = 0x%x
[msipp]:Failed to delete the file hr = 0x%x
[msipp]:IPPLicenseStore::DeleteLicense: Failed to parse the license, So deleting: %ws
DeleteLicense
CreateLicenseWithRacFromStoreObject
[msipp]:IPPLicenseStore::CreateLicenseWithRacFromArray: Failed to parse the license pair.                         Ignoring this pair and continuing. hr = 0x%x
pspLicense
spLicObj.get()
msipc
ippGetEULFromStoreWithContentID
ippEULAndRACCanBind
onecoreuap\ds\security\rm\client\src\msipc\core\ippmsdrmwrapper.cpp
pUserIdentity
onecoreuap\ds\security\rm\client\src\msipc\core\ippmsdrmwrapper.cpp
Email in PL Content ID = %ws EUL Content ID = %ws
Email in RAC = %ws Email in EUL = %ws
pEULLicense
ippEULAndRACCanBind
Getting the EUL from Context
RAC cannot bind to EULIssuedPrincipal public key didn't match with RAC.
RAC cannot bind to EUL, content Id didn't match (%ws) didn't match eul (%ws)
RAC cannot bind to EUL user identity (%ws) didn't match eul (%ws)
ippGetEULForIdentities
NOLICCACHE is set. Saved EUL in Context
Cannot get EUL with the specified RAC in the hUser.HR = %x
ippGetEULForIdentity
GetUserConsentForUrls(pwszLicIntUrl, pwszLicExtUrl, pIpcContext)
ippGetEULForRACs Using Redirection Urls
spLicAcqObj->ItemCount()
ippGetEULsForIdentities
puiCorrRACIndex
ippGetEULForRACs
spLicAcqObj->ItemCount() == vpEULs.size()
ippGetEULsForIdentities
(wszIntURL || wszExtURL)
+++++++++++ Service discovery using ++++++++
       Token type: %ws
       Intranet Url: %ws
       Extranet Url: %ws
ippGetCertAndLicURLsWithNewSD
Done ippGetEULForRACs
--------- Service discovery done --------
------- Service discovery for Certification and Licensing done: ---------
       CertificationIntranetUrl: %ws
       CertificationExtranetUrl: %ws
       LicensingIntranetUrl: %ws
       LicensingExtranetUrl: %ws
+++++++++ Service discovery for Certification and Licensing ++++++++++
GetUserConsentForUrls(wszIntURL, wszExtURL, pIpcContext)
+++++++++ Service discovery for Certification ++++++++++
ippGetCertAndLicURLs
------- Service discovery for Licensing done: ---------
       LicensingIntranetUrl: %ws
       LicensingExtranetUrl: %ws
+++++++++ Service discovery for Licensing ++++++++++
GetUserConsentForUrls(wszUserCertIntURL, wszUserCertExtURL, pIpcContext)
------- Service discovery for Certification done: ---------
       CertificationIntranetUrl: %ws
       CertificationExtranetUrl: %ws
------------------ Got a new RAC from server %ws: ----------------
          RAC user: "%ws",
          RAC user type: "%ws",
          RAC Issuer name: "%ws",
          RAC Issuer Id: "%ws",
          RAC Intranet Certification Url: "%ws",
          RAC Extranet Certification Url: "%ws".
ippGetNewRACAndCLC
+++++++++++++++++ Getting a new RAC +++++++++++++++++++
GetUserConsentForUrls(wszCertificationIntURL, wszCertificationExtURL, pIpcContext)
Checking for Key rollover. Looking for CLCs matching URL: %ws
---------------- Got a new CLC from server %ws: -----------------
          CLC user: "%ws",
          CLC Issuer name: "%ws",
          CLC Issuer Id: "%ws",
          CLC Intranet Licensing Url: "%ws",
          CLC Extranet Licensing Url: "%ws".
+++++++++++++++++ Getting a new CLC +++++++++++++++++++
GetUserConsentForUrls(wszLicensingIntURL, wszLicensingExtURL, pIpcContext)
Returned from deleting templates. hr = 0x%x
Key rollover occurred for %ws. Deleting templates
Number of existing matching CLCs, %d
Failed to enumerate existing identities hr = 0x%x
ippGetNewRAC
wszEmailId
(wszServerExtURL || wszServerIntURL)
ippGetNewRAC
Skipping Machine activation because of Offline mode
ippActivateMachine
User is not allowed to publish as CLC request is rejected by the Server. Generating a Temporary CLC.
ippGetNewCLC
DeleteCertsForMachineActivation
Not able to delete 1024-bit machine cert, hr = 0x%08x
Error encountered while activating the machine, hr = 0x%08x
Error encountered while deleting existing certs, hr = 0x%08x
Not able to delete CLCs, hr = 0x%08x
Not able to delete GICs, hr = 0x%08x
Not able to delete 2048-bit machine cert, hr = 0x%08x
ippIsLicensingAnonymous
ippIsLicensingAnonymous hr = 0x%x
drmSoap.DispatchGetRequest()
drmSoap.SetServerInfo(wstrLicensingUrl.c_str(), HTTP_NO_UI | HTTP_GET)
Generating a dummy CLC for consumption only access.
/licensing
E_DRM_INVALID_LICENSE
wszCertUrl
os::IpcOsStringCchPrintf( wszSerializedCLC.get(), cchCLC, g_wszCLC, wszCLCGuid.c_str(), racLicense.GetIssuerId().c_str(), wstrIssuerNameEscaped.c_str(), wszModulusSize, wstrModulus.c_str(), wstrLicensingIntranetUrlEscaped.c_str(), wstrLicensingExtranetUrlEscaped.c_str(), wstrIssuedPrincipalTypeEscaped.c_str(), wstrIssuedPrincipalIdEscaped.c_str(), wstrEmailIdEscaped.c_str(), wszModulusSize, wstrModulus.c_str(), wszModulusSize, wstrModulus.c_str())
os::IpcOsStringCchPrintf(wszModulusSize, ARRAYSIZE(wszModulusSize), L"%d", uModulusSize)
wszIntranetUrl && wszExtranetUrl
ippGenerateCLCForRAC
<XrML xmlns="" version="1.2">     <BODY type="LICENSE" version="3.0">         <ISSUEDTIME>2010-11-02T17:47</ISSUEDTIME>         <DESCRIPTOR>             <OBJECT type="Client-Licensor-Certificate">                 <ID type="MS-GUID">%ws</ID>             </OBJECT>         </DESCRIPTOR>         <ISSUER>             <OBJECT type="MSIPC-Client">                 <ID type="MS-GUID">%ws</ID>                 <NAME>%ws</NAME>                 <ADDRESS type="URL">https://someserver.com/_wmcs</ADDRESS>             </OBJECT>             <PUBLICKEY>                 <ALGORITHM>RSA</ALGORITHM>                 <PARAMETER name="public-exponent">                     <VALUE encoding="integer32">65537</VALUE>                 </PARAMETER>                 <PARAMETER name="modulus">                     <VALUE encoding="base64" size="%ws">%ws</VALUE>                 </PARAMETER>             </PUBLICKEY>             <SECURITYLEVEL name="Server-Version" value="6.1.0.0" />             <SECURITYLEVEL name="Server-SKU" value="RMS 2.0" />         </ISSUER>         <DISTRIBUTIONPOINT>             <OBJECT type="License-Acquisition-URL">                 <ID type="MS-GUID">{0F45FD50-383B-43EE-90A4-ED013CD0CFE5}</ID>                 <NAME>DRM Server Cluster</NAME>                 <ADDRESS type="URL">%ws</ADDRESS>             </OBJECT>         </DISTRIBUTIONPOINT>         <DISTRIBUTIONPOINT>             <OBJECT type="Extranet-License-Acquisition-URL">                 <ID type="MS-GUID">{94BF969A-CA04-44d6-AA96-51071281FEF2}</ID>                 <NAME>DRM Server Cluster</NAME>                 <ADDRESS type="URL">%ws</ADDRESS>             </OBJECT>         </DISTRIBUTIONPOINT>         <ISSUEDPRINCIPALS>             <PRINCIPAL internal-id="1">                 <OBJECT type="Group-Identity">                     <ID type="%ws">%ws</ID>                     <NAME>%ws</NAME>                 </OBJECT>                 <PUBLICKEY>                     <ALGORITHM>RSA</ALGORITHM>                     <PARAMETER name="public-exponent">                         <VALUE encoding="integer32">65537</VALUE>                     </PARAMETER>                     <PARAMETER name="modulus">                         <VALUE encoding="base64" size="%ws">%ws</VALUE>                     </PARAMETER>                 </PUBLICKEY>             </PRINCIPAL>         </ISSUEDPRINCIPALS>         <WORK>             <OBJECT type="Client-Licensor-Certificate">                 <ID type="MS-GUID">{8f54eeb7-378b-4e37-96f5-78f8f5ca3c0b}</ID>             </OBJECT>             <RIGHTSGROUP name="Main-Rights">                 <RIGHTSLIST>                     <RIGHT name="ISSUE">                         <CONDITIONLIST>                             <TIME>                                 <RANGETIME>                                     <FROM>2010-11-01T17:47</FROM>                                     <UNTIL>2011-11-02T17:47</UNTIL>                                 </RANGETIME>                             </TIME>                             <ACCESS>                                 <PRINCIPAL internal-id="1">                                     <ENABLINGBITS type="sealed-key">                                         <VALUE encoding="base64" size="6144">LbfbhLQGn391BNucH6QGmovJx3SNtbAxZqU+DVTiMZId+Myx+B2ij+ajxexEa78/9JCjMsT4NELl3wew0DRwr4KDb7fHUHuG2uwpanWNOy9+THf16sEVqzxKLsh+LLZzBycCxXX1PB3W46Kf4mY+/yHRGl4Fp9gLIc9bJfKlJZGjyLWiE1iaZ727NXo8z411v0AYgfWV15rx+f6e+ejKwfsQ8qWaDqHmquGLdZmr+7M3c3iZWUkQ4OflC/F+Jym4T37Tp+Gv+vWUtcxmNxrJVE9nCHnvOTwcdPKt1EQK+QtgzmeAN1VuRyj3fdwFEltiFOqLIMZn6WJtvjhKo9e31rtV+TNSmyimItG0UfEQBFwvz8D/Fw2iM/nkRNtsc0LLdgfm8Y5ZOo3U4r6dmbXqKndkMxvbeE0lms4HigPFU3BnnRHQ8/DRq/69OtFNyC4/bhJJ38IgFkix577ri4l40AAoErOq0F4zqO8KSXdBTU8RbQgFS3KMWO4na+otU0gMALGLAb+6ksTww1foOcui7NKJHTGg7J3P6nYvB6FUWmPZVKHVhObTK3wZEO4bnk87VJgPSiMiToBDdap1aDUhhxr78vE/UwGKOn4Xf/eJxUlprFSBV5zJl1X3i94qu9e1LpJAEc74FVBpYJHI4EUQ8VFr/ehd2WeOe15kFTC6nO9bDfk8kYVmEqNPk613FyAvXeqiHFLyNJJGEia+OOOpYucWRuMDctmQXTuY0+KvkThPIJL2hoHzbogIs4deOxsYD2tshNpm27DzeZiI8t78U5ukzmguTL2xpTcwUKggy8ZbxuOYvaNuj0Zxw18NFpRuFFsgbVL2DU9dY1mouvOurYz4KOc32p4R7NZ9x7jruiFwrYCWqow7XZ47bzwV4jv3ruAhcJCeoL/6l73z8csYrpeb0UXEnquMltvNKIZkdDh9zQy4b4FZsgGp/vw7uuDSZ15wjky2IThuPVn6m6dYhurBoIVeGya+qkldmHU+tSLbmqx3CaxJ0PyMIvN3cKna</VALUE>                                     </ENABLINGBITS>                                 </PRINCIPAL>                             </ACCESS>                         </CONDITIONLIST>                     </RIGHT>                 </RIGHTSLIST>             </RIGHTSGROUP>         </WORK>     </BODY>     <SIGNATURE>         <DIGEST>             <ALGORITHM>SHA1</ALGORITHM>             <PARAMETER name="codingtype">                 <VALUE encoding="string">surface-coding</VALUE>             </PARAMETER>             <VALUE encoding="base64" size="160">Y4Sbj54Pqt/GF+kdOVkmjzEXmbA=</VALUE>         </DIGEST>         <ALGORITHM>RSA PKCS#1-V1.5</ALGORITHM>         <VALUE encoding="base64" size="%ws">%ws</VALUE>     </SIGNATURE> </XrML>
__NoSuchMailId__@dontexit.foo
msipc
NULL == m_wszData
cbSize >= (sizeof(WCHAR) * m_cchData)
0 == (cbSize % sizeof(WCHAR))
onecoreuap\ds\security\rm\client\src\msipc\core\ipcstringallocator.cpp
onecoreuap\ds\security\rm\client\src\msipc\core\offlinepl.cpp
os::IpcOsStringCchCopy( wszCombinedLicense, IPC_OS_MAX_CCH, wsCombinedLicense.c_str())
<XrML 
IPP_GU_TEMPLATE is handled at public API level, this type should not have come here
onecoreuap\ds\security\rm\client\src\msipc\core\ippusermanagement.cpp
ippGetUser
Microsoft::InformationProtection::ippGetUser
Identity information incomplete - refreshing the cache
Microsoft::InformationProtection::ippGetUserForUserInfoWithCache
Server identity not defined in registry (%ws)
onecoreuap\ds\security\rm\client\src\msipc\core\ippusermanagement.cpp
Couldn't find identity information for the Symmetric Key Token info cached in the registry
Found identity information for the symmetric key token info cached in the registry.
        Email: %ws
        IntranetUrl: %ws
        ExtranetUrl: %ws
Symmetric Key token is detected, let's see if we have identity information cached for this token...
Microsoft::InformationProtection::ippGetUserForUserInfo
++++++++ INFORMATION: Renewing the UserIdentity succeeeded++++++++
++++++++ INFORMATION: Renewing the following UserIdentity : ++++++++
           User: "%ws",
           Intranet Url: "%ws",
           Extranet Url: "%ws".
Microsoft::InformationProtection::ippRenewUser
ippRenewUser(ppUserIdentity.get(), dwFlags, pIpcContext)
ippGetUserForLicense
ippRenewUser HR=%x
RenewIdentityFailure
++++++++ Renewing the UserIdentity failed with hr = 0x%x ++++++++
Trying TUD hr = 0x%x
Done consuming with regular discovery flow hr = 0x%x
Consuming with regular discovery flow
Microsoft::InformationProtection::ippGetUserForLicense
pcUserInfo
hrGetUserSD
IPCERROR_RIGHT_NOT_GRANTED == hr ? hr : hrGetUserSD
Done trying TUD ippGetUserForLicenseUsingTud hr = 0x%x
Owner EUL didn't work
++++++++ INFORMATION: Successfully retreived the Owner EUL from the PL ++++++++
Microsoft::InformationProtection::ippGetUserForLicenseUsingServiceDiscovery
Trying Owner EUL
Trying to generate Owner EUL from PL locally
Couldn't find a EUL in the store
++++++++ INFORMATION: Successfully retreived the EUL from the license store ++++++++
Trying to get the EUL from the store
Trying to get the EUL from the server
ProActive EUL renewal from server
Couldn't Generate the EUL from PL locally
++++++++ INFORMATION: Successfully generated the EUL from the license ++++++++
Trying to check if DNS redirection exist.
Couldn't get an EUL from the server.
++++++++ INFORMATION: Successfully retreived the EUL from the server++++++++
Microsoft::InformationProtection::ippGetEULfromServer
Couldn't find a EUL in the store for deletion
Setting extranet licensing redirection %ws to %ws
Setting intranet licensing redirection %ws to %ws
Microsoft::InformationProtection::ippGetEULForLicenseDns
Found DNS redirection. Setting licensing redirection registry key for user.
Cannot get ServerInfo, so skipping enterprise server check
Token Type is not supported : %ws
Microsoft::InformationProtection::ippGetUserForLicenseUsingTud
Licensing URL from PL is %ws
TUD using identities
Get Default Identity hr = 0x%x
Licensing endpoint is not anonymous.So skipping TUD check.
Not an enterprise server, so skipping TUD check
Microsoft::InformationProtection::ippGetUserFromUserListForLicense
Trying TUD or Social IDP with user %ws
FAILED(retHr) ? retHr : HRESULT_FROM_WIN32(ERROR_NOT_SUPPORTED)
Tried to acquire EUL using existing identities hr = 0x%x
Renewing user %ws from %ws
Renew expired users and try TUD.
ippGetEULForIdentities hr = 0x%x
++++++++ INFORMATION: Trying TUD or Social IDP with %d UserIdentities (RACs) in the store valid for TUD ++++++++
Renewing user Failed hr = 0x%x
Microsoft::InformationProtection::ippRenewUserAndLicenseUsingTud
ippGetEULFromStoreWithContentID failed with unhandled error.
crypto upgrade is detected
Cannot Use Token for ILS Server
Microsoft::InformationProtection::ippGetEULForLicense
Microsoft::InformationProtection::ippPreProcessUserListForTud
Skipping the "%ws" user as it's federated.
ippGenerateOwnerEULForLicense(plLicense, pUserIdentity, pIpcContext, pEULLicense)
Microsoft::InformationProtection::ippGetEULFromPL
Skipping the "%ws" user as it's an ILS user and PassportCertification is disabled.
Skipping the "%ws" user as it's an Azure RMS user.
msipc
IUserIdentitiesException
IUserIdentitiesIncorrectBufferSizeException
IUserIdentitiesNotEnoughMemoryException
Microsoft::InformationProtection::UserIdentities::init
++++++++++ Enumerating user identities for: +++++++++++
       EmailId: %ws
       IntranetUrl: %ws
       ExtranetUrl: %ws
       PublishingOnly: %ws
[msipc]:+UserIdentities::GetTemplateIssuers Skipping identity as its for consumption only.
onecoreuap\ds\security\rm\client\src\msipc\core\useridentities.cpp
Failed to initialze Identity hr = 0x%x
[msipc]:+UserIdentities::init Initialize Identity for %ws from Issuer %ws
Found %lu RAC & CLC pairs in the store
onecoreuap\ds\security\rm\client\src\msipc\core\useridentities.cpp
IUserIdentities::GenerateIpcUserList - Not enough memory allocated.
!(cbData % sizeof(WCHAR))
retHr
msipc
[msipc]: Error - could not generate the EUL for user '%ws'. HRESULT = 0x%08X
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ipplicense.cpp
[msipc]: Error - cannot generate the EUL for user of type %u, ID='%ws' - only email users are currently supported.
[msipp]::Win7IppLicense::GetReferralInfoUrl referral info found in license: %s
[msipp]::Win7IppLicense::GetReferralInfoUrl no referral info URL found
[msipp]:Win7IppLicense::GetReferralInfoUrl Using default value: %s
ipp::IppUtil::ConvertBufferToString(pvLicense, &wszLicense)
UserLicense for this identity is not available to serialize in IPC_SL_FLAG_ISSUANCE_LICENSE_V2 format
ippRenewUser(m_pUser->GetIppUserIdentity(), 0, pIpcContext)
[msipc]:+Win7IppLicense::IsFromRmso ServerInfo IsRmso = %d
[msipc]:+Win7IppLicense::IsFromRmso ServerInfo Not found hr = 0x%x
m_hBoundLicense != 0
m_pUser.get() != 0
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ipplicense.cpp
Microsoft::InformationProtection::Win7IppLicense::Serialize
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, (m_fGenerateNewContentId || m_State.GetContentId().empty()) ? NULL : m_State.GetContentId().c_str(), GetCipherInfo(), dwFlags & IPC_SL_FLAG_REUSE_KEY ? m_hBoundLicense : 0, &wszLicense, pOwnerEUL, pIpcContext)
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, (m_fGenerateNewContentId || m_State.GetContentId().empty()) ? NULL : m_State.GetContentId().c_str(), const_cast<BYTE *>(&m_vbContentKeyBits[0]), m_cbContentKeyBits, GetCipherInfo(), dwFlags & IPC_SL_FLAG_REUSE_KEY ? m_hBoundLicense : 0, &wszLicense, pOwnerEUL, pIpcContext, true)
Not persisting the owner EUL as the owner  doesn't have owner rights or AutoGrantOwnerFullAccess = 0.
m_fCanRepublish
CDRMtoSP::DRMDuplicateHandle(spKey->GetBoundLicenseHandle(), &m_hBoundLicense)
[msipp]:Win7IppLicense::SetContentKey republishing not permitted for this key 
ipp::IppUtil::ConvertBufferToString(spKey->GetLicense(), &wszLicense)
os::IpcOsStringCbLength(wszLicense, IPC_OS_MAX_CCH, &cbTemp)
hr = os::IpcOsFileTimeAsSystemTime( &ftEnd, &stEnd )
hr = os::IpcOsFileTimeAsSystemTime( static_cast<const IPCOS_FILETIME *>(&(pTerm->ftStart)), &stStart )
[msipp]:Win7IppLicense::Setting SetRepublishScenario
[msipp]:Win7IppLicense::SetContentKey updating cipher info 
[msipp]:Win7IppLicense::init  RepublishOnly in CLC set to true
CDRMtoSP::DRMDuplicateHandle(pKey->GetBoundLicenseHandle(), &m_hBoundLicense)
CDRMCPub::DRMResetValidityTime(hLicense)
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from PL %ws
failed
succeeded
CDRMCPub::DRMGetLicenseId(m_hLicenseInitial, OUT m_wstrLicenseId)
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from UserIdentity %ws
[msipp]:Win7IppLicense::DetermineIssuerName Using template connection info as issuer name
[msipp]:Win7IppLicense::DetermineIssuerName Reading IssuerName from Template %ws
[msipp]:Win7IppLicense::DetermineIssuerName Using PL connection info as issuer name
different
[msipp]:Win7IppLicense::DetermineIssuerName Cannot read IssuerName from either PL, Template or Identity
[msipp]:Win7IppLicense::DetermineIssuerName Using user connection info as issuer name
CDRMtoSP::DRMCreateEnablingBitsDecryptor(m_hBoundLicense, 0, 0, 0, &hDecryptor)
[msdrm]:DRMCreateEnablingBitsDecryptor for EXTRACT FAILED : %x
[msdrm]:DRMCreateEnablingBitsDecryptor for EXTRACT SUCCEEDED
[msipp]:Win7IppLicense::init  Issuers of user and original PL are %ws
CDRMCPub::DRMSetNameAndDescription( m_hLicenseInitial, fDelete, pDescriptor->lcid, pDescriptor->wszName, pDescriptor->wszDescription)
CDRMCPub::DRMSetIntervalTime(hLicense, m_State.GetIntervalTime())
[msipp]:Win7IppLicense::updateLicenseFromIntervalTime IntervalTime is not set
CDRMCPub::DRMSetNameAndDescription( hLicense, FALSE, lc, wszNm, wszDes)
pdwIdType
nullptr != pUserIdentity
os::IpcOsStringCchLength(wszEUL, IPC_OS_MAX_CCH, &cbEUL)
ipp::IppUtil::ConvertBufferToString(pcvLicense, &wszLicense)
CheckTemplateOwnerRight
pdwNameType
EXTRACT
msipc
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7templateissuermanager.cpp
UserIdentityNotFoundForTemplateIssuerException
ippGetUser(IPP_GU_LICENSE, pLicenseInfo, dwFlags, ipcContext, m_pUser)
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippuser.cpp
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippuser.cpp
Microsoft::InformationProtection::Win7IppUser::IsEnterpriseFederatedUser
ServerInfo Not found for a previously bootstrapped server: hr = 0x%x
ippGetUser(IPP_GU_CONNECTION_INFO, pConnectionInfo, dwFlags, ipcContext, m_pUser)
os::IpcOsStringCchCopy(pwszOut, (cbInfo - cchUsed) / 2, wszEmailId.c_str())
os::IpcOsStringCchCopy(pwszOut, (cbInfo - cchUsed) / 2, wszId.c_str())
ippRenewUser(m_pUser.get(), dwFlags, pIpcContext)
m_pUser.get()
msipc
++++++++ INFORMATION: Getting templates for the following UserIdentity: ++++++++
          User: %ws,
          Intranet Url: %ws,
          Extranet Url: %ws.
pcUser
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippstore.cpp
os::IpcOsStringCchCopy(wszTemplate, cchTemplateBuffer, vpTemplates[i]->GetLicense().c_str())
++++++++ INFORMATION: We have unmanaged templates in the store. ++++++++
GetTemplateList
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippstore.cpp
Microsoft::InformationProtection::TemplateManager::GetTemplateList
++++++++ INFORMATION: Getting templates for all UserIdentities ++++++++
++++++++ INFORMATION: Getting templates succeeded. ++++++++
++++++++ INFORMATION: Identity is not allowed for publishing. ++++++++
hrDownloadTemplates
don't have
Found templates in UnManagedStore.
Microsoft::InformationProtection::TemplateManager::DownloadTemplatesIfNeeded
+++++++++ Ensuring the templates are up-to-date for the Idenitity: +++++++++
       EmailId: %ws
       IntranetUrl: %ws
       ExtranetUrl: %ws
Identity is for consumption only. Skipping template download.
Returning IPCERROR_NEEDS_ONLINE, store is stale
Templates in UnManagedStore %ws the same public key as the user.
Public key with template didn't match after renewing the user.
Identity is for consumption only. Skipping download templates.
downloadTemplates(pcUser)
The user needs to be renewed before we can get the templates. Marking appropriately in the registry.
Microsoft::InformationProtection::TemplateManager::copyTemplateInfoToList
[msipc]: ++++++++ INFORMATION: Adding template: ++++++++
          Id: "%ws",
          Name: "%ws",
          Description: "%ws",
          IssuerName: "%ws".
------------- Ensuring the templates are up-to-date done hr=0x%x: ----------
IPCERROR_BROKEN_CERT_CHAIN
Microsoft::InformationProtection::TemplateManager::downloadTemplates
++++++++ INFORMATION: Downloading templates for the following UserIdentity: ++++++++
          User: %ws,
          Intranet Url: %ws,
          Extranet Url: %ws.
Microsoft::InformationProtection::TemplateManager::isV1Server
No Connection info specified
GetUserConsentForConnectionInfo(connectionInfo.Get(), m_pIpcContext)
Federated User from enterprise server, skip downloading templates
V1 Serever doesn't have Templates
[msipc]:TemplateManager :: isTemplateStoreStale TemplateStore is Stale
Microsoft::InformationProtection::TemplateManager::GetTemplateIssuersFromTemplates
[msipc]: ++++++++ WARNING: Skipping a template because it doesn't have a name and a description of the requested language. ++++++++
--------- Done downloading templates hr = 0x%x ----------
TemplateStore is stale - last update time is not valid
TemplateStore is stale - templates version is not current.
Microsoft::InformationProtection::TemplateManager::isTemplateStoreStale
TemplateStore is stale - can't find last update time hr=0x%x
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf(wszCurrTime, 260, L"%04d-%02d-%02dT%02d:%02d", currTime.wYear, currTime.wMonth, currTime.wDay, currTime.wHour, currTime.wMinute)
TemplateStore is stale - templates are not up-to-date
TemplateStore is stale - last update time is past current time
[msipp]:TemplateManager::GetConfiguredUpdateFrequencyInDays can't find the MSIPC reg key 0x%x
Failed matching the CLC issuer public key with the template issuer key hr = 0x%x
Microsoft::InformationProtection::TemplateManager::usersPublicKeyMatchWithTemplates
The CLC issuer public key doesn't match with the template issuer key. The key has been rolled.
[msipp]:TemplateManager::GetConfiguredUpdateFrequencyInSeconds can't find the MSIPC reg key 0x%x
msipc
CDRMtoSP::DRMCreateEnablingBitsDecryptor(m_hBoundLicense, 0, 0, 0, &m_hDecryptor)
m_setRights.size() > 0
ippGetKey( *pPLLicense, m_pUser->GetIppUserIdentity(), ipcContext, FALSE, &m_hBoundLicense, pEULLicense, m_setRights, m_appSpecificData)
onecoreuap\ds\security\rm\client\src\msipc\msipcobjects\win7ippkey.cpp
[msipc]: Create Encryptor Failed hr = 0x%x
CDRMtoSP::DRMCreateEnablingBitsEncryptor(m_hBoundLicense, 0, 0, 0, &m_hEncryptor)
CDRMtoSP::DRMCreateEnablingBitsDecryptorWithCipherMode(pNewKey->m_hBoundLicense, 0, 0, 0, dwCipherMode, &(pNewKey->m_hDecryptor))
CDRMtoSP::DRMGetInfo( h, g_wszQUERY_BLOCKSIZE, &eType, &cbcbBlock, reinterpret_cast<BYTE*>(&m_cbBlock))
CDRMtoSP::DRMEncrypt( m_hEncryptor, reinterpret_cast<UINT>(pvIV), fFinal, fHash, cb, reinterpret_cast<BYTE*>(pvPlaintext), reinterpret_cast<UINT*>(pcbResult), reinterpret_cast<BYTE*>(pvCiphertext), reinterpret_cast<UINT*>(pcbHash), reinterpret_cast<BYTE*>(pvHash))
CDRMtoSP::DRMDecrypt( m_hDecryptor, uiPosition, fFinal, fHash, cb, reinterpret_cast<BYTE*>(pvCiphertext), reinterpret_cast<UINT*>(pcbResult), reinterpret_cast<BYTE*>(pvPlaintext), reinterpret_cast<UINT*>(pcbHash), reinterpret_cast<BYTE*>(pvHash) )
HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER)
DRMtoSPObj.RMGetBoundRightKey( m_hBoundLicense, IPC_WRITE_RIGHTS, &keyBlob[0], &cbKeyBlob)
cbKeyBlob > sizeof(UDSymBlobHdr)
DRMtoSPObj.RMGetBoundRightKey( m_hBoundLicense, IPC_WRITE_RIGHTS, NULL, &cbKeyBlob)
Microsoft::InformationProtection::Win7IppLicenseWithMetadata::Serialize
msipc
ServerForRegisterPL
Content-Type: application/json;charset=UTF-8
https://api.aadrm.com/my/v1/publishedpolicies
CDRMRegisterPLRestRequest::GetRegisterPLEndPointURLFromRegistry
CDRMRegisterPLRestRequest::GetRegisterPLEndPointURL
[msipc]:CDRMRegisterPLRestRequest::GetRegisterPLEndPointURL server URL: %ws
CDRMRegisterPLRestRequest::CanRegisterPL
[msipc]:CDRMRegisterPLRestRequest::CanRegisterPL returning false for OnPrem server URL: %ws
onecoreuap\ds\security\rm\client\src\msipc\register\registerplrestrequest.cpp
StringCchPrintfExW(&wstrJsonObjectString[0], lengthOfObject + 1, NULL, &unusedCharactersCount, STRSAFE_NULL_ON_FAILURE, JSON_OBJECT_FORMAT_STRING, wstrJsonPL.c_str(), wstrJsonContentName.c_str(), wstrJsonSendRegistrationMail.c_str())
CDRMRegisterPLRestRequest::DispatchRequest
RegisterPL
httpRequest.DispatchRequest((BYTE*) &strJsonObjectString[0], (UINT)strJsonObjectString.length())
{"SerializedPublishingLicense":"%ws","ContentName":"%ws","SendRegistrationMail":%ws}
CDRMRegisterPLRestRequest::BuildJsonObject
StringCchLengthW(JSON_OBJECT_FORMAT_STRING, STRSAFE_MAX_CCH, &lengthOfObject)
onecoreuap\ds\security\rm\client\src\msipc\register\registerplrestrequest.cpp
CDRMRegisterPLRestRequest::RegisterPL
[msipc]:CDRMRegisterPLRestRequest::RegisterPL JSON object for HTTP request built
[msipc]:CDRMRegisterPLRestRequest::RegisterPL JSON object for HTTP request packed into byte stream
[msipc]:CDRMRegisterPLRestRequest::RegisterPL Going to hit REST endpoint: %ws
msipc
false
CJsonHelper::Serialize
msipc
ippSerializeLicense( hLicense, m_pUser->GetIppUserIdentity(), dwFlags, NULL, (BYTE*)(&m_vbContentKey[0]), (DWORD)m_vbContentKey.size(), GetCipherInfo(), 0, &wszLicense, pOwnerEUL, pIpcContext)
onecoreuap\ds\security\rm\client\src\msipc\testhooks\testwin7ipplicense.cpp
WindowsPortUtil::GetSecurityProcessorFileName
onecoreuap\ds\security\rm\client\src\oswindows\util\winutil.cpp
onecoreuap\ds\security\rm\client\src\oswindows\util\winutil.cpp
WindowsPortUtil::GetModuleDirectory(wszModuleName, OUT wstrPath)
++++++++ ERROR Failed to find secproc +++++++
       path: %ws
msipc
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosactivedirectory.cpp
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(ptempDomainInfo->DnsForestName, IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszForest, strLen + 1, ptempDomainInfo->DnsForestName)
secur32.dll
[msdrm]: GetUserNameExW/GetComputerObjectNameW FAILED with error code: %d 
(pfnGetUserNameExWAdd)(eFormat, spwszCurrentName.get(), &ulNameSize)
pwszDomain
++++++ INFORMATION the user is not a domain user. GetUserDomain() failed with 0x%x++++++
GetComputerObjectNameW
GetUserNameExW
nullptr != pfnGetUserNameExWAdd
rootDomainNamingContext
ipcos::IpcOsStringCchLength(pwszLDAPString[0], STRSAFE_MAX_CCH, &cchLDAPString)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopyN(pCurPosition, uiDomainBufferLength - (pCurPosition - wszDomain), pStart, pEnd - pStart)
Microsoft::InformationProtection::IpcOsGetActiveDirectoryServiceImpl
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosactivedirectory.cpp
++++++ INFORMATION Couldn't connect to the Active Directory. Most likely ++++++       the user is not connected to the corporate network. Error=%lu
(objectClass=*)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszValue, strLen + 1, pwszLDAPString[0])
pwszMachineName
[msipc]: GetComputerNameEx FAILED with error code: %d 
configurationNamingContext
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(pwszLDAPString[0], IPC_OS_MAX_CCH, &strLen)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszDomain, strLen + 1, pwszLDAPString[0])
serviceBindingInformation
msipc
(&(objectCategory=serviceConnectionPoint)(keywords=MSRMRootCluster)(keywords=1.0))
winipcsecproc_isv.dll
winipcsecproc_test.dll
winipcsecproc_ssp.dll
winipcsecproc_ssp_isv.dll
winipcsecproc.dll
Microsoft::InformationProtection::OperatingSystem::IpcOsInitializeSecurityProcessor
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcossecuritygeneral.cpp
Done loading the Security Processor.
Failed loading secproc with path: %ws, with error 0x%x
winipcsecproc_ssp_test.dll
hr = CDRMtoSP::CreateMachineCerts()
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcossecuritygeneral.cpp
Loading the Security Processor
        hierarchy: %d
        path: %ws
msipc
0 == _wcsnicmp(prefix.c_str(), wstr.c_str(), prefix.size())
onecoreuap\ds\security\rm\client\src\base\util\wstringutil.cpp
IUrlIteratorInvalidArgException
Both Intranet and Extranet Urls can't be null
onecoreuap\ds\security\rm\client\src\msipc\http\urliterator.cpp
Only Intranet Url is available.
Extranet
Iteration = %d UrlType = %ws Using url = %ws
(IIpcContext::URL_STATE::eInitial != m_eLastUsedState)
Microsoft::InformationProtection::UrlIterator::GetNextUrl
onecoreuap\ds\security\rm\client\src\msipc\http\urliterator.cpp
Only Extranet Url is available.
Intranet
msipc
[msipc]:IpcContext::init Silent flag is not specified for the token type: %d. Setting silent flags.
[msipc]:IpcContext::CheckCancelEvent Cancel Event is Set
onecoreuap\ds\security\rm\client\src\msipc\common\ipccontext.cpp
wszScenarioId
TemplateIssuerNotEnoughMemoryException
onecoreuap\ds\security\rm\client\src\msipc\common\templateissuer.cpp
TemplateIssuer::GenerateIpcProtTil - Not enough memory allocated.
TemplateIssuerIncorrectBufferSizeException
onecoreuap\ds\security\rm\client\src\msipc\common\proactiverenewal.cpp
os::IpcOsSystemTimeToFileTime(&(validityTimeRange.GetTo()), &ftExpiry)
Less than 1 day remaining, suggesting identity renew.
Last attempt was more than 1 day ago, suggesting identity renew.
Microsoft::InformationProtection::ProactiveRenewal::ShouldRenewUser
Not suggesting identity renew - identity does not expire.
onecoreuap\ds\security\rm\client\src\msipc\common\proactiverenewal.cpp
os::IpcOsSystemTimeToFileTime(&(validityTimeRange.GetFrom()), &ftFrom)
os::IpcOsStringCchPrintf(wszCurrTime,MAX_PATH,L"%04d-%02d-%02dT%02d:%02d",currTime.wYear,currTime.wMonth,currTime.wDay,currTime.wHour,currTime.wMinute)
ipp::IppUtil::DecipherTime(wszLastUpdatedTime,&stlastUpdatedTime)
os::IpcOsSystemTimeToFileTime(&stlastUpdatedTime,&ftLastTry)
IdentityRenewalProactivity
There has not been a last try (or it is in the incorrect format).
Suggesting identity renew with %.2f % remaining.
Not suggesting identity renew with %.2f % remaining.
LastUserUpdateAttempt
msipc
dwPreambleSize <= (pvEnd - pvStrings)
0 != dwBytesWritten
os::IpcOsStringCbLength(wszId, STRSAFE_MAX_CCH * sizeof(WCHAR), &stDataSize)
onecoreuap\ds\security\rm\client\src\msipc\common\ipcuselicenselist.cpp
os::IpcOsStringCbCopy(reinterpret_cast<LPWSTR>(pvStrings), pvEnd - pvStrings, wszId)
os::IpcOsStringCbLength((LPWSTR)pvStrings, STRSAFE_MAX_CCH * sizeof(WCHAR), &stDataSize)
os::IpcOsSystemTimeToFileTime(&stIssuedTime, &m_ftIssuedTime)
[msipp]:LicenseState::GetIntervalTime NOLICCACHE is set. So returning Interval time as 0
IPCERROR_LICENSE_INTERVAL_TIME_NOT_SET
onecoreuap\ds\security\rm\client\src\msipc\common\licensestate.cpp
TemplateInfoNotEnoughMemoryException
TemplateInfo::GenerateIpcProtTil - Not enough memory allocated.
onecoreuap\ds\security\rm\client\src\msipc\common\templateinfo.cpp
!wstring(wszContentName).empty()
CBase64::UDBase64ToBinW( uDataSize, wszData, &uDecodedDataSize, NULL)
CBase64::UDBase64ToBinW( uDataSize, wszData, &uDecodedDataSize, &vecDecodedData[0])
LCIDToLocaleName failed with hr = 0x%08x
Microsoft::InformationProtection::LicenseMetadata::AddReadOnlyValues
onecoreuap\ds\security\rm\client\src\msipc\common\licensemetadata.cpp
!wstrValue.empty()
CBase64::UDBinToBase64W( uDataSize, pByte, &dwEncodedDigestSize, NULL)
CBase64::UDBinToBase64W( uDataSize, pByte, &dwEncodedDigestSize, &wstrEncodedDigest[0])
IpcOsStringCchPrintf failed with hr = 0x%08x
Microsoft::InformationProtection::LicenseMetadata::GetFileTimeString
onecoreuap\ds\security\rm\client\src\msipc\common\licensemetadata.cpp
IpcOsGetUserPreferredLocale failed with hr = 0x%08x
GetDynamicTimeZoneInformation failed with hr = 0x%08x
IpcOsGetMachineName failed with hr = 0x%08x
FileTimeToSystemTime failed with hr = 0x%08x
MS.MachineName.Hash
MS.ContentPath.Hash
MS.Content.Name
MS.Notify.Enabled
MS.Notify.TZSN
en-us
false
MS.Content.DateCreated
MS.Notify.Culture
MS.Notify.TZO
MS.Notify.Digest
MS.Notify.TZDN
MS.Notify.DeniedOnly
MS.Notify.TZID
MS.Content.DateModified
msipc
SerializationException
ArgumentException
Hr validation failed 'IpcUtf8ToWideChar(lhs, OUT rhs)
const
__ptr64
TypeConversionsException
onecoreuap\ds\security\rm\client\src\base\Serialization\TypeConversions.h
unsigned_
unsigned 
XmlProtocolException
NoTypeNameFoundException
Validation failed 'FALSE'
Uint32
String
onecoreuap\ds\security\rm\client\src\base\Serialization\DeserializeTree.h
Validation failed 'false'
onecoreuap\ds\security\rm\client\src\msipc\licenses\cpublickey.cpp
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, NULL)
BYTES_TO_BITS(uSize) == uBitsSize
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, &m_key.m_vbModulus[0])
wstrEncoding.empty() || wstrEncoding == xa::wszEncodingBase64
CBase64::UDBinToBase64W(SafeInt<UINT>(m_vbModulus.size()), &m_vbModulus[0], &uSize, NULL)
CBase64::UDBinToBase64W(SafeInt<UINT>(m_vbModulus.size()), &m_vbModulus[0], &uSize, &wstrModulus[0])
!bExponent
!bModulus
m_keyBlob.InitRSAPublic(m_uExponent, GetModulusBitsSize(), &m_vbModulus[0])
pCryptoVersion
onecoreuap\ds\security\rm\client\src\base\Serialization\XmlProtocol.h
Hr validation failed 'e.Error()
Error: hr validation had unexpected behavior
Validation failed 'SerializerGetTypeName(m_object, wstrName)'
base64
@size
public-exponent
@encoding
VALUE
@name
modulus
ALGORITHM
PARAMETER
Thrown error
!m_vAppSpecificData.empty()
onecoreuap\ds\security\rm\client\src\msipc\licenses\cpllicense.cpp
vDPTypes.size() == vDPAddresses.size()
vDPTypes.size() == m_vwstrDistributionPointNames.size()
Validation failed 'IsNamedValue()'
Validation failed '0 != m_pCurrent'
++++++++ INFORMATION: PL details: ++++++++
          Intranet Licensing Url: "%ws",
          Extranet Licensing Url: "%ws",
          IssuerName: "%ws"
          Owner: "%ws",
          ContentId: "%ws",
          Content Valid until: "%hs".
Microsoft::InformationProtection::CPLLicense::LogPL
onecoreuap\ds\security\rm\client\src\msipc\licenses\cpllicense.cpp
!GetContentId().empty()
!GetIssuer().IsNull()
!GetIssuedPrincipal().IsNull()
IppUtil::DecipherTime(m_wstrIssuedTime.c_str(), &m_stIssuedTime)
Validation failed 'SerializerGetTypeName(T(), wstrName)'
OWNER
OWNER
INTERNAL
Referral-Info
@type
License-Acquisition-URL
Publishing-URL
DISTRIBUTIONPOINT
CONDITIONLIST
RIGHTSLIST
RANGETIME
PRECONDITIONLIST
AUTHENTICATEDDATA
POLICYLIST
ISSUEDTIME
RIGHTSGROUP
METADATA
OBJECT
DESCRIPTOR
OWNER
msipc
SafeEnumException
InvalidValueException
os::IpcOsSystemTimeToFileTime(&stNow, &ftNow)
os::IpcOsSystemTimeToFileTime(&stFrom, &ftFrom)
os::IpcOsSystemTimeToFileTime(&stTo, &ftTo)
+1 != os::IpcOsCompareFileTime(&ftFrom, &ftNow)
onecoreuap\ds\security\rm\client\src\msipc\licenses\verification.cpp
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrValue.size()), wstrValue.c_str(), &uSize, &m_vbSignature[0])
m_vRights.end() != std::find(m_vRights.begin(), m_vRights.end(), xa::wszIssueRight)
!bRequireV1Crypto || leafVersion.dwRSAKeySize <= gc_DRMCryptoV1.dwRSAKeySize
!bCheckActServerKey || eRequiredHierarchy != ANY_ROOT
MatchKey(keyBlob, s_rootKeys, ARRAYSIZE(s_rootKeys), eMatchedHierarchy)
ANY_ROOT == eRequiredHierarchy || eRequiredHierarchy == eMatchedHierarchy
-1 != os::IpcOsCompareFileTime(&ftTo, &ftNow)
vBodies.size() == vLicenses.size()
!vCertChain.empty()
( xe::wszSHA256Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA256 == signature.GetDigestSize() )
!license.GetIssuedPrincipalsPublicKeys().empty()
CCertTypeUtils::SoftCompare(eExpectedLeafType, vCertChain.front()->GetCertType())
CCertTypeUtils::CanIssue(vCertChain[i-1]->GetCertType(), vCertChain[i]->GetCertType())
TrustTestRoot()
xe::wszRSAAlgorithm == issuerKey.GetAlgorithm() && xe::wszPKCS1_15Algorithm == signature.GetSignatureAlgorithm() && signature.GetSignatureBitsSize() == issuerKey.GetModulusBitsSize() && signature.GetSignatureBitsSize() >= childVersion.dwRSAKeySize
xe::wszRSAAlgorithm == pIssuedPrincipalKey->GetAlgorithm() && signature.GetSignatureBitsSize() >= pIssuedPrincipalKey->GetModulusBitsSize()
( xe::wszSHA256Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA256 == signature.GetDigestSize() ) || ( xe::wszSHA1Algorithm == signature.GetDigestAlgorithm() && UDCRYPTO_SIZE_HASH_SHA1 == signature.GetDigestSize() )
Validation failed '(value >= 0) && (value <= MaxValue)'
onecoreuap\ds\security\rm\client\src\base\Serialization\SafeEnum.h
CERT_TYPE_CA == vCertChain.back()->GetCertType()
@xULa
U$r>P
6/b9[
U:[]S,I
wEHK~%
9B]R.B
ISSUE
@name
@type
@encoding
base64
@size
DIGEST
VALUE
ISSUEDPRINCIPALS
PUBLICKEY
RIGHT
RIGHTSLIST
ISSUER
Server-Licensor-Certificate
Machine-Certificate
RSA PKCS#1-V1.5
Content-License
DRM-CA-Certificate
VALIDITYTIME
ALGORITHM
RANGETIME
SIGNATURE
Client-Licensor-Certificate
RIGHTSGROUP
PRINCIPAL
DESCRIPTOR
SHA256
Group-Identity-Credential
OBJECT
wszLicense
onecoreuap\ds\security\rm\client\src\msipc\licenses\clicense.cpp
!m_bVerifyCertificateChain || NULL != m_pCryptoVersionToVerify
onecoreuap\ds\security\rm\client\src\msipc\licenses\clicense.cpp
Exception while getting the error message out of the Exception object
IsCertTypeOptional() || CERT_TYPE_UNKNOWN != m_eCertType
CCertTypeUtils::SoftCompare(GetExpectedCertType(), GetCertType())
ch.ConstructCertificateChain(1, &wszLicense, &nChainLength, NULL)
ch.ConstructCertificateChain(1, &wszLicense, &nChainLength, const_cast<PWSTR>(wstrChain.c_str()))
Microsoft::InformationProtection::CBaseLicense::Parse
Getting the error message out of the Exception object failed with hr=0x%x
m_pSignature.get()
!m_issuer.IsNull()
m_pCryptoVersionToVerify
m_pVerificationData.get()
Publishing-URL
Extranet-License-Acquisition-URL
@type
Extranet-Activation
Activation
License-Acquisition-URL
ISSUER
ADDRESS
DISTRIBUTIONPOINT
ISSUEDPRINCIPALS
PRINCIPAL
VALIDITYTIME
OBJECT
DESCRIPTOR
msipc
wszEUL
onecoreuap\ds\security\rm\client\src\msipc\licenses\ceullicense.cpp
@type
RIGHTSLIST
OBJECT
RIGHTSGROUP
onecoreuap\ds\security\rm\client\src\msipc\licenses\craclicense.cpp
!GetEmailId().empty()
Microsoft::InformationProtection::CRACLicense::LogRAC
++++++++ INFORMATION: RAC details: ++++++++
          User: "%ws",
          User type: "%ws",
          Issuer name: "%ws",
          Issuer Id: "%ws",
          Intranet Certification Url: "%ws",
          Extranet Certification Url: "%ws",
          Valid Until: "%hs".
wszRAC
onecoreuap\ds\security\rm\client\src\msipc\licenses\craclicense.cpp
ISSUEDPRINCIPALS
PRINCIPAL
msipc
Uint16
!(bTimeRange && bTimeInterval)
m_pTimeInterval
xa::wszEncodingBase64 == wstrEncoding
wstring::npos != nDash
onecoreuap\ds\security\rm\client\src\msipc\licenses\licenseobjects.cpp
IppUtil::DecipherTime(wstrFrom.c_str(), &m_stFrom)
m_pTimeRange
IppUtil::DecipherTime(wstrTo.c_str(), &m_stTo)
vwstrPrincipalIds.size() == vwstrPrincipalTids.size()
vwstrPrincipalIds.size() == vwstrPrincipalNames.size()
vwstrPrincipalIds.size() == vwstrPrincipalPuids.size()
vwstrPrincipalIds.size() == vwstrPrincipalObjectIds.size()
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrDigest.size()), wstrDigest.c_str(), &uDigestSize, &m_vbDigest[0])
CBase64::UDBase64ToBinW(SafeInt<UINT>(wstrDigest.size()), wstrDigest.c_str(), &uDigestSize, NULL)
vwstrPrincipalIds.size() == vwstrPrincipalIdTypes.size()
vwstrParameterNames.size() == vwstrParameterValues.size()
wszKeyword
pwszNextValue
m_pvRights
m_psRights
pwszNextItemStart
inclusion
@minutes
@encoding
versionspan
@months
base64
@seconds
@days
exclusion
@years
@hours
OS-Exclusion
@type
@name
PUBLICKEY
VALUE
PARAMETER
VERSIONSPAN
RIGHT
:DESCRIPTION 
DIGEST
POLICY
CONDITION
INTERVALTIME
CONDITIONLIST
PRINCIPAL
ALGORITHM
RANGETIME
UNTIL
LCID 
ACCESS
:NAME 
OBJECT
</Root>
<Root>
onecoreuap\ds\security\rm\client\src\msipc\licenses\cxmlutils.cpp
ADDRESS
@type
OBJECT
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercert.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercert.cpp
Microsoft::InformationProtection::JsonLicenses::UserCert::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserCert::AddSerializableData
msipc
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\CJsonCLCLicense.h
Microsoft::InformationProtection::JsonLicenses::CJsonCLCLicense::VerifySignature
CLC Sig Verification for UTF8 Payload
CLC Sig Verification for UTF16 Payload
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\cjsonclclicense.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\cjsonclclicense.cpp
wszCLC
msipc
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertprivatedata.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\usercertprivatedata.cpp
IppUtil::DecipherTime(wstrIssuedData.c_str(), &m_issuedTime)
Microsoft::InformationProtection::JsonLicenses::UserCertPrivateData::DeserializeFromObject
Microsoft::InformationProtection::JsonLicenses::UserCertPrivateData::AddSerializableData
PrivateKey is missing
msipc
CLicenseAcq::AcquireBatchLicenses
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\licacq.cpp
AcquireBatchLicenses : wszLAURL = %ws, uFlags = %d, uNoOfUserCerts = %d
+++++++ WARNING: Licensing failed with
        FaultCode = %ws,
        FaultString = %ws ++++++++
+++++++ WARNING: Licensing failed with
        FaultCode = %ws,
        FaultCorrelationId = %ws,
        FaultString = %ws ++++++++
drmSoap.SetServerInfo(wstrUrl.c_str(), 0)
drmSoap.SetServerInfo(wstrUrl.c_str(), HTTP_NO_UI)
Exception Message not of Revocation type
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\licacq.cpp
+++++++ WARNING: Licensing failed with
        FaultCode = %ws,
        FaultCorrelationId = %ws,
        FaultString = %ws ,
        Revokedby = %ws ,
        RevokedTime =%ws , 
CLicenseAcq::AcquireContext::DispatchSoapRequest
drmSoap.SetIpcContext(m_spIpcContext)
drmSoap.SetCancelHandle(NULL)
drmSoap.CreateHeader(g_wszACT_VersionData, 2)
drmSoap.CreateRequest(wszAcqLicMethod, g_wszLA_RequestParams, g_wszLA_AcquireLicenseNamespace, 1)
!m_pvpUserCerts->empty()
CLicenseAcq::AcquireLicenseContext::AcquisitionProc_msipp
drmSoap.SetCallbackInfo(NULL, DRM_MSG_ACQUIRE_LICENSE, NULL)
m_pPLLicense
0 != vwstrILChain.size()
CDRMCChain::DRMDeconstructCertificateChain(m_pPLLicense->GetCertificateChain().c_str(), SafeInt<UINT>(vwstrILChain.size()), &ccNextCert, &vwcNextCertInChain[0])
Acquiring License for Xrml License.
drmSoap.AddStructParameter(wszAcqLicParams, 7)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_Version11)
drmSoap.AddHeaderParameter(NULL, g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_Version11)
++++++++INFORMATION: Licensing call using the url : "%ws" ++++++++
drmSoap.SetServerMethod(g_wszLA_LicensingService, wszAcqLicMethod)
+++++++ WARNING: Licensing failed with FaultCode = %ws +++++++
(cEULs == m_pvpUserCerts->size())
Acquiring License for Json License.
drmSoap.AddArrayParameter( wszAcqLicParams, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrILChain, SafeInt<UINT>(vwstrILChain.size()), j)
drmSoap.AddArrayParameter( wszAcqLicParams, g_wszLA_ParamLicenseeCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts, 1, j)
drmSoap.AddParameter( wszAcqLicParams, g_wszLA_ParamIssuanceLicenseV2, SOAP_DATA_TYPE_STRING, m_pPLLicense->GetLicense().c_str() )
+++++++ WARNING: Licensing failed with hr = 0x%x +++++++
AcquisitionProc: BatchLicensing User = %ws User's Issuer = %ws hr = 0x%x
Crypto version of EUL doesn't match crypto verion of the RAC.
++++++++ INFORMATION: Licensing succeeded. ++++++++
Server returned a valid EUL for one of the RACs
msipc
msipc
onecoreuap\ds\security\rm\client\src\msipc\Licenses\CPrincipal.h
m_wstrAddressesType.size() == m_wstrAddresses.size()
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireDelegationLicenseContext::AcquisitionProc_msipp
0 != issuanceLicenseChain.size()
nullptr != m_userIdentities && !m_userIdentities->empty()
nullptr != m_userCerts && !m_userCerts->empty()
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\delegationlicacq.cpp
CDRMCChain::DRMDeconstructCertificateChain(certChain.c_str(), i, &ccNextCert, &chainItem[0])
drmSoap.AddStructParameter(g_wszLA_AcquireDelegationLicenseStruct, 3)
drmSoap.CreateRequest(g_wszLA_AcquireDelegationLicenseMethod, g_wszLA_RMSO_requestParameters, g_wszLA_AcquireDelegationLicenseNamespace, 1)
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, issuanceLicenseChain)
Acquiring Delegation License for Xrml License.
DRM_AL_NO_SERVERINFO != (DRM_AL_NO_SERVERINFO & m_uFlags)
!m_wstrLAURL.empty()
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\delegationlicacq.cpp
+++++++++ WARNING Acquiring delegated licenses requires an Azure RMS server. ++++++++++
drmSoap.GetArrayParameterValue(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamCertChain, i, certChainPart)
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamCertChain, &licenseCount)
licenseCount == principals
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquireDelegationLicenseResponse, 0, g_wszLA_ParamLicenses, &licenseCount)
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamDelegatedIdentities, g_wszLA_ParamTypeString, SOAP_DATA_TYPE_STRING, *m_userIdentities)
drmSoap.AddArrayParameter( g_wszLA_AcquireDelegationLicenseStruct, g_wszLA_ParamLicenseeCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
(1 <= drmSoap.GetRequestParamsCount())
drmSoap.SetServerMethod(g_wszLA_LicensingService, g_wszLA_AcquireDelegationLicense)
++++++++ WARNING: Acquire Delegation License did not return a single valid EUL ++++++++
++++++++ INFORMATION: Acquire Delegation License succeeded. ++++++++
System.UnauthorizedAccessException
System.ArgumentException
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireDelegationLicenseContext::HandleDelegationLicenseResponse_msipp
++++++++ ERROR: Acquire Delegation License failed with error = 0x%X ++++++++
++++++++ ERROR: Acquire Delegation License principal (%ws) doesn't match the request (%ws) ++++++++
++++++++ WARNING: Acquire Delegation License failed with FaultCode = %ws ++++++++
AcquireBatchLicenses : url = %ws, flags = %d, number of certs = %d, number of identities = %d
Microsoft::InformationProtection::DelegationLicenseAcq::AcquireBatchLicenses
drmSoap.AddStructParameter(wszLicensorParams, 1)
drmSoap.CreateRequest(wszMethod, g_wszLA_RequestParams, g_wszPUB_PublishingServiceNamespace, 1)
drmSoap.AddParameter(wszLicensorParams, L"SignatureEncoding", SOAP_DATA_TYPE_STRING, L"utf-8")
SignatureEncoding
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\enrollment.cpp
[msipc]:+AcquireEnrollmentCert_msipp
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\enrollment.cpp
CEnrollment::AcquireEnrollmentCert_msipp
drmSoap.GetParameterValue(wszResponse, wszCertChainResponseName, i, pwstrNextCert)
drmSoap.GetParameterValueCount(wszResponse, wszCertChainResponseName, &cCertChainCount)
drmSoap.SetServerInfo(wstrPaddedURL.c_str(),(uFlags & DRM_AL_NOUI) ? HTTP_NO_UI : 0)
drmSoap.AddArrayParameter(wszLicensorParams, wszPersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
++++++++ INFORMATION: Enrollment call (getting CLC) using the url: "%ws" ++++++++
drmSoap.SetServerMethod(g_wszPUB_PublishingService, wszMethod)
++++++++ WARNING: Enrollment call (getting CLC) failed with 0x%x ++++++++
UserCert Issuer public key didn't match with original CLC public key
++++++++ INFORMATION: Enrollment call (getting CLC) succeeded. ++++++++
[msipc]:-AcquireEnrollmentCert_msipp
pResponseEle = drmSoap.GetElement(g_wszPUB_GetClientLicensorAndUserCertificatesResponse, 0)
pCLCLicense->GetCryptoVersion().dwRSAKeySize == racLicense.GetCryptoVersion().dwRSAKeySize
pUserCertResponseEle = CDRMSoapRequest::GetElement(pParentUserCertResponseEle, g_wszPUB_UserCertificateResponse, 0)
pParentUserCertResponseEle = CDRMSoapRequest::GetElement(pResponseEle, g_wszPUB_UserCertificateResponse, 0)
CEnrollment::DispatchSoapRequest
++++++++ WARNING: Enrollment (getting CLC) failed with
          FaultCode = %ws,
         FaultCorrelationId = %ws
,         FaultString = %ws ++++++++
++++++++ WARNING: Enrollment (getting CLC) failed with
          FaultCode = %ws,
         FaultString = %ws ++++++++
msipc
NULL != m_pvwstrUserIdentities && !m_pvwstrUserIdentities->empty()
[msdrm]:+AcquisitionProc
CDRMCChain::DRMDeconstructCertificateChain(wstrCertChain.c_str(), i, &ccNextCert, &vwcChainItem[0])
drmSoap.CreateRequest(g_wszLA_AcquirePreLicenseMethod, requestParams.c_str(), g_wszLA_AcquirePreLicenseNamespace, 1)
[msdrm]: AcquireBatchPreLicenses : wszLAURL = %S, uFlags = %d , uNoOfUserIdentities = %d  
[msdrm]:+AcquireBatchPreLicenses
[msdrm]:-AcquireBatchPreLicenses
onecoreuap\ds\security\rm\client\src\msipc\licenseacquisition\prelicacq.cpp
[msdrm]:-AcquisitionProc
[msipc]: ++++++++ INFORMATION: PreLicensing call using the url: "%ws" ++++++++
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamCertChain, &cLicenseCount)
1 <= drmSoap.GetRequestParamsCount()
drmSoap.AddArrayParameter( g_wszLA_AcquirePreLicenseStruct, g_wszLA_ParamRightsLabel, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrILChain)
drmSoap.AddStructParameter(g_wszLA_AcquirePreLicenseStruct, 2)
drmSoap.SetServerMethod(g_wszLA_LicensingService, g_wszLA_AcquirePreLicense)
drmSoap.AddArrayParameter( g_wszLA_AcquirePreLicenseStruct, g_wszLA_ParamLicenseeIdentities, g_wszLA_ParamTypeString, SOAP_DATA_TYPE_STRING, *m_pvwstrUserIdentities)
[msipc]: ++++++++ ERROR: PreLicensing principal (%ws) doesn't match the request (%ws) ++++++++
[msipc]: ++++++++ ERROR: PreLicensing failed with error = 0x%X ++++++++
 [msdrm]:AcquisitionProc: Server returned a valid EUL for one of the RACs
 [msdrm]:AcquisitionProc: BatchLicensing User = %ws hr = 0x%x
drmSoap.GetArrayParameterValueCount(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamLicenses, &cLicenseCount)
drmSoap.GetArrayParameterValue(g_wszLA_AcquirePreLicenseResponse, 0, g_wszLA_ParamCertChain, i, spwstrValue)
[msipc]: ++++++++ WARNING: PreLicensing failed with FaultCode = %ws ++++++++
cLicenseCount == cPrincipals
[msipc]: ++++++++ WARNING: PreLicensing failed with hr=0x%x ++++++++
[msipc]: ++++++++ INFORMATION: PreLicensing succeeded. ++++++++
[msdrm]:wszServer = %S,wszUserID = %S,wszUserType = %S 
++++++++ INFORMATION: Certification call using the url: "%ws" ++++++++
[msipp]:wszServer = %S ,wszUserID = %S,wszUserType = %S 
++++++++ WARNING: Certification call failed FAILED with 0x%x ++++++++
++++++++ WARNING: Certification call failed with
++++++++ INFORMATION: Certification call succeeded. ++++++++n
[msdrm]: GenerateCertificationRequest - ExtractConcatenatedChain function FAILED with hr = %x 
onecoreuap\ds\security\rm\client\src\msipc\activation\activation.cpp
CActivation::CertifyGroupIdentity_msipp
          FaultCode = %ws,
          FaultString = %ws ++++++++ 
++++++++ WARNING: Certification call failed with
          FaultCode = %ws,
          FaultCorrelationId = %ws,
          FaultString = %ws ++++++++ 
CActivation::ProcessCertificationResponse_msipp
msipc
[msdrm]: ServiceLocatorHelpers::GetServiceLocationForCertification Registry lookup : 0x%08x 
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\servicelocatorhelpers.cpp
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLocalValue, strLen + 1, g_wszRMSOnlineCertificationUrl)
[msdrm]: GetActiveDirectoryService FAILED : %x 
hr = DRMCXRMLObj.GetRegistryKey(HKEY_LOCAL_MACHINE,g_wszSD_ActivationKey,NULL,pwszValue)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(g_wszRMSOnlineCertificationUrl, IPC_OS_MAX_CCH, &strLen)
[msdrm]: GlobalServiceLocator::GetGlobalCertificationUrl Registry entry is missing so using                                                                                     hardcoded url : 0x%x 
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\servicelocation.cpp
ipcos::IpcOsStringCchLength(wszDiscoverUrl.c_str(), IPC_OS_MAX_CCH, &cchDiscoverUrl)
GetServiceLocationForCertificationAndLicensing
hr= drmSoap.CreateRequest(g_wszPUB_ServiceDiscoveryForUser, g_wszPUB_ServiceDiscoveryRequest, g_wszPUB_DiscoverServiceNamespace, 1)
hr= drmSoap.SetServerMethod(g_wszPUB_DiscoverService, g_wszPUB_ServiceDiscoveryForUser)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
hr= drmSoap.CreateHeader(g_wszACT_VersionData,2)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerUrl, cchServerUrl, g_wszPUB_DiscoverServicePadding)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerUrl, cchServerUrl, wszDiscoverUrl.c_str())
hr= drmSoap.SetIpcContext(pIpcContext)
hr= drmSoap.SetServerInfo(wszServerUrl, (uFlags & DRM_SL_SILENT) ? HTTP_NO_UI : 0)
hr= drmSoap.AddStructParameter(g_wszPUB_ServiceNames, 1)
          service type: %ws
hr= drmSoap.AddParameter(NULL, g_wszPUB_IntranetLicenseUrl, SOAP_DATA_TYPE_STRING, 0, wszIntranetUrlFromPl ? wszIntranetUrlFromPl : L"")
hr= drmSoap.AddParameter(g_wszPUB_ServiceNames, g_wszPUB_Type, SOAP_DATA_TYPE_STRING, i, pwszServiceTypes[i])
++++++++ INFORMATION: Service discovery call using Url: "%ws" for service types: ++++++++
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING, g_wszACT_CurrentVersion)
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\servicelocation.cpp
CServiceLocation::DoServiceDiscoveryRequest
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceNames, i, g_wszPUB_URL, 0, &(rgwszLocalValues[i]))
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceNames, i, g_wszPUB_Type, 0, &wszType)
hr = drmSoap.GetParameterValue(NULL, g_wszPUB_Upn, 0, &(rgwszLocalValues[uCount]))
++++++++ INFORMATION: Service discovery call succeeded with result: "%ws" ++++++++
hr= drmSoap.AddParameter(NULL, g_wszPUB_SlcPublicKey, SOAP_DATA_TYPE_STRING, 0, pIpcContext->GetSlcPublicKey())
hr= drmSoap.AddParameter(NULL, g_wszPUB_ExtranetLicenseUrl, SOAP_DATA_TYPE_STRING, 0, wszExtranetUrlFromPl ? wszExtranetUrlFromPl : L"")
rgwszLocalValues = new (std::nothrow) PWSTR[uResponseCount]
hr= drmSoap.DispatchRequest()
hr = DoFindServiceLocation( 1, &(rgwszServiceTypes[1]), wszTempCertIntUrl, wszTempCertExtUrl, uFlags, hParentWnd, pIpcContext, &wszLicExtUrl, NULL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerUrl, uServerUrlBufferLength, wszLicenseUrl)
ipcos::IpcOsStringCchLength(wszLicenseUrl, IPC_OS_MAX_CCH, &cchLicenseUrl)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchLength(g_wszCloudLicenseServerUrl, IPC_OS_MAX_CCH, &strLen)
locator->GetCertificationUrls(ppwszInternalUrl, ppwszExternalUrl, &eState)
GetServiceLocationForLicensing
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszLicExtUrl, strLen + 1, g_wszCloudLicenseServerUrl)
hr= drmSoap.AddStructParameter(g_wszPUB_ServiceLocationRequest, 1)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerUrl, uServerUrlBufferLength, g_wszPUB_ServiceLocatorPadding)
hr= drmSoap.CreateRequest(g_wszPUB_FindServiceLocations, g_wszPUB_ServiceNames, g_wszPUB_ServiceLocatorNamespace, 1)
hr= drmSoap.SetServerMethod(g_wszPUB_ServiceLocator, g_wszPUB_FindServiceLocations)
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion, SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
CServiceLocation::FindServiceLocationBatchRequest
hr= drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion, SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr= drmSoap.GetArrayParameterValue(g_wszPUB_ServiceLocationResponse, i, g_wszPUB_Type, 0, &wszType)
hr= drmSoap.AddParameter(g_wszPUB_ServiceLocationRequest,g_wszPUB_Type, SOAP_DATA_TYPE_STRING, i, pwszServiceTypes[i])
[msipc]:CServiceLocation::FindServiceLocationBatchRequest drmSoap.GetArrayParameterValue failed hr = 0x%x
msipc
[msdrm]: WindowsScpLocator::GetServiceLocationForCertification SCP lookup : %x 
++++++++ INFORMATION: Global Service Discovery... ++++++++
GetCertificationUrls
onecoreuap\ds\security\rm\client\src\msipc\servicelocation\globalservicelocator.cpp
Microsoft::InformationProtection::GlobalServiceLocator::GetCertificationUrls
[msdrm]: GetServiceLocationForCertification Global Online SD lookup : %x 
msipc
[msipp]:+CServiceLocation::GetServiceLocationForCertification Server didn't support CertificationInternalService
[msdrm]: UnknownIdentityTypeLocator::GetServiceLocationForCertification SCP lookup : %x 
Microsoft::InformationProtection::DnsLookupClient::LookupDiscoveryService
!domain->GetDomainStringForDnsLookup().empty()
_rmsredir._http._tcp.
onecoreuap\ds\security\rm\client\src\msipc\dnslookupclient\dnslookupclient.cpp
DNS Lookup succeeded looking up record for %ws
onecoreuap\ds\security\rm\client\src\msipc\dnslookupclient\dnslookupclient.cpp
DNS Lookup failed looking up record for %ws with %d
msipc
onecoreuap\ds\security\rm\client\src\msipc\dnslookupclient\domain.cpp
[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?
wszData is not a valid email or url
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_
::UrlGetPartW(domain.c_str(), wszStrippedDomain, &dwSize , URL_PART_HOSTNAME, 0)
vector<bool> too long
()$^.*+?[]|\-{},:=!
hr = os::IpcOsStringCchLength(wszURL, IPC_OS_MAX_CCH, &cchURL)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCopy(wszServerURL, uServerUrlBufferLength, wszURL)
onecoreuap\ds\security\rm\client\src\msipc\templateacquisition\rmtemplateapi.cpp
hr = drmSoap.AddHeaderParameter(NULL,g_wszACT_MinimumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoap.AddHeaderParameter(NULL,g_wszACT_MaximumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoap.CreateRequest(g_wszAILT_GetAcquireTemplatesInformation,NULL,g_wszAILTTemplateDistributionServiceNameSpace,1)
hr = drmSoap.CreateHeader(g_wszACT_VersionData,2)
hr = drmSoap.SetIpcContext(pIpcContext)
hr = drmSoap.SetServerMethod(g_wszAILTTemplateDistributionService,g_wszAILT_GetAcquireTemplatesInformation)
::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchCat(wszServerURL, uServerUrlBufferLength, g_wszAILT_GetAcquireTemplatesPadding)
hr = drmSoap.SetServerInfo(wszServerURL, uFlags & DRM_AILT_NONSILENT ? 0 : HTTP_NO_UI)
ServerPublicKey
hr = drmSoap.GetParameterValue(NULL,L"ServerPublicKey",0,&wszServerPublicKey)
onecoreuap\ds\security\rm\client\src\msipc\templateacquisition\rmtemplateapi.cpp
++++++++ WARNING: Template hash acquisition FAILED with hr=0x%x ++++++++
++++++++ INFORMATION: Template hash acquisition call using the url: "%ws" ++++++++
CRMTemplateAPI::AcquireTemplatesFromServer
drmSoap.AddStructParameter(g_wszLA_RequestParams, 1)
drmSoap.AddArrayParameter(g_wszLA_RequestParams, g_wszPUB_PersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
hr = drmSoapTemplate.SetIpcContext(pIpcContext)
hr = drmSoapTemplate.SetServerMethod(g_wszAILTTemplateDistributionService,g_wszAILT_GetAcquireTemplates)
++++++++ INFORMATION: Server didn't return any template hashes, so no need to download the templates ++++++++
hr = drmSoapTemplate.SetServerInfo(wszServerURL, uFlags & DRM_AILT_NONSILENT ? 0 : HTTP_NO_UI)
hr = drmSoap.GetElementValue(NULL,g_wszAILT_Guid,i,&(pTemplateGuidHash[cCount].wszGuid))
hr = drmSoap.GetElementValue(NULL,g_wszAILT_Hash,i,&(pTemplateGuidHash[cCount].wszHash))
GuidHashCount
hr = drmSoap.GetParameterValue(NULL,L"GuidHashCount",0,&wszValue)
drmSoapTemplate.AddStructParameter(g_wszAILT_Guids, 1)
hr = drmSoapTemplate.AddParameter(g_wszAILT_Guids,g_wszAILT_String,SOAP_DATA_TYPE_STRING,pTemplateGuidHash[j].wszGuid)
drmSoapTemplate.AddStructParameter(g_wszLA_RequestParams, 1)
drmSoapTemplate.AddArrayParameter(g_wszLA_RequestParams, g_wszPUB_PersonaCerts, g_wszLA_ParamTypeCertificate, SOAP_DATA_TYPE_CERT, vwstrUserCerts)
hr = drmSoapTemplate.AddHeaderParameter(NULL,g_wszACT_MinimumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoapTemplate.AddHeaderParameter(NULL,g_wszACT_MaximumVersion,SOAP_DATA_TYPE_STRING,g_wszACT_CurrentVersion)
hr = drmSoapTemplate.CreateRequest(g_wszAILT_GetAcquireTemplates,NULL,g_wszAILTTemplateDistributionServiceNameSpace,1)
hr = drmSoapTemplate.CreateHeader(g_wszACT_VersionData,2)
CryptoUpdate Clean License Store hr = 0x%x
Identity and Server are in same crypto mode
Identities Crypto version didn't match with Server. Clean the license store and Renew the Identity
CRMTemplateAPI::CheckForCryptoUpdate
hr = drmSoapTemplate.GetElementValue(NULL,g_wszAILT_Guid,i,&(pTemplateGuidTemplate[i].wszGuid))
++++++++ INFORMATION: Template acquisition succeeded. %u templates were updated. ++++++++
++++++++ INFORMATION: Template acquisition call using the url: "%ws" ++++++++
++++++++ WARNING: Template acquisition failed with hr=0x%x ++++++++
[msipc]: ++++++++ WARNING: Template acquisition failed with FaultCode = %S , FaultString = %S ++++++++ 
hr = os::IpcOsGetLicenseStoreTemplatePath(&ipcfile)
hr = os::IpcOsUnMaskFileNameNotAllowedChar(pwszFileNames[i],NULL,&pwszUnMaskedFileNames[i])
[msipc]: ++++++++ WARNING: Template acquisition failed with FaultCode = %S , FaultCorrelationId = %S , FaultString = %S ++++++++ 
hr = os::IpcOsStringCchLength(wszData, IPC_OS_MAX_CCH, &cchData)
pwszUnMaskedFileNames = new (std::nothrow) PWSTR[cFileNames]
Server key rollover detected. Renew the Identity.
CRMTemplateAPI::IsKeyRolloverDetected
E_FAIL
msipc
=L9o<
bad_weak_ptr
DomException
onecoreuap\ds\security\rm\client\src\base\domdocument\domdocument.cpp
Validation failed 'newRoot'
Validation failed 'root'
MSXmlDomException
DocumentCreationException
Hr validation failed 'document->createElement(CComBSTR(rootName.c_str()), OUT &root)
Hr validation failed 'document->putref_documentElement(root)
onecoreuap\ds\security\rm\client\src\base\domdocument\msxmldomdocument.cpp
Hr validation failed 'document.CoCreateInstance(CLSID_DOMDocument60)
DocumentWriteException
Validation failed 'document'
DocumentReadException
DocumentReadHrException
Hr validation failed 'document->load(CComVariant(filePath.c_str()), OUT &success)
Hr validation failed 'document->get_documentElement(OUT &newRoot)
Hr validation failed 'document->loadXML(CComBSTR(xml.c_str()), OUT &success)
Validation failed 'VARIANT_FALSE != success'
Temporary
Hr validation failed 'document->get_xml(OUT &text)
ElementWriteException
TextException
ElementException
ElementReadException
AttributeReadException
AttributeWriteException
AttributeException
ChangeRootException
onecoreuap\ds\security\rm\client\src\base\domdocument\msxmldomelement.cpp
NodeCastException
NodeInformationException
QueryException
NodeTypeException
TextReadException
TextWriteException
Hr validation failed 'element->setAttribute(CComBSTR(key.c_str()), _variant_t(value.c_str()))
Hr validation failed 'element->get_nodeName(OUT &name)
Hr validation failed 'node->get_nodeValue(OUT &value)
Hr validation failed 'element->getAttribute(CComBSTR(key.c_str()), OUT &attribute)
Hr validation failed 'attributes->nextNode(OUT &node)
Hr validation failed 'node->get_nodeName(OUT &name)
Validation failed 'element'
Hr validation failed 'element->get_attributes(OUT &attributes)
Hr validation failed 'element->appendChild(textNode, NULL)
Hr validation failed 'element->selectNodes(CComBSTR(query.c_str()), OUT &nodes)
Hr validation failed 'element->removeChild(node, OUT &oldChild)
Hr validation failed 'document->createTextNode(CComBSTR(text.c_str()), OUT &textNode)
Hr validation failed 'element->selectNodes(CComBSTR(ChildText), OUT &nodes)
Hr validation failed 'nodes->nextNode(OUT &node)
Hr validation failed 'element->selectSingleNode(CComBSTR(ChildText), OUT &textNode)
Hr validation failed 'textNode->get_text(OUT &result)
Hr validation failed 'node->get_nodeType(OUT &type)
Validation failed 'node'
Hr validation failed 'element->appendChild(child, NULL)
Hr validation failed 'document->putref_documentElement(element)
Hr validation failed 'element->get_xml(OUT &text)
Hr validation failed 'document->createElement(CComBSTR(name.c_str()), OUT &child)
Hr validation failed 'element->selectSingleNode(CComBSTR(query.c_str()), OUT &node)
Hr validation failed 'element->get_childNodes(OUT &nodes)
Validation failed 'IsElement(node)'
Hr validation failed 'node.QueryInterface(OUT &elementNode)
./text()
onecoreuap\ds\security\rm\client\src\base\serialization\TypeConversions.h
TreeException
IndexNotFoundException
NoChildrenException
InvalidItemNameException
InvalidScopeException
InvalidRootException
InvalidChildNodeException
Validation failed 'configuration.Root().first == element->Index()'
onecoreuap\ds\security\rm\client\src\base\serialization\xmlreader.cpp
onecoreuap\ds\security\rm\client\src\base\serialization\SafeEnum.h
onecoreuap\ds\security\rm\client\src\base\serialization\IndexedTree.h
Validation failed 'item'
Validation failed 'FindFirst(target, OUT result)'
Validation failed 'elements.size() > 1'
onecoreuap\ds\security\rm\client\src\base\serialization\xmlprotocol.cpp
Validation failed 'name.length() > 1'
_Element%i
Validation failed 'name.length() > 0'
version
SerializationTreeException
SerializationTreeElementNameException
Validation failed 'tree->Index() == element->Name().c_str()'
Validation failed 'name.size() > 0'
onecoreuap\ds\security\rm\client\src\base\serialization\serializationtree.cpp
Validation failed 'tree'
SerializationTreeNameConflictException
Validation failed 'data.empty()'
onecoreuap\ds\security\rm\client\src\msipc\licenses\cclclicense.cpp
Validation failed '0 != dynamic_cast<VN*>(m_pCurrent)'
onecoreuap\ds\security\rm\client\src\msipc\licenses\cclclicense.cpp
++++++++ INFORMATION: CLC details: ++++++++
          User: "%ws",
          Issuer name: "%ws",
          Issuer Id: "%ws",
          Intranet Licensing Url: "%ws",
          Extranet Licensing Url: "%ws".
Microsoft::InformationProtection::CCLCLicense::LogCLC
vDPTypes.size() == m_vwstrDistributionPointXMLs.size()
[msipp]:+CCLCLicense::SetIssuerName Setting Issuer name based on the URL: %ws
@type
ISSUER
DISTRIBUTIONPOINT
ISSUEDPRINCIPALS
PRINCIPAL
OBJECT
msipc
Microsoft::InformationProtection::JsonLicenses::RevokeObject::AddSerializableData
Microsoft::InformationProtection::JsonLicenses::RevokeObject::DeserializeFromObject
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\revokeobject.cpp
onecoreuap\ds\security\rm\client\src\msipc\jsonlicenses\revokeobject.cpp
RevokedTime
RevokedBy
RevokedMessage
msipc
raB3G
MsipcApiConnectionInfo
wszIntranetUrl
wszExtranetUrl
ActivityStoppedAutomatically
MsipcApiUserProvided
bUserProvided
MsipcActivity
PartA_PrivTags
wilActivity
hresult
threadId
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
MsipcApiAuthCallbackProvided
bAuthCallbackProvided
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MsipcActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MsipcApi
wszMsipcApi
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MsipcActivity
PartA_PrivTags
wilActivity
threadId
MsipcApiOnline
bOnline
MsipcApiTokenProvided
bTokenProvided
StopApi
logEvent
success
MsipcApiIdentityExpired
MsipcApiRenewIdentity
MsipcApiBootstrapIdentity
wszIntranetUrl
wszExtranetUrl
bUserProvided
f W{Q
Microsoft.Windows.ErrorHandling.Fallback
Microsoft.InformaionProtection.RMS.MSIPC
winmsipc.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.rdata$r$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCC
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gfids
.giats
.rdata
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.didat$5
.rsrc$01
.rsrc$02
CertGetEnhancedKeyUsage
CertGetCertificateChain
CertFreeCertificateContext
CryptHashCertificate2
CertFreeCertificateChain
CertVerifyCertificateChainPolicy
WinHttpQueryDataAvailable
WinHttpCrackUrl
WinHttpConnect
WinHttpQueryOption
WinHttpSetStatusCallback
WinHttpSendRequest
WinHttpCloseHandle
WinHttpSetOption
WinHttpOpenRequest
WinHttpReadData
WinHttpQueryHeaders
WinHttpAddRequestHeaders
WinHttpOpen
WinHttpReceiveResponse
CertCompareCertificate
WinHttpGetProxyForUrl
WinHttpGetIEProxyConfigForCurrentUser
WinHttpSetCredentials
WinHttpQueryAuthSchemes
HttpOpenRequestW
InternetQueryOptionW
InternetQueryDataAvailable
InternetErrorDlg
InternetOpenW
HttpQueryInfoW
InternetCrackUrlW
HttpSendRequestW
InternetCloseHandle
InternetConnectW
InternetSetOptionW
InternetReadFile
HttpAddRequestHeadersW
winmsipc.dll
_XcptFilter
_amsg_exit
malloc
_initterm
msvcrt.dll
_except_handler4_common
_lock
_unlock
__dllonexit
_onexit
GetModuleHandleW
Sleep
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
EventActivityIdControl
GetModuleFileNameA
InitOnceBeginInitialize
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
OutputDebugStringA
CoUninitialize
GetThreadLocale
EventUnregister
WaitForSingleObject
ReleaseMutex
EventSetInformation
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
InitOnceComplete
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
EventRegister
GetProcAddress
CreateMutexExW
GetProcessHeap
EventWriteTransfer
CoInitializeEx
DebugBreak
IsDebuggerPresent
EventEnabled
MultiByteToWideChar
EventWrite
WideCharToMultiByte
GetTokenInformation
TlsSetValue
EnterCriticalSection
OpenThreadToken
ConvertSidToStringSidW
InitializeCriticalSectionAndSpinCount
LeaveCriticalSection
CreateMutexW
OpenProcessToken
CreateEventW
SetEvent
GetCurrentThread
TlsAlloc
ResetEvent
DeleteCriticalSection
TlsGetValue
GetFileVersionInfoSizeExW
GetFileVersionInfoExW
BCryptGetProperty
CoCreateGuid
StringFromGUID2
GetModuleFileNameW
VerQueryValueW
LocalAlloc
GetVersionExW
GetUserPreferredUILanguages
BCryptOpenAlgorithmProvider
BCryptFinishHash
GetNativeSystemInfo
GetSystemInfo
BCryptCloseAlgorithmProvider
FindResourceExW
LoadResource
BCryptDestroyHash
LocalFree
LocaleNameToLCID
GetSystemPreferredUILanguages
BCryptHashData
BCryptCreateHash
CreateDirectoryW
ReadFile
FindFirstFileW
FindNextFileW
WriteFile
SetFilePointer
FindClose
CreateFileW
GetFileAttributesW
SetFileAttributesW
DeleteFileW
GetFileSize
RegQueryValueExW
RegEnumValueW
RegDeleteValueW
RegOpenKeyExW
RegSetValueExW
RegCreateKeyExW
RegDeleteKeyW
RegEnumKeyW
RegCloseKey
CLSIDFromString
FreeLibrary
NetApiBufferFree
LoadLibraryExW
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-core-version-l1-1-0.dll
bcrypt.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
netutils.dll
GetDesktopWindow
api-ms-win-rtcore-ntuser-window-l1-1-0.dll
__CxxFrameHandler3
??_V@YAXPAX@Z
_vsnwprintf
memcpy_s
_wcsicmp
_vsnprintf
??3@YAXPAX@Z
_purecall
??1exception@@UAE@XZ
??0exception@@QAE@XZ
??0exception@@QAE@ABV0@@Z
_vsnprintf_s
strchr
sprintf_s
wcsnlen
strnlen
wcsncpy_s
wcsncmp
_callnewh
??0exception@@QAE@ABQBD@Z
??0exception@@QAE@ABQBDH@Z
?what@exception@@UBEPBDXZ
_CxxThrowException
memcpy
memmove
_wcsdup
??8type_info@@QBEHABV0@@Z
__crtCompareStringW
__crtLCMapStringW
__crtLCMapStringA
_wsetlocale
___lc_handle_func
?terminate@@YAXXZ
??1type_info@@UAE@XZ
VirtualProtect
LoadLibraryExA
RaiseException
VirtualQuery
InitializeCriticalSectionEx
ConvertStringSecurityDescriptorToSecurityDescriptorW
CryptImportKey
CryptSetKeyParam
LCIDToLocaleName
CryptDecrypt
FileTimeToSystemTime
CryptEncrypt
CryptAcquireContextW
GetSystemTime
SHGetFolderPathW
CompareFileTime
GetFileAttributesExW
SetEndOfFile
CryptReleaseContext
CoCreateInstance
QueryPerformanceFrequency
CreateEventExW
GlobalFree
SystemTimeToFileTime
CryptGetHashParam
CryptDestroyHash
CryptSetHashParam
CryptHashData
CryptCreateHash
CryptVerifySignatureW
CryptGenRandom
CryptDestroyKey
DsGetDcNameW
GetComputerNameExW
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-core-localization-l1-2-2.dll
api-ms-win-core-timezone-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
WLDAP32.dll
logoncli.dll
??1bad_cast@@UAE@XZ
??0bad_cast@@QAE@PBD@Z
??0bad_cast@@QAE@ABV0@@Z
towlower
wcstol
iswspace
strcspn
localeconv
swprintf_s
_errno
wcscpy_s
strrchr
wcschr
wcsstr
fwscanf_s
calloc
_wfopen_s
fclose
fseek
_strlwr_s
strncmp
_wcslwr_s
_ultoa_s
strstr
_wcsnicmp
wcsrchr
_time64
_ultow_s
_wtoi
_itow_s
realloc
wcstoul
wcstok_s
toupper
setlocale
__uncaught_exception
__pctype_func
isupper
___lc_codepage_func
___mb_cur_max_func
_ismbblead
memset
islower
abort
___lc_collate_cp_func
memcmp
GetStringTypeW
EncodePointer
DecodePointer
WakeAllConditionVariable
SleepConditionVariableSRW
GetDynamicTimeZoneInformation
DnsQuery_W
DnsFree
PathIsURLW
UrlGetPartW
SizeofResource
LockResource
api-ms-win-core-util-l1-1-0.dll
DNSAPI.dll
api-ms-win-core-url-l1-1-0.dll
isalpha
?name@type_info@@QBEPBDXZ
iswalnum
_mbsinc
_ismbcspace
_mbsrev
_mbscspn
_mbsstr
memmove_s
HeapSize
HeapReAlloc
HeapDestroy
InitializeCriticalSection
_vsnwprintf_s
_vscwprintf
__RTDynamicCast
_ftol2_sse
.?AVinvalid_argument@std@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVbad_function_call@std@@
.?AVregex_error@std@@
.?AVIpcHandle@@
.?AV?$SharedPointerHandle@VIIppLicenseWithMetadata@InformationProtection@Microsoft@@@@
.?AVbad_alloc@std@@
.?AV?$SharedPointerHandle@VIIppLicense@InformationProtection@Microsoft@@@@
.?AVResultException@wil@@
.?AV?$SharedPointerHandle@VIIppKey@InformationProtection@Microsoft@@@@
.?AVFreeIpcBufferFunctor@InformationProtection@Microsoft@@
.?AVexception@@
.?AVInvalidHandleTypeException@@
.?AVHresultException@@
.?AV?$SharedPointerHandle@VIIppUser@InformationProtection@Microsoft@@@@
.?AVHandleException@@
.?AVException@@
.?AVFsException@Common@FoundationServices@Microsoft@@
.?AVNullHandleException@@
.?AVSafeIntException@@
.?AVIIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVCIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVfailure@ios_base@std@@
.?AVruntime_error@std@@
.?AVbad_cast@@
.?AVsystem_error@std@@
.?AVIncorrectBufferSizeException@@
.?AV_com_error@@
.?AVCAtlException@ATL@@
.?AV<lambda_3adc666873d1a6095c9c6e9a8e3bb22b>@@
.?AV<lambda_42636f98581dd4988772d30ff9623ac9>@@
.?AV<lambda_a40edab062d46c23ed7a7fdc46764dd4>@@
.?AVSymmetricKeyTokenIncorrectSizeException@InformationProtection@Microsoft@@
.?AVCloseWinHttpHandleFunctor@@
.?AVSymmetricKeyToken@InformationProtection@Microsoft@@
.?AVIIpcToken@InformationProtection@Microsoft@@
.?AVIIpcTokenException@InformationProtection@Microsoft@@
.?AVSymmetricKeyTokenNotUsingWinHttpException@InformationProtection@Microsoft@@
.?AVX509TokenNotUsingWinHttpException@InformationProtection@Microsoft@@
.?AVX509TokenIncorrectSizeException@InformationProtection@Microsoft@@
.?AVOrgIdIdcrlTokenException@InformationProtection@Microsoft@@
.?AVUserApplicationException@Common@FoundationServices@Microsoft@@
.?AVOAuth2TokenException@InformationProtection@Microsoft@@
.?AVOAuth2Token@InformationProtection@Microsoft@@
.?AVServerInfoInvalidUrlException@InformationProtection@Microsoft@@
.?AVIServerInfoNotSupportedException@InformationProtection@Microsoft@@
.?AVIServerInfoException@InformationProtection@Microsoft@@
.?AVServerInfoUnSupportedAuthTypeException@InformationProtection@Microsoft@@
.?AVWindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@
.?AVWindowsUsernameAndPasswordTokenException@InformationProtection@Microsoft@@
.?AVLoggedOnUserTokenException@InformationProtection@Microsoft@@
.?AVILicense@InformationProtection@Microsoft@@
.?AVIPLLicense@InformationProtection@Microsoft@@
.?AVFileStoreObject@store@@
.?AVIEULLicense@InformationProtection@Microsoft@@
.?AVIStoreObject@store@@
.?AVICLCLicense@InformationProtection@Microsoft@@
.?AVCJsonCLCLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AV<lambda_89ae7c55f310c536b714b20c52a8d5ed>@@
.?AV<lambda_7c908d602da9ae1eadbc57a955ecd0d4>@@
.?AVCUserIdentityCacheKey@InformationProtection@Microsoft@@
.?AVICacheKey@Common@FoundationServices@Microsoft@@
.?AVIUserIdentitiesIncorrectBufferSizeException@InformationProtection@Microsoft@@
.?AVIUserIdentitiesException@InformationProtection@Microsoft@@
.?AVIUserIdentitiesNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AV<lambda_23af9fc2cc98efe4c7e085312561f955>@@
.?AVIIppUser@InformationProtection@Microsoft@@
.?AV<lambda_4062061318405ab7eeb27b534784375d>@@
.?AVWin7IppUser@InformationProtection@Microsoft@@
.?AVUserIdentityNotFoundForTemplateIssuerException@InformationProtection@Microsoft@@
.?AVWin7IppKey@InformationProtection@Microsoft@@
.?AVIIppKey@InformationProtection@Microsoft@@
.?AV?$FreeArrayObject@PAG@@
.?AVIUrlIteratorInvalidArgException@InformationProtection@Microsoft@@
.?AVTemplateIssuerIncorrectBufferSizeException@InformationProtection@Microsoft@@
.?AVTemplateIssuerNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AVTemplateInfoNotEnoughMemoryException@InformationProtection@Microsoft@@
.?AVArgumentException@Serialization@@
.?AV?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Serialization@@
.?AVSerializationException@Serialization@@
.?AV?$NamedElement@I@Serialization@@
.?AVNoTypeNameFoundException@XmlProtocolExceptions@Serialization@@
.?AVDeserializeTreeNode@Implementation@Serialization@@
.?AVTypeConversionsException@@
.?AVXmlProtocolException@XmlProtocolExceptions@Serialization@@
.?AV?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@
.?AVDeserializeTreeVectorNode@Implementation@Serialization@@
.?AVCVersionSpan@InformationProtection@Microsoft@@
.?AVInvalidValueException@SafeEnumExceptions@@
.?AVSafeEnumException@@
.?AV?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCSignature@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@
.?AV<lambda_b2402f422e89926f091f437199932c66>@@
.?AV?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@
.?AVIRACLicense@InformationProtection@Microsoft@@
.?AV?$NamedElement@G@Serialization@@
.?AVCRight@InformationProtection@Microsoft@@
.?AV?$NamedElement@VCRight@InformationProtection@Microsoft@@@Serialization@@
.?AV?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@
.?AVDomException@@
.?AVArgumentException@DomExceptions@@
.?AVbad_weak_ptr@std@@
.?AVDocumentWriteException@MSXmlDomExceptions@@
.?AVDocumentReadException@MSXmlDomExceptions@@
.?AVMSXmlDomException@@
.?AVDocumentReadHrException@MSXmlDomExceptions@@
.?AVDocumentCreationException@MSXmlDomExceptions@@
.?AVElementException@MSXmlDomExceptions@@
.?AVAttributeException@MSXmlDomExceptions@@
.?AVNodeCastException@MSXmlDomExceptions@@
.?AVQueryException@MSXmlDomExceptions@@
.?AVAttributeReadException@MSXmlDomExceptions@@
.?AVAttributeWriteException@MSXmlDomExceptions@@
.?AVChangeRootException@MSXmlDomExceptions@@
.?AVTextWriteException@MSXmlDomExceptions@@
.?AVNodeTypeException@MSXmlDomExceptions@@
.?AVNodeInformationException@MSXmlDomExceptions@@
.?AVElementReadException@MSXmlDomExceptions@@
.?AVTextException@MSXmlDomExceptions@@
.?AVElementWriteException@MSXmlDomExceptions@@
.?AVTextReadException@MSXmlDomExceptions@@
.?AVNoChildrenException@XmlProtocolExceptions@Serialization@@
.?AVInvalidItemNameException@XmlProtocolExceptions@Serialization@@
.?AVIndexNotFoundException@@
.?AVInvalidChildNodeException@@
.?AVInvalidRootException@XmlProtocolExceptions@Serialization@@
.?AVTreeException@@
.?AVInvalidScopeException@XmlProtocolExceptions@Serialization@@
.?AVSerializationTreeNameConflictException@Serialization@@
.?AVSerializationTreeException@Serialization@@
.?AVSerializationTreeElementNameException@Serialization@@
.?AVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@
.?AUIFailureCallback@details@wil@@
.?AV?$SharedPointerHandle@VIIpcAuthToken@InformationProtection@Microsoft@@@@
.?AVErrorHandlingHelpers@wil@@
.?AVerror_category@std@@
.?AV?$_Ref_count@VIIppUser@InformationProtection@Microsoft@@@std@@
.?AV_System_error_category@std@@
.?AV?$SharedPointerHandle@$$CBVIIppKey@InformationProtection@Microsoft@@@@
.?AVMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@
.?AV_Generic_error_category@std@@
.?AV?$_Ref_count@VIIppLicenseWithMetadata@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@G@std@@
.?AV?$_Ref_count@VIIppKey@InformationProtection@Microsoft@@@std@@
.?AV_Iostream_error_category@std@@
.?AV?$_Ref_count_del@XVFreeIpcBufferFunctor@InformationProtection@Microsoft@@@std@@
.?AV_Ref_count_base@std@@
.?AVTraceLoggingProvider@wil@@
.?AVCCacheMRUQueue@Common@FoundationServices@Microsoft@@
.?AV?$ActivityBase@VMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@$00$0CAAAAAAAAAAA@$04$0A@U_TlgReflectorTag_Param0IsProviderType@@@wil@@
.?AVICache@Common@FoundationServices@Microsoft@@
.?AV?$_Ref_count@VIIppLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@$$CBVIIppLicense@InformationProtection@Microsoft@@@std@@
.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AVios_base@std@@
.?AV?$ctype@D@std@@
.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@
.?AV_Facet_base@std@@
.?AV?$_Iosb@H@std@@
.?AV?$numpunct@D@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AUctype_base@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AVfacet@locale@std@@
.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@
.?AV?$_Ref_count@VRegistry@Common@FoundationServices@Microsoft@@@std@@
.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@
.?AV?$ctype@G@std@@
.?AV?$basic_ios@GU?$char_traits@G@std@@@std@@
.?AV?$basic_ostream@GU?$char_traits@G@std@@@std@@
.?AV?$basic_stringstream@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$basic_iostream@GU?$char_traits@G@std@@@std@@
.?AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@
.?AV?$basic_streambuf@GU?$char_traits@G@std@@@std@@
.?AV?$basic_stringbuf@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$basic_istream@GU?$char_traits@G@std@@@std@@
.?AV?$numpunct@G@std@@
.?AUIUnknown@@
.?AVIIpcLogger@@
.?AVCIpcEtwLogChannel@InformationProtection@Microsoft@@
.?AVCIpcLogger@InformationProtection@Microsoft@@
.?AVCIpcDebugOutputLogChannel@InformationProtection@Microsoft@@
.?AVIIpcLogChannel@InformationProtection@Microsoft@@
.?AVCIpcMemoryLogChannel@InformationProtection@Microsoft@@
.?AVCIpcFileLogChannel@InformationProtection@Microsoft@@
.?AV?$_Ref_count@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@
.?AVCHttpBase@@
.?AVCDRMSoapRequest@@
.?AVITimer@util@@
.?AV?$_Func_base@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@
.?AV?$_Ref_count@VTimer@util@@@std@@
.?AV?$_Ref_count_obj@V?$AutoActivity@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_obj@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_a40edab062d46c23ed7a7fdc46764dd4>@@$0A@@std@@V?$allocator@V?$_Func_class@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@@2@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@2@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AVTimer@util@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_42636f98581dd4988772d30ff9623ac9>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@std@@U56@U56@U56@U56@U56@@std@@@2@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@2@U82@U82@U82@U82@U82@@std@@
.?AV?$_Ref_count@VHttpActivity@?A0xf13b1a0a@@@std@@
.?AV?$_Func_base@XAAVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@U_Nil@std@@U56@U56@U56@U56@U56@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_3adc666873d1a6095c9c6e9a8e3bb22b>@@$0A@@std@@V?$allocator@V?$_Func_class@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@std@@U_Nil@2@U32@U32@U32@U32@U32@@std@@@2@_NV?$shared_ptr@VHttpActivity@?A0xf13b1a0a@@@2@U_Nil@2@U52@U52@U52@U52@U52@@std@@
.?AV?$_Ref_count@VProxyResolverWrapper@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_del@XVCloseWinHttpHandleFunctor@@@std@@
.?AV?$_Ref_count@VSymmetricKeyToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VServerInfoCache@InformationProtection@Microsoft@@@std@@
.?AVServerInfoCache@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VServerInfoMapData@ServerInfoCache@InformationProtection@Microsoft@@@std@@
.?AVIServerInfoCache@InformationProtection@Microsoft@@
.?AVIpcTokenCache@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIpcTokenCache@InformationProtection@Microsoft@@@std@@
.?AVIIpcTokenCache@InformationProtection@Microsoft@@
.?AVX509Token@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VX509Token@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VProxyResolver@InformationProtection@Microsoft@@@std@@
.?AVOrgIdIdcrlToken@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VOrgIdIdcrlToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VOAuth2Token@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VServerInfoImpl@InformationProtection@Microsoft@@@std@@
.?AVServerInfo@InformationProtection@Microsoft@@
.?AVUnknownServerInfo@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUnknownServerInfo@InformationProtection@Microsoft@@@std@@
.?AVIServerInfo@InformationProtection@Microsoft@@
.?AVServerInfoImpl@InformationProtection@Microsoft@@
.?AV_SharedData@WindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@
.?AVINtlmUrlCache@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VWindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@@std@@
.?AVIWindowsToken@InformationProtection@Microsoft@@
.?AV?$_Ref_count@V_SharedData@WindowsUsernameAndPasswordToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VNtlmUrlCache@InformationProtection@Microsoft@@@std@@
.?AVNtlmUrlCache@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VLoggedOnUserToken@InformationProtection@Microsoft@@@std@@
.?AVLoggedOnUserToken@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIpcAuthToken@InformationProtection@Microsoft@@@std@@
.?AVIpcAuthToken@InformationProtection@Microsoft@@
.?AVIIpcAuthToken@InformationProtection@Microsoft@@
.?AVCipherInfo@InformationProtection@Microsoft@@
.?AVIppTerm@InformationProtection@Microsoft@@
.?AVIppUser@InformationProtection@Microsoft@@
.?AVIppAcl@InformationProtection@Microsoft@@
.?AVLicenseNameValue@InformationProtection@Microsoft@@
.?AVIppSettings@InformationProtection@Microsoft@@
.?AVConnectionInfo@InformationProtection@Microsoft@@
.?AV?$_Ref_count@U_IPC_NAME_VALUE_LIST@@@std@@
.?AVCJsonPLLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCPLLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCJsonPLLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVIJsonObject@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VPublishingLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVPublishingLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVRSAKey@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VRSAKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCKeyBlob@@@std@@
.?AV?$_Ref_count@VIssuer@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVIssuer@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VSignature@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVSignature@JsonLicenses@InformationProtection@Microsoft@@
.?AVUserCertPublicData@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUserCertPublicData@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVIssuedTo@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIssuedTo@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VHeader@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVHeader@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VSessionKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVLicense@JsonLicenses@InformationProtection@Microsoft@@
.?AVContentKey@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VPolicy@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVPolicy@JsonLicenses@InformationProtection@Microsoft@@
.?AVSessionKey@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VContentKey@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVCustomPolicy@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCustomPolicy@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VUserRights@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVUserRights@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VFileStoreObject@store@@@std@@
.?AV?$_Ref_count_obj@VStorePath@InformationProtection@Microsoft@@@std@@
.?AVStringArray@@
.?AV?$_Ref_count@VStringArray@@@std@@
.?AVEntry@@
.?AVCDRMCBase@@
.?AVCMetaData@@
.?AVCIssuanceLicense@@
.?AVCCLCPubData@@
.?AVCRight@@
.?AVCRACPubData@@
.?AVCUser@@
.?AVIIssuanceLicense@@
.?AVCNameValue@@
.?AVCUsagePolicy@@
.?AVJsonIssuanceLicense@@
.?AVICacheElement@Common@FoundationServices@Microsoft@@
.?AV?$_Ref_count@UIpcUserPrincipal@InformationProtection@Microsoft@@@std@@
.?AVIPPUserIdentity@InformationProtection@Microsoft@@
.?AVIppIdentityManager@InformationProtection@Microsoft@@
.?AVIIppIdentityManager@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIPPUserIdentity@InformationProtection@Microsoft@@@std@@
.?AVCIppUserEnv@InformationProtection@Microsoft@@
.?AVIppRefBase@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_7c908d602da9ae1eadbc57a955ecd0d4>@@$0A@@std@@V?$allocator@V?$_Func_class@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@@2@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@2@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U62@U62@U62@U62@@std@@
.?AV?$_Func_base@V?$shared_ptr@VIPLLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@
.?AV?$_Ref_count@VIIpcContext@InformationProtection@Microsoft@@@std@@
.?AVIPPLicenseStore@InformationProtection@Microsoft@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_89ae7c55f310c536b714b20c52a8d5ed>@@$0A@@std@@V?$allocator@V?$_Func_class@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@@2@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@2@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U62@U62@U62@U62@@std@@
.?AV?$_Ref_count@VMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Func_base@V?$shared_ptr@VICLCLicense@InformationProtection@Microsoft@@@std@@PBGABV?$shared_ptr@VIIpcContext@InformationProtection@Microsoft@@@2@U_Nil@2@U42@U42@U42@U42@@std@@
.?AV?$_Ref_count@VDelegationLicenseAcq@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VIEULLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCLicenseAcq@@@std@@
.?AV?$_Ref_count@VCPreLicenseAcq@@@std@@
.?AV?$_Ref_count@U_IPC_CONNECTION_INFO@@@std@@
.?AV?$_Ref_count@VConnectionInfoCacheKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$autosrwlock@VReaderWriterLock@Common@FoundationServices@Microsoft@@@Common@FoundationServices@Microsoft@@@std@@
.?AV?$_Ref_count@VCUserIdentityCacheKey@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@UIPP_ID_REGVALUES@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@U_IPP_USER_FROM_CONNECTION_INFO@@@std@@
.?AVUserConsent@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUserConsent@InformationProtection@Microsoft@@@std@@
.?AVIUserConsent@InformationProtection@Microsoft@@
.?AVConnectionInfoCacheKey@InformationProtection@Microsoft@@
.?AVIUserIdentities@InformationProtection@Microsoft@@
.?AVUserIdentities@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUserIdentities@InformationProtection@Microsoft@@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_23af9fc2cc98efe4c7e085312561f955>@@$0A@@std@@V?$allocator@V?$_Func_class@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@@2@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U72@U72@U72@@std@@
.?AV?$_Ref_count@VIPLLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Func_base@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_4062061318405ab7eeb27b534784375d>@@$0A@@std@@V?$allocator@V?$_Func_class@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U52@U52@U52@@std@@@2@XV?$shared_ptr@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@AAV?$vector@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIEULLicense@InformationProtection@Microsoft@@@std@@@2@@2@AAV?$vector@JV?$allocator@J@std@@@2@U_Nil@2@U72@U72@U72@@std@@
.?AV?$_Ref_count@V?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@
.?AV?$_Ref_count@VOfflinePL@InformationProtection@Microsoft@@@std@@
.?AVWin7IppLicense@InformationProtection@Microsoft@@
.?AVIIppLicense@InformationProtection@Microsoft@@
.?AVIIppObject@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VWin7IppUser@InformationProtection@Microsoft@@@std@@
.?AVWin7IppFactory@InformationProtection@Microsoft@@
.?AVIIppFactory@InformationProtection@Microsoft@@
.?AVIIppTemplate@InformationProtection@Microsoft@@
.?AVTemplateManager@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VWin7IppKey@InformationProtection@Microsoft@@@std@@
.?AVWin7IppLicenseWithMetadata@InformationProtection@Microsoft@@
.?AVIIppLicenseWithMetadata@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VLicenseMetadata@InformationProtection@Microsoft@@@std@@
.?AVTestWin7IppFactory@InformationProtection@Microsoft@@
.?AVTestWin7IppLicense@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VNameValueList@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_del@GV?$FreeArrayObject@PAG@@@std@@
.?AVUrlIterator@InformationProtection@Microsoft@@
.?AVIUrlIterator@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUrlIterator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$vector@V?$shared_ptr@VIIpcToken@InformationProtection@Microsoft@@@std@@V?$allocator@V?$shared_ptr@VIIpcToken@InformationProtection@Microsoft@@@std@@@2@@std@@@std@@
.?AV?$_Ref_count@U_IPC_PROMPT_CTX@@@std@@
.?AV?$_Ref_count@U_IPCP_TOKEN@@@std@@
.?AVIpcContext@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIpcContext@InformationProtection@Microsoft@@@std@@
.?AVIIpcContext@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VIIpcToken@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VTemplateIssuer@InformationProtection@Microsoft@@@std@@
.?AVTemplateIssuer@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VConnectionInfo@InformationProtection@Microsoft@@@std@@
.?AVLicenseState@InformationProtection@Microsoft@@
.?AVIppObject@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VTemplateInfo@InformationProtection@Microsoft@@@std@@
.?AVTemplateInfo@InformationProtection@Microsoft@@
.?AVILicenseMetadata@InformationProtection@Microsoft@@
.?AVLicenseMetadata@InformationProtection@Microsoft@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VDeserializeTreeNode@Implementation@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@I@2@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@Serialization@@@std@@
.?AVScopedActionInterface@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VDeserializeTreeNode@Implementation@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKeyParameter@Implementation@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@I@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKeyParameter@Implementation@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@VDeserializeTreeNode@Implementation@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@I@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCPolicyList@InformationProtection@Microsoft@@V?$allocator@VCPolicyList@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCVersionSpan@InformationProtection@Microsoft@@V?$allocator@VCVersionSpan@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AVCBaseLicense@InformationProtection@Microsoft@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCAppSpecificData@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@VCRightListHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@2@@Serialization@@
.?AVCPLLicense@InformationProtection@Microsoft@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeConditionHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPolicyList@InformationProtection@Microsoft@@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCVersionSpan@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCVersionSpan@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCAppSpecificData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$DeserializeTreeLeaf@VCTimeConditionHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightListHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCAppSpecificData@InformationProtection@Microsoft@@V?$allocator@VCAppSpecificData@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeConditionHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$DeserializeTreeVectorNodeLeaf@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPolicyList@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightListHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$DeserializeTreeLeaf@VCPublicKey@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$DeserializeTreeLeaf@VCSignature@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@
.?AVXmlConfiguration@Serialization@@
.?AV?$ProtocolConfiguration@VXmlReader@Serialization@@@Serialization@@
.?AV?$DeserializeTreeVectorNodeLeaf@VCPublicKey@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCSignature@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeRange@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@VCLicenseVerificationData@InformationProtection@Microsoft@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCTimeRange@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCLicenseVerificationData@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCLicenseVerificationData@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AVXmlReader@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCSignature@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPublicKey@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$DeserializeTreeLeaf@VCTimeRange@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCSignature@InformationProtection@Microsoft@@@Serialization@@
.?AVXmlProtocol@Serialization@@
.?AV?$CSerializer@VXmlReader@Serialization@@@Serialization@@
.?AVProtocolBase@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCSignature@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPublicKey@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count_obj@VTimedActivity@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCBaseLicense@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Func_base@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@std@@U45@U45@U45@U45@U45@@std@@
.?AV?$_Ref_count@VCSignature@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count_obj@V?$AutoActivity@VTimedActivity@InformationProtection@Microsoft@@@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCBaseLicense@InformationProtection@Microsoft@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$DeserializeTreeLeaf@VCPrincipal@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCPrincipal@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCPrincipal@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Func_impl@U?$_Callable_obj@V<lambda_b2402f422e89926f091f437199932c66>@@$0A@@std@@V?$allocator@V?$_Func_class@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@std@@U45@U45@U45@U45@U45@@std@@@2@XAAVTimedActivity@InformationProtection@Microsoft@@U_Nil@2@U72@U72@U72@U72@U72@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCBaseLicense@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@VCLicense@InformationProtection@Microsoft@@@std@@
.?AVCLicense@InformationProtection@Microsoft@@
.?AV?$DeserializeTreeLeaf@V?$shared_ptr@VCSignature@InformationProtection@Microsoft@@@std@@@Implementation@Serialization@@
.?AVCEULLicense@InformationProtection@Microsoft@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRightNameSetHelper@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@VCEULLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRightNameSetHelper@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@VCRightNameSetHelper@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$_Ref_count@VCRACLicense@InformationProtection@Microsoft@@@std@@
.?AVCRACLicense@InformationProtection@Microsoft@@
.?AVDeserializeTreeGetSourceNode@Implementation@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeInterval@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCRight@InformationProtection@Microsoft@@V?$allocator@VCRight@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCTimeInterval@InformationProtection@Microsoft@@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$DeserializeTreeLeaf@VCVersionSpan@InformationProtection@Microsoft@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCUsagePolicy@InformationProtection@Microsoft@@@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@VCUsagePolicy@InformationProtection@Microsoft@@V?$allocator@VCUsagePolicy@InformationProtection@Microsoft@@@std@@@std@@@Implementation@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@G@2@@Serialization@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRight@InformationProtection@Microsoft@@@2@@Serialization@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCRight@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRight@InformationProtection@Microsoft@@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@G@2@@Serialization@@@std@@
.?AV?$_Ref_count@V?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@V?$NamedElement@VCUsagePolicy@InformationProtection@Microsoft@@@2@@Serialization@@@std@@
.?AV?$SerializerScopedAction@V?$CSerializer@VXmlReader@Serialization@@@Serialization@@VCRight@InformationProtection@Microsoft@@@Serialization@@
.?AV?$DeserializeTreeLeaf@V?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@Implementation@Serialization@@
.?AV?$_Ref_count@VUserCert@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVUserCert@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCCLCLicense@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCJsonCLCLicense@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVUserCertPrivateData@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUserCertPrivateData@JsonLicenses@InformationProtection@Microsoft@@@std@@
.?AVAcquireContext@CLicenseAcq@@
.?AV?$_Ref_count@VAcquireLicenseContext@CLicenseAcq@@@std@@
.?AVCLicenseAcq@@
.?AVAcquireLicenseContext@CLicenseAcq@@
.?AV?$_Ref_count@VAcquireDelegationLicenseContext@DelegationLicenseAcq@InformationProtection@Microsoft@@@std@@
.?AVDelegationLicenseAcq@InformationProtection@Microsoft@@
.?AVAcquireDelegationLicenseContext@DelegationLicenseAcq@InformationProtection@Microsoft@@
.?AV?$_Ref_count@$$CBV?$vector@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@
.?AVCPreLicenseAcq@@
.?AV?$_Ref_count@VAcquirePreLicenseContext@CPreLicenseAcq@@@std@@
.?AVAcquirePreLicenseContext@CPreLicenseAcq@@
.?AV?$_Ref_count@VRevocationDetails@@@std@@
.?AVRevocationDetails@@
.?AV?$_Ref_count@VRegistryBasedLocator@InformationProtection@Microsoft@@@std@@
.?AVWindowsScpLocator@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VUnknownIdentityTypeLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VGlobalServiceLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VProvidedUrlBasedLocator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VWindowsScpLocator@InformationProtection@Microsoft@@@std@@
.?AVIServiceLocator@InformationProtection@Microsoft@@
.?AVGlobalServiceLocator@InformationProtection@Microsoft@@
.?AVProvidedUrlBasedLocator@InformationProtection@Microsoft@@
.?AVUnknownIdentityTypeLocator@InformationProtection@Microsoft@@
.?AVRegistryBasedLocator@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VDnsResponse@InformationProtection@Microsoft@@@std@@
.?AV?$_Node_class@GV?$regex_traits@G@std@@@std@@
.?AV_Node_if@std@@
.?AV_Node_end_group@std@@
.?AV_Node_end_rep@std@@
.?AV_Node_back@std@@
.?AV?$_Ref_count@VDomain@InformationProtection@Microsoft@@@std@@
.?AV?$collate@G@std@@
.?AV_Node_base@std@@
.?AV_Root_node@std@@
.?AV?$_Node_str@G@std@@
.?AV_Node_assert@std@@
.?AV_Node_rep@std@@
.?AV_Node_capture@std@@
.?AV_Node_endif@std@@
.?AVCRMTemplateAPI@@
.?AV?$_Ref_count@VCDRMStore@@@std@@
.?AV?$_Ref_count@VCRMTemplateAPI@@@std@@
.?AVDomElement@@
.?AV?$DomElementBase@VDomDocument@@@@
.?AVDomDocument@@
.?AV?$enable_shared_from_this@VDomDocument@@@std@@
.?AVMSXmlDomDocument@@
.?AV?$_Ref_count@VMSXmlDomElement@@@std@@
.?AV?$_Ref_count@VMSXmlDomDocument@@@std@@
.?AV?$enable_shared_from_this@VMSXmlDomElement@@@std@@
.?AV?$DomElementBase@VMSXmlDomElement@@@@
.?AVMSXmlDomElement@@
.?AV?$ScopedActionImpl@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@ZXV12@ABV34@U_Nil@4@U54@U54@U54@U54@U54@@std@@PAVXmlReader@Serialization@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@U_Nil@2@U62@U62@U62@U62@@std@@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PAVXmlReader@Serialization@@U_Nil@2@U52@U52@U52@U52@U52@@2@@@
.?AV?$_Ref_count@V?$IndexedTree@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@@@std@@
.?AV?$IndexedTree@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@@
.?AV?$_Ref_count@V?$ScopedActionImpl@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@ZXV12@ABV34@U_Nil@4@U54@U54@U54@U54@U54@@std@@PAVXmlReader@Serialization@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@U_Nil@2@U62@U62@U62@U62@@std@@V?$_Bind@$00XU?$_Pmf_wrap@P8XmlReader@Serialization@@AEXXZXV12@U_Nil@std@@U34@U34@U34@U34@U34@U34@@std@@PAVXmlReader@Serialization@@U_Nil@2@U52@U52@U52@U52@U52@@2@@@@std@@
.?AVDomMultiSelect@DomQuery@@
.?AVChildren@DomQuery@@
.?AVTimedActivity@InformationProtection@Microsoft@@
.?AVCCLCLicense@InformationProtection@Microsoft@@
.?AVRevokeObject@JsonLicenses@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VRevokeObject@JsonLicenses@InformationProtection@Microsoft@@@std@@
<>:"/\|?*-
*************** System/App Info **************
* Could not get System/App Info
******************************************
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Active Directory Rights Management Services Client
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
winmsipc
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
winmsipc.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
CHANT
Microsoft-RMS-MSIPC/Debug
EventData
Value
Value
PRVA<
Microsoft-RMS-MSIPC
win:Error
win:Warning
win:Informational
win:Verbose
MSIPC
IPViewer
OfficePlugin
WEVT_TEMPLATE
en-US
1?3@5
8 818Q8r8v8|8
9&9a9k9
:1:;:Q:[:u:
;1;Q;q;
<!<&<0<Q<[<q<v<
=1=;=Q=[=q={=
>1>;>Q>q>{>
?6?;?Q?[?q?{?
0!0+0A0K0a0f0p0
1!1A1K1a1
2!2+2A2a2k2
3 3A3K3a3k3
4!4&404Q4[4q4{4
51565;5E5a5f5p5
616Q6[6q6v6
7 7A7K7a7k7
8!8+8A8F8P8q8{8
91969@9a9k9
:!:&:0:Q:[:q:
;!;&;0;Q;[;q;v;
< <A<K<a<f<p<
=1=;=Q=V=`=
>!>A>K>a>f>p>
?!?+?A?K?a?f?p?
0!0&000Q0[0q0v0
1 1A1F1P1q1v1{1
2!2+2A2F2P2q2{2
31363@3a3k3
414;4Q4[4q4{4
515Q5[5q5
6!6+6A6F6P6q6{6
838e8
<O<W<
===M=i=
?4?X?e?
0$0K0X0
1#1G1{1
1)2x2
2M3S3_3j3
3<4M4
5F5b5
5:6G6
7L7]7j7~7
808P8f8
9*9D9U9
9>:H:~:
;);B;T;v;
;R<Y<e<p<
3:3t3
5'5/5?5G5\5d5q5y5
6-6J6V6_6k6
8A8M8
8!9-9l9
;1;U;_;n;
<)<&=0=
2"2;2F2e2n2t2y2
3%373@3L3T3f3
4/484A4G4L4Q4X4`4u4
868F8Z8
9,9Y9m9s9
;(;D;Q;V;j;w;|;
<"<3<?<R<e<x<
=%=;=Q=g=}=
>,>B>j>
?(?>?U?
0-0C0Y0o0
151K1a1w1
2%292M2a2u2
3)3=3Q3e3y3
9I9]9c9
;:;@;f;
<*<s<
=Z=s=Y>j>{>
?W?_?i?q?
0F0T0u0
1)1W1
2M2{2
3:3N3U3
4>4|4
5W5a5q5
6,666<6A6K6P6w6
7"7-777G7s7
8#8.8G8Q8
8%969c9h9r9y9
:$:Y:i:v:
;:;h;r;
;'<S<]<m<
=!=O=Y=i=}=
>F>P>`>|>
>#?L?V?f?
1;1`1
2!242?2K2f2
253X3
4%4B4q4
5(5-5N5f5p5
6)6V6t6
8$8m8
8!9+9;9f9u9
:5:K:
;";T;
<T<x<
=!=,=^=h=x=
>'>2><>L>k>
?)?I?S?c?t?
2<2_2p2
3%303a3
545i5
6*6r6w6
7#7H7Y7
9?9D9N9U9`9
;8;T;o;
;3<=<M<f<p<
=7=V=`=p=
>>>g>
?'?7?V?`?p?
0"0v0
0 1V1
2D2I2S2Z2e2
454?4O4m4w4
4)5;5E5U5s5
7>7C7M7T7_7
8%9C9s9
9#:(:2:9:D:x:
;&;:;I;h;
<7<A<Q<p<z<
=3===M=k=x=
>5>K>U>e>
? ?0?V?j?
0%050v0
1.181H1p1
1+252E2d2n2~2
3%3@3f3{3
4 4O4Y4i4
5 5?5I5Y5
6 6*616<6C6H6R6Y6d6k6p6z6
7#737G7\7f7v7
9$9/9w9
9#:n:
;/;M;W;g;
<+<5<E<t<
>,>D>Z>r>
?+?0?:?A?L?
0f0y0
3(333=3M3l3
4 404L4V4f4
505P5p5
6-6=6S6u6
7*7D7I7S7Z7
7G8s8}8
989[9l9
:#:x:
:%;L;Q;[;b;m;
<&<7<E<O<_<~<
<&=<=W=
>V>{>
>(???
010P0k0
1%1j1t1
3G3n3s3}3
3<4L4Z4d4t4
535J5
6@6J6Z6~6
6A7k7p7u7
8/8U8z8
959:9D9K9m9v9{9
9$:>:[:d:
:N;X;h;
<8<\<m<
=M=R=\=c=n=
>,>u>
?B?j?o?y?
0)0p0
131{1
2%2s2~2
3'373X3o3
474H4^4v4
4J5T5d5
616;6K6\6j6t6
778i8
8+9O9v9{9
:":':1:8:H:R:b:
; ;Z;d;t;
<Q<V<`<g<r<
=&=-=8=C=M=]=z=
>E>O>_>
?'?O?
0.0_0i0y0
1>1e1x1
2 202A2W2~2
3!3+303
4+4h4s4
4(5?5e5
5;6@6J6Q6\6
7(7\7f7v7
9:9A9g9
:H:_:
;,;D;y;~;
<)<9<a<
=E=}=
>%>,>7>
>(?C?\?
0P0U0_0f0q0
1'171K1
3;3a3
4N4u4z4
5 5d5
6"6,6<6X6b6r6
727H7R7b7v7
8T8^8n8
9-9A9\9m9
9 :):.:3:A:L:Z:
;&;6;F;
<'<.<U<
<#=7=B=n=x=
>7>Z>k>
>4?9?C?J?U?
0(0/0:0\0f0v0
1?1P1k1
2#2*252c2m2}2
2,3`3
4J4^4
565u5
666I6d6n6~6
7-7|7
8'808E8X8
9"9,9<9j9t9
9&:0:@:]:g:w:
;+;R;
<:<D<T<x<
<$=G=X=s=
>B>L>\>u>
?3?@?R?\?l?}?
0$0A0\0
1%1H1w1
3:3a3f3p3w3
4(4?4^4
5P5U5_5f5q5
6S6]6m6
7#737g7
898?8D8N8U8`8k8u8
9@9Q9g9
:5:?:O:j:t:
;-;F;P;`;x;
;#<K<_<h<
=#=.=\=
?*?E?`?
0)0E0O0_0{0
1%1/1?1]1g1w1
1Q2[2k2
233i3
3'4a4
565E5x5
6)636C6d6
7 7=7p7
919G9
:(:2:B:[:e:u:
;';7;_;
;5<?<O<
='=1=\=o={=
> >2>G>Q>W>j>
?-?7?\?f?v?
060g0l0v0}0
2 2*212<2G2P2z2
3.333=3D3O3
3,4V4x4
4.5?5l5q5{5
6$6/6:6D6T6x6
767Y7j7
8&8Y8c8s8
9=9X9k9v9
:>:}:
;(;[;
;"<J<O<Y<`<k<
=)=A=u=z=
>+>6>S>m>
?%?0?:?J?v?
0 0*010<0e0o0
1#1.191C1S1s1
2#2.2G2y2
2?3P3
3.44494C4J4U4`4j4z4
5D5I5S5Z5e5
6 6*6:6W6p6{6
7)777U7p7
8'878V8l8
929M9h9
:":-:t:
:(;?;
<C<M<]<v<
=8>O>
?f?k?u?|?
060@0P0a0h0y0
2/2Q2
2!3+3;3Z3f3
566G6b6u6
7E7R7
<X<i<
=)==>M>a>
?(?.?
0J2^2d2
7M7`7g7w7
i0p0g1
123D3Y3
6!646<6[6c6v6~6
7&757O7|7
:@;o;
<.===
=/>4>
>"?i?
3F3k3x3
424W4d4x4
666f6
=N=g=
>%>.>:>G>`>j>
?c?p?
1%2g2
293Y3}3
394^4k4
7/767N7U7
7'898M8R8Y8^8
:&:\:
:';>;\;m;r;|;
;><C<M<R<}<
>&?g?
0,1G1
112Z2
3/3Y3
394I4U4Z4d4k4{4
4N5^5c5r5w5
7(717Q7Z7z7
818;8K8_8
9#9*9:9Q9U9Y9]9a9e9i9m9}9
99:>:H:O:t:y:
:/;9;I;
<Q<~<
<*=6=C=|=
>&>0>=>D>R>W>d>r>z>
?W?`?i?r?|?
0H0V0
4(4B4Q4]4g4
5-575Z5k5v5}5
586n6{6
7<7F7
8Z8d8t8
9f9r9
:*:4:D:
;);9;R;\;l;};
<4<><N<_<s<
<2=<=L=u=
=2>a>
>J?W?v?
0%0/0?0c0q0
2F2P2j2
333]3t3
4B4L4V4f4
5'575[5e5u5c6A7W7v7
8*8H8s8
><>X>s>
?"?^?j?
0a2n2
3(3x3
4$4;4G4N4S4Y4e4r4
5J5t5
5"6R6Y6f6m6{6
757H7d7
9/9q9w9
:-:<:^:
;C<P<Z<
>i>z>
(050N0a0
1=1J1~1
132N2U2[2i2t2
2A3u3
4'4T4^4n4
5'575s5
5(626B6Y6c6s6
6%7/7?7q7{7
7=8R8
969d9n9~9
:):>:^:h:x:
;';1;A;f;p;
<$<9<{<
=#=3=W=l=
>3>Q>[>k>
?"?7?W?a?q?
040>0N0r0
1,161F1[1y1
212;2K2q2{2
3<3Z3d3t3
4%4C4X4
4&5S5h5
6/6M6W6g6
707Z7v7
8.8H8[8e8u8
9W9a9}9
;H;t;~;
<R<a<
=#=(=2=9=K=h=n=s=}=
>">,>1>D>Q>W>\>f>m>x>~>
?A?R?y?
!0,010;0@0g0r0w0
101W1a1f1p1u1
2"2)2;2~2
3:3?3I3N3a3r3x3}3
3\4a4k4p4
5L6m6
737m7
8 808J8~8
909k9
:f:}:
?B?j?
*0v0}0
1\1a1k1r1
2G3N3
3b4g4q4x4
7E7[7~7
7E8Z8t8
989B9p9
:+:i:
;/;[;e;u;
<H<R<_<
=#=3=S=}=
=&>1>m>
>0?U?l?
5#5>5Y5`5j5
6:6C6Q6
8#8@8K8v8G9c9
9!:/:9:I:f:y:~:
;$;X;
=*=G=b=j=
>%>G>T>^>n>
>%?T?n?
1(2B2\2x2
3A3S3e3o3
354Q4`4q4
415L5e5t5
6C6M6Z6|6
7(787B7R7
959?9Q9V9`9e9
;,;8;?;G;O;b;z;
<(<U<s<y<
>/>x>
><?B?
4G4[4b4i4
?-?;?\?o?
0%0O0\0z0
5'5|5
6,6D6
6#7]7
:E;Z=
585H5Z5
969?9H9f9
;E;t;
>A>N>n>w>|>
?8?B?R?t?
0-0O0o0y0
222<2L2
3_3r3,4=4
535s5
63696t6
9%9:9
9.:8:H:b:
:d;4=G=V=f=
=9>F>R>b>
474Q4
546C6P6p6}6
7%7=7[7
7 8z8
:^;d;
>F?n?
#0>0Y0|0]1
4O4{4
6F7q7
8#8:8M8
8,9D9S9
93:=:
<<=_=w=
>\>|>
?$?s?
2X3E4
6J6T6v6
;?;L;l;u;z;
=F=^=d=
>G>T>t>}>
2:2A2Q2j2v2|2
434Y4
4C5R5\5l5
676H6
687E7O7_7
8,8]8k8u8
9A9M9Z9d9t9
:%:5:O:|:
;$;:;`;
<c=r=
?'?L?
162N2Z2l2u2
3(3?3
4#4@4q4
5$5O5
7 7&7,717S7e7
8>8N8e8
9;9 :
:>;c;
<a<g<
<%=L=[=
3F3o3
5A5s5
5!6U6w6
7U7\7m7
:A:H:X:u:
:&;?;N;b;q;
<U<e<m<s<
=8=P=
=#?E?
3[3l3
8?9V9
9!:;:E:K:
;<;F;L;
<4<H<U<_<o<
?H?~?
1Z2x2
3V3g3x3
4J4[4x4}4
6:6G6X6b6r6
8$8D8R8`8f8s8
9:9A9Q9l9v9|9
;&;5;C;Q;`;g;w;
< <w<
>.>O>j>}>
>;?S?d?i?s?
1$1F1Y1
2,2;2E2U2
2a3k3{3
3$4Z4
6&6<6Q6q6v6}6
7$7)707A7N7_7d7k7p7
8/8X8r8
9>:r:
1'191K1]1o1
222l2
3X4!5
7%8H8
:`;s;
=c=I>
474U4
94:K:q:
0'1\1e1~1
3x3}3
3%4/4?4Z4d4t4
5K5U5e5
7^7h7x7
8%8/8?8`8j8z8
:.:::I:U:k:
;K;U;e;
<!<B<L<\<w<
<$=.=>=c=m=}=
>#>7>Q>[>k>~>
?-?7?G?]?v?{?
0 0*0:0Y0k0u0
131=1M1h1r1
2:2D2T2p2z2
3(383T3Y3c3h3w3
4;5H5~5
8"8^8
:5;c;
1N2[2x2
6f6s6
=B=G=Q=V=e=
? ?%?a?
70I0N0X0]0l0q0{0
1"1'11161E1J1T1Y1v1
2-222<2A2
203C3z3
6/646>6C6
667;7E7J7
8<9(:{;
<K=Z=
3]3m3F4
4;5K5$6
f0s0Y1e1
1b2q2
5.676o6
1\2p2w2
30373L3n3
344N4T4[4
686H6R6l6
607P7n7{7
8!8-8Y8y8
9>:J:X:m:
;7<C<J<U<\<g<n<y<
<*=h=
?1?M?z?
0,0m0
1,1M1i1r1
2%2D2a2q2
616H6
7,7=7L7[7j7y7
8'8P8h8
:<;O;
<t=~=
>;>R>
?6?;?E?J?
0>1N1
2S3n3u3
4%5.5:5
5 6f6|6
7 7'7A7O7\7x7
8Z8x8
:G:M:Y:k:
:0;o;
;7<K<W<
?/?E?L?
031J1t1
162o2
2/3Y3
4E4K4Q4X4b4i4x4
636:6?6I6N6
8!8@8W8\8f8k8{8
9!9*959G9L9V9[9
<U<]<
>2>@>
>/?v?
0>1S1X1b1g1O2[2u2
3#3(33393W3a3i3n3|3
595E5}5
5Y6e6
7f7p7
7[8h8s8
9K9Y9
:%:y:
=X=]=
=.>3>=>B>T>e>m>
?!?-?j?r?
0)0<0F0V0z0
1"1<1F1c1m1}1
2%2k2u2
313Q3[3k3
424I4S4c4
8"878C8H8R8W8g8o8t8~8
:$:;:Y:f:m:
>E>T>\>f>p>x>
>+?4?;?L?y?~?
0A0F0P0U0n0x0
2!2M2v2
3>3G3U3g3m3
4D4I4R4W4p4
5&676f6s6
707:7J7[7f7k7|7
81898C8Y8c8s8
869W9#:
=F>U>
?4?R?^?
2W304r4
6V6b6
6;7H7
7 8\8|8
8'9K9
9I;V;{;
;]<w<
<C>V>
2H2n2w2
2+333
3'4A4R4
5$5Y5r5
6,656B6P6
7)787j7}7
:[;n;
>&>U>
?'?8?B?b?
3!4A4e4
5#6/6<6P6
7(7/767G7S7p7w7
878A8d8
8 989L9
:S:j:t:
<<=F=V=
=+>[>m>
> ?@?N?
3<4V4^4d4
4<5A5H5M5s5x5
606C6a6k6
6-7V7
7U8b8u8
8!9'969U9^9m9
;I;Q;
;4<V<h<
=%=C=J=Z=a=n=|=
>=>P>b>i>y>
>:?]?
%0=0D0T0s0
161Z1
2)2;2K2R2b2w2
2(373C3J3Z3l3s3
4(4B4S4
4;5o5
6$6A6e6
757Y7
:1:9:
;B;c;m;z;
;H<q<
>K>]>d>t>
?,?N?
?0L0Z0m0t0
1,1@1]1
383B3O3e3l3|3
6?6I6Y6
828n8
9O9^9
:7:{:
=/=6=F=c=
>">6>b>v>
121=1B1W1e1l1|1
2-2N2p2
4C4W4i4|4
5.5D5k5u5
6(6B6
6>7N7
8#8a8
9@9c9q9
:':=:
:8;Y;
;e<u<
?H?\?y?
2$242E2K2R2X2n2
313`3j3z3
3G4R4c4h4r4
4B5r5
6#626:6Q6s6
6B7r7
8B8h8}8
9/969B9H9M9a9
:":3:H:S:Y:^:
;?;N;
;<<z<
=)=9=]=
>3>N>u>
&0@0e0
1%2R2
4%5A5M5
6\7i7o7|7
:J:j:
<6<J<2=7=A=H=w=~=
>'>/>6>T>c>
>B?G?T?[?
0)0.090>0]0g0
0/1O1T1^1c1~1
1w2|2
3<3A3K3P3w3|3
4(454F4K4U4l4y4
5M5Z5
5C6M6p6
707=7I7d7o7v7
808;8D8m8x8
9-9?9X9]9g9l9
;B;V;p;
= =-=Q=v=
>&>B>K>^>j>
?Z?q?{?
1#181B1R1o1
2'2?2s2
3-3T3
4+4I4S4s4
5,626\6f6
6&777
7Y8l8
9L9l9
9@:u:
;D;N;
=7=i=
=+>W>
?)?9?N?X?e?y?
0!0*040A0|0
141o1
2D2P2]2p2
3V3m3
4F4_4h4u4
5$5.5>5a5k5{5
6&606@6z6
979j9
;$;V;l;
=W=^=n=
>8>?>O>l>
3-3O3
7)7$8+868=8
949A9K9i9s9
:-;7;G;a;
;.<t<
<I=f=
=5>5?:?~?
2e3b4
9$949Q9q9x9
<%<2<[<z<
<B=<>
0!0/0<0I0S0c0
1W1]1j1p1
2,2T2s2
3)464V4h4
5?5\5~5
5+6A6s6
6#7n7
828A8y8
9F9i9
: :v:
;1;P;
;!<D<t<
=+=:=K=
==>c>
?7?Z?
1&151o1
1;2N2[2
3U3i3
425v5
6!626C6
848J8d8w8
;H<t<
<R={>
?6?@?P?p?z?
6?6e6r6
4/5z6
6/7e7
909p9
:E:O:_:z:
;G;d;n;~;
>+>2>9>G>Q>]>g>w>
>(?`?
0R1~1
2/3E3_3v3}3
3;4E4U4o4;5H5v5
627?7l7
7E8k8
:%:c:|:
2l394
858X8a8
>O?n?
4D5\5
6&696G6V6h6
707`7w7
889U9v9
91:G:
:0;j;
=:=h=
>,?j?
0-0@0
1(181?1[1b1u1
3'3?3J3c3
444F4S4Z4j4
525=5F5`5m5
6)6>6E6K6R6^6j6u6.757?7w7~7
9W:^:h:
;(;W;^;h;
;'<.<8<S<
=7=A=K=
='>1>;>w>
>'?1?;?w?
0g0q0{0
1k2u2
2;3E3U3
4%4D4
7$8@8d8
8A9|9):f:
;b<z<
<E=R=`=j=t=~=
070S0o0
0<1G1v1
1\2j2|2
7,8j8n8r8v8z8~8
9,9N9Y9b9
:+:4:_;l;
=.=L=S=c=
=2>;>V>c>
>5?y?
0,030=0Z0|0
1N1S1Z1_1s1
1>2P2j2y2
3?3D3K3R3b3t3y3~3
4"4)494V4
5(5-52595>5R5p5
6!6&6:6A6Q6k6
;#;=;g?
141H1w1
2#3l3
3'454Y4
9"949>9\9f9k9r9
;#;u;
<#<7<><N<n<
< =%=,=3=C=O=Y=^=e=j=
>/>6>;>B>G>
?\?a?f?m?r?
2%2n2
213E3L3Q3^3
5.5b5}5
6.63686?6D6^6e6o6
6'71767=7B7a7
8(8/848;8@8
90:5:<:C:S:a:k:p:w:|:
;";2;<;F;K;U;Z;a;h;x;
<(<L<
=T=]=
>#>(><>p>
?,?E?J?O?V?[?o?v?
@0E0L0S0c0u0z0
1(141>1C1J1O1k1
202@2j2u2
203L3
424{4
4<5E5`5m5
9)909@9]9
:Q:V:]:b:v:
:\;a;h;o;
;5<:<A<H<X<j<o<t<{<
=/=I=
>Y>}>
>)?3?8???
1$181j1
2&2B2|2
3)303@3]3|3
4-44494@4E4a4
5 595
6c6h6o6v6
7 7'7.7>7E7U7e7j7t7y7~7
99:C:H:O:
;,;1;6;=;B;\;c;m;
;1<8<=<D<K<[<b<r<
=&=o=
=Q>Z>p>
?+?8?=?D?
2<2A2F2M2R2f2
3%4*4/464;4O4
6"6'6,63686L6
717J7O7T7[7`7t7{7
7Q8V8]8d8t8
9(969@9E9L9Q9y9~9
:%:c:j:o:
:O;T;[;b;r;
<:<?<F<M<]<o<t<y<
<%=7=<=C=J=f=m=r=y=~=
?8?=?B?I?N?_?
525{5
7O7X7s7
868;8@8G8L8`8
:%:?:X:]:d:k:{:
:S;X;_;f;v;
<#<(</<6<R<Y<^<e<j<
>$>)>0>5>
?"?'?.?5?E?L?\?v?
132t2
383?3I3
4$4)40454J4
4N5S5Z5a5q5
6$6+626B6I6Y6s6
8 8%898m8
8$9g9
:%:*:>:E:U:x:
; ;';.;>;P;U;Z;a;f;w;
<'<{<
< ='=,=J=O=V=]=y=
>#>?>F>K>R>W>
? ?:?
#0i0p0
1;2[2b2g2n2s2
3%3,3<3H3s3x3
4+424<4O4T4^4c4j4q4
5+5U5
;7<[<{<
<8===D=K=[=g=l=|=
=.>3>>>C>J>O>i>p>z>
>C?[?~?
161N1
3!323E3O3V3f3
4`4u4
5k5u5
6%6<6F6V6
6'7F7P7`7
868_8k8
9B9]9w9~9
;/;U;_;o;
<8<D<O<Y<i<
<>=C=M=R=
>;>w>
>H?R?b?
0H0R0b0
1&101:1n1x1
3.4L4
4"505
6[6t6
7?7W7
8!8E8\8?9s9z9
: :V:
<*<1=;=K=y=
>->7>G>x>
030e0o0
1$141
1(222B2f2y2
323<3L3r3
4'4:4D4T4n4
5#565@5P5j5}5
636F6P6`6
7,7R7e7o7
8$848N8a8k8{8
9 909J9]9g9w9
:,:B:U:_:o:
:(;R;_;i;y;
<'<1<A<c<
='=G=p=$?<?
1<1f1p1
1Z2w2
4!4?4Z4v4
5+555E5b5
7.757B7I7[7
8"8A8
:l;t;
;0<;<
=$>8>c>
>Q?`?j?z?
0&101@1
2V2`2p2
4[5m5
5!6+6<6F6V6
7.7M7
7 8<8v8{8
:r:}:
=*=M=o=~=
>+>?>N>t>
>4?J?m?
0*0d0z0
071F1P1`1
3/3E3i3
6,6P6g647>7N7z7
8&808@8n8x8
9:9U9c9r9|9
9&:E:
;,;N;N<]<l<
=%=4=G=g=v=
?%?,?3?:?J?T?d?t?x?|?
0)070W0h0
1%1/1?1d1
405T5
6%6+606;6A6I6O6U6[6a6g6m6s6y6
7,787?7Q7[7k7
7*8<8Q8
8E9O9_9
:S:]:m:
;8;B;R;l;
;&<=<D<\<j<
=+=E=\=
>6?=?M?e?
1!111Y1q1
262D2T2c2m2}2
353H3U3_3o3
304C4T4a4k4{4
5=5F5L5]5k5x5
6#636P6Z6d6
7U7_7o7
8>8H8X8u8
9<9G9O9Y9v9
:%:/:?:e:w:
;+;5;E;
<<<C<S<
=3=?=I=r=|=
>%>->3>G>Q>a>
?!?@?F?L?Y?c?
0=0S0
2'2K2
3!3'353=3o3
4;4A4G4T4_4e4
5=5M5}5
5(6;6
747e7k7q7~7
8/8V8s8y8
9,9U9[9a9
9,:o:
<0<><P<V<\<i<s<
=(=.=4=A=S=e=k=
='>j>
1D1J1P1s1
2%2+2A2R2{2
2-373
3D4N4^4
5^5h5x5
6#636[6
7C7Y7f7p7
8'878T8
:-:7:G:d:r:
< <1<;<K<h<v<
<!=+=;=X=d=
>a>u>
?6?T?~?
060H0
1&181
2'2,2
3$3H3\3w3
4-4:4D4T4
6-676G6d6r6
7=7`7j7z7
8P8_8
899[9e9u9
:&:A:
;/;V;q;
<E<O<_<
=)=K=
>9>l>
?&?C?R?
0I0S0c0
1#131P1j1
1#242I2Y2e2n2
303=3a3k3{3
4,464F4
505D5[5p5
5&6G6M6
7!7<7Q7m7
728P8X8f8p8
8>9~9
;);X;c;,=9=F=S=i=s=
131F1
5'5G5Q5a5~5
7<8k8r8{8
8!959<9J9\9c9t9
95:R:
;:;N;e;
<0<G<
<4=>=N=
=">,><>
?"?,?<?T?
0$0-0
0*1?1J1`1t1
4$6n6
7$7;7E7U7
7'8=8R8{8
;);?;W;
1G1b1n1
2/2f2
303S3
4p4z4
696K6s6
8P8^9
:;:d:
>6><>P>b>t>
0%0A0V0d0l0z0
1-1<1A1K1P1b1y1~1
1T2Y2c2j2
3'3F3+404:4A4^4~4
5A5u5
676A6K6
8>8\8i8s8
829F9P9`9
:8;?;D;Q;e;k;t;
<&<6<~<
</=L=d=q={=
=)>e>o>
?.?8?B?z?
60@0P0
1 1u1
2^2v2
3+373I3r3|3
4<4C4h4w4~4
5!6(6/696K6\6m6w6
7;7M7x7
8)829D9N9^9{9
>!>2><>L>v>
>Q?^?
0#090p1
4"4*4K4S4[4n4
5$5>5H5u5
6J6Z6a6
6(757}7
9L9p9
:-:J:y:
:';4;;;B;
1%151T1h1
3(3q3
6$6F6u6
697O7V7b7
9!:@:d:n:~:
<C=U=_=o=
?#?7?Q?V?[?o?
060V0N1x1
3*3}3
4&4>4p4
646G6c6
80:]:d:|:
; <r<
F0q0p1
2!3H3
5>5H5X5
7)797
869V9
:A:m:
;$;1;;;I;n;{;
<.=L=
>*>4>D>f>
0&0M0[0d0z0
1L2j2
4'4B4_4
5(5P5g5
6(6O6f6
7 7E7^7
;.;F;
<D<W<m<j=
=)>3>C>t>
><?w?}?
0?0E0
0!1`1
1V2d2q2
3$3*3/353;3P3Y3c3m3
4 4*4:4W4k4
4 5%5/555K5
6<6V6
7O7u7
8Y8|8
8W9c90:r:|:
<(<2<B<Y<d<z<
=.>8>H>t>~>
1.1[1e1u1
5&535^5h5x5
7=7P7v7
72898>8G8{8=9
; ;';A;K;[;x;
<&<e<
=?=`=v=
=H>i>
>/?A?
1'171b1
2$2J2T2b2}2
5.565>5P5X5`5m5
6#6;6S6k6
7Q7[7
949g9
:3:`:
;!;I;&<G<M<a<
=*=L=n=
=$>g>
>*?4?D?h?
0#090P0W0m0
1F1b1h1
2>2r2
3 3.3K3T3f3o3u3|3
4$444
4M5Z5n5x5
839M9x9}9&:@:M:a:
<3<:<J<g<{<
1v1=2i2
3'454:4
;';.;:;G;H=
?,?1?
6P6U6_6d6
:*:v:}:
;!;1;
<.<P<
3$3)3Q3X3c3l3r3w3~3
5/5@5
5N6X6e6y6
7U8j8p8
8@9F9X9
:5:K:Q:e:n:t:
=%>B>j>
>5?:?D?I?]?
0 0%080`0
1Q1_1
4X4~4
435B5f5
5j6~6
<3<><
<:=W=\=b=g=
>_>j>
?$?)?3?8?
@0X0]0g0l0
2"2N2
3#3(3S3e3k3
304n4
5>6T6Y6c6h6
7/7:7A7
8*8~8
9!9+909
9!:.:
:0;7;O;\;f;v;
='>4>>>N>j>
?,?=?B?L?Q?
1&141;1@1J1
2M2R2\2c2
3(343=3l3
5+5A5F5P5U5
6(626B6_6
9A9u9z9
:B;I;b<g<q<x<W=d=i=s=x=
=g?v?
3F3\3a3k3r3
4F5K5U5\5
5%626
7 7*747>7X7e7o7
7?8W8
9!9&9+959:9I9n9
:":':1:6:E:`:
:H;R;b;|;
<j<o<y<~<
=I=r=y=
?#?6?@?P?m?
0 1<1k1u1
2!2&2I2\2o2
2!3+3;3X3
3 4@4
6"6X6b6r6
7I7t7
888`8e8o8
8I9S9c9
:):9:V:
;&;6;Z;q;
<Z<d<t<
=1=V=
>O>Y>i>y>
?Q?m?w?
90_0z0
2*212A2
3"3@3
4&4O4~4
5+5Z5
5^6y6
7.7D7q7
808C8H8R8W8h8m8w8~8
90:`:
:&;B;
<,<k<p<z<
=$>P>
>%?3?8?t?
03080=0G0L0[0x0
0A1K1[1
1d2~2
2P3j3q3
4A4N4
445u526@6
708L8Z8f8q8
=1>D>
0%0-0Q0[0
132f2
6:6A6Q6s6
7'838s8
;Y;v;
<5<~<
>U>a>
>h?s?
0X0f0w0~0
1M1v1
3-3N3d3
4<4]4o4x4
8"808t8
9'919V9n9
:&:D:K:[:
;0;T;\;s;{;
<3<><V<\<b<h<w<
=5=?=O=n=
>.>d>n>~>
?.?8?H?i?z?
0q0{0
3#3:3
424<4L4m4
5$6.6>6q6
7 7*7:7
:K:f:
:2;w;
<8<X<|<
>&>6>S>
?'?D?l?w?
2A3N3X3h3
5.5b5o5y5
556O6V6f6
758`9
:]:r:
;1;i;{;
;!<L<
=;=V=d=k=s=y=
>7?\?f?v?
181w1
2&2B2i2
233O3
5!5H5
5A6r6|6
747`7k7|7
8"9i9
:H:}:
<1<;<K<h<
>&>7>>>E>K>
>/?k?
0 0P0r0
575x5
8%8C8^8y8
999G9Q9[9a9
9):[:j:
:';A;H;X;
<D=~=
S0]0m0
021<1L1l1v1
2;2E2O2
2?3f3p3z3
7 8*8:8f8
;$;8;C;I;
<4<F<K<R<Y<x<
=3=S=d=
>->2>M>
0G1P1U1_1f1
4(4?4q4|4
5C5j5
5H6j6x6
727@7M7W7g7
;;;n;y;
<(<-<
>->8>q>
>"?'?1?8?q?v?
;0@0J0O0a0f0p0
0%121<1L1k1
2!2)2q2~2
3,3Z3
3"4,4<4L4X4
5+5D5_5
5A6V6\6a6k6p6
8%8O8c8h8r8w8
8F9P9`9}9
;.;^;i;
;7<^<
<*=e=j=t={=
>&>6>S>a>j>
?!?7?A?K?f?t?
0*050:0h0s0x0
121|1
333=3M3j3
404J4O4Y4`4
646d6
<F<j<
<&=F=j=
=>>^>
W0r0y0
0\1v1{1
2.232=2D2T2^2n2
393@3\3|3
4u4|4
4E5N5
7D8I8S8Z8-9
;O;n;s;};
;g<l<v<}<
>6>;>y>
?H?o?|?
0B0s0x0
0.1O1g1~1
1>2Z2
3/343>3C3w3~3
3,4D4N4^4
5'5.5o5
5&6J6q6
7P8U8_8d8
9.989H9Y9c9s9
9%:/:?:\:
:&;+;5;<;\;l;q;
<Q<c<h<r<y<
="=,=3=y=
> >%>/>8>_>d>n>u>
1"1,111E1p1u1
2E2O2Y2x2
3B3L3R3o3y3
4K4X4f4q4x4
5+5Z5e5l5|5
8.888H8e8
:8:=:G:L:
;>;q;{;
;$<7<<<F<K<
=$=F=]=
>(>/>?>I>Y>q>
>i?n?x?
1$141F1P1`1
3)393^3|3
4%4,4F4
4B5v5
70757X7]7
8(8?8
8_9<:
=-=E=J=
?E?e?
0L0v0
1%1I1y1
242Y2_2e2
343:3O3w3
465e5
6#6\6d6n6v6
7&8B8b8
:A;F;P;U;
;Y<q<v<
<;=E=U=
>#>=>D?
1B1r1
4#5]5
7,7=7*8
:0:7:A:^:r:
:e;z;
<*<4<D<v<
>%>3>
>S?g?v?
1(181W1f1
3c3u3
4*5a5
5<6F6V6
6$7<7Q7v7
9*9/999@9P9Z9j9#:-:=:[:e:u:
<)<9<`<
<Q=[=k=
=2>Y>c>s>
>>?H?X?
"0,0<0
1q1{1
1W2a2q2
373X3r3
4/4>4
8!818P8g8
8 9A9C:
;&<0<@<
<(=c=m=}=
>,>I>_>
?K?i?
0J0p0v0
0:1J1T1d1~1
2?2f2
3&3,3k3y3
3]4p4
7/797I7f7
8"8A8r8
9,:O:Y:i:
:a;k;{;
>s>}>
?L?u?
131^1
102b2w2~2
3/363F3n3w3
5D5a5
8 9-9;9r9
:(:E:Z:a:
:6;C;W;l;
<)<C<|<
=#>D>I>S>X>g>
>3?g?|?
415Z5r5
6 6/6
6C7V7[7
7S8g8l8
9$9X9g9
9X:g:b;w;
<5<W<
?;?\?y?~?
0!0H0[0}0
0!1*1/191@1X1b1r1
3A4J4f4
5+565;5y5
5,6G6Z6}6
7&7+757<7K7P7Z7_7
8"8,8<8V8
8#9S9
;7;p;
<@<N<
=@=]=b=m=r=
=%>/>?>
?*?4?D?a?
0,0{0
4/444>4E4t4
5A5F5P5U5d5n5
646s6
8/8R8
;J;2<Y<
="=8=a=
>6?N?f?
0,0R0l0
2.292\2
3%353Y3`3p3
4!4(484U4l4r4
4#5-525V5p5{5
6H6^6
7$737G7t7
:4;V;g;q;
</=7=F=
?6?f?{?
0"0?0I0Y0
0/1S1
393i3
3'4W4
5C5]5h5
869G9L9
93:K:W:~:
;+;6;c;
<7<C<
<+=J=
>,>H>V>q>
?3?8?X?
050:0D0
0\1o1y1
3 3i3
4N5g5{5
5+6C6J6Z6
6#7l7
8)8F8P8
9A9P9Z9j9z9
:.:}:
;,;r;x;
<5<L<k<
=5=F=M=o=
>S>Y>c>
?=?b?l?
1J1Q1X1d1q1x1
1+272D2X2h2x2
3#3B3Q3e3l3|3
3W4c4i4n4x4}4
5&565B5H5M5W5\5y5
6-6B6R6\6l6|6
7)797
8$848
9-9G9V9i9
:(:8:]:g:w:
<"<2<:<K<U<e<
>!>->=>L>p>u>
?D?N?^?x?
0+090L0V0f0
1&161[1y1
2<2Q2h2n2t2~2
313K3P3W3^3i3p3
4$41484E4L4Y4`4m4t4
7E7_7!8$9H9
9$:4:|:
<'<[<
<*=C=P=d=
>%>`>
>M?Z?n?
0 0z0
0}1X2
3S4^4n4x4
5e5D6N6^6
7s7C8
030B041d1
2"2F2v2
253=3v3~3
3&4;4a4s4
829b9v9
:V:{:
; ;0;U;
<#<*<5<
=.=8=N=[=`=
>I>v>
>6?X?b?o?
4%4Q4{4
5#535A5K5X5i5w5~5
:9:l:
;4;K;U;e;
;2<<<L<
=L=V=f=
=&>g>
?E?{?
1&222B2V2e2v2}2
263U3n3
5+506P6
7%888
:i:o:
:9;?;M;
=B=x=
=$>1>d>~>
0'050@0E0T0
3^3c3m3r3
5/545>5C5c5u5z5
6.676T6^6
6!7)7L7X7m7
7'8m8
:/:7:A:I:
:0;?;_;
<W=a=
111j1
1.2@243>3N3`3u3
6Q7P9
:(:4:E:S:j:
;(;R;
<M<u<
= =8=c=
>->J>T>s>
?:?q?
-0^0y0
051U1
373C3
5&6V6o6|6
7W7d7{7
939m9
9$:C:}:
:j;w;
80E0a0
3d5r5
7*717<7
;';C;O;
>8>v>
>)?^?
364~4
535H5V5a5
6T6k6
8(9D9S9`9j9z9
:H:d:v:
;G;f;
1J1r1
232W2p2z2
4#4S4c5}5
8:8D8c8
9@9W9
<;=}=
4(4G4n4
4&5Q5c5
8$9.9
=5=@=`=
>*>J>m>
?6?\?
0 0F0w0
101a1&2V2
4#4Z4
5*6n6{6
7V7c7z7
9+9J9
:<:v:
;.;h;
='>u>
161p1
2(2b2
8W8_8i8q8
969a9
:0:r:
<;<u<
<-=g=
=B>[>
> ?&?A?G?d?j?
>0H0X0k0o0s0w0{0
222^2
3*4U4
6 6B6U6c6x6
7%7`7n7x7
9/:\:f:v:
<*<O<
0.0A0K0[0
1#121p1
4@4s4
4#5=5Z5d5
566]6v6
8:8D8c8
9d9n9
;o;*<N<
>K?b?
0&1V1
2,292P2[2{2
2$3V3
464K4
797W7
8!8G8x8
919b9
:+:J:
;2;=;];{;
<%<E<c<
=-=K=
>6>K>j>
?=?\?
020Z0y0
0,1L1k1
252G2W2
3L3}374V4j4q4
8#8P8W8g8
:$:+:e:
;+;?;K;P;Z;_;x;};
<*<v<
<^=g=
=+>|>
>5?n?
1'2K2U2e2
2#3-3=3/4<4F4V4s4
6!696F6U6
7#7@7n7{7
758x8
8=9u9
:7:M:W:s:~:
;e;o;
>%?d?
1P1Z1
1>2G2\2
2 3y3
3B4X4|4
4\5f6
717p7
768f8{8
8^9k9
:V:k:
><>U>v>
030T0d0l0
1&1-2B2I2S2Y2`2l2
2p3y3
4=4R4Y4c4i4p4|4
626c6
7>8D8c8i8
9+9E9
:$;E;i;
>:>`>
?$?/?O?m?
0*0d0
2$242<2
5&50565=5I5x5~5
6Q6_6n6
7C8c8v8
9)9S9x9
9`:g:w:2;W;
=G>q>x>
011M1Z1f1
1-2:2A2Q2
2$3T3i3
3[4e4u4
4N5o5
6/6\6
6&7_7
9A9}9
;L;X;
;!<_<
=(>e>
>-?^?
0H0}0
1!2N2x2
4'4Z4
4,5i5v5
8+9W9
:*;4;D;
1=1K1W1h1v1
2%3?3
5S6u6
9)979N9
>*>5>U>x>
?!?A?g?
405=5T5_5
6'6>6I6i6
7F7[7z7
9<9Z9
:$:B:y:
:6;f;{;
<M<m<w<}<
=!=[={=
=#>*>H>O>
Q0X0h0
1'141
4#5P5g5
5R6\6a6h6
808w8
9"9'9,93989L9h9
:":6:t:
;,;1;6;=;B;V;];m;
;C<~<
=,=p=
><>q>v>}>
>J?O?V?]?m?
0-040D0^0
3=3D3N3|3
494@4J4
5G5N5X5
676D6\6k6
7"7.7:7E7
8Q9o9
=8=\=
=9>9?C?H?O?
0%1`1e1j1q1v1
2"2<2C2M2j2
3"3)3.3B3
4O5a5f5m5t5
6$646;6K6z6
9Z9l9
: :h:
;&;6;V;s;
<&=+=5=:=o=t=~=
=[>k>
?;?d?
0+0A0j0~0
2e2o2
2E3{3
4(4N4X4h4
5M5W5g5~5
6J6Q6x6
777A7Q7f7m7
9O:Y:i:
<%<5<
=b=y=
=R>v>{>
?>?H?X?
0+1h1r1
7!84898C8H8L9
:;:@:J:O:\:a:k:p:
> >B?
4.4)696
;#<2<
>`?}?
1&2@2M2a2
3&4=4K4
4:5r5
6)6>6J6Y6j6z6
7E7[7c7h7~7
9$:*:<:F:V:g:q:
:I;N;x;~;
;?<Y<^<h<m<
=6=X=^=
>2?p?
0,060F0_0
1%151f1
232M2X2]2
2%3S3]3m3
486E6
727n7
7#8l8v8
9)9;9P9W9g9w9
:-:=:E:]:d:t:
;A;H;X;t;
<$<a<h<x<
<3=V=m=t=
>2>9>I>
?D?I?S?Z?j?t?
-020<0A0W0a0k0y0
222F2Z2o2y2
3.383H3]3g3w3
3F4`4m4
5!5f5r5
5d6m6
7#7<7e7
8<9Y9_9t9
9-:+;K;l;
<G<b<
>=?C?T?^?n?
0"1;1\1w1
1F2g2{2
3-4Z4f4u4
5I5i5
727|7
9A9K9[9a9h9
:*;F;P;Z;
;q<w<|<
=(=-=B=Z=r=
=#>.>3>f>s>
?6?B?[?g?
0%090S0
1F1a1
1I2d2
6"737:7J7g7
7^8l8y8
8&9J9
:2:b:
;*;T;a;
<6<S<v<
<(=6=v=
>3>I>P>`>
?%?,?3?:?
`0o0y0
1+171F1P1`1r1w1
2"222F2]2g2w2
3(3<3A3X3b3r3
4)434C4c4p4
5$545D5r5|5
6M6W6g6|6
7!717
8#8S8]8m8
8"9,9<9Y9
<)<6<@<P<r<
>(>??I?Y?
0"020a0k0{0
1.181H1X1g1x1
20262;2E2J2]2s2}2
3,3]3g3w3
434=4M4
5&5B5H5M5W5\5
6!6Q6[6k6
677S7
7)8.858<8Y8`8
9f:q:
;0;n;
<2<M<
= =&=-=4=u=
=%>a>
0"0)0.0
2C2U2y2
4$4F4c4
8Q8]8
9Z9i9
=">G?Q?
3d4v8
&0c3g3k3o3s3w3{3
3&5z6
0!0L0
161j1
2S3Y3`3
3F4-7f7
<|=5>
?@?M?m?v?{?
0P5v5
7g7~7
8>8T:S;
4-474G4W4c4r4|4
5 5/5@5J5Z5n5
6,6G6Q6a6w6|6
7$7.7>7S7]7m7
8.888H8p8z8
9.989H9
='=1=A=Z=_=t=~=
>&>.>E>O>_>o>w>
?)?9?K?a?k?{?
A0F0P0U0
1&101:1l1v1
232=2M2s2
3F3K3U3Z3
4)434<4|4
5:5D5V5[5e5
6@6J6Z6w6
6v7{7
8#8k8
<1<;<K<
<0=B=S=_=k=
070H0m0
4I5a5
889b9
:.:W:
<%=[=u=
>/>8>F>
0?0Z0g0{0
1!1^1g1
1*2i2
2&3V3
3*4f4
4#52575
5+6R6g6v6
767f7
7$8B8c8
8*9i9
:2;8;u;};
;2<8<d<
=Q=q=y=
?'?;?S?
0&0=0Z0q0
131I1Q1g1!2:2Q2
3`3t3
484v4
4&5:5^5
5V6v6.767K7Q7
8N8V8k8q8
9+919y9
:$:a:i:~:
:6;V;
<%<5<^<
<6=X=l=
?#?Z?i?
0%0/0
1"1,191G1[1s1
2%2c2
353c3
3-4[4r4
545<5T5
6/7J7a7
8#9>9X9t9
;4;C;U;
= =T=h=
=,>@>g>v>
>6?h?
11292v2~2
3-3I3P3
4N4V4`4h4
8*8R8c8>9
>F?r?
2$282
3F3Q3b3
464f4
4&5;5n5|5
6I6i6
707j7
7>8R8a8
919^91:B:V:m:
:];e;o;w;
<><G<v<
<Z=x=
142d2
2(333D3v3
6S6i6p6z6
9S:_:
;1;l;
<><v<E=K=j=p=
?E?t?
0*0T0s0
2#2(2/2x2
2'3B3G3L3S3X3l3
344M4R4W4^4c4w4~4
4Q5V5]5d5t5
6$666;6@6G6L6]6
8d8+9a9m9z9
:J:O:
:(;b;
>>>X>m>z>
?'?A?T?Y?_?s?x?
%0C0O0q0
1H2R2m2
3(343
5.565E5Q5n5
6#6G6P6
7%7,747<7D7P7Y7^7d7n7x7
8#878G8W8g8w8
9-9G9S9
:D:x:
;g;l;s;z;
<.<U<}<
=#=)=U=[=
?A?R?y?
1.1:1F1R1^1i1v1
2*2:2J2Z2j2z2
3+3;3K3[3k3{3
304O4W4g4
525^5p5
7/7P7
858u8}8
9$9M9{9
:/:L:
;_<n<
=Z>u>
>%?Q?
0&1/181>1E1L1`1n1
2%3B3R3c3j3w3|3
4'444G4L4R4_4
4U5v5
6j607]7
<9<\<
=;=^=
2'3J3
3"424<4^4
041W1
6$7y7
7"8R8
=">b>
> ?C?s?
000S0
121U1x1
2K2n2
3M3p3
4.4k4
5.5p5
5 6Z6j6
6'7;7Z7
8&8L8r8
909V9|9
:::]:
:#;`;
=,>v>
4<4l4
:0:q:
:%;U;x;
<%=g=
=;>k>
0>0q0
041`1
1H2x2
343l3
4@4z4
4/5p5
5&6Y6
657z7
7-8g8
9-:Z:
;;;h;
;,<Y<
<-=r=
>B>V>u>
3+4e4
5B5f5m5
8:8z8
:I:l:
:C;f;
=.>Q>t>
?>?R?q?
0F0s0
2-2O2r2
3<3v3
4!5f5
506S6
8)8L8
9B9|9
:2;c;
;'<d<
<5=~=
>?>l>
?7?l?
0#0F0i0
1 2V2|2
353r3
4C4}4
4$5f5
6M6p6
:);r;
<)<X<
=<=~=
=+>N>q>
#0F0s0
0'1T1
1)2c2
2+3N3
5-5P5
5"6g6
768f8
809m9
;);v;
=C=f=
60R0q0
1=1`1
1 2C2
3!4D4
4!5^5
:1:]:
:&;R;~;
=;=^=r=
=+>[>
>6?s?
0%1X1
2'2I2e2
283k3
4%4D4
9+:[:
;'<r<
364{4
5J5v5
8/9g9
9I:h:
1'2a2
2$3i3
7H7|7
8H9{9
;2<o<
=4=P=z=
>O>u>
3I3y3
4?4O4[4}4
6.6Q6t6
627w7
8 909T9
:4:x:
:';Z;
;!<q<
<R=u=
636V6
7:8^8
;>;q;
< =C=
='>C>e>
2X3t3
4B4r4
525U5x5
6<6~6
8%8R8u8
>4?d?
0,0X0t0
041g1
2:2z2
2!3T3
5%595X5l5
6%7e7
888s8
=J>m>
> ?C?u?
2%3A3j3
3/4l4
5I6l6
7=8`8
:0:`:
;<;_;
<S<v<
>0>m>
040l0
1]2,3
3!4Q4t4
5!6Q6e6
9X97;
>+>>>e>
>&?S?
0"1o1
2>2a2
2&3`3
4J4m4
5?5b5
6H6k6
>4?W?z?
3>4b4
4B5V5x5
6$6d6x6
797\7
7#8c8
;1;T;
?:?n?
454e4
6(7U7x7
8'8i8
:3;V;y;
<S<g<r<
0Z0}0
373Z3}3
6)6E6
7%8H8k8
>&>a>
?3?V?y?
1+1c1
2,2u2
2o3}3
3)4k4
5"6Z6
8*8S8
9 9I9l9
:8;s;
=T>p>
0#1y1
132O2~2
363n3
5[5<6
7>8a8
9%9A9G9L9a9q9w9
:#:2:R:V:r:v:
;%;A;U;q;w;
<1<7<Q<W<q<w<
=1=7=Q=W=q=
>1>7>Q>W>q>
?%?E?e?
0#020Q0W0q0
1!151Q1e1
212E2a2q2w2
353U3
414E4a4g4
5%5A5U5q5
616E6a6s6
7!757Q7e7
8%8A8U8q8
9!959Q9a9q9
:!:5:Q:e:
;1;E;a;u;
<!<5<Q<a<q<
=1=A=U=u=
0$0,040<0D0L0T0\0d0l0t0|0
1$1,141<1D1L1T1\1d1l1t1|1
2$2,242<2D2L2T2\2d2l2|2
3$3,343<3D3L3T3\3d3l3t3|3
4$4,444<4D4L4T4\4d4l4t4|4
44585@5H5`5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6 6$6(6,6064686<6@6D6H6L6P6T6X6\6`6d6h6l6p6t6x6|6
7 7$7(7,7074787<7@7D7H7L7P7T7X7\7`7d7h7l7p7t7x7|7
8 8$8(8,8084888<8@8D8H8L8P8T8X8\8`8d8h8l8p8t8x8|8
9 9$9(9,9094989<9@9D9H9L9P9T9X9\9`9d9h9l9p9t9x9|9
: :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\:`:d:h:l:p:t:x:|:
; ;$;(;,;0;4;8;<;@;D;H;L;P;T;X;\;`;d;h;l;p;t;x;|;
< <$<(<,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?p?t?x?|?
0 0$0(0,0004080<0@0D0H0L0P0T0X0\0`0d0h0l0p0t0x0|0
1 1$1(1,1014181<1@1D1H1L1P1T1X1\1`1d1h1l1p1t1x1|1
2 2$2(2,2024282<2@2D2H2L2P2T2X2\2`2d2h2l2p2t2x2|2
3 3$3(3,3034383<3@3D3H3L3P3T3X3\3`3d3h3l3p3t3x3|3
4 4$4(4,4044484<4@4D4H4L4P4T4X4\4`4d4h4l4p4t4x4|4
5 5$5(5,5054585<5@5D5H5L5P5T5X5\5`5d5h5l5p5t5x5|5
6(646@6l6p6
7 7<7T7X7p7t7x7|7
8 8$808<8H8T8`8
9 90949L9\9`9p9
:0:4:L:\:`:d:h:p:
;$;4;8;H;L;P;T;\;`;d;l;
<,<0<4<L<P<T<\<`<h<l<p<
=(=,=0=4=H=X=\=`=d=x=|=
>(>,><>@>P>T>X>p>t>x>
? ?0?4?D?H?L?P?T?X?`?x?
0 0$0,0D0H0L0T0X0l0p0
1 1$1<1@1X1\1`1h1
24282P2`2d2h2
3 3$34383P3T3\3`3t3
4 44484H4X4\4`4h4
5 5$5(505H5X5\5l5p5
6 6(6@6D6\6l6p6
7(7,7074787<7@7D7H7L7T7X7\7`7d7h7l7p7t7x7
8 8$8<8L8P8T8X8l8p8
90949L9P9h9x9|9
:$:(:@:D:H:L:P:T:X:\:`:d:x:|:
; ;0;@;D;T;X;p;t;x;
<(<,<D<H<`<p<t<
= =0=4=D=T=X=\=`=d=h=|=
>0>@>D>H>P>T>\>t>
? ?$?(?,?4?L?\?`?x?
0 04080<0T0X0\0p0
1,1<1@1D1X1\1t1
2$2(282<2@2H2L2T2l2p2t2
3$34383H3L3\3`3d3l3
4 4$4(404H4X4\4`4x4|4
5(5,505H5L5P5d5t5
6 6$6<6L6P6T6X6\6`6d6l6p6t6x6|6
7,7074787@7X7\7t7x7
8 8(8,84888L8P8h8x8|8
9 9$9,9094989<9@9T9X9p9t9
: :$:(:,:@:D:H:L:`:d:h:l:
;,;<;@;D;H;\;`;d;|;
<(<,<D<H<`<d<h<|<
=4=8=<=P=`=d=h=
>(>8><>@>X>\>`>d>h>l>
?$?4?8?<?@?D?H?L?P?d?h?l?t?x?|?
0,0<0@0D0\0l0|0
1,10141H1L1P1h1l1
24282<2@2D2H2L2T2X2\2d2|2
3,303@3D3H3L3`3d3|3
4 444D4H4L4d4t4
5 5$585<5L5P5h5x5
6(6,6D6T6X6\6t6
747D7H7X7h7l7|7
8 8084888<8P8T8X8p8t8
9(9,909H9X9\9l9p9t9x9
:(:,:0:D:H:L:T:l:p:t:
;$;(;,;0;8;<;P;`;d;h;l;
<(<8<<<@<X<\<`<h<
=,=0=4=H=X=h=l=p=
>4>D>H>X>h>l>p>t>|>
? ?$?(?@?P?`?d?t?x?|?
0 0$0(0@0P0T0l0p0
1(1,10141H1X1\1l1|1
20242L2\2`2x2|2
3$3(3,3@3D3H3L3T3X3`3x3|3
4 4$4<4@4D4X4\4l4|4
5$5(5,50545<5T5d5h5x5
6 60646D6H6X6h6l6
7 787<7@7T7X7h7x7|7
8 888<8P8`8d8t8
94989<9P9T9X9\9d9|9
:(:,:0:H:L:d:t:x:
; ;$;<;@;D;L;d;h;l;t;x;
<(<8<<<@<X<h<l<|<
= =8=<=T=d=h=
>4>D>H>`>d>h>l>p>t>
?$?(?@?D?\?`?d?l?
0(0,0<0L0P0`0d0t0x0|0
141D1H1X1\1`1t1
2,202@2D2H2`2d2h2p2
3$34383<3@3D3H3L3T3l3p3
4 44484<4@4D4L4d4h4l4
5 54585P5T5X5l5p5t5x5|5
6 686<6@6H6L6T6l6|6
7 7074787<7@7H7`7p7t7
8 8$8,8D8T8d8h8l8
9 989<9P9T9d9h9
:0:4:8:P:`:d:h:
;$;(;,;4;8;@;D;L;`;d;h;l;p;t;x;
<(<,<0<8<P<T<l<p<
=0=@=D=H=L=`=d=h=|=
> >$><>L>\>l>p>
?$?4?8?H?L?P?T?X?`?h?
0004080@0X0\0`0h0
10141D1T1d1h1l1p1t1x1
2(282H2X2h2x2|2
3,303H3X3\3`3x3|3
4$4(4,444L4\4`4x4|4
505@5D5T5X5\5`5h5p5
606@6D6H6`6p6
7 787<7P7`7d7t7
8(8,808D8H8L8P8d8h8x8|8
9 94989<9D9\9l9p9
: :0:4:D:H:L:d:h:p:t:
;,;0;H;X;\;l;|;
<,<<<@<D<\<`<d<x<|<
= =8=H=L=P=T=X=\=p=t=
> >$>8><>@>X>h>l>p>
? ?$?,?0?4?<?@?T?X?h?l?p?
0004080<0P0`0p0t0x0
1,101H1L1d1t1x1
2 24282<2T2d2h2
3(3,3D3T3X3p3
4$44484H4L4P4X4p4
5 5$5,5@5D5\5l5p5
6,60646<6@6T6X6\6t6
7$7(787H7L7\7`7x7
8$84888<8@8T8X8p8
909@9D9H9L9T9l9p9x9
: :$:8:<:L:P:T:l:|:
;,;0;H;L;d;h;
<4<8<P<`<d<t<
=(=,=<=@=D=H=P=T=h=l=|=
>(>,>4>L>\>`>d>l>
?,?0?4?8?@?X?h?x?
0(0,000H0X0\0t0x0
1(1,1014181<1@1H1`1p1t1x1
2 2$24282<2T2X2p2
303@3D3T3X3\3t3
4 4$44484<4T4d4t4x4
5 5(5@5P5T5d5t5
6 6(6@6D6\6l6p6t6
7(787<7@7X7\7t7x7|7
8,80848L8\8`8d8h8|8
9,909@9D9H9\9l9p9t9
:$:(:8:<:@:D:L:`:p:t:x:
; ;$;(;0;4;<;T;d;h;l;
<(<,<<<@<D<L<d<t<x<|<
= =0=4=D=H=L=T=\=t=
>,>0>H>X>\>l>p>t>x>
? ?$?<?L?P?`?d?t?x?
0,000H0X0\0t0
1,1<1L1P1T1X1l1|1
2 2$2(2,242L2P2T2\2`2d2l2p2
3$3(383<3L3P3T3X3l3p3t3|3
4 404@4D4T4X4p4t4
5 585<5P5T5X5\5d5|5
6,60686P6`6d6t6
7 787<7@7D7H7P7T7\7t7x7
8 8$8(8,848L8P8T8X8\8`8h8l8p8t8x8
949D9H9L9d9t9x9
: :0:@:D:H:`:p:t:
;0;@;D;H;`;p;
<4<D<H<`<d<h<l<p<t<x<
=4=8=P=`=p=t=
>(>,><>@>D>\>`>d>h>l>p>x>|>
? ?8?<?T?X?p?t?x?|?
04080P0`0d0|0
1 181<1@1H1L1P1T1X1`1x1|1
2$2(2,2D2H2L2P2d2h2|2
3 3$34383<3@3D3H3\3l3|3
40444D4H4L4P4T4X4`4d4h4l4p4
5 5$5(5@5D5H5\5`5x5|5
6$6(686<6L6\6`6d6h6l6p6t6
7$7(7,7@7 <,<0<4<8<<<@<D<H<L<P<T<X<\<`<d<h<l<p<t<x<|<
= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\=`=d=h=l=p=t=x=|=
> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\>`>d>h>l>p>t>x>|>
? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\?`?d?h?l?x?
=,=4=@=`=p=
>$>,>4><>D>L>T>\>d>l>t>|>
?$?,?4?<?D?L?T?\?d?l?t?|?
0$0,040<0D0L0T0\0d0l0t0
141@1`1h1x1
2$2<2L2\2h2p2
3,3<3H3P3t3
484@4H4P4`4h4
5$5,545<5D5L5T5l5x5
6,686@6d6x6
7$747@7H7l7
8 8(8L8`8t8
9,949D9L9T9\9d9l9t9|9
:,:D:L:T:\:d:t:
;$;,;<;T;\;d;l;t;|;
<4<H<\<d<l<|<
=$=4=D=P=X=|=
>$>4>@>H>l>
?4?D?T?`?h?
0$040D0P0X0|0
1$141@1H1l1|1
2(2<2D2T2\2l2
3,383@3d3x3
4 4(4L4`4t4|4
5(505@5H5d5l5|5
646D6L6\6
7$70787T7d7l7|7
8$848D8P8X8|8
9$9<9T9d9t9
:4:D:T:`:h:
;$;,;4;<;D;L;T;\;
<,<4<D<T<\<d<|<
=$=,=4=<=D=L=t=
> ><>L>T>d>t>|>
?(?<?L?\?l?|?
0$0,040<0D0L0x0
1$1,1<1\1t1
2$2D2\2l2|2
3$3,343<3D3L3T3l3
4$4,4<4L4T4\4d4l4t4|4
5(5<5L5T5d5t5|5
6,646<6D6L6T6\6d6
7$70787\7p7
8$8<8L8\8h8p8
9,9<9H9P9p9x9
:,:4:D:T:\:t:
;(;0;8;H;P;t;
<(<0<T<h<|<
=4=H=\=t=
>,>4>D>L>\>l>t>|>
? ?4?<?T?t?
0$040D0L0d0|0
1$1D1\1l1|1
2$2<2L2\2h2p2
3,3<3H3P3t3
4(4H4P4X4`4h4p4
5$5<5L5\5h5p5
6,6<6H6P6t6
747L7\7l7x7
8$8,8p8
9 909<9\9h9
:8:H:T:\:
;@;P;\;d;
< <D<L<T<\<d<l<t<|<
<(=8=D=d=p=x=
=$>,>4><>D>T>`>h>
? ?(?\?l?x?
0,080@0t0
141D1P1X1
2(20282D2L2
203@3L3T3l3
4$444@4`4l4
5(5H5T5\5
6@6P6\6d6
7H7X7d7l7
8P8`8l8t8
9$9X9h9t9|9
:$:,:`:p:|:
; ;,;4;h;x;
<(<4<<<\<x<
=$=,=4=<=D=L=T=\=d=t=
>(><>\>d>l>t>
? ?@?L?l?x?
0$040@0`0h0p0x0
1,141D1P1X1p1
2(202H2l2|2
3 303D3T3`3h3
4@4P4\4|4
5(505H5P5`5|5
5 6(606D6T6`6
787@7L7l7x7
848<8D8P8p8x8
9,949P9`9l9t9
:8:H:X:d:
; ;,;L;X;x;
<<<H<P<
<(=8=D=L=
>(>H>T>t>|>
>,?<?H?h?t?|?
080@0H0P0X0d0
1(181D1L1d1l1
242<2D2L2X2x2
3$30383l3|3
4 4,4L4T4`4
585D5L5l5t5|5
6$6,646@6`6h6p6x6
7(747<7p7
708@8L8l8x8
949D9`9p9|9
:(:\:p:
;8;H;T;t;
< <,<L<T<\<d<p<x<
=<=D=L=X=x=
>8>D>d>p>
?,?8?@?`?h?x?
(0<0D0L0T0\0h0p0
1 1t1
2$20282l2t2|2
3$3,383@3t3|3
3L4`4t4|4
5D5T5`5h5
6 6(60686D6L6l6t6
7$7,7H7\7l7|7
8$8,848P8d8t8
949<9D9L9T9`9h9
:L:T:\:h:
;,;8;X;`;h;p;x;
<0<@<L<l<t<|<
=(=0=@=H=l=t=|=
>$>0>8>l>t>|>
?4?<?D?L?X?`?
0(000H0|0
1$1,141<1H1P1p1
2 2(242<2
3$3,343P3`3p3x3
3,444<4L4X4`4x4
505D5L5T5\5d5l5t5|5
6,646<6D6T6d6t6
7(747<7p7
7 808@8H8
9$9,949<9H9P9h9
: :(:@:d:t:
:,;<;H;h;p;|;
<(<4<T<\<d<p<x<
=$=,=`=p=|=
> >,>4>h>x>
?4?@?d?l?t?|?
0,040@0`0h0p0|0
1 1,1L1X1x1
2$2,242<2D2L2T2\2d2l2t2|2
3 3,343h3x3
4(444<4p4
5$505P5X5`5h5t5|5
6<6L6X6x6
6(787D7L7
8,848P8`8l8t8
9(90989D9d9l9x9
:@:P:\:d:
;$;,;`;p;|;
<$<,<4<<<D<T<`<h<
= =0=@=L=l=x=
> >,>L>T>\>h>p>
>@?T?d?t?
0,040<0H0P0h0
0 101<1D1x1
2$2,2D2L2T2\2d2l2t2|2
3L3`3p3
4 4(404<4\4d4l4t4|4
545<5D5L5T5`5
6,686X6d6l6
6,7<7H7P7
8$8,848<8D8L8T8\8d8p8
949D9P9X9
:<:L:X:x:
;$;,;4;<;D;L;X;x;
<0<<<D<x<
<(=8=D=d=p=
><>H>h>t>
?$?0?8?l?|?
040X0h0t0|0
1 1,141h1x1
2L2\2h2
3$303P3X3`3h3t3
4$404P4X4`4h4p4|4
585@5H5T5t5|5
646D6T6`6
7 7@7H7P7\7|7
8(808<8D8x8
9 9(9\9l9x9
:$:0:8:l:|:
;$;4;@;H;|;
< <(<4<T<\<d<p<
=H=\=d=l=t=|=
>$>,>8>@>
?D?X?`?h?p?x?
10181@1H1P1\1|1
142H2P2X2`2h2t2
3,343<3D3L3T3`3
4$4,444<4D4L4T4\4d4l4t4|4
5P5`5l5t5
6(646T6\6h6
7$7D7L7X7x7
8(848T8\8d8p8
9<9H9h9p9|9
: :,:L:T:\:d:p:
; ;,;4;h;x;
<8<H<X<|<
=P=`=l=
>8>D>L>
?<?D?L?T?\?d?p?
0$0,040<0D0L0T0`0
1$1D1L1T1`1
1(282D2L2
3$3,343<3H3h3p3x3
4$4,444<4H4h4p4|4
5$5,545<5D5L5T5\5d5l5x5
6$606P6X6`6h6t6
707<7D7\7d7
8H8\8l8|8
989D9d9l9t9|9
: :,:4:h:x:
;4;@;H;l;t;|;
< <8<@<H<P<t<
=$=D=P=p=x=
>8>L>\>l>x>
?4?X?h?t?
(080D0d0p0
1$1D1L1T1`1h1
2 2,2L2X2`2x2
3 303@3L3T3l3t3
4$444@4`4l4
5<5D5P5p5|5
6$606P6\6|6
7$7,787@7t7|7
8 8,8L8T8`8
9(9L9T9\9d9l9t9|9
:$:,:D:L:p:
;@;P;\;d;|;
<$<D<L<X<`<
=(=0=H=P=X=|=
><>L>X>x>
?(?8?D?d?l?x?
040<0D0L0T0\0d0p0
1$141@1`1p1
2 2(20282@2L2l2t2
3(3L3T3\3d3l3t3|3
4D4`4t4
5 5,5L5T5`5
6 6,6L6T6\6d6l6t6
7 7@7L7l7t7
8(848T8\8h8
9$909T9\9d9l9t9|9
:$:0:P:\:|:
;$;,;4;<;D;L;T;\;d;l;t;
<<<H<P<t<|<
=,=4=<=H=h=p=x=
>$>,>8>X>`>l>
?$?0?P?X?`?h?p?
0$0,040<0D0L0T0\0d0l0
1$1,141<1D1L1T1\1d1l1t1|1
2$2,242<2D2L2T2\2h2
3$3,343@3`3h3p3x3
4 4(40484@4L4l4t4|4
50585@5H5X5|5
6$6D6L6X6x6
7$7,747<7D7L7T7\7d7l7t7|7
8,888\8d8l8t8|8
9 909<9D9x9
: :@:H:P:X:d:
;0;@;L;l;t;|;
<$<,<4<<<D<L<T<t<
= =(=0=8=@=L=l=t=|=
> >4>D>T>`>
?,?4?<?D?T?\?l?x?
0$040@0H0p0
1(1H1X1`1
2 2(20282D2d2l2t2|2
3$3,343<3D3L3\3d3t3|3
4X4l4
5,5H5X5d5l5
6,646<6|6
70787@7H7P7t7
808@8L8T8
8`9t9
:$:0:P:X:`:l:
; ;(;0;L;\;h;
<,<8<@<`<h<
= =T=h=x=
=0>D>X>l>
?(?H?P?X?`?h?p?
0,0<0H0h0t0
1(141<1p1
1 202<2D2x2
3(303H3P3X3p3
4$4,444<4H4h4p4|4
5<5L5X5`5
6 686P6d6t6
7,747@7`7h7t7
8,8H8\8l8|8
9 9<9L9X9x9
:(:0:P:l:|:
;$;,;4;<;D;L;T;\;d;l;t;
<$<,<<<D<L<T<d<l<t<|<
=,=<=L=\=h=
>4><>X>h>t>|>
?$?@?P?\?|?
0$0,040L0X0x0
001@1L1T1
2<2D2X2l2|2
3$3,343@3H3l3t3|3
4$4,4<4D4L4l4t4
5$5,5D5L5`5p5
6$6,686@6d6l6t6|6
7 7(707@7H7l7t7|7
8$8L8T8h8|8
9$90989\9d9l9|9
:$:,:4:<:D:L:\:d:l:t:
;(;0;H;P;d;l;t;
<$<0<P<X<`<h<x<
=4=<=D=L=d=l=t=|=
>,>4>L>T>d>l>|>
?,?4?D?P?X?
0$0,0<0D0T0\0
1 1,1L1T1\1h1
2 2D2L2T2\2d2l2t2
3,3<3H3l3t3|3
4$4,444<4H4h4p4x4
5$5,545L5T5x5
6,646<6D6L6T6\6d6t6|6
707<7\7d7p7x7
848<8D8L8T8\8d8l8t8|8
9D9T9`9h9
:L:\:h:
;$;4;<;D;T;`;
<$<,<4<<<D<L<T<\<d<l<t<|<
=$=<=D=L=T=\=t=|=
>$>,>4><>D>T>\>d>l>|>
? ?<?D?L?T?\?d?|?
0,0l0|0
1 181X1h1|1
2(282@2d2x2
3$343D3T3`3h3
4 4(4P4t4
5$5,5P5d5t5
6$606P6X6`6l6
7$70787d7l7
7 848D8P8X8
9<9L9X9`9
:D:T:`:
;(;L;T;\;d;l;t;|;
<0<D<T<d<p<
=@=P=\=d=
>H>X>d>
?$?,?4?<?D?L?T?`?
0$0,040<0D0L0T0\0d0l0t0|0
1 1(1H1P1X1`1|1
2,282X2`2h2p2x2
3$3,3D3L3T3\3d3l3|3
444<4D4L4T4\4d4l4t4
5,585X5`5l5
6(60686@6H6P6\6|6
7 7@7\7l7x7
888H8T8\8
9 9@9H9P9X9`9h9p9|9
: :@:H:T:\:|:
;$;,;4;<;H;l;t;|;
<$<0<8<l<|<
=$=D=L=T=\=h=
>$>,>8>X>`>h>t>
?(?0?8?@?L?T?l?|?
0$0D0L0T0\0h0
1 1(1@1H1P1t1
2 20282\2d2t2|2
3$30383X3t3
4<4D4L4T4\4d4p4x4
5$5,545<5D5L5T5l5x5
686L6\6l6x6
7 7,7L7X7`7
8$8,848<8D8P8X8
9$949P9`9l9
:$:0:T:\:d:l:t:|:
;0;8;@;L;l;t;
<$<4<@<H<`<
=<=D=L=X=x=
>8>H>X>`>
>$?4?@?H?`?
040D0P0X0p0
1$101P1X1`1l1t1
2 2,242h2x2
3$3,343<3D3L3T3\3d3p3
4P4`4l4t4
5$5X5h5t5|5
6$6,6`6p6|6
7 7T7d7p7x7
8(8H8P8\8|8
9<9D9L9X9x9
: :T:d:p:
;4;<;D;P;p;|;
<(<0<<<\<h<
=(=L=T=\=d=l=t=|=
>$>,>4><>D>L>T>\>d>l>t>
?$?,?4?<?D?P?p?x?
0$0,040<0D0P0p0x0
1 1@1H1P1\1|1
2 2(242<2\2d2
3$3,383X3`3l3t3
4$4X4h4t4|4
5,545<5D5L5T5\5d5l5t5|5
6$6,686\6d6l6t6|6
7$707P7`7
8$8,848<8D8L8T8\8d8l8t8|8
9D9T9`9h9
:L:\:h:
;,;4;<;H;h;p;|;
<$<0<8<l<|<
=,=8=X=`=h=p=|=
>$>,>8>X>d>
>$?4?@?H?|?
,0<0H0P0
141D1P1X1
2<2L2X2x2
2(383D3L3
304@4L4T4
5$505P5X5`5h5t5|5
606@6L6T6t6
7 7D7L7T7\7d7l7t7|7
8$8,848<8D8L8T8\8d8l8t8|8
909<9\9h9p9
:D:X:h:t:
; ;T;d;p;x;
<4<<<D<L<T<`<
<$=4=@=H=|=
=,><>H>P>
?4?D?P?|?
0 0(00080@0H0T0t0|0
1$1,141<1D1L1T1\1d1|1
2$2,242<2D2L2T2\2d2l2t2|2
3 3(343T3\3d3p3
4 4,4L4X4x4
5@5P5\5|5
6(60686D6L6
7(7H7P7X7`7h7p7x7
8$80888l8|8
9,989\9d9l9t9|9
:$:,:4:<:D:L:T:\:d:l:x:
;@;P;\;d;
<,<8<@<t<
=0=8=@=L=T=
>$>0>P>X>`>h>x>
? ?(?4?T?\?d?l?t?|?
0,040<0D0L0T0\0d0p0
1(10181@1P1t1|1
2$2,242<2D2L2T2\2d2l2t2|2
3 3@3H3P3X3d3l3
4P4`4l4t4
5$5D5P5p5x5
6,646<6H6P6
7(70787@7H7P7X7d7
8D8T8`8h8
9L9\9h9p9
:8:@:L:l:x:
;$;,;4;<;D;L;T;\;d;l;x;
< <(<0<<<D<x<
=$=,=4=<=D=L=T=\=d=l=t=|=
> >(>4>T>\>h>p>
?8?@?H?P?X?`?l?
0 0(080@0d0l0t0|0
1$181H1P1X1h1p1
2$2,242<2D2L2T2\2d2
3(303L3\3h3p3
444L4`4t4
5<5L5X5`5
6$6,646<6D6L6T6\6d6p6x6
7$7,7@7T7d7t7
8L8\8h8p8
9 9T9d9p9x9
:$:,:4:<:D:L:T:l:x:
; ;(;8;\;d;l;t;|;
<(<0<L<T<\<d<l<t<|<
=$=8=L=\=l=|=
> >(>0>8>D>L>
?,?<?D?T?h?x?
 040D0L0T0`0h0
1 1(1\1l1x1
2(202d2t2
3 3D3T3`3
4$444@4H4`4h4p4
5<5D5L5\5d5l5t5|5
6$6,646<6H6P6h6p6
7$7,7X7l7|7
8$8,848<8D8L8T8t8|8
9,989X9`9l9
: :,:L:T:`:h:
:0;@;L;T;
<8<H<T<\<
=$=0=P=X=d=
>4>@>`>h>p>|>
?0?8?D?d?l?x?
0@0P0\0d0
1$1,141<1D1L1\1d1l1t1
2(282L2\2h2
3D3X3h3x3
4(40484D4L4d4l4|4
5H5X5d5
6,686X6`6l6
7$7,747<7H7h7t7
8D8T8`8h8
9 9@9H9P9X9`9p9
:<:D:P:p:|:
; ;@;H;P;X;`;h;p;|;
<4<<<H<h<t<
= =D=L=T=\=d=l=t=|=
><>H>h>p>x>
?$?D?L?T?\?d?p?
040<0D0P0p0x0
001@1L1T1t1|1
2,242@2`2p2
3$3,383\3d3l3t3|3
4$4,444<4H4l4t4|4
5$5,545<5H5l5t5|5
506@6L6T6
7 7$7,70787<7D7H7P7T7\7`7h7l7t7x7
8,848H8P8X8`8d8h8p8
9 949D9h9t9|9
: :@:H:\:d:l:t:
; ;4;<;P;X;`;h;p;x;
<,<4<<<D<L<T<h<p<
= =4=<=D=L=`=h=p=x=
>,>4><>D>X>`>h>p>
? ?4?<?P?X?`?h?|?
0$080@0H0P0d0l0
1$1,1@1H1P1X1l1t1
2 242<2D2L2T2\2d2l2t2|2
30383@3H3\3d3x3
4(404D4L4T4\4p4x4
5 5(5<5D5X5`5h5p5x5
6 646<6X6\6`6d6l6p6x6
6 7(7074787<7@7D7L7P7T7X7\7d7h7l7p7t7x7
8$8(8,80848<8@8D8H8L8P8X8\8`8d8h8l8t8x8|8
9 9$9,9094989<9D9H9L9P9T9\9d9h9l9p9x9|9
: :$:,:0:4:8:<:D:H:L:P:T:X:`:d:h:l:p:t:|:
; ;$;(;,;4;8;<;@;D;H;P;T;X;\;`;d;l;p;t;x;|;
0,0P0T0X0\0`0d0h0l0p0t0x0|0
101T1t1
4P4p4
6(6T6p6
708x8
8 9p9
:(;p;
<0=T=
=<>t>
4@4p4
4(5p5
< =T=
=$>`>
?<?t?
0@1`1
1(2p2
2P3x3
4D5h5
5<6`6
909l9
:$:`:
>0>p>
(0@0`0
1@2h3
748x8
9 :p:
;8<x<
<0=L=|=
>0>D>d>
8 9x9
:(;h;
1`5 6l6
6(7x7
708p8
=,>p>
1T2x2
7x8H9
7h7 8
9 :p: ;
0p102
3h3(4H4
5 5x5
6$7h7
989\9|9
:,:L:l:
;4;h;
<,<`<
2(2d2
0 0$0(0,0004080<0@0D0L0P0T0X0\0`0d0h0l0p0t0x0|0
