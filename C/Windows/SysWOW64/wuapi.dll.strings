!This program cannot be run in DOS mode.
:pO[[
Rich[[
.text
`.rdata
@.data
.rsrc
@.reloc
u$WPQ
X[_^]
vThPM
v,ShlM
~p_^]
uNPPV
9_(s-j
WVjbZ
WVjkZ
QQSVW
j/[j\Z
j\^f;
t.j\Z
j\Yf;
j/Yf;
j\Zf;
j/Zf;
j\^f;
7@PVW
D$<SV
L$(QP
t(VWj
97uwhH@
VRj VV
Pj VV
Pj VV
1wDVjd
YY_^]
PQQSVW
PQSVW
PQQSVW
D$ Ph`S
w`QQP
PQQSVW
QQh|P
QQh|P
t>9|$
t,QRSW3
VWQQf
QPVWQQ
D$<VW
VVh/h
VVhTh
VVh0g
VVhKg
VVhfg
VVhAf
VVh[f
VVhzf
VVh9k
VVh0j
VVhKj
VVhjj
VVh&i
VVh@i
VVh_i
VVh{i
VVhoh
VVhhm
VVh0m
VVhOm
VVh%l
VVhDl
VVh`l
VVhTk
VVhtk
VVhip
VVhMp
VVh4p
VVh)o
VVhEo
VVhfo
VVh9n
VVhYn
VVhwn
VVhNs
VVhhs
VVh2s
VVh*r
VVhKr
VVhlr
VVh>q
VVh\q
VVhuq
L$D_^3
D$@PQQ
D$DPQQ
PPPPj
QQSVWj
QQSVWd
jjjjj
BVj(j
ul_^[
@_^[]
9p u"
ft&9q
@_^[]
t/hP5
UQPXY]Y[
URPQQh
PQSVW
Y__^[
5ineI
5Genu
"t:j(
bad exception
api-ms-win-core-fibers-l1-1-1
api-ms-win-core-synch-l1-2-0
kernel32
api-ms-
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
InitializeCriticalSectionEx
__based(
__cdecl
__pascal
__stdcall
__thiscall
__fastcall
__vectorcall
__clrcall
__eabi
__swift_1
__swift_2
__ptr64
__restrict
__unaligned
restrict(
 delete
operator
`vftable'
`vbtable'
`vcall'
`typeof'
`local static guard'
`string'
`vbase destructor'
`vector deleting destructor'
`default constructor closure'
`scalar deleting destructor'
`vector constructor iterator'
`vector destructor iterator'
`vector vbase constructor iterator'
`virtual displacement map'
`eh vector constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`copy constructor closure'
`udt returning'
`RTTI
`local vftable'
`local vftable constructor closure'
 new[]
 delete[]
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`managed vector constructor iterator'
`managed vector destructor iterator'
`eh vector copy constructor iterator'
`eh vector vbase copy constructor iterator'
`dynamic initializer for '
`dynamic atexit destructor for '
`vector copy constructor iterator'
`vector vbase copy constructor iterator'
`managed vector copy constructor iterator'
`local static thread guard'
operator "" 
operator co_await
operator<=>
 Type Descriptor'
 Base Class Descriptor at (
 Base Class Array'
 Class Hierarchy Descriptor'
 Complete Object Locator'
`anonymous namespace'
bad allocation
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
cross device link
destination address required
device or resource busy
directory not empty
executable format error
file exists
file too large
filename too long
function not supported
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
interrupted
invalid argument
invalid seek
io error
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no lock available
no message available
no message
no protocol option
no space on device
no stream resources
no such device or address
no such device
no such file or directory
no such process
not a directory
not a socket
not a stream
not connected
not enough memory
not supported
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
permission denied
protocol error
protocol not supported
read only file system
resource deadlock would occur
resource unavailable try again
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many files open
too many links
too many symbolic link levels
value too large
wrong protocol type
unknown error
Unknown exception
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
lstd::exception: %hs
D:\a\_work\1\s\packages\Microsoft.Windows.Wil.Internal.0.2.70\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
Local\SM0:%d:%d:%hs
string too long
generic
system
exists
%SystemRoot%\uus
AMD64
ARM64
uusbrain.dll
DllGetSessionForPinky
0.0.0.0
Unsupported machine architecture
Error loading library %s
D:\a\_work\1\s\src\inc\UndockedUpdateStack.hpp
D:\a\_work\1\s\src\Client\inc\UndockedModuleLoader.h
UUS: Session=%ws, Module=%ws, Version=%ws, Path=%ws
Load undocked module: %ws
Load inbox system module: %ws
D:\a\_work\1\s\src\Client\inc\UndockedModuleForwarder.h
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
wuapicore.dll
wu.core.wuapi
invalid string position
D:\a\_work\1\s\packages\Microsoft.Windows.Wil.Internal.0.2.70\inc\wil\opensource\wil\win32_helpers.h
bad array new length
file = %ws, line = %d
unknown error
*FAILED* [%08X] 
 [%hs:%lu]
OutputDebugLevel
Flags
Auto Update
Auto Update\CommitRequired
Auto Update\LastOnlineScanTimeForAppCategory
Auto Update\PostRebootReporting
Auto Update\Power
Auto Update\RebootRequired
Auto Update\RebootRequired\Mandatory
Auto Update\RequestedAppCategories
Auto Update\Results
Download
Download\NoRangeRequests
Handler
Reporting
Reporting\DontExpirePolledEvents
Services
Services\Pending\
SLS\Programs
StickyUpdates
Trace
DeploymentStack
DeploymentCallbackInfo
UpdatePolicy\PolicyState
StoreAppProperties
Applicability
%s\%s
SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate
WUCurrentVersion
SOFTWARE\Microsoft\WindowsUpdate
WindowsUpdate
Software\Microsoft\Windows\CurrentVersion\Appx
AppxRoot
Software\Microsoft\DirectX
AdapterCacheKeyID
SOFTWARE\Microsoft\SIH
SOFTWARE\Microsoft\SQMClient
SQMClientLink
Software\Policies\Microsoft\WindowsStore\Apps
EnterpriseModernAppReleaseManagement
Software\Microsoft\WindowsSelfHost
WindowsSelfhost
D:\a\_work\1\s\src\Client\lib\wusafefn\safelib.cpp
D:\a\_work\1\s\src\Client\lib\UndockingTelemetry\UndockingTelemetry.cpp
UusId:%s|hr:0x%x|ModuleVer:%ws|LoadProps:%lu|Path:%ws
wusys.dll
D:\a\_work\1\s\src\Client\lib\wusyshelper\wusyshelper.cpp
D:\a\_work\1\s\src\Client\lib\util\commonutil.cpp
D:\a\_work\1\s\src\Client\lib\util\StringUtil.cpp
D:\a\_work\1\s\src\Client\lib\util\FileVersion.cpp
%hu.%hu.%hu.%hu
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Deployment
Metadata
AppAU
EEHandler
EndPointProvider
Inventory
ComApi
OfflineSync
WebServices
DataStore
Handler
Shared
Setup
Timer
IdleTimer
Driver
Reporter
ProtocolTalker
DownloadManager
Agent
Deployment
Metadata
AppAU
EEHandler
EndPointProvider
Inventory
ComApi
OfflineSync
WebServices
DataStore
Handler
Shared
Setup
Timer
IdleTimer
Driver
Reporter
ProtocolTalker
DownloadManager
Agent
Deployment
Metadata
AppAU
EEHandler
EndPointProvider
Inventory
ComApi
OfflineSync
WebServices
DataStore
Handler
Shared
Setup
Timer
IdleTimer
Driver
Reporter
ProtocolTalker
DownloadManager
Agent
Deployment
Metadata
AppAU
EEHandler
EndPointProvider
Inventory
ComApi
OfflineSync
WebServices
DataStore
Handler
Shared
Setup
Timer
IdleTimer
Driver
Reporter
ProtocolTalker
DownloadManager
Agent
Deployment
Metadata
AppAU
EEHandler
EndPointProvider
Inventory
ComApi
OfflineSync
WebServices
DataStore
Handler
Shared
Setup
Timer
IdleTimer
Driver
Reporter
ProtocolTalker
DownloadManager
Agent
UUSLoadModuleFailed
PartA_PrivTags
__TlgCV__
Props
UusSessionId
ModulePath
ModuleVersion
UusVersion
StatusCode
RelatedCV
UUSLoadModuleSucceeded
PartA_PrivTags
__TlgCV__
Props
UusSessionId
ModulePath
ModuleVersion
UusVersion
RelatedCV
Microsoft.Windows.Update.Client
SIHTraceLogging
WUTraceLogging
Microsoft.Windows.Update.Client
Microsoft.Windows.Update.SIHClient
Microsoft.Windows.Update.WUClientExt
Microsoft.Windows.Update.WUClientExt
Microsoft.Windows.Update.WUClient
Microsoft.Windows.Update.WUClient
SoftwareUpdateClientTelemetry
SoftwareUpdateClientTelemetry
RSDS=N?
wuapi.pdb
.text
.text$di
.text$mn
.text$x
.text$yd
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gfids
.giats
.rdata
.rdata$r
.rdata$sxdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data
.data$r
.data$rs
.rsrc$01
.rsrc$02
wuapi.dll
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
_o____lc_codepage_func
_o___std_exception_copy
_o___std_exception_destroy
_o___stdio_common_vsnprintf_s
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o_abort
_o_calloc
_o_free
_o_malloc
_o_mbstowcs_s
_o_terminate
_o_wcscpy_s
api-ms-win-crt-private-l1-1-0.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
OutputDebugStringW
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
CoTaskMemFree
FreeLibrary
InitOnceComplete
InitOnceBeginInitialize
CreateFileW
ReleaseSRWLockExclusive
AcquireSRWLockExclusive
IsWow64Process2
GetCurrentProcess
LoadLibraryExW
InitializeCriticalSectionEx
DeleteCriticalSection
LeaveCriticalSection
EnterCriticalSection
AcquireSRWLockShared
ReleaseSRWLockShared
SetThreadpoolTimer
CloseThreadpoolTimer
WaitForThreadpoolTimerCallbacks
GetFeatureEnabledState
RecordFeatureUsage
SubscribeFeatureStateChangeNotification
UnsubscribeFeatureStateChangeNotification
EventUnregister
EventWriteTransfer
EventSetInformation
EventRegister
DisableThreadLibraryCalls
CreateThreadpoolTimer
GetModuleFileNameW
ExpandEnvironmentStringsW
CoTaskMemAlloc
RtlUnwind
EncodePointer
InitializeCriticalSectionAndSpinCount
TlsAlloc
TlsGetValue
TlsSetValue
TlsFree
InterlockedFlushSList
RaiseException
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
IsProcessorFeaturePresent
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
LocalFree
FormatMessageA
GetFileAttributesExW
AreFileApisANSI
GetFileInformationByHandleEx
WideCharToMultiByte
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-wow64-l1-1-1.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-featurestaging-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
wcsncmp
_initterm
_initterm_e
memset
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
RegOpenKeyExW
RegCloseKey
RegQueryValueExW
GetSystemDirectoryW
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
GetNativeSystemInfo
UnmapViewOfFile
GetFileSizeEx
CreateFileMappingW
MapViewOfFileEx
GetFileVersionInfoSizeExW
GetFileVersionInfoExW
VerQueryValueW
FindResourceW
LoadResource
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
.?AVbad_exception@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@std@@
.?AVbad_array_new_length@std@@
.?AVlogic_error@std@@
.?AVfilesystem_error@filesystem@std@@
.?AV_System_error@std@@
.?AVsystem_error@std@@
.?AVruntime_error@std@@
.?AVtype_info@@
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Windows Update Client API
FileVersion
922.812.111.0
InternalName
wuapi.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
wuapi.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
922.812.111.0
VarFileInfo
Translation
#x)F@
DWS;zh
iB\aHz
fH%w[
s?ohl 
4dt\+
stdole2.tlbWWW,1
EWUApiLib
UpdateLockdownOptiond
tagUpdateLockdownOptionWd
\uloForWebsiteAccessW
=AddServiceFlagWW,
tagAddServiceFlagWWW,
asfAllowPendingRegistrationW,
-asfAllowOnlineRegistrationWW,
asfRegisterServiceWithAU
UpdateServiceOptionW
tagUpdateServiceOptionWW
usoNonVolatileServiceWWWX
IUpdateLockdownWX
rYLockDown
oflagsWWW
IUpdateException
MessageW
;retvalWW
JVHResultW 
8T?UpdateExceptionContextWW
tagUpdateExceptionContextWWW
uecGeneralWW
uecWindowsDriver
uecWindowsInstallerW
,uecSearchIncompleteW
XnContextW
IInvalidProductLicenseExceptionW
aProductWL
IAutomaticUpdatesSettingsWWW
!8@lAutomaticUpdatesNotificationLevelWWW
6tagAutomaticUpdatesNotificationLevel
aunlNotConfiguredWWW
SaunlDisabled
&aunlNotifyBeforeDownload
aunlNotifyBeforeInstallation
kaunlScheduledInstallationWWWL
NotificationLevelWWWL
4<ReadOnlyL
Requiredx
"AutomaticUpdatesScheduledInstallationDay
YtagAutomaticUpdatesScheduledInstallationDayW
ausidEveryDayWWW
SausidEverySunday
_ausidEveryMonday
.ausidEveryTuesdayWWW
ausidEveryWednesdayW
ausidEveryThursdayWW
ausidEveryFriday
ausidEverySaturdayWWL
y ScheduledInstallationDayL
sScheduledInstallationTimeWWWL
RefreshWL
Save@
IAutomaticUpdatesSettings2WW@
%IncludeRecommendedUpdatesWWW
\AutomaticUpdatesUserType
tagAutomaticUpdatesUserTypeW
0<gauutCurrentUserW
auutLocalAdministratorWWl
AutomaticUpdatesPermissionTypeWW
htagAutomaticUpdatesPermissionTypeWWW
auptSetNotificationLevel
auptDisableAutomaticUpdatesW
 0B{auptSetIncludeRecommendedUpdates
$auptSetFeaturedUpdatesEnabledWWW
DauptSetNonAdministratorsElevated@
CheckPermissionW
userType
GpermissionTypeWW
QuserHasPermissionWWW4
IAutomaticUpdatesSettings3WW4
NonAdministratorsElevatedWWW4
~FeaturedUpdatesEnabledWW
'IUpdateW
~TitleWWW
lNAutoSelectOnWebSites
XIUpdateCollectionWWW
zItem
indexWWW
xA_NewEnum
0vCountWWW
rAddW
KvalueWWW
ClearWWW
rInsertWW
RemoveAt
BundledUpdatesWW
CanRequireSource`
ICategoryCollectionW
ICategoryWWW
@CategoryIDWW
Children
 DescriptionW(
IImageInformationWWW(
%AltTextW(
HeightWW(
SourceWW(
hNWidthWWW
ImageWWW
AOrderWWW
ParentWW
UpdatesW
CategoriesWW
Deadline
QDeltaCompressedContentAvailableW
zDeltaCompressedContentPreferredW
6EulaAccepted
EulaText
nOHandlerIDWWW
IUpdateIdentityW
RevisionNumberWW
UpdateID
Identity
\IInstallationBehaviorWWW
CanRequestUserInputWT
InstallationImpactWW
tagInstallationImpactWWW
iiNormal
iiMinorW
0fsiiRequiresExclusiveHandlingW
`xImpactWW
InstallationRebootBehaviorWW
tagInstallationRebootBehaviorWWW
irbNeverRebootsW
irbAlwaysRequiresRebootW
MirbCanRequestRebootW
}&RebootBehaviorWW
1RequiresNetworkConnectivityW
InstallationBehavior
,IsBetaWW
IsDownloaded
fIsHidden
IsInstalledW
2IsMandatoryW
IsUninstallableW
8ILIStringCollectionWWW
LanguagesWWW
x7LastDeploymentChangeTime
MaxDownloadSizeW
MinDownloadSizeW
EHMoreInfoUrls
-MsrcSeverity
RecommendedCpuSpeedW
RecommendedHardDiskSpace
RecommendedMemoryWWW
ReleaseNotes
SecurityBulletinIDsW
SupersededUpdateIDsW
SupportUrlWWH
UpdateTypeWW
ZtagUpdateTypeWWW
utSoftwareWW
utDriver
0fUninstallationNotesW
R-UninstallationBehaviorWW
UninstallationStepsW
KBArticleIDs
AcceptEulaWW
DeploymentActiont
tagDeploymentActionWt
daNoneWWt
daInstallationWWt
-daUninstallationt
daDetectionWt
;daOptionalInstallationWW
x#CopyFromCacheWWW
toExtractCabFilesWWW
$DownloadPriority<
-tagDownloadPriorityW<
dpLowWWW<
dpNormal<
dpHighWW<
dpExtraHighW
 8J3IUpdateDownloadContentCollection
IUpdateDownloadContentWW
DownloadUrlW
DownloadContentsh
IUpdate2h
OiRebootRequiredWWh
aIsPresentWWWh
CveIDsWWh
CopyToCacheW
pFilesWW
IUpdate3
BrowseOnlyWW0
IWindowsDriverUpdateEntryWWW0
DriverClassW0
-LDriverHardwareID0
_DriverManufacturerWW0
DriverModelW0
DriverProviderWW0
DriverVerDateWWW0
DeviceProblemNumberW0
DeviceStatus
#88>IWindowsDriverUpdateEntryCollectionW
IUpdate4
PerUserW\
IUpdate5
TAutoSelectionModeWWW$
etagAutoSelectionMode$
asLetWindowsUpdateDecide$
0<basAutoSelectIfDownloaded$
HasNeverAutoSelectWWW$
asAlwaysAutoSelectWW\
#*AutoSelectionWWW
AutoDownloadMode
tagAutoDownloadModeW
UadLetWindowsUpdateDecide
adNeverAutoDownloadW
eadAlwaysAutoDownload\
AutoDownloadP
_IWindowsDriverUpdate
IWindowsDriverUpdate2WWW
IWindowsDriverUpdate3WWW|
IWindowsDriverUpdate4WWW|
WindowsDriverUpdateEntriesWW
IWindowsDriverUpdate5WWWD
ISearchCompletedCallback
ISearchJobWW
AsyncStateWW
IsCompletedW
CleanUpW
DRequestAbort
8VWISearchCompletedCallbackArgsD
InvokeWW
searchJobWWW
callbackArgsp
IDownloadCompletedCallbackWW
AIDownloadJob8
IDownloadProgressWWW8
CurrentUpdateBytesDownloaded8
CurrentUpdateBytesToDownload8
CurrentUpdateIndexWW8
PercentCompleteW8
TotalBytesDownloaded8
TotalBytesToDownload
IUpdateDownloadResultWWW
OperationResultCodeWd
8,1tagOperationResultCodeWWd
sorcNotStartedWWWd
*orcInProgressWWWd
0Q)orcSucceededd
0tyorcSucceededWithErrorsWWd
{orcFailedWWWd
.orcAbortedWW
ResultCodeWW8
GetUpdateResultW
updateIndexW
2DownloadPhaseWWW,
8]ctagDownloadPhase,
SdphInitializingW,
dphDownloadingWW,
dphVerifying8
<\CurrentUpdateDownloadPhaseWW8
CurrentUpdatePercentComplete
JhGetProgressW
^IDownloadCompletedCallbackArgsWW
downloadJobW
^IDownloadProgressChangedCallbackX
IDownloadProgressChangedCallbackArgsX
uProgress
IInstallationCompletedCallbackWW 
8*qIInstallationJob
ZIInstallationProgressWWW
8FjIUpdateInstallationResultWWWL
IInstallationCompletedCallbackArgsWW
YinstallationJobW
IInstallationProgressChangedCallback
IInstallationProgressChangedCallbackArgsx
IUpdateHistoryEntryW
tagUpdateOperationWW
uoInstallationWW
uoUninstallationx
yOperationWWWx
;Datex
9+UpdateIdentityWWx
UnmappedResultCodeWWx
ClientApplicationIDW@
\ServerSelectionW
tagServerSelectionWW
ssDefaultWWW
ssManagedServerW
0%3ssWindowsUpdateW
_ssOthersx
ServiceIDWWW
IUpdateHistoryEntry2l 
UIUpdateDownloadContent2Wl 
IsDeltaCompressedContent
CStringCollection4!
.UpdateSearcherWW
IUpdateSearcher3
IUpdateSearcher2`"
IUpdateSearcherW`"
CanAutomaticallyUpgradeServiceWW`"
+IncludePotentiallySupersededUpdatesW`"
BeginSearchW
criteria
onCompletedW
stateWWW
ISearchResultWWW
RootCategoriesWW(#
3IUpdateExceptionCollectionWW
Warnings`"
}{EndSearchWWW`"
l[EscapeString
XunescapedWWW
IUpdateHistoryEntryCollectionWWW`"
{QueryHistory
startIndexWW`"
SearchWW`"
OnlineWW`"
GetTotalHistoryCount
IgnoreDownloadPriorityWW
SearchScopeWT$
=tagSearchScopeWWT$
searchScopeDefaultWWT$
msearchScopeMachineOnlyWWT$
searchScopeCurrentUserOnlyWWT$
}searchScopeMachineAndCurrentUserT$
0=EsearchScopeMachineAndAllUsersWWWT$
searchScopeAllUsersW
uWebProxy
IWebProxyWWW
AddressW
BypassListWW
BypassProxyOnLocalWW
UserName
SetPasswordW
PromptForCredentials
parentWindow
wireHWND
_RemotableHandle
cfContextH&
Z__MIDL_IWinTypes_0009WWWH&
JhInprocWH&
hRemoteW
PromptForCredentialsFromHwnd
DAutoDetectWW
8fNSystemInformationWWW
ISystemInformationWW
xOemHardwareSupportLinkWWt'
WindowsUpdateAgentInfoWW
IWindowsUpdateAgentInfoW
GetInfoW
varInfoIdentifierWWW<(
AutomaticUpdates
IAutomaticUpdates2WW
IAutomaticUpdatesWWW
DetectNowWWW
PauseWWW
rResumeWW
ShowSettingsDialogWW
JXSettings
ServiceEnabledWW
jZEnableServiceWWWh)
8~hIAutomaticUpdatesResultsh)
)LastSearchSuccessDateWWWh)
LastInstallationSuccessDateW
ResultsW
_UpdateCollection0*
8YnUpdateDownloader
vIUpdateDownloaderWWW
oIsForced
Priority
BeginDownloadWWW
onProgressChangedWWW
8tBIDownloadResultW
Download
EndDownloadW\+
UpdateInstallerW
IUpdateInstaller4WWW$,
IUpdateInstaller3WWW
IUpdateInstaller2WWW
IUpdateInstaller
ParentHwndWW
pBeginInstall
BeginUninstallWWP-
^IInstallationResultW
sEndInstallWW
vEndUninstall
InstallW
RunWizardWWW
dialogTitleW
IsBusyWW
^aUninstallWWW
AllowSourcePromptsWW
)JRebootRequiredBeforeInstallation
ForceQuietWW$,
AttemptCloseAppsIfNecessaryW
CommitWW
dwFlagsW
8'yUpdateSessionWWW
IUpdateSession3W|.
IUpdateSession2W
MIUpdateSessionWW
CreateUpdateSearcher
CreateUpdateDownloaderWW
/CreateUpdateInstallerWWW|.
UserLocaleWWD/
IUpdateServiceManager2WW
`IUpdateServiceManagerWWW
IUpdateServiceCollectionp0
IUpdateServiceWWp0
ContentValidationCertWWWp0
gExpirationDateWWp0
JlIsManagedWWWp0
IsRegisteredWithAUWWp0
IssueDateWWWp0
OffersWindowsUpdatesp0
RedirectUrlsp0
IsScanPackageServicep0
CanRegisterWithAUWWWp0
ServiceUrlWWp0
SetupPrefixW
Services
AddServiceWW
authorizationCabPath
RegisterServiceWithAUWWW
RemoveServiceWWW
;UnregisterServiceWithAUW
AddScanPackageServiceWWW
serviceNameW
pXscanFileLocation
ppServiceWWW
SetOptionWWW
noptionNameWW
J#optionValueW
IUpdateServiceRegistrationWW81
UpdateServiceRegistrationStateWW
tagUpdateServiceRegistrationStateWWW
usrsNotRegisteredWWW
usrsRegistrationPendingW
usrsRegisteredWW
RegistrationStateWWW
$ZIsPendingRegistrationWithAUW
BIUpdateService2W
IsDefaultAUServiceWW
D]ServiceWD/
QueryServiceRegistrationD/
AddService2W
CreateUpdateServiceManagerWWd2
UpdateServiceManager
InstallationAgentWWW,3
LIInstallationAgentWW,3
RecordInstallationResult
installationResultCookie
extendedReportingDataWWW
WUAPI 2.0 Type LibraryX
Defines the possible restrictions for IUpdateLockdown::LockDown() to impose on an objectWW
For website accessF
Defines the possible options for IUpdateServiceManager2::AddService2())
Allow deferred processing when not onlineW
Allow online processingWWW
Register service with AUWWB
Defines the possible service options when adding an update service
Non-volatile serviceWW
IUpdateLockdown InterfaceW6
Restricts access to functionality the object provides.
IUpdateException Interface4
Gets a message that describes the current exception.WWO
Gets HRESULT, a coded numerical value that is assigned to a specific exception.WWW>
Defines contexts under which an UpdateException can be raised.
GeneralWWW
WindowsDriverW
WindowsInstallerWW
SearchIncompleteWWK
Gets a numerical value that indicates the context of the current exception.WWW)
IInvalidProductLicenseException InterfaceW/
Gets the language-invariant name of the productWWW#
IAutomaticUpdatesSettings InterfaceWWW^
Defines possible ways in which elevated users will be notified about Automatic Updates events.
Not configured
DisabledWW
Notify before download
Notify before installation
Scheduled installationM
Indicates how elevated users will be notified about Automatic Updates events.WM
Specifies how elevated users will be notified about Automatic Updates events.W-
Indicates whether the settings are read-only.WL
Indicates whether the Automatic Updates service is required by Group Policy.WWO
Defines possible day(s) of week when Automatic Updates may (un)install updates.WWW
Every DayW
Every SundayWW
Every MondayWW
Every TuesdayW
Every WednesdayWWW
Every Thursday
Every FridayWW
Every SaturdayI
Indicates which day(s) of week Automatic Updates may (un)install updates.WI
Specifies which day(s) of week Automatic Updates may (un)install updates.WB
Indicates the time when Automatic Updates may (un)install updates.B
Specifies the time when Automatic Updates may (un)install updates.
Gets the up-to-date settings.W
Applies the settings.W$
IAutomaticUpdatesSettings2 InterfaceWW1
Indicates whether to include recommended updates.W1
Specifies whether to include recommended updates.Wg
Defines types of users whose permissions can be checked via IAutomaticUpdatesSettings2.CheckPermission.WWW
The current userWW)
An administrative account calling locallyWu
Defines operations against which users' permissions can be checked via IAutomaticUpdatesSettings2::CheckPermission().W
Set AU notification levelW%
Set AU notification level to DisabledW&
Set AU setting for recommended updates#
Set AU setting for featured updatesWWW;
Set AU setting to increase priviliges for non administratorWWWS
Determines whether a class of users has permission to perform the specified action.WWW$
IAutomaticUpdatesSettings3 InterfaceWWj
Reports whether non-administrators can perform some update-related actions without administrator approval.k
Controls whether non-administrators can perform some update-related actions without administrator approval.WWW>
Reports whether to display notifications for featured updates.?
Controls whether to display notifications for featured updates.WWW
IUpdate InterfaceW'
Gets the localized title of the Update.WWWz
Gets a value indicating whether the Update is flagged to be automatically selected by applications such as Windows Update.
IUpdateCollection InterfaceWWW"
Gets an element in the collection."
Sets an element in the collection.Y
Gets an IEnumVARIANT interface on an object that can be used to enumerate the collection.W8
Gets the number of elements contained in the collection.WWD
Gets a boolean value indicating whether the collection is read-only.WW
Adds an item to the collection.WWW)
Removes all elements from the collection.W7
Creates a shallow read-writable copy of the collection.WWW<
Inserts an item to the collection at the specified position.WW<
Removes the item at the specified index from the collection.WWF
Gets information on the ordered list of bundled updates of the Update.^
Indicates whether the source media of the Update is potentially required for (un)installation.
ICategoryCollection InterfaceW
ICategory InterfaceWWW(
Gets the localized name of the Category.WW%
Gets the category ID of the Category.W"
Gets the children of the Category.%
Gets the description of the Category.W
IImageInformation InterfaceWWW
Gets the ATL text of the image.WWW(
Gets the height of the image, in pixels.WW&
Gets the source location of the image.'
Gets the width of the image, in pixels.WWW;
Gets information on the image associated with the Category.WWWF
Gets the recommended display order of the Category among its siblings. 
Gets the parent of the Category.WW
Gets the type of the Category.:
Gets the updates which immediately belong to the Category./
Gets the categories that the update belongs to.WWW4
Gets the date by which the Update must be installed.WWU
Indicates whether delta-compressed content is available on the server for the Update.W
Indicates whether to prefer delta-compressed content when downloading and/or (un)installing the Update, if such content is available.W-
Gets the localized description of the Update.Wj
Indicates whether the license terms associated with the Update have been accepted for the target computer.N
Gets the full, localized text of the license terms associated with the Update.:
Gets a value specifying the install handler of the Update.
IUpdateIdentity InterfaceW'
Gets the revision number of the Update.WWWA
Gets a string identifying the Update in a globally-unique manner.W0
Gets the globally-unique identity of the Update.WW9
Gets information on the image associated with the Update.W
IInstallationBehavior InterfaceWWWV
Gets a value indicating whether (un)installation of the Update can request user input.Q
Defines possible levels of impact that may be caused by (un)installing an Update.W
Normal
MinorW
Requires exclusive handlingWWWZ
Gets a value assessing how (un)installation of the Update will impact the target computer.Q
Defines possible reboot behaviors exhibited by an Update during (un)installation.W
Never rebootsW
Always requires reboot
Can request rebootS
Gets a value specifying the reboot behavior exhibited by (un)installing the Update.WWW]
Gets a value indicating whether (un)installation of the Update requires network connectivity.W,
Gets the installation options of the Update.WW=
Gets a value indicating whether the Update is a beta release.WO
Indicates whether all of the Update's content is cached on the target computer.WWWJ
Indicates whether the Update has been hidden by the user for installation.8
(Un)marks the update as "hidden" on the target computer.WW`
Indicates whether the Update was installed on the target computer when the search was performed.WWH
Gets a value indicating whether installation of the Update is mandatory.WW^
Indicates whether the caller can uninstall the Update, if installed, from the target computer.
IStringCollection InterfaceWWW4
Creates a deep read-writable copy of the collection.WW,
Gets the languages that the Update supports.WW&
Gets the published date of the Update.-
Gets the maximum download size of the Update.W-
Gets the minimum download size of the Update.WT
Gets language-specific strings specifying the hyperlinks to more info on the Update.WWJ
Gets the Microsoft Security Response Center severity rating of the Update.H
Gets the recommended CPU speed, in megahertz, for installing the Update.WWS
Gets the recommended hard disk free space, in megabytes, for installing the Update.WWWS
Gets the recommended physical memory size, in megabytes, for installing the Update.WWW/
Gets the localized release notes of the Update.WWW:
Gets the security bulletin IDs associated with the Update.R
Gets a collection of update IDs specifying the Updates that the Update supersedes.N
Gets the language-specific hyperlink to the support information on the Update.$
Defines possible types of an update.WW
SoftwareWW
Driver
Gets the type of the Update.WW,
Gets the uninstallation notes of the Update.WW.
Gets the uninstallation options of the Update.,
Gets the uninstallation steps of the Update.WW?
Gets the knowledge base article IDs associated with the Update.WWW5
Accepts the license terms associated with the Update.W9
Defines actions an Update can be explicitly deployed for.W
NoneWW
InstallationWW
Uninstallation
DetectionW
OptionalInstallationWW/
Indicates the action an Update is deployed for.WWW8
Copies the contents of the Update into a specified path.WW5
Defines possible priorities for a download operation.W
LowWWW
HighWW
ExtraHighW8
Indicates the suggested download priority of the Update.WW*
IUpdateDownloadContentCollection Interface 
IUpdateDownloadContent InterfaceWW@
Gets the location of the download content on the hosting server.WWG
Gets file information on the immediate download contents of the Update.WWW
IUpdate2 Interfacei
Gets a value indicating whether the computer still needs to be rebooted after (un)installing this update.W7
Indicates whether the update is present on the machine.WWW,
Gets the CVE IDs associated with the Update.WW<
Copies externally provided update binaries to install cache.WW
IUpdate3 Interfacev
Gets a value indicating whether this update is intended only for discovery by end users browsing manually for updates.#
IWindowsDriverUpdateEntry InterfaceWWW.
Specifes the class of the WindowsDriverUpdate.e
Specifies the hardware ID or compatible ID that the WindowsDriverUpdate must match to be installable.WU
Specifies the language-invariant name of the manufacturer of the WindowsDriverUpdate.Wh
Specifies the language-invariant model name of the device for which the WindowsDriverUpdate is intended.WWQ
Specifies the language-invariant name of the provider of the WindowsDriverUpdate.W=
Specifies the driver version date of the WindowsDriverUpdate.WN
Returns the problem number of the matching device for the WindowsDriverUpdate.F
Returns the status of the matching device for the WindowsDriverUpdate.-
IWindowsDriverUpdateEntryCollection InterfaceW
IUpdate4 Interface+
Indicates whether this is a per-user updateWWW
IUpdate5 Interface0
Defines possible auto selection modes of update.WW
Let windows update decideW
Auto select if downloadedW
Never auto selectW
Always auto select]
Gets a value indicating the auto selection mode of update in control panel of Windows Update.W/
Defines possible auto download modes of update.WWW
Never auto downloadWWW
Always auto downloadWW9
Gets a value indicating the auto download mode of update.W
IWindowsDriverUpdate InterfaceP
Specifies the language-invariant name of the provider of theWindowsDriverUpdate.WW
IWindowsDriverUpdate2 InterfaceWWW
IWindowsDriverUpdate3 InterfaceWWW
IWindowsDriverUpdate4 InterfaceWWWB
Gets the driver update entries that are applicable for the update.3
Indicates whether this update is a per-user update WWW
IWindowsDriverUpdate5 InterfaceWWW"
ISearchCompletedCallback Interface
ISearchJob InterfaceWWW
Gets the caller-specified state object passed to the UpdateSearcher.BeginSearch method.WWWG
Gets a value indicating whether the call has been completely processed.WWWP
Waits for asynchronous operation to complete and releases all callbacks, if any.WW*
Requests to abort the asynchronous search.&
ISearchCompletedCallbackArgs Interfacex
Handles the notification about the completion of an asynchronous search initiated by calling UpdateSearcher.BeginSearch.WW$
IDownloadCompletedCallback InterfaceWW
IDownloadJob Interface[
Gets the caller-specified state object passed to the UpdateDownloader.BeginDownload method.WWWE
Gets a read-only collection of the updates specified in the download.W
IDownloadProgress InterfaceWWW|
Gets a value specifying how much data has been transferred for the content file(s) of the update being downloaded, in bytes.WW
Gets a value approximating how much data should be transferred for the content file(s) of the update being downloaded, in bytes.WW
Gets a zero-based index value into the updates specified in the download for the one which content file(s) are being downloaded.WWI
Gets a value estimating how far the download has progressed, in percents.W]
Gets a value specifying how much overall data has been transferred by the download, in bytes.Wj
Gets a value approximating how much data should be transferred over all updates by the download, in bytes.
IUpdateDownloadResult InterfaceWWWA
Gets the HRESULT value returned from the operation on the update.W\
Defines possible results of a download, (un)install, or verification operation on an update.WW
Not startedWWW
In progressWWW
SucceededW
Succeeded with errorsW
Failed
AbortedWWWc
Gets an OperationResultCode enumeration value specifying the result of the operation on the update.WWW6
Gets the result of the download on a specified update.8
Defines the possible phases during a download operation.WW
InitializingWW
DownloadingWWW
VerifyingW`
Gets a DownloadPhase enumeration value specifying the current phase of the download in progress.WW_
Gets a value estimating how far the download of the current update has progressed, in percents.WWW*
Gets the current progress of the download.,
Requests to abort the asynchronous download.WW(
IDownloadCompletedCallbackArgs InterfaceWW~
Handles the notification about the completion of an asynchronous download initiated by calling UpdateDownloader.BeginDownload.*
IDownloadProgressChangedCallback Interface.
IDownloadProgressChangedCallbackArgs InterfaceQ
Gets the progress of the asynchronous download at the time the callback was made.W
Handles the notification about the change of progress of an asynchronous download initiated by calling UpdateDownloader.BeginDownload.(
IInstallationCompletedCallback InterfaceWW
IInstallationJob Interface
Gets the caller-specified state object passed to the corresponding UpdateInstaller.BeginInstall or UpdateInstaller.BeginUninstall methods.M
Gets a read-only collection of the updates specified in the (un)installation.W
IInstallationProgress InterfaceWWW
Gets a zero-based index value into the updates specified in the (un)installation for the one which content file(s) are being (un)installed.WWWu
Gets a value specifying how much the (un)installation has completed upon the update being (un)installed, in percents.WY
Gets a value specifying how much overall the (un)installation has completed, in percents.W#
IUpdateInstallationResult InterfaceWWW8
Gets the HRESULT value from the operation on the update.WWn
Indicates whether system reboot is required on the target computer to complete the installation on the Update.>
Gets the result of the (un)installation on a specified update.2
Gets the current progress of the (un)installation.4
Requests to abort the asynchronous (un)installation.WW,
IInstallationCompletedCallbackArgs InterfaceWW
Handles the notification about the completion of an asynchronous (un)installation initiated by the corresponding UpdateInstaller.BeginInstall or UpdateInstaller.BeginUninstall call.W.
IInstallationProgressChangedCallback Interface2
IInstallationProgressChangedCallbackArgs InterfaceY
Gets the progress of the asynchronous (un)installation at the time the callback was made.W
Handles the notification about the change of progress of an asynchronous (un)installation initiated by the corresponding UpdateInstaller.BeginInstall or Update.BeginUninstall call.WW
IUpdateHistoryEntry InterfaceWO
Gets an Operation enumeration value specifying the the operation on the update.WWW3
Gets the date and time when the update was applied.WWW0
Gets the globally-unique identity of the update.WW
Gets the title of the update.W#
Gets the description of the update.WWWH
Gets the unmapped result code returned from the operation on the update.WWH
Gets the identifier of the client application that processed the update.WWC
Defines possible server selections the Searcher can search against.WWW
DefaultWWW
Managed server
Windows Update
Others4
Gets the kind of service where the update came from.WW>
Gets the identifier of the service where the update came from.
Gets steps to uninstall update.WWW
Gets uninstallation notes.
Gets support URL.W
IUpdateHistoryEntry2 Interface!
IUpdateDownloadContent2 InterfaceWI
Returns whether this forms part of the delta compressed download content.W
StringCollection Class
UpdateSearcher ClassWW
IUpdateSearcher3 Interface
IUpdateSearcher2 Interface
IUpdateSearcher InterfaceWt
Indicates whether future calls to BeginSearch and Search can automatically upgrade the MSUS client as a side-effect.WWt
Specifies whether future calls to BeginSearch and Search can automatically upgrade the MSUS client as a side-effect.WW6
Gets the identifier of the current client application.6
Sets the identifier of the current client application.u
Indicates whether to include, in the search results, updates that are superseded by any other updates in the results.Wu
Specifies whether to include, in the search results, updates that are superseded by any other updates in the results.W
Gets the server specified.)
Specifies which server to search against.WL
Starts an asynchronous search using the currently configured search options.WW
ISearchResult InterfaceWWWZ
Gets an OperationResultCode enumeration value specifying the overall result of the search.E
Gets the root categories currently available on the target  computer.W6
Gets a collection of Updates resulted from the search.$
IUpdateExceptionCollection InterfaceWW7
Gets a collection of warnings resulted from the search.WWW!
Completes an asynchronous search.WX
Convert string into one that can be used as a literal value in a search criteria string.WW'
IUpdateHistoryEntryCollection InterfaceWWWK
Synchronously queries the target computer for the history of update events.WWWK
Perform a synchronous search using the currently configured search options.WWWL
Indicates whether the UpdateSearcher goes online when searching for updates.WWL
Specifies whether the UpdateSearcher goes online when searching for updates.WW3
Get number of update events on the target computer.WWW1
Gets the Non-Windows Update Service ID specified.W>
Specifies the Non-Windows Update Service ID to search against.Z
Gets whether to ignore download priority of updates when computing potential supersedence._
Specifies whether to ignore download priority of updates when computing potential supersedence.WWW
Defines possible search scopes for a search call. The scope may indicate user updatesfor the calling user updates for all users, machine updates or a combination of these.WWW
Default search scopeWW
Machine updates onlyWW4
Per-user updates applicable to the calling user onlyWWC
Machine updates and per-user updates applicable to the calling userWWW;
Machine updates and per-user updates applicable to any userWWW'
Per-user updates applicable to any userWWWa
Gets a SearchScope enumeration value which indicates the scope of updates returned by the search.W<
Specifies the scope of updates to be returned by the search.WW
WebProxy Class
IWebProxy InterfaceWWW%
Gets the address of the proxy server.W%
Sets the address of the proxy server.W@
Gets a collection of addresses that do not use the proxy server.WW@
Sets a collection of addresses that do not use the proxy server.WWO
Gets a value indicating whether to bypass the proxy server for local addresses.WWWO
Sets a value indicating whether to bypass the proxy server for local addresses.WWWI
Gets a boolean value indicating whether the WebProxy object is read-only.WD
Gets the user name to submit to the proxy server for authentication.WWD
Sets the user name to submit to the proxy server for authentication.WWC
Sets the password to submit to the proxy server for authentication.WWWQ
Launches the Credentials UI to prompt user for password for proxy authentication.W9
Indicates whether to automatically detect proxy settings.W9
Specifies whether to automatically detect proxy settings.W
SystemInformation ClassWWW
ISystemInformation InterfaceWWB
Gets the hyperlink to the support information on the OEM hardware.p
Gets a value indicating whether a system reboot is required to complete (un)installation of one or more Updates.WW
WindowsUpdateAgentInfo ClassWW!
IWindowsUpdateAgentInfo InterfaceW
Get Windows Update Agent Info.
AutomaticUpdates Class
IAutomaticUpdates2 InterfaceWW
IAutomaticUpdates InterfaceWWW9
Triggers automatic updating now if it is not yet started.W
Pauses automatic updating.%
Resumes automatic updating if paused.W<
Display a dialog box showing settings for Automatic Updates.WW4
Returns the settings to configure Automatic Updates.WWX
Indicates whether all the components that Automatic Updates requires are up and running.WW;
Enables all the components that Automatic Updates requires.WWW"
IAutomaticUpdatesResults InterfaceD
Returns the date and time of the last successful search for updates.WWI
Returns the date and time of the last successful installation of updates.We
Gets an IAutomaticUpdatesResults interface for querying results of past Automatic Updates operations.W
UpdateCollection Class
UpdateDownloader Class
IUpdateDownloader InterfaceWWW?
Indicates whether to forcefully download the specified updates.WWW?
Specifies whether to forcefully download the specified updates.WWW0
Gets the desired priority level of the download.WW5
Specifies the desired priority level of the download.W
Gets the updates to download.W"
Specifies the updates to download.]
Begins an asynchronous operation to download the content file(s) associated with the updates.W
IDownloadResult InterfaceW2
Gets the HRESULT value returned from the download.\
Gets an OperationResultCode enumeration value specifying the overall result of the download.WWg
Synchronously downloads the content file(s) of the update(s) to the local cache on the target computer.WWW#
Completes an asynchronous download.WWW
UpdateInstaller ClassW
IUpdateInstaller4 InterfaceWWW
IUpdateInstaller3 InterfaceWWW
IUpdateInstaller2 InterfaceWWW
IUpdateInstaller InterfaceB
Indicates whether to forcefully (un)install the specified updates.B
Specifies whether to forcefully (un)install the specified updates.F
Gets the window on top of which the wizard dialog box should be shown.F
Sets the window on top of which the wizard dialog box should be shown.R
Sets the web browser window on top of which the wizard dialog box should be shown.R
Gets the web browser window on top of which the wizard dialog box should be shown. 
Gets the updates to (un)install.WW%
Specifies the updates to (un)install.W8
Begins an asynchronous operation to install the updates.WW:
Begins an asynchronous operation to uninstall the updates.
IInstallationResult InterfaceW4
Gets the HRESULT returned from the (un)installation.WWf
Indicates whether a system reboot is required on the target computer to complete the (un)installation.d
Gets an OperationResultCode enumeration value specifying the overall result of the (un)installation.WW'
Completes an asynchronous installation.WWW)
Completes an asynchronous uninstallation.W8
Synchronously installs updates onto the target computer.WWO
Interactively guides the local user to go through the steps to install updates.WWWZ
Indicates whether (un)installation can be performed on the target computer at this moment.>
Synchronously uninstalls the updates from the target computer.\
Indicates whether to show source prompts to the user, when needed, while installing updates.WW\
Specifies whether to show source prompts to the user, when needed, while installing updates.WWZ
Gets a value indicating whether a system reboot is required before (un)installing updates.1
Returns whether no UI interaction will be forced.WZ
Specifies that the installer will be forced to do an install without any user interaction.r
Returns whether the update installer will attempt to close applications blocking immediate installation of updatest
Specifies whether the update installer will attempt to close applications blocking immediate installation of updatesWW:
Commit or finalize previously staged or installed updates.
UpdateSession ClassWWW
IUpdateSession3 InterfaceW
IUpdateSession2 InterfaceW
IUpdateSession InterfaceWWN
Gets a boolean value indicating whether the UpdateSession object is read-only.c
Gets the proxy settings required to reaching the server for future operations in the UpdateSession.WWW`
Sets the proxy settings required to reach the server for future operations in the UpdateSession.WW3
Creates an UpdateSearcher within the UpdateSession.WWW5
Creates an UpdateDownloader within the UpdateSession.W4
Creates an UpdateInstaller within the UpdateSession.WW.
Gets the locale being used for update results..
Sets the locale to be used for update results. 
IUpdateServiceManager2 InterfaceWW
IUpdateServiceManager InterfaceWWW"
IUpdateServiceCollection Interface
IUpdateService InterfaceWW
Name of the Service.WW3
SHA1 hash of the certificate used to sign contents.WWW5
Gets the date on which the Authorization Cab expires.W3
Indicates whether the Service is a managed service.WWWC
Indicates whether the Service is registered with Automatic Updates.WWW8
Gets the date on which the Authorization Cab was issued.WW5
Indicates whether the Service offers Windows updates.W
URLs for the redirector cab.WW#
Gets the identifier of the Service.WWWF
Indicates whether the service is registered as a scan package service.3
Indicates whether the service can register with AU.WWW
Indicates the service URL.%
Indicates the prefix for setup files.W7
Gets the services registered with Windows Update Agent.WWW.
Registers a service with Windows Update Agent.-
Registers the service with Automatic Updates.W9
Removes a service registration from Windows Update Agent.W/
Unregisters the service from Automatic Updates.WWW
Adds the scan package service.8
Sets options for the functionality this object provides.WW$
IUpdateServiceRegistration InterfaceWW0
Defines possible states of service registration.WW
Not registered
Registration pendingWW
Registered+
Gets the registration state of the Service.WWW5
Gets the service ID associated with the registration.W4
Whether the Service is pending registration with AU.WW
IUpdateService2 InterfaceW=
Indicates whether the Service is in use by Automatic Updates.W
Information on the Service.WWW,
Look up an update service by its service ID.WW_
Registers a service with Windows Update Agent without specifying an authorization cabinet file.WWW9
Creates an UpdateServiceManager within the UpdateSession.Wb
Synchronously queries the target computer for the history of update events given a query criteria.
UpdateServiceManager Class
InstallationAgent ClassWWW
IInstallationAgent InterfaceWW,
Records the specified result for the update.WW
Created by MIDL version 8.01.0628 at Tue Jan 19 03:14:07 2038
\vG)`
TYPELIB
en-US
<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
      <requestedPrivileges>
        <requestedExecutionLevel level='asInvoker' uiAccess='false' />
      </requestedPrivileges>
    </security>
  </trustInfo>
</assembly>
11173v3
4,4S4F6
82868<8@8F8J8b8f8l8p8v8z8
9 9$9*9.94989Q9q9v9{9
: :&:::@:E:a:
:7;]=
=2>D>
?+?[?{?
0"0:0U0o0
1i1s1
2+242I2b2t2
3r3y3
9&:0:S:f:n:
:,;x;
;<<`<
<!=+={=
=N>k>
?)?2?>?K?[?e?r?|?
2E2n2z2
4 4D4N4]4
5+5[516;6
8D9V9v9
:$:D:J:W:b:{:
;$;X;e;w;
<)</<
='=:=f=z=
>"?:?I?P?
5/575J5R5e5
6=6C6L6X6Z7
9/979J9R9e9y9
9%:+:3:?:s:
=D=v=
?-?8?^?
3G4C5m5B6c6
7.8v8
9%929I9[9
<$<0<
=(=7=W=d=
?U?b?x?
0Z1e1
5!6+626@6T6u6{6
:6;R;
;Q<[<n<
="=1=
='>P>^>{>
>5?\?k?
2J2g2p2
373I3S3
4%4+454?4Q4
5M5n5s5
556a6
7)767
8*888]8h8
9'9L<
1[2d3
= =?=p=
=.>T>
040^0
1*202R2
3F3V3j3
6#6A6l6
7%7C7R7
8@8\8
9O9p9
9!:?:K:
:$<0<M<q<}<
>!>)><>D>`>v>
?<?B?K?W?l?
30Q0~0
1%202>2s2~2
3(3]3h3v3
3A4O4
5(565j5u5
6l6z6
7H7S7a7
7/8:8H8|8
9S9^9l9
:+;6;D;y;
< <.<c<n<|<
=;=F=T=
=">->;>o>z>
>$?2?f?q?
0M0X0f0
141|1
2$2X2c2q2
2R3`3
314<4J4
5&545i5
6@6K6Y6
6'727@7t7
8)878k8v8
9R9]9k9
94:B:v:
;);];h;v;
<M<X<e<
<4=?=L=
>d>r>
?@?K?Y?
1)171k1v1
2R2]2k2
2)343B3v3
4)4]4
5N5Y5g5
686C6Q6
7*7^7i7w7
8E8P8^8
8G9U9
9#:.:<:p:{:
;#;W;
;.<9<G<{<
=1=_=
>G>P>V>
2,272X2
3O3r3
4 4%4,41484=4K4P4Z4_4i4n4|4
50526l6
8C8z8
9#9C9
:;:m:
:-;C;X;
<)<0<C<Z<`<e<n<
=(=.=@=Q=V=c=q=
>0>=>n>
?0?L?f?
1%2`2
293\3u3
394V4`4q4
4,5?5
7%717=7I7U7a7m7y7
8"8.8
8"9:9?9
9X:i:3<
>6>P>
?%?3?T?e?w?
?J?R?d?q?
030\0u0
1$1.1@1E1J1e1o1
6[6`6d6h6l6
9e9q9
; ;';-;H;a;j;u;|;
<$<*<4<><N<^<n<w<
>A>g>v>
0<1h1u1
2I2S2a2|2
4'5`5
5V6[6m6
6N7X7a7
8T8^8g8p8
949P9
:<:F:e:
;5;o;x;
<0<`<
=F=t=
=#>R>^>
>L?V?
3!4Q4t4
5L5y5
748{8
:+;N;q;
<*<M<
<;={=
?1?A?Q?a?r?
h2p2t2x2|2
2P5T5X5\5`5d5h5|5
7 7(70787@7H7P7X7`7h7p7x7
8 8(80888@8H8P8X8`8h8p8x8
9 9(90989@9H9P9X9`9h9p9x9
80<0@0D0P0T0X0l0p0t0x0|0
0$4,444<4D4L4T4\4d4l4t4|4
5$5,545<5D5L5T5\5d5l5t5|5
6$6,646<6D6L6T6\6d6l6t6|6
6l?p?
3 3$3@3D3H3L3P3T3X3\3
?@?X?
0 0$04080@0X0h0l0|0
1 1(1@1P1T1d1h1l1p1x1
;0<8<@<P<`<h<
=$=4=@=`=p=
>4>@>d>t>
?8?D?d?p?
0<0D0L0X0x0
10181@1L1l1t1|1
2$2,242<2D2L2T2d2l2
3,343@3`3h3p3x3
4(4H4T4t4|4
5(5L5T5d5l5t5
6$646<6D6\6`6
6$7(7D7H7P7X7`7d7l7
888D8\8`8|8
90989<9D9X9`9h9p9
:,:4:<:D:H:L:P:X:l:t:
L0T0d0
1 101@1P1`1p1
2 202@2P2`2p2
2 3,3T3
4 4@4`4|4
545T5t5
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
220505192315Z
230504192315Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
?/=KzdN
uyL7j
#HMDuV
:Tt3n
v~Bpd
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4700220
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
&go`4
m<&8cx
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
bpAP5$
,sSEf613q3nD04diGMqXcxaZWF62TOk0Iaz3os4y/nf4=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
gc/7P
20220817024749.522Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:EACE-E316-C91D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190517Z
230228190517Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:EACE-E316-C91D1%0#
Microsoft Time-Stamp Service0
X@qCs
t<R;>
2dLdO~
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
\\]\JQ=7
mifb~
!a+b:=-
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:EACE-E316-C91D1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220817102307Z
20220818102307Z0w0=
1/0-0
1(0&0
T"7Fs
9:IL?
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
N!fp+
I<s:F
