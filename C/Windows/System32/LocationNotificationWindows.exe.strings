!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
L$XE3
L$pH3
D$(E3
D$PE3
L$`H3
L$0H3
t$ UWAVH
9|$ht
t$ WH
HcGXH
UVWATAUAVAWH
A_A^A]A\_^]
|$ AVH
q0R^G'
q0R^G'
q0R^G'
q0R^G'
@SVWH
q0R^G'
\$ UH
M H1E
 H3E H3E
ED$`H
u/HcH<H
ntelA
ineID
x AVH
x ATAVAWH
A_A^A\
@USVWATAUAVAWH
9\$8|
@USVWATAUAVAWH
A_A^A]A\_^[]
D$8E3
D$(E3
UVWATAUAVAWH
tg@8=
t"@8=
fA9>u
t!@8=
@A_A^A]A\_^]
|$ AVH
T$ E3
@USVWATAVAWH
A_A^A\_^[]
L$@E3
x AVH
WAVAWH
 A_A^_
D$ E3
L$ SWH
x AVH
WAVAWH
 A_A^_
VWAVH
 A^_^
{ AVH
t$ WH
t$ WH
UVWAVAWH
fD9<Gu
pCYp_
A_A^_^]
fA9,Qu
x AVH
9HuL3
9i@~.3
x_;k@}ZH
L$@H3
WATAUAVAWH
0A_A^A]A\_
t$ WH
H VWATAUAVH
6;n(t
A^A]A\_^
H9O(uAH
x AVH
|$ AVH
|$ AVH
D$0fD9 t
|$ AVH
\$ UVWAVAWH
t,@8-
A_A^_^]
@SUVWAVH
D$0L;
D$0L;
A^_^][
D$PE3
L$ SWH
L$XH+
WATAUAVAWH
H9/sDH
 A_A^A]A\_
|$ AVH
H93s-
|$ UAVAWH
fD98t
HcL$8H
HcD$<H
A_A^]
USATAVAWH
A_A^A\[]
api-ms-win-core-synch-l1-2-0.dll
kernel32.dll
SleepConditionVariableCS
WakeAllConditionVariable
bad allocation
Unknown exception
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
::CloseHandle(h)
wil::details::CloseHandle
::ReleaseMutex(h)
wil::details::ReleaseMutex
WilError_03
ntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
Local\SM0:%lu:%lu:%hs
SemaphoreValue::TryGetPointer(name, &pointer)
wil::details_abi::ProcessLocalStorageData<struct wil::details_abi::ProcessLocalData>::Acquire
MakeAndInitialize(name, wistd::move(mutex), data)
dataAlloc
wil::details_abi::ProcessLocalStorageData<struct wil::details_abi::ProcessLocalData>::MakeAndInitialize
semaphoreValue.CreateFromPointer(name, dataAlloc.get())
(status == WAIT_TIMEOUT) || (status == WAIT_OBJECT_0) || (status == WAIT_ABANDONED) || (bAlertable && (status == WAIT_IO_COMPLETION))
wil::mutex_t<class wil::details::unique_storage<struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&void __cdecl wil::details::CloseHandle(void *),struct wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,struct wil::err_returncode_policy>::acquire
ACoInitializeEx(NULL, COINIT_MULTITHREADED)
WinMain
drivers\mobilepc\location\product\winnotification\notification.cpp
LOCATIONNOTIFICATION_MUTEX
nullptr == hMutex.m_h
GetLastError() == ERROR_ALREADY_EXISTS
SetProcessDpiAwareness(PROCESS_SYSTEM_DPI_AWARE)
InitInstance(hInstance, notificationManger)
%systemroot%\system32\taskbarcpl.dll
ExpandEnvironmentStrings( L"%systemroot%\\system32\\taskbarcpl.dll", wszResourceDll, ARRAYSIZE(wszResourceDll)) == 0
hModule.get()
LOCATIONNOTIFICATION
page=SettingsPagePrivacyLocation
windows.immersivecontrolpanel_cw5n1h2txyewy!microsoft.windows.immersivecontrolpanel
TaskbarCreated
nullptr == (_hMenu = LoadMenu(_hInst, MAKEINTRESOURCE(IDR_CONTEXTMENU)))
CNotificationManager::Initialize
drivers\mobilepc\location\product\winnotification\notificationmanager.cpp
_LocationIconStateSubscription
SetTimer(_hWnd, ID_TIMER, TIMER_MS, nullptr) == 0
CNotificationManager::UpdateStateMachine
Did not expect event: %ws
E_UNEXPECTED
KillTimer(_hWnd, ID_TIMER) == 0
Did not expect state: %ws
Showing the icon
Not showing the icon
!(wil::verify_bool(dwMessage == 0x00000000 || dwMessage == 0x00000002 || dwMessage == 0x00000001))
CNotificationManager::ShowNotifyIcon
CNotificationManager::ShowNotifyIconHelper
nullptr == (nidSystrayIcon.hIcon = SHLoadNativeIconSize( hModule.get(), MAKEINTRESOURCE(IDI_GEOLOCATION_WHITE), SM_CXSMICON, SM_CYSMICON, dpiTrayWindow))
LocationHelper::CreateLocationManagerInternalOutOfProc(pFramework.GetAddressOf())
pFramework->GetLocationClientInfo(&appLocationUsageCount, &currentClientProcessId)
AppIdentityHelper::GetAppName(currentClientProcessId, appName)
0 == LoadString(_hInst, IDS_TOOLTIP, nidSystrayIcon.szTip, sizeof(nidSystrayIcon.szTip) / sizeof(WCHAR))
!(wil::verify_bool(Shell_NotifyIconW((DWORD)dwMessage, &nidSystrayIcon)))
!(wil::verify_bool(PostMessageW(_hWnd, 0x0012, 0, 0)))
!(wil::verify_bool(KillTimer(_hWnd, ID_TIMER)))
CNotificationManager::TimerEvent
subscriptionStateT.get()
wil::details::make_wnf_subscription_state
stateDataSize == sizeof(*stateData)
wil::details::wnf_subscription_state<int>::InternalCallback
result
FAILED(queryResult) && (queryResult != HRESULT_FROM_NT(STATUS_BUFFER_TOO_SMALL))
onecore\internal\sdk\inc\wil\Resource.h
Windows::Foundation::ActivateInstance(HStringReference(RuntimeClass_Windows_Management_Deployment_PackageManager).Get(), &packageManager)
AppIdentityHelper::GetPackagedAppName
drivers\mobilepc\location\product\winnotification\appidentityhelper.cpp
packageManager->FindPackagesByUserSecurityIdPackageFamilyName(nullptr, HStringReference(packageFullName).Get(), &packageInfoCollection)
element.As(&package2)
GetPackageFamilyName(hProcess.get(), &cchFamilyName, packageFullName)
AppIdentityHelper::GetAppName
GetPackagedAppName(appName, packageFullName)
string too long
bad array new length
Windows.Management.Deployment.PackageManager
=L9o<
SummaryCount
NumLargeEventFailures
NumAllocationFailures
NumBucketLimitReached
MinEntriesFlushed
MaxEntriesFlushed
TotalEntriesFlushed
MaxEntriesStored
NumFlushes
NotificationState::NotStarted
NotificationState::IconShowingTimerShouldNotDelete
NotificationState::IconShowingTimerShouldDelete
NotificationState::IconShowingTimerDone
NotificationState::LocationUsageStopped
NotificationStateEvent::AddIcon
NotificationStateEvent::DeleteIcon
NotificationStateEvent::Timer
NotificationStateEvent::TaskbarCreated
NotificationStateEvent::UpdateIcon
NotificationStateAction::DoNothing
NotificationStateAction::ShowIcon
NotificationStateAction::HideIcon
NotificationStateAction::ModifyIcon
FailureLogReport
CustomMessage
Function
CallingCode
Filename
FailureLogReport
CustomMessage
Function
CallingCode
Filename
FailureLogReport_Aggregate
Count
CustomMessage
Function
CallingCode
Filename
PartA_PrivTags
ShowNotifyIconHelper
AppUsageCount
IconTaskbarCreated
Action
Current state
IconUpdatingStateMachine
Event That Happened
Original state
Updated state
Action to do
TlgAggregateSummary
PartA_PrivTags
UtcAggParams
Period
MaxEvents
Provider
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
UtcAggVal
Value
Microsoft.Geolocation.Triage
Microsoft.Geolocation.Service.PII
Microsoft.Geolocation.Service
Microsoft.Windows.TlgAggregateInternal
TryGetValue(name, &value)
wil::details_abi::SemaphoreValue::TryGetPointer
m_semaphore.create(static_cast<LONG>(lowPart), static_cast<LONG>((lowPart > 0) ? lowPart : 1), localName)
wil::details_abi::SemaphoreValue::CreateFromValueInternal
m_semaphoreHigh.create(static_cast<LONG>(highPart), static_cast<LONG>((highPart > 0) ? highPart : 1), localName)
result == WAIT_FAILED
wil::details_abi::SemaphoreValue::GetValueFromSemaphore
!((result == WAIT_OBJECT_0) || (result == WAIT_TIMEOUT))
::ReleaseSemaphore(semaphore, 1, &value)
expectedFailure || (::GetLastError() != ERROR_TOO_MANY_POSTS)
::ReleaseSemaphore(semaphore, 1, &expected)
expected != 0
result != WAIT_OBJECT_0
wil::details_abi::SemaphoreValue::TryGetValueInternal
GetValueFromSemaphore(semaphoreLow.get(), &countLow)
semaphoreHigh
GetValueFromSemaphore(semaphoreHigh.get(), &countHigh)
TryGetValueInternal(name, (sizeof(T) > sizeof(unsigned long)), &value64, retrieved)
wil::details_abi::SemaphoreValue::TryGetValue
0 == LoadString(hInstance, IDS_APP_TITLE, szTitle, MAX_LOADSTRING)
InitInstance
nullptr == (wcex.hIcon = LoadIcon(hModule.get(), MAKEINTRESOURCE(IDI_GEOLOCATION_WHITE)))
nullptr == (wcex.hIconSm = LoadIcon(hModule.get(), MAKEINTRESOURCE(IDI_GEOLOCATION_WHITE)))
nullptr == (wcex.hCursor = LoadCursor(nullptr, IDC_ARROW))
0 == RegisterClassEx(&wcex)
nullptr == (hWnd = CreateWindow( MAINWINDOW_CLASSNAME, szTitle, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, nullptr, nullptr, hInstance, &notificationManger))
RSDS(
LocationNotificationWindows.pdb
.text
.text$di
.text$lp00locationnotificationwindows.exe!20_pri7
.text$mn
.text$mn$00
.text$x
.text$yd
.text$zz
.rdata$brc
.rdata$00$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIAC
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.rdata
.rdata$00
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zz
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.tls$
.tls$ZZZ
.xdata
.xdata$x
.idata$2
.idata$3
.idata$4
.idata$6
.data$dk00$brc
.data$r$brc
.data$rs$brc
.data
.data$00
.data$dk00
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.pdata
.rsrc$01
.rsrc$02
EventWriteTransfer
ADVAPI32.dll
GetModuleFileNameA
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
FormatMessageW
GetLastError
OutputDebugStringW
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
GetModuleHandleW
DebugBreak
IsDebuggerPresent
CreateMutexW
ExpandEnvironmentStringsW
LoadLibraryExW
FreeLibrary
LeaveCriticalSection
DeleteCriticalSection
EnterCriticalSection
InitializeCriticalSection
SizeofResource
LockResource
LoadResource
FindResourceExW
LocalFree
RaiseException
QueryFullProcessImageNameW
OpenProcess
GetPackageFamilyName
KERNEL32.dll
GetMessageW
TranslateMessage
DispatchMessageW
LoadStringW
LoadIconW
LoadCursorW
RegisterClassExW
CreateWindowExW
SetWindowLongPtrW
DefWindowProcW
PostQuitMessage
GetWindowLongPtrW
RegisterWindowMessageW
DestroyMenu
DestroyIcon
UnregisterClassW
LoadMenuW
SetTimer
KillTimer
PostMessageW
GetCursorPos
SetForegroundWindow
GetSubMenu
TrackPopupMenuEx
InternalGetWindowText
GetWindow
GetWindowLongW
IsWindowVisible
GetWindowThreadProcessId
EnumWindows
IsImmersiveProcess
USER32.dll
?_Xlength_error@std@@YAXPEBD@Z
msvcp_win.dll
_initterm
_initterm_e
_c_exit
_register_thread_local_exe_atexit_callback
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
__CxxFrameHandler4
__std_terminate
__C_specific_handler
_o___p__commode
_o___std_exception_copy
_o___std_exception_destroy
_o___stdio_common_vsnprintf_s
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configthreadlocale
_o__configure_narrow_argv
_o__crt_atexit
_o__errno
_o__exit
_o__get_narrow_winmain_command_line
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__invalid_parameter_noinfo_noreturn
_o__purecall
_o__register_onexit_function
_o__seh_filter_exe
_o__set_app_type
_o__set_fmode
_o__set_new_mode
_o__ultoa_s
_o_exit
_o_free
_o_malloc
_o_terminate
_o_wmemcpy_s
__current_exception
__current_exception_context
__CxxFrameHandler3
memset
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
CoInitializeEx
CoUninitialize
CoCreateInstance
CoSetProxyBlanket
RoActivateInstance
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsCreateStringReference
HeapSize
HeapReAlloc
HeapDestroy
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
IsProcessorFeaturePresent
InitializeCriticalSectionAndSpinCount
SetEvent
ResetEvent
CreateEventW
QueryPerformanceCounter
GetSystemTimeAsFileTime
InitializeSListHead
GetStartupInfoW
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
Shell_NotifyIconW
SHELL32.dll
RtlUnsubscribeWnfNotificationWaitForCompletion
NtQueryWnfStateData
RtlSubscribeWnfStateChangeNotification
ntdll.dll
SetProcessDpiAwareness
GetDpiForShellUIComponent
api-ms-win-shcore-scaling-l1-1-1.dll
api-ms-win-shcore-scaling-l1-1-2.dll
SHLWAPI.dll
EventUnregister
EventSetInformation
EventRegister
InitializeSRWLock
TryAcquireSRWLockExclusive
WaitForThreadpoolTimerCallbacks
ReleaseSRWLockExclusive
CloseThreadpoolTimer
AcquireSRWLockExclusive
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
AcquireSRWLockShared
UnregisterClassA
GetSystemMetricsForDpi
LoadImageW
__C_specific_handler_noexcept
memcmp
memcpy
memmove
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@std@@
.?AVCAtlException@ATL@@
.?AVbad_array_new_length@std@@
.?AVtype_info@@
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Location Notification
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
LocationNotification
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
LocationNotificationWindows.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
en-US
