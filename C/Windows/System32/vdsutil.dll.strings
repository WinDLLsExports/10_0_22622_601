!This program cannot be run in DOS mode.
WRRichc
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
q*Z~:
q*Z~:
SVWAVH
8A^_^[
w|H9{
;@8:t
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
SVWAVH
\$px#H+
8A^_^[
VWAVH
\$px I+
@A^_^
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
L$ SVWAVH
(A^_^[
\$ UVWAVAWH
L$@fD
A_A^_^]
uj!D$PL
L$P!D$@H
D$(E3
@SUWH
@SVWH
f94Au
H9K`u
H9{ht+H
|$ UATAUAVAWH
H!}8H
FHL; u
F@H9E
F@I9G
A_A^A]A\]
VWAVH
 A^_^
9_Hu!
WATAUAVAWH
0A_A^A]A\_
WAVAWH
89:u69z
pcPZt
0A_A^_
H9N`u
H9Vhu
x AVH
A H9B
H;A$u
I;H,u
J I;H4u
\$ VATAUAVAWH
;t$0sE
A_A^A]A\^
VWATAVAWH
fD9dM
0A_A^A\_^
p AWH
UVWAVAWH
H!uH!u8H
 A_A^_^]
l$ VWAVH
 A^_^
@SUVWAVH
!\$|H
0A^_^][
x UATAUAVAWH
|$ E3
t$ E3
A_A^A]A\]
VWAVH
 A^_^
H9\$@u
` UAVAWH
D$ E3
A_A^]
UWATAVAWH
A_A^A\_]
q9X4P
@SVWH
\$@E3
L$hH3
L$ SVWAVH
(A^_^[
VWATAVAWH
|$0I;
H9l$8t%3
D9{0t H
A_A^A\_^
VWATAVAWH
\$ I;
L9t$(t$3
A_A^A\_^
q#^^3
UVWATAUAVAWH
@A_A^A]A\_^]
VWATAVAWH
\$ E3
A_A^A\_^
UVWAVAWH
t$ E3
fD94Au
D$ E3
A_A^_^]
WAVAWH
 A_A^_
t$ WH
L$0H3
L$0H3
@SVWH
L$@E3
L$`H3
UVAUAVAWH
H!uHH
0A_A^A]^]
q:_0#
x AVH
UVWATAVH
L$PH!>
 A^A\_^]
x UATAUAVAWH
A_A^A]A\]
UWATAVAWH
D$0fD
A_A^A\_]
p WATAUAVAWH
A_A^A]A\_
@USVWATAVAWH
\$ E3
pA_A^A\_^[]
UVWAVAWH
@A_A^_^]
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
\$ UVWATAUAVAWH
D$xH!D$@3
D$ E3
A_A^A]A\_^]
@USVWAUAVAWH
D$HE3
fD9,Ou
fD9,Bu
A_A^A]_^[]
@SUVWATAUAVAWH
L$hH3
xA_A^A]A\_^][
@SUVWAVH
D$ E3
nfD9t$`u
A^_^][
\$ E3
WATAUAVAWH
l$ E3
D$ E3
D$ E3
A_A^A]A\_
@SUVWAVH
D$ E3
A^_^][
@SUVWAVAWH
D$ E3
9\$`t
9\$dt
9\$ht:
L$pH3
A_A^_^][
@USVWATAUAVAWH
fD9 t
A_A^A]A\_^[]
VWAVH
\$ E3
t$ WH
D$ E3
L$pH3
!\$P3
!\$LH
TH!\$8H
L$XH3
VWAVH
D$h!D$@I!C
I!6H!t$8H
D$ E3
L$pH3
VWAVH
D$ E3
0H!\$(H!\$ D
@A^_^
D$ E3
QRw'%
\$ E3
UAVAWH
D$ E3
A_A^]
t$ WH
L$hH3
t$ WAVAWH
A_A^_
VWAVH
!|$pI
t^H!\$8H
|$ E3
UVWATAUAVAWH
fC;T5
pA_A^A]A\_^]
UVWATAUAVAWH
fD9$Fu
fA;D$
fG9$pu
D;}@rZ
`A_A^A]A\_^]
WAVAWH
@A_A^_
h VWATAUAVH
\$ E3
A^A]A\_^
x ATAVAWH
A_A^A\
@USVWATAUAVAWH
|$ E3
A_A^A]A\_^[]
D$0E3
\$(E3
p WATAUAVAWH
fA9,^u
D$ E3
A_A^A]A\_
q0R^G'
L$xH3
@USVWAUAVAWH
H!\$8H
D$ E3
D$ E3
A_A^A]_^[]
D$ E3
L$hH3
q0R^G'
D$@E3
L$@H3
D$@L+
D$@f9
q0R^G'
\$ UWAVH
D$ E3
D$ E3
PA^_]
WAVAWH
fD94Fu
fD94~u
0A_A^_
q0R^G'
q0R^G'
qpYv2
H!\$8H
D$0!\$(H!\$ E3
@SUVWAVAWH
A_A^_^][
L$(L!D$ D
@SUVWAVAWH
A_A^_^][
@SUVWAVAWH
A_A^_^][
USVWATAUAVAWH
A_A^A]A\_^[]
!|$(D
D$ E3
\$ UVWAVAWH
A_A^_^]
h VWAVH
 A^_^
L$XH3
h UAVAWH
A_A^]
f9,Cu
q1X~^
@USWH
pQU\x
q*^xm
x UATAUAVAWH
D9m#t4H
A_A^A]A\]
|$ UH
H!|$8H
D$ E3
USVWATAUAVAWH
y6L9m
A_A^A]A\_^[]
|$ UH
H!\$ H!\$(L
D$HH+
D$PH+
L$ E3
L$(E3
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
fA9\~ u
`A_A^A]A\_^]
@USVWAVH
A^_^[]
x AVH
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
PA_A^A]A\_^]
x AVH
f;L$Pt
|$@E3
|$ UAVAWH
H!t$(L
H!t$ H
A_A^]
x AVH
UWATAVAWH
L$ E3
fF9$Fu
A_A^A\_]
f;D$@t0
L$@f;D$H@
f;D$@t)
UWAVH
L$`E3
f;L$@t
UWAVH
f;D$@t)
f;D$@t)
L$HE3
L$0E3
@SVWH
|$ H;|$(t'H
 t;H;
)L$0H
L$`H3
)L$0H
L$`H3
q"^8$
)D$0H
)L$@A
)L$`H
8D$ u
L$pH3
)L$0H
L$`H3
D$(H9D$ t
x AVH
H!x(H!x0H!x H!x
ZzH?y
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
bad allocation
generic
unknown error
iostream
iostream stream error
system
invalid string position
string too long
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
wkscli.dll
netutils.dll
srvcli.dll
CPrvEnumObject::CPrvEnumObject()
CPrvEnumObject::~CPrvEnumObject()
WaitForRundownProtectionRelease:CreateEvent failed Error = %x
WaitForRundownProtectionRelease:WaitForSingleObject failed Error = %x
WaitForRundownProtectionRelease:Aborting wait and terminating process.WaitBlock.Count = %d
VDS(PID:%ld,TID:%ld) Assertion Failed: %S(%d): %S
ENTER %s
LEAVE %s
VdsInitializeCriticalSection: InitializeCriticalSectionAndSpinCount() failed.
VdsAllocateEmptyString()
VdsAllocateString()
CPrvEnumObject::Append()
CPrvEnumObject::Clear()
CPrvEnumObject::Next()
CPrvEnumObject::Skip()
CPrvEnumObject::Reset()
CPrvEnumObject::Clone()
CVdsAsyncObjectBase::CVdsAsyncObjectBase()
CVdsAsyncObjectBase::~CVdsAsyncObjectBase()
CVdsAsyncObjectBase::Initialize()
CVdsAsyncObjectBase::Initialize: VdsInitializeCriticalSection failed: %X.
CVdsAsyncObjectBase::Initialize: CreateEvent failed: %X
CVdsAsyncObjectBase::Uninitialize()
CVdsAsyncObjectBase::Signal()
CVdsAsyncObjectBase::IsFinished()
CVdsAsyncObjectBase::SetCompletionStatus()
CVdsAsyncObjectBase::Cancel()
CVdsAsyncObjectBase::WaitImpl()
CVdsAsyncObjectBase::WaitImpl: WaitForSingleObject failed: %X
CVdsAsyncObjectBase::QueryStatus()
%s:%s
RegisterProvider()
RegisterProvider, 1, %lX
RegisterProvider, 2, %lX
RegisterProvider, 3, %lX
RegisterProvider, 4, %lX
UnregisterProvider
UnregisterProvider: failed to get IVdsAdmin interface: %X
AddEventSource()
%s\%s
AddEventSource: RegCreateKey failed: %X
AddEventSource: GetModuleFileName failed: %X
EventMessageFile
AddEventSource: RegSetValueEx failed: %X
TypesSupported
AddEventSource: RegSetValueEx failed(2): %X
RemoveEventSource()
RemoveEventSource: RegDeleteKey failed: %X
LogEvent()
Event logged: %X
%X@%08X
LogError, 1, hr=%lX
%X@%X
LogWarning, 1, hr=%lX
LogInfo, 1, hr=%lX
IsLocalComputer()
IsLocalComputer: GetComputerName() failed: %X
IsLocalComputer: GetComputerNameEx() failed: %X
IsLocalComputer: NetWkstaGetInfo failed: %X
InitializeSecurityDescriptorHelper()
GetVolumeSize()
OpenDevice()
OpenDevice, 1, (%S) error=%ld
\Device
\\?\GLOBALROOT%s
UNKNOWN
OpenDevice:, 1, %S
OpenDevice: CreateFile(%S) failed: %X
IsRamDrive()
IsRamDrive, 1
IsRamDrive, 2
IsRamDrive, 3
IsRamDrive, 4
GetDeviceNumber()
GetDeviceNumber, 1, error=%ld
IsDiskCurrentStateReadOnly()
IsDiskCurrentStateReadOnly, 1, error=%ld
IsDiskCurrentStateReadOnly, DISK IS READ ONLY
IsDiskCurrentStateReadOnly, 2, error=%ld
IsDiskCurrentStateReadOnly, DISK IS WRITABLE
IsDiskReadOnly()
vdsutil::IsDiskReadOnly, 1, error=%ld
vdsutil::IsDiskReadOnly, 2, error=%ld
vdsutil::IsDiskReadOnly, disk is read only
vdsutil::IsDiskReadOnly, disk is writable
GetDeviceName()
GetDeviceName, 1, error=%X
GetDeviceName, 2, error=%lX
\\?\GLOBALROOT
GetDeviceName, 3, error=%ld
GetDeviceId()
GetDeviceId, 1, error=%ld
GetDeviceId, 2, error=%ld
GetInterfaceDetailData() (1)
GetInterfaceDetailData, 1, error=%ld
GetInterfaceDetailData, 2, error=%ld
GetInterfaceDetailData, 3, error=%ld
GetDiskLayout()
GetDiskLayout: Out of memory.
GetDiskLayout: DeviceIoControl failed: %X
GetVolumeDiskExtentInfo()
GetVolumeDiskExtentInfo, 1, hWin32 error=%ld
GetVolumeDiskExtentInfo, 2, hWin32 error=%ld
GetVolumeDiskExtentInfo, 3, hWin32 error=%ld
SetDiskLayout()
SetDiskLayout: DeviceIoControl() failed: %X
GetIsRemovable()
GetIsRemovable: IOCTL_STORAGE_GET_HOTPLUG_INFO failed: %X
IsMediaPresent()
GetDeviceAndMediaType()
GetDeviceAndMediaType, 1, error=%ld
CBasicDisk::GetDeviceAndMediaType, 2, RAM drive, pathname=%S
GetMediaGeometry(2)
GetMediaGeometry(2), 1
GetMediaGeometry(2), 2
GetMediaGeometry(2), 3, error=%ld
GetMediaGeometry()
GetMediaGeometryEx()
GetAdapterPrefix()
GetAdapterPrefix, 1, error=%ld
GetAdapterPrefix, 2, error=%ld
GetAdapterPrefix, 3, error=%ld
GetAdapterPrefix, 4, error=%ld
GetAdapterPrefix, 5, error=%ld
GetAdapterPrefix, 6, error=%ld
GetAdapterPrefix, 7, error=%ld
GetAdapterPrefix, 8, error=%ld
GetAdapterPrefix, 9, error=%ld
GetAdapterPrefix, 10, error=%ld
GetAdapterPrefix, 11, error=%ld
GetAdapterPrefix, 12, error=%ld
GetAdapterPrefix, 13, error=%ld
GetAdapterPrefix, 14, error=%ld
GetAdapterPrefix, 15, error=%ld
GetAdapterPrefix, 16, error=%ld
GetDeviceLocationPath()
GetDeviceLocationPath, 1, error=%ld
GetDeviceLocationPath, 2, error=%ld
GetDeviceLocationPath, 3, pwszAdapterPrefix=NULL
%s#%s(P%02dT%02dL%02d)
%s#%s(C%02dT%02dL%02d)
GetDeviceLocationPath, 4, Unexpected bus type
GetDeviceLocationPath, 5, error=%ld
GetDeviceLocationPath, 6, Unsupported bus type
GetDeviceLocation()
GetDeviceLocation, 1, error=%ld
GetDeviceLocation, 2, error=%ld
GetDeviceLocation, 3, error=%ld
Port%dPath%dTarget%dLun%d
GetDeviceLocation, 4, error=%ld
GetDeviceLocationEx()
GetDeviceLocationEx, 0, error=%ld
GetDeviceLocationEx, 1, error=%ld
GetDeviceLocationEx, 2, error=%ld
GetDeviceLocationEx, 3, error=%ld
GetDeviceLocationEx, 4, error=%ld
GetDeviceLocationEx, 5, error=%ld
GetDeviceLocationEx, 6, pwszLocationPath=NULL
GetDeviceLocationEx, 9, Unsupported bus type=%d
GetStorageAccessAlignmentProperty()
GetStorageAccessAlignmentProperty, 1, error=%ld
GetDeviceManufacturerInfo()
GetDeviceManufacturerInfo, 1, error=%ld, line=%ld
GetDeviceRegistryPropertyByInfo() (1)
GetDeviceRegistryPropertyByInfo(1): DevObjGetDeviceRegistryProperty()(1) failed: %X
GetDeviceRegistryPropertyByInst() (2)
GetDeviceRegistryPropertyByInst(2): DevObjCreateDeviceInfoList() failed: %X
GetDeviceRegistryPropertyByInst(2): CM_Get_Device_IDW() failed: %X
IsDeviceFullyInstalled: failed to get device state: %S
IsDeviceFullyInstalled: device not installed yet: %d
CreateDeviceInfoSet()
CreateDeviceInfoSet, 1
CreateDeviceInfoSet, 2, %ld
CreateDeviceInfoSet, 3, %ld
CreateDeviceInfoSet, 4, %ld
GetPartitionInformation()
GetVolumeName()
GetVolumeName, 1, hr=%lX, Device=%p, Volume=%p, count=%d
GetVolumeName, 2, hr=%lX
GetVolumeName, 3, hr=%lX
GetVolumeName, 4, hr=%lX
\??\Volume{
GetVolumeName, 5, error=%ld
GetVolumeName, 6, hr=%lX
AllocateAndGetVolumePathName, 1, hr=%lX
AllocateAndGetVolumePathName, 2, hr=%lX
AllocateAndGetVolumePathName, 3, hr=%lX
AssignTempVolumeName()
CVdsDiskLun::FormatPartition: failed to generate a GUID: %X
\\?\Volume%s
CVdsDiskLUn::FormatPartition: failed to assign a temporary volume name: %X
RemoveTempVolumeName()
RemoveTempVolumeName, 1
RemoveTempVolumeName, 2, device=%s
RemoveTempVolumeName, 3, device=%s, error=%ld
DeleteNetworkShare()
DeleteNetworkShare, 1, status=%lX, path=%s
DeleteNetworkShare, 2, status=%lX, share=%s, path=%s
GarbageCollectDriveLetters()
GarbageCollectDriveLetters, 1
GarbageCollectDriveLetters, 2, error=%ld
GarbageCollectDriveLetters, 3, device(%s), %ld
GarbageCollectDriveLetters, 4
IsDiskClustered()
vdsutil::IsDiskClustered, 1, Clustered=%p, CSV=%p, Maintenance=%p, Online=%p
vdsutil::IsDiskClustered, 2, error=%ld
vdsutil::IsDiskClustered, CLUSTERED
vdsutil::IsDiskClustered, CSV
vdsutil::IsDiskClustered, MAINTENANCE
vdsutil::IsDiskClustered, NOT CLUSTERED
vdsutil::IsDiskClustered, 3, error=%ld
vdsutil::IsDiskClustered, OFFLINE
vdsutil::IsDiskClustered, ONLINE
GetDiskFlags()
vdsutil::GetDiskFlags, 1, Pagefile=%p, HiberFile=%p, Crashdump=%p
vdsutil::GetDiskFlags, 2, error=%ld
vdsutil::GetDiskFlags, PAGEFILE
vdsutil::GetDiskFlags, HIBERNATION FILE
vdsutil::GetDiskFlags, CRASHDUMP FILE
GetDiskOfflineReason()
vdsutil::GetDiskOfflineReason, 1, DiskOfflineReason=%p, hDevice=%ld
vdsutil::GetDiskOfflineReason, 2, error=%ld
vdsutil::GetDiskOfflineReason, Offline Reason=%d
WriteBootCode()
WriteBootCode[IOCTL_DISK_GET_DRIVE_GEOMETRY] %ld
WriteBootCode, Boot code takes more than a sector (%d bytes)
WriteBootCode, 1
WriteBootCode, 2: %ld
WriteBootCode, 3: %ld
WriteBootCode, 4: %ld
WriteBootCode, 5: %ld
SYSTEM\CurrentControlSet\Control\MiniNT
IsWinPE()
IsNoAutoMount()
\\.\MountPointManager
IsNoAutoMount: CreateFile failed: %X
IsNoAutoMount: DeviceIoControl failed: %X
CoFreeStringArray()
LockVolume()
LockVolume 1, win32 error=%ld
LockVolume 2, win32 error=%ld
LockDismountVolume()
LockDismountVolume, 1, %ld
LockDismountVolume, 2, win32 error=%ld
MountVolume()
MountVolume: failed to mount volume %S: %ld
GuidToString, 1
{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}
GuidToString, 2, hr=%lX
CVdsPnPNotificationBase::Initialize()
VDS Notification Thread Hidden Window %s
CVdsAsyncObjectBase::Initialize: CoCreateGuid failed: %X
CVdsPnPNotificationBase::Uninitialize()
~CVdsPnPNotificationBase: PostThreadMessage failed: %X
CVdsPnPNotificationBase::Uninitialize(): failed to wait listening thread to stop.
m_CriticalSection released
CVdsPnPNotificationBase::CreateListenThread()
CVdsPnPNotificationBase::CreateListenThread: CreateEvent() failed: %X
CVdsPnPNotificationBase::CreateListenThread: CreateThread() failed: %X
CVdsPnPNotificationBase::CreateListenThread: notification thread failed.
CVdsPnPNotificationBase::CreateListenThread: WaitForMultipleObjects: %X
CVdsPnPNotificationBase::Register()
CVdsPnPNotificationBase::Register: SetTimer failed: %X
CVdsPnPNotificationBase::Unregister()
CVdsPnPNotificationBase::Unregister: The notification is not found.
CVdsPnPNotificationBase::RegisterHandle()
CVdsPnPNotificationBase::RegisterHandler: RegisterNotificationListeningRequest failed: %X
CVdsPnPNotificationBase::UnregisterHandle()
CVdsPnPNotificationBase::UnregisterHandle: UnregisterDeviceNotification(%X) failed: %X
CVdsPnPNotificationBase::NotificationThreadEntry()
CVdsPnPNotificationBase::NotificationThread()
CVdsPnPNotificationBase::NotificationThread, 1, dwRet=%ld
CVdsPnPNotificationBase::NotificationThread, 2, %ld
CVdsPnPNotificationBase::NotificationThread, 3, %ld
CVdsPnPNotificationBase::NotificationThread, 4, %ld
CVdsPnPNotificationBase::WindowProcEntry, 1
Time Out: id=%ld, offset=%I64d
GetRegistryValue()
GetRegistryValue: RegOpenKeyExW failed to open %s key(%lX)
GetRegistryValue: RegQueryValueEx(%s) failed: %lX
GetRegistryValue: RegQueryValueEx failed(%s) (2):%lX
GetDefaultAlignment()
GetDefaultAlignment, 1, %lX, pulAlign=%p, ullDiskSize=%lI64, pbDefault=%p
GetDefaultAlignment, 2, %lX
GetDefaultAlignment, 3
GetDefaultAlignment, 4, %lX
GetSystemVolumeHandle
GetSystemVolumeHandle, 1, hr=%lX
GetSystemVolumeHandle, 2, hr=%lX
GetSystemVolumeHandle: NtQuerySystemInformation failed: %lX
GetSystemVolumeHandle: StringCchCopyN failed: %lX
GetSystemVolumeHandle: OpenDevice, Name=%s hr=%lX
GetBootVolumeHandle
GetBootVolumeHandle, 1, hr=%lX
GetBootVolumeHandle, 2, hr=%lX
GetBootVolumeHandle, 3, hr=%lX
\\?\%c:
GetBootVolumeHandle, 5, Name=%s hr=%lX
GetBootVolumeHandle, 6, Name=%s hr=%lX
GetBootVolumeHandle, 7, Name=%s hr=%lX
EXIT GetBootVolumeHandle, hr=%lX
GetBootDiskNumber
GetBootDiskNumber, 1, hr=%lX
GetBootDiskNumber, 2, hr=%lX
GetBootDiskNumber, 3, hr=%lX
GetBootDiskNumber, 5, hr=%lX
GetBootDiskNumber, 6, hr=%lX
GetBootDiskNumber: Memory allocation failure
EXIT GetBootDiskNumber, hr=%lX
GetBootFromDiskNumber
GetBootFromDiskNumber, 1, hr=%lX
GetBootFromDiskNumber, 2, hr=%lX
GetBootFromDiskNumber: NtQuerySystemInformation failed: %lX
GetBootFromDiskNumber: StringCchCopyN failed: %lX
GetBootFromDiskNumber: OpenDevice, Name=%s hr=%lX
GetBootFromDiskNumber: GetDeviceNumber, Name=%s hr=%lX
LoadStringResource, 1
LoadStringResource: Memory allocation failure
LoadStringResource, 2
EnumerateBcdObjects: Memory allocation failure
EnumerateBcdObjects: BcdEnumerateObjects failed: %lX
EnumerateBcdElementTypes: Memory allocation failure
EnumerateBcdElementTypes: BcdEnumerateElementTypes failed: %lX
BcdElementMatchesPartition: BcdGetElementDataWithFlags failed with STATUS_INVALID_PARAMETER
BcdElementMatchesPartition: BcdGetElementDataWithFlags failed: %lX
PointBcdElementToMirrorPartition: BcdGetElementDataWithFlags failed: %lX
PointBcdElementToMirrorPartition: BcdSetElementData failed: %lX
BcdObjectMatchesPartition: EnumerateBcdElementTypes failed: %lX
BcdObjectMatchesPartition: BcdElementMatchesPartition failed: %lX
PointBcdObjectToMirrorPartition: EnumerateBcdElementTypes failed: %lX
PointBcdObjectToMirrorPartition: PointBcdElementToMirrorPartition failed: %lX
GetBcdDisplayOrder: Memory allocation failure
GetBcdDisplayOrder: BcdGetElementData failed: %lX
DeleteDataFromDisplayOrder: BcdOpenObject for boot manager failed: %lX
DeleteDataFromDisplayOrder: BcdGetElementData failed to find display order
DeleteDataFromDisplayOrder: GetBcdDisplayOrder failed: %lX
DeleteBcdObjects: BcdOpenSystemStore failed to find the BCD system store
DeleteBcdObjects: BcdOpenSystemStore failed: %lX
DeleteBcdObjects: EnumerateBcdObjects failed: %lX
DeleteBcdObjects: BcdOpenObject failed: %lX
DeleteBcdObjects: BcdObjectMatchesPartition failed: %lX
DeleteBcdObjects: BcdDeleteObject failed: %lX
ChangeBcdMirrorObjectDescription: Memory allocation failure
ChangeBcdMirrorObjectDescription: BcdGetElementData failed to find object description
ChangeBcdMirrorObjectDescription: BcdGetElementData failed: %lX
ChangeBcdMirrorObjectDescription: BcdSetElementData failed: %lX
MirrorBcdObjects: BcdOpenSystemStore failed to find the BCD system store
MirrorBcdObjects: BcdOpenSystemStore failed: %lX
MirrorBcdObjects: EnumerateBcdObjects failed: %lX
MirrorBcdObjects: Memory allocation failure
MirrorBcdObjects: BcdOpenObject failed: %lX
MirrorBcdObjects: BcdObjectMatchesPartition failed: %lX
MirrorBcdObjects: BcdCopyObject failed: %lX
MirrorBcdObjects: PointBcdObjectToMirrorPartition failed: %lX
ChangeBcdMirrorObjectDescription: LoadStringResource failed: %lX
MirrorBcdObjects: ChangeBcdMirrorObjectDescription failed: %lX
MirrorBcdObjects: BcdQueryObject failed: %lX
MirrorBcdObjects: BcdOpenObject for boot manager failed: %lX
MirrorBcdObjects: BcdGetElementData failed to find display order
MirrorBcdObjects: GetBcdDisplayOrder failed: %lX
MirrorBcdObjects: BcdSetElementData failed: %lX
VdsDoesDiskHaveArcPath, 1: error=%ld
\ArcName
VdsDoesDiskHaveArcPath, 2: status=0x%08lX, error=%ld
VdsDoesDiskHaveArcPath, 3: error=%ld
VdsDoesDiskHaveArcPath, 4: status=0x%08lX, error=%ld
SymbolicLink
VdsDoesDiskHaveArcPath, Found arc name %S
RDISK
PARTITION
VdsDoesDiskHaveArcPath, 5: status=0x%08lX, error=%ld
VdsDoesDiskHaveArcPath, 6: error=%ld
VdsDisableCOMFatalExceptionHandling, CoCreateInstance of CLSID_GlobalOptions failed with HRESULT=0x%08lX
VdsDisableCOMFatalExceptionHandling, Set of COMGLB_EXCEPTION_HANDLING failed with HRESULT=0x%08lX
GetVolumeUniqueId
GetVolumeUniqueId, 1, error=%ld
GetVolumeUniqueId,2, error=%ld
GetVolumeUniqueId, 3, error=%ld
GetVolumeUniqueId, 4, error=%ld
GetVolumeUniqueId, 5, error=%ld
GetVolumeGuidPath()
GetVolumeGuidPath, 1, MountPoint=%p, Path=%p, Output=%p
GetVolumeGUIDPath, 2, hr=%lX
GetVolumeGUIDPath, 3
IoctlMountmgrQueryPointsDevicePath()
IoctlMountmgrQueryPointsDevicePath, 1, Device = %p, Output = %p
IoctlMountmgrQueryPointsDevicePath, 2, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 3, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 4, error=%ld
IoctlMountmgrQueryPointsDevicePath, 5, hr=%lX
IoctlMountmgrQueryPointsDevicePath, 6, error=%ld
IoctlMountmgrQueryPointsDevicePath, 7, error=%ld
GetVolumeGUIDPathnames()
GetVolumeGUIDPathnames, 1, hr=%lX, DeviceName=%p, Count=%p, Array=%p
GetVolumeGUIDPathnames, 2, hr=%lX
GetVolumeGUIDPathnames, 3, hr=%lX
GetVolumeGUIDPathnames, 4, hr=%lX
GetVolumeGUIDPathnames, 5, hr=%lX
GetVolumeGUIDPathnames, 6, hr=%lX
GetVolumeGUIDPathnames, 7, hr=%lX
GetVolumeGUIDPathnames, 8, hr=%lX
GetVolumeGUIDPathnames, 9
InvalidateDiskCache, 1, error=%lX
InvalidateDiskCache, 2, error=%ld
GetFileSystemRecognitionName()
GetFileSystemRecognitionName, 1, hDevice=%p, ppwszFileSystemName=%p
GetFileSystemRecognitionName, 2, file system does not support file system recognition
GetFileSystemRecognitionName, 2, error=%ld
GetFileSystemRecognitionName, 3, hrRet=%lX
GetFileSystemRecognitionName, 4, error=%ld
')N%\
VdsIscsiIpAddressToString()
VdsIscsiIpAddressToString, 1, %lX
VdsIscsiIpAddressToString, 1.5
VdsIscsiIpAddressToString, 2
VdsIscsiIpAddressToString, 3
VdsIscsiIpAddressToString, 4
VdsIscsiIpAddressToIpsecId()
VdsIscsiIpAddressToIpsecId, 1, hr=%lX
VdsIscsiIpAddressToIpsecId, 2, hr=%lX
VdsIscsiIpAddressToIpsecId, 3, hr=%lX
VdsIscsiIpAddressToIpsecId, 4, hr=%lX
VdsIscsiIpAddressToIpsecId, 5, hr=%lX
VdsIscsiIpsecIdToIpAddress()
VdsIscsiIpsecIdToIpAddress, 0
VdsIscsiIpsecIdToIpAddress, 1
VdsIscsiGetIpAddressFromInstance()
IpV4Address
IpV6Address
IpV6FlowInfo
IpV6ScopeId
TextAddress
VdsIscsiGetIpAddressFromInstance, 1, hr=%lX
VdsIscsiGetIpAddressFromInstance, 2, hr=%lX
VdsIscsiGetIpAddressFromInstance, 3, hr=%lX
VdsIscsiGetIpAddressFromInstance, 4, hr=%lX
VdsIscsiGetIpAddressFromInstance, 5, hr=%lX
VdsIscsiGetIpAddressFromInstance, 6, hr=%lX
VdsIscsiSetIpAddressInInstance()
ISCSI_IP_Address
VdsIscsiSetIpAddressInInstance, 1, hr: %x
VdsIscsiSetIpAddressInInstance, 2, hr: %x
VdsIscsiSetIpAddressInInstance, 2.5, hr=%lX
VdsIscsiSetIpAddressInInstance, 3, hr: %x
VdsIscsiSetIpAddressInInstance, 4, hr: %x
VdsIscsiSetIpAddressInInstance, 5, hr: %x
VdsIscsiSetIpAddressInInstance, 6, hr: %x
VdsIscsiSetIpAddressInInstance, 7, hr: %x
VdsIscsiCheckEqualIpAddress()
VdsIscsiCheckEqualIpAddress, 1, hr: %x
VdsIscsiCheckEqualIpAddress, 2, hr: %x
VdsIscsiCheckEqualIpAddress, 3
VdsIscsiCheckEqualIpAddress, 5
VdsIscsiCheckEqualIpAddress, 7
VdsIscsiCacheSessionDevices()
VdsIscsiCacheSessionDevices, hr: %x
iscsidsc.dll
GetDevicesForIScsiSessionW
MSiSCSI_InitiatorSessionInfo
UniqueAdapterId
SessionsList
UniqueSessionId
VdsIscsiCacheSessio0nDevices, 1, hr: %x
VdsIscsiCacheSessio0nDevices, 2, hr: %x
VdsIscsiCacheSessio0nDevices, 3, hr: %x
VdsIscsiCacheSessio0nDevices, 4, hr: %x
VdsIscsiCacheSessio0nDevices, 5, hr: %x
VdsIscsiCacheSessio0nDevices, 6, hr: %x
VdsIscsiCacheSessio0nDevices, 7, hr: %x
VdsIscsiCacheSessionDevices, 8
VdsIscsiCacheSessionDevices, 9
VdsIscsiCacheSessionDevices, 10
VdsIscsiIsIscsiLun()
PdoInformation
ScsiAddress
PortNumber
ScsiPathId
TargetId
VdsIscsiIsIscsiLun, 1, hr: %x
VdsIscsiIsIscsiLun, hr: %x
VdsIscsiIsIscsiLun, 2, hr: %x
VdsIscsiIsIscsiLun, 3, hr: %x
VdsIscsiIsIscsiLun, 4, hr: %x
VdsIscsiIsIscsiLun, 5, hr: %x
VdsIscsiIsIscsiLun, 6, hr: %x
VdsIscsiIsIscsiLun, 7, hr: %x
VdsWmiConnectToNamespace, 1, hr=%lX
VdsWmiConnectToNamespace, 2, hr=%lX
VdsWmiConnectToNamespace, 3, hr=%lX
VdsWmiGetUlonglongFromInstance, 1, hr=%lX
VdsWmiGetUlongFromInstance, 1, hr=%lX
VdsWmiGetByteFromInstance, 1, hr=%lX
VdsWmiGetBoolFromInstance, 1, hr=%lX
VdsWmiGetObjectFromInstance, 1, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 1, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 2, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 3, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 4, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 5, hr=%lX
VdsWmiGetObjectInVariantObjectArray, 6, hr=%lX
VdsWmiGetByteInVariantByteArray,1, hr=%lX
VdsWmiGetByteInVariantByteArray, 2, hr=%lX
VdsWmiGetByteInVariantByteArray, 3, hr=%lX
VdsWmiGetByteInVariantByteArray, 4, hr=%lX
VdsWmiGetByteInVariantByteArray, 5, hr=%lX
InstanceName
VdsWmiFindInstanceOfClass, 1, hr=%lX
VdsWmiCopyFromVariantByteArray, 1, hr=%lX
VdsWmiCopyFromVariantByteArray, 2, hr=%lX
VdsWmiCopyFromVariantByteArray, 3, hr=%lX
VdsWmiCopyFromVariantByteArray, 4, hr=%lX
VdsWmiCopyFromVariantByteArray, 5, hr=%lX
VdsWmiGetMethodArgumentObject, 1, hr=%lX
VdsWmiGetMethodArgumentObject, 2, hr=%lX
VdsWmiGetMethodArgumentObject, 3, hr=%lX
__Path
VdsWmiCallMethod, 1, hr=%lX
VdsWmiCallMethod, 2, hr=%lX
VdsWmiCreateClassInstance, 1, hr=%lX
VdsWmiCreateClassInstance, 2, hr=%lX
VdsWmiSetUlonglongInInstance, 1, hr=%lX
VdsWmiSetUlonglongInInstance, 2, hr=%lX
VdsWmiSetUlongInInstance, 1, hr=%lX
VdsWmiSetByteInInstance, 1, hr=%lX
VdsWmiSetBoolInInstance, 1, hr=%lX
VdsWmiSetStringInInstance, 1, hr=%lX
VdsWmiSetStringInInstance, 2, hr=%lX
VdsWmiSetObjectInInstance, 1, hr=%lX
VdsWmiSetObjectInInstance, 2, hr=%lX
VdsWmiCreateVariantArray, 1, hr=%lX
VdsWmiCopyToVariantByteArray, 1, hr=%lX
VdsWmiCopyToVariantByteArray, 2, hr=%lX
VdsWmiCopyToVariantByteArray, 3, hr=%lX
CVdsWmiVariantObjectArrayEnum::Attach, 1, hr=%lX
CVdsWmiVariantObjectArrayEnum::Attach, 2, hr=%lX
CVdsWmiVariantObjectArrayEnum::Attach, 3, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 1, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 2, hr=%lX
CVdsWmiVariantObjectArrayEnum::Next, 3, hr=%lX
\UEXFAT.dll
\UUDF.dll
\UNTFS.dll
\UFAT.dll
\fmifs.dll
FormatEx2
EnableVolumeCompression
GetDefaultFileSystem
QueryDeviceInformation
QueryDeviceInformationByHandle
szErr
_InitializeFMIFSDLL: %s, %lX
Global resource is already initialized
Failed to initialize fmifs module
CGlobalResource::Initialize: %s, %lX
Global resource is not initialized
%s, %lX
RSDSr
vdsutil.pdb
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
FFtt-Z
NetWkstaGetInfo
NetApiBufferFree
NetShareEnum
NetShareDel
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
vdsutil.dll
??0?$CVdsHandleImpl@$0?0@@QEAA@XZ
??0CGlobalResource@@QEAA@XZ
??0CPrvEnumObject@@QEAA@XZ
??0CRtlList@@QEAA@P6AXPEAVCRtlEntry@@@Z@Z
??0CRtlMap@@QEAA@KP6AXPEAVCRtlEntry@@@Z1@Z
??0CRtlSharedLock@@QEAA@XZ
??0CVdsAsyncObjectBase@@QEAA@XZ
??0CVdsCallTracer@@QEAA@KPEBD@Z
??0CVdsCriticalSection@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0CVdsPnPNotificationBase@@QEAA@XZ
??0CVdsTraceSettings@@QEAA@XZ
??0CVdsUnlockIt@@QEAA@AEAJ@Z
??0CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??1?$CVdsHandleImpl@$0?0@@QEAA@XZ
??1CGlobalResource@@QEAA@XZ
??1CPrvEnumObject@@QEAA@XZ
??1CRtlList@@QEAA@XZ
??1CRtlMap@@UEAA@XZ
??1CRtlSharedLock@@QEAA@XZ
??1CVdsAsyncObjectBase@@QEAA@XZ
??1CVdsCallTracer@@QEAA@XZ
??1CVdsCriticalSection@@QEAA@XZ
??1CVdsPnPNotificationBase@@QEAA@XZ
??1CVdsUnlockIt@@QEAA@XZ
??1CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??4?$CVdsHandleImpl@$0?0@@QEAAPEAXPEAX@Z
??4CRtlList@@QEAAAEAV0@AEAV0@@Z
??8?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??B?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
??_FCRtlList@@QEAAXXZ
??_FCRtlMap@@QEAAXXZ
?AcquireRead@CRtlSharedLock@@AEAAXXZ
?AcquireWrite@CRtlSharedLock@@AEAAXXZ
?AllowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Append@CPrvEnumObject@@QEAAJPEAUIUnknown@@@Z
?Attach@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAUtagVARIANT@@@Z
?Begin@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Begin@CRtlMap@@QEAA?AVCRtlMapIter@@XZ
?Cancel@CVdsAsyncObjectBase@@UEAAJXZ
?Clear@CPrvEnumObject@@QEAAXXZ
?Clone@CPrvEnumObject@@UEAAJPEAPEAUIEnumVdsObject@@@Z
?CreateListenThread@CVdsPnPNotificationBase@@AEAAKXZ
?CurrentThreadIsWriter@CRtlSharedLock@@QEAAHXZ
?Detach@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?DisallowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Downgrade@CRtlSharedLock@@AEAAXXZ
?End@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Find@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAV2@@Z
?FindPtr@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAPEAV2@@Z
?GetEntry@CRtlListIter@@QEAAPEAVCRtlEntry@@XZ
?GetEntryPointer@CRtlListIter@@QEAAPEAXXZ
?GetNode@CRtlListIter@@QEAAPEAVCRtlListEntry@@XZ
?GetOutputType@CVdsAsyncObjectBase@@QEAA?AW4_VDS_ASYNC_OUTPUT_TYPE@@XZ
?GetWindowHandle@CVdsPnPNotificationBase@@QEAAPEAUHWND__@@XZ
?Initialize@CGlobalResource@@QEAAJXZ
?Initialize@CVdsAsyncObjectBase@@SAKXZ
?Initialize@CVdsPnPNotificationBase@@QEAAKXZ
?Insert@CRtlList@@QEAAHAEAVCRtlListIter@@AEAVCRtlEntry@@@Z
?Insert@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?InsertHead@CRtlList@@QEAAHAEAVCRtlEntry@@@Z
?InsertHeadPointer@CRtlList@@QEAAHPEAX@Z
?InsertPointer@CRtlList@@QEAAHAEAVCRtlListIter@@PEAX@Z
?InsertTail@CRtlList@@QEAAHAEAVCRtlEntry@@@Z
?InsertTailPointer@CRtlList@@QEAAHPEAX@Z
?InsertUnique@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?IsCancelRequested@CVdsAsyncObjectBase@@QEAAHXZ
?IsDone@CRtlListIter@@QEAAHXZ
?IsFinished@CVdsAsyncObjectBase@@QEAAHXZ
?Next@CPrvEnumObject@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Next@CRtlListIter@@QEAAAEAV1@XZ
?Next@CRtlMapIter@@QEAAAEAV1@XZ
?Next@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAPEAUIWbemClassObject@@@Z
?NotificationThread@CVdsPnPNotificationBase@@AEAAKPEAX@Z
?NotificationThreadEntry@CVdsPnPNotificationBase@@CAKPEAX@Z
?Prev@CRtlListIter@@QEAAAEAV1@XZ
?QueryStatus@CVdsAsyncObjectBase@@UEAAJPEAJPEAK@Z
?Register@CVdsPnPNotificationBase@@QEAAKPEAU_NotificationListeningRequest@@K@Z
?RegisterHandle@CVdsPnPNotificationBase@@QEAAKPEAXPEAPEAX@Z
?Release@CRtlSharedLock@@AEAAXXZ
?Remove@CRtlList@@QEAAXAEAVCRtlListIter@@@Z
?Remove@CRtlMap@@QEAAHAEAVCRtlEntry@@@Z
?RemoveAll@CRtlList@@QEAAXXZ
?RemoveAll@CRtlMap@@QEAAXH@Z
?Reset@CPrvEnumObject@@UEAAJXZ
?Reset@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?SetCompletionStatus@CVdsAsyncObjectBase@@QEAAXJK@Z
?SetOutput@CVdsAsyncObjectBase@@QEAAXU_VDS_ASYNC_OUTPUT@@@Z
?SetOutputType@CVdsAsyncObjectBase@@QEAAXW4_VDS_ASYNC_OUTPUT_TYPE@@@Z
?SetPositionToLast@CPrvEnumObject@@QEAAXXZ
?Signal@CVdsAsyncObjectBase@@QEAAXXZ
?Skip@CPrvEnumObject@@UEAAJK@Z
?Uninitialize@CVdsAsyncObjectBase@@SAXXZ
?Uninitialize@CVdsPnPNotificationBase@@QEAAXXZ
?Unregister@CVdsPnPNotificationBase@@QEAAXPEAU_NotificationListeningRequest@@@Z
?UnregisterHandle@CVdsPnPNotificationBase@@QEAAXPEAX@Z
?Upgrade@CRtlSharedLock@@AEAAXXZ
?WaitImpl@CVdsAsyncObjectBase@@QEAAJPEAJ@Z
?WindowProcEntry@CVdsPnPNotificationBase@@CA_JPEAUHWND__@@I_K_J@Z
?ZeroAsyncOut@CVdsAsyncObjectBase@@QEAAXXZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
AcquireRundownProtection
AddEventSource
AllocateAndGetVolumePathName
AssignTempVolumeName
BacksBootVolume
BootBackedByWim
CoFreeStringArray
CreateDeviceInfoSet
DeleteBcdObjects
DeleteNetworkShare
DllMain
GarbageCollectDriveLetters
GetBootDiskNumber
GetBootFromDiskNumber
GetBootVolumeHandle
GetDefaultAlignment
GetDeviceAndMediaType
GetDeviceId
GetDeviceLocation
GetDeviceLocationEx
GetDeviceLocationPath
GetDeviceManufacturerInfo
GetDeviceName
GetDeviceNumber
GetDeviceRegistryPropertyByInfo
GetDeviceRegistryPropertyByInst
GetDiskFlags
GetDiskIdentifiers
GetDiskLayout
GetDiskOfflineReason
GetDiskRedundancyCount
GetFMIFSEnableCompressionRoutine
GetFMIFSFormatEx2Routine
GetFMIFSGetDefaultFilesystemRoutine
GetFMIFSQueryDeviceInfo
GetFMIFSQueryDeviceInfoByHandle
GetFileSystemRecognitionName
GetInterfaceDetailData
GetIsRemovable
GetMediaGeometry
GetMediaGeometryEx
GetPartitionInformation
GetRegistryValue
GetStorageAccessAlignmentProperty
GetSystemVolumeHandle
GetVolumeDiskExtentInfo
GetVolumeGuidPathnames
GetVolumeName
GetVolumePath
GetVolumeSize
GetVolumeUniqueId
GuidToString
InitializeRundownProtection
InitializeSecurityDescriptorHelper
InvalidateDiskCache
IoctlMountmgrQueryPointsDevicePath
IsClientSKU
IsDeviceFullyInstalled
IsDiskClustered
IsDiskCurrentStateReadOnly
IsDiskReadOnly
IsDriveLetter
IsEfiFirmware
IsLocalComputer
IsMediaPresent
IsNoAutoMount
IsRamDrive
IsRunningOnAMD64
IsVdsLoggingEnabled
IsWinPE
LockDismountVolume
LockVolume
LogError
LogEvent
LogInfo
LogWarning
MirrorBcdObjects
MountVolume
OpenDevice
QueryObjects
QueryVolPersistentState
ReInitializeRundownProtection
RegisterProvider
ReleaseRundownProtection
RemoveEventSource
RemoveTempVolumeName
RundownCompleted
SetDiskLayout
StartReferenceHistory
StopReferenceHistory
UnInitializeGlobalResouce
UnregisterProvider
VdsAllocateEmptyString
VdsAllocateString
VdsAssert
VdsDisableCOMFatalExceptionHandling
VdsDoesDiskHaveArcPath
VdsHeapAlloc
VdsHeapFree
VdsInitializeCriticalSection
VdsIscsiCacheSessionDevices
VdsIscsiCheckEqualIpAddress
VdsIscsiGetIpAddressFromInstance
VdsIscsiIpAddressToIpsecId
VdsIscsiIpAddressToString
VdsIscsiIpsecIdToIpAddress
VdsIscsiIsIscsiLun
VdsIscsiSetIpAddressInInstance
VdsTrace
VdsTraceEx
VdsTraceExHelper
VdsTraceExW
VdsTraceExWHelper
VdsTraceW
VdsWmiCallMethod
VdsWmiConnectToNamespace
VdsWmiCopyFromVariantByteArray
VdsWmiCopyToVariantByteArray
VdsWmiCreateClassInstance
VdsWmiCreateVariantArray
VdsWmiFindInstanceOfClass
VdsWmiGetBoolFromInstance
VdsWmiGetByteFromInstance
VdsWmiGetByteInVariantByteArray
VdsWmiGetMethodArgumentObject
VdsWmiGetObjectFromInstance
VdsWmiGetObjectInVariantObjectArray
VdsWmiGetUlongFromInstance
VdsWmiGetUlonglongFromInstance
VdsWmiSetBoolInInstance
VdsWmiSetByteInInstance
VdsWmiSetObjectInInstance
VdsWmiSetStringInInstance
VdsWmiSetUlongInInstance
VdsWmiSetUlonglongInInstance
WaitForRundownProtectionRelease
WriteBootCode
__CxxFrameHandler4
??3@YAXPEAX@Z
_purecall
_vsnwprintf
_vsnprintf
__C_specific_handler
_wcsicmp
_wcsnicmp
wcsncmp
_wcsupr
wcsstr
mbstowcs_s
_wcstoui64
_ui64tow
malloc
_callnewh
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??1exception@@UEAA@XZ
?what@exception@@UEBAPEBDXZ
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UEAA@XZ
RtlInitializeResource
RtlDeleteResource
RtlReleaseResource
RtlAcquireResourceShared
RtlAcquireResourceExclusive
RtlConvertSharedToExclusive
RtlConvertExclusiveToShared
EnterCriticalSection
LeaveCriticalSection
DeleteCriticalSection
SetEvent
CreateEventW
GetLastError
WaitForSingleObject
Sleep
TerminateProcess
GetCurrentProcess
CloseHandle
GetCurrentProcessId
GetCurrentThreadId
IsDebuggerPresent
OutputDebugStringW
TraceMessage
DbgPrintEx
WideCharToMultiByte
RegOpenKeyExW
RegQueryValueExW
RegCloseKey
CoTaskMemFree
CoTaskMemAlloc
InitializeCriticalSectionAndSpinCount
HeapAlloc
HeapFree
GetProcessHeap
ResetEvent
InitializeCriticalSection
LoadStringW
MultiByteToWideChar
InitializeSecurityDescriptor
SetSecurityDescriptorOwner
GetLengthSid
SetSecurityDescriptorGroup
SetSecurityDescriptorDacl
InitializeAcl
AddAccessAllowedAce
CreateFileW
DeviceIoControl
GetComputerNameExW
GetTraceLoggerHandle
GetTraceEnableLevel
GetTraceEnableFlags
RegisterTraceGuidsW
UnregisterTraceGuids
DisableThreadLibraryCalls
HeapDestroy
CoCreateInstance
RegCreateKeyExW
GetModuleFileNameW
RegSetValueExW
RegDeleteKeyExW
RtlNtStatusToDosError
RegisterEventSourceW
ReportEventW
DeregisterEventSource
GetComputerNameW
AllocateAndInitializeSid
FreeSid
GetDiskFreeSpaceExW
GetDriveTypeW
DevObjGetDeviceInstanceId
DevObjGetDeviceInterfaceDetail
DevObjCreateDeviceInfoList
DevObjGetClassDevs
DevObjEnumDeviceInfo
DevObjDestroyDeviceInfoList
DevObjGetDeviceProperty
CM_Get_Parent
lstrlenW
DevObjGetDeviceRegistryProperty
CM_Get_Device_IDW
DevObjOpenDeviceInfo
DevObjOpenDeviceInterface
GetVolumePathNameW
CoCreateGuid
StringFromGUID2
DefineDosDeviceW
QueryDosDeviceW
SetLastError
SetFilePointer
ReadFile
WriteFile
NtQuerySystemInformation
CreateThread
WaitForMultipleObjects
GetModuleHandleW
GetSystemDirectoryW
RtlInitUnicodeString
NtOpenDirectoryObject
NtQueryDirectoryObject
NtClose
NtOpenFile
VerSetConditionMask
VerifyVersionInfoW
GetNativeSystemInfo
WSAAddressToStringW
GetAddrInfoW
FreeAddrInfoW
LoadLibraryExW
GetProcAddress
FreeLibrary
CoSetProxyBlanket
RtlEnumerateGenericTableWithoutSplayingAvl
RtlInsertElementGenericTableAvl
RtlLookupElementGenericTableAvl
RtlDeleteElementGenericTableAvl
RtlEnumerateGenericTableAvl
RtlInitializeGenericTableAvl
RtlCompareString
RtlCompareUnicodeStrings
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
ntdll.dll
OLEAUT32.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-eventing-classicprovider-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-eventlog-legacy-l1-1-0.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
DEVOBJ.dll
api-ms-win-devices-config-l1-1-1.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
WS2_32.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
PostThreadMessageW
SetTimer
KillTimer
RegisterDeviceNotificationW
UnregisterDeviceNotification
RegisterClassW
CreateWindowExW
UnregisterClassW
SetWindowLongPtrW
DestroyWindow
GetMessageW
TranslateMessage
DispatchMessageW
GetWindowLongPtrW
DefWindowProcW
USER32.dll
BcdEnumerateObjects
BcdEnumerateElementTypes
BcdGetElementDataWithFlags
BcdSetElementData
BcdGetElementData
BcdOpenObject
BcdDeleteElement
BcdCloseObject
BcdOpenSystemStore
BcdDeleteObject
BcdCloseStore
BcdCopyObject
BcdQueryObject
bcd.dll
ResolveDelayLoadedAPI
DelayLoadFailureHook
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
memcmp
memset
.?AVbad_alloc@std@@
.?AVexception@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
LoggingFlags
SYSTEM\CurrentControlSet\Services\vds\DebugLog
VDS Notification Thread Hidden Window {00000000-0000-0000-0000-000000000000}
GreaterThan32GB
Between8_32GB
Between4_8GB
LessThan4GB
System\CurrentControlSet\Services\vds\Alignment
SYSTEM\CurrentControlSet\Services\EventLog\System
TCPAu2
fSfSfUfh
Invalid partition table
Error loading operating system
Missing operating system
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Virtual Disk Service Utility Library
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
vdsutil.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
vdsutil.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
en-US
