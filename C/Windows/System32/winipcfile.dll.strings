!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$HH3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
L$ SVWH
L$ SVWAVH
(A^_^[
WAVAWH
0A_A^_
\$ UVWH
|$ [H
D$ u%
;@8:t
\$ UVW
@SVWH
WAVAWH
fD;8H
A_A^_
q*Z~:
q*Z~:
L$ SUVWH
L$hH+
f9,Cu
(_^][
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
x AVH
\$ UVWH
D$0H;
L$ SVWH
WATAUAVAWH
f9,Au
f9,Ou
fD9t}
 A_A^A]A\_
q*Z~:
UVWATAUAVAWH
ty@8=
t"@8=q=
fA9>u
@A_A^A]A\_^]
D$ E3
L$(H3
x UAVAWH
T$0H+
A_A^]
t/HcL$$A
HcD$ H
VWAVH
 A^_^
UVWATAUAVAWH
f9,Qu
H9/sDH
 A_A^A]A\_^]
u%H!\$8H
x AVH
t$ WH
L$0H3
L$0H3
L$0H3
WATAUAVAWH
 A_A^A]A\_
x AVH
L$0H3
L$0H3
UWAVH
VWAVH
L$(H3
0A^_^
WAVAWH
A_A^_
@SUWH
L$ SH
L$ SH
L$0H3
@SWATAUAVAW
A_A^A]A\_[
@SVWATAUAVAW
H9\$`
T$pH;
D$ E3
A_A^A]A\_^[
\$ VWAVH
@SVWATAUAVAW
H9|$`
T$hH;
A_A^A]A\_^[
@SVWATAUAVAW
A_A^A]A\_^[
@SVWATAUAVAW
H9\$P
T$`H;
T$pH;
A_A^A]A\_^[
@SVWATAUAVAW
T$xH;
A_A^A]A\_^[
\$ VWAVH
\$ VWATAVAW
T$`H;
D$ E3
T$pH;
A_A^A\_^
\$ VWATAVAW
T$PH;
D$ E3
T$`H;
A_A^A\_^
s WAVAWH
T$XH;
T$xH;
D$ E3
A_A^_
s WATAUAVAWH
L$@H;
L$@H;
D$ E3
L$@H;
A_A^A]A\_
t$ WH
\$`E3
CD$@H
\$`E3
CD$@H
L$hH3
@SVWATAVAW
T$PH;
D$ E3
A_A^A\_^[
SVWATAVAW
T$pH;
D$ E3
A_A^A\_^[
\$ VWAVH
\$ VWAV
\$ VWAV
@SVWATAVAW
T$PH;
D$ E3
A_A^A\_^[
@SVWATAVAW
T$PH;
D$ E3
A_A^A\_^[
VWAVH
T$PH;
D$ E3
\0<7y
UWAWH
L$0H3
@USWH
90tBH
t$ UWAVH
t$ WH
UWAWH
t$ WH
x AVH
WAVAWH
 A_A^_
UVWATAUAVAWH
L$@fD
A_A^A]A\_^]
SVWAVAWH
 A_A^_^[
x AVH
w}H9{
x AVH
SVWAVH
(A^_^[
tAfA9(t;H
fA9,@u
t$ UWATAVAWH
D9d$(|
D$,D8%qM
D8%@M
t(D8%
VWAVH
D84.u
0A^_^
L$`H3
L$hH3
L$hH3
L$`H3
L$PH3
WATAUAVAWH
0A_A^A]A\_
t$ WATAUAVAWH
|$pI;
D$PH;
 A_A^A]A\_
x AVH
UVWAVAWH
D9|$(
D8=?<
t(D8=
D8=\;
A_A^_^]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
|$ AVH
q#Xr0
)t$PH
CD$(H
L$HH3
(t$PH
f9\$0t
@SVWH
L$XH3
t$ WAVAWH
A_A^_
L$(H3
L$pH3
L$(H3
@USVWAVAWH
\$0H;
A_A^_^[]
L$(H3
@SUVWAVH
A^_^][H
[ UVWH
\$Hf9;t
f9<Cu
UVWATAUAVAWH
l$HfD
D$8H;
|$8H+
A_A^A]A\_^]
L$`H3
VWAVH
L$PH3
CD$(H
` AUAVAWH
A_A^A]
t)f9;t
f9<Ku
p"QVm
WAVAWH
A_A^_
t$HH+
WAVAWH
A_A^_
t$8H+
@USVWATAUAVAWH
fD99u
fF9<Au
xA_A^A]A\_^[]
D$(H;
x ATAVAWH
 A_A^A\
x ATAVAWH
 A_A^A\
VWAVH
0A^_^
@SVWATAUAVAWH
@A_A^A]A\_^[
|$ AVH
WAVAWH
 A_A^_
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
@SVWAVAWH
@A_A^_^[
@UVWATAVAWH
fD;$Ft
A_A^A\_^]
VWAVH
L$ H3
0A^_^
x AVH
fD92u
fD94zu
WAVAWH
|$`I+
 A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
|$ AVH
q;TXi
p;TXi
qcVx:
p;TXi
L$0H3
l$ VWAVH
L$0H3
@A^_^
@SVWATAUAVAWH
A_A^A]A\_^[
H9Ahs
H9Ahs
qP[\=
M9Qhv.I
v;fD;
t$ WATAUAVAWH
$H+0I
C8uqH
0A_A^A]A\_
AXH90t^L
\$0HcH
UVWAVAWH
FXH9nHu
0A_A^_^]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
pP[\=
qP[\=
SVWAVAWH
@8|$H
(D$Pf
pA_A^_^[
SVWAVAWH
@8|$H
(D$Pf
pA_A^_^[
qX\pG
D$@Hc
SUVWATAUAVAWH
A_A^A]A\_^][
SUVWATAUAVAWH
A_A^A]A\_^][
@SUVWH
@SUVWH
@SUVWH
@SUVWH
@USVWATAUAVAWH
D$(fD
A_A^A]A\_^[]
UVWATAUAVAWH
<}w^I
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
 A_A^_
@SVWAVAWH
@A_A^_^[
WATAUAVAWH
\$hf9:u
fB9<zu
@8|$(u
@@H98t
@X98~
@@H98t
@X98~
0A_A^A]A\_
@SVWAVAWH
@A_A^_^[
@SVWAVAWH
@A_A^_^[
|$ AVH
toH91uj
VWAVH
|$ ATAVAWH
D$0.fD
D$0,fD
A_A^A\
|$0f9:u
fB9<Bu
L$PH3
\$ UVWATAUAVAWH
fD9#u
fF9$Cu
|$ E3
A_A^A]A\_^]
@SVWH
t$ UWAVH
x UAVAWH
A_A^]
L$ H3
|$ UH
fB94Cu
\$ UVWH
x UAVAWH
A_A^]
UVWAVAWH
A_A^_^]
t$ WH
fB94@u
;f9|$0t
f9<Au
L$pH3
f9\$0t
L$pH3
f9\$0t
L$pH3
UVWAVAWH
A_A^_^]
rRH+C
L$ H3
L$8H3
D$0HcH
L$pH3
\$ UVWH
L$(H3
@SUVWAVH
L$(H3
0A^_^][
UWAWH
u2L9}/
tlH9Kxu
t$ UWATAVAWH
 s9E3
A_A^A\_]
VWAVH
0A^_^
qqQ<^
L9L$(D
BL$(A
UWATAVAWH
A_A^A\_]
@SVWAVAWH
@A_A^_^[
|$ AVH
toH91uj
x ATAVAWH
fD9&u
fF9$Fu
0A_A^A\
UVWATAUAVAWH
L$pE3
l$`fD
)fD9+u
fF9,Cu
|$ E3
A_A^A]A\_^]
UVWAVAWH
t$ E3
L$HH3
PA_A^_^]
@SUVWATAVAWH
D96txH
9|$4tC9|$4t8H
L$@H3
PA_A^A\_^][
@SUVWATAVAWH
L$8H3
@A_A^A\_^][
L$(H3
VWAVH
0A^_^
\$ WH
t$ WATAUAVAWH
L$0E3
CD$@I
L$`H3
A_A^A]A\_
1H;\$@s
L$PH3
L$PH3
VWAVH
H!\$(H
L$xH3
x UATAUAVAWH
9{ ~N
H9{(ukL
A_A^A]A\]
t$ UWAVH
WATAUAVAW
L$PE3
A_A^A]A\_
@USVWATAVAWH
fE9&u
fG9$Fu
fD9"u
fD9$Zu
fD9"u
fD9$Zu
fD9"u
fD9$Zu
A_A^A\_^[]
{ UATAUAVAWH
fB9<Bu
fB9<Bu
A_A^A]A\]
D9H }
t5D;I |/L
WAVAWH
I;r(t
 A_A^_
\$ WH
L$PH3
\$ UVWATAUAVAWH
T$@E3
\$@H9
|$`fD
fD9=,
A_A^A]A\_^]
L$`H3
|$ UH
l$@f9*u
fB9,Bu
L$`H3
WAVAWH
D$(E3
L$`L;
@A_A^_
D$8E3
{ ATAVAWH
D$(E3
!E;` }]H
D9a }EL
L$`I;
D;` }:H
@A_A^A\
{ ATAVAWH
D$(E3
!E;` }]H
D9a }EL
L$`I;
D;` }:H
@A_A^A\
WAVAWH
H;8u2
0A_A^_
WATAUAVAWH
H;0u2H
0A_A^A]A\_
WATAUAVAWH
t;H;2u'L
9C }'L
0A_A^A]A\_
WATAUAVAWH
t>H;:u*L
$9C }'L
0A_A^A]A\_
q)[Z/'
@USVWATAUAVAWH
WVn.i
A_A^A]A\_^[]
UVWATAUAVAWH
D$xL;
A_A^A]A\_^]
|$ UH
t$ UWAVH
L$(H3
@SVWATAUAVAW
CL$`E3
CL$`E3
fB9<Bu
D$ E3
|$`E3
p)[Z/'
p)[Z/'
fB9<Bu
D$HL;
T$HH;
T$HH;
A_A^A]A\_^[
@USVWAVH
A^_^[]
s WATAUAVAWH
D$@L;
p)[Z/'
T$PH;
A_A^A]A\_
9\$`u&H
L$hH3
|$ UH
UWATAVAWH
p)[Z/'
A_A^A\_]
H<9J<u
VWAVH
 A^_^
|$ AVH
D$8E3
WATAUAVAWH
H;0u2H
0A_A^A]A\_
2333333
VWAVH
 A^_^
VWAVH
 A^_^
\$ UVWATAUAVAWH
tYfE9.u
fG9,Fu
fD9*u
fF9,Bu
l$@fD
D$0H;
l$@fD
D$0H;
A_A^A]A\_^]
x ATAVAWH
t&fD9&u
fD9$nu
GXL;Gxu+H
A_A^A\
\$(E3
D$8fD
D$(fD9
L$(E3
x AVH
@SVWATAVAWH
|$0H9
A_A^A\_^[
@SVWATAUAVAW
9_@u%H
|$4H9
A_A^A]A\_^[
fB94Bu
l$ VWAUAVAWH
D$8H!|$HI
H!|$ D
A_A^A]_^
UVWATAUAVAWH
d$XfD
d$HfD9
fF9$@u
d$xfD
A_A^A]A\_^]
WAVAWH
D$(H;
A_A^_
UVWAVAWH
A_A^_^]
WAVAWH
|$8fD
D$(H;
A_A^_
x UAVAWH
A_A^]
UVWATAUAVAWH
T$HE3
pB[Vx
A_A^A]A\_^]
WATAUAVAW
D$ E3
A_A^A]A\_
@SVWATAUAVAW
D$ E3
A_A^A]A\_^[
D$ E3
ATAVAWH
t$0D!t$4M
A_A^A\
x AVH
VWAVH
 A^_^
t$ UWAVH
|$ UAVAWH
8Zv2H
D$8H;
|$8E3
D$8H;
A_A^]
@SVWH
L$PH3
D$ E3
D$(E3
D$PHc
D$ H;
L$PH3
L$8H3
L$ SVWAVH
(A^_^[
L$(E3
9|$,u
L$ 9|$,u
L$0H3
L$(E3
9|$,u
L$ 9|$,u
L$0H3
D$ E3
fA;T@
qB[Vx
WATAUAVAWH
C|$8H
H9|$ 
L$`H3
A_A^A]A\_
pB[Vx
pB[Vx
D$ E3
L$HH3
D$DDtXH
@USWATAUAVAWH
EHt6H
EHt>H
t4A9~
t.HcC<
EPt>H
pA_A^A]A\_[]
D$8E3
L$HH3
UVWAVAWH
pA_A^_^]
UVWAUAVH
A^A]_^]
UVWATAUAVAWH
L$`E3
L9 t"H
H9D$@
A_A^A]A\_^]
\$ UVWATAUAVAWH
L$ E3
A_A^A]A\_^]
VWAVH
 A^_^
VWAVH
 A^_^
WAVAWH
0A_A^_
WAVAWH
0A_A^_
qS\Z/
q{WRb/
t$ WH
L$0E3
L$8H3
@SUVWAVH
L$8H3
@A^_^][
@SUVWAVH
L$8H3
@A^_^][
L$HH3
L$HH3
@SVWAVAWH
D$0H!\$0I
L$8H3
@A_A^_^[
x AVH
fD96u
fF94Fu
D9wLt
XL9w8tPH
fB9,Cu
|$ AVH
{ AVH
L$HE3
L$pH3
t$ WATAUAVAW
D$ E3
A_A^A]A\_
L$0H9O
D$8E3
9_HuE
L$HH3
\$ UVWATAUAVAWH
pA_A^A]A\_^]
'u?E3
fD9D$0t
@USVWATAVAWH
A_A^A\_^[]
s UWAVI
{ UAVAWH
A_A^]
t$ UWATAUAVH
A^A]A\_]
@USVWAVH
fB9<@u
f9<Xu
A^_^[]
UWAUAVAWH
TUUUUUU
A_A^A]_]
UVWATAVH
fD92u
fF94Bu
A^A\_^]
UVWAVAWH
fD92u
fD94Zu
A_A^_^]
@USVWATAVAWH
A_A^A\_^[]
UWAVI
UVWAVAWH
A_A^_^]
USVWATAUAVAWH
A_A^A]A\_^[]
@SVWAVAWH
A_A^_^[
@SVWAVAWH
pJU~e
A_A^_^[
s WAVAWH
t$HE3
pJU~e
A_A^_
TUUUUUU
VWAVH
 A^_^
VWAVH
 A^_^
q+U|p
C8H;C8
D$0H!\$@
H!\$ D
t$ UWAVH
D$8L+
fE94Ku
VWATAVAWH
D$8H!|$HH
D$@H+
A_A^A\_^
@VWATAVAW
D$ E3
D$ E3
D$ E3
A_A^A\_^
t$ WAVAWH
D$@H+
A_A^_
SVWAVAWH
D$ E3
H+CHH
CPH;CX
A_A^_^[
D$ E3
@USVWATAUAVAWH
A_A^A]A\_^[]
SUVWATAVAWH
L$@H3
PA_A^A\_^][
t$ WATAUAVAW
9\$Dt1
DD$@I
9\$DtCI
p+U|p
pJU~e
9\$Dt=I
p+U|p
A_A^A]A\_
VWAVH
 A^_^
SUVWAVH
@A^_^][
x AVH
t$ WATAUAVAW
!|$PH
H!|$H
A_A^A]A\_
VWAVH
 A^_^
USVWATAVAWH
A_A^A\_^[]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
qJU~e
t$ WH
pJU~e
t$ WH
L$(H3
H9_(v
VWATAUAVH
o H;o 
W H;W 
L$HH3
A^A]A\_^
L$ H3
t$ WH
{ H;{ rHH
L$ H3
l$ VWAVH
\$0tDH
H9D$ u
@A^_^
D$ H;D$ r0
L$0H3
VWAVH
 A^_^
@SUVWATAVAWH
A_A^A\_^][
UVWAVAWH
A_A^_^]
qJU~e
l$ VWAVH
L$@H3
@USVWATAVAWH
H!T$ L
A_A^A\_^[]
\$ WH
C8H;C8rJH
VWAVH
 A^_^
@SUVWAVH
A^_^][
@SUVWAVH
T$XL+
L$PH9O8wG+O8
L$pH3
A^_^][
@SUVWAUAVAWH
t$XL+
H9_(wEH+_(H
L$xH3
A_A^A]_^][
qJU~e
pJU~e
UVWATAUAVAWH
pA_A^A]A\_^]
H+C(H
H9Q0v(H
D$8L+D$0L;
f9\$pu
D$(H;
VWAVH
f9\$pu
D$(H;
WATAUAVAWH
 A_A^A]A\_
q*Z~:
q*Z~:
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
oD$ f
oL$0f
oT$@f
o\$PH
q"QVm
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
l$ VWAVH
l$ VWAVH
VWATAVAWH
D8"u3H
A_A^A\_^
D9&tZA
f#D$@H
x AVH
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
bad allocation
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
winmsipc.dll
CRYPT32.dll
OLEAUT32.dll
[%u]%hc
RtlTrace error: hr = 0x%08x
generic
unknown error
iostream
iostream stream error
system
FsTrace error: hr = 0x%08x
Unknown
%s%sException at %s(%lu)%s%s
HRESULT = 0x%08x
FsException::setDetailedMessage - Error in ::Microsoft::InformationProtection::OperatingSystem::IpcOsStringCchPrintf.
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_coinit.h
auto_coinit_ModeFixed with %d and HR=%x
auto_coinit_ModeFixed quit with CoUninitialize
Failure
os::IpcOsInitializeCriticalSectionAndSpinCount(&m_cs, 0)
onecoreuap\ds\security\rm\client\src\base\FsCommon\FastMutex.h
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
CorrelationId
DataSize
ScenarioId
ContentId
IssuerName
IssuerId
RACObjectId
OwnerId
DurationWithoutExternalOps
Status
SubType
TokenProvided
UserProvided
AuthCallbackProvided
ConnectionMode
HRESULT
HomeTenant
GuestTenant
HttpCall
DnsSuccess
UserInfo.Principal
LicenseId
LicensePropertyType
IsFromTemplate
OperationName
TemplatesCount
ServerType
ReinterpretKeyHandle
KeyHandle
AppInfo.Name
AppInfo.Version
DeviceInfo.OSArch
AppInfo.ClientHierarchy
Identity.Status
Identity.Failure
Identity.Type
Identity.IntranetUrl
Identity.ExtranetUrl
Identity.UserProvided
ConnectionInfo.IntranetUrl
ConnectionInfo.ExtranetUrl
SDKVersion
NoOfDomainsSearched
NoOfDomainsSkipped
TemplateId
CallBackStatus
Duration
StartTime
EndTime
FileExtension
FileFormat
PolicyType
ErrorCode
StatusCode
Result
LicenseFormat
RACType
CallbackTime
VerifyCertChainDuration
VerifySignatureDuration
LicenseType
Online
Offline
Renew
Expired
False
Template
Adhoc
Success
AADRM
ApiOp
HttpOp
DnsLookupOp
ServiceDiscoveryOp
RenewUserOp
GetUserOp
StoreOp
ParseLicenseOp
RegistryBasedLocator
UrlBasedLocator
GlobalServiceLocator
AddRAC
DeleteRAC
UnhandledError
MsipcActivity
HandleException
NullHandleException
InvalidHandleTypeException
IpcpGetLoggerInstance(&pInstance)
onecoreuap\ds\security\rm\client\src\fileapi\fileapi\ipcfileapi.cpp
FileAPI logger instance initialized
FileAPIInitializeLogging
onecoreuap\ds\security\rm\client\src\fileapi\fileapi\ipcfileapi.cpp
+++++++ WARNING Initializing logging failed in FILEAPI ++++++++++.
hr = IpcGetGlobalProperty( IPC_EI_API_MODE, (LPVOID*)&pInfo )
CoInitializeEx: Set STA for IPC_API_MODE_CLIENT.
CoInitializeEx: MTA is already set, so Set MTA instead.
CoInitializeEx: Set MTA for IPC_API_MODE_SERVER.
CoInitializeEx: STA is already set, so Set STA instead.
API Mode of %d is not supported in File API.
IpcfpGetEncryptedFilePathFromStream
pInputFileStream
wszInputFilePath
dwFlags
pwszOutputFilePath
*** Error tracing API entry
IpcfpGetEncryptedFilePathFromStream
IPCF_EF_FLAG_DEFAULT == dwFlagsTemp || IPCF_EF_FLAG_UPDATELICENSE_BLOCKED == dwFlagsTemp || IPCFP_EF_FLAG_OVERRIDE_POLICY_FORCE_PFILE == dwFlagsTemp || IPCFP_EF_FLAG_OVERRIDE_POLICY_FORCE_NATIVE == dwFlagsTemp || IPCF_EF_FLAG_FORCE_PFILE == dwFlagsTemp || IPCF_EF_FLAG_FORCE_NATIVE == dwFlagsTemp
*** Error tracing API exit
IpcfEncryptFileStream
IpcfpEncryptFileStream
pvLicenseInfo
dwType
pContext
pOutputFileStream
IpcfpEncryptFileStreamWithMetadata
IPCF_EF_TEMPLATE_ID == dwType || IPCF_EF_LICENSE_HANDLE == dwType
ILockBytesUtilities::ValidateFileSize(pInputFileStream, MAX_FILE_SIZE_FOR_ENCRYPT)
IpcfpGetEncryptedFilePath
IpcfpGetEncryptedFilePath
IpcfEncryptFile
IpcfpEncryptFile
wszOutputFileDirectory
IpcfpEncryptFileWithMetadata
IpcfpGetDecryptedFilePathFromStream
IpcfpGetDecryptedFilePathFromStream
IPCF_DF_FLAG_DEFAULT == dwFlags || IPCF_DF_FLAG_OPEN_AS_RMS_AWARE == dwFlags || IPCFP_DF_FLAG_OPEN_AS_RMS_AWARE == dwFlags || IPCFP_DF_FLAG_OPEN_AS_UNAWARE_WITH_AUDIT== dwFlags
IpcfDecryptFileStream
IpcfpDecryptFileStream
IpcfpDecryptFileStream
IpcfDecryptFile
IpcfpDecryptFile
IpcfpDecryptFile
(IPCF_DF_FLAG_DEFAULT == dwMaskedFlags) || (IPCF_DF_FLAG_OPEN_AS_RMS_AWARE == dwMaskedFlags) || (IPCFP_DF_FLAG_OPEN_AS_RMS_AWARE == dwMaskedFlags) || (IPCFP_DF_FLAG_OPEN_AS_UNAWARE_WITH_AUDIT == dwMaskedFlags)
IpcfpGetDecryptedFilePath
IpcfpGetDecryptedFilePath
IpcfpIsFileStreamEncrypted
IpcfpIsFileStreamEncrypted
pdwFileStatus
IpcfpGetSerializedLicenseFromFileStream
IpcfpGetSerializedLicenseFromFileStream
ppvLicense
IpcfppGetSerializedLicenseFromFileEx
IpcfppGetSerializedLicenseFromFileEx
IpcfppIsFileEncryptedEx
IpcfppIsFileEncryptedEx
IpcfpOpenFileOnILockBytes
pFileStream
phFile
IpcfpOpenFileOnILockBytes
0 == dwFlags
IpcfpOpenFileOnHandle
IpcfpOpenFileOnHandle
CFileStream::CreateInstance(hFile, IID_ILockBytes, (void**)&pFileStream)
IpcfpLogicalFileRangeToRawFileRange
inRange
outRange
IpcfpLogicalFileRangeToRawFileRange
0 != hFile
IpcfpGetFileProperty
dwPropId
ppvProperty
IpcfpGetFileProperty
IpcpAllocMemory(sizeof(DWORD), &pvBuffer)
Returning with IPCF_FI_ACCESS_BLOCK_SIZE = %d
IpcpAllocMemory(sizeof(IPCF_FILE_RANGE), &pvBuffer)
Returning with IPCF_FI_HEADER_POSITION = (%I64d, %I64d)
Not implemented
unknown type for dwPropId
IpcfpSetFileProperty
pvProperty
IpcfpSetFileProperty
Setting IPCF_FI_ACCESS_BLOCK_SIZE = %d
IpcfpSetFileProperty is not supported for the given dwPropId
IpcfpReadFile
pDataRange
pvBuffer
pcbBufferSize
IpcfpReadFile
IpcfpWriteFile
IpcfpWriteFile
IpcfpSetEndOfFile
IpcfpSetEndOfFile
Local\SM0:%lu:%lu:%hs
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_ipcmem.h
invalid string position
string too long
Validation failed 'handle'
onecoreuap\ds\security\rm\client\src\base\Handle\IpcHandle.h
Validation failed 'pHandle'
fileapi
bad locale name
false
ios_base::badbit set
ios_base::failbit set
ios_base::eofbit set
Microsoft::InformationProtection::LogFunctionHelper::LogFunctionHelper
onecoreuap\ds\security\rm\client\src\base\Logging\IpcLogging.h
-%hs hr=0x%x
Microsoft::InformationProtection::LogFunctionHelper::~LogFunctionHelper
0 == psz || SUCCEEDED(StringCchLengthA(psz, cchMaxLength, 0))
onecoreuap\ds\security\rm\client\src\base\FsCommon\str_t.h
0 != cch
0 != MultiByteToWideChar(CP_ACP, 0, psz, -1, m_wsz, cch)
Microsoft::FoundationServices::Common::Registry::LogRegistryOperation
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
REGISTRY: %hs [%hs\%ws\%ws] %ws=%ws
Missing
REGISTRY: %hs - %hs [%hs\%ws\%ws] %ws.
onecoreuap\ds\security\rm\client\src\base\FsCommon\registry.h
IDispatch error #%d
Unknown error 0x%0lX
onecoreuap\ds\security\rm\client\src\base\util\ipputil.cpp
Microsoft::InformationProtection::IppUtil::HandleException
onecoreuap\ds\security\rm\client\src\base\util\ipputil.cpp
SafeIntException
Unknown COM error
Out of memory
Unknown C++ error
Error of unknown type
%ws: %ws
Microsoft::InformationProtection::IppUtil::HandlePublicAPIException
++++++++ WARNING: %ws: %ws ++++++++
++++++++ ERROR: %ws: %ws ++++++++
++++++++ WARNING: %ws ++++++++
++++++++ ERROR: %ws ++++++++
++++++++ ERROR: SafeIntException: arithmetic overflow. ++++++++
++++++++ ERROR: Com error: %ws ++++++++
++++++++ ERROR: Out of memory ++++++++
++++++++ ERROR: caught C++ exception: %ws ++++++++
++++++++ ERROR: caught unnknown C++ error ++++++++
++++++++ ERROR: Error of unknown type ++++++++
Error HRESULT 0x%x mapped to 0x%x
Microsoft::InformationProtection::IppUtil::MapDRMErrorToIPCError
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &lenSrc)
os::IpcOsStringCbCopy(wszDest, cbDest, wszSrc)
pRegistry
ppwszValue
phKey
ppwszDest
os::IpcOsStringCchLength(wszSrc, IPC_OS_MAX_CCH, &uSrcLength)
os::IpcOsStringCchCopy(localStr, uSrcLength, wszSrc)
os::IpcOsGetFileVersionInfo(wstrAppFilePath.c_str(), dwHandle, SafeInt<DWORD>(vbVersionInfo.size()), &vbVersionInfo[0])
os::IpcOsVerQueryValue(&vbVersionInfo[0], wszSubBlock, (LPVOID*) &pFileInfo, (PUINT)&nBufLen)
0 != dwAppFilePathLength
wstring::npos != nLastSlash
%d.%d.%d.%d
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d.%d", dwMajor, dwMinor, dwBuild, dwRevision)
%d.%d.%d
os::IpcOsStringCchPrintf(wszVersion, MAX_VERSION_LENGTH, L"%d.%d.%d", dwMajor, dwMinor, dwBuild)
amd64
unknown
CurrentMajorVersionNumber
CurrentMinorVersionNumber
CurrentVersion
CurrentBuildNumber
Software\Microsoft\Windows NT\CurrentVersion
************* System/App Info *************
* OS: Windows
* OS Version: %ws
* OS Architecture: %ws
* Client Hierarchy: %d
* AppName: %ws
* AppVersion: %ws
* PID: %u
* DateTime (UTC): %hs
******************************************
os::IpcOsStringCchPrintf( s_wszSystemInformationString, ARRAYSIZE(s_wszSystemInformationString), wszSystemInfoFormat, GetOsVersion().c_str(), GetArchitecture(true).c_str(), CUdmgrldr().GetClientHierarchy(), appName.c_str(), appVersion.c_str(), os::IpcOsGetCurrentProcessId(), GetLogableStdStringA(stNow).c_str())
False
Could not format a systemtime
os::IpcOsGetErrorMessageText( hrError, 0, g_hMSIPPHandle, const_cast<PCWSTR*>(&wszErrorMessage))
clbkMemory(cb, &pv)
NULL != pv
onecoreuap\ds\security\rm\client\src\base\FsCommon\auto_array.h
vector<T> too long
bad cast
0 == pszValueName || SUCCEEDED(os::IpcOsStringCchLength(pszValueName, CCH_MAX_REG_VALUE_NAME, 0))
pcchOut
nTypeRead == nType && *pcchOut > 0 && *pcchOut % sizeof (T) == 0
************* Build Info *****************
* WinMSIPC Version: SameAsOsVersion 
* Official Build
* Flavor: Retail
* Architecture: x64
******************************************
msipc
%02d/%02d/%02d %02d:%02d:%02d.%03d
Tried to create an Exception with a non-failing error code - hr=0x%x. Converting it to E_FAIL.
HresultException
) [hr = 0x
list<T> too long
msipc
REGISTRY: %hs [%hs\%ws\%ws] %ws=dword:%u
onecoreuap\ds\security\rm\client\src\base\fscommon\Registry.h
onecoreuap\ds\security\rm\client\src\base\fscommon\registry.cpp
Software\Classes\Local Settings\
REGISTRY - Attempted searching for RegKey with %ws           opening a reg key using HKEY_CURRENT_USER_LOCAL_SETTING failed.            Falling back to HKEY_CURRENT_USER.
Microsoft::FoundationServices::Common::Registry::Open
onecoreuap\ds\security\rm\client\src\base\fscommon\registry.cpp
REGISTRY - searched with %ws
pnValue
REG_DWORD == nType && sizeof (DWORD) == cbSize
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
HKEY_CURRENT_USER_LOCAL_SETTINGS
HKEY_CLASSES_ROOT
UNKNOWN_REGISTRY_ROOT
Authorization: MSOID 
Authorization: Bearer 
{     "aud":"AADRM.COM",     "iss":"MSIPC",     "nbf":%I64d,     "exp":%I64d,     "api":"%ws",     "tid":"%ws",     "mcn":"%ws" } 
eyJ0eXAiOiJKV1QiLCJhbGciOiJTaGEyNTYifQ==
Error message 401.3
map/set<T> too long
%I64d
 Public API called: 
/-----------------------------------------------------------------------
 Public API 
 exited with return code 
\-----------------------------------------------------------------------
cbSize:       
PCIPC_PROMPT_CTX
dwFlags:      
hwndParent:   
-->pcCredential:
hCancelEvent: 
IPC_CREDENTIAL_TYPE_X509
PCIPC_CREDENTIAL
pcCertContext: 
dwType:        
pcSymmetricKey: 
IPC_CREDENTIAL_TYPE_SYMMETRIC_KEY
pcOAuth2: 
IPC_CREDENTIAL_TYPE_OAUTH2
ERROR -- UNKNOWN TYPE: 
PCIPCF_FILE_RANGE
qwSize   :       
qwOffset :       
0x%08X
0x%016IX
Microsoft::InformationProtection::TraceUtil::Trace
onecoreuap\ds\security\rm\client\src\msipc\common\traceutil.cpp
OWNER
NULL != pPfileStream
0 != ullPayloadOffset
m_pPfileStream->Stat(&stat, STATFLAG_NONAME)
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfilehandle.cpp
NULL != hKey
stat.cbSize.QuadPart >= m_ullPayloadOffset
0 == (dwAccessBlockSize % CBC4K_BLOCK_SIZE)
onecoreuap\ds\security\rm\client\src\fileapi\core\cfilestream.cpp
CreateILockBytesOnHGlobal(NULL, TRUE, &pilbNewStream)
CreateInstance(wstrTempFile.c_str(), STGM_READWRITE, 0, bDeleteOnClose, IID_ILockBytes, (LPVOID *)&pilbNewStream)
[fileapi]: CFileStream::ReadAt - ReadFile(%I64d) Error: 0x%08X
[fileapi]: CFileStream::WriteAt - SetFilePointerEx(%I64d) Error: 0x%08X
[fileapi]: CFileStream::DeleteFile - ::DeleteFile failed with Error: 0x%08X
[fileapi]: CFileStream::ReadAt - SetFilePointerEx(%I64d) Error: 0x%08X
[fileapi]: CFileStream::Truncate - SetFilePointerEx(%I64d) Error: 0x%08X
[fileapi]: CFileStream::Truncate - SetFileValidData(%I64d) Error: 0x%08X
[fileapi]: CFileStream::WriteAt - WriteFile(%I64d) Error: 0x%08X
[fileapi]: CFileStream::Flush - FlushFileBuffers() Error: 0x%08X
[fileapi]: CFileStream::UnlockRegion - UnlockFileEx() Error: 0x%08X
[fileapi]: CFileStream::Stat - GetFileInformationByHandle() Error: 0x%08X
[fileapi]: CFileStream::Extend - Extend(%I64d) Error: 0x%08X
[fileapi]: CFileStream::LockRegion - LockFileEx() Error: 0x%08X
native
Encryption
{706A79C0-1AC4-4E25-B311-93B643C1E499}
WinOpcIrmProtector
pfile
WinMsoIrmProtector
{B6FFEC3A-07F7-42D0-8829-B722F46DB533}
SOFTWARE\Microsoft\WinMSIPC\FileProtection\
{FC93F6CC-D367-4FC9-B3F6-E0933A24A8C8}
PFILEProtector
Microsoft::InformationProtection::CProtectorSelector::Init
Microsoft::InformationProtection::CProtectorSelector::CreateNewProtectorInfo
Microsoft::InformationProtection::CProtectorSelector::ReadProtectorConfiguration
Protector Selector: Can't open FileProtection Registry hr = 0x%x
CLSIDFromString(pConfigData->wszCLSID, &clsid)
onecoreuap\ds\security\rm\client\src\fileapi\core\cprotectorselector.cpp
Microsoft::InformationProtection::CProtectorSelector::ProcessAdminConfig
Admin Config: %ws : %ws
onecoreuap\ds\security\rm\client\src\fileapi\core\cprotectorselector.cpp
Protector Selector: %ws reg key doesn't have required key. So skipping it.
Protector Selector: Forcing Native protection
Protector Selector: Forcing Pfile protection
Microsoft::InformationProtection::CProtectorSelector::AddProtectorConfigurationDefaults
Microsoft::InformationProtection::CProtectorSelector::FindforEncrypt
fileapi
fileapi
pUnknown->QueryInterface(IID_I_IrmProtector, (void **)&pIrmProtector)
onecoreuap\ds\security\rm\client\src\fileapi\core\CProtectorWrapperFactory.h
pIrmProtector->HrSetLangId(LANGIDFROMLCID(IpcFileUtil::GetLocaleId()))
onecoreuap\ds\security\rm\client\src\fileapi\core\cfilestreamprotection.cpp
Microsoft::InformationProtection::CFileStreamProtection::IsEncryptedEx
Microsoft::InformationProtection::CFileStreamProtection::CFileStreamProtection
pProtectorInfo.get()
onecoreuap\ds\security\rm\client\src\fileapi\core\cfilestreamprotection.cpp
E_UNEXPECTED
Microsoft::InformationProtection::CFileStreamProtection::IsEncrypted
This file is not supported by the IRM protectors.
Returning native supported status = %d
Microsoft::InformationProtection::CFileStreamProtection::Encrypt
Returning IsEncrypted status = %d
Microsoft::InformationProtection::CFileStreamProtection::IsNativeSupported
Custom protector for this file is disabled by admin. Switch to Pfileprotector for encryption
--------- Encrypt: Encrypt an plaintext file Done ---------
+++++++++ Encrypting an plaintext file starts ++++++++
This file is not supported by IRM Protectors. Hence native protection is not possible
+++++++++ Updating license starts +++++++++
Decrypt done and now encrypt...
Encrypt: updating license is blocked, instructed by the caller
FileApiCoreUtils::CopyIlockBytes(m_pilbInputByteStream, pilbOutputByteStream)
Microsoft::InformationProtection::CFileStreamProtection::Decrypt
Microsoft::InformationProtection::CFileStreamProtection::OpenProtectedFile
ILockBytesUtilities::ValidateFileSize(pilbDecryptedtByteStream, MAX_FILE_SIZE_FOR_ENCRYPT)
----------- Updating license done ---------
Microsoft::InformationProtection::CFileStreamProtection::WriteProtectedFile
Microsoft::InformationProtection::CFileStreamProtection::SetProtectedFileSize
IPCERROR_FILE_IS_NOT_ENCRYPTED
Microsoft::InformationProtection::CFileStreamProtection::ReadProtectedFile
Microsoft::InformationProtection::CFileStreamProtection::GetSerializedLicense
Microsoft::InformationProtection::CFileStreamProtection::CreateProtectorWrapper
Microsoft::InformationProtection::CFileStreamProtection::GetProtectedFileName
Microsoft::InformationProtection::CFileStreamProtection::GetUnprotectedFileName
Microsoft::InformationProtection::CFileStreamProtection::IsTheSameProtector
Microsoft::InformationProtection::CFileStreamProtection::EvaluateFlags
onecoreuap\ds\security\rm\client\src\fileapi\core\cfileoperation.cpp
CFileStream::CreateInstance(wszFile, dwAccess, dwShareMode, FALSE, IID_ILockBytes, (void**)&pilbStream)
HR_FROM_WIN32(::GetLastError())
::ReplaceFile(wstrTargetLong.c_str(), wstrSourceLong.c_str(), wstrRFBackupFileName.c_str(), dwFlags, NULL, NULL)
::ReplaceFile(wstrTargetLong.c_str(), wstrRFBackupFileName.c_str(), NULL, dwFlags, NULL, NULL)
[fileapi]: The new file name is longer than MAX_PATH. Long path prefix needs to be used in order to work with paths greater than MAX_PATH.
ReplaceFile(m_wstrInputFullFilePath, wstrOutputTempFilePath, &m_wstrNewFilePath)
CopyFile(m_wstrInputFullFilePath.c_str(),m_wstrNewFilePath.c_str(),TRUE)
pilbOutputStream->QueryInterface(IID_IFileLockBytes, (LPVOID *) &pOutputFileStream)
ReplaceFile(m_wstrNewFilePath, wstrOutputTempFilePath, NULL)
!(nAttribs & FILE_ATTRIBUTE_READONLY)
!(nAttribs & FILE_ATTRIBUTE_SYSTEM)
(nAttribs & FILE_ATTRIBUTE_DIRECTORY)
!(nAttribs & FILE_ATTRIBUTE_DIRECTORY)
HR_FROM_WIN32(GetLastError())
HR_FROM_WIN32(ERROR_FILE_TOO_LARGE)
[fileapi]: GetTempDirectoryPath: ::GetTempPath2() failed to get a temporary folder location
CoCreateGuid(&guid)
HRESULT_FROM_WIN32(::GetLastError())
onecoreuap\ds\security\rm\client\src\fileapi\core\utility.cpp
Failed to create temporary file: [%s]
\\?\UNC\
SetFileAttributes(wstrTempFileName.c_str(), FILE_ATTRIBUTE_HIDDEN)
IRMProtectors\microsoft.office.irm.msoprotector.dll
IRMProtectors\microsoft.office.irm.pdfprotector.dll
IRMProtectors\microsoft.office.irm.ofcprotector.dll
spFactory->CreateInstance(NULL, IID_IUnknown, (void**)&pIUnknown)
IpcOsGetFilePathFromInstallLocation(wcszRelativePathToLibrary, &protectorDllInstallLocation)
onecoreuap\ds\security\rm\client\src\fileapi\core\cprotectorfactory.cpp
CLSIDFromString(s_aRelativeProtectorPaths[i].wcszCLSID, &clsidCurrent)
DllGetClassObject
DllGetClassObj
hProtectorDll
DllGetClassObj(clsid, IID_IClassFactory, (LPVOID*)&result)
IpcSerializeLicense(hLicense, IPC_SL_LICENSE_HANDLE, SerializedLicenseFlags, pContext, &hKey, &pvLicense)
onecoreuap\ds\security\rm\client\src\fileapi\core\ckeygenerator.cpp
Microsoft.MSIPC.RequireRmsAwareApplication
IpcGetKeyProperty(hKey, IPC_KI_LICENSE, NULL, (LPVOID*)(&pvLicense))
IpcCreateLicenseMetadataHandle(pvLicense, hKey, NULL , &hLicenseMetadata)
IpcGetLicenseProperty( hLicense, IPC_LI_DEPRECATED_ENCRYPTION_ALGORITHMS, 0, reinterpret_cast<LPVOID*>(&pbUseDepricatedAlgorithms))
IpcpCreateKeyFromKey(hKey, IPCP_CK_CIPHER_MODE_CBC_4K, 0, 0, &hNewKey)
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_NOTIFICATION_TYPE, reinterpret_cast<const DWORD*>(&(pLicenseMetadata->dwNotificationType)))
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_NOTIFICATION_PREFERENCE, reinterpret_cast<const DWORD *>(&(pLicenseMetadata->dwNotificationPreference)))
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_CONTENT_FOLDER_PATH, reinterpret_cast<LPCWSTR>(wstrContentFolderPath.c_str()))
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_CONTENT_NAME, reinterpret_cast<LPCWSTR>(wstrContentName.c_str()))
IpcSerializeLicenseWithMetadata(hLicenseMetadata, NULL , pContext, &pvLicenseWithMetadata)
IpcGetKey(pvLicenseWithMetadata, 0 , pContext, NULL , &hKeyWithMetadata)
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_DATE_MODIFIED, reinterpret_cast<const FILETIME*>(&(pLicenseMetadata->ftDateModified)))
IpcSetLicenseMetadataProperty(hLicenseMetadata, FALSE, IPC_MD_DATE_CREATED, reinterpret_cast<const FILETIME*>(&(pLicenseMetadata->ftDateCreated)))
IpcCreateLicenseFromScratch( &(pIssuerList->aTi[0]), 0, NULL, &hLicense)
IpcGetKey(pvLicense, 0, pContext, NULL, &hKey)
IpcGetTemplateIssuerList( NULL, 0, pContext, NULL, const_cast<PCIPC_TEMPLATE_ISSUER_LIST *>(&pIssuerList))
No TemplateIssuer found!
unknown type for dwType
IpcGetLicenseProperty(hLicense, IPC_LI_APP_SPECIFIC_DATA_NO_ENCRYPTION, 0, (LPVOID *)&pCurrentNameValueList)
IpcGetTemplateList(NULL, 0, 0, pContext, NULL, &pTempInfoList)
IpcCreateLicenseFromTemplateID(reinterpret_cast<LPCWSTR>(pvLicenseInfo), 0, NULL, &hLicense)
IpcSetLicenseProperty(hLicense, FALSE, IPC_LI_APP_SPECIFIC_DATA_NO_ENCRYPTION, pNewNameValueList)
onecoreuap\ds\security\rm\client\src\fileapi\core\cpolicychecker.cpp
onecoreuap\ds\security\rm\client\src\fileapi\core\cpolicychecker.cpp
IpcAccessCheck(hExistingKey, IPC_GENERIC_ALL, &bHasOwnerRight)
CPolicyChecker::IsRePublishAllowed current user does not have OWNER right
IpcSetLicenseProperty(hNewLicense, false, IPC_LI_CONTENT_KEY, hExistingKey)
Microsoft::InformationProtection::CPolicyChecker::IsRePublishAllowed
CPolicyChecker::IsRePublishAllowed: Permitted
fileapi
Failed to check Volume Information.
Failed to copy Security Descriptor, HR=%x
SeTakeOwnershipPrivilege
SeBackupPrivilege
onecoreuap\ds\security\rm\client\src\fileapi\core\robocopyutil.cpp
SeSecurityPrivilege
SeRestorePrivilege
Can't find root path
Software\Microsoft\WINMSIPC
Hierarchy
Trace
IpcOsInitializeEventTracing: EventRegister failed with error code: %lu.
SOFTWARE\Microsoft\WinMSIPC
IpcOsEventLevelEnabled: an invalid event level provided, returning false...
IpcOsEventWrite: Event tracing has not been initialized or initialization failed.
IpcOsEventLevelEnabled: Event tracing has not been initialized or initialization failed.
IpcOsEventWrite: EventWrite failed with error code: %lu.
IpcOsEventWrite: SafeInt Exception
IpcOsEventWrite: an invalid event level provided, no event is generated.
IpcOsEventWrite: Event tracing failed due to invalid event data.
IpcOsEventWrite: an exception caught during writing an event.
onecoreuap\ds\security\rm\client\src\oswindows\core\ipcosmisc.cpp
HRESULT_FROM_WIN32(GetLastError())
WindowsPortUtil::GetFileNameFromModulePath(wcszModule, wcszFileName, &wszPath)
wcszFileName
pFilePath
\\?\UNC\
SOFTWARE\Microsoft\MSIPC\FileProtection
EnablePfileV3Format
EnableDataIntegrity
[FileApi] CPfileEncryptor::Encrypt can't open MSIPC Registry hr = 0x%x
...ignoring the error
[FileApi] CPfileEncryptor::Encrypt can't read HonorPubLicCipherMode Registry hr = 0x%x
...ignoring the error
n+++++++++ Calling the HrIsProtected method of the protector +++++++++
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\cirmprotectorwrapper.cpp
--------- Call to the HrIsProtected method of the protector returned hr = 0x%x and dwStatus=%d --------
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\cirmprotectorwrapper.cpp
Microsoft::InformationProtection::CIrmProtectorWrapper::CIrmProtectorWrapper
Microsoft::InformationProtection::CIrmProtectorWrapper::Encrypt
Microsoft::InformationProtection::CIrmProtectorWrapper::Decrypt
Microsoft::InformationProtection::CIrmProtectorWrapper::IsEncrypted
CreateILockBytesOnHGlobal(NULL, TRUE, &pilbEncryptedByteStream)
+++++++++ Calling the HrUnProtectRMS method of the protector +++++++++++
--------- Call to the HrUnProtectRMS method of the protector returned hr = 0x%x and dwStatus=%d ---------
MapStatusToHresult(dwStatus)
Microsoft::InformationProtection::CIrmProtectorWrapper::GetSerializedLicense
m_pIrmProtector->HrIsProtected(pilbIn, &dwStatus)
pIrmDocument->HrInit( NULL , false , true , 0 )
pIrmDocument->QueryInterface(IID_I_IrmPolicyInfoRMS, (void**)&pIrmPolicyInfoRMS)
++++++++++ Calling the HrProtectRMS method of the protector ++++++++++
---------- Call to the HrProtectRMS method of the protector returned hr = 0x%x and dwStatus=%d ---------
++++++++++ Calling the HrUnProtectRMS method of the protector ++++++++++
---------- Call to the HrUnProtectRMS method of the protector returned hr = 0x%x and dwStatus=%d ----------
pIrmDocument->HrGetSignedIL(&bstrSignedIL)
os::IpcOsStringCchLength(bstrSignedIL, IPC_OS_MAX_CCH, &cchSignedIL)
Microsoft::InformationProtection::CIrmProtectorWrapper::IRMProtect
pIrmDocument->HrInit( hKey , fEncrypt , false , dwDecryptFlags)
++++++++ ERROR Call to an IrmProtector has failed with bad install status. This might be caused due to missing template files. Error status from protector is dwStatus = MSOIPI_STATUS_BAD_INSTALL ++++++++
++++++++ ERROR Call to an IrmProtector has failed with MSOIPI_STATUS_PLATFORM_IRM_FAILED +++++++++
IrmProtector returned MSOIPI_STATUS_PROTECT_SUCCESS
IrmProtector returned MSOIPI_STATUS_UNPROTECT_SUCCESS
Microsoft::InformationProtection::CIrmProtectorWrapper::MapStatusToHresult
++++++++ ERROR Call to an IrmProtector has failed with MSOIPI_STATUS_NOT_OWNER +++++++++
++++++++ ERROR Call to an IrmProtector has failed with MSOIPI_STATUS_FILE_CORRUPT +++++++++
++++++++ ERROR Call to an IrmProtector has failed with MSOIPI_STATUS_NOT_MY_FILE +++++++++
IrmProtector returned MSOIPI_STATUS_ALREADY_PROTECTED
IrmProtector returned MSOIPI_STATUS_ALREADY_UNPROTECTED
IrmProtector returned an unexpected status = %d
fileapi
Microsoft::InformationProtection::VirmDocument::HrGetSignedIL
Microsoft::InformationProtection::VirmDocument::HrGetServerId
Microsoft::InformationProtection::VirmDocument::HrGetEULs
Microsoft::InformationProtection::VirmDocument::HrSetSignedIL
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\irmdocument.cpp
Microsoft::InformationProtection::VirmDocument::HrGetICrypt
[IRMProtectorWrapper]:
%s Failed in function %s, Line %d, File %s. hr = 0x%08x
Microsoft::InformationProtection::VirmDocument::HrGetRightsMask
Microsoft::InformationProtection::VirmDocument::HrGetRequestingUser
Microsoft::InformationProtection::VirmDocument::HrGetURL
Microsoft::InformationProtection::VirmDocument::HrGetPolicyTitle
Microsoft::InformationProtection::VirmDocument::HrSetServerEUL
Microsoft::InformationProtection::VirmDocument::HrGetRightsTemplate
Microsoft::InformationProtection::VirmDocument::HrGetListGuid
Microsoft::InformationProtection::VirmDocument::HrSetListGuid
Microsoft::InformationProtection::VirmDocument::HrGetExtractRight
Microsoft::InformationProtection::VirmDocument::HrGetPolicyDescription
Microsoft::InformationProtection::VirmDocument::HrGetOfflineDays
Microsoft::InformationProtection::VirmDocument::HrInit
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\irmdocumentipcimpl.cpp
VirmIpcCrypt::HrGetBlockSize
VirmIpcCrypt::HrDecode
VirmIpcCrypt::HrInit
VirmIpcCrypt::HrGetKey
VirmIpcCrypt::HrEncryptCore
VirmIpcCrypt::HrGetBlockSize(): CBC mode detected. Changing the block size from %d to %d
VirmIpcCrypt::HrEncrypt
VirmIpcCrypt::HrDecrypt
VirmIpcCrypt::HrEncode
__NoSuchMailId__@dontexit.foo
VirmDocumentIpcImpl::HrGetEULs
VirmDocumentIpcImpl::HrSetSignedIL
VirmDocumentIpcImpl::HrInit
VirmIpcCrypt::HrDecryptCore
VirmDocumentIpcImpl::HrGetICrypt
VirmDocumentIpcImpl::HrGetServerId
Windows:
IpcSetLicenseProperty(hLicense, FALSE, IPC_LI_DEPRECATED_ENCRYPTION_ALGORITHMS, &bCompatible)
IpcSetLicenseProperty(hLicense, FALSE, IPC_LI_USER_RIGHTS_LIST, &userRightsList)
IpcSerializeLicense(hLicense, IPC_SL_LICENSE_HANDLE, IPC_SL_FLAG_KEY_NO_PERSIST_DISK, pContex, &hKey, &pvLicense)
Creating EUL for NonPersistLicense fails. 
VirmDocumentIpcImpl::HrGetServerEUL
VirmDocumentIpcImpl::HrInitSignedIL
IpcGetTemplateIssuerList( NULL, 0, &ipcPCtx, NULL, const_cast<PCIPC_TEMPLATE_ISSUER_LIST *>(&pIssuerList))
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\irmdocumentipcimpl.cpp
<XrML 
The PL is set by the protector. Returning error E_FILE_PL_QUERYMODE as expected.
VirmDocumentIpcImpl::HrInitEULCertForNonPersistLicense
EXTRACT
The extract right is not granted to the calling entity
VirmDocumentIpcImpl::HrInitEncryptors
onecoreuap\ds\security\rm\client\src\fileapi\irmprotectorwrapper\irmdocumentimplbase.cpp
VirmDocumentImplBase::HrGetRightsMask
VirmDocumentImplBase::HrGetRequestingUser
VirmDocumentImplBase::HrGetURL
VirmDocumentImplBase::HrGetPolicyTitle
VirmDocumentImplBase::HrGetSignedIL
VirmDocumentImplBase::HrGetRightsTemplate
VirmDocumentImplBase::HrGetListGuid
VirmDocumentImplBase::HrSetListGuid
VirmDocumentImplBase::HrGetPolicyDescription
VirmDocumentImplBase::HrGetOfflineDays
VirmDocumentImplBase::HrInitNonRMS
Microsoft::InformationProtection::CPfileProtectorWrapper::CPfileProtectorWrapper
Microsoft::InformationProtection::CPfileProtectorWrapper::Encrypt
Microsoft::InformationProtection::CPfileProtectorWrapper::GetPfileReader
Reading Pfile format...
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\PfileProtectorWrapper.h
Microsoft::InformationProtection::CPfileProtectorWrapper::IsContentEncrypted
Checking for preamble and version to check if the file content is protected
Microsoft::InformationProtection::CPfileProtectorWrapper::IsEncryptedEx
Microsoft::InformationProtection::CPfileProtectorWrapper::IsEncrypted
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfileprotectorwrapper.cpp
Reading Pfile format done
Microsoft::InformationProtection::CPfileProtectorWrapper::IsExtensionSame
.pfile
Microsoft::InformationProtection::CPfileProtectorWrapper::ReadOriginalFileExtension
Microsoft::InformationProtection::CPfileProtectorWrapper::SplitFilePath
This file extension is recognized as a standard protected file. Skipping the PFILE header validation
Microsoft::InformationProtection::CPfileProtectorWrapper::CheckPreambleAndVersion
The file is not a pfile, assuming that it is not Encrypted
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfileprotectorwrapper.cpp
.tiff
.jpeg
.jfif
Microsoft::InformationProtection::CPfileProtectorWrapper::IsPExtSupported
Microsoft::InformationProtection::CPfileProtectorWrapper::GetDecryptedPExt
Microsoft::InformationProtection::CPfileProtectorWrapper::GetUnprotectedFileName
Microsoft::InformationProtection::CPfileProtectorWrapper::Decrypt
Microsoft::InformationProtection::CPfileProtectorWrapper::CreateFileHandle
Microsoft::InformationProtection::CPfileProtectorWrapper::GetPfileStreamImpl
Microsoft::InformationProtection::CPfileProtectorWrapper::ReadFile
Extension is not supported: %ws
Appending the original extension [%ls] to the filename
Microsoft::InformationProtection::CPfileProtectorWrapper::GetProtectedFileName
Microsoft::InformationProtection::CPfileProtectorWrapper::GetSerializedLicense
E_INVALIDARG
pDataRange->qwSize <= *cbBufferSize
Microsoft::InformationProtection::CPfileProtectorWrapper::WriteFile
pProtectedStream->Flush()
Microsoft::InformationProtection::CPfileProtectorWrapper::SetEndOfFile
fileapi
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\cbc4kcryptoprovider.cpp
isFinal || 0 == cbIn % CBC4K_BLOCK_SIZE
nullptr != pcbOut
IpcEncryptWithHash( m_hKey, dwStartingBlockNumberUnsafe, isFinal, const_cast<LPBYTE>(pbIn), cbIn, OUT pbOut, cbOut, reinterpret_cast<BYTE*>(&(*m_pbHash.get())[m_cbSeekHash]), m_cbHash, pcbOut, &m_cbResultHash)
IpcEncrypt( m_hKey, dwStartingBlockNumberUnsafe, isFinal, const_cast<LPBYTE>(pbIn), cbIn, OUT pbOut, cbOut, pcbOut)
0 == cbIn % AES128_BLOCK_SIZE
IpcDecrypt( m_hKey, dwStartingBlockNumberUnsafe, isFinal, const_cast<LPBYTE>(pbIn), cbIn, OUT pbOut, cbOut, pcbOut)
[fileapi]: CPfileFormatReader::CheckPreamble preamble does not match expected value
m_pilbInputByteStream->ReadAt(TO_ULARGE_INTEGER(m_ullCurrentPosition), &ullValue, sizeof(ULONGLONG), NULL)
m_pilbInputByteStream->ReadAt(TO_ULARGE_INTEGER(m_ullCurrentPosition), &dwValue, sizeof(DWORD), NULL)
[fileapi]: CPfileFormatReader::CheckVersion Major:%d Minor: %d
m_pilbInputByteStream->ReadAt(uliStartPosition, &vecData[0], dwPreambleLength, NULL)
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfileformatreader.cpp
m_pilbInputByteStream->ReadAt(uliPositionToRead, &vecPublishLicenseData[0], m_dwPublishLicenseByteCount, NULL)
m_pilbInputByteStream->ReadAt(TO_ULARGE_INTEGER(m_dwMetaDataOffset), &vecMetaData[0], m_dwMetaDataByteCount,NULL)
m_pilbInputByteStream->Stat(&stat, STATFLAG_NONAME)
[fileapi]: CPfileFormatReader::CheckVersion one of the version number exceeds the maximum
[fileapi]: CPfileFormatReader::CheckVersion version number of content is not supported
0 != m_dwFileContentOffset
NULL != m_pilbInputByteStream
m_pilbInputByteStream->ReadAt(uliPositionToRead, &vecOriginalFileExtension[0], m_dwOriginalFileExtensionByteCount, NULL)
\/:*?"<>|
[fileapi]: CPfileFormatReader::ReadOriginalFileExtension - File extension has invalid chars
[fileapi]: +CPfileFormatReader::ParseAndGetKey
m_pilbInputByteStream->ReadAt(TO_ULARGE_INTEGER(m_dwHmacOffset), (&(*vbHash)[0]), m_dwHmacByteCount, NULL)
[fileapi]: CPfileFormatReader::ReadOriginalFileExtension - Original File extension is empty
[fileapi]: -CPfileFormatReader::GetKey
[fileapi]: +CPfileFormatReader::ParseKey
[fileapi]: -CPfileFormatReader::ParseKey
IpcGetSerializedLicenseProperty(&bufLicense, IPCP_LI_USE_CBC512NOPAD, hKey, 0, reinterpret_cast<LPVOID*>(&pbCBC512NoPad))
[fileapi]: -CPfileFormatReader::ParseAndGetKey
[fileapi]: +CPfileFormatReader::GetKey
IpcGetKey(&bufLicense, dwGetKeyFlags, pContext, NULL, &hKey)
IpcGetSerializedLicenseProperty( &bufLicense, IPC_LI_DEPRECATED_ENCRYPTION_ALGORITHMS, hKey, 0, reinterpret_cast<LPVOID*>(&pbUseDepricatedAlgorithms))
[fileapi]: CPfileFormatReader::CheckForRequiredRights RMS Aware application. Skipping all checks.
IpcGetSerializedLicenseProperty(pvLicense, IPC_LI_APP_SPECIFIC_DATA_NO_ENCRYPTION, NULL, 0, (LPVOID *)&pNameValueList)
[fileapi]: CPfileFormatReader::CheckForRequiredRights Plolicy requires RMS AWARE Application.
IpcAccessCheck(hKey, IPC_GENERIC_EXTRACT, &fHasExtractRight)
m_ullPaddingSize < m_ullAlignment
[fileapi]: +CPfileFormatReader::CheckForRequiredRights
pvLicense
0 != hKey
[fileapi]: CPfileFormatReader::CheckForRequiredRights current user does not have EXTRACT right
[fileapi]: -CPfileFormatReader::CheckForRequiredRights
.pfile
[fileapi]: +CPfileEncryptor::Encrypt
m_pilbInputByteStream->ReadAt(TO_ULARGE_INTEGER(ullCurrentOffset), &vecBuffer[0], dwBufferSize, &dwBytesRead)
pBlockStream->Flush()
[fileapi]: -CPfileEncryptor::Encrypt
IpcGetKeyProperty(m_hKey, IPC_KI_LICENSE, NULL, (LPVOID*)(&pvLicense))
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfileencryptor.cpp
m_pilbInputByteStream->Stat(&ssUnencryptedStreamProperties, STATFLAG_NONAME)
[fileapi]: CPfileProtectorWrapper:: Encrypt input stream size: %I64d
[fileapi]: +CPfileDecryptor::Decrypt
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(ullCurrentOffset), &vecBuffer[0], SafeInt<DWORD>(ullBytesRead), &dwBytesWritten)
m_pilbOutputByteStream->Flush()
[fileapi]: -CPfileDecryptor::Decrypt
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfiledecryptor.cpp
ullBytesRead == dwBytesWritten
[fileapi]: CPfileDecryptor::Decrypt The contents of the pfile is empty
m_pilbOutputByteStream->SetSize(TO_ULARGE_INTEGER(0L))
(0 == u64Alignment) || (0 == u64CacheSize % u64Alignment)
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\blockbasedprotectedstreamimpl.cpp
NULL != pCryptoProvider && (0 == u64CacheSize % pCryptoProvider->GetBlockSize())
GetCanWrite()
0 != m_u32BlockMultiplier
u64BlockPosition <= u64Size
m_pSimple.get()
pbBuffer
GetCanRead()
m_bIsPositionValid
m_pilbBackingStream->WriteAt(TO_ULARGE_INTEGER(m_u64CurrentOffset), pbBuffer, dwBytesToWrite, &dwBytesWrittern)
dwBytesToWrite == dwBytesWrittern
m_pilbBackingStream->Flush()
m_pilbBackingStream->Stat(&stat, STATFLAG_NONAME)
m_pilbBackingStream->ReadAt(TO_ULARGE_INTEGER(u64CurrentOffset), pbBuffer, dwBytesToRead, &dwBytesRead)
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\lockbytesstreamimpl.cpp
m_pilbBackingStream->SetSize(TO_ULARGE_INTEGER(u64Value))
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(dwCurrentPosition), &dwValueToWrite, sizeof(dwValueToWrite), NULL)
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(dwCurrentPosition), &ullValueToWrite, sizeof(ullValueToWrite), NULL)
m_pilbOutputByteStream->WriteAt(uliStartPosition, PFILE_PREAMBLE, dwBytesToWrite, NULL)
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(dwCurrentPosition), PFILE_CLEAR_TEXT_REDIRECTION_STR, PFILE_CLEAR_TEXT_REDIRECTION_STR_LEN, NULL)
[fileapi]: CPfileFormatWriter::WriteHeaderToStream total expected pfile size: %I64d
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\pfileformatwriter.cpp
NULL != m_pilbOutputByteStream
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(ullPositionToWrite), pbHash, cbHash, NULL)
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(m_dwOriginalFileExtensionOffset), strOriginalFileExtension.c_str(), SafeInt<DWORD>(strOriginalFileExtension.length()), NULL)
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(m_dwPublishLicenseOffset), pBufPublishLicense->pvBuffer, pBufPublishLicense->cbBuffer, NULL)
m_pilbOutputByteStream->WriteAt(TO_ULARGE_INTEGER(m_dwMetaDataOffset), &vecMetaData[0], SafeInt<DWORD>(vecMetaData.size()), NULL)
.pfile
This file uses Microsoft Information Protection solutions.
Open it using an application that supports protected files.
You can download Microsoft's protected file viewer from: https://go.microsoft.com/fwlink/?LinkId=280381 
Learn more about Information Protection solutions at https://www.microsoft.com/rms 
Do not change this file in any way -- doing so will result in data loss.
pCryptoProvider.get()
onecoreuap\ds\security\rm\client\src\fileapi\pfileprotectorwrapper\simpleprotectedstreamimpl.cpp
pBackingStream.get()
onecoreuap\ds\security\rm\client\src\oswindows\util\winutil.cpp
WindowsPortUtil::GetModuleDirectory(wszModuleName, OUT wstrPath)
utf-8
utf-16
false
=L9o<
raB3G
MsipcApi
wszMsipcApi
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
MsipcActivity
PartA_PrivTags
wilActivity
hresult
threadId
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MsipcActivity
PartA_PrivTags
wilActivity
threadId
MsipcApiOnline
bOnline
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
MsipcApiAuthCallbackProvided
bAuthCallbackProvided
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
MsipcApiInputFile
wszInputFile
MsipcActivity
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityStoppedAutomatically
f W{Q
Microsoft.Windows.ErrorHandling.Fallback
Microsoft.InformaionProtection.RMS.MSIPC
RSDS$
winipcfile.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCC
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
LCn!}t
. .".$.&.(.*.,L..0.2.4.6.8.:.<.>.@FBDDFFFH.J.L.N.P.R.T.V.X.Z.\.^.`.b.d.f.h.j.l.n.p.r.t.v.x.z.|.~.
&D$^ X
&D$2 X
n&2$.
L T"d$T*:(>,D(:.*0:25
..4t6
"@ f$
 t$t t
CryptBinaryToStringW
CryptStringToBinaryW
winipcfile.dll
??3@YAXPEAX@Z
__CxxFrameHandler4
??_V@YAXPEAX@Z
_vsnwprintf
memcpy_s
_wcsicmp
_vsnprintf
_purecall
??1exception@@UEAA@XZ
??0exception@@QEAA@XZ
??0exception@@QEAA@AEBV0@@Z
_vsnprintf_s
strchr
malloc
_callnewh
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
?what@exception@@UEBAPEBDXZ
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
_XcptFilter
_amsg_exit
_initterm
__C_specific_handler
msvcrt.dll
_lock
_unlock
__dllonexit
_onexit
?terminate@@YAXXZ
??1type_info@@UEAA@XZ
EventActivityIdControl
GetModuleFileNameA
InitOnceBeginInitialize
CreateSemaphoreExW
HeapFree
SetLastError
ReleaseSemaphore
GetModuleHandleExW
OutputDebugStringA
CoUninitialize
EventUnregister
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
EventSetInformation
FormatMessageW
GetLastError
ReleaseSRWLockExclusive
OutputDebugStringW
InitOnceComplete
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
HeapAlloc
EventRegister
GetProcAddress
CreateMutexExW
GetCurrentProcessId
GetProcessHeap
EventWriteTransfer
GetModuleHandleW
CoInitializeEx
DebugBreak
IsDebuggerPresent
Sleep
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
LocalAlloc
GetVersionExW
MultiByteToWideChar
GetSystemTime
GetFileAttributesW
CryptReleaseContext
WideCharToMultiByte
CoCreateInstance
LeaveCriticalSection
ReadFile
CoTaskMemAlloc
WriteFile
CoTaskMemFree
SetEndOfFile
UnlockFileEx
CreateILockBytesOnHGlobal
GetFileInformationByHandle
DeleteFileW
SetFilePointerEx
LockFileEx
FlushFileBuffers
CLSIDFromString
GetFullPathNameW
GetFileAttributesExW
ReplaceFileW
CopyFileW
GetSystemWindowsDirectoryW
MoveFileW
CoCreateGuid
StringFromGUID2
CreateFileW
SetFileAttributesW
GetTempPath2W
GetVolumeInformationW
OpenProcessToken
OpenProcess
GetNamedSecurityInfoW
GetSecurityDescriptorControl
SetNamedSecurityInfoW
LocalFree
AdjustTokenPrivileges
LookupPrivilegeValueW
EventEnabled
EventWrite
EnterCriticalSection
InitializeCriticalSectionAndSpinCount
DeleteCriticalSection
GetFileVersionInfoSizeExW
AddDllDirectory
GetFileVersionInfoExW
RemoveDllDirectory
GetModuleFileNameW
VerQueryValueW
GetUserPreferredUILanguages
GetNativeSystemInfo
GetSystemInfo
LocaleNameToLCID
GetSystemPreferredUILanguages
RegQueryValueExW
RegOpenKeyExW
RegEnumKeyW
RegCloseKey
FreeLibrary
LoadLibraryExW
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-security-cryptoapi-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-com-l2-1-1.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-file-l2-1-2.dll
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-file-l1-2-4.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
QISearch
api-ms-win-core-shlwapi-obsolete-l1-1-0.dll
??1bad_cast@@UEAA@XZ
??0bad_cast@@QEAA@PEBD@Z
??0bad_cast@@QEAA@AEBV0@@Z
towlower
strcspn
localeconv
swprintf_s
_errno
sprintf_s
wcsncmp
calloc
fclose
fseek
_wcsnicmp
wcsstr
fputc
fflush
fgetc
fwrite
fgetpos
setvbuf
ungetc
fsetpos
_fseeki64
wcsnlen
strnlen
setlocale
__uncaught_exception
__pctype_func
isupper
___lc_handle_func
___lc_codepage_func
___mb_cur_max_func
_ismbblead
islower
_wcsdup
??8type_info@@QEBAHAEBV0@@Z
__crtLCMapStringW
__crtLCMapStringA
_wsetlocale
_wfsopen
abort
memset
VirtualProtect
LoadLibraryExA
RaiseException
VirtualQuery
GetStringTypeW
InitializeCriticalSectionEx
EncodePointer
DecodePointer
WakeAllConditionVariable
SleepConditionVariableSRW
api-ms-win-core-util-l1-1-0.dll
_wsplitpath_s
HeapSize
HeapReAlloc
HeapDestroy
InitializeCriticalSection
__RTDynamicCast
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVIpcHandle@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AV?$SharedPointerHandle@VCPfileHandle@InformationProtection@Microsoft@@@@
.?AVexception@@
.?AVInvalidHandleTypeException@@
.?AVHresultException@@
.?AVHandleException@@
.?AVException@@
.?AVFsException@Common@FoundationServices@Microsoft@@
.?AVNullHandleException@@
.?AVSafeIntException@@
.?AVfailure@ios_base@std@@
.?AVruntime_error@std@@
.?AVbad_cast@@
.?AVsystem_error@std@@
.?AV_com_error@@
.?AVCAtlException@ATL@@
.?AVIPfileProtectorWrapper@InformationProtection@Microsoft@@
.?AVCloseIpcKeyHandleFunctor@InformationProtection@Microsoft@@
.?AVIProtectorWrapper@InformationProtection@Microsoft@@
.?AVCloseIpcLicenseHandleFunctor@InformationProtection@Microsoft@@
.?AVFreeIpcBufferFunctor@InformationProtection@Microsoft@@
.?AVIIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVCIpcOsPath@OperatingSystem@InformationProtection@Microsoft@@
.?AVIStreamImpl@InformationProtection@Microsoft@@
.?AVSimpleProtectedStreamImpl@InformationProtection@Microsoft@@
.?AVMsipcActivity@IpcTelemetryTraceLoggingImpl@InformationProtection@Microsoft@@
.?AUIFailureCallback@details@wil@@
.?AVErrorHandlingHelpers@wil@@
.?AVerror_category@std@@
.?AV_System_error_category@std@@
.?AVMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@
.?AV_Generic_error_category@std@@
.?AV_Iostream_error_category@std@@
.?AV?$_Ref_count@VCProtectorSelectorFactory@InformationProtection@Microsoft@@@std@@
.?AVIProtectorSelectorFactory@InformationProtection@Microsoft@@
.?AV_Ref_count_base@std@@
.?AV?$_Ref_count@VCFileOperation@InformationProtection@Microsoft@@@std@@
.?AVTraceLoggingProvider@wil@@
.?AVCProtectorSelectorFactory@InformationProtection@Microsoft@@
.?AV?$ActivityBase@VMSIPCTraceLoggingProvider@InformationProtection@Microsoft@@$00$0CAAAAAAAAAAA@$04$0A@U_TlgReflectorTag_Param0IsProviderType@@@wil@@
.?AV?$_Ref_count@VCFileStreamProtection@InformationProtection@Microsoft@@@std@@
.?AVios_base@std@@
.?AV?$ctype@D@std@@
.?AV_Facet_base@std@@
.?AV?$_Iosb@H@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AUctype_base@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AVfacet@locale@std@@
.?AV?$ctype@G@std@@
.?AV?$basic_ios@GU?$char_traits@G@std@@@std@@
.?AV?$basic_ostream@GU?$char_traits@G@std@@@std@@
.?AV?$basic_stringstream@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$basic_iostream@GU?$char_traits@G@std@@@std@@
.?AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@
.?AV?$basic_streambuf@GU?$char_traits@G@std@@@std@@
.?AV?$basic_stringbuf@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@
.?AV?$basic_istream@GU?$char_traits@G@std@@@std@@
.?AV?$numpunct@G@std@@
.?AV?$_Ref_count@G@std@@
.?AV?$_Ref_count@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@
.?AV?$_Ref_count@VCPfileHandle@InformationProtection@Microsoft@@@std@@
.?AVCPfileHandle@InformationProtection@Microsoft@@
.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@
.?AVcodecvt_base@std@@
.?AV?$codecvt@DDH@std@@
.?AUIUnknown@@
.?AUILockBytes@@
.?AVCFileStream@InformationProtection@Microsoft@@
.?AUIFileLockBytes@@
.?AV?$_Ref_count@VCSafeIrmProtector@InformationProtection@Microsoft@@@std@@
.?AVIProtectorSelector@InformationProtection@Microsoft@@
.?AV?$_Ref_count@U_PROTECTOR_INFO@InformationProtection@Microsoft@@@std@@
.?AVCProtectorSelector@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCIrmProtectorWrapper@InformationProtection@Microsoft@@@std@@
.?AVIProtectorWrapperFactory@InformationProtection@Microsoft@@
.?AV?$_Ref_count_del@XVCloseIpcLicenseHandleFunctor@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCPfileProtectorWrapper@InformationProtection@Microsoft@@@std@@
.?AVCProtectorWrapperFactory@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCKeyGenerator@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCProtectorWrapperFactory@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count_del@XVCloseIpcKeyHandleFunctor@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCProtectorFactory@InformationProtection@Microsoft@@@std@@
.?AVIProtectorFactory@InformationProtection@Microsoft@@
.?AVCProtectorFactory@InformationProtection@Microsoft@@
.?AV?$_Ref_count@E@std@@
.?AV?$_Ref_count_del@XVFreeIpcBufferFunctor@InformationProtection@Microsoft@@@std@@
.?AVIIrmDocumentFactory@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCIrmDocumentFactory@InformationProtection@Microsoft@@@std@@
.?AVCIrmDocumentFactory@InformationProtection@Microsoft@@
.?AVCIrmProtectorWrapper@InformationProtection@Microsoft@@
.?AVCSafeIrmProtector@InformationProtection@Microsoft@@
.?AUI_IrmPolicyInfoRMS@@
.?AVVirmDocument@InformationProtection@Microsoft@@
.?AUI_IrmPolicyInfo@@
.?AVIIrmDocument@InformationProtection@Microsoft@@
.?AVVirmDocumentIpcImpl@@
.?AVVirmIpcCrypt@@
.?AUI_IrmCrypt@@
.?AVVirmDocumentImplBase@@
.?AV?$_Ref_count@VBlockBasedProtectedStreamImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VCbc4kCryptoProvider@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VLockBytesStreamImpl@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VILockBytesLocker@InformationProtection@Microsoft@@@std@@
.?AVCPfileProtectorWrapper@InformationProtection@Microsoft@@
.?AVICryptoProvider@InformationProtection@Microsoft@@
.?AV?$_Ref_count@V?$vector@EV?$allocator@E@std@@@std@@@std@@
.?AVCbc4kCryptoProvider@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCPfileFormatReader@InformationProtection@Microsoft@@@std@@
.?AVCPfileFormatReader@InformationProtection@Microsoft@@
.?AVCPfileEncryptor@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCPfileEncryptor@InformationProtection@Microsoft@@@std@@
.?AVCPfileDecryptor@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCPfileDecryptor@InformationProtection@Microsoft@@@std@@
.?AVBlockBasedProtectedStreamImpl@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCachedBlock@InformationProtection@Microsoft@@@std@@
.?AV?$_Ref_count@VSimpleProtectedStreamImpl@InformationProtection@Microsoft@@@std@@
.?AVLockBytesStreamImpl@InformationProtection@Microsoft@@
.?AVCPfileFormatWriter@InformationProtection@Microsoft@@
.?AV?$_Ref_count@VCPfileFormatWriter@InformationProtection@Microsoft@@@std@@
*************** System/App Info **************
* Could not get System/App Info
******************************************
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Active Directory Rights Management Services File API
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
winipcfile
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
winipcfile.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
