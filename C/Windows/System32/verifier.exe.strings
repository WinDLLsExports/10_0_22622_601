!This program cannot be run in DOS mode.
HJdKH
HRichC
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$0H3
q0R^G'
D$ I;
p0R^G'
D$HE3
D$HE3
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
oD$ f
oL$0f
oT$@f
o\$PH
WAVAWH
 A_A^_
VWATAVAWH
fD9$Vu
 A_A^A\_^
t$ UWAVH
!\$(H
WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
s WATAUAVAWH
L$`E3
A_A^A]A\_
UWATAVAWH
A_A^A\_]
L$(H;K r
L$ SVWAVH
(A^_^[
WAVAWH
 A_A^_
@USVWATAVAWH
D$DE3
|$2fD
A_A^A\_^[]
x AVH
Ip@;n
t$ WAVAWH
syD9y
fD9<Qu
 A_A^_
h VWATAVAWH
|$X u,
|$X u
 A_A^A\_^
VWAVH
!\$HH
 A^_^
VWAVH
H!|$@H
 A^_^
x AVH
\$ UVWATAUAVAWH
|$@E3
A_A^A]A\_^]
UVWATAUAVAWH
D!t$PH
L!t$0H
D9t$lu
D9t$`u
D9t$Pv
|$(E3
A_A^A]A\_^]
WATAUAVAWH
0A_A^A]A\_
x AVH
UVWATAUAVAWH
L9l$8
fE9,Tu
fE9,Gu
xqL9l$8tj
8L9l$Ht=H
A_A^A]A\_^]
UVWAVAWH
A_A^_^]
t$ UWAVH
l$ VWAVH
xCD;t$HH
Gt$HE
 A^_^
t$ WH
t$ WATAUAVAWH
 A_A^A]A\_
fD90t
WATAUAVAWH
 A_A^A]A\_
VWATAVAWH
 A_A^A\_^
WATAUAVAWH
u&D9w
xLf9w
 A_A^A]A\_
UVWATAUAVAWH
0A_A^A]A\_^]
WATAUAVAWH
0A_A^A]A\_
VWAVH
 A^_^
UVWAVAWH
fD9|$@
L$HE3
fD9|$@t
PA_A^_^]
t(H9Y
uRH9X
UVWATAUAVAWH
}8\$`t&H
 A_A^A]A\_^]
t$ WH
p WAVAWH
fD90t
\$(fE
0A_A^_
UWAVH
t$0t'H
uGf9t$ t
f9t$ t
Gp@t@I
f9t$ t
L$8H3
D$XfA
f99t6
f9{(tB
WATAUAVAWH
H9|$(tl
0A_A^A]A\_
f9o(tB
CX9CT
UVWAVAWH
f9,Au
L$8H3
@A_A^_^]
f94Hu
UVWAVAWH
L$PH3
`A_A^_^]
t$ UWAVH
L$ SVWAVH
(A^_^[
f9,Zu
UWATAVAWH
A_A^A\_]
|$ %u
fD9T$ u=L
\$ UVWATAUAVAWH
D$PE3
L$0!t$83
T$8H9L:
A_A^A]A\_^]
x AVH
l$ VWATAVAWH
fD9d]
A_A^A\_^
L$8H3
L$(fE
L$ fD
WATAUAVAWH
fD9lE
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
|$ UH
rH9='
UVWATAUAVAWH
fD94pu
fD9,pu
A_A^A]A\_^]
D$8E3
D$0E3
L$0E3
L$PH3
VWAVH
 A^_^
L$HH3
t$ WH
L$`H3
D$@E3
L$HH3
WATAUAVAWH
fD9:t
fD9<Bu
fF9<Bu
 A_A^A]A\_
\$ E3
G$H+A$H
L$ SWH
x UATAUAVAWH
D$(E3
t;fA;
L$0E3
L$0E3
A_A^A]A\]
|$ UATAUAVAWH
)D$pH
fD9,Fu
D$8E3
l$0E3
fD9,Xu
`sifD
A_A^A]A\]
D$8E3
\$0E3
D$8E3
\$0E3
D$ E3
\$ E3
D$0E3
UVWATAUAVAWH
 A_A^A]A\_^]
fD9$Fu
E8&u9L
L$@H3
x ATAVAWH
D$"f;
0A_A^A\
D$h9D$ u(L
x UATAUAVAWH
|$8u,L
A_A^A]A\]
wCH9{Pu
H9{`u
L9A u
L9A0u
wJfA;
wDL9APu
L9A`u
UVWAVAWH
L$PE2
 A_A^_^]
UVWATAUAVAWH
fC9T}
fC9DE
fA9TE
PA_A^A]A\_^]
VWAVH
 A^_^
VWAVH
 A^_^
D$(9D$0t*
9\$ht
USVWATAUAVAWH
D8mXt L
HA_A^A]A\_^[]
L$(fE
\$ fD
H UAVAWH
G89F8
G@9F@
GD9FD
Gh9Fh
Gp9Fp
Gt9Ft
0A_A^]
UWATAVAWH
A_A^A\_]
D$0E3
UATAUAVAWH
D9&t%D
D9 t%D
D9 t%D
fD9f(tT
fD9f(t
D9 t%D
D9 t%D
D9 t%D
fD9fHt0
fD9fXt0
D9 t%D
D9 t%D
F|D9 t/D
FxD9 tkD
D9 uLE9&uGL
D9 t%D
D9&t%
A_A^A]A\]
WAVAWH
|$hE3
 A_A^_
UWAVH
fD90t
x>D9v,t
@A^_]
t$ UWAVH
fD91t8L
D9v(u"3
|$(f91t
K(f91t
t$ WH
C(f9s
s WAVAWH
x0;;s,A
0A_A^_
ext-ms-win-shell-shell32-l1-2-0
ext-ms-win-shell-shell32-l1-2-1
ext-ms-win-shell-shell32-l1-2-2
ext-ms-win-shell-shell32-l1-2-0.dll
VDEST
bootmode
Oneboot
ResetOnUnusualShutdown
Resetonbootfail
Persistent
ADAPTER
APMSUPPORT
BATTERY
BIOMETRIC
BLUETOOTH
COMPUTER
DECODER
DISKDRIVE
DISPLAY
DOT4PRINT
EHSTORAGESILO
EXTENSION
FIRMWARE
HIDCLASS
HOLOGRAPHIC
IMAGE
INFINIBAND
INFRARED
KEYBOARD
MEDIA
MEDIUM_CHANGER
MEMORY
MODEM
MONITOR
MOUSE
MULTIFUNCTION
MULTIPORTSERIAL
NETCLIENT
NETDRIVER
NETSERVICE
NETTRANS
PCMCIA
PNPPRINTERS
PORTS
PRINTER
PROCESSOR
SCSIADAPTER
SECURITYACCELERATOR
SENSOR
SIDESHOW
SOUND
SYSTEM
UNKNOWN
VOLUME
VOLUMESNAPSHOT
WCEUSBS
audio
win32k
EhStorClass.sys
partmgr.sys
ClassPnP.sys
DXGKrnl.sys
DXGMMS1.sys
DXGMS2.sys
BasicDisplay.sys
BasicRender.sys
ks.sys
ksthunk.sys
portcls.sys
ndis.sys
WdiWifi.sys
NetAdapterCx.sys
mbbcx.sys
wificx.sys
storport.sys
win32k.sys
win32kbase.sys
win32kfull.sys
Cannot get size of the device ID list; CR status: 
[CM_Get_Device_ID_List_SizeW  BufferSize]
[DeviceClassGuid]
Cannot get a device ID list; CR status : 
[DeviceInstanceId]
The number of discovered drivers exeeds the TiP maximum.
Cannot get the driver name: CRStatus 
[ServiceName]
tip_on
dif.limit
dif.sparseness
pooltags
%C%C%C%C%1S
notracing
domain
logging
livedump
onecheck
rules.all
rules.default
netadaptercx.sys
wdiwifi.sys
RandomSelection
driver
duration
timeout_x
perf_control
driver.any
driver.select.any
Random drivers selected: 
random
rc.rand
driver.exclude
driver.add
No applicable devices were found on this system.  Exiting.
TiP not activated. Verifier settings unchanged.
Other DV settings already in effect.  TiP will not be activated.
XdvPersistDisabledRule
XDV TiP tag on the target machine is the same or previous. Verifier settings unchanged.
flags
persistthroughupgrade
Error removing TiP settings, status: 
\REGISTRY\MACHINE\BSPDRIVERS\CurrentControlSet\Services
\REGISTRY\MACHINE\OSDATA\System\Services
\REGISTRY\MACHINE\Devices\System\Services
ImagePath
ObjectName
%ls\%ls
Cannot get an image path for this service:
Cannot extract a driver name from this image path:
Could not add to verified driver list; too many drivers on stack.
Buffer for Driver Version too small.
\Driver\
XdvTipTag: 
Driver Name: 
Driver Version: 
DeviceInstanceId: 
XdvTipTag
faults
Probability
Pool Tags
Applications
Delay Minutes
faultssystematic
incrementcounter
enableruntime
disableruntime
recordruntime
resetruntime
enableboottime
disableboottime
recordboottime
resetboottime
querystatistics
InjectionCount
TestPassCount
NonInjectedCount
LastStackIndex
getstackid
StackHash
excludestack
nonMSFT
standard
log.code_integrity
advancedpooltracking
Microsoft
verifiergui.exe
runas
interval
Use Low Frequency Trim
Disable Pool Traces
Disable IRQL Traces
Log Only Code Integrity Statistics
Core Driver Verifier Rule
rules.additional
querysettings
%02d/%02d/%04d %02d:%02d:%02d.%03d
No drivers are currently verified.
query
format
0x20002
0x20003
0x20004
0x20005
0x20006
0x20007
0x20008
0x20009
0x2000A
0x2000B
0x2000C
0x2000D
0x2000E
0x2000F
0x20010
0x20011
0x20015
0x20016
0x20019
0x2001A
0x2001B
0x2001C
0x2001E
0x2001F
0x20022
0x20023
0x20024
0x20025
0x40003
0x40007
0x4000A
0x4100B
0x43006
0x91001
0x91002
0x9100E
0x92003
0x9200D
0x9200F
0x92010
0x92011
0x92012
0x93004
0x93005
0x93006
0x93101
0x94007
0x94008
0x94009
0x9400B
0x9400C
0x81001
0x81002
0x81003
0x81004
0x81005
0x81006
0x81007
0x81008
0x81009
0x8100A
0x8100B
0x8100C
0x82001
0x82002
0x82003
0x82004
0x82005
0x71001
0x71003
0x71004
0x71005
0x71006
0x71007
0x71008
0x71009
0x7100A
0x72001
IrqlApcLte
IrqlDispatch
IrqlExAllocatePool
IrqlExApcLte1
IrqlExApcLte2
IrqlExApcLte3
IrqlExPassive
IrqlIoApcLte
IrqlIoPassive1
IrqlIoPassive2
IrqlIoPassive3
IrqlIoPassive4
IrqlIoPassive5
IrqlKeApcLte1
IrqlKeApcLte2
IrqlKeDispatchLte
IrqlKeAcquireReleaseSpinLock
IrqlKeSetEvent
IrqlMmApcLte
IrqlMmDispatch
IrqlObPassive
IrqlPsPassive
IrqlRtlPassive
IrqlZwPassive
IrqlIoDispatch
IrqlIoRtlZwPassive
IrqlNtifsApcPassive
IrqlKeMore
CriticalRegions
QueuedSpinLockRelease
SpinlockRelease
RequestedPowerIrp
PnpRemove
NdisOidComplete
NdisOidDoubleComplete
NdisOidDoubleRequest
NdisTimedOidComplete
NdisTimedDataSend
NdisTimedDataHang
NdisFilterTimedPauseComplete
NdisFilterTimedDataSend
NdisFilterTimedDataReceive
WlanAssociation
WlanConnectionRoaming
WlanDisassociation
WlanAssert
WlanTimedAssociation
WlanTimedConnectionRoaming
WlanTimedConnectRequest
WlanTimedLinkQuality
WlanTimedScan
KsDeviceMutex
KsStreamPointerClone
KsStreamPointerLock
KsStreamPointerUnlock
KsCallbackReturn
KsIrqlDeviceCallbacks
KsIrqlFilterCallbacks
KsIrqlPinCallbacks
KsIrqlDDIs
KsFilterMutex
KsProcessingMutex
KsInvalidStreamPointer
KsTimedPinSetDeviceState
KsTimedDeviceCallbacks
KsTimedFilterCallbacks
KsTimedPinCallbacks
KsTimedProcessingMutex
PcIrqlDDIs
PcIrqlIport
PcUnmapAllocatedPages
PcAllocatedPages
PcRegisterAdapterPower
PcAddAdapterDevice
PcPropertyRequest
PcAllocateAndMapPages
PcPoRequestPowerIrp
PcTimedWaveRtStreamSetState
reset
rules
default
disable
Cannot convert GUID to string.
Cannot convert GUID to string. GUID Length:
Cannot find \ in the file path.
Cannot find file extension in the file path.
Cannot extract a driver name from the file path.
dump_
system32
%%Systemroot%%\%s
\SystemRoot\
%%Systemroot%%\system32\drivers\%s
 Failed to get information from Metadata for file : %ls 
\VarFileInfo\Translation
\StringFileInfo\%04x%04x\FileVersion
\StringFileInfo\%04x%04x\CompanyName
TargetNtPath
DriverVerifier
\Registry\Machine\System\CurrentControlSet\Control\Session Manager\Memory Management
volatile
adddriver
removedriver
tip_off
tip_appv
ruleclasses
processlist
activationfilterlist
selectrandomfilter
appverifierreset
appverifierflags
selectrandomprocess
pageheapflags
delayfreesize
launchcount
SeSecurityPrivilege
O:BAG:DUD:PAI(A;CI;CCDCSWRC;;;WD)(A;CI;KA;;;BA)
Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\VerifierCounter
GlobalFlag
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\
\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\VerifierCounter
PageHeapFlags
DelayFreeSizeMB
VerifierActivationFilter
VerifierFlags
kernel32.dll
HeapSetInformation
SetThreadUILanguage
sr-Latn-CS
sr-SP-Latn
sr-Cyrl-CS
sr-SP-Cyrl
sr-Latn-BA
sr-BA-Latn
sr-Cyrl-BA
sr-BA-Cyrl
iu-Latn-CA
iu-CA-Latn
bs-Cyrl-BA
bs-BA-Cyrl
bs-Latn-BA
bs-BA-Latn
zh-Hant
zh-CHT
zh-Hans
zh-CHS
%s\%s\%s.mui
%s\%s.mui
.\%s\%s.mui
.\%s.mui
%s\%s
Software\Microsoft\Active Setup\Installed Components\{89820200-ECBD-11CF-8B85-00AA005B4383}
Locale
FailureMode
System\CurrentControlSet\Services\VerifierExt\Extensions
DriverVerifierExts
\Autofail
%ls\Autofail
ExemptedStacks
0x%I64x
\\.\\VerifierExt\AutoFail
0x82001 0x82002 0x82003 0x82004 0x82005
VerifierExt
VerifierSettingState
VerifierDifPoolTags
VerifyDriverLevel
VerifierOptions
VerifyDrivers
VerifyDriversSuppress
VerifierFaultProbability
VerifierFaultBootMinutes
VerifierFaultTags
VerifierFaultApplications
XdvExtensionOption
XdvVerifierOptions
XdvTipPerformanceControl
XdvRuleSuppress
VrfPersistThroughUpgrade
VerifierRandomTargets
VerifierTriageContext
VerifierTipLimitNumerator
VerifierTipLimitDenominator
VerifierTipSparseness
 0x%X
Vrf_TiP_DriverData
XdvTipTag
DriverName
ServiceName
ObjectName
ModuleName
DriverVersion
DeviceInstanceId
Vrf_TiP_On_Failure
XdvTipTag
Vrf_TiP_On_Success
XdvTipTag
Vrf_TiP_Off
XdvTipTag
Vrf_TiP_DriverData
XdvTipTag
DriverName
ServiceName
ObjectName
ModuleName
DriverVersion
DeviceInstanceId
Vrf_User_Reset_Config
VrfSetup
Flags
VerifyDrivers
SuppressedRules
VrfPrintHelpMessage
WindowsDriverVerifierUi
verifier.pdb
.text
.text$mn
.text$mn$00
.text$x
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
ShellExecuteExW
_wcsicmp
wcsnlen
swscanf_s
_vsnwprintf
wcsstr
_ultow_s
_ltow_s
wcscpy_s
wcsrchr
_wcsnicmp
wcschr
_wfullpath
wcscat_s
swprintf_s
_wsetlocale
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
__C_specific_handler
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
CM_Get_Device_ID_List_SizeW
CM_Get_Device_ID_ListW
CM_MapCrToWin32Err
CM_Locate_DevNodeW
CM_Get_DevNode_PropertyW
EventWriteTransfer
GetSystemDirectoryW
GetFileAttributesW
GetLastError
CreateFileW
GetStdHandle
SetStdHandle
CloseHandle
EventSetInformation
EventRegister
EventUnregister
GetFileType
GetConsoleMode
WriteConsoleW
GetConsoleOutputCP
WideCharToMultiByte
WriteFile
RtlFreeUnicodeString
ExpandEnvironmentStringsW
GetFileVersionInfoSizeW
GetFileVersionInfoW
VerQueryValueW
GlobalMemoryStatusEx
MultiByteToWideChar
LookupPrivilegeValueA
OpenProcessToken
GetCurrentProcess
AdjustTokenPrivileges
ConvertStringSecurityDescriptorToSecurityDescriptorW
LocalFree
RegOpenKeyExW
RegSetKeySecurity
RegCloseKey
RegCreateKeyExW
FormatMessageW
GetModuleFileNameW
LoadLibraryExW
GetProcAddress
FreeLibrary
SetLastError
Sleep
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
GetModuleHandleW
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
api-ms-win-devices-config-l1-1-1.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-console-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
ntdll.dll
api-ms-win-core-version-l1-1-1.dll
api-ms-win-core-version-l1-1-0.dll
api-ms-win-security-lsalookup-ansi-l2-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
RtlInitializeBitMap
RtlSetBit
RtlSetAllBits
RtlRandomEx
RtlCreateUnicodeString
RtlDeleteRegistryValue
RtlQueryRegistryValuesEx
RtlAppendUnicodeToString
RtlNtStatusToDosError
RtlEqualUnicodeString
RtlCompareUnicodeString
RtlSystemTimeToLocalTime
RtlTimeToTimeFields
NtDelayExecution
NtClose
RtlStringFromGUID
NtQuerySystemInformation
DbgPrint
RtlGetPersistedStateLocation
RtlAllocateHeap
RtlWriteRegistryValue
RtlCheckRegistryKey
RtlCreateRegistryKey
RtlFreeHeap
RegQueryValueExW
RegDeleteValueW
RegSetValueExW
wcsncmp
wcsncat_s
malloc
wcstok_s
memcpy_s
SearchPathW
GetSystemDefaultUILanguage
GetLocaleInfoEx
GetUserDefaultUILanguage
GetLocaleInfoW
GetVersionExW
UnmapViewOfFile
LCIDToLocaleName
FindResourceExW
LoadResource
CreateFileMappingW
MapViewOfFile
DeviceIoControl
OpenSCManagerW
OpenServiceW
QueryServiceStatus
CloseServiceHandle
StartServiceW
ControlService
ResolveDelayLoadedAPI
DelayLoadFailureHook
api-ms-win-core-localization-obsolete-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-localization-l1-2-2.dll
api-ms-win-core-io-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
RtlCopyUnicodeString
RtlUnicodeStringToInteger
RtlTestBit
RtlInitUnicodeString
NtSetSystemInformation
NtQueryInformationToken
NtOpenProcessToken
NtAdjustPrivilegesToken
ApiSetQueryApiSetPresence
api-ms-win-core-apiquery-l1-1-0.dll
memcmp
memcpy
memmove
memset
wcscmp
\Registry\Machine\System\CurrentControlSet\Control\Session Manager\Memory Management
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Verifier Configuration Editor
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
verifier.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
verifier.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Verifier Flags: 0x%1!08x!
Verifier Volatile Flags: 0x%1!08x!
  Standard Flags:
  Additional Flags:
  Internal Flags:
  Boot Mode:
  Rules:
  Extensions:
  Verified Drivers:
  Excluded Drivers:
  Advanced Options:
  Randomized Low Resources Simulation Parameters:
  Verifier Statistics Summary
  Driver Verification List
    MODULE: %1 (load: %2!d! / unload: %3!d!)
      Pool Allocation Statistics: ( NonPaged / Paged )
      Code Integrity Statistics:
Time Stamp: %1
  Volatile Flags:
  Added Drivers:
  Removed Drivers:
    [X] Indicates flag is enabled.
    All Drivers
    All rules are using default settings
    All other rules are using default settings
    Disabled: %1 (%2)
    All rules are explicitly disabled.
    None
    The requested operation is successful. Changes will not be effective until the system is rebooted.
    %1
    %1: %2
    %1: %2!d!
    %1: %2!I64d!
    [%1] 0x%2!08x! Special pool.
    [%1] 0x%2!08x! Force IRQL checking.
    [%1] 0x%2!08x! Randomized low resources simulation.
    [%1] 0x%2!08x! Pool tracking.
    [%1] 0x%2!08x! I/O verification.
    [%1] 0x%2!08x! Deadlock detection.
    [%1] 0x%2!08x! Enhanced I/O checking.
    [%1] 0x%2!08x! DMA checking.
    [%1] 0x%2!08x! Security checks.
    [%1] 0x%2!08x! Force pending I/O requests.
    [%1] 0x%2!08x! IRP logging.
    [%1] 0x%2!08x! Miscellaneous checks.
    [%1] 0x%2!08x! Additional debug information.
    [%1] 0x%2!08x! Invariant MDL checking for stack.
    [%1] 0x%2!08x! Invariant MDL checking for driver.
    [%1] 0x%2!08x! Power framework delay fuzzing.
    [%1] 0x%2!08x! Port/miniport interface checking.
    [%1] 0x%2!08x! DDI compliance checking.
    [%1] 0x%2!08x! Systematic low resources simulation.
    [%1] 0x%2!08x! DDI compliance checking (additional).
    [%1] 0x%2!08x! Extended Verifier flags (internal).
    [%1] 0x%2!08x! NDIS/WIFI verification.
    [%1] 0x%2!08x! Driver logging.
    [%1] 0x%2!08x! Kernel synchronization delay fuzzing.
    [%1] 0x%2!08x! VM switch verification.
    [%1] 0x%2!08x! Code integrity checks.
    Raise IRQLs:                            %1!10d!
    Acquire Spin Locks:                     %1!10d!
    Synchronize Executions:                 %1!10d!
    Trims:                                  %1!10d!
    Pool Allocations Attempted:             %1!10d!
    Pool Allocations Succeeded:             %1!10d!
    Pool Allocations Succeeded SpecialPool: %1!10d!
    Pool Allocations With No Tag:           %1!10d!
    Pool Allocations Not Tracked:           %1!10d!
    Pool Allocations Failed:                %1!10d!
    Pool Allocations Failed Deliberately:   %1!10d!
        Current Pool Allocations:  ( %1!8d! / %2!8d! )
        Current Pool Bytes:        ( %1!8d! / %2!8d! )
        Peak Pool Allocations:     ( %1!8d! / %2!8d! )
        Peak Pool Bytes:           ( %1!8d! / %2!8d! )
        Contiguous Memory Bytes:       %1!8d!
        Peak Contiguous Memory Bytes:  %1!8d!
        Execute Pool Type Count:       %1!10d!
        Execute Page Protection Count: %1!10d!
        Execute Page Mapping Count:    %1!10d!
        Execute-Write Section Count:   %1!10d!
        Section Alignment Failures:    %1!10d!
    Options: %1
Rule 0x%1!08x! disabled.
Rule 0x%1!08x! set to use default setting.
The system reboot is required for the changes to take effect.
No settings were changed.
The new settings are in effect until the system
is restarted or the settings are changed again.
        IAT in Executable Section Count: %1!10d!
    Verifier settings will persist and be active through system upgrade.
"StatusCode": 0x%1!08x!
"CurrentlyEnabled": %1
"RebootRequired": %1
"IsVolatile": %1
"DeploymentTag": 0x%1!08x!
"RuleClasses": 0x%1!08x! 0x%2!08x!
"Drivers": %1
"FailedDrivers": %1
"RemovedDrivers": %1
"FailedRemovedDrivers": %1
"XdvVerifierOptions": 0x%1!08x!
"VerifierOptions": 0x%1!08x!
"Drivers":
"FailedDrivers":
"RemovedDrivers":
"FailedRemovedDrivers":
An unsupported command line parameter was specified.
Run "verifier /?" for command line assistance.
The specified command line parameter '/%1' is unexpected.
Run "verifier /?" for command line assistance.
The specified command line parameter '/%1' doesn't follow required format.
Run "verifier /?" for command line assistance.
The specified command line parameter '/%1' does not support option '%2'.
Run "verifier /?" for command line assistance.
The specified command line parameter '/%1' option values are not valid.
Run "verifier /?" for command line assistance.
The specified command line parameter '/%1' option '%2' doesn't follow required format.
Run "verifier /?" for command line assistance.
The specified flags 0x%1!08x! are not supported.
Run "verifier /?" for command line assistance.
The specified flags 0x%1!08x! are not supported in volatile mode.
Run "verifier /?" for command line assistance. See the "/dif /now" syntax for
enabling most flags without rebooting.
Failed to start the verification for '%1' driver.
Failed to stop the verification for '%1' driver.
Rule code 0x%1!08x! not mapped to existing rule.
Rule 0x%1!08x! already disabled.
Rule 0x%1!08x! already using default setting.
The verifier registry settings contain invalid values.
Run "verifier /reset" to clean the registry settings.
Failed to query verifier registry settings.
The current operation requires admin privilege.
Failed to query volatile verifier settings.
Failed to set volatile verifier settings.
The current system environment supports only command line interface.
Run "verifier /?" for command line assistance.
The maximum number of 10 selected Core Driver Verifier rules has been reached.
Failed to obtain the list of currently loaded kernel modules.
Failed to obtain the global memory status.
There are no remaining drivers to verify. Reduce the number of excluded drivers.
Run "verifier /?" for command line assistance.
Failed to start the verification for '%1' driver with NSTATUS code 0x%2!08x!.
Failed to stop the verification for '%1' driver with NSTATUS code 0x%2!08x!.
Copyright (c) Microsoft Corporation. All rights reserved.
SYNTAX:
    verifier {/? | /help}
    verifier /standard /all
    verifier /standard /driver <name> [<name> ...]
    verifier {/ruleclasses | /rc} <options> [<ruleclass_1> <ruleclass_2> ...] /all
    verifier /flags <options> [<options> ...] /all
    verifier /flags <options> [<options> ...] /driver <name> [<name> ...]
    verifier /rules {query | reset | default <id> | disable <id>}
    verifier /query
    verifier /querysettings
    verifier /bootmode {persistent | resetonbootfail | oneboot | resetonunusualshutdown}
    verifier /persistthroughupgrade
    verifier /reset
    verifier /faults [probability [pool_tags [applications [delay_minutes]]]]
    verifier /faultssystematic [<options> ...]
    verifier /log <file_name> [/interval <seconds>]
    verifier /volatile /flags <options> [<options> ...]
    verifier /volatile /adddriver <name> [<name> ...]
    verifier /volatile /removedriver <name> [<name> ...]
    verifier /volatile /faults [probability [pool_tags [applications
                [delay_minutes]]]]
    verifier /domain {wdm | ndis | ks | audio} [rules.all | rules.default ]
                /driver ... [/logging | /livedump]
    verifier /logging
    verifier /livedump
PARAMETERS:
    /? or /help
        Displays this help message.
    /standard
        Specifies standard Driver Verifier flags.
    /all
        Specifies that all installed drivers will be verified after the next
        boot.
    /driver <name> [<name> ...]
        Specifies one or more drivers (image names) that will be verified.
        Wildcard values (e.g. n*.sys) are not supported.
    /driver.exclude <name> [<name> ...]
        Specifies one or more drivers (image names) that will be excluded
        from verification. This parameter is applicable only if all drivers
        are selected for verification. Wildcard values (e.g. n*.sys) are not
        supported.
    /flags <options> [<options> ...]
        Specifies one or more options that should be enabled for verification.
        Flags are applied to all drivers being checked by Driver Verifier. The
        provided options values must be either in decimal, hexadecimal ("0x"
        prefix), octal ("0o" prefix) or binary ("0b" prefix) format.
        Standard Flags:
          Standard Driver Verifier options can be specified using '/standard'.
          WDF verification is included in /standard but is not shown here.
          0x00000001 (bit  0) - Special pool
          0x00000002 (bit  1) - Force IRQL checking
          0x00000008 (bit  3) - Pool tracking
          0x00000010 (bit  4) - I/O verification
          0x00000020 (bit  5) - Deadlock detection
          0x00000080 (bit  7) - DMA checking
          0x00000100 (bit  8) - Security checks
          0x00000800 (bit 11) - Miscellaneous checks
          0x00020000 (bit 17) - DDI compliance checking
        Additional Flags:
          These flags are intended for specific scenario testing. Flags marked
          with (*) require I/O Verification (bit 4) that will be automatically
          enabled. Flags marked with (**) support disabling of individual
          rules.
          0x00000004 (bit  2) - Randomized low resources simulation
          0x00000200 (bit  9) - Force pending I/O requests (*)
          0x00000400 (bit 10) - IRP logging (*)
          0x00002000 (bit 13) - Invariant MDL checking for stack (*)
          0x00004000 (bit 14) - Invariant MDL checking for driver (*)
          0x00008000 (bit 15) - Power framework delay fuzzing
          0x00010000 (bit 16) - Port/miniport interface checking
          0x00040000 (bit 18) - Systematic low resources simulation
          0x00080000 (bit 19) - DDI compliance checking (additional)
          0x00200000 (bit 21) - NDIS/WIFI verification (**)
          0x00800000 (bit 23) - Kernel synchronization delay fuzzing
          0x01000000 (bit 24) - VM switch verification
          0x02000000 (bit 25) - Code integrity checks
    /ruleclasses or /rc or /dif [<ruleclass_1> <ruleclass_2> ... <ruleclass_k>]
        This parameter is larger set of '/flags' above. While '/flags' is
        limited to 32 bit bitmap expression, this can include more than 32
        verification classes. Each positive decimal integer represents a
        verification class. Multiple classes can be expressed by separating
        each class id with space character.
        The '/dif' command automatically includes rule class 36, DIF mode, but
        /ruleclasses and /rc do not. Flags marked with (!) require DIF mode to
        be enabled. Flags marked with (^) can be enabled without reboot using
        the '/dif [<ruleclass_1> <ruleclass_2> <ruleclass_k>] /now' command.
        The following rule class IDs are available (no leading 0's required):
        Standard Rule Classes:
                   1 - Special pool (^)
                   2 - Force IRQL checking (^)
                   4 - Pool tracking (^)
                   5 - I/O verification (^)
                   6 - Deadlock detection
                   8 - DMA checking
                   9 - Security checks (^)
                  12 - Miscellaneous checks (^)
                  18 - DDI compliance checking (^)
                  34 - WDF Verification
        Additional Rule Classes:
          These rule classes are intended for specific scenario testing. Rule
          classes are marked with (*) require I/O Verification (5) that will
          be automatically enabled. Flags marked with (**) support disabling
          of individual rules. Flags marked with (***) are in logging mode by
          default and require /onecheck in order to crash upon violation.
                   3 - Randomized low resources simulation
                  10 - Force pending I/O requests (*)
                  11 - IRP logging (*)
                  14 - Invariant MDL checking for stack (*)
                  15 - Invariant MDL checking for driver (*)
                  16 - Power framework delay fuzzing
                  17 - Port/miniport interface checking
                  19 - Systematic low resources simulation (!, ^)
                  20 - DDI compliance checking (additional) (^)
                  22 - NDIS/WIFI verification (**)
                  24 - Kernel synchronization delay fuzzing
                  25 - VM switch verification
                  26 - Code integrity checks
                  33 - Driver isolation checks (***, !)
                  36 - Driver Interception Framework (DIF) mode
    /dif [<ruleclass_1> <ruleclass_2> <ruleclass_k>] /now
        Enables the rule classes immediately without needing reboot. This option
        is only valid if no rule classes are already running. See the rule class
        descriptions for the rule classes capable of immediate activation.
    /stop
        Disables rule classes enabled via '/dif /now' to halt verification.
    /log.code_integrity
        This option suppresses Code Integrity violation breaks and collects
        only statistics for verified drivers. Statistics could be extracted
        via /log option or kernel debugger. This parameter is applicable only
        if Code Integrity checks are enabled.
    /rules {query | reset | default <id> | disable <id>}
        Specifies rules level control (advanced).
          query           Shows current status of controllable rules.
          reset           Resets all rules to their default state.
          default <id>    Sets rule ID to its default state.
          disable <id>    Disables specified rule ID.
    /query
        Display runtime Driver Verifier statistics and settings.
    /querysettings
        Displays a summary of the options and drivers that are currently
        enabled, or options and drivers that will be verified after the
        next boot. The display does not include drivers and options added
        using /volatile.
    /bootmode
        Specifies the Driver Verifier boot mode. This option requires system
        reboot to take effect.
          persistent        Ensures that Driver Verifier settings are
                            persistent across reboots. This is the default
                            value.
          resetonbootfail   Disables Driver Verifier for subsequent reboots
                            if the system failed to start.
          resetonunusualshutdown
                            Driver Verifier persists until unusual shutdown
                            happens. Its abbrevation, 'rous', can be used.
          oneboot           Enables Driver Verifier only for the next boot.
    /bc <number_of_reboots>
        Sets the number of reboots for which verification should be active.
        This option automatically sets the ResetOnUnusualShutdown boot mode.
    /persistthroughupgrade
        Makes the Driver Verifier settings persist through upgrade. Driver
        Verifier will be active during system upgrade.
    /reset
        Clears Driver Verifier flags and driver settings. This option requires
        system reboot to take effect.
    /faults [probability [pool_tags [applications [delay_minutes]]]]
        Enable the Randomized low resources simulation feature and optionally
        control parameters for the Randomized low resources simulation.
          Probability     Specifies the probability that Driver Verifier will
                          fail a given allocation. The value represents the
                          number of chances in 10,000 that Driver Verifier will
                          fail the allocation. The default value 600, means
                          600/10000 or 6%.
          Pool Tags:      Specifies a space separated list of the pool tags to
                          be injected with faults. By default, any pool
                          allocation can be injected with faults.
          Applications    Specifies a space separated list of image file names
                          (an executable) that will be injected with faults. By
                          default, any pool allocation can be injected with
                          faults.
          DelayMinutes    Specifies the number of minutes after booting during
                          which Driver Verifier does not intentionally fail any
                          allocations. This delay allows the drivers to load
                          and the system to stabilize before the test begins.
                          The default value is 8 minutes.
    /faultssystematic [<options> ...]
        Controls the Systematic low resources simulation parameters.
          enableboottime          Enables fault injections across reboots.
          disableboottime         Disables fault injections across reboots.
                                  This is the default value.
          recordboottime          Enables fault injections in 'what if' mode
                                  across reboots.
          resetboottime           Disables fault injections across reboots and
                                  clears the stack exclusion list.
          enableruntime           Dynamically enables fault injections.
          disableruntime          Dynamically disables fault injections.
          recordruntime           Dynamically enables fault injections in
                                  'what if' mode.
          resetruntime            Dynamically disables fault injections and
                                  clears the previously faulted stack list.
          querystatistics         Shows the current fault injection statistics.
          incrementcounter        Increments the test pass counter used to
                                  identify when a fault was injected.
          getstackid <counter>    Retrieves the indicated injected stack id.
          excludestack <stack_id> Excludes the stack from fault injection.
    /log <file_name> [/interval <seconds>]
        Creates a log file with the specified name and periodically writes the
        runtime statistics to this file. The interval between log file updates
        is controlled by the '/interval' parameter. The default value is 30
        seconds. Use CTRL+C to close the log and return.
    /volatile
        Changes Driver Verifier settings without rebooting the computer.
        Volatile settings take effect immediately and are in effect until the
        next system reboot.
        This option is deprecated. For most cases, '/dif <ruleclasses> /now'
        should be used instead.
    /volatile /adddriver <name> [<name> ...]
        Starts the verification for the specified driver or drivers.
    /volatile /removedriver <name> [<name> ...]
        Stops the verification for the specified driver or drivers.
    /volatile /flags <flags>
        Specifies the Driver Verifier options that are changed immediately
        without rebooting. Only the following flags can be used with volatile:
          0x00000004 (bit  2) - Randomized low resources simulation
          0x00000200 (bit  9) - Force pending I/O requests (*)
          0x00000400 (bit 10) - IRP logging (*)
    /domain {wdm | ndis | ks | audio} [rules.all | rules.default] /driver ...
        [/logging | /livedump]
        Controls the verifier extension settings. The following verifier
        extension types are supported:
          wdm               Enabled verifier extension for WDM drivers.
          ndis              Enabled verifier extension for networking drivers.
          ks                Enabled verifier extension for kernel mode
                            streaming drivers.
          audio             Enabled verifier extension for audio drivers.
        The following extension options are supported:
          rules.default     Enables default validation rules for the selected
                            verifier extension.
          rules.all         Enables all validation rules for the selected
                            verifier extension.
        /logging
          Enables logging for violated rules detected by the selected verifier
          extensions.
        /livedump
          Enables live memory dump collection for violated rules detected by
          the selected verifier extensions.
en-US
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,tYpbtre0eUfDyqO86zgy8c3JmZSSrpp9qAWBQroPazQ=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
e?}eL
4-046a
20220506222233.757Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190515Z
230228190515Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service0
U-/*b
F,n7D
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
N"4A>
jg{i8c
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:2264-E33E-780C1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220506195700Z
20220507195700Z0t0:
1,0*0
1(0&0
4MFFKz
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
lz`c.
