!This program cannot be run in DOS mode.
Rich[^
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
q*Z~:
q*Z~:
SVWAVH
8A^_^[
w|H9{
;@8:t
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
SVWAVH
\$px#H+
8A^_^[
VWAVH
\$px I+
@A^_^
D$HE3
D$HE3
WAVAWH
\$ A;
0A_A^_
LcA<E3
HcQ<H
\$ UH
 H3E H3E
p AWH
x ATAVAWH
 A_A^A\
@UATAUAVAWH
H;E t
fE9,Du
fA9L]
e@A_A^A]A\]
@SVWH
L$8H3
x AVH
x AVH
pcPZt
WAVAWH
0A_A^_
UWAVH
D$(H+
t$ E3
L9t$P
t$`fD9t$`t8H
fD90u
D$`H+
UVWAVAWH
tKD9;u I
CD9;u I
PA_A^_^]
8w1t*
UVWAVAWH
0A_A^_^]
UVWAVAWH
0A_A^_^]
VWAVH
 A^_^
t$ WH
VWAVH
 A^_^
x AVH
f9t$(u
UVWAVAWH
A_A^_^]
qi[P%6
@UAVAWH
e A_A^]
WAVAWH
0A_A^_
UVWAVAWH
L$0H3
@A_A^_^]
WATAUAVAWH
xCD;l
0A_A^A]A\_
qh]X=
WAVAWH
L9?t=E
fD9x,u
L9?tyM
fD9x,uOH
 A_A^_
p0\:#7
pJWrx7L
H;C@t
@USVWAVH
A^_^[]
x ATAVAWH
p3\TK
A_A^A\
x ATAVAWH
H;{ r
 A_A^A\
qs^VG
t$ WH
UVWATAUAVAWH
D9o0t
p!PZa
l$ E3
@A_A^A]A\_^]
x ATAVAWH
H+A H
tiH+y E3
 A_A^A\
x ATAVAWH
H+A H
tiH+y E3
 A_A^A\
WAVAWH
fD;1t
fD;9u
fD;8ugH
fD;9u
fD;0tgfD
 A_A^_
q3\TK
UVWAVAWH
D$0E3
t,fD9x
L$0H3
@A_A^_^]
q;^:R
t$ UWATAVAWH
fD9<Bu
fD9"u
fD9 u(H
fD9?t
A_A^A\_]
UATAUAVAWH
D9e`u
tJL9e
A_A^A]A\]
L$0H3
WATAUAVAWH
0A_A^A]A\_
@UATAUAVAWH
A8<4te
A8<6u
e A_A^A]A\]
@USVWATAUAVAWH
t$ E3
A_A^A]A\_^[]
?=u#D
?{uCD
d$ E3
9] t%H
WxE.8
H;G@t
qC]P.&
?=u;H
VWAVH
 A^_^
x AVH
H9\$0tv
{ UAVAWH
E H9O8t-H
A_A^]
p AWH
x AVH
` AUAVAWH
fD9jl
fD9kl
D9khH
L9kPt
A_A^A]
ATAVAWH
A_A^A\
D$PE3
x ATAVAWH
A_A^A\
USVWAVAWH
(|$pH
A_A^_^[]
UWATAVAWH
L$(fD
A_A^A\_]
UWATAVAWH
L$(fD
A_A^A\_]
UWATAVAWH
L$(fD
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
|$ UATAUAVAWH
A_A^A]A\]
UWATAVAWH
L$(fD
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UAVAWH
A_A^]
L$8E3
HcD$8L
xrHcD$8L
xRHcD$8L
x2HcD$8H
HcD$8H
|$ UH
p3\TK
@SVWH
AHH98
L$PH3
t$ UWATAVAWH
pJ]vx
A_A^A\_]
Ch@u$H
pZW4'
VWAVH
0A^_^
UVWATAUAVAWH
I9GxA
A+_HA
D$ E3
A_A^A]A\_^]
x ATAVAWH
0A_A^A\H
x ATAVAWH
0A_A^A\H
WATAUAVAWH
0A_A^A]A\_H
f9\$H
'wNtr
t$ WAVAWH
@A_A^_
H9Kxu
@SUVWH
L$ E3
f;L$(
WAVAWH
0A_A^_
L$xH3
\$8E3
D$@9D$Pt
USVWAVH
PA^_^[]
D$ E3
T$@E3
UVWAVAWH
H!}8H
HcU0L
wpL+E
PA_A^_^]
UVWAVAWH
x H9yxt
H9{xt
0A_A^_^]
L$ E3
q1S<?
t$ WH
t$ WH
t$ WH
qSYXQ?
t$ WH
t$ WH
t?H9O
D$0+D$@
q"W~|
t$ WH
t;H9O
UVWAVAWH
}@+}0H
PA_A^_^]
t$ WH
@SVWH
T$XE3
T$XE3
l$ VWAVH
L$@E3
t$ WH
L$ E3
t$ WH
L$ E3
q"ZPq
t$ WH
qJ]vx
t$ WH
t$ WH
H!l$0H
phYR'
pCQp.7q
pbSzm
q;XR~
@USVWAVH
pYWV}/a
pA^_^[]
UVWATAUAVAWH
L$HH+
L$PH+
D$0;D$D
D9l$D}
A_A^A]A\_^]
UWAVH
@A^_]
@SUVWATAVAWH
L$XH3
`A_A^A\_^][
@SUVWATAVAWH
L$XH3
`A_A^A\_^][
VWAVH
VWAVH
@USVWH
h_^[]
VWATAVAWH
0A_A^A\_^
p"^vL7p
p2PZ>
pr^Z9
WATAVH
+D$<;
A^A\_
UWATAVAWH
pbSzm
p[]r^
A_A^A\_]
UVAUAVAWH
A_A^A]^]
9|$@@
VWATAVAWH
|$`E3
fD9d$Xt
L$`H;
L$`H9
|$`H+;H
 A_A^A\_^
x AVH
pr^Z9
UVWATAUAVAWH
fD9>t
pYWV}/a
pA_A^A]A\_^]
USVWAVH
LcE8LcM
A^_^[]
x AVH
WAVAWH
pbSzm
A_A^_
H9>t&H
UWAVH
0A^_]
UVWATAUAVAWH
EDD+E@D+
0A_A^A]A\_^]
UVWATAUAVAWH
D$ E3
D$ E3
`A_A^A]A\_^]
x AVH
WAVAWH
0A_A^_
|$ AVH
UWAVH
p8XP27<
UWAVH
VWAVH
0A^_^
VWAVH
 A^_^
p1X~^
\$ UWAVH
@A^_]
D$8f90v
{@t H
x AVH
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
bad allocation
generic
unknown error
iostream
iostream stream error
system
invalid string position
string too long
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
}h><PP:
ForceRemove
NoRemove
Delete
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
RegDeleteKeyExW
advapi32.dll
RegDeleteKeyW
CLSID
TYPELIB
HKEY_CLASSES_ROOT
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
HKEY_USERS
HKEY_PERFORMANCE_DATA
HKEY_DYN_DATA
HKEY_CURRENT_CONFIG
Module
LocalServer32
REGISTRY
oleaut32.dll
UnRegisterTypeLib
DISPLAY
BackColor
Appearance
BorderStyle
MouseIcon
MousePointer
InkMode
InkInsertMode
RecoTimeout
Factoid
Locked
Enabled
MaxLength
MultiLine
DisableNoScroll
ScrollBars
UseMouseForInput
Contents
El`I2
fp>GuF
InkEditReflectClass
RICHED20.DLL
\MSFTEDIT.DLL
\RICHED20.DLL
RICHEDIT50W
RichEdit20W
INKEDIT
ATL:%p
INKTEXTBOX
MS Sans Serif
DEFAULT
InkEdit
Barrel Switch
vector<T> too long
IB|.atlthunk.dll
AtlThunk_AllocateData
AtlThunk_InitData
AtlThunk_DataToCode
AtlThunk_FreeData
InkEd.pdb
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.pdata
.rsrc$01
.rsrc$02
hpz|)
InkEd.DLL
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
__CxxFrameHandler4
__C_specific_handler
realloc
wcscpy_s
wcscat_s
_purecall
malloc
_callnewh
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??1exception@@UEAA@XZ
?what@exception@@UEBAPEBDXZ
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UEAA@XZ
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
SizeofResource
VirtualProtect
RegEnumValueW
EnterCriticalSection
CoTaskMemAlloc
RegDeleteValueW
VirtualAlloc
GetModuleFileNameW
CoCreateInstance
RegOpenKeyExW
LeaveCriticalSection
InitializeCriticalSection
CoTaskMemFree
CharNextW
RegSetValueExW
RegEnumKeyExW
MultiByteToWideChar
GetLastError
RegCreateKeyExW
CharPrevW
DisableThreadLibraryCalls
GetSystemInfo
FindResourceExW
LoadResource
CoTaskMemRealloc
HeapDestroy
GetProcAddress
DeleteCriticalSection
GetModuleHandleW
FreeLibrary
RegQueryInfoKeyW
RegCloseKey
VirtualQuery
LoadLibraryExW
GetSystemDirectoryW
LoadLibraryW
SetLastError
GetHGlobalFromStream
GetCurrentThreadId
CreateStreamOnHGlobal
RaiseException
WideCharToMultiByte
GetTickCount
GetUserDefaultLangID
GlobalAlloc
GlobalFree
HeapFree
VirtualFree
GetCurrentProcess
LoadLibraryExA
EncodePointer
HeapAlloc
DecodePointer
GetProcessHeap
FlushInstructionCache
InterlockedPushEntrySList
InterlockedPopEntrySList
Sleep
ReleaseSRWLockExclusive
AcquireSRWLockExclusive
WakeAllConditionVariable
SleepConditionVariableSRW
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
QueryPerformanceCounter
GetCurrentProcessId
GetSystemTimeAsFileTime
OLEAUT32.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-string-l2-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-util-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-interlocked-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-profile-l1-1-0.dll
SetMapMode
LPtoDP
RestoreDC
SetViewportOrgEx
DeleteDC
GetDeviceCaps
SetWindowOrgEx
CreateDCW
SaveDC
GetObjectType
GetMapMode
CreateSolidBrush
DeleteObject
SetViewportExtEx
CreateEnhMetaFileW
SetWindowExtEx
CreateRectRgnIndirect
GetClipBox
CloseEnhMetaFile
StretchBlt
PatBlt
CreateCompatibleDC
SelectObject
CreateCompatibleBitmap
GDI32.dll
lstrcpynW
lstrcpyW
lstrcmpiW
GlobalLock
GlobalUnlock
KERNEL32.dll
CreateOleAdviseHolder
CreateDataAdviseHolder
OleRegGetMiscStatus
OleRegEnumVerbs
OleRegGetUserType
StgCreateDocfileOnILockBytes
CreateILockBytesOnHGlobal
ole32.dll
ReleaseDC
InvalidateRect
PtInRect
IsChild
DestroyAcceleratorTable
IsWindow
ShowWindow
GetWindowLongPtrW
UnionRect
SetWindowLongPtrW
GetDC
DestroyWindow
GetFocus
CallWindowProcW
GetKeyState
DefWindowProcW
GetDoubleClickTime
RegisterClassW
GetClassInfoW
RegisterClassExW
UnregisterClassW
GetSystemMetrics
SendMessageW
EnableWindow
UpdateWindow
GetParent
GetClassInfoExW
SetRect
GetClientRect
SetWindowLongW
wsprintfW
SetParent
LoadCursorW
TranslateMessage
SetFocus
IntersectRect
GetSysColor
ValidateRect
WindowFromDC
DispatchMessageW
OffsetRect
MessageBeep
CreateWindowExW
FillRect
SetWindowRgn
EqualRect
SetWindowPos
IsWindowVisible
InflateRect
GetWindowLongW
GetCursorPos
ShowCursor
ReleaseCapture
KillTimer
SetCapture
IsWindowEnabled
GetCursorInfo
SetTimer
GetCapture
ScreenToClient
PostMessageW
GetMessageExtraInfo
USER32.dll
memcmp
memset
wcscmp
.?AVbad_alloc@std@@
.?AVexception@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
REGISTRY
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft Tablet PC InkEdit Control
FileVersion
10.0.22621.436 (WinBuild.160101.0800)
InternalName
InkEd.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
InkEd.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.436
OleSelfRegister
VarFileInfo
Translation
InkEd.InkEdit.1 = s 'InkEdit Class'
CLSID = s '{E5CA59F5-57C4-4DD8-9BD6-1DEEEDD27AF4}'
InkEd.InkEdit = s 'InkEdit Class'
CLSID = s '{E5CA59F5-57C4-4DD8-9BD6-1DEEEDD27AF4}'
CurVer = s 'InkEd.InkEdit.1'
NoRemove CLSID
ForceRemove {E5CA59F5-57C4-4DD8-9BD6-1DEEEDD27AF4} = s 'Microsoft InkEdit Control'
ProgID = s 'InkEd.InkEdit.1'
VersionIndependentProgID = s 'InkEd.InkEdit'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
ForceRemove 'Control'
ForceRemove 'Insertable'
ForceRemove 'ToolboxBitmap32' = s '%MODULE%, 101'
'MiscStatus' = s '0'
    '1' = s '131473'
'TypeLib' = s '{8405D0DF-9FDD-4829-AEAD-8E2B0A18FEA4}'
'Version' = s '1.0'
stdole2.tlbWWW
WINKEDLib
MouseButtonW
0w/NO_BUTTONWWW
LEFT_BUTTONW
RIGHT_BUTTON
MIDDLE_BUTTONWWWd
SelAlignmentConstantsWWWd
rtfLeftWd
rtfRightd
rtfCenterWWW
DISPID_InkEditWW
DISPID_TextW
DISPID_TextRTFWW
DISPID_HwndW
DISPID_DisableNoScrollWW
DISPID_LockedWWW
DISPID_EnabledWW
DISPID_MaxLength
ADISPID_MultiLine
&DISPID_ScrollBarsWWW
QDISPID_RTSelStartWWW
0lpDISPID_RTSelLengthWW
DISPID_RTSelText
jDISPID_SelAlignmentW
DISPID_SelBoldWW
CDISPID_SelCharOffset
0~<DISPID_SelColorW
DISPID_SelFontNameWW
DISPID_SelFontSizeWW
_DISPID_SelItalic
DISPID_SelRTFWWW
DISPID_SelUnderlineW
DISPID_DragIconW
DISPID_StatusWWW
IDISPID_UseMouseForInputW
DISPID_InkModeWW
DISPID_InkInsertMode
DISPID_RecoTimeoutWW
DISPID_DrawAttrW
DISPID_RecognizerWWW
DISPID_FactoidWW
DISPID_SelInkWWW
DISPID_SelInksDisplayModeWWW
zDISPID_Recognize
DISPID_GetGestStatus
DISPID_SetGestStatus
0/!DISPID_RefreshWW,
DISPID_InkEditEvents,
DISPID_IeeChange,
02QDISPID_IeeSelChangeW,
DISPID_IeeKeyDownWWW,
DISPID_IeeKeyUpW,
]DISPID_IeeMouseUpWWW,
0]ODISPID_IeeMouseDownW,
DISPID_IeeKeyPressWW,
DISPID_IeeDblClickWW,
0NSDISPID_IeeClickW,
0`BDISPID_IeeMouseMoveW,
+DISPID_IeeCursorDown,
0y&DISPID_IeeStroke,
DISPID_IeeGestureWWW,
DISPID_IeeRecognitionResultW
kIInkEdit
InkEditStatusWWW
ZIES_Idle
rIES_CollectingWW
%IES_RecognizingW
+StatusWW
pStatusW
UseMouseForInput
pValX
InkModeWX
IEM_DisabledX
IEM_InkWX
IEM_InkAndGestureWWW
(BpInkInsertModeWWW
IEM_InsertTextWW
mIEM_InsertInkWWW 
IInkDrawingAttributesWWW 
2FColorWWW
CurrentColor 
hNWidthWWW
CurrentWidth 
HeightWW
,1CurrentHeightWWW 
FitToCurveWW
Flag 
IgnorePressureWW 
AntiAliasedW 
Transparency
uCurrentTransparencyW
InkRasterOperationWW
IRO_BlackWWW
IRO_NotMergePenW
IRO_MaskNotPenWW
IRO_NotCopyPenWW
IRO_MaskPenNotWW
pIRO_NotW
uIRO_XOrPenWW
IRO_NotMaskPenWW
IRO_MaskPenW
IRO_NotXOrPenWWW
0$IIRO_NoOperationW
IRO_MergeNotPenW
{IRO_CopyPenW
IRO_MergePenNotW
IRO_MergePen
IRO_WhiteWWW 
RasterOperationW
CurrentRasterOperationWW
8zlInkPenTipWWW
IPT_Ball
IPT_RectangleWWW 
bPenTipWW
CurrentPenTipWWWL
8q>IInkExtendedPropertiesWWL
0vCountWWWL
xA_NewEnum
IInkExtendedProperty
;DataL
zItem
IdentifierWWL
rAddW
InkExtendedPropertyWL
RemoveWWL
ClearWWWL
DoesPropertyExistWWW 
ExtendedPropertiesWW
PropertiesWW 
CloneWWW
92DrawingAttributesWWW
RecognitionTimeoutWW
IInkRecognizerWW
VendorWWx
InkRecognizerCapabilitiesWWWx
IRC_DontCarex
IRC_ObjectWWx
IRC_FreeInputWWWx
IRC_LinedInputWWx
EIRC_BoxedInputWWx
IRC_CharacterAutoCompletionInputx
IRC_RightAndDownx
0.aIRC_LeftAndDownWx
IRC_DownAndLeftWx
IRC_DownAndRightx
IRC_ArbitraryAngleWWx
uIRC_LatticeWx
IRC_AdviseInkChangeWx
&IRC_StrokeReorderWWWx
IRC_PersonalizableWWx
IRC_PrefersArbitraryAngleWWWx
9IRC_PrefersParagraphBreakingx
HIRC_PrefersSegmentationWx
IRC_CursiveWx
IRC_TextPredictionWWx
IRC_AlphaWWWx
IRC_Beta
eeCapabilities
CapabilitiesFlagsWWW
LanguagesWWW
SupportedPropertiesW
PreferredPacketDescriptionWW
nIInkRecognizerContextWWW@
IInkStrokesW
IInkDisp
TStrokesW
VDirtyWWW
IInkCustomStrokesWWW
CustomStrokesWWW
ppunkInkCustomStrokesWWWl
8\QInkBoundingBoxModeWWl
IBBM_Defaultl
IBBM_NoCurveFitWl
IBBM_CurveFitWWWl
IBBM_PointsOnlyWl
IBBM_UnionWW
IInkRectangleWWW
UnitsWWW
{Left
H{BottomWW
RightWWW4
tagRECTW
GetRectangle
>SetRectangle
YGetBoundingBoxWW
BoundingBoxModeW
4!RectangleWWW
DeleteStrokesWWW
8ybIInkStrokeDispWW
]IDWW
BezierPoints
PointsWW
DrawAttrsWWW
PolylineCuspsWWW
CuspsWWW
BezierCuspsW
,SelfIntersectionsWWW
IntersectionsWWW
PacketCountW
plCountW
PacketSizeWW
plSizeWW
PacketDescriptionWWW
[gDeletedW
FindIntersectionsWWW
GetRectangleIntersectionsWWW
u,HitTestCircleWWW
VRadiusWW
u'IntersectsWW
NearestPoint
'Distance
PointWWW
)SplitWWW
SplitAtW
KNewStrokeWWW
8.?TabletPropertyMetricUnit
jTPMU_Default
TPMU_InchesW
TPMU_Centimeters
TPMU_Degrees
TPMU_Radians
TPMU_Seconds
TPMU_PoundsW
TPMU_GramsWW
GetPacketDescriptionPropertyMetricsW
PropertyName
MinimumW
MaximumW
ResolutionWW
GetPointsWWW
IndexWWW
SetPointsWWW
NumberOfPointsSetWWW
GetPacketDataWWW
PacketDataWW
UGetPacketValuesByPropertyWWW
PacketValues
SetPacketValuesByPropertyWWW
HbstrPropertyName
NumberOfPacketsSetWW
GetFlattenedBezierPoints
zFittingError
JFlattenedBezierPointsWWW`
IInkTransformWWW`
>ResetWWW`
g_TranslateWWW
HorizontalComponentW
{VerticalComponentWWW`
RotateWW
rGDegreesW`
pReflectW
Horizontally
VerticallyWW`
ShearWWW`
NScaleTransformWW
HorizontalMultiplier
VerticalMultiplierWW`
pGetTransform`
;eM11`
;eM12`
;eM21`
;eM22`
eDxW`
eDyW`
%SetTransform
KValueWWW
[XFORMWWW(
?tagXFORM
TransformWWW
ApplyOnPenWidthW
ScaleToRectangle
>yMove
DeleteStroke<(
/StrokeWW
InkExtractFlagsW
IEF_CopyFromOriginal
0f$IEF_RemoveFromOriginalWW
0}nIEF_DefaultW
ExtractStrokesWW
ExtractFlags
bExtractedInk
ExtractWithRectangle
(NewInkWW
HitTestWithRectangle
7SelectionRectangleWW
HIntersectPercent
HitTestWithLasso
ZLassoPointsW
PointOnStrokeWWW
m DistanceFromPacketWW
nCreateStrokesWWW
StrokeIdsWWW
AddStrokesAtRectangleWWW
SourceStrokesWWW
qTargetRectangleW
InkPersistenceFormat
DIPF_InkSerializedFormatW
IPF_Base64InkSerializedFormatWWW
IPF_GIFW
IPF_Base64GIFWWWT
InkPersistenceCompressionModeWWWT
IPCM_DefaultT
IPCM_MaximumCompressionWT
/IPCM_NoCompressionWW
PersistenceFormatWWW
CompressionModeW
CreateStroke
jInkClipboardFormatsW
ICF_None
ICF_InkSerializedFormatW
ICF_SketchInkWWW
ICF_TextInkW
ICF_EnhancedMetafile
ICF_Metafile
ICF_BitmapWW
ICF_PasteMaskWWW
cICF_CopyMask
0Q{ICF_DefaultW
InkClipboardModesWWW
ICB_Copy
xICB_CutW
0yfICB_ExtractOnlyW
ICB_DelayedCopyW
ICB_DefaultW
IDataObjectW
tagFORMATETCH
8ppwireCLIPFORMATWW
_userCLIPFORMATW
cfContext
Z__MIDL_IWinTypes_0001WWW
]dwValueW
vpwszName
cfFormatt
8DFtagDVTARGETDEVICEWWWt
tdSizeWWt
S!tdDriverNameOffsetWWt
f?tdDeviceNameOffsetWWt
LItdPortNameOffsett
tdExtDevmodeOffsetWWt
tdDataWW
dwAspect
lindexWW
tymedWWW
wireSTGMEDIUMWWW<
X_userSTGMEDIUMWW
_STGMEDIUM_UNION
D__MIDL_IAdviseSink_0003Wh
A_userHMETAFILEPICTWW
Z__MIDL_IWinTypes_0005WWW
JhInprocW0
_remoteMETAFILEPICTW0
C^mmWW0
xExt0
qyExt
8_D_userHMETAFILEWW
Z__MIDL_IWinTypes_0004WWW\
T_BYTE_BLOBWW\
clSizeWW\
<abDataWW
hRemoteW
&hInproc64WWW0
}hMetaFilePictWWW
_userHENHMETAFILEWWW$
Z__MIDL_IWinTypes_0006WWW
hHEnhMetaFileWWW
8hg_GDI_OBJECTW
ObjectTypeWW
D__MIDL_IAdviseSink_0002WP
"_userHBITMAP
Z__MIDL_IWinTypes_0007WWW
_userBITMAPW
\bmTypeWW
bmWidthW
bmHeight
bmWidthBytes
BbmPlanes
bmBitsPixelW
,*cbSizeWW
pBufferW
hBitmapW|
88f_userHPALETTEWWW
Z__MIDL_IWinTypes_0008WWWD
tagLOGPALETTEWWWD
palVersionWWD
palNumEntriesWWW
atagPALETTEENTRYW
peRedWWW
4peGreenW
peBlueWW
peFlagsWD
spalPalEntryW
hPalette
2_userHGLOBALp
Z__MIDL_IWinTypes_0003WWW
i_FLAGGED_BYTE_BLOBWW
 fFlagsWW
.hGeneric
hGdiHandleWW
hGlobalW
lpszFileName
pstg<
DUMMYUNIONNAMEWW<
pUnkForReleaseWW
RemoteGetDataWWW
+pformatetcIn
%pRemoteMediumWWW
,RemoteGetDataHereWWW
&pformatetcWW
QueryGetData
R(GetCanonicalFormatEtcWWW
ZfpformatectIn
pformatetcOutWWW8
{wireFLAG_STGMEDIUMWW
h_userFLAG_STGMEDIUMW
ContextFlags
YfPassOwnershipWW
StgmedWW
RemoteSetDataWWW
pmediumW
6VfRelease
IEnumFORMATETCWW
RemoteNextWW
rgeltWWW
pceltFetched
ppenumWW
EnumFormatEtcWWW
dwDirectionW
ppenumFormatEtcWd
fIAdviseSinkW
8:=wireASYNC_STGMEDIUMWd
RemoteOnDataChangeWW
PxpStgmedWd
]_RemoteOnViewChangeWW,
rIMoniker
IPersistStreamWW
8V>IPersist
AGetClassIDWW
!0pClassID
ZIsDirtyWX
8Q$IStreamW
83GISequentialStreamWWW
RemoteReadWW
^pvWW
\cbWW
g-pcbReadW
RemoteWriteW
pcbWrittenWW 
_LARGE_INTEGERWW 
QuadPart
_ULARGE_INTEGERWX
RemoteSeekWW
dlibMove
dwOrigin
plibNewPositionWX
Y3SetSizeW
zlibNewSizeWWX
&RemoteCopyToX
CommitWW
grfCommitFlagsWWX
nRevertWWX
N!LockRegionWW
(libOffsetWWW
dwLockTypeWWX
UnlockRegion
tagSTATSTGWW
pwcsName
typeL
_FILETIMEWWWL
dwLowDateTimeWWWL
dwHighDateTimeWW
mtimeWWW
ctimeWWW
atimeWWW
grfModeW
grfLocksSupportedWWW
clsidWWW
grfStateBits
reservedX
2Stat
pstatstg
&rgrfStatFlagW
ppstmWWW
\sfClearDirtyW
9GetSizeMaxWW
pcbSizeW
8c/IBindCtx
RegisterObjectBoundW
RevokeObjectBoundWWW
_+ReleaseBoundObjectsW
tagBIND_OPTS2WWW
cbStruct
%hgrfFlags
dwTickCountDeadlineW
dwTrackFlags
dwClassContextWW
localeWWx
_COSERVERINFOWWWx
@dwReserved1W
_COAUTHINFOW
YdwAuthnSvcWW
dwAuthzSvcWW
$pwszServerPrincNameW
dwAuthnLevel
dwImpersonationLevel@
O_COAUTHIDENTITYW@
User@
UserLengthWW@
DomainWW@
DomainLength@
Password@
?PasswordLengthWW@
oFlagsWWW
pAuthIdentityDataWWW
^dwCapabilitiesWWx
pAuthInfoWWWx
@dwReserved2W
pServerInfoW
RemoteSetBindOptions
pbindoptsWWW
RemoteGetBindOptions
8xQIRunningObjectTableW
Register
lpunkObjectWW
+pmkObjectNameWWW
pdwRegisterW
RevokeWW
dwRegisterWW
~IsRunningWWW
GetObjectWWW
appunkObjectW
NoteChangeTimeWW
pfiletimeWWW
GetTimeOfLastChangeW
IEnumMoniker
EnumRunningW
ppenumMonikerWWW
LGetRunningObjectTableWWW
pprotWWW
RegisterObjectParamW
qpszKeyWW
GetObjectParamWW
ppunkWWWl 
IEnumStringW
EnumObjectParamW
RevokeObjectParamWWW,
/RemoteBindToObjectWW
pmkToLeftWWW
riidResultWW
k:ppvResultWWW,
"XRemoteBindToStorageW
3riid
ppvObjWW,
ReduceWW
[dwReduceHowFarWW
ppmkToLeftWW
ppmkReducedW,
ComposeWithW
?pmkRight
fOnlyIfNotGenericWWW
ppmkCompositeWWW,
ZFEnum
fForward,
w'IsEqualW
epmkOtherMonikerW,
QHash
pdwHashW
pmkNewlyRunningW,
InverseW
ppmk,
CommonPrefixWith
pmkOther
bxppmkPrefixWW,
RelativePathToWW
ppmkRelPathW,
=GetDisplayNameWW
ppszDisplayNameW,
ParseDisplayName
hrpszDisplayNameWW
;pchEaten
ZppmkOutW,
FIsSystemMonikerW
pdwMksysd
4RemoteOnRenameWW
pmkWd
RemoteOnSaved
k{RemoteOnCloseWWW
eDAdviseW4!
advf4!
pAdvSink
pdwConnectionWWW
DUnadviseWWW4!
dwConnection
IEnumSTATDATAWWW4!
tagSTATDATAW4!
x\formatetcWWW
EnumDAdviseW
U]ppenumAdvise
8 ClipboardCopyWithRectangleWW
2ClipboardFormats
ClipboardModesWW
DataObjectWW
{ClipboardCopyWWW
CanPaste
 ClipboardPasteWW
8hrIInkRecognitionResultWWW
TopStringWWW
IInkRecognitionAlternate
StringWW
fRecoStringWW`"
InkRecognitionConfidence`"
IRC_StrongWW`"
IRC_Intermediate`"
IRC_Poor
ZConfidenceWW
Baseline
MidlineW
pAscender
DescenderWWW
LineNumberWW
IInkRecognitionAlternatesWWW
InkRecoAlternate
=LineAlternatesWW
!ConfidenceAlternates
GetStrokesFromStrokeRangesWW
S-GetStrokesFromTextRangeW
e|selectionStartWW
kselectionLengthW
GetTextRangeFromStrokesW
AlternatesWithConstantPropertyValues
PropertyType
yGetPropertyValue
@PropertyValueWWW
TopAlternate
TopConfidenceWWW
%aAlternatesFromSelectionW
XmaximumAlternatesWWW
ModifyTopAlternateWW
AlternateWWW
ASetResultOnStrokesWW@
RecognitionResultWWW@
ToString
a9InkStrokeWWW@
AddStrokesWW
InkStrokesWW@
}RemoveStrokesWWW@
ModifyDrawingAttributesW
BoundingBoxW@
RemoveRecognitionResultW(#
(8OvInkRecognizerCharacterAutoCompletionMode(#
!IRCACM_FullW(#
IRCACM_PrefixWWW(#
IRCACM_RandomWWW
7uCharacterAutoCompletionModeW
vMode
FactoidW
IInkRecognizerGuideW
WritingBoxWW
DrawnBox
URows
p9ColumnsW
FInkRecoGuideT$
O_InkRecoGuideWWWT$
rectWritingBoxWWT$
rectDrawnBoxT$
cRowsWWWT$
?,cColumns
GuideDataWWW
VpRecoGuideWW
GuideWWW
RecognizerGuideW
^PrefixTextWW
PrefixWW
SuffixTextWW
_MSuffixWW
InkRecognitionModesW
IRM_None
DIRM_WordModeOnly
IRM_CoerceWW
IRM_TopInkBreaksOnly
0)UIRM_PrefixOk
;IRM_LineMode
IRM_DisablePersonalizationWW
 IRM_AutoSpaceWWW
DIRM_MaxW
QRecognitionFlags
ModesWWW
IInkWordList
AddWordW
NewWordW
KRemoveWordWW
q_MergeWWW
MergeWordListWWW
WordList
PRecognizerWW
sInkRecognitionStatus
IRS_NoErrorW
0$aIRS_InterruptedW
IRS_ProcessFailedWWW
IRS_InkAddedFailedWW
IRS_SetAutoCompletionModeFailedW
IRS_SetStrokesFailed
IRS_SetGuideFailedWW
IRS_SetFlagsFailedWW
IRS_SetFactoidFailed
IRS_SetPrefixSuffixFailedWWW
JIRS_SetWordListFailedWWW
'RecognizeWWW
RecognitionStatusWWW
StopBackgroundRecognitionWWW
J|EndInkInputW
5dBackgroundRecognizeW
CustomDataWW
,BackgroundRecognizeWithAlternatesWWW
RecoContextW
QIsStringSupportedWWW
SupportedWWW
CreateRecognizerContextW
XnContextW
SelInksW
pSelInkW
InkDisplayModeWW
IDM_InkW
0" IDM_Text
SelInksDisplayModeWW
IupInkDisplayModeWH&
8GcInkApplicationGestureWWWH&
IAG_AllGesturesWH&
ZIAG_NoGestureWWWH&
IAG_ScratchoutWWH&
IAG_TriangleH&
IAG_SquareWWH&
gIAG_StarH&
IAG_CheckWWWH&
IAG_CurlicueH&
CIAG_DoubleCurlicueWWH&
EIAG_CircleWWH&
IAG_DoubleCircleH&
IAG_SemiCircleLeftWWH&
09]IAG_SemiCircleRightWH&
DIAG_ChevronUpWWWH&
IAG_ChevronDownWH&
IAG_ChevronLeftWH&
IAG_ChevronRightH&
~IAG_ArrowUpWH&
IAG_ArrowDownWWWH&
IAG_ArrowLeftWWWH&
IAG_ArrowRightWWH&
06QIAG_UpWWH&
IAG_DownH&
IAG_LeftH&
IAG_RightWWWH&
MIAG_UpDownWWH&
IAG_DownUpWWH&
0,_IAG_LeftRightWWWH&
 IAG_RightLeftWWWH&
0f{IAG_UpLeftLongWWH&
IAG_UpRightLongWH&
IAG_DownLeftLongH&
0}GIAG_DownRightLongWWWH&
0aCIAG_UpLeftWWH&
0v9IAG_UpRightWH&
]IAG_DownLeftH&
IAG_DownRightWWWH&
IAG_LeftUpWWH&
IAG_LeftDownH&
IAG_RightUpWH&
*IAG_RightDownWWWH&
0l!IAG_ExclamationWH&
}IAG_TapWH&
3IAG_DoubleTapWWW
GetGestureStatus<(
GestureW
pListenW
SetGestureStatus
+ListenWW
BackColorWWW
AppearanceConstantsW
0/HrtfFlatW
rtfThreeDWWW
"*AppearanceWW
.pAppearanceW
88pBorderStyleConstants
rtfNoBorderW
0PArtfFixedSingleWW
BorderStyleW
pBorderStyle
"MpohHwndW
`ppFontWW
pbstrTextWWW
aMouseIconWWWt'
InkMousePointerWt'
IMP_DefaultWt'
IMP_ArrowWWWt'
$IMP_CrosshairWWWt'
IMP_IbeamWWWt'
:IMP_SizeNESWt'
05:IMP_SizeNSWWt'
IMP_SizeNWSEt'
0O;IMP_SizeWEWWt'
'IMP_UpArrowWt'
IMP_HourglassWWWt'
}IMP_NoDropWWt'
IMP_ArrowHourglassWWt'
IMP_ArrowQuestionWWWt'
IMP_SizeAllWt'
0O?IMP_Handt'
IMP_CustomWW
MousePointer
LockedWW
EnabledW
MaxLengthWWW
[plMaxLengthW
MultiLineWWW
ScrollBarsConstantsW
rtfNoneW
2rtfHorizontalWWW
TrtfVerticalW
06DrtfBothW
ScrollBarsWW
DisableNoScrollW
SelAlignment
pvarSelAlignment
SelBoldW
pvarSelBoldW
SelItalicWWW
djpvarSelItalicWWW
E*SelUnderline
bpvarSelUnderline
SelColor
pvarSelColor
SelFontNameW
SrpvarSelFontNameW
SelFontSizeW
Q{pvarSelFontSizeW
*SelCharOffsetWWW
:pvarSelCharOffsetWWW
TextRTFW
pbstrTextRTF
ZSelStart
7plSelStartWW
SelLengthWWW
plSelLengthW
+TSelTextW
l;pbstrSelText
SelRTFWW
pbstrSelRTFW
RefreshW<(
x_IInkEditEventsW<(
ChangeWW<(
SelChangeWWW<(
.aKeyDownW
ShiftKey<(
MKeyUpWWW<(
MouseUpW
ButtonWW
#txMouseWW
0yMouseWW<(
MouseDownWWW<(
KeyPress
Char<(
DblClick<(
ClickWWW<(
MouseMoveWWW
}IInkCursorWW
JInverted
AttributesWW
IInkTabletWW
PlugAndPlayIdWWW
MaximumInputRectangleWWWh)
MTabletHardwareCapabilitiesWWh)
sTHWC_IntegratedWh)
0N<THWC_CursorMustTouchh)
THWC_HardProximityWWh)
THWC_CursorsHavePhysicalIdsW
HardwareCapabilities
2IsPacketPropertySupportedWWW
packetPropertyNameWW
GetPropertyMetricsWW
TabletWW
IInkCursorButtonsWWW0*
5IInkCursorButton
NInkCursorButtonState
0?'ICBS_Unavailable
ICBS_UpW
ICBS_DownWWW0*
StateWWW
CurrentState
]ButtonsW
lCursorWW
CancelWW
Gestures
InkEditW
Microsoft InkEdit Control 1.0W
No mouse button was pressed.WW"
The left mouse button was pressed.#
The right mouse button was pressed.WWW$
The middle mouse button was pressed.WW;
Defines values that specify which mouse button was pressed.WWW/
The paragraph is aligned along the left margin.WWW0
The paragraph is aligned along the right margin.WW=
The paragraph is centered between the left and right margins.W
Defines values that specify whether a paragraph is aligned along the left margin, along the right margin, or between the left and right margin of the control.
IInkEdit Interface8
The control is idle (not collecting or recognizing ink).WW
The control is collecting ink.
The control is recognizing ink.WWW`
Represents the actions that allow you to collect ink, recognize it, and display it in text form.WW_
Returns a value that specifies whether the control is idle, collecting ink, or recognizing ink.WWWT
Returns or sets a value that indicates whether the mouse is used as an input device.WW
Ink collection is disabled.WWW)
Only ink is collected, creating a stroke.W9
Ink is collected and single stroke gestures are accepted.W
Defines values that specify the collection mode settings for drawn ink - whether ink collection is disabled, whether ink is collected, or whether ink and gestures are being collected.WWW
Returns or sets a value that specifies whether ink collection is disabled, whether only ink is collected, or whether ink and gestures are being collected.
Insert As Text
Insert As InkWA
Defines values that specify how ink is inserted onto the control.Wg
Returns or sets a value that specifies how ink is inserted onto the control - either as text or as ink.WWW
IInkDrawingAttributes InterfaceWWW@
Represents the objects that are applied to ink when it is drawn.WWY
Returns or sets the width of the pen when drawing ink with this DrawingAttributes object.WZ
Returns or sets the height of the pen when drawing ink with this DrawingAttributes object.
Returns or sets the value that specifies whether Bezier smoothing is used to render ink; this means that ink will be rendered as a series of curves instead of as lines between pen sample points.
Returns or sets the value that specifies whether drawn ink will automatically get wider with increased pressure of the pen tip on the tablet surface.W
Returns or sets the value that specifies whether the foreground and background colors along the edge of the ink are blended to increase the smoothness of an ink stroke.WW4
Returns or sets the transparency value of drawn ink.WW
Black pen color.WW
Inverse of MergePen.WWT
Combination of the colors common to the background color and the inverse of the pen.WW
Inverse of CopyPen.WWWP
Combination of the colors common to both the pen and the inverse of the display.WW
Inverse of the display color.WO
Combination of the colors in the pen and in the display color, but not in both.WWW
Inverse of MaskPen.WWWA
Combination of the colors common to both the pen and the display.W
Inverse of XOrPen.+
No operation; the output remains unchanged.WWWB
Combination of the display color and the inverse of the pen color.
Pen color.B
Combination of the pen color and the inverse of the display color.3
Combination of the pen color and the display color.WWW
White pen color.WW=
Defines values for performing raster operations on drawn ink.Wq
Returns or sets how the pen color interacts with the existing background colors on the display when ink is drawn.W
Round pen tip.
Rectangular pen tip.WWH
Defines values that specify whether the pen tip is round or rectangular.WWk
Returns or sets the pen tip to use, ball or rectangle, when drawing ink with this DrawingAttributes object.WWW 
IInkExtendedProperties InterfaceWWk
Contains the ExtendedProperty objects that represent application-defined data that is stored with a stroke.WWW!
Enumerate next item in PropertiesW
IInkExtendedProperty Interfacef
Represents the ability to add your own data to a variety of objects within the Tablet PC object model.
Property's dataWWWP
Specifies the object or collection to return at the given index in a collection.WWP
Specifies the extended property to add to the collection of extended properties.WW>
Specifies the extended property to remove from the collection.?
Specifies the extended properties to clear from the collection.WWWY
Specifies whether an extended property exists within a collection of extended properties.WG
Returns the collection of application-defined data stored in an object.WWW-
Specifies the creation of a duplicate object.WF
Returns or sets the drawing attributes to apply to ink as it is drawn.
Returns or sets the length of time, in milliseconds, between the last ink stroke collected and the beginning of text recognition.W
IInkRecognizer InterfaceWWg
Represents the ability to process ink, or handwriting, and translate the strokes into text or gestures.WWW*
Returns the vendor name of the recognizer.
Returns the capabilities of the recognizer, such as whether the recognizer supports character Autocomplete, whether it supports free, lined, or boxed input, etc.WX
Returns the list of language and sub-language combinations that the recognizer supports.WWZ
Returns an array of identifiers that describe the properties that the recognizer supports.T
Returns a packet description that describes the packet properties of the recognizer.WW
IInkRecognizerContext InterfaceWWW
IInkStrokes InterfaceWM
Contains the collection of Stroke objects that represent a single ink stroke.W
property _NewEnumW
IInkDisp Interface
property Strokes collectionWWW&
property ExtendedProperties collection
Dirty property   W
IInkCustomStrokes InterfaceWWW:
Contains a collection of user-defined Strokes collections.O
Specifies the collection of strokes to add to the collection of custom strokes.WWW]
Specifies the stroke or collection of strokes to remove from the given collection of strokes.WS
Specifies that all custom strokes be cleared from the collection of custom strokes.WWW
property CustomStrokes
Use the definition of each stroke (polyline or Bezier) to calculate the bounding box; includes the drawing attributes, such as pen width, in the calculation.W
Use the polyline of the strokes (ignore Bezier curve fitting requests) to calculate the bounding box; includes the drawing attributes in the calculation.W
Use the Bezier curve fitting line of the strokes (apply Bezier curve fitting to all strokes) to calculate the bounding box; includes the drawing attributes in the calculation.WWWA
Use only the points of the strokes to calculate the bounding box.W9
The union of a NoCurveFit request and a CurveFit request.W<
Represents the collected strokes of ink within an ink space.WW
IInkRectangle InterfaceWWW6
Represents access to a rectangle for Automation users.=
Returns or sets the left position of the InkRectangle object.W?
Returns or sets the bottom position of the InkRectangle object.WWW>
Returns or sets the right position of the InkRectangle object./
Returns or sets access to the rectangle struct.WWWM
Specifies (returns) the elements of the InkRectangle object in a single call.WJ
Specifies (sets) the elements of the InkRectangle object in a single call.
BoundingBox propertyWW
DeleteStrokes methodWW
IInkStrokeDisp InterfaceWW
Represents a single ink stroke.WWW
property BezierPointsW
property DrawingAttributes
Ink propertyWW
ExtenedProperties collectionWW
Polyline Cusps propertyWWW
Bezier Cusps propertyW
Self Intersections propertyWWW
PacketCount propertyWW
PacketSize propertyWWW
PacketDescription property
Deleted propertyWW
method FindIntersectionsWW 
method GetRectangleIntersectionsWW
method ClipWWW
method HitTestCircleWW
method NearestPointWWW
method SplitWW*
GetPacketDescriptionPropertyMetrics method
method GetPointsWW
method SetPointsWW
method GetPacketDataWW 
method GetPacketValuesByPropertyWW 
method SetPacketValuesByPropertyWW
method GetFlattenedBezierPointsWWW
IInkTransform InterfaceWWWK
Represents a 3x3 matrix that, in turn, represents an affine transformation.WWW9
Specifies the translation to apply to the view transform.W
Specifies the amount, measured in degrees, to rotate the ink in the view transform around the specified point, or if no point is specified, the origin.WWWA
Specifies reflection in either horizontal or vertical directions.WN
Shears the stroke or strokes by the specified horizontal and vertical factors.5
Specifies the X and Y factors to scale the transform.W"
Gets the InkTransform member data."
Sets the InkTransform member data.
Returns or sets the element in the first row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the first row, second column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, first column of the affine transform matrix represented by an InkTransform object.W
Returns or sets the element in the second row, second column of the affine transform matrix represented by an InkTransform object.
Returns or sets the element in the third row, first column of the affine transform matrix represented by an InkTransform object.WW
Returns or sets the element in the third row, second column of the affine transform matrix represented by an InkTransform object.W6
Returns or sets access to the XFORM struct (C++ only).
Transform methodWW
ScaleToRectangle methodWWW
Move methodWWW
Rotate methodW
Shear methodWW
ScaleTransform methodW
DeleteStroke methodWWW&
The ink is copied from the Ink object.#
The ink is cut from the Ink object.WWWQ
Defines values that determine what part of a stroke to remove from an Ink object.W
ExtractStrokes methodW
ExtractWithRectangle methodWWW
Clip methodWWW
Clone methodWW
HitTestCircle method W
HitTestWithRectangle methodWWW
method HitTestWithLassoWWW
CreateStrokes methodWW
AddStrokesAtRectangle methodWWB
Specifies that ink be persisted using Ink Serialized Format (ISF).G
Specifies that ink be persisted by encoding the ISF as a base64 stream.WWWi
Specifies that ink be persisted using a GIF file that contains ISF as meta-data embedded within the file.WH
Specifies that ink be persisted by using a base64 encoded fortified GIF.WW1
Defines values that specify how ink is persisted.WU
Provides the best tradeoff between save-time and storage for the typical application.WS
Use when minimizing storage space is more important than how fast the ink is saved.WWW
Use when save-time is more important than the amount of storage space used and when compatibility between versions is important.WW\
Defines values for the compression modes used to save the Ink object to a serialized format.WW
Save methodWWW
Load methodWWW
CreateStroke methodWWWW
Flag that can be used to verify whether any formats are present by checking against it.WWW^
Specifies that ink is not expected to form words, but rather will be interpreted as a picture.-
Specifies that ink be expected to form words.WA
Specifies the enhanced metafile to play to create the background.Wl
Specifies that ink be stored as a metafile, or a list of commands that can be played back to draw a graphic.WW.
Specifies the bitmap to use as the background.R
Specifies the formats that can be used for pasting, including tInk, sInk, and ISF.F
Specifies the formats that can be copied to the clipboard through Ink.+
Specifies that ink be stored as a CopyMask.WWWN
Defines values that specify the format of ink that is stored on the clipboard.
Copy the ink to the clipboard.)
Cut the ink and copy it to the clipboard.W%
Do not copy the ink to the clipboard.W~
Use delayed rendering to reduce the amount of data stored on the clipboard; the data is rendered when a paste request is made.%
Specifies that the Copy mode be used.W>
Defines values that specify the copy options of the clipboard.
ClipboardCopyWithRectangle
ClipboardCopyW
CanPasteWW
ClipboardPaste=
Returns the Ink object that contains a collection of strokes.W
IInkRecognitionResult InterfaceWWW)
Represents the result of the recognition.W"
IInkRecognitionAlternate Interface+
Returns the result string of the alternate.WWW
Returns the level of confidence - strong, intermediate, or poor - that a recognizer has in the recognition of a RecognitionAlternate object or of a gesture.WWS
Returns the baseline of a RecognitionAlternate object that exists on a single line.WWWS
Returns the midline for a RecognitionAlternate object that exists on a single line.WWWX
Returns the ascender line of a RecognitionAlternate object that exists on a single line.WWY
Returns the descender line of a RecognitionAlternate object that exists on a single line.W?
Returns the line number of the ink that makes up the alternate.WWW
property StrokesWW#
IInkRecognitionAlternates InterfaceWWWG
Returns the number of objects or collections contained in a collection.WWWb
Returns the collection of alternates where each alternate in the collection is on a separate line.
Returns the collection of alternates where each alternate in the collection consists of the segments with the same property values.WWW
Specifies the smallest collection of strokes that contains a given input collection of strokes, and for which the recognizer can provide alternates.WW
Returns the strokes that correspond to the smallest RecognitionAlternates collection that contains a specified range of recognized text within the alternate.W
Specifies the smallest range of recognized text for which the recognizer can return an alternate that contains a given collection of strokes.Wn
Specifies the collection of alternates that have the same value as this alternate for the given property type.o
Specifies the value of a given property of the alternate, such as the recognizer's confidence in the alternate.WWW5
Returns the best alternate of the recognition result.W\
Returns the level of confidence - strong, intermediate, or poor - of the recognition result.WW
method AlternatesFromSelectionG
Specifies the recognition result to be modified with a given alternate.WWW`
Specifies the recognition results to assign to the strokes that were used to create the results.WW9
Returns the recognition result of the Strokes collection.WE
For a Strokes collection, returns the recognized text of the strokes.W
Item methodWWW7
Specifies the stroke to add to a collection of strokes.WWWF
Specifies the collection of strokes to add to a collection of strokes.M
Specifies the given Strokes collection to remove from the Strokes collection.WR
Specifies the drawing attributes of all of the strokes in a collection of strokes.
method GetBoundingBoxW
Specifies the application of scaling, rotation, translation and skewing of Stroke collections/Ink objects in a single operation, as opposed to individual operations.W]
Specifies the stroke or collection of strokes to be scaled to fit in the specified rectangle.WE
Removes the RecognitionResult associated with the Strokes collection.Wl
Represents the ability to perform ink recognition, retrieve the recognition result, and retrieve alternates.WWh
Returns or sets the character Autocomplete mode that determines when characters or words are recognized.WWf
Returns or sets the factoid that a recognizer uses to constrain its search for the recognition result.
IInkRecognizerGuide InterfaceWE
Represents the area used by the recognizer in which ink can be drawn.Wf
Returns or sets the box that is physically drawn on the tablet's screen, in which writing takes place.4
Returns or sets the number of rows in the guide box.WW7
Returns or sets the number of columns in the guide box.WWWc
Returns or sets the midline height, or distance from the baseline to the midline, of the guide box.WWWI
Returns or sets the recognizer guide structure for Automation developers.W9
Returns or sets the RecognizerGuide to use for ink input.Wu
Returns or sets the text string that helps improve recognition results by providing a context for newly entered text.Wn
Returns or sets the flags that specify how the recognizer interprets the ink and determines the result string.
IInkWordList InterfaceL
Represents the word list that can be used to improve the recognition result.WW5
Specifies the single word to remove from a word list.W<
Specifies another word list to merge into a given word list.WWn
Returns or sets the user-defined word list used in the recognition process to improve the recognition results.:
Returns the recognizer used within the recognizer context.
No error.WG
The recognition was interrupted by a call to StopBackgroundRecognition.WWW#
The ink recognition process failed.WWW
The ink could not be added.WWW.
Could not set the character Autocomplete mode.
Could not set the strokes.
Could not set the guide.WW
Could not set the flags.WW
Could not set the factoid.'
Could not set the suffix or the prefix.WWW
Could not set the word list.WWm
Defines values that specify whether an error occurred during recognition, and if so, which error(s) occurred.W|
Specifies that a collection of strokes should be recognized, and that recognition results are returned from the recognition.WW
Specifies that background recognition be stopped when it was started with a call to BackgroundRecognize or BackgroundRecognizeWithAlternates.W8
Specifies that no more ink will be added to the context.WW
Specifies that the recognizer should recognize the associated strokes and fire a recognition event when recognition is complete.WW
Specifies that the recognizer should recognize the associated strokes and fire recognition with alternates event when recognition is complete.X
Specifies whether the system dictionary, user dictionary, or word list contain a string.WW2
Specifies the creation of a new RecognizerContext.6
Returns or sets the recognizer to use for recognition.k
Returns or sets the array of embedded Ink objects (if displayed as ink) contained in the current selection.WWW2
Specifies that the selection be displayed as text.H
Defines values that specify how a selection is displayed on the control.WWc
Returns or sets a value that allows for toggling the display of the selection between ink and text.WWW(
Specifies that recognition should occur.WWG
Specifies (gets) the interest of the object/control in a given gesture.WWWG
Specifies (sets) the interest of the object/control in a given gesture.WWW4
Returns or sets the background color of the control.WW4
Control appears flat; paints without visual effects.WW:
Control appears 3D; paints with three-dimensional effects.C
Defines values that specify whether the control appears flat or 3D.WWW
Returns or sets a value that determines the appearance of the control - whether it is flat (painted with no visual effects) or 3D (painted with three-dimensional effects).WWW
Control has no border."
Control has a fixed single border.=
Defines values that specify whether the control has a border.WI
Returns or sets a value that determines whether the control has a border.W
Returns a handle to a control.
Returns a Font object.0
Returns or sets the text contained in an object.WW&
Returns or sets the custom mouse icon.
Default mouse pointer.
Arrow mouse pointer.WW(
Cross mouse pointer (crosshair pointer).WW
I beam mouse pointer.WI
Size NE SW mouse pointer (double arrow pointing northeast and southwest).W>
Size N S mouse pointer (double arrow pointing north and south.I
Size NW SE mouse pointer (double arrow pointing northwest and southeast).W=
Size W E mouse pointer (double arrow pointing west and east).W
Up arrow mouse pointer.WWW
Hourglass mouse pointer (wait).WWW
No drop mouse pointer."
Arrow and hourglass mouse pointer.&
Arrow and question mark mouse pointer.
Size all mouse pointer.WWW
Hand mouse pointer.WWW9
Custom mouse pointer specified by the MouseIcon property.WF
Defines values that specify the type of mouse pointer to be displayed.M
Returns or sets a value indicating the type of mouse pointer to be displayed.WU
Returns or sets a value indicating whether the contents of the control can be edited.Ww
Returns or sets a value that determines whether the InkPicture or InkEdit control can respond to user-generated events.WWW
Returns or sets a value indicating whether there is a maximum number of characters an InkEdit control can hold and, if so, specifies the maximum number of characters.l
Returns or sets a value indicating whether an InkEdit control can accept and display multiple lines of text.WW
No scroll bars.WWW
Horizontal scroll bar only.WWW
Vertical scroll bar only.W)
Both horizontal and vertical scroll bars.W
Defines values that specify whether the control has no scroll bars, a horizontal scroll bar, a vertical scroll bar, or both horizontal and vertical scroll bars.WWK
Returns or sets the type of scroll bars, if any, to display in the control.WWWX
Returns or sets a value that determines whether scroll bars in the control are disabled.WW\
Returns or sets a value that controls the alignment of the paragraphs in an InkEdit control.WWt
Returns or sets a value that specifies whether the font style of the currently selected text in the control is bold.WWv
Returns or sets a value that specifies whether the font style of the currently selected text in the control is italic.z
Returns or sets a value that specifies whether the font style of the currently selected text in the control is underlined.Q
Returns or sets a value that determines the color of text in the InkEdit control.W
Returns or sets the font used to display the currently selected text or the character(s) immediately following the insertion point in the InkEdit control.F
Returns or sets the font size of the selected text within the control.
Returns or sets a value that determines whether text in the InkEdit control appears on the baseline (normal as a superscript above the baseline, or as a subscript below the baseline.T
Returns or sets the text of the control, including all Rich Text Format (RTF) codes.WWz
Returns or sets the starting point of text selected; indicates the position of the insertion point if no text is selected.2
Returns or sets the number of characters selected.
Returns or sets the string containing the currently selected text; consists of a zero-length string if no characters are selected.Y
Returns or sets the text (in .RTF format) in the current selection of an InkEdit control.W'
Forces a complete repaint of a control.WWW
_IInkEditEvents InterfaceWI
Occurs when the contents of the control or a property value have changed.Wf
Occurs when the current selection of text in the control has changed or the insertion point has moved.`
Occurs when the user presses (KeyDown) or releases (KeyUp) a key while an object has the focus. WW:
Occurs when a key is released while the control has focus.Q
Occurs when the mouse pointer is over the control and a mouse button is released.WP
Occurs when the mouse pointer is over the control and a mouse button is pressed.WW9
Occurs when a key is pressed while the control has focus.Wo
Occurs when the user presses and releases a mouse button and then presses and releases it again over an object.WWW#
Occurs when the control is clicked.WWW8
Occurs when the mouse pointer is moved over the control.WW
IInkCursor InterfaceWW7
Represents general information about the tablet cursor.WWW$
Returns the identifier of an object.WWS
Returns the value that specifies whether the cursor is the inverted end of the pen.WWW
IInkTablet InterfaceWW`
Represents the digitizer device of the Tablet PC that receives tablet device messages or events.WW3
Returns the plug-and-play identifier of the tablet.WWW\
Returns the maximum input rectangle, in tablet device coordinates, that the tablet supports.WW
Returns a bit mask that defines the hardware capabilities of the tablet, such as whether a cursor must be in physical contact with the tablet to report its position.W
Specifies whether a property of a tablet device or a collection of tablet devices, identified with a globally unique identifier (GUID), is supported.W0
Specifies the metrics data for a given property.WW
Returns the tablet device to which a cursor belongs, or that an InkCollector object is currently using to collect cursor input.WWW
IInkCursorButtons InterfaceWWW[
Contains a collection of CursorButton objects that represent the buttons on a given cursor.WWW
Enumerate next item in Buttons
IInkCursorButton Interface
Represents general information about a cursor button, such as the globally unique identifier (GUID) that uniquely identifies the button.WW]
Returns the state of a cursor button, such as whether the button is unavailable, up, or down.WN
Returns the collection of cursor buttons that are available on a given cursor.6
Occurs when the user draws a new stroke on any tablet.:
Occurs when an application-specific gesture is recognized.
Occurs when the InkEdit control gets results manually from a call to the Recognize method or automatically after the recognition timeout has fired.WWW
InkEdit ControlWWW
