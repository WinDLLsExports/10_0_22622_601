!This program cannot be run in DOS mode.
.text
h.rdata
H.data
.pdata
H.idata
HPAGE
`fothk
`INIT
bGFIDS
B.rsrc
B.reloc
D$xE3
D$xE3
uAHcF
x AVH
L$ USVWAVAWH
D8<:u
D$(E3
A_A^_^[]
R$fA;Z*
L$`H3
NVDcH
WATAUAVAWH
A_A^A]A\_
L$ SVWAVH
8A^_^[
UWAVH
VWAVH
@A^_^
L$XH3
UVWATAUAVAWH
A9^Ht
`A_A^A]A\_^]
VWATAVAWH
A_A^A\_^
NvfiH
{ AVH
t,H9p
UVWAVAWH
PA_A^_^]
NvfwI
D$`t\H
L$pH3
|$ UATAUAVAWH
D$HD#
D$HD#
D$HD#
D$HD#
D$HD#
A_A^A]A\]
UVWATAUAVAWH
t$ E3
D$`t|A
T$XE#
\$PA#
L$pH3
A_A^A]A\_^]
L$ SVWH
L$ SVWAVH
8A^_^[
UWAVH
UWAVH
wfD9u
L$hfE
Kxu7H
WATAUAVAWH
NvpsH
A_A^A]A\_
@SUVWAUAVAWH
L$PH3
`A_A^A]_^][
WAVAWH
0A_A^_
D$htjH
L$xH3
|$ UATAUAVAWH
A_A^A]A\]
VWATAVAWH
NvptH
A_A^A\_^
UVWATAUAVAWH
d$ E3
A_A^A]A\_^]
t$ WH
t$ UWAWH
VWAVH
0A^_^
VWATAVAWH
NvptH
fD90t"D
A_A^A\_^
f9l$`u
D$`taH
L$pH3
\$ H+
WATAUAVAWH
\$0fD
\$0fD
\$0fD
A_A^A]A\_
WATAUAVAWH
E:4$t\L
0A_A^A]A\_
x ATAVAWH
_7fD;
0A_A^A\
l$ VWATAVAWH
NvfwH
t(fD9
A_A^A\_^
@USVWATAUAVAWH
x D9e
x D9e
A_A^A]A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
l$ VWAVH
D$pfA;
t"9\$pt<f;
|$ UAVAWH
A_A^]
t$ UWAWH
{ AWH
G?f;D$ r
@SVWH
L$pH3
\$ WAVAWH
 A_A^_
SUVWATAUAVAWH
8A_A^A]A\_^][
@SVWH
D$`D;
L$pH3
@SVWH
D$`D;
L$pH3
@SVWH
D$`D;
L$pH3
-fffffff
fffffff
fffffff
fffffff
.fffffff
fffffff
fffffff
fffff
AQAPRQPH
(D$ H
0XYZAXAY
ffffff
fffff
fffff
NvdAddDevice: IoCreateDevice failed with error: 0x%X
NvdAddDevice: Failed to attach device to device stack
NvdAddDevice: Failed to register device interface (0x%x)
D0 transition: queueing workitem
DIMM %d, Irp %p, Pnp, Minor %x
Disk Number %d, Irp %p, Pnp Minor %x, ret = %08x
The NoSPAMapping bit is set, meaning that the platform didn't map the contents of this NVDIMM into virtual memory.
NvdStartDevice: NvdNotificationSupported() failed with 0x%x
NvdStartDevice: NvdNotificationSupported() ACPI notifications are not supported
NvdStartDevice: NvdGetBadMemoryRangesInfo() failed with 0x%x
NvdNotification(): %d bad memory ranges detected on NVDIMM 0x%x
NvdStartDevice: the device is in bring up mode - overriding status 0x%x with STATUS_SUCCESS
NvdUsageNotification: lower driver returned NTSTATUS 0x%x
NvdUsageNotification: Special file notification, type = %u, inPath = %u, new count = %u
\DosDevices\PhysicalNvdimm%x
NvdCreateSymbolicLinks: Linking %wZ to %wZ
NvdCreateSymbolicLinks: Error creating symbolic link from %wZ to %wZ (0x%x)
BringUpMode
DisableTimer
ErrInj_FailFirstNHealthChecks_Retriable
ErrInj_FailNHealthChecks_NonRetriable
ErrInj_FailHealthChecks_NonRetriableDelay
EnableSecurityIfPassphrasePresent
DIMM Handle %d, Irp %p, Ioctl = %08x
IoDeviceControl: Unknown device IOCTL %x for %p
DIMM Handle %d, Irp %p, Ioctl = %08x, ret = %08x
NvdQueryProperty: Input buffer too small.
NvdQueryProperty: Called at invalid IRQL.
NvdQueryProperty: Version field did not match sizeof().
NvdQueryPrivateProperty: Input buffer too small.
NvdQueryPrivateProperty: Called at invalid IRQL.
NvdQueryPrivateProperty: Version field did not match sizeof().
NvdDeviceInfoIoctl: Nvdimm->GetUnsafeShutdownCount() failed with 0x%x
NvdPrivateDeviceInfoIoctl: Nvdimm->GetUnsafeShutdownCount() failed with 0x%x
NvdPrivateDeviceInfoIoctl: Nvdimm->GetFirmwareInfo() failed with 0x%x
NvdFirmwareInfoIoctl: Nvdimm->GetFirmwareInfo() failed with 0x%x
NvdFirmwareDownloadIoctl: Input buffer too small.
NvdFirmwareDownloadIoctl: Called at invalid IRQL.
NvdFirmwareDownloadIoctl: Firmware update to slot %d failed with status 0x%x.
NvdFirmwareActivateIoctl: Input buffer too small.
NvdFirmwareActivateIoctl: Called at invalid IRQL.
NvdFirmwareActivateIoctl: NvdnSelectFirmwareImageSlot failed with status 0x%x.
NvdDeviceSpecificInfoIoctl: GetDeviceSpecificInfo() failed with NTSTATUS 0x%x
NvdPassthroughCommandIoctl: Input buffer too small.
NvdPassthroughCommandIoctl: Output buffer too small.
NvdPassthroughCommandIoctl: Called at invalid IRQL.
NvdPassthroughCommandIoctl: Invalid version number (0x%x)
NvdPassthroughCommand: NVDIMM object call returned NTSTATUS 0x%x
NvdRefreshManagementStatus(): Refreshing health and security state of the NVDIMM
NvdRefreshManagementStatus: NvdNotifyHealthChange() failed with NTSTATUS 0x%x
NvdReinitializeMedia: Input buffer too small.
NvdReinitializeMedia: Output buffer too small.
NvdReinitializeMedia: Called at invalid IRQL.
NvdGetRuntimeFirmwareActivationInfoIoctl: get runtime firmware activation info failed with status 0x%x.
NvdSetProperty: Input buffer too small.
NvdSetProperty: Called at invalid IRQL.
NvdSetProperty: Version field did not match sizeof().
NvdSetRuntimeFirmwareActivationArmStateIoctl: set firmware activation arm state failed with status 0x%x.
ShouldHealthCheckFail: Failing health check with fatal error because of registry
ShouldHealthCheckFail: Failing health check because of registry; %d more failures still
NvdGetLogicalDeviceCount(): NvdGetLogicalDeviceGuids() failed with NTSTATUS 0x%x
NvdNotification(): NvdGetBadMemoryRangesInfo() failed with 0x%x
NvdNotificationCallback: error resuming from hibernate (0x%x)
NvdNotification(): Unknown notification type (%d)
FakeHealthProblem
D0 transition: NvdGetBadMemoryRangesInfo() failed with 0x%x
D0 transition: NvdGetBootTimeStatus() failed with 0x%x
After resuming, the NoSPAMapping bit is set, meaning that the platform didn't map the contents of this NVDIMM into virtual memory.
AddAllOperationalStatusReasonsToArray(): Nvdimm->GetOperationalStatus() failed with 0x%x
NvdGetDeviceDescriptor: 1st STORAGE_QUERY_PROPERTY IRP failed
NvdGetDeviceDescriptor: 2nd STORAGE_QUERY_PROPERTY IRP failed
NvdCopyDevicePropertyString: Failed to get string length.
NvdGetIdentifyingInfo: NvdGetProductInfo() failed with 0x%x
NvdGetIdentifyingInfo: couldn't copy serial number
,aN%\
Virtual NVDIMM device
SCMNVD
VNvdimm::AcknowledgeUnsafeShutdown: baseline USC updated in the registry to %d
VNvdimm::AcknowledgeUnsafeShutdown: error writing updated baseline USC to registry: 0x%x
VNvdimm::RefreshHealthStatus(): VDsmGetHealthInformation() failed with NTSTATUS 0x%x
VNvdimm::RefreshHealthStatus(): VDsmGetHealthInformation() call failed with _DSM status 0x%x
VNvdimm::GetUnsafeShutdownCountFromDsm VDsmGetUnsafeShutdownCount() failed with NTSTATUS 0x%x
VNvdimm::GetUnsafeShutdownCountFromDsm: VDsmGetUnsafeShutdownCount() call failed with _DSM status 0x%x
BaselineUnsafeShutdownCount
VNvdimm::GetUnsafeShutdownCountFromDsm: the baseline USC isn't in the registry, so assuming the current value (%d) as the baseline
VNvdimm::GetUnsafeShutdownCountFromDsm: VnvdQueryDeviceRegistryUlong() failed with NTSTATUS 0x%x
VNvdimm::GetUnsafeShutdownCountFromDsm: Current USC: %d; Baseline USC: %d
VNvdimm::UpdateBaselineUnsafeShutdownCount: failed to write new baseline with status 0x%x
VNvdimm::HandleDataLossFailures: current USC is less than baseline; updating baseline (current: %d; baseline: %d)
INvdimm::EnableAllAlarms: Get Health Thresholds failed with NTSTATUS 0x%x
INvdimm::EnableAllAlarms: Get Health Thresholds failed with _DSM status 0x%x
INvdimm::EnableAllAlarms: Current thresholds: controller temperature = 0x%x (multiples); media temperature = 0x%x (multiples); percentage remaining = %d
INvdimm::EnableAllAlarms: All alarms were already set.
INvdimm::EnableAllAlarms: Set Health Thresholds failed with NTSTATUS 0x%x
INvdimm::EnableAllAlarms: Set Health Thresholds failed with _DSM status 0x%x
INvdimm::EnableLatchLss: _DSM failed with NTSTATUS 0x%x
INvdimm::EnableLatchLss: _DSM failed with _DSM status 0x%x
INvdimm(): NVDIMM is fatal - ignoring any errors in initializing INVDIMM subcomponents
INvdimm: the constructor failed with initialization status 0x%x
The INVDIMM driver initialized successfully.
%ws%wsINVDIMM device
INvdimm::AcknowledgeUnsafeShutdown: baseline USC updated in the registry to %d
INvdimm::AcknowledgeUnsafeShutdown: error writing updated baseline USC to registry: 0x%x
ErrInj_UnsafeShutdownCount
INvdimm::GetUnsafeShutdownCountFromDsm: The USC error injection registry value exists and is set to %d
INvdimm::GetUnsafeShutdownCountFromDsm: the baseline USC isn't in the registry, so assuming the current value (%d) as the baseline
INvdimm::GetUnsafeShutdownCountFromDsm: NvdQueryDeviceRegistryUlong() failed with NTSTATUS 0x%x
INvdimm::GetUnsafeShutdownCountFromDsm: Current USC: %d; Baseline USC: %d
INvdimm::GetUnsafeShutdownCountFromDsm: failed with NTSTATUS 0x%x
INvdimm::UpdateBaselineUnsafeShutdownCount: failed to write new baseline with status 0x%x
INvdimm::RefreshHealthStatus(): health status failed with _DSM error 0x%x
INvdimm::RefreshHealthStatus(): health status failed with NTSTATUS 0x%x
INvdimm::RefreshHealthStatus(): Faking a health problem because of a registry error injection
INvdimm::RefreshHealthStatus(): energy source _DSM failed with _DSM error 0x%x - assuming not AD-WB
INvdimm::RefreshHealthStatus(): energy source _DSM failed with _DSM error 0x%x while in AD-WB mode
INvdimm::RefreshHealthStatus(): energy source _DSM failed with NTSTATUS 0x%x - assuming not AD-WB
INvdimm::RefreshHealthStatus(): energy source _DSM failed with NTSTATUS 0x%x while in AD-WB mode
INvdimm::ResumeFromHibernate: latched LSS successfully.
Invdimm::ResumeFromHibernate: failed to latch LSS (0x%x)
Unsafe shutdown count
Percentage remaining
Lifetime used %
Media temperature in C
Controller temperature in C
Security state bitmask
Is energy backed
INvdimm::ReinitializeMedia(): Failed to update cached security state with NTSTATUS 0x%x
INvdimm::GetFirmwareInfo(): Failed to get firmware info because the firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::GetFirmwareInfo(): Failed to get fw info with NTSTATUS 0x%x
%I64x
INvdimm::DownloadFirmwareRegions(): Failed to download firmware regions because the firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::SelectFirmwareImageSlot(): Failed to select firmware image slot because the firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::GetCurrentFirmwareRevision(): Failed to get cached firmware revision because the firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::GetDeviceRuntimeFWActivationStatus(): Firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::GetDeviceRuntimeFwActivationInfo(): Failed to get Runtime Fw Activation Info with NTSTATUS 0x%x
INvdimm::SetDeviceRuntimeFwActivationArmState(): Firmware updater initialization failed with NTSTATUS 0x%x
INvdimm::SetDeviceRuntimeFwActivationArmState(): Failed to get Runtime Fw Activation Info with NTSTATUS 0x%x
INvdimm::SetDeviceRuntimeFwActivationArmState(): Abort to set Runtime Fw Activation Arm State with NTSTATUS 0x%x
INvdimm::SetDeviceRuntimeFwActivationArmState(): Failed to set Runtime Fw Activation Arm State with NTSTATUS 0x%x
INvdimm::PassthroughCommand(): Passthrough is disabled because the command effect log couldn't be retrieved (0x%x)
INvdimm::PassthroughCommand: AllowPassthroughCommand() failed with NTSTATUS 0x%x
INvdimm::PassthroughCommand: opcode 0x%x is not allowed
INvdimm::HandleDeviceHealthErrors: fatal status recovered
INvdimm::HandleDeviceHealthErrors: critical status recovered
INvdimm::HandleDeviceHealthErrors: non-critical status recovered
INvdimm::HandleDeviceHealthErrors: excessive temperature recovered
INvdimm::HandleDataLossFailures(): NvdGetLogicalDeviceCount() failed with NTSTATUS 0x%x
INvdimm::HandleDataLossFailures(): Unsafe shutdown ignored because NVDIMM 0x%x is in memory mode or has no logical device created; updating baseline (new USC: %d; baseline: %d)
INvdimm::HandleDataLossFailures: current USC is less than baseline; updating baseline (current: %d; baseline: %d)
FwUpdater::DownloadFirmwareRegions(): ScopeExit: Aborting update because of an error
DownloadFirmwareRegions
FwUpdater::DownloadFirmwareRegions(): Previous runtime FW activation is still in progress (FW activation state = %d)
FwUpdater::DownloadFirmwareRegions(): Device state invalid (Last FW activation status = %d)
FwUpdater::DownloadFirmwareRegions(): Invalid state (state = %d)
FwUpdater::DownloadFirmwareRegions(): Downloading 0x%x bytes at offset 0x%llx; IsLastRegion = %d
FwUpdater::DownloadFirmwareRegions(): The maximum transfer size reported by the _DSM is 0 bytes
FwUpdater::DownloadFirmwareRegions(): splitting region into %d chunks
FwUpdater::DownloadFirmwareRegions(): Error downloading chunk (NTSTATUS 0x%x); giving up
FwUpdater::DownloadFirmwareRegions(): arm device failed with NTSTATUS 0x%x
StartFirmwareUpdate
FwUpdater::StartFirmwareUpdate(): Start FW Update failed with NTSTATUS 0x%x
FwUpdater::StartFirmwareUpdate(): Start FW Update failed with IDSM status 0x%x
FwUpdater::StartFirmwareUpdate(): Start FW Update started. Context = 0x%x
DownloadFirmwareChunk
FwUpdater::DownloadFirmwareChunk(): Downloading 0x%x bytes at offset 0x%llx
FwUpdater::DownloadFirmwareChunk(): specified firmware image size (0x%x) is larger than max data per transfer (0x%x)
FwUpdater::DownloadFirmwareChunk(): The region offset (0x%x) and chunk size (0x%x) exceed the max fw image storage area size (0x%x)
FwUpdater::DownloadFirmwareChunk(): Send FW Update Data call failed with NTSTATUS 0x%x
FwUpdater::DownloadFirmwareChunk(): Send FW Update Data failed with IDSM status 0x%x
FwUpdater::DownloadFirmwareChunk(): Completed the download
FinishFirmwareUpdate
FwUpdater::FinishFirmwareUpdate(): Finishing the firmware update.
FwUpdater::FinishFirmwareUpdate(): Finish FW Update failed with NTSTATUS 0x%x
FwUpdater::FinishFirmwareUpdate(): Finish FW Update failed with IDSM status 0x%x
FwUpdater::FinishFirmwareUpdate(): Finish FW Update _DSM succeeded. Polling for completion (interval = %d usecs; timeout = %d uSecs)
FwUpdater::FinishFirmwareUpdate(): Polling failed with NTSTATUS 0x%x
FwUpdater::FinishFirmwareUpdate(): firmware update timed out after %llu microseconds.
FwUpdater::FinishFirmwareUpdate(): firmware update completed.
AbortFirmwareUpdate
FwUpdater::AbortFirmwareUpdate(): Aborting the firmware update.
FwUpdater::AbortFirmwareUpdate(): Finish FW Update failed with NTSTATUS 0x%x
FwUpdater::AbortFirmwareUpdate(): Finish FW Update failed with IDSM status 0x%x
QueryFinishFirmwareUpdate
FwUpdater::QueryFinishFirmwareUpdateStatus(): Query Finish FW Update Status failed with NTSTATUS 0x%x
FwUpdater::QueryFinishFirmwareUpdateStatus(): Query Finish FW Update Status succeeded (dsmStatus.AsUlong = 0x%x). The new firmware revision is 0x%x
FwUpdater::QueryFinishFirmwareUpdateStatus(): Query Finish FW Update Status failed (dsmStatus.AsUlong = 0x%x)
GetCommandEffectLog: IDsmGetCommandEffectLogInfo() call failed with NTSTATUS 0x%x
GetCommandEffectLog: IDsmGetCommandEffectLogInfo() _DSM status is 0x%x
GetCommandEffectLog: log size is %d bytes
GetCommandEffectLog: IDsmGetCommandEffectLog() call failed with NTSTATUS 0x%x
GetCommandEffectLog: IDsmGetCommandEffectLog() _DSM status is 0x%x
GetCommandEffectLog: IDsmGetCommandEffectLog() _DSM returned a number of opcodes that would exceed the buffer size
INvdimmCommandEffectLog::IsCommandAllowed(): command with side effects allowed because NoSPAMapping is set.
INvdimmCommandEffectLog::IsCommandAllowed(): NvdGetLogicalDeviceCount() failed with NTSTATUS 0x%x
Command 0x%x has been blocked because it has side effects (effect log: 0x%x) and there are %d logical devices associated with this NVDIMM
INvdimmMediaReinitializer::ReinitializeMedia(): NvdGetLogicalDeviceCount() failed with NTSTATUS 0x%x
INvdimmMediaReinitializer::ReinitializeMedia(): The media can't be reinitialized because there are %d logical devices associacted with the NVDIMM
INvdimmMediaReinitializer::ReinitializeMedia(): Secure Erase failed as part of an overwrite with NTSTATUS 0x%x
DoOverwrite(): overwrite request received while overwrite is already in progress
DoSecureErase(): IDsmSecureEraseNvdimm() call failed with NTSTATUS 0x%x
DoSecureErase(): IDsmSecureEraseNvdimm() _DSM status is 0x%x
DoOverwrite(): overwrite request received while cold boot is pending
DoOverwrite(): IDsmOverwriteNvdimm() call failed with NTSTATUS 0x%x
DoOverwrite(): IDsmOverwriteNvdimm() failed with _DSM status 0x%x
DoOverwrite(): Overwrite NVDIMM start
DoOverwrite(): IDsmQueryOverwriteNvdimmStatus() call failed with NTSTATUS 0x%x
DoOverwrite(): IDsmQueryOverwriteNvdimmStatus() returned success (0x%x), overwrite completed
DoOverwrite(): overwrite still in progress (_DSM status: 0x%x)
DoOverwrite(): IDsmQueryOverwriteNvdimmStatus failed with _DSM status 0x%x
INvdimmSecurityManager::GetSecurityState(): Security state is 0x%x
INvdimmSecurityManager::GetSecurityState(): Get Security State failed with _DSM status 0x%x
INvdimmSecurityManager::GetSecurityState(): Get Security State failed with NTSTATUS 0x%x
INvdimmSecurityManager::SetPassphrase(): Passphrase set successfully.
INvdimmSecurityManager::SetPassphrase(): Set Passphrase failed with _DSM status 0x%x
INvdimmSecurityManager::SetPassphrase(): Set Passphrase failed with NTSTATUS 0x%x
INvdimmSecurityManager::UnlockUnit(): NVDIMM unlocked successfully.
INvdimmSecurityManager::UnlockUnit(): Unlock Unit failed with _DSM status 0x%x
INvdimmSecurityManager::UnlockUnit(): Unlock Unit failed with NTSTATUS 0x%x
NvdimmPassphrase
INvdimmSecurityManager(): has cached passphrase: %d
INvdimmSecurityManager(): passphrase is empty - same as no passphrase key
INvdimmSecurityManager(): passphrase conversion to ANSI failed with NTSTATUS 0x%x
INvdimmSecurityManager(): passphrase too long (%d characters; maximum is %d)
INvdimmSecurityManager::InitializeSecurity(): security is disabled and passphrase key is set - enabling security
INvdimmSecurityManager::InitializeSecurity(): security is disabled, passphrase key is set, but we're not enabling security because of a registry setting
INvdimmSecurityManager::InitializeSecurity(): NVDIMM is locked and passphrase key is set - enabling security
INvdimmSecurityManager::InitializeSecurity(): the NVDIMM could not be unlocked: NTSTATUS 0x%x. This is not a fatal error
INvdimmSecurityManager::InitializeSecurity(): NVDIMM is locked but no passphrase key is set
INvdimmSecurityManager::InitializeSecurity(): the security state might have changed; refreshing it
%ws%wsNVDIMM-N device
NvdimmN::HandleDeviceHealthErrors(): NvdGetLogicalDeviceCount() failed with NTSTATUS 0x%x
INvdimm::HandleDataLossFailures(): Unsafe shutdown ignored because NVDIMM 0x%x has no logical device created
NvdnHandleDeviceHealthErrors: lost persistence
NvdnHandleDeviceHealthErrors: regained persistence
NvdnHandleDeviceHealthCheckFailure: putting the disk in read only mode (status = 0x%x)
ScheduleDeferredDsmInitTimer(): set the timer for %d seconds
NvdnDsmDependentInit: NvdnGetDeviceHealthInfo() failed with status %x. Scheduling deferred health check
NvdnDsmDependentInit: failed getting NVDIMM-N identification 0x%x
NvdnDsmDependentInit: failed getting energy source identification 0x%x
NvdnDsmDependentInit: failed getting last backup info with NTSTATUS 0x%x
NvdnDsmDependentInit: Some _DSM dependent routine failed with a retriable error (health: %x, id: %x, energy source: %x). Scheduling deferred init
UnsafeShutdownCount
NvdimmN::AcknowledgeUnsafeShutdown: updated baseline USC to %d
NvdimmN::AcknowledgeUnsafeShutdown: failed to query current USC (0x%x)
Media lifetime remaining %
Energy source lifetime remaining %
Energy source temperature in C
NvdnFirmwareDownloadIoctl: Invalid firmware slot (slot index %d; only %d slots available).
NvdnDownloadFirmwareImageRegion: chunk is not a multiple of region size (0x%x)
NvdnDownloadFirmwareImageRegion: offset is not region aligned (0x%x)
NvdnDownloadFirmwareImageRegion: RegionOffset isn't 0 and this isn't the first download command
NvdnDownloadFirmwareImageRegion: there is an update in progress for a different slot
NvdnDownloadFirmwareImageRegion: starting firmware update for slot %d
NvdnDownloadFirmwareImageRegion: NvdnStartFirmwareUpdate() failed with 0x%x
NvdnDownloadFirmwareImageRegion: startingRegion is too large: 0x%x
NvdnDownloadFirmwareImageRegion: NvdnSendFirmwareUpdateData() failed with 0x%x
NvdnDownloadFirmwareImageRegion: finishing firmware update
NvdnDownloadFirmwareImageRegion: NvdnFinishFirmwareUpdate() failed with 0x%x
NvdnSelectFirmwareImageSlot: _DSM failed with 0x%d
NvdnGetHealthInfo: Failed to call ScmDsmGetCriticalHealthInfo with NTSTATUS 0x%x and DSM status 0x%x
NvdnGetHealthInfo: Failed to call ScmDsmGetNvdimmHealthInfo with NTSTATUS 0x%x and DSM status 0x%x
NvdnGetHealthInfo: Failed to call ScmDsmGetEnergySourceHealthInfo with NTSTATUS 0x%x and DSM status 0x%x
NvdnDeferredDsmDependentInitDpcRoutine: queueing workitem
NvdnDeferredDsmDependentInitDpcRoutine: failed to allocate workitem; trying again
StartFirmwareUpdate: Firmware update already in progress
StartFirmwareUpdate: _DSM failed with 0x%d
NvdnSendFirmwareUpdateData: No firmware update in progress
NvdnSendFirmwareUpdateData: _DSM failed with 0x%d
NvdnFinishFirmwareUpdate: No firmware update in progress
NvdnFinishFirmwareUpdate: _DSM failed with 0x%d
DeviceSaveOpsCompleted
DeviceRestoreOpsCompleted
DeviceEraseOpsCompleted
DevicePowerCycles
NvdWheaPrepareErrorData: Failed to convert unicode string Location to ansi string (0x%x)
NvdimmWheaPrepareErrorData: Unknown Format Interface Code (0x%x)
%x-%x
Simulated NVDIMM device
DeviceErrorTrace
deviceGuid
nfitHandle
serialNumber
traceEventLevel
traceEventMessage
INvdimmFWUpdate
deviceGuid
nfitHandle
serialNumber
firmwareUpdateEvent
status
dsmStatus
firmwareUpdateState
runningFwRevision
updatedFwRevision
updatedFwRevisionFromQuery
INvdimmSecurity
deviceGuid
nfitHandle
serialNumber
enableSecurityIfPassphrasePresent
hasCachedPassphrase
status
previousSecurityEnabled
previousSecurityLocked
previousSecurityFrozen
previousPasswordLimitReached
previousSecurityNotSupported
securityEnabled
securityLocked
securityFrozen
passwordLimitReached
securityNotSupported
biosSecurityNonceSet
securityAction
securityActionStatus
refreshSecurityState
updateSecurityStatsStatus
INvdimmDataLoss
deviceGuid
nfitHandle
serialNumber
baselineShutdownCount
currentShutdownCount
lostDataThisBoot
INvdimmHealth
deviceGuid
nfitHandle
serialNumber
healthCheckStatus
dsmStatus
reason
validityFlags
unsafeShutdownCount
lostDataThisBoot
isDimmEnergyBacked
energySourceFailed
nonCriticalStatus
criticalStatus
fatalStatus
percentageRemaining
percentageUsed
percentageRemainingLessOrEqualOnePercent
packageSparingOccurred
capSelfTestWarning
percentageRemainingIsZero
disFailureAfterPackageSparing
aitDramStateDisabled
capSelfTestFailed
criticalInternalStateFailure
performanceDegraded
capSelfTestCommunicationFailure
idsmHealthInfo
DeviceRemoved
deviceGuid
nfitHandle
serialNumber
surpriseRemoval
DeviceStarted
PartA_PrivTags
deviceGuid
nfitHandle
serialNumber
formatInterfaceCode
numFormatInterfaceCodes
status
failureReason
vendorId
productId
firmwareInitializationStatus
currentFirmwareRevision
slotNumber
persistentMemorySizeInBytes
lostDataThisBoot
backupFailure
restoreFailure
notArm
platformFlushFailure
healthEvent
noSPAMapping
NvdimmNHealth
deviceGuid
nfitHandle
serialNumber
reason
healthCheckStatus
criticalDsmStatus
lostPersistence
warningThresholdExceeded
persistenceRestored 
belowWarningThreshold 
nvdimmDsmStatus
moduleHealth
currentModuleTemperature
errorThresholdStatus
warningThresholdStatus
nvmLifetimePercentage
uncorrectableMemoryErrorCount
correctableMemoryErrorAboveThresholdEventCount
esDsmStatus
esLifetimePercentage
esTemperatureEncoded
esRuntimeSinceManufacturingInHours
NvdimmNBootStatus
deviceGuid
nfitHandle
serialNumber
opStatNtStatus
lastBackupNtStatus
oldValuesValid
newPowerCycles
newSaves
newRestores
newErases
backupFailure
restoreFailure
notArm
platformFlushFailure
healthEvent
opStatDsmStatus
lastSaveDuration_ms
lastRestoreDuration_ms
lastEraseDuration_ms
lifetimeSaves
lifetimeRestores
lifetimeErases
lifetimePowerCycles
lastBackupInfoDsmStatus
nvmDataValid
startSaveCmd
saveN
saveFailureInformation
NvdimmNIdentification
deviceGuid
nfitHandle
serialNumber
nvdimmIdentificationNtStatus
esIdentificationNtStatus
vendorId
productId
dsmStatus
specRevision
hardwareRevision
firmwareRevision
currentFirmwareSlot
firmwareSlotCount
capabilities
maxOperationRetryCount
saveTimeout
restoreTimeout
eraseTimeout
armTimeout
firmwareOperationsTimeout
abortTimeout
minOperatingTemp
maxOperatingTemp
regionBlockSize
esDsmStatus
esDeviceManagedPolicySupported
esHostManagedPolicySupported
esDeviceHardwareRevision
esDeviceFirmwareRevision
esDeviceAutoHealthFrequencyValueInDays
esDeviceAutoHealthFrequencyValueInWeeks
esDeviceChargeTimeout
esDeviceMinOperatingTemp
esDeviceMaxOperatingTemp
esDeviceAttributes
esDeviceTechnology
esHostAutoHealthFrequencyValueInDays
esHostAutoHealthFrequencyValueInWeeks
esHostAttributes
esHostTechnology
NvdimmNHealthStatusChange
deviceGuid
nfitHandle
serialNumber
reason
healthStatusChanged
timeSinceLastHealthStatusChange_ms
oldLostPersistenceGuarantee
newLostPersistenceGuarantee
VNvdimmDataLoss
deviceGuid
nfitHandle
serialNumber
baselineShutdownCount
currentShutdownCount
lostDataThisBoot
VNvdimmHealth
deviceGuid
nfitHandle
serialNumber
healthCheckStatus
dsmStatus
healthInfo
reason
Microsoft.Windows.Storage.Nvdimm
RSDSfK
nvdimm.pdb
.text
.text$mn
.text$mn$00
.text$mn$21
.rdata$brc
.rdata
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
.data$brc
.data
.pdata
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
fogrp
.gfids
.rsrc$01
.rsrc$02
IoAcquireRemoveLockEx
IoRegisterDeviceInterface
IoAllocateWorkItem
IoReleaseRemoveLockEx
EtwSetInformation
PoCallDriver
RtlFreeUnicodeString
_vsnprintf
RtlInitUnicodeString
PoRequestPowerIrp
IoDeleteDevice
IoInitializeRemoveLockEx
RtlCopyUnicodeString
PoSetPowerState
IoAttachDeviceToDeviceStack
EtwWriteTransfer
ExAllocatePool2
EtwUnregister
EtwWrite
EtwRegister
IoCreateDevice
IofCallDriver
ExFreePoolWithTag
IoQueueWorkItem
IofCompleteRequest
PoStartNextPowerIrp
_vsnwprintf
IoReleaseRemoveLockAndWaitEx
IoInvalidateDeviceState
IoSetDeviceInterfaceState
IoDetachDevice
KeInitializeSpinLock
IoSetDevicePropertyData
IoGetActivityIdIrp
IoDeleteSymbolicLink
IoCreateSymbolicLink
KeFlushQueuedDpcs
KeGetCurrentIrql
RtlQueryRegistryValuesEx
IoOpenDeviceRegistryKey
IoBuildDeviceIoControlRequest
KeSetEvent
ZwDeleteValueKey
KeInitializeEvent
KeWaitForSingleObject
ZwClose
ZwSetValueKey
ZwOpenKey
KeReleaseInStackQueuedSpinLock
IoReportTargetDeviceChangeAsynchronous
IoFreeWorkItem
KeAcquireInStackQueuedSpinLock
IoBuildSynchronousFsdRequest
KeInitializeMutex
_purecall
KeReleaseMutex
RtlFreeAnsiString
KeDelayExecutionThread
KeInvalidateAllCaches
RtlUnicodeStringToAnsiString
KeInitializeDpc
KeQueryUnbiasedInterruptTime
KeInitializeTimer
KeCancelTimer
KeSetCoalescableTimer
ntoskrnl.exe
NvpoA
NvpoH
D!C03
x ATAVAWH
0A_A^A\
UVWATAUAVAWH
D8d$`u.L
D8d$`u
fD9"t
A_A^A]A\_^]
WAVAWH
 A_A^_
t$ AVH
t$ AVH
x ATAVAWH
 A_A^A\
x AVH
WAVAWH
u\fD;
 A_A^_
x AUAVAWH
@A_A^A]
UATAUAVAWH
0A_A^A]A\]
VWAVH
 A^_^
teD!M
L$0E3
L$0E3
L$0E3
L$(E3
WATAVH
0A^A\_
D$PE3
D$(E3
L$PE3
NvguH
l$ VWATAVAWH
NvguH
A_A^A\_^
UVWAVAWH
NvguA;
A_A^_^]
UWATAVAWH
A_A^A\_]
L$PH3
VWATAVAWH
NvfwH
A_A^A\_^
USVWATAUAVAWH
t$ E3
EH@8}
hA_A^A]A\_^[]
|$ UATAUAVAWH
D$0E3
A_A^A]A\]
9ODu/D8C
xnfD9
UVWATAUAVAWH
|$ E3
fD9mB
|$ E3
0A_A^A]A\_^]
VWAVH
L$PfE
0A^_^
VWAVH
 A^_^
p WATAUAVAWH
u_@8;
A_A^A]A\_
L$pH3
x AVH
D$(E3
D$PA#
D$dA#
D$xE3
|$ UATAUAVAWH
A_A^A]A\]
VWAVH
t#9|$Ht[f
 A^_^
t$ WH
@8l$:u
x UATAUAVAWH
A_A^A]A\]
NvpoH
L$0H3
WEVT_TEMPLATE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
NVDIMM device driver
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
nvdimm.sys
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
nvdimm.sys
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
Critical
Error
Warning
Information
System
The driver for NVDIMM %1 encountered an internal error. The information in the Details tab might help Microsoft or your platform vendor to diagnose the problem.
NVDIMM %1 logged:
            %n
            %n %2
The driver could not confirm that the NVDIMM %1 is healthy. Consider backing up your data to another disk.
NVDIMM-N %1 has encountered %7 uncorrectable memory error(s). Uncorrectable memory errors can cause system instability and data loss. Consider replacing this NVDIMM-N.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM-N can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
The warning threshold for correctable memory errors on NVDIMM-N %1 has been exceeded. A large number of correctable memory errors increases the likelihood of an uncorrectable memory error in the future and reduces system performance. Contact your hardware vendor to determine if this NVDIMM-N needs to be replaced.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM-N can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
NVDIMM %1 encountered a serious problem. All data that was saved to this NVDIMM may be lost when the computer shuts down or restarts. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
The problem with NVDIMM %1 was resolved. Data that was saved to this NVDIMM will not be lost when the computer shuts down or restarts.
NVDIMM %1 encountered a serious problem. Data that was recently saved to this NVDIMM may be lost when the computer shuts down or restarts. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
The problem with NVDIMM %1 was resolved. Data that was saved to this NVDIMM will not be lost when the computer shuts down or restarts.
NVDIMM %1 encountered a critical problem. Windows may not be able to read or write to this NVDIMM.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
The critical problem with NVDIMM %1 was resolved.
NVDIMM %1 is in a degraded health state and may soon encounter serious problems. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
NVDIMM %1 is locked and you won't be able to access its contents. Contact your platform vendor to learn how you can unlock the NVDIMM.
NVDIMM %1 failed to start. %3
NVDIMM %1 started successfully.
NVDIMM %1 encountered an error that may have caused data loss.
NVDIMM %1 encountered an error while transferring your data to or from persistent media (see the Details tab for more information). Some of your data may have been lost.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM may need to be replaced. It can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
NVDIMM %1 encountered an error that makes it unable to save your data if your computer shuts down. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM may need to be replaced. It can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
NVDIMM-N %1 encountered a serious problem that may cause data saved to this NVDIMM-N to be lost when the computer shuts down or restarts. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM-N may need to be replaced. It can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
The problem with NVDIMM-N %1 was resolved. Data saved to this NVDIMM-N is no longer at risk.
                   %n
                   %nThis NVDIMM-N may be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
NVDIMM-N %1 is in a degraded health state and may soon encounter serious problems. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
                   %n
                   %nThis NVDIMM-N may need to be replaced. It can be located using the following information:
                   %n
                   %nSlot number: %3
                   %nManufacturer: %4
                   %nModel Number: %5
                   %nSerial Number: %6
                   %nLocation: %7
NVDIMM %1 notified the driver that its health state changed. See the Details tab for more information.
NVDIMM %1 is in a critically unhealthy state and your data may be lost. Consider backing up your data to another disk.
                  %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
NVDIMM %1 is in a critically degraded state and may need to be replaced soon. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
NVDIMM %1's temperature is too high. To protect itself, the NVDIMM might be running slower than usual. If the temperature does not decrease, the system might shut down and some of your data may be lost.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
NVDIMM %1 is in a degraded state and may need to be replaced soon. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
NVDIMM %1 is now healthy again.
The energy source protecting NVDIMM %1 stopped working. The data saved to this NVDIMM may be lost when the computer shuts down or restarts. Consider backing up your data to another disk.
                   %n
                   %nIn PowerShell, run Get-PmemPhysicalDevice for more information and Get-PmemDisk to see which disks are affected by this problem.
The energy source protecting NVDIMM %1 is working again. The data saved to this NVDIMM is no longer at risk.
The driver encountered an internal error.
The driver could not read the device's serial number.
The driver could not discover the device's unsafe shutdown count.
The driver could not register to be notified of health-related events on the NVDIMM.
The driver could not confirm that the NVDIMM is healthy.
The driver could not discover whether boot-time operations, like save and restore, succeeded.
WEVTlY
System
Microsoft-Windows-PersistentMemory-Nvdimm/Analytic
Microsoft-Windows-PersistentMemory-Nvdimm/Diagnostic
Microsoft-Windows-PersistentMemory-Nvdimm/Operational
StartDeviceFailure
EventData
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
Reason
Status
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
Reason
Status
oA"BYdx
EventData
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
TEMPT
EventData
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
UnsafeShutdownCount
BaselineUnsafeShutdownCount
DeviceGuid
NfitHandle
VendorId
ProductId
SerialNumber
Location
UnsafeShutdownCount
BaselineUnsafeShutdownCount
TEMPx
EventData
DeviceGuid
NfitHandle
LostDataPersistence
LostWritePersistence
FatalError
LostDataPersistenceImminent
LostWritePersistenceImminent
FatalErrorImminent
NvdimmNotArmed
DeviceGuid
NfitHandle
LostDataPersistence
LostWritePersistence
FatalError
LostDataPersistenceImminent
LostWritePersistenceImminent
FatalErrorImminent
NvdimmNotArmed
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
NtStatus
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
NtStatus
TEMP,
EventData
DeviceGuid
Message
DeviceGuid
Message
TEMP(
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
SaveFailed
RestoreFailed
PlatformFlushFailed
ArmFailed
TechnologySpecificDetails
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
SaveFailed
RestoreFailed
PlatformFlushFailed
ArmFailed
TechnologySpecificDetails
SHkt&j
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
LostPersistence
WarningThresholdExceeded
PersistenceRestored
BelowWarningThreshold
#ModuleHealth_VoltageRegulatorFailed
ModuleHealth_VddLost
ModuleHealth_VppLost
ModuleHealth_VttLost
!ModuleHealth_DramNotInSelfRefresh
$ModuleHealth_ControllerHardwareError
ModuleHealth_NvmControllerError
ModuleHealth_NvmLifetimeError
#ModuleHealth_NotEnoughEnergyForSave
!ModuleHealth_InvalidFirmwareError
ModuleHealth_ConfigDataError
"ModuleHealth_NoEnergySourcePresent
%ModuleHealth_EnergySourcePolicyNotSet
&ModuleHealth_EnergySourceHardwareError
.ModuleHealth_EnergySourceHealthAssessmentError
EncodedModuleTemperature
ErrorThreshold_NvmLifetimeError
(ErrorThreshold_EnergySourceLifetimeError
+ErrorThreshold_EnergySourceTemperatureError
#WarningThreshold_NvmLifetimeWarning
,WarningThreshold_EnergySourceLifetimeWarning
/WarningThreshold_EnergySourceTemperatureWarning
NvmLifetimePercentage
UncorrectableMemoryErrorCount
.CorrectableMemoryErrorAboveThresholdEventCount
LastBackup_TriggerInformation
!LastBackup_SaveFailureInformation
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
LostPersistence
WarningThresholdExceeded
PersistenceRestored
BelowWarningThreshold
ModuleHealth_VoltageRegulatorFailed
ModuleHealth_VddLost
ModuleHealth_VppLost
ModuleHealth_VttLost
ModuleHealth_DramNotInSelfRefresh
ModuleHealth_ControllerHardwareError
ModuleHealth_NvmControllerError
ModuleHealth_NvmLifetimeError
ModuleHealth_NotEnoughEnergyForSave
ModuleHealth_InvalidFirmwareError
ModuleHealth_ConfigDataError
ModuleHealth_NoEnergySourcePresent
ModuleHealth_EnergySourcePolicyNotSet
ModuleHealth_EnergySourceHardwareError
ModuleHealth_EnergySourceHealthAssessmentError
EncodedModuleTemperature
ErrorThreshold_NvmLifetimeError
ErrorThreshold_EnergySourceLifetimeError
ErrorThreshold_EnergySourceTemperatureError
WarningThreshold_NvmLifetimeWarning
WarningThreshold_EnergySourceLifetimeWarning
WarningThreshold_EnergySourceTemperatureWarning
NvmLifetimePercentage
UncorrectableMemoryErrorCount
CorrectableMemoryErrorAboveThresholdEventCount
LastBackup_TriggerInformation
LastBackup_SaveFailureInformation
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
MemoryEventCount
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
MemoryEventCount
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
FatalStatus
CriticalStatus
NonCriticalStatus
SpareBlocksRemainingPercentage
LifetimePercentageUsed
AlarmTrip_SpareBlocksRemaining
AlarmTrip_MediaTemperature
AlarmTrip_ControllerTemperature
MediaTemperatureInMultiple
ControllerTemperatureInMultiple
UnsafeShutdownCount
AitDramStatus
LastShutdownStatus
HealthCheckStatus
IsEnergyBacked
EnergySourceFailed
EnergySourceHealthCheckStatus
VendorSpecificDataSize
VendorSpecificData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
FatalStatus
CriticalStatus
NonCriticalStatus
SpareBlocksRemainingPercentage
LifetimePercentageUsed
AlarmTrip_SpareBlocksRemaining
AlarmTrip_MediaTemperature
AlarmTrip_ControllerTemperature
MediaTemperatureInMultiple
ControllerTemperatureInMultiple
UnsafeShutdownCount
AitDramStatus
LastShutdownStatus
HealthCheckStatus
IsEnergyBacked
EnergySourceFailed
EnergySourceHealthCheckStatus
VendorSpecificDataSize
VendorSpecificData
EventData
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
SecurityState
DeviceGuid
NfitHandle
SlotNumber
VendorId
ProductId
SerialNumber
Location
SecurityState
PRVAh
Microsoft-Windows-PersistentMemory-Nvdimm
win:Critical
win:Error
win:Warning
win:Informational
WEVT_TEMPLATE
en-US
Zn\B]
\"]n]
W@XvZY]
^4_f_
]4^J^
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
9Ocr4
Ge]L*
E0C1)0'
 Microsoft Operations Puerto Rico1
229879+4675790
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
jFtg)]
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
]o@kU%
,lF77scGKiAhR1KQz2bRUeFW0KiNbVzwhjhCq16LiPmk=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
{znwc
20220506222141.653Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:8A82-E34F-9DDA1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190516Z
230228190516Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:8A82-E34F-9DDA1%0#
Microsoft Time-Stamp Service0
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
^Y1j%G5
_`.oI
.LWM&x
]}Nh@y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:8A82-E34F-9DDA1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220506200058Z
20220507200058Z0w0=
1/0-0
1(0&0
=Xao_Q
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
sbl~0
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
U'/f|
3.5_2
enGb*
