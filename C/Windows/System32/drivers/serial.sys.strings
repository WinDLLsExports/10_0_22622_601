!This program cannot be run in DOS mode.
Richl
.text
h.rdata
H.data
.pdata
H.idata
HPAGESRP0
`PAGESER
`fothk
`INIT
bGFIDS
B.rsrc
B.reloc
t$I9H
L$ UVWATAUAVAWH
pA_A^A]A\_^]
@UVWATAUAVAWH
9Glu2
9Ghu'L
pA_A^A]A\_^]
t$ WH
L$8H9
WATAUAVAWH
$?tA<
 A_A^A]A\_
x AVH
x AVH
$`<`t
)t$0A
tY;L$(
L$$A#
ta;T$(
$`<`u
+D$,;
(t$0H
L$ E3
T$(E3
H;C`|
VWAVH
 A^_^
H9?t*H
x ATAVAWH
 A_A^A\
VWAVH
 A^_^
L$ E3
x ATAVAWH
COMXM
COMXI
COMXf
A_A^A\
L$ E3
-fffffff
fffffff
fffffff
fffffff
.fffffff
fffffff
fffffff
fffff
AQAPRQPH
(D$ H
0XYZAXAY
ffffff
fffff
fffff
>SerialCommError(%X)
Dispatch entry for: %x
>SerialFlush(%X, %X)
Complete Irp: %X
>SerialStartImmediate(%X)
>SerialCompleteImmediate(%X)
>SerialTimeoutImmediate(%X)
>SerialReleaseResources(%X)
Release - disconnecting interrupt %X
FALSE
>SerialDisableInterfaces(%X, %s)
>SerialRemoveDevObj(%X)
>SerialKillPendingIrps(%X)
>SerialSingleToMulti(%X)
>SerialAddToMulti(%X)
old ext %X
>SerialInitMultiPort(%X, %X, %X)
Initializing for configuration record of %wZ
Kernel debugger is using port at address %X
Could not map memory for device registers for %wZ
Could not map memory for interrupt status for %wZ
DoesPortExist test failed for %wZ
disabled port %wZ as requested in configuration
Fifo's detected at port address: %x
>SerialFindInitController(%X, %X)
Attempting to init %wZ
------- PortAddress is %x
------- Interrupt Status is %x
------- BusNumber is %d
------- BusType is %d
------- AddressSpace is %d
------- Interrupt Mode is %d
Error in config record for %wZ
------  registers wrap around physical memory
Error in config record for %wZ
------  status wraps around physical memory
Error in config record for %wZ
------- Interrupt status overlaps regular registers
Comparing it to %wZ
------- already in the device list
------- PortAddress is %x
------- Interrupt Status is %x
------- BusNumber is %d
------- BusType is %d
------- AddressSpace is %d
Error in config record for %wZ
------- Register address overlaps with
------- previous serial device
Error in config record for %wZ
------- status address overlaps with
------- previous serial device registers
Error in config record for %wZ
------- status address overlaps with
------- previous serial status register
Error in config record for %wZ
------- register address overlaps with
------- previous serial status register
Configuration error for %wZ
------- Same multiport - different interrupts
Matched to %x
Becoming sharer: %08X %08X %08X
Starting or queuing set mask irp %x
Starting or queuing wait mask irp%x
Setting DTR for %x
Clearing DTR for %x
Setting Rts for %x
Clearing Rts for %x
Processing DTR flow for %x
Removing DTR block on reception for %x
Setting DTR block on reception for %x
Removing dtr block of reception for %x
removing dtr block of reception for %x
Processing RTS flow
Removing rts block of reception for %x
Setting rts block of reception for %x
Clearing rts block of reception for %x
TOGGLE Clearing rts block of reception for %x
>SerialStartTimerLowerRTS(%X)
Close prologue failed for: %x
Close open count bad for: 0x%x
Count: %x  Addr: 0x%x
Draining DPC's: %x
DPC's drained: %x
>SerialRead(%X, %X)
>SerialStartRead(%X)
>SerialCompleteRead(%X)
>SerialReadTimeout(%X)
>SerialIntervalReadTimeout(%X)
>SerialUnstallIrps(%X)
Unstalling Irp 0x%x with 0x%x
STARTMASK - CurrentMaskIrp: %x
SERIAL - %x is a SETMASK irp
%x was the first irp processed by this
------- invocation of startmask
Perhaps another mask irp was found in the queue
------- %x/%x <- values should be the same
WaitIrp is invalid
------- IsrWaitMask: %x
------- CurrentWaitIrp: %x
%x irp was already marked as cancelled
%x will become the current wait irp
The isr still owns the irp %x, mask location is %x
------- and system buffer is %x
The isr owns the irp %x, mask location is %x
------- and system buffer is %x
%x occurred prior to the wait - starting the
------- completion code for %x
Set mask location of %x, in irp %x, with system buffer of %x
Canceling wait for irp %x
>SerialCompleteWait(%X)
Completing wait for irp %x
>SerialWrite(%X, %X)
>SerialStartWrite(%X)
>SerialCompleteWrite(%X)
>SerialWriteTimeout(%X)
>SerialCompleteXoff(%X)
>SerialTimeoutXoff(%X)
\Device\Serial
Enter SerialAddDevice with PPdo 0x%x
MultiportDevice
*PNP0502
*PNP0501
for device %x
Sharing I/O port for device %x
Sharing interrupt for device %x
Globally sharing interrupt for device %x
SerialRelinquishPowerPolicy
EnablePowerManagement
pDevExt: Interrupt %x
-------               OurIsr %x
About to connect to interrupt for port %wZ
------- address of extension is %x
IoConnectInterrupt Args:
Interrupt           %x
OurIsr              %x
OurIsrContext       %x
Vector              %x
Irql                %x
InterruptMode       %x
InterruptShareable  %x
ProcessorAffinity   %x
FALSE
Couldn't connect to interrupt for %wZ
Connected interrupt %08X
resource pointer is %x
TR resource pointer is %x
SerialIoResourcesIndex
DisablePort
ForceFifoEnable
RxFIFO
TxFIFO
MaskInverted
Share System Interrupt
PortIndex
Indexed
ClockRate
TL16C550C Auto Flow Control
PortAddress
Interrupt
PortName
Identifier
DosDevices
Read name %wZ
SerialSkipExternalNaming
DosName is %wZ
Couldn't create the symbolic link
for port %wZ
SERIALCOMM
Couldn't create the device map entry
------- for port %wZ
Couldn't register class association
for port %wZ
Couldn't set class association
 for port %wZ
In SerialUndoExternalNaming for
extension: %x of port %wZ
Deleting Link %wZ
Couldn't delete value entry %wZ
BreakOnEntry
DebugLevel
PermitShare
LogFifo
UartRemovalDetect
RtlQueryRegistryValuesEx
PDevExt: %x
SetPowerD0 has IRP %x
serial.pdb
.text$mn
.text$mn$00
.text$mn$21
.rdata$brc
.gehcont
.giats
.rdata
.rdata$zzzdbg
.xdata
.data$brc
.data
.pdata
.idata$5
.00cfg
.idata$2
.idata$3
.idata$4
.idata$6
PAGESRP0
PAGESER
fogrp
.gfids
.rsrc$01
.rsrc$02
IofCompleteRequest
KeAcquireSpinLockRaiseToDpc
KeReleaseSpinLock
IoAcquireCancelSpinLock
IoReleaseCancelSpinLock
KeSynchronizeExecution
MmLockPagableDataSection
ExAllocatePool2
MmUnlockPagableImageSection
KeInitializeSpinLock
IoDisconnectInterrupt
ExFreePoolWithTag
KeRemoveQueueDpc
MmUnmapIoSpace
KeWaitForSingleObject
PoSetPowerState
IoGetConfigurationInformation
IoWMIRegistrationControl
IoDetachDevice
IoDeleteDevice
IoCancelIrp
MmGetPhysicalAddress
KeInitializeTimer
KeInitializeDpc
KfRaiseIrql
KeLowerIrql
MmMapIoSpaceEx
__C_specific_handler
KeInsertQueueDpc
ExAcquireFastMutex
ExReleaseFastMutex
MmQuerySystemSize
MmLockPagableSectionByHandle
KeDelayExecutionThread
KeSetEvent
KeGetCurrentIrql
KeCancelTimer
KeSetTimer
IofCallDriver
PoCallDriver
IoAllocateErrorLogEntry
IoWriteErrorLogEntry
IoInvalidateDeviceState
RtlAppendUnicodeToString
RtlInitUnicodeString
RtlIntegerToUnicodeString
RtlAppendUnicodeStringToString
IoCreateDevice
KeInitializeEvent
IoAttachDeviceToDeviceStack
IoOpenDeviceRegistryKey
ZwClose
IoConnectInterrupt
IoQueryDeviceDescription
IoCreateSymbolicLink
RtlWriteRegistryValue
IoRegisterDeviceInterface
IoSetDeviceInterfaceState
IoDeleteSymbolicLink
RtlDeleteRegistryValue
RtlIsStateSeparationEnabled
RtlQueryRegistryValues
MmGetSystemRoutineAddress
ZwQueryValueKey
PoStartNextPowerIrp
PoRequestPowerIrp
KeClearEvent
ntoskrnl.exe
KdComPortInUse
HAL.dll
WmiSystemControl
WmiCompleteRequest
WMILIB.SYS
|$ UATAUAVAWH
D9{4u
D8{4u
8S4u!
rD9K8
A_A^A]A\]
x ATAVAWH
COMXA
0A_A^A\
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
COMXfD
A_A^A]A\_^]
UVWATAUAVAWH
fD9lE
pA_A^A]A\_^]
UVWATAUAVAWH
COMXH
D9t$p
COMXH
A_A^A]A\_^]
UATAUAVAWH
|$(E3
D9C`uJ
{\D9C0
D$ E3
A_A^A]A\]
\$ UVWATAUAVAWH
d$ E3
d$ E3
d$ E3
@A_A^A]A\_^]
D9m@L
fD9,Bu
fD9,Bu
COMXH
d$ E3
L9g8u
H D9`
x AVH
VWAVH
@A^_^
9|$prXH
L$0E3
L$0E3
x ATAVAWH
 A_A^A\
VWAVH
@A^_^
UVWAVAWH
L$`H3
pA_A^_^]
SVWATAUAVAWH
E8gDt
COMXH
D$8D9
D$8D9
@A_A^A]A\_^[
x AWH
t$ WH
UVWATAUAVAWH
|$ E3
0A_A^A]A\_^]
VWAVH
0A^_^
WAVAWH
 A_A^_
@USVWATAUAVAWH
N`H;Nx|
A_A^A]A\_^[]
t/H9Q
H96u,H
I!B H
t$ UWAUAVAWH
0A_A^A]_]
UVWATAUAVAWH
0A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
COMXH
UVWATAUAVAWH
COMX@
L$0A9
L$0A9
L$0A9
A_A^A]A\_^]
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Serial Device Driver
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
serial.sys
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
serial.sys
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
The kernel debugger is already using %2.
While validating that %2 was really a serial port, a fifo was detected. The fifo will be used.
User configuration data for parameter %2 overriding firmware configuration data.
Disabling %2 as requested by the configuration data.
Unable to create the symbolic link for %2.
Unable to create the device map entry for %2.
Unable to delete the device map entry for %2.
There is a serial mouse using the same interrupt as %2.  Therefore, %2 will not be started.
There was a serial mouse found on %2.  Therefore, %2 will be assigned to the mouse.
Another driver on the system, which did not report its resources, has already claimed the interrupt used by %2.
Not enough resources were available for the driver.
The baud clock rate configuration is not supported on device %2.
The hardware locations for %2 could not be translated to something the memory management system could understand.
The hardware resources for %2 are already in use by another device.
No memory could be allocated in which to place new data for %2.
While validating that %2 was really a serial port, the interrupt enable register contained enabled bits in a must be zero bitfield.
The device is assumed not to be a serial port and will be deleted.
While validating that %2 was really a serial port, the modem control register contained enabled bits in a must be zero bitfield.
The device is assumed not to be a serial port and will be deleted.
While validating that %2 was really a serial port, the interrupt id register contained enabled bits in a must be zero bitfield.
The device is assumed not to be a serial port and will be deleted.
While validating that %2 was really a serial port, the baud rate register could not be set consistantly.
The device is assumed not to be a serial port and will be deleted.
Some firmware configuration information was incomplete.
No Parameters subkey was found for user defined data.  This is odd, and it also means no user configuration can be found.
Specific user configuration data is unretrievable.
On parameter %2 which indicates a multiport card, must have a port index specified greater than 0.
On parameter %2 which indicates a multiport card, the port index for the multiport card is too large.
The bus type for %2 is not recognizable.
The bus type for %2 is not available on this computer.
The bus specified for %2 does not support the specified method of interrupt.
User configuration for parameter %2 must have %3.
The user specified port for %2 is way too high in physical memory.
The status port for %2 is way too high in physical memory.
The status port for %2 overlaps the control registers for the device.
The control registers for %2 overlaps with the %3 control registers.
The status register for %2 overlaps the %3 control registers.
The status register for %2 overlaps with the %3 status register.
The control registers for %2 overlaps the %3 status register.
Two ports, %2 and %3, on a single multiport card can't have two different interrupts.
Parameter %2 data is unretrievable from the registry.
While validating that %2 was really a serial port, the contents of the divisor latch register was identical to the interrupt enable and the receive registers.
The device is assumed not to be a serial port and will be deleted.
Could not translate the user reported I/O port for %2.
Could not get the user reported interrupt for %2 from the HAL.
Could not translate the user reported Interrupt Status Register for %2.
Could not report the discovered legacy device %2 to the IO subsystem.
Error writing to the registry.
Could not report device %2 to IO subsystem due to a resource conflict.
The serial driver detected a hardware failure on device %2 and will disable this device.
en-US
Z!\:\
