!This program cannot be run in DOS mode.
}3Rich+
.text
h.rdata
H.data
.pdata
H.idata
HINIT
bGFIDS
B.rsrc
B.reloc
L$ SUVWH
X_^][
|$ UATAUAVAWH
A_A^A]A\]
|$ UH
D$8E3
9|$(u\H
VWATAUAVH
u*A8>u
A8>u @89u
H9=J`
@8=C^
A^A]A\_^
\$ UVWATAUAVAWH
t:A8v
t @8wht
A_A^A]A\_^]
t$ WAVAWH
t'D8wht!
D$XE3
w$t;E
A_A^_
@SUVWAVH
A^_^][
D$0E3
SUVWATAUAVAWH
XA_A^A]A\_^][
t*,$<
WAVAWH
0A_A^_
@SUVWATAVAWH
@A_A^A\_^][
@USVWATAUAVAWH
D+uXu
XA_A^A]A\_^[]
L$@H3
UVWAVAWH
@A_A^_^]
WATAUAVAWH
A_A^A]A\_
UAVAWH
A_A^]
UAVAWH
A_A^]
UAVAWH
A_A^]
UAVAWH
A_A^]
WAVAWH
0A_A^_
t$ WATAUAVAWH
0A_A^A]A\_
\$ UVWATAUAVAWH
L$4A;
A_A^A]A\_^]
UVWATAUAVAWH
M@fA9E
EX@8s
pA_A^A]A\_^]
B*D8J
WAVAWH
 A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
D$8Ik
t$ WAVAWH
D8zIt
D8zhu
fD9{<t
D8{>t
D8{ht,E
D8{luuD8{muoD8
D8{ht
0A_A^_
WATAUAVAWH
0A_A^A]A\_
t$ WAVAWH
0A_A^_
x AVH
VWAVH
@SVWH
\$ UVWATAUAVAWH
D$XE3
fD9m<
L$XH3
`A_A^A]A\_^]
D$0Hk
x AVE
A A9@ s
A$A9@$s
A(A9@(s
WATAUAVAWH
D9't!
D9&t!
E9&t!
0A_A^A]A\_
x AVH
WATAUAVAWH
0A_A^A]A\_
\$ UVWH
\$ UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
 A_A^A\
x AVH
WAVAWH
7D9>s
 A_A^_
WATAUAVAWH
 A_A^A]A\_
UVWAVAWH
D$XE3
A_A^_^]
@USVWAVH
A^_^[]
WAVAWH
A_A^_
t$ WATAUAVAWH
T$PA+
A_A^A]A\_
x ATAVAWH
0A_A^A\
x ATAVAWH
A_A^A\
WAVAWH
H98tu
A_A^_
x AVH
A9Q t,
x AVH
H98tk
x AVH
D9p u/D
UVWAVAWH
@A_A^_^]
VWAVH
@A^_^
L$`H3
t$ WATAUAVAWH
0A_A^A]A\_
x AUAVAWH
@A_A^A]
x AUAVAWH
fD9}<
fD9}<
D8}Hu
@A_A^A]
WATAUAVAWH
0A_A^A]A\_
UVWATAUAVAWH
PA_A^A]A\_^]
|$0E3
UVWAVAWH
 A_A^_^]
x AVH
UVWATAUAVAWH
@8|$@H
@8|$@H
D$DA#
A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
L$ SWH
K SWH
@SUVWAVH
A^_^][
t$0L+
D$0H+
L$pH3
L$PHi
L$hH3
WATAUAVAWH
T$8E3
\$ E3
A_A^A]A\_
ffffff
fffffff
ffffff
ffffff
fffffff
ffffff
fffffff
fffffff
fffffff
dump=1;
FindAdapter> Memory Dump Driver
Failed StorPortGetBusData() call
Not LSI 3ware 9750 adapter: VenID=%04X DevID=%04X
3ware
%s%s - %s
11-Apr-13
5.01.00.051
%s (%u-%u) %s
Sizeof(OrgCmd)    = %u bytes
Sizeof(NewCmd)    = %u bytes
Sizeof(CmonCmd)   = %u bytes
Sizeof(CmonLcmd)  = %u bytes
Sizeof(SenseBuff) = %u bytes
Sizeof(ReqInfo)   = %u bytes
Sizeof(CmonInfo)  = %u bytes
Sizeof(SRB Ext)   = %u bytes
Sizeof(DeviceX)   = %u bytes
PCI\VEN_%04X&DEV_%04X&SUBSYS_%04X%04X
VenID=%04X DevID=%04X SubSysId=%04X
DMA address: %u bit
Allocated packet size: %u bytes
Max fware packet size: %u bytes
Request count setable: %d-%d
Request count current: %d-%d(RSV)
MaxUnits: %u
MaxLuns:  %u
MaxSGLs:  %u
MaxXfer:  %u KB
BAR%d: Mapped Adr(REG)=%X
FindAdapter> Successful
Failed FindAdapter: Unload Driver
Initialize> %s
Adv-Locality
MSI-Ranges
Multi-Channels 
Start-Complete
DPC-Redirect 
PerfOpts: Ver=%d Flags=%X (%s%s%s)
StorPortInitializePerfOpts() failed: %X (Assume Server 2003)
Initialize> Memory Dump Driver
complete
failed
Initialize %s (msecs=%u)
ResetBus> MemDump: Ignoring call
ResetBus> %s
ResetBus> Successful: %s
ResetBus> Failed: %s
FW STOPPED(%d): %s
BuildIO> MemDump: %s
BuildIO> Shutdown: Target=%d Lun=%d
BuildIO> Reset_Device: Target=%d
BuildIO> Reset_LUN: Target=%d Lun=%d
Sleep
Hibernate
Shutdown
ShutdownReset
ShutdownOff
WarmEject
Unknown
BuildIO> Power: %s.D%d
Start
Remove
Query
Filter
BuildIO> PnP: %s.%d
Adapter
Device
BuildIO> WMI: %s.SubFun=%d Len=%d
BuildIO> WMI: DispatchFunction pended
BuildIO> WMI: Status=%d Len=%d
BuildIO> Abort
Unsupported: %s
BuildIO> Firmware stopped: %s
BuildIO> Pending queue full: 
StartIO> Is Stopped: %s
StartIO> Is Paused: %s
StartIO> Pending queue full: returning BUSY
StartIO> Set Busy: Posted=%d
StartIO> Busy Now: Posted=%-3d Builds=%-3d Starts=%-3d Msecs=%u
StartIO> Not Busy: Posted=%-3d Builds=%-3d Starts=%-3d Msecs=%u
MSI> Message=%d
StopAdapter
%s> %s
DeviceStop>  Outstanding: Pending=%u Posted=%d
RestartAdapter> %s
AdapterControl> Unknown ControlType %d
%s> Ignore pause in crashdump
%s> << Input now paused >>
%s> Pause() failed
%s> (Already paused)
%s> << Input now resumed >>
%s> Resume() failed
%s> (Already resumed)
%s: %s <-- 0x%X (%u)
MaxLenTransfers
Decreasing %s to %u
CacheControl
DbgControl
MsgControl
CmonControl
MaxDepthQueue
Increasing %s to %u
MaxNumUnits
MaxNumLuns
BusyCompleteCount
ResetRetryCount
ResetWaitReadySecs
RestartWaitSecs
CmonMaxCmds
CmonAveFactor
CmonMaxAves
CmonMaxLCTs
CmonMinTimeLCT
TimeoutValue
ConfigInfo> Duplex disabled
BAR%d (%s): Adr=%X Len=%X
AccessRange> BAR%d: MEM space expected
AccessRange> BAR%d: Base address is 0
InitMem> Failed: %u bytes
Event Queue:      %3u KB
CmdMon CMDs:      %3u KB
CmdMon LCTs:      %3u KB
CmdMon AVEs:      %3u KB
Request Packets:  %3u KB
Req Ptrs Array:   %3u KB
Response Array:   %3u KB
CmdMon Total:     %3u KB
Allocation Total: %3u KB
InitMem> Overflow by %d bytes
ScsiExec> Set queue depth %d failed
ScsiExec> Set queue depth to %d
ScsiExec> %s Len=%u
ScsiExec> INQUIRY: Page=0x%02X, Len=%d
ScsiExec> %s: Page=0x%02X Len=%u
ScsiExec> %s: Len=%u
 -IGNORED
ScsiExec> %s%s
ScsiExec> Ignore: SCSIOP_MEDIUM_REMOVAL
SglEntry> Number of entries = %d
SglEntry> %s: Adr=%08X:%08X Len=%u
BuildSrb> Bad SG List
BuildSgl> Ptr=%X, Len=%04X
ReqBuild> Error building SGL (%s)
WMI> QueryResource
MofResource
WMI> QueryDataBlock
WMI> FunctionControl: Enabled
WMI> FunctionControl: Disabled
WMI> Initialize
<3ware>
Ioctl> %08X ("%s")
Ioctl> Data Length: %u < %u
Ioctl> Unknown: 0x%X
IoMain> DRIVER_NOP
IoMain> GET_DRIVER_VERSION
IoMain> %s - %s
IoMain> Version:%u.%02u.%02u.%03u (%u-%u) %s
IoMain> GET_DRIVER_VERSION_EX
IoMain> Card Index = %d
IoMain> Status Bits = 0x%X
IoDrv> GET_FWARE_INFO:
IoDrv> Ver:  %s
IoDrv> Ser:  %s
IoDrv> Mod:  %s
IoDrv> HwId: %s
IoDrv> ID=%d SRL=%d-%d Branch=%d Build=%d
IoDebug> GET_MSG_CONTROL: 0x%04X
IoDebug> SET_MSG_CONTROL: 0x%04X
IoDebug> GET_DBG_CONTROL: 0x%04X
IoDebug> SET_DBG_CONTROL: 0x%04X
IoStats> CLEAR
IoStats> SHOW
IoStats> READ
IoPendQ> SHOW
IoPendQ> READ
IoPostQ> SHOW
IoPostQ> READ
IoState> STOP
IoState> STOP failed
IoState> START
IoState> START failed
IoState> RESET
IoState> RESET failed
FwCon> RESCAN: Request bus change
FrmPT> Status=0x%X Msecs=%u %s
FrmPT> Invalid packet size: %d
FrmPT> Invalid packet size: %d > %d
FrmPT> %s
FrmPT> Excessive packet length: %d > %d
CLEAR
GET_FIRST
GET_LAST
GET_NEXT
GET_PREV
GET_ALL
GET_ALL_CLEAR
WAIT_CANCEL
AEN_CREATE
AEN_RETRIEVE
Event> %s
Event> More in queue
Event> Retrieved %d (%d total)
Event> Triggering AEN retrieval...
Event> No more in queue
Event> Queue overflow
CmdMon> Command monitoring is disabled
CmdMon> GET_CONFIG
CmdMon> GET_CONTROL
CmdMon> SET_CONTROL
CmdMon> GET_CMDS: Cancel
_WAIT
CmdMon> GET_CMDS%s count=%d
CmdMon> No command data, and not waiting
CmdMon> GET_TRIG: Cancel
CmdMon> GET_TRIG%s count=%d
CmdMon> Triggered collection in progress, and not waiting
CmdMon> Nothing trigggered, and not waiting
CmdMon> GET_LCTS: Cancel
 WAIT
CmdMon> GET_LCTS count=%d%s
CmdMon> No LCT data, and not waiting
CmdMon> GET_AVES: Cancel
CmdMon> GET_AVES%s
CmdMon> No average data yet: %d cmds
CmdMon> GET_HIST_OPER
CmdMon> GET_HIST_RESP
CmdMon> GET_HIST_POST
CmdMon> GET_HIST_SGLS
CmdMon> GET_HIST_XLEN
CmdMon> GET_HIST_ELEN
CmdMon> LOG_CMDS
CmdMon> LOG_LCTS
CmdMon> LOG_AVES
CmdMon> Resize CMD  array: %d => %d entries
CmdMon> Failed to resize CMD array
CmdMon> Resize LCT array: %d => %d entries
CmdMon> Failed to resize LCT array
CmdMon> Resize AVES array: %d => %d entries
CmdMon> Failed to resize AVE array
CmControl
CmReset
CmonClear> %sCMDs info cleared
CmonClear> LCTs info cleared
CmonClear> AVEs info cleared
CmonClear> OPER histogram cleared
CmonClear> RESP histogram cleared
CmonClear> POST histogram cleared
CmonClear> SGLS histogram cleared
CmonClear> ELEN histogram cleared
CmonClear> XLEN histogram cleared
CmSetup
%s> Command monitoring disabled
%s> MSG: Saving long command times
%s> MSG: Trigger capture started/stopped
%s> MSG: Commands during trigger capture
%s> MSG: Commands that are NOT matched
%s> MSG: Start of each command if saving
%s> MSG: Update of each command if saving
%s> MSG: Finish of each command if saving
%s> MSG: Finish of each command if saving with locking
%s> MSG: Start of each command if NOT saving
%s> MSG: Update of each command if NOT saving
%s> MSG: Finish of each command if NOT saving
%s> MSG: Finish of each command if NOT saving with locking
%s> MSG: Indication when recover lost command entry
%s> MSG: Each pending/triggered command that is skipped
%s> MSG: Total pending/triggered commands skipped
%s> MSG: Add time/date of completion to cmd log
%s> MSG: Add timestamp of cmd start to cmd log
%s> Set max saved commands: %d
%s> Set max saved LCT cmds: %d
%s> Set max saved averages: %d
%s> Currently captured %d commands
%s> Currently have %d LCT commands
%s> Currently have %d averages
Show! 
Show 
Trig 
Ignore 
Accept 
%s> Match Filter #%d: %s%s%s%s%s%s
           Sources:%s
 SCSI
 IOCTL
 FWARE
           Types:  %s
           SCSI READ commands
           SCSI WRITE commands
           SCSI RW commands
           SCSI Non-RW commands
           All command opcodes
           Opmask:  0x%X
           Opcodes: (~mask & code) == 0x%X
              
           Opcode: %s
           Xlen %d-%d bytes
           Xlen >= %d bytes
           Xlen <= %d bytes
           Targets %d-%d
           Target %d
           LUNs %d-%d
           LUN %d
%s> Enable capturing ALL commands
%s> Trigger on %d Filters
%s> Trigger on Rtime > %d
%s> Trigger on Error
%s> Trigger on Reset
%s> Trigger on Request
%s> Complete %d commands after trigger
%s> Stop CMD collection upon trigger
%s> Stop LCT collection upon trigger
%s> Stop AVES collection upon trigger
%s> Stop HIST collection upon trigger
%s> Send AEN to API upon trigger
%s> Disable saving commands
%s> Enable saving LCTs >%d msecs
%s> Disable saving long response cmds
%s> Enable calculating averages
%s> Use Averaging Factor = %d/100
%s> Disable calculating averages
%s> Enable calculating histograms
%s> Disable calculating histograms
Cm!!Match>>
CmonStart>>
Cm!!Start>>
CmonUpdate>
Cm!!Update>
CmDoneLCT> %s: count=%d
CmDoneAve> %s
CmonFinish>
Cm!!Finish>
CmonFinisH>
Cm!!FinisH>
<CmIsMatch>
CmdMon Match: %s
CmAddCmd> Recover lost entry
Cm!SkipCmd>
CmAddCmd> Queue full of PENDING cmds!
CmAddCmd> Skipped: %
CmGetCmds> CANCELED: returning %d commands
CmGetCmds> Returned %d commands
CmLogCmds> Command capture is disabled
CmLogCmds> Command capture already triggered
CmLogCmds>  %s
Running
Triggered
Captured
Disabled
CmLogCmds>  DoCapture(%s%s%s%s) TrigState=%s(@%d+%d) Cmds=%d
CmLogCmds> 
CmFillCmd> Fill: %s (%d left)
CmFillCmd> Done: %s
CmTrigger
Started
CmdMon Trigger: %s
Capture
Stopped
Request
CmTrigger> %s: Id=%s Msecs=%u %s
Opcode
Error
CmTrigger> %s: Id=%s Msecs=%u Err=0x%02X %s
CmDoneTrig> %s: count=%d
System
Internal
CmTrigger> %s Reset
Reset
CmLogAves
%s> Read I/O Only:
%s> Write I/O Only:
%s> NonRW I/O Only:
CmLogLCTs> 
CmSaveLCT> 
%s #%d
Rtime
%s> %s: Cause=%s Index=%d %s
%s>   Cmds=%-4d IO/s=%-3d KB/s=%-6d Len=%-6d SGLs=%-3d Pcmds=%-3d Resp=%-5d Etime=%-5d %s
          
%s%s %08X 
     
 !CANCEL!
 *ERROR*
 -TRIG
MSECS
Msecs
%s %s  Id=%s %s%s=%-6d KB=%-3d %s%s%s%s %s%s%s%s
<< OFLOW
 (Lost)
%sAEN(%d): %s%s
AenGet> No AENs in queue
Driver Statistics:
Max:  Posted=%u Pended=%u Reqs/Int=%u
Busy: Count=%u Builds=%u Starts=%u Time=%u msecs
Aens: Received=%u Retrieved=%u Overflows=%u
Reset Information: System=%u Internal=%u
  %d) %08X %s Pended=%-2d Posted=%-3d Recovered=%-3d  Msecs: Complete=%-6d SincePrev=%u
Running Request/ISR Information: (starti=%d)
  %2d) %08X ISR=%-8d Reqs=%-8d Posted=%-8d Pended=%-6d IOCTL=%-6d IOpass=%-6d Busy=%u
PendList
 Locked
%s: %d) Id=%-3d Time=%08X Msecs=%-6d Tout=%-6d %s%s
PendTimer
%s> Ignoring timer call: in reset
%s> %d) New Timeout=%d msecs
%s> Timeout expired: %d in queue
PendInsert
%s(T)> %s
%s> Reserved PendQ Slot Taken
%s(%d)> %s
%s> Adding: %s
PendDelete
%s> Not found: %s
PendLock
%s(%d)> Was locked: %s
%s(%d)> Time=%08X Msecs=%-6d %s
PendUnlock
%s(%d)> Not locked: %s
PendCancel
TimerCallB> Type=%s Time(current-end)=%d
TimerStart
%s> Ignore PendIO request, restart later
%s> Override PendIO request: %d msecs left
%s> Ignore: Current=%d <= New=%d msecs
%s> Override: New=%d < Current=%d
%s> Already active: %s
%s> Type=%s Msecs=%u
SND> Id=%-4d Posted=%-3u Msecs=%-6d KB=%-3d %s
%s> RspId=%u > %u maximum
%s> RspId=%u: Invalid or already completed request
%s> RspId=%d != ReqId=%d
RequestFinish
RET> Id=%-4d Posted=%-3u Msecs=%-6d KB=%-3d %s
%s>  Posted=%d
RequestDone> Lock for more: %s
(%08X)
PostList: Id=%-4d Status=%-3d %s=%-6d%s KB=%-3d %s
SGL: CdbLen=%d Count=%u
CDB0: %02X %02X %02X %02X
CDB1: %02X %02X %02X %02X
CDB2: %02X %02X %02X %02X
CDB3: %02X %02X %02X %02X
SGL: Offset=%d Size=%u
ReqCancel
ReqCheck
Canceled
Found
%s> Requests %s=%u
%s> posted=%d != Found=%d
FwRestart> Attempts=%d
StateFinish
%s> Firmware failed: wait for restart...
%s> Successfully restarted: request rescan...
StateTimer> Ignoring: recursive STOP
StateLoop
%s(%s)> Detected error
%s(%s)> Timeout: %u > %u msecs
%s(%s)> Entering...
%s> Reconnect to firmware...
%s> Disconnect from firmware...
stall
timer
%s(%s)> Start %s: %d msecs...
%s(%s)> ...Exiting
Successful
Failed
%s(%s)> %s: %d msecs
StateExec> Recursive: Current=%s Request=%s
StateExec> Finish reset first, then stop
StateExec> Already in state: %s
Connect> MaxRequests too low: %d < %d
Connect> Adjusting MaxRequests to %u
Connect> FW supports larger MaxRequests: %u < %u
Connect> ID=%u SRL=%u Branch=%u Build=%u MaxReqs=%u
Connect
Minimum firmware SRL: %d
Firmware version: %s
Serial string: %s
Hardware model: %s
Connect> Invalid index=%d
ResetInit
ResetInit> InQueue=%u != Posted=%u
ResetInit> Posted=%u Pended=%u
ResetStart> Resetting controller...
ResetStart> Retrying #%d: msecs=%u
ResetFail
ResetDone> Successful: %d msecs
ResetDone> Failed: %d msecs
%s> Id=%-4d Posted=%-3u Msecs=%-6d KB=%-3d %s
%s> Ignore: err=0x%04X %s
%s> Status=0x%X Msecs=%u %s
FW: %s
%s> Currently processing AENs
Ssend
%s> Sending Request_Sense...
%s> Sending relative time...
%s> Sending absolute time...
Swait
%s> Ignoring: %s
%s> Received AEN: TimeSync
%s> Received AEN: 0x%02X
%s> Finished reading AENs
%s> Received relative time...
%s> Received absolute time...
ISR> Received hardware error interrupt
DPC is now initialized
%s> MemDump: Ignoring request for DPC
%s> Request DPC...
%s> Not initialized yet...
BuildConn> %s-bit: SRL=%u MaxReqs=%u
BuildConn> Disconnection
Enabling interrupts ===========================>>>
Disabling interrupts <<<==========================
HwStatus> Status=%08X Hmask=%08X Hint=%08X OutD=%08X
HwError> Ignoring controller error...
HwError> Have controller error!
HwStuff> Submitting %d addresses
HwStuff> Wait for inboard free list queue (count=%d)...
HwStuff> Failed waiting for free list queue!
HwStuff> Inboard free list queue overrun!
SRB(%s)
SRB(0x%02X)
WMI(0x%02X)
PNP(%s.%d)
PNP(%d.%d)
PNP(%s)
PWR(%s.D%d)
PWR(%d.D%d)
PWR(%s)
Change
SCSI(%s.%s)
SCSI(%s)
SCSI(0x%02X)
SMART(%s)
SMART(0x%02X)
ATA(%s)
ATA(0x%02X)
IOCTL(%s)
IOCTL(0x%08X)
SYSIO(%s)
.CANCEL
.WAIT
IOCTL(%s%s%s)
.SIZE
.TRIG
.RESET
.CLEAR
IOCTL(%s%s%s%s%s%s%s)
FWARE(%s.%04X.%d)
FWARE(%s)
FWARE(0x%02X)
%sSYS:%s
%s%s%s%s%s
%s%s%s%s
%sAPP:%s
OPCODE(0x%08X)
--.- 
%2u.- 
%2u.%-1u 
 %08X 
**Err*) 
++Warn) 
..Info) 
%s.%s%s%s%s
 MemDump
Windows x64%s
%s (%s)
%d/%02d/%d %d:%02d:%02d
MemAlloc> Memptr=%X Memlen=%d
AllocPool: Status=%X Memptr=%X Memlen=%d
AllocPool: Not implemented in this version of Windows
FreePool: Success (Memptr=%X)
FreePool: Status=%X Memptr=%X
FreePool: Not implemented in this version of Windows
%s %s
ScsiMiniPort
3ware10k
 TwTraceError TwTraceWarn TwTraceInfo TwTraceDebug TwTraceScsi TwTracePoll TwTracePost TwTraceResp TwTracePend TwTraceTimer TwTraceState TwTraceSense TwTraceCmonLog TwTraceCmonData TwTraceTBD TwTraceWMI TwTraceApiCtrl TwTraceApiInfo TwTraceApiData TwTraceApiPass
EXECUTE_SCSI
IO_CONTROL
SHUTDOWN
FLUSH
ABORT
RESET_LUN
RESET_DEVICE
RESET_BUS
POWER
START
REMOVE
QUERY
FILTER
SLEEP
HIBERNATE
SHUTDOWN_RESET
SHUTDOWN_OFF
WARM_EJECT
READ6
READ10
READ12
READ16
WRITE6
WRITE10
WRITE12
WRITE16
VERIFY10
VERIFY12
VERIFY16
INQUIRY
READ_CAP10
READ_CAP16
SYNC_CACHE10
SYNC_CACHE16
REPORT_LUNS
TEST_READY
MODE_SELECT6
MODE_SELECT10
MODE_SENSE6
MODE_SENSE10
REQUEST_SENSE
READ_DATA_BUFF
WRITE_DATA_BUFF
START_STOP_UNIT
RECEIVE_DIAG
SEND_DIAG
MEDIUM_REMOVAL
LOG_SENSE
ATTRIBUTES
THRESHOLDS
AUTOSAVE
SAVE_VALUES
EXEC_OFFLINE
READ_LOG
WRITE_LOG
ENABLE
DISABLE
STATUS
AUTO_OFFLINE
SET_STANDBY
CHECK_POWER
IDENTIFY
SCSI-IDENTIFY
SMART-VERSION
SMART-STATUS
SMART-ENABLE
SMART-DISABLE
SMART-AUTOSAVE
SMART-EXEC_OFFLINE
SMART-READ_ATTRIBS
SMART-THRESHOLDS
SMART-SAVE_VALUES
SMART-READ_LOG
SMART-WRITE_LOG
SMART-AUTO_OFFLINE
GET_DRIVER_VERSION
DRV_FWARE_INFO
DBG_GET_LEVEL
DBG_SET_LEVEL
DBG_GET_FLAGS
DBG_SET_FLAGS
STATS_CLEAR
STATS_SHOW
STATS_READ
STATE_STOP
STATE_START
STATE_RESET
PENDQ_SHOW
POSTQ_SHOW
FWCON_RESET
FWCON_INIT
FWCON_SHUTDOWN
FWCON_RESET_FORCE
FWCON_SPIN_UP
FWCON_SPIN_DN
FWCON_RESCAN
FWCON_OUTPUT
EVENT_CLEAR
EVENT_GET_FIRST
EVENT_GET_LAST
EVENT_GET_NEXT
EVENT_GET_PREV
EVENT_GET_ALL
EVENT_GET_ALL_CLEAR
EVENT_WAIT
EVENT_WAIT_CANCEL
EVENT_AEN_CREATE
EVENT_AEN_RETRIEVE
CMDMON_GET_CONFIG
CMDMON_GET_CONTROL
CMDMON_GET_HIST_OPER
CMDMON_GET_HIST_RESP
CMDMON_GET_HIST_POST
CMDMON_GET_HIST_XLEN
CMDMON_GET_HIST_ELEN
CMDMON_LOG_CMDS
CMDMON_LOG_LCTS
CMDMON_LOG_AVES
CMDMON_GET_CMDS
CMDMON_GET_LCTS
CMDMON_GET_AVES
CMDMON_GET_TRIG
CMDMON_SET_CONTROL
FWARE_PASSTHRU
CONNECTION
WRITE
READ_VERIFY
VERIFY_UNIT
PORTSCAN
IMPORT_UNITS
ZERO_UNIT
REPLACE_DRIVE
HOTSWAP_DRIVE
RESERVED_0B
RESERVED_0C
RENUMBER_UNIT
RESERVED_0F
PASSTHRU
GET_PARAM
SET_PARAM
CREATE_UNIT
DELETE_UNIT
DOWNLOAD_CODE
REBUILD_UNIT
EXTENDED_CODE
RESERVED_19
RESERVED_1A
REMOTEPRINT
RESET_CMD
DEBUG
RESERVED_1E
DIAGNOSTICS
UNKNOWN
PendIO
FwState
Restart
SendSense
WaitSense
SendTime1
WaitTime1
SendTime2
WaitTime2
Start
Reset
WaitAck
WaitReady
WaitInit
WaitCmd
3ware.pdb
StorPortNotification
StorPortGetBusData
StorPortBusy
StorPortLogError
StorPortInitialize
StorPortExtendedFunction
StorPortPause
StorPortResume
StorPortFreeRegistryBuffer
StorPortGetDeviceBase
StorPortAllocateRegistryBuffer
StorPortRegistryRead
StorPortGetPhysicalAddress
StorPortGetUncachedExtension
StorPortSetDeviceQueueDepth
StorPortGetScatterGatherList
StorPortStallExecution
StorPortGetVirtualAddress
StorPortQuerySystemTime
storport.sys
vsprintf
ExSystemTimeToLocalTime
RtlTimeToTimeFields
DbgPrintEx
ntoskrnl.exe
MOFDATA
MOFRESOURCE
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
FileDescription
LSI 3ware SCSI Storport Driver
FileVersion
5.01.00.051
LegalCopyright
Copyright (c) 2011 LSI
ProductName
LSI 3ware RAID Controller
ProductVersion
WindowsBlue
Build Date
11-Apr-13
Tech Support
http://www.3ware.com
VarFileInfo
Translation
Q04NP44J
Z}*5fl
 z@g:%
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
210902182341Z
220901182341Z0p1
Washington1
Redmond1
Microsoft Corporation1
Microsoft Windows0
2y80T
I0G1-0+
$Microsoft Ireland Operations Limited1
229879+4675800
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
Et,@8
Zof1G
WaNja
T^r|B
uOi@Y
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,stXj8mQgnsHJPbj10D1CGn4ppJjgPSTymyoztykFve4=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
20220507032929.723Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:DD8C-E337-2FAE1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190519Z
230228190519Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:DD8C-E337-2FAE1%0#
Microsoft Time-Stamp Service0
>e-f)2
i_>iQJ
1y;V}
8$i9cw
42Zu.
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
G3Mc,
9O2sI
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:DD8C-E337-2FAE1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220507060424Z
20220508060424Z0w0=
1/0-0
1(0&0
L?bZmY-
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
