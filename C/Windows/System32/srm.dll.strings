!This program cannot be run in DOS mode.
Rich]
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
q:_0#
\$ UH
RSDSe
srm.pdb
.text$mn
.text$mn$00
.rdata$brc
.idata$5
.00cfg
.gfids
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data
.pdata
.rsrc$01
.rsrc$02
srm.DLL
DisableThreadLibraryCalls
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
KERNEL32.dll
TYPELIB
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Microsoft
 File Server Resource Manager Common Library
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
srm.lib
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
srm.lib
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
wwwwx
wwwwwwx
wwwwwwwx
wwwwwwwwwwx
wwwwwwwwwwwwx
wwwwwwwwwx
wwwwwwwwx
wwwwwwwx
wwwwwww
wwwwwwwwx
wwwwwwwx
wwwwwx
wwwwwwx
wwwwwww
wwwwwwx
x"""30
h333s 
wwwwx
wwwwwwx
wwwwwwx
wwwwx
wwwwwww
wwxwwwp
xwwwp
wwxwwwp
xwwwp
wwxwwwp
xwwwp
xwwwp
xwwwp
wwwww
wwwwwww
wwwww
wwwww
wwwww
wwwwwww
y96"n
u977776
}R::997776$
RMMMMMMM977777":
}nRRRRRRRRMMMM:9977"M
vosssssssoRRRRQMMMM999"M
~~~|ssssRR7
QMM:996M
~~~ussRzz
MMMM:6:
~~~sn
RQM:969
QQRn}sn
~~~~~y
}}uM~
}s~|{
n&&Q~oRQQ9"9Q
}}}nuussnnn9
}~~~uuQ"6777Mv}o
"6777M
~sonn9"
~vnRssnnnQ7"
%MsoonRnnPn
.Se<=====B?>
J@ABA@`D
FGHHHcD
aHKH]
uQ9'9N
'Nknsss
k!!!!;n
yyyyy
yyyywtt
yytttttt
yNNNN;Q
yttqpkkk}
tttkkkkNy
tkkkkhNNu
xtk;Qkn
pkkiNNNMt
kkiNNNM'n
kiNNM'''k
{ph;kuv
kNNN'''!k
kNN'''!!N
jNN''''!N
kNNM''!
PNN''#!!N
rM/// 
OHHHH00//
jOggdOOMMH20/
{r{{{rqqgggMHHHH/
{{qqg
/MMH/
qjc%%jjggJ
jccJj
=<>?Z
o^@AC]8
hhhhep
mrjjq
hhbbbIm
bbbb_Ih
``I`j
bbIII%f
MIII0 b
nbIcr
IID%%
II%%%
IID%%
~b>'''
f^II>>>*'
njnb^^MM00/*
b'H\>
'M\bq
-&,$#
51283
322222222
3>>>k
HRG,'
RRRR),D`ZNIA???0RRRRF
BA=;7000gR
LTnbM
UX]kk\86Tm
Vmmjiid%JE,-
Xmmjjid#
Yqqjc``0
Yrrqjc`3
YYXOLCA;
IDATx
zV ((
8qN$>{
MO\)7x:~_
BHJAPQ$(*
}JR2b
Ge@q? I
qlMFhP
`LRCq9
SCpHD
sgbhP$
{;;tm
h4BUi\
A9Z/y
kGL&c&
Kf<+>"
]HBe.E
EC9Vr
]~-uv
n$WJhQ
Z})Y{
a~h2u
ZK|AN
N>$a Tq
K:N X
7^^3A
CiPE?\
6^yqX
"5{z:
bU6@r
g69A?
.5!Eq)r
j*)NH
%=W-`
HEPL)
CH~oB
L9A)14
i>pQh.
v-B\+PU
mi\C;
!/(R,w
GJJod
h9Zxn
S(+NG
7Nd*p?
A<^(}
aJD2O 8sI
I7`/j >
8DH-x
!dEs:
T84b4J
tm5ki
bMCJU
v&&Y)
CClV*
4.ZL+
)$2|7$
h&.OW
du+$a~}<
jE7j3I&y
fJKrrG
F^&:e
n\gv|
{{{lmo3
S?;>f
X267B
pMsGaip
%mkK^
q)m8q
}qz]?
d2agw
W`0|3
9&[[l
IDAT[
o.BJJ
Q2 ec
^.]~+w
S5f&%
AUrx.
B`ER./
H}M'j
D_Q,@T
k]PWJ
YQ}u? 
p4[}I
tiit_-
6[}*E
`a~bJI
$_gSJ/
V:[[>)J
ykY@)KG
'~6EJ
^o2=?
sB-<@
Z-5ZY
?0~[w
{X_[e
/0=;G
d!8p(
m&&&i
="@E"
hhj`i)
{Fq=?N)A
E""MS
QO#^>q^_
A@l;P
o1x0m
^gbn/s
z-1tS
ADiL'
RuOk")
_]r]e
BmETI+
%K9m4
({ORO?
ZhSEi
O}vefz
hQkM 
wV@#Kx
>*@`{B
TdV-c;IT
*eA_n
`5Q$"Je
L?Z-c
eE6LX
7X]Ya8
VGJEQ
i:P*&N
2n.-q
5=]kv
hr&Bh
VtHg^
Agg[[
AX 3,
|~xx.b
^}_9gxM
,^Ydaa
Xm<Ev
]QHI!G4
,(rAQ
q2NM4
|W(A!K/.
L!DL=
(%y^P
ymzfV
T|.AWT
,Y=bj.e
]{06@
~!D477
SmfLW
zkhDX#`z
KD$QJ
K>XC(I
WoS,^
a&&&(
$ebv7
5=Ocj
7gv/<
Zs4[:J
"FIIQ
Olll~
}6VW(
!EDa]
2cRB)c
f&'i4[
Aku{G
8!nDd
glllP*E
{U{[}g//
&17;+
,\P^i
O1?=%
gN#TI1
4QxR*
l||@`
Q$Hku
lnv~V*
geY'9
gc+|vb
h ./^
ln>aX
=32;?
vz$EQL
+c.FDR
P /PJG`FqDws
LPzf!
"TlSp
~}_i$X
I^d#c
1$2_r
RESnj0
=h5[X
1FFF061
V#Rt:)
3sMuB
<i O20
\/?mJ
P,*i ISH-I$I
\YPJ4
&AA/N
KcQ%`g
Dvd]Z
$M!EA
Iefcy1u
361a^&
$E""DZ
4I0?;
jcG0j
$"! x
epE&"
Q(F8qn
3;v`bj
q_4F"!
i!*/G
Ssk`Q
cbrRn
j+E!.
qr1mRN'z
BhoS3
^}+z{
Yggjd
l`ddDNLNb
banA>{
SOciq
GF0>9
wk[#s[w
kX\X@
FSq!m
x>+%W
z{{04<
HR!u<
KKKX^Z
U}).{
KbddD
`dlTy3N
p)+%c
e]@sS@
IDATQ7
019!oy
E~)qh!
XFwo<*
o@o:7
0VWVP*
FtOI^h
t9+%O
=Y`6aqs
X*b}u
b)(CmQ
X,app
vPfZZ
>3]!%`
M7cdt<
";Z.u
sHcut)O
H;BI>
$KILYB
8AF&p9+%
`FG'>
ED/jr~
f4_E 
zMctU
J.pC(
;I28|0
\NXp}D
08# #5
2<3@2
5!C<3
OBmKH
=sd.r
C!3c6
Zs_uc
^IDAT,'4
C[QX{w
ko`~;H
M&}[J
qBr7d
+QP"A
{Yswm
k5,/-
Kq\`Je
3G~uan
33<zB
s3THv
 z8\E{
`x|TI)
c\R%leZ]og\sqja/
vnd+rj`?oh^hvoc
}vkJund
|tg0ypdIwnc~{si
znB}thg|th
le\`YTL
~xmm&# 
iaWCpg^mzrh2
zrf"xodTwncvwpd
t9ibY
vk&wodP
pI1YW7%
e]SWne\z
ypd:umamul`
wi"zrf<
uht|sg
iaWCpg^mzrh2
zrf"xodTwncvwpd
t9ibY
vk&wodP
pI1YW7%
Mo i!H
8\q}L
R!xGl
.}*;\+
stdole2.tlbWWW
FsrmLibW
_FsrmQuotaFlagsW
{FsrmQuotaFlags_EnforceWW
FsrmQuotaFlags_DisableWW
0HXFsrmQuotaFlags_StatusIncompleteW
FsrmQuotaFlags_StatusRebuildingWd
_FsrmFileScreenFlagsd
0xoFsrmFileScreenFlags_EnforceW
{_FsrmCollectionState
FsrmCollectionState_Fetching
XFsrmCollectionState_CommittingWW
FsrmCollectionState_Complete
FsrmCollectionState_CancelledWWW,
_FsrmEnumOptions,
042FsrmEnumOptions_None,
FsrmEnumOptions_Asynchronous,
FsrmEnumOptions_CheckRecycleBinW,
FsrmEnumOptions_IncludeClusterNodesW,
(0c;FsrmEnumOptions_IncludeDeprecatedObjects
_FsrmCommitOptionsWW
FsrmCommitOptions_NoneWW
FsrmCommitOptions_AsynchronousWW
8*r_FsrmTemplateApplyOptionsWWW
FsrmTemplateApplyOptions_ApplyToDerivedMatchingW
uFsrmTemplateApplyOptions_ApplyToDerivedAllWWX
_FsrmActionTypeWX
0?NFsrmActionType_UnknownWWX
0[HFsrmActionType_EventLogWX
/FsrmActionType_EmailX
FsrmActionType_CommandWWX
FsrmActionType_ReportWWW
I_FsrmEventTypeWW
FsrmEventType_UnknownWWW
FsrmEventType_InformationWWW
FsrmEventType_WarningWWW
DFsrmEventType_ErrorW 
_FsrmAccountType 
FsrmAccountType_UnknownW 
(FsrmAccountType_NetworkServiceWW 
FsrmAccountType_LocalService 
QFsrmAccountType_LocalSystemW 
FsrmAccountType_InProcWW 
FsrmAccountType_External 
*FsrmAccountType_AutomaticWWW
8I%_FsrmReportTypeW
FsrmReportType_UnknownWW
4FsrmReportType_LargeFilesWWW
FsrmReportType_FilesByTypeWW
FsrmReportType_LeastRecentlyAccessed
FsrmReportType_MostRecentlyAccessedW
0R4FsrmReportType_QuotaUsageWWW
GFsrmReportType_FilesByOwnerW
FsrmReportType_ExportReportW
fFsrmReportType_DuplicateFilesWWW
FsrmReportType_FileScreenAuditWW
FsrmReportType_FilesByPropertyWW
FsrmReportType_AutomaticClassificationWW
wFsrmReportType_ExpirationWWW
FsrmReportType_FoldersByProperty
o_FsrmReportFormatWWW
wFsrmReportFormat_Unknown
0bwFsrmReportFormat_DHtmlWW
FsrmReportFormat_HtmlWWW
@FsrmReportFormat_Txt
FsrmReportFormat_Csv
SFsrmReportFormat_XmlL
8`H_FsrmReportRunningStatusL
FsrmReportRunningStatus_UnknownWL
FsrmReportRunningStatus_NotRunningWWL
FsrmReportRunningStatus_QueuedWWL
FsrmReportRunningStatus_RunningW
9_FsrmReportGenerationContext
FsrmReportGenerationContext_UndefinedWWW
FsrmReportGenerationContext_ScheduledReportW
FsrmReportGenerationContext_InteractiveReportWWW
FsrmReportGenerationContext_IncidentReportWW
_FsrmReportFilterWWW
LFsrmReportFilter_MinSize
0eQFsrmReportFilter_MinAgeDaysW
WFsrmReportFilter_MaxAgeDaysW
FsrmReportFilter_MinQuotaUsageWW
FsrmReportFilter_FileGroupsW
FsrmReportFilter_OwnersW
FsrmReportFilter_NamePattern
FsrmReportFilter_PropertyWWWx
_FsrmReportLimitx
FsrmReportLimit_MaxFilesx
FsrmReportLimit_MaxFileGroupsWWWx
HFsrmReportLimit_MaxOwnersWWWx
FsrmReportLimit_MaxFilesPerFileGroupx
FsrmReportLimit_MaxFilesPerOwnerx
FsrmReportLimit_MaxFilesPerDuplGroupx
FsrmReportLimit_MaxDuplicateGroupsWWx
FsrmReportLimit_MaxQuotasWWWx
FsrmReportLimit_MaxFileScreenEventsWx
FsrmReportLimit_MaxPropertyValuesWWWx
FsrmReportLimit_MaxFilesPerPropertyValuex
0NGFsrmReportLimit_MaxFoldersWW
8-,_FsrmPropertyDefinitionTypeW
"0rpFsrmPropertyDefinitionType_UnknownWW
KFsrmPropertyDefinitionType_OrderedListWW
FsrmPropertyDefinitionType_MultiChoiceListWW
FsrmPropertyDefinitionType_SingleChoiceListW
FsrmPropertyDefinitionType_StringWWW
FsrmPropertyDefinitionType_MultiStringWW
0:aFsrmPropertyDefinitionType_IntWW
FsrmPropertyDefinitionType_BoolW
MFsrmPropertyDefinitionType_DateW@
>_FsrmRuleTypeWWW@
FsrmRuleType_Unknown@
FsrmRuleType_ClassificationW@
0{}FsrmRuleType_Generic
_FsrmRuleFlagsWW
FsrmRuleFlags_DisabledWW
FsrmRuleFlags_ClearAutomaticallyClassifiedPropertyWW
FsrmRuleFlags_ClearManuallyClassifiedPropertyWWW
FsrmRuleFlags_InvalidWWW
g_FsrmClassificationLoggingFlagsW
FsrmClassificationLoggingFlags_NoneW
FsrmClassificationLoggingFlags_ClassificationsInLogFileW
FsrmClassificationLoggingFlags_ErrorsInLogFileWW
FsrmClassificationLoggingFlags_ClassificationsInSystemLogWWW
FsrmClassificationLoggingFlags_ErrorsInSystemLogl
_FsrmExecutionOptionl
0q>FsrmExecutionOption_UnknownWl
FsrmExecutionOption_EvaluateUnsetWWWl
FsrmExecutionOption_ReEvaluate_ConsiderExistingValuel
FsrmExecutionOption_ReEvaluate_IgnoreExistingValueWW
_FsrmStorageModuleCapsWW
FsrmStorageModuleCaps_UnknownWWW
FsrmStorageModuleCaps_CanGet
CFsrmStorageModuleCaps_CanSet
FsrmStorageModuleCaps_CanHandleDirectoriesWW
FsrmStorageModuleCaps_CanHandleFiles4
_FsrmStorageModuleTypeWW4
FsrmStorageModuleType_UnknownWWW4
FsrmStorageModuleType_CacheW4
FsrmStorageModuleType_InFile4
FsrmStorageModuleType_DatabaseWW4
FsrmStorageModuleType_System
_FsrmPropertyBagFlagsWWW
FsrmPropertyBagFlags_UpdatedByClassifier
FsrmPropertyBagFlags_FailedLoadingProperties
FsrmPropertyBagFlags_FailedSavingPropertiesW
FsrmPropertyBagFlags_FailedClassifyingProperties
_FsrmPropertyBagFieldWWW
!04?FsrmPropertyBagField_AccessVolumeWWW
FsrmPropertyBagField_VolumeGuidNameW`
_FsrmPropertyFlagsWW`
8FsrmPropertyFlags_NoneWW`
0}:FsrmPropertyFlags_OrphanedWW`
DFsrmPropertyFlags_RetrievedFromCache`
,FsrmPropertyFlags_RetrievedFromStorageWW`
FsrmPropertyFlags_SetByClassifierWWW`
VFsrmPropertyFlags_DeletedWWW`
FsrmPropertyFlags_ReclassifiedWW`
FsrmPropertyFlags_AggregationFailedW`
FsrmPropertyFlags_ExistingWW`
1FsrmPropertyFlags_FailedLoadingPropertiesWWW`
FsrmPropertyFlags_FailedClassifyingPropertiesWWW`
TFsrmPropertyFlags_FailedSavingProperties`
FsrmPropertyFlags_Secure`
FsrmPropertyFlags_PolicyDerivedW`
FsrmPropertyFlags_InheritedW`
-FsrmPropertyFlags_Manual`
FsrmPropertyFlags_ExplicitValueDeletedWW`
CFsrmPropertyFlags_PropertyDeletedFromClearWW`
nFsrmPropertyFlags_PropertySourceMask`
 0akFsrmPropertyFlags_PersistentMask
%_FsrmPipelineModuleTypeW
FsrmPipelineModuleType_UnknownWW
FsrmPipelineModuleType_StorageWW
FsrmPipelineModuleType_ClassifierWWW(
\_FsrmGetFilePropertyOptionsW(
8FsrmGetFilePropertyOptions_NoneW(
FsrmGetFilePropertyOptions_NoRuleEvaluationW(
FsrmGetFilePropertyOptions_PersistentWWW(
FsrmGetFilePropertyOptions_FailOnPersistErrorsWW(
'0?DFsrmGetFilePropertyOptions_SkipOrphanedW
_FsrmFileManagementTypeW
FsrmFileManagementType_UnknownWW
FsrmFileManagementType_ExpirationWWW
{FsrmFileManagementType_CustomWWW
FsrmFileManagementType_RmsWW
d_FsrmFileManagementLoggingFlagsW
FsrmFileManagementLoggingFlags_NoneW
FsrmFileManagementLoggingFlags_Error
FsrmFileManagementLoggingFlags_InformationWW
[FsrmFileManagementLoggingFlags_AuditT
_FsrmPropertyConditionTypeWWT
FsrmPropertyConditionType_UnknownWWWT
FsrmPropertyConditionType_EqualWT
FsrmPropertyConditionType_NotEqualWWT
FsrmPropertyConditionType_GreaterThanWWWT
FsrmPropertyConditionType_LessThanWWT
FsrmPropertyConditionType_ContainWWWT
/FsrmPropertyConditionType_ExistWT
FsrmPropertyConditionType_NotExistWWT
FsrmPropertyConditionType_StartWithWT
!00"FsrmPropertyConditionType_EndWithWWWT
FsrmPropertyConditionType_ContainedInWWWT
"0nZFsrmPropertyConditionType_PrefixOfWWT
*FsrmPropertyConditionType_SuffixOfWWT
FsrmPropertyConditionType_MatchesPattern
n_FsrmFileStreamingModeWW
FsrmFileStreamingMode_UnknownWWW
0ZkFsrmFileStreamingMode_ReadWW
TFsrmFileStreamingMode_WriteW
_FsrmFileStreamingInterfaceTypeW
FsrmFileStreamingInterfaceType_UnknownWW
vFsrmFileStreamingInterfaceType_ILockBytesWWW
FsrmFileStreamingInterfaceType_IStreamWW
_FsrmPropertyDefinitionFlags
FsrmPropertyDefinitionFlags_GlobalWW
FsrmPropertyDefinitionFlags_DeprecatedWW
FsrmPropertyDefinitionFlags_SecureWW
_FsrmPropertyDefinitionAppliesTo
FsrmPropertyDefinitionAppliesTo_FilesWWW
'0f3FsrmPropertyDefinitionAppliesTo_FoldersWH
_AdrClientErrorTypeWH
AdrClientErrorType_UnknownWWH
AdrClientErrorType_AccessDeniedWH
0a[AdrClientErrorType_FileNotFoundW
IFsrmCollectionW
xA_NewEnum
unknownW
zItem
indexWWW
0vCountWWW
StateWWW
CancelWW
WaitForCompletionWWW
waitSecondsW
completedWWW
cGetByIdW
]idWW
entryWWW
IFsrmMutableCollectionWW
rAddW
RemoveWW
RemoveByIdWW
CloneWWW
WcollectionWWt
IFsrmCommittableCollectionWWt
CommitWW
optionsW
resultsW
5IFsrmActionW
ActionTypeWW
RunLimitInterval
OgminutesW
xDeleteWW<
IFsrmActionEmail<
MailFrom<
jMailReplyToW<
MailToWW<
MailCcWW<
MailBccW<
w/MailSubjectW<
MessageTextW
IFsrmActionReportWWW
GRReportTypesW
IFsrmActionEventLogW
EventTypeWWWh
vIFsrmActionCommandWWh
RExecutablePathWWh
j}ArgumentsWWWh
 AccountWh
WorkingDirectoryh
!MonitorCommandWWh
KillTimeOutWh
LogResultWWW
logResultsWW
IFsrmActionEmail2WWW
AttachmentFileListSizeWW0
tIFsrmSetting0
,SmtpServerWW0
AdminEmailWW0
DisableCommandLineWW0
;EnableScreeningAudit0
rFEmailTestWWW0
SetActionRunLimitIntervalWWW
delayTimeMinutes0
GetActionRunLimitIntervalWWW
8U)IFsrmPathMapperW
4GGetSharePathsForLocalPathWWW
localPathWWW
hHsharePathsWW
IFsrmDerivedObjectsResultWWW
DerivedObjectsWW\
IFsrmObjectW\
 DescriptionW
IFsrmQuotaBaseWW
iQuotaLimitWW
QuotaFlagsWW
[ThresholdsWW
AddThreshold
thresholdWWW
DeleteThresholdW
ModifyThresholdW
newThreshold
CreateThresholdActionWWW
RactionWW
EnumThresholdActions
actionsW$
7IFsrmQuotaObject$
Path$
UserSidW$
B;UserAccountW$
SourceTemplateNameWW
quotaTemplateNameWWW$
O$MatchesSourceTemplateWWW
matchesW$
ApplyTemplateWWW
pIFsrmQuotaWW
QuotaUsedWWW
QuotaPeakUsageWW
BpeakUsageWWW
$QuotaPeakUsageTimeWW
"peakUsageDateTimeWWW
ResetPeakUsageWW
RefreshUsagePropertiesWW
IFsrmAutoApplyQuotaW
ExcludeFoldersWW
foldersW
=CommitAndUpdateDerivedWW
commitOptionsWWW
4applyOptions
derivedObjectsResultP
NIFsrmQuotaManagerWWWP
xActionVariablesW
variablesWWWP
0ActionVariableDescriptionsWW
uVdescriptionsP
VCreateQuotaW
quotaWWWP
CreateAutoApplyQuotaP
GetQuotaP
GetAutoApplyQuotaWWWP
HGetRestrictiveQuotaWP
CNEnumQuotasWW
\quotasWWP
EnumAutoApplyQuotasWP
EnumEffectiveQuotasWP
strPathWP
u@CreateQuotaCollectionWWW
IFsrmQuotaManagerExW
rYIsAffectedByQuotaWWW
Wfaffected
IFsrmQuotaTemplateWW
CopyTemplate|
*IFsrmQuotaTemplateImportedWW|
FOverwriteOnCommitWWW
overwriteWWW
xIFsrmQuotaTemplateManagerWWW
CreateTemplateWW
=quotaTemplateWWW
GetTemplateW
 EnumTemplatesWWW
quotaTemplatesWW
,ExportTemplatesW
quotaTemplateNamesArrayW
serializedQuotaTemplates
ImportTemplatesWD
IFsrmFileGroupWWD
MembersWD
NonMembersWW
IFsrmFileGroupImportedWW
IFsrmFileGroupManagerWWW
hCreateFileGroupW
IfileGroupWWW
GetFileGroup
EnumFileGroupsWW
~fileGroupsWW
ExportFileGroups
WfileGroupNamesArrayW
rserializedFileGroups
ImportFileGroupsp
IFsrmFileScreenBaseWp
BlockedFileGroupsWWW
blockListWWWp
FileScreenFlagsWp
CreateActionp
EnumActionsW
IFsrmFileScreenW
>wfileScreenTemplateNameWW8
IFsrmFileScreenException8
AllowedFileGroupsWWW
allowListWWW
IFsrmFileScreenManagerWW
CreateFileScreen
fileScreenWW
GetFileScreenWWW
8`EnumFileScreensW
fileScreensW
CreateFileScreenExceptionWWW
ffileScreenExceptionW
EdGetFileScreenExceptionWW
EnumFileScreenExceptions
fileScreenExceptions
,CreateFileScreenCollectionWW
IFsrmFileScreenTemplateWd
IFsrmFileScreenTemplateImportedW
IFsrmFileScreenTemplateManagerWW
ofileScreenTemplateWW
fileScreenTemplatesW
nhfileScreenTemplateNamesArray
s4serializedFileScreenTemplatesWWW,
IFsrmReportW,
reportTypeWW,
F:LastGeneratedFileNamePrefixW
prefixWW,
GetFilterWWW
;filterWW
+filterValueW,
*SetFilterWWW
IFsrmReportJobWW
taskName
NamespaceRootsWW
FormatsW
XCRunningStatusWWW
LastRunW
hLastErrorWWW
zNLastGeneratedInDirectory
pEnumReportsW
reportsW
[^CreateReport
reportWW
XncontextW
IFsrmReportManagerWW
EnumReportJobsWW
Q9reportJobsWW
WCreateReportJobW
N8reportJobWWW
GetReportJob
hGetOutputDirectoryWW
SetOutputDirectoryWW
IsFilterValidForReportTypeWW
'JvalidWWW
GetDefaultFilter
SetDefaultFilter
&wGetReportSizeLimitWW
limitWWW
limitValueWW
SetReportSizeLimitWWX
eIFsrmFileManagementJobManagerWWWX
5EnumFileManagementJobsWW
fileManagementJobsWW
IFsrmFileManagementJobWW
EnabledW
.OperationTypeWWW
PZExpirationDirectoryW
_CustomAction
dNotificationsWWW
LoggingW
loggingFlags
ReportEnabledWWW
ODaysSinceFileCreated
gdaysSinceCreationWWW
DaysSinceFileLastAccessedWWW
}YdaysSinceAccessW
DaysSinceFileLastModifiedWWW
daysSinceModifyW
yPropertyConditionsWW
FromDate
ParametersWW
RLLastReportPathWithoutExtensionWW
FileNamePatternW
AddNotificationW
=;days
WDeleteNotificationWW
ModifyNotificationWW
_newDaysW
)CreateNotificationAction
?EnumNotificationActionsW 
IFsrmPropertyConditionWW 
KValueWWW
CreatePropertyConditionW
propertyConditionWWW
CreateCustomActionWWX
/CreateFileManagementJobW
QWfileManagementJobWWWX
GetFileManagementJob
IFsrmFileConditionWW
_FsrmFileConditionTypeWW
FsrmFileConditionType_UnknownWWW
ZFsrmFileConditionType_PropertyWW
pValL
'IFsrmFileConditionPropertyWWL
PropertyName
w_FsrmFileSystemPropertyIdWWW
"0NfFsrmFileSystemPropertyId_UndefinedWW
uFsrmFileSystemPropertyId_FileNameWWW
FsrmFileSystemPropertyId_DateCreated
FsrmFileSystemPropertyId_DateLastAccessedWWW
FsrmFileSystemPropertyId_DateLastModifiedWWW
FsrmFileSystemPropertyId_DateNowL
PPropertyIdWWL
Operator
_FsrmPropertyValueTypeWW
sFsrmPropertyValueType_UndefinedW
FsrmPropertyValueType_LiteralWWW
 0C6FsrmPropertyValueType_DateOffsetL
ValueTypeWWWx
IFsrmPropertyDefinitionWx
PossibleValuesWWx
'ValueDescriptionsWWW
oIFsrmPropertyDefinition2
kxPropertyDefinitionFlagsW
DisplayNameW
AppliesToWWW
aValueDefinitions@
{IFsrmPropertyDefinitionValue@
UniqueID
8iHIFsrmPropertyWWW
SourcesW
cPropertyFlagsWWW
oflagsWWW
8M>IFsrmRuleWWW
RuleType
ModuleDefinitionName
RuleFlagsWWW
LastModifiedl 
IFsrmClassificationRuleWl 
mExecutionOptionWl 
\PropertyAffected
property
IFsrmPipelineModuleDefinitionWWW
ModuleClsidW
CompanyW
VersionW
yKModuleTypeWW
}NeedsFileContent
retrievalAccount
SupportedExtensionsW4!
8mgIFsrmClassifierModuleDefinitionW4!
.PropertiesAffectedWW4!
PropertiesUsedWW4!
NeedsExplicitValueWW
IFsrmStorageModuleDefinition
eeCapabilities
0mStorageTypeW
pUpdatesFileContentWW
cIFsrmClassificationManagerWW
ClassificationReportFormatsW
ClassificationReportMailToWW
ClassificationReportEnabledW
ClassificationLastReportPathWithoutExtension
lastReportPathWW
ClassificationLastErrorW
ClassificationRunningStatusW
EnumPropertyDefinitionsW
propertyDefinitionsW
CreatePropertyDefinition
propertyDefinitionWW
GetPropertyDefinitionWWW
EnumRulesWWW
sRulesWWW
&xCreateRuleWW
7tRule
GetRuleW
ruleName
EnumModuleDefinitionsWWW
-moduleDefinitionsWWW
NnCreateModuleDefinitionWW
moduleDefinition
GetModuleDefinitionW
#>moduleNameWW
 (RunClassificationWWW
reserved
WaitForClassificationCompletionW
CancelClassification
EnumFilePropertiesWW
OfilePath
(lfilePropertiesWW
GetFilePropertyW
SetFilePropertyW
@propertyValueWWW
,ClearFilePropertyWWW`"
(IFsrmClassificationManager2W`"
ClassifyFilesWWW
UcfilePathsWWW
propertyNamesWWW
propertyValuesWW
VIFsrmPropertyBag
RelativePath
VolumeNameWW
mRelativeNamespaceRootWWW
VolumeIndexW
volumeId
FileIdWW
ParentDirectoryIdWWW
SizeAllocatedWWW
O0CreationTime
LastAccessTimeWW
LastModificationTime
AttributesWW
OwnerSid
FilePropertyNamesWWW
0hMessages
A\PropertyBagFlags
fileProperty
%cAddMessageWW
messageW
uGetFileStreamInterfaceWW
%paccessModeWW
interfaceTypeWWW
pStreamInterface(#
8=$IFsrmPropertyBag2WWW(#
%GetFieldValueWWW
3fieldWWW(#
F/GetUntrustedInFileProperties
propsWWW
!8'lIFsrmPipelineModuleImplementationWWW
8} IFsrmPipelineModuleConnector
 ModuleImplementation
pipelineModuleImplementation
userName
HostingUserAccountWW
[HostingProcessPidWWW
OnLoadWW
moduleConnectorW
OnUnloadT$
IFsrmClassifierModuleImplementationWT$
UseRulesAndDefinitionsWWT$
OnBeginFileW
propertyBagW
arrayRuleIdsT$
'DoesPropertyValueApplyWW
applyValueWW
NidRuleWW
idPropDefWWWT$
GetPropertyValueToApplyWT$
OnEndFileWWW
 8;!IFsrmStorageModuleImplementation
[uUseDefinitionsWW
LoadPropertiesWW
SavePropertiesWW
DIFsrmClassificationEventsWW
OnFileWW
urresultWW
?fileMessages
FsrmSettingW
VFsrmPathMapperWWH&
|FsrmExportImport
tIFsrmExportImportWWW
fileGroupNamesSafeArrayW
4OremoteHostWW
ExportFileScreenTemplatesWWW
2UtemplateNamesSafeArrayWW
VImportFileScreenTemplatesWWW
htemplatesWWW
ExportQuotaTemplates
ImportQuotaTemplates
EFsrmQuotaManagert'
>FsrmQuotaTemplateManager
FsrmFileGroupManager<(
FsrmFileScreenManagerWWW
0FsrmFileScreenTemplateManagerWWW
cFsrmReportManagerWWWh)
FsrmReportSchedulerW
IFsrmReportScheduler
9VerifyNamespaces
namespacesSafeArrayW
CreateScheduleTaskWW
'xserializedTaskWW
<ModifyScheduleTaskWW
DeleteScheduleTaskWW0*
FsrmFileManagementJobManager
FsrmClassificationManagerWWW
FsrmPipelineModuleConnectorW\+
AdSyncTaskWW
ITaskHandler
StartWWW
?pHandlerServices
;data
4Stop
pRetCode
PauseWWW
rResumeWW$,
5FsrmAccessDeniedRemediationClientWWW
IFsrmAccessDeniedRemediationClientWW
ULONG_PTRWWW
parentWndWWW
xaccessPathWW
errorTypeWWW
6fwindowTitleW
windowMessageWWW
FSRM 1.0 Type LibraryW
IFsrmCollection InterfaceW
property _NewEnumW<
This property is the accessor to collection entries by indexWW
This property returns the number of entries in the collection.  If the collection is still in the Fetching state, the returned value is the current count and can be expected to increase on a subsequent call.WWWx
This property reveals the state of the collection; whether it is being retrieved, being committed, or complete (stable).WWg
This method will cause the current collection enumeration or commit operation, if any, to be cancelled.WWW
This method is used to wait for the specified period of time or until all objects in the collection are read and return whether or not the collection is completeWV
This method returns from the collection the object at the entry at the specified index 
IFsrmMutableCollection InterfaceWW'
This method inserts into the collectionWWWH
This method removes from the collection the entry at the specified indexWWG
This method removes from the collection the entry with the specified IDWWW
This method creates a shallow copy of the collection.  The method can be called only when the collection is in the Complete state.$
IFsrmCommittableCollection InterfaceWW
This method commits all the changes made to the object entries contained in the collection.  All objects in the collection must be in a consistent state: all new, existing, or marked for deletion.  The return value is a collection of HRESULT values.W
IFsrmAction InterfaceWA
This property returns a globally unique identifier for the objectW2
This property returns the type of the notification
property RunLimitIntervalW
This method removes the action.WWW
IFsrmActionEmail Interface
property MailFromW
property MailReplyToWW
property MailToWWW
property MailCcWWW
property MailBccWW
property MailSubjectWW
property MessageTextWW
IFsrmActionReport InterfaceWWW
property ReportTypeWWW
property ReportType WW
IFsrmActionEventLog InterfaceW
property EventlogLevel
IFsrmActionCommand InterfaceWW
property ExecutablePathWWW
property Arguments
property AccountWW
property WorkingDirectoryW
property MonitorCommandWWW
property KillTimeOutWW
property LogResult
IFsrmActionEmail2 InterfaceWWW
property AttachmentFileListSizeWWW
IFsrmSetting Interface,
This property is the name of the SMTP serverWW2
This property is the default FROM field for e-mailA
This property is the default administrators e-mail recipient listW
property DisableCommandLineWWW
property EnableScreeningAuditW/
This method is used to test the email settings.WWWn
This method is to set the default throttling delay between quota and screening notifications of the same type.n
This method is to get the default throttling delay between quota and screening notifications of the same type.
IFsrmPathMapper InterfaceWY
This method is used to get an array of DFS and share paths pointing to a given local pathW#
IFsrmDerivedObjectsResult InterfaceWWWN
This read-only property is the collection of derived objects that were updatedX
This read-only property is the collection of results from committing the derived objectsWW
IFsrmObject InterfaceW>
This property is the globally unique identifier for the object.
This property is the description of the objectU
This method is used to delete the object.  Commit is required to finalize the delete.WB
This method is used to commit the new, modified, or deleted object
IFsrmQuotaBase InterfaceWW0
This property is the limit in bytes of the quotaWWK
This property is the bit field containing flags defined in SRM_QUOTA_FLAGS WWWJ
This property is the bit field containing flags defined in SRM_QUOTA_FLAGSC
This read-only property is an array of currently defined thresholdsWWW0
This method is used to add a new threshold valueWW/
This method is used to delete a threshold valueWWW/
This method is used to modify a threshold valueWWWC
This method is used to create a threshold action of a specific typeWWW2
This method is used to enumerate threshold actions
IFsrmQuotaObject InterfaceL
This read-only property is the Path to the object that will be charged quotaWWI
This read-only property is the SID of the user that will be charged quotaWR
This read-only property is the account name of the user that will be charged quotaT
This read-only property is the name of the template that this object originated fromWWU
This read-only property is whether the object matches the template it originated fromWZ
This method is used to copy the properties of this quota from the specified quota template
IFsrmQuota InterfaceWWM
This read-only property is the number of bytes currently charged to the quotaWy
This read-only property is the maximum number of bytes the quota was charged since the last time the peak usage was resetW:
This read-only property is the time the peak usage occuredf
This method is used to reset the peak usage mark to the number of bytes currently charged to the quota`
This method is used to refresh QuotaUsed, QuotaPeakUsage, and QuotaPeakUsageTime from the driverWW
IFsrmAutoApplyQuota InterfaceWW
This property is an array of first level subfolders to exclude from auto-quota creationWWW
This method is used to apply the auto apply quota changes to derived quotas and commit both the derived quotas and auto apply quota changes.  The resulting collection of derived quotas will be in Committing or Complete state depending on the synchronizaton optWW
IFsrmQuotaManager InterfaceWWW^
This method is used enumerate the runtime expanded variables available for quota notificationsr
This method is used enumerate the descriptions of the runtime expanded variables available for quota notifications0
This method is used to create a new quota objectWWQ
This method is used to create a new auto-quota object based on the given templateW6
This method is used to get a quota for a specific path<
This method is used to get an auto-quota for a specific pathWWK
This method is used to get the most restricting quota for an arbitrary pathWWW'
This method is used to enumerate quotasWWW,
This method is used to enumerate auto-quotasWWM
This method is used to enumerate all the quotas that affect an arbitrary pathW]
This method is used to start a quota scan on the directory tree underneath the specified pathW7
This method is used to create an empty quota collectionWWW
IFsrmQuotaManagerEx InterfaceWE
This method is used to check whether a given path is subject to quotaW
IFsrmQuotaTemplate InterfaceWW
property TemplateNameWW
This method is used to copy the properties of this template from the specified templateWWW
This method is used to apply the template changes to derived quotas and commit both the derived quotas and template changes.  The resulting collection of derived quotas will be in Committing or Complete state depending on the synchronizaton option chosen.  TheWW$
IFsrmQuotaTemplateImported InterfaceWW
property OverwriteOnCommit#
IFsrmQuotaTemplateManager InterfaceWWW,
This method is used to create a new templateWW-
This method is used to get a template by nameW*
This method is used to enumerate templatesQ
This method is used to copy the properties of this template from the input stringW
This method is used to import templates from the templates string representation.  The resulting collection, or individual objects contain therein, must be committed to finalize the importWW
IFsrmFileGroup InterfaceWW$
This property is the file group nameWW4
This property is the Members list for the file groupWW7
This property is the NonMembers list for the file groupWWW 
IFsrmFileGroupImported InterfaceWW
IFsrmFileGroupManager InterfaceWWW*
This method is used to create a file group<
This method is used to get a file group with a specific nameWW0
This method is used to enumerate all file groupsWW
This method is used to import templates from the file groups string representation.  The resulting collection, or individual objects contain therein, must be committed to finalize the import
IFsrmFileScreenBase InterfaceW=
This property is the file groups that this file screen blocksWN
This property is the bit field containing flags defined in FsrmFileScreenFlags=
This method is used to create an action of the specified typeW,
This method is used to enumerate all actionsWW
IFsrmFileScreen InterfaceW6
This read-only property is the path of the file screenP
This read-only property is name of the template that this object originated fromWWc
This read-only property is whether the file screen currently matches the template it orignated fromWWWK
This read-only property is the SID of the user whose files will be screenedWWWT
This read-only property is the account name of the user whose files will be screenedWWf
This method is used to copy the properties of this file screen from the specified data screen template"
IFsrmFileScreenException InterfaceG
This property is the file groups that this file screen exception allowsWWW 
IFsrmFileScreenManager InterfaceWWb
This method is used enumerate the runtime expanded variables available for screening notificationsv
This method is used enumerate the descriptions of the runtime expanded variables available for screening notifications+
This method is used to create a file screenWWW<
This method is used to get a file screen for a specific pathWW-
This method is used to enumerate file screensW5
This method is used to create a file screen exceptionWF
This method is used to get a file screen exception for a specific path7
This method is used to enumerate file screen exceptionsWWWV
This method is used to create an empty file screen or file screen exception collection!
IFsrmFileScreenTemplate InterfaceW
This method is used to apply the template changes to derived file screens and commit both the derived file screens and template changes.  The resulting collection of derived file screens will be in Committing or Complete state depending on the synchronizaton oWW)
IFsrmFileScreenTemplateImported InterfaceW(
IFsrmFileScreenTemplateManager InterfaceWW8
This method is used to create a new data screen templateWW9
This method is used to get a data screen template by nameW:
This method is used to enumerate all data screen templates'
This property is the type of the reportWWW'
This property is the name of the reportWWW.
This property is the description of the reportz
This property indicates the filename prefixes of the files that were generated by this report when the report was last run<
This method is used to get the value of the specified filterWW<
This method is used to set the value of the specified filterWW2
This method removes the report from the report jobN
This property is the name of the scheduled task associated with the report job>
This property contains the paths on which the reports will runD
This property contains the formats in which the generate the reportsWWH
This property is the e-mail address to which to send the reports, if anyWW8
This property indicates the run status of the report jobWW<
This property indicates the last time the report job was runWW]
This property indicates the last error that occurred when the report job was last run, if anyWh
This property indicates the directory in which the files were generated when the report job was last runWWD
This method is used to enumerate reports belonging to the report jobWW>
This method is used to create a report of the specificied typeU
This method is used to run all the reports in the report job in the specified contextW
This method is used to wait for the specified period of time or until all reports in the job are finished running and return whether or not the job is still runningWW2
This method cancels a currently running report job,
This method is used to enumerate report jobsWW.
This method is used to create a new report jobM
This method is used to get a report job having a specific scheduled task nameW]
This method is used to get the output directory of generated reports in the specified contextW]
This method is used to set the output directory of generated reports in the specified contextWf
This method is used to indicate whether a specified filter name is valid for the specified report typeb
This method is used to get the default value of the specified filter for the specified report typeb
This method is used to set the default value of the specified filter for the specified report type\
This method is used to get the default value of the specified limit for the specified reportWW\
This method is used to set the default value of the specified limit for the specified reportWW_
This method is used enumerate the runtime expanded variables available for file management jobsWWWs
This method is used enumerate the descriptions of the runtime expanded variables available for file management jobsWWW3
Enumerate the list of existing file management jobsWWW;
This property specifies the name of the file management jobWWW:
This property contains the paths on which the job will run:
This property specifies whether this job is enabled or notV
This property specifies the operation to perform on a file when all conditions are met
This property specifies the root directory for moving expired files to, when all the conditions are met and expiration is enabledWj
The property specifies the action to execute, when all the conditions are met and custom action is enabled^
This property specifies the list of notifications to perform before the operation is performedT
This property specifies the type(s) of logging, using FsrmFileManagementLoggingFlagsWW4
This property specifies whether reporting is enabledWW<
This property contains the formats of the report to generateWWf
This property is the e-mail address(es), delimited by semi-colon, to which to send the reports, if any
This property specifies a condition: minimum number of days elapsed since a file is created. FsrmDaysNotSpecified indicates this condition is disabled.WWW
This property specifies a condition: minimum number of days elapsed since a file is last accessed. FsrmDaysNotSpecified indicates this condition is disabled.W
This property specifies a condition: minimum number of days elapsed since a file is last modified. FsrmDaysNotSpecified indicates this condition is disabled.W:
This property specifies a list of FSRM property conditions
This property specifies a condition: The date from which the file management operation should be executed. FsrmDateNotSpecified indicates this condition is disabled.WG
This property is the name of the scheduled task associated with the jobWWWA
This property contains the parameters for the file management jobW.
This property is the running status of the job*
This property is the last error of the job7
This property is the last report path without extensionWWWE
This property indicates the last time the file management job was runWr
This property specifies a condition: wildcard filter for names. Empty string indicates this condition is disabled.;
This method is used to run the job in the specified contextWWW
This method is used to wait for the specified period of time or until the job has finished running and return whether or not the job is still runningW+
This method cancels a currently running jobWWW3
This method is used to add a new notification valueWWW,
This method is used to delete a notificationWW,
This method is used to modify a notificationWWF
This method is used to create a notification action of a specific type5
This method is used to enumerate notification actionsW0
This property specifies the name of the propertyWW1
This property specifies the type of the conditionW+
This property specifies the condition valueWWW2
This method is used to delete a property conditiong
This method create a new IFsrmPropertyCondition object and add it to the PropertyConditions collection.WWW[
This method create a new IFsrmActionCommand object and set it to the CustomAction property.WWW 
Create a new file management jobWW.
Get an existing file management job using name$
This method deletes a file conditionWW?
This property specifies the name of the classification propertyWWW4
This property specifies the predefined file propertyWW/
This property specifies the comparison operatorWWW-
This property specifies the type of the valueW!
This property specifies the valueW!
IFsrmPropertyDefinition InterfaceW4
This property is the name of the property definitionWW4
This property is the type of the property definitionWWE
This property contains the possible values of the property definitionWY
This property contains the descriptions of the possible values of the property definitionWA
This property contains the parameters for the property definitionW"
IFsrmPropertyDefinition2 Interface<
This property contains the flags for the property definitionWW<
This property is the display name of the property definitionWWL
This property contains the object types the property definition can apply toWWP
This property contains the possible value definitions of the property definitionWW&
IFsrmPropertyDefinitionValue Interface@
This property contains the name of the property definition valueWWH
This property contains the display name of the property definition valueWWG
This property contains the description of the property definition valueWWWE
This property contains the unique ID of the property definition valueW
IFsrmProperty InterfaceWWW)
This property is the name of the propertyW5
This property is the aggregated value of the propertyWq
This property contains the modules and rules that have set the value; entries are strings of the form MODULE,RULEW0
This property contains the flags of the propertyWW
IFsrmRule InterfaceWWW%
This property is the name of the ruleW*
This property returns the type of the ruleM
This property is the name of the module definition on which the rule will runW;
This property contains the paths on which the rule will runWWW.
This property contains the flags for the rules2
This property contains the parameters for the ruleP
This property indicates the last time the rule was modified as a 64-bit FILETIMEWW!
IFsrmClassificationRule InterfaceWD
This property indicates how often to execute the classification ruleWWD
This property is the property that this rule will potentially affectWWY
This property is the value that this rule will set the property to, if explicitly definedW'
IFsrmPipelineModuleDefinition InterfaceWWW[
This property is the string verison of the COM class ID of the module that is being definedWWW;
This property is the name of the pipeline module definitionWWWC
This property is the company name of the pipeline module definitionWWW>
This property is the version of the pipeline module definition0
This property is the type of the pipeline moduleWW1
This property determines if the module is enabledWN
This property determines if the module needs access to the content of the fileJ
This property is the account to use when running the classification moduleA
This property is the list of file extensions this module supportsWH
This property contains the parameters for the pipeline module definitionWW)
IFsrmClassifierModuleDefinition InterfaceWZ
This property contains the names of the properties potentially affected by this classifierV
This property contains the names of the properties potentially used by this classifier{
This property determines if a rule using this classifier needs to provide an explicit value for the property being modifiedWWW&
IFsrmStorageModuleDefinition InterfaceL
This property is the bit field containing capabilities of the storage moduleWW;
This property is the type of storage for the storage moduleWWWF
This property determines if the module updates the content of the file$
IFsrmClassificationManager InterfaceWWR
This property contains the formats in which to generate the classification reportsR
This property contains the types of logging that should be done for classificaitonW
This property is the e-mail address to which to send the classification reports, if anyWWW8
This property specifies whether report is enabled or notWWN
This property is the last classification report path without extension, if any6
This property is the last classification error, if any2
This property is the classification running status5
This method is used to enumerate property definitionsW7
This method is used to create a new property definitionWWWG
This method is used to get a property definition having a specific nameWWW:
This method is used to enumerate rules of a specified type<
This method is used to create a new rule of a specified typeWWL
This method is used to get a rule having a specific nameand a specified typeWWG
This method is used to enumerate module definitions of a specified typeWWWI
This method is used to create a new module definition of a specified typeWZ
This method is used to get a module definition having a specific name and a specified type3
This method is used to run the classification rulesWWW
This method is used to wait for the specified period of time or until classification is finished running and return whether or not the job is still runningWWW8
This method cancels the currently running classificationWW=
This method is used to enumerate all the properties of a fileW:
This method is used to get a specific property from a file:
This method is used to set a specific property from a file?
This method is used to clear the specified property from a fileWWW%
IFsrmClassificationManager2 InterfaceWY
This method is used to perform bulk enumeration, setting, and clearing of file propertiesW
IFsrmPropertyBag Interface%
This property is the name of the fileW.
This property is the relative path to the file@
This property is the name of the volume on which the file existsWWY
This property is the relative path of the namespace root under which the file was scannedW`
This property is the index that the scanner uses to refer to the volume on which the file existsWW#
This property is the ID of the fileWWW6
This property is the ID of the file's parent directory%
This property is the size of the fileW/
This property is the allocated size of the fileWWWC
This property is the creation time of the file as a 64-bit FILETIMEWWWF
This property is the last access time of the file as a 64-bit FILETIMEL
This property is the last modification time of the file as a 64-bit FILETIMEWW+
This property is the attributes of the fileWWW*
This property is the SID of the file ownerJ
This property contains a list of the names of the file metadata propertiesc
This property contains a list of all messages concerning classification of the file that were addedWWW4
This property is a set of flags for the property bagWW;
This method is used to get a file metadata property by nameWWW3
This method is used to set a file metadata propertyWWW3
This method is used to add a message about the fileWWW7
Gets a file stream interface to access the file contentWWW
IFsrmPropertyBag2 InterfaceWWW;
Gets the value of the specified field from the property bagWWW,
Gets the set of untrusted in-file propertiesWW+
IFsrmPipelineModuleImplementation InterfaceWWW&
IFsrmPipelineModuleConnector Interface
Get the module implementationW
Get the module nameWWW+
Get the module hosting process user accountWWW"
Get the module hosting process PID>
This method is used to bind the pipeline module implementation5
This method is used to initialize the pipeline moduleWC
This method is used to tell the module to perform any cleanup tasksWWW-
IFsrmClassifierModuleImplementation InterfaceWg
This property contains the last time the classifier's internal rules were modified as a 64-bit FILETIMEWWW
This method is used to tell the classifier the collection of rules and relevant property definitions it should expect to processWWk
This method is used to tell the classifier to prepare for processing a file with the specified property bagWWWb
This method is used to ask the classifier whether the specified property value applies to the filem
This method is used to ask the classifier what value should be applied for the specified property of the fileWY
This method is used to tell the classifier to perform any cleanup after processing a fileW*
IFsrmStorageModuleImplementation Interfaceb
This method is used to tell the storage module the collection property definitions FSRM recognizesE
This method is used to tell the storage module to load all propertiesWE
This method is used to tell the storage module to save all propertiesW$
DIFsrmClassificationEvents InterfaceWWp
This event handler method is used to receive properties of files that are returned in a bulk classification callWW
FsrmSetting ClassW
FsrmPathMapper ClassWW
FsrmExportImport Class
IFsrmImportExport InterfaceWWW4
This method is used to export file groups to a file.WW
This method is used to import file groups from a file.  The resulting collection, or individual objects contain therein, must be committed to finalize the importW=
This method is used to export file screen templates to a fileW
This method is used to import file screen templates from a file.  The resulting collection, or individual objects contain therein, must be committed to finalize the importWWW7
This method is used to export quota templates to a fileWWW
This method is used to import quota templates from a file.  The resulting collection, or individual objects contain therein, must be committed to finalize the importW
FsrmQuotaManager Class
FsrmQuotaTemplateManager Class
FsrmFileGroupManager Class
FsrmFileScreenManager ClassWWW#
FsrmFileScreenTemplateManager ClassWWW
FsrmReportManager ClassWWW
FsrmReportScheduler ClassWd
This method is used to verify that the array of namespaces exist and are valid, supported namespacesWW`
This method is used to create a scheduled task for a report on the local machine or in a clusterWW`
This method is used to modify a scheduled task for a report on the local machine or in a clusterWW`
This method is used to delete a scheduled task for a report on the local machine or in a clusterWW"
FsrmFileManagementJobManager Class
FsrmClassificationManager ClassWWW!
FsrmPipelineModuleConnector ClassW
AdSyncTask ClassWW&
The COM task handler action interface.0
Begin execution (spawn thread & return quickly).WW
Cease execution.WW+
Suspend execution until Resume() is called.WWW5
Start execution where it was when Pause() was called.W#
AccessDeniedRemediationClient ClassWWW,
IFsrmAccessDeniedRemediationClient InterfaceWW0
Displays the Access Denied Remediation client UXWW
8\q}L
_EYrb
L%H}:
+G)G_@
stdole2.tlbWWW
FsrmInternalLibW
x_FsrmFileManagementActionTypeWWW
DFsrmFileManagementActionType_Unknown
FsrmFileManagementActionType_ExpirationW
(FsrmFileManagementActionType_CustomW
FsrmFileManagementActionType_Rmsd
IFsrmReportManagerWW
_FsrmEnumOptions
042FsrmEnumOptions_None
FsrmEnumOptions_Asynchronous
FsrmEnumOptions_CheckRecycleBinW
FsrmEnumOptions_IncludeClusterNodesW
(0c;FsrmEnumOptions_IncludeDeprecatedObjects,
IFsrmCollectionW,
xA_NewEnum
unknownW,
zItem
indexWWW,
0vCountWWW
{_FsrmCollectionState
FsrmCollectionState_Fetching
XFsrmCollectionState_CommittingWW
FsrmCollectionState_Complete
FsrmCollectionState_CancelledWWW,
StateWWW,
CancelWW,
WaitForCompletionWWW
waitSecondsW
completedWWW,
cGetByIdWX
]idWW
entryWWWd
EnumReportJobsWW
optionsW
Q9reportJobsWW
IFsrmReportJobWWX
IFsrmObjectWX
 DescriptionWX
xDeleteWWX
CommitWW
taskName
NamespaceRootsWW
FormatsW
MailToWW
8`H_FsrmReportRunningStatus
FsrmReportRunningStatus_UnknownW
FsrmReportRunningStatus_NotRunningWW
FsrmReportRunningStatus_QueuedWW
FsrmReportRunningStatus_RunningW
XCRunningStatusWWW
LastRunW
hLastErrorWWW
zNLastGeneratedInDirectory
pEnumReportsW
reportsW 
8I%_FsrmReportTypeW 
FsrmReportType_UnknownWW 
4FsrmReportType_LargeFilesWWW 
FsrmReportType_FilesByTypeWW 
FsrmReportType_LeastRecentlyAccessed 
FsrmReportType_MostRecentlyAccessedW 
0R4FsrmReportType_QuotaUsageWWW 
GFsrmReportType_FilesByOwnerW 
FsrmReportType_ExportReportW 
fFsrmReportType_DuplicateFilesWWW 
FsrmReportType_FileScreenAuditWW 
FsrmReportType_FilesByPropertyWW 
FsrmReportType_AutomaticClassificationWW 
wFsrmReportType_ExpirationWWW 
FsrmReportType_FoldersByProperty
IFsrmReportW
reportTypeWW
F:LastGeneratedFileNamePrefixW
prefixWW
_FsrmReportFilterWWW
LFsrmReportFilter_MinSize
0eQFsrmReportFilter_MinAgeDaysW
WFsrmReportFilter_MaxAgeDaysW
FsrmReportFilter_MinQuotaUsageWW
FsrmReportFilter_FileGroupsW
FsrmReportFilter_OwnersW
FsrmReportFilter_NamePattern
FsrmReportFilter_PropertyWWW
GetFilterWWW
;filterWW
+filterValueW
*SetFilterWWW
[^CreateReport
reportWWL
9_FsrmReportGenerationContextL
FsrmReportGenerationContext_UndefinedWWWL
FsrmReportGenerationContext_ScheduledReportWL
FsrmReportGenerationContext_InteractiveReportWWWL
FsrmReportGenerationContext_IncidentReportWW
XncontextWd
WCreateReportJobW
N8reportJobWWWd
GetReportJobd
hGetOutputDirectoryWWd
SetOutputDirectoryWWd
IsFilterValidForReportTypeWW
'JvalidWWWd
GetDefaultFilterd
SetDefaultFilter
_FsrmReportLimit
FsrmReportLimit_MaxFiles
FsrmReportLimit_MaxFileGroupsWWW
HFsrmReportLimit_MaxOwnersWWW
FsrmReportLimit_MaxFilesPerFileGroup
FsrmReportLimit_MaxFilesPerOwner
FsrmReportLimit_MaxFilesPerDuplGroup
FsrmReportLimit_MaxDuplicateGroupsWW
FsrmReportLimit_MaxQuotasWWW
FsrmReportLimit_MaxFileScreenEventsW
FsrmReportLimit_MaxPropertyValuesWWW
FsrmReportLimit_MaxFilesPerPropertyValue
0NGFsrmReportLimit_MaxFoldersWWd
&wGetReportSizeLimitWW
limitWWW
limitValueWWd
SetReportSizeLimitWW
IFsrmReportManagerToolsW
'NGetReportJobByNameWW
reportJobNameWWW
ppReportJobW
GetRunningReportJobByNameWWWx
8a@IFsrmReportJobInternalWWx
<GetNameWx
PutNameWx
GetPersisted
persistedReportJobWWx
GetReportTypesWW
GRreportTypesWx
HPutReportTypesWWx
m\GetFileScreenAuditDaysSinceW
9ufileScreenAuditDaysSincex
PutFileScreenAuditDaysSinceWx
GetFileScreenAuditUserWW
fileScreenAuditUserWx
HPutFileScreenAuditUserWWx
GetFileGroupIncluded
0fileGroupIncludedWWWx
PutFileGroupIncludedx
qGetFileOwnerUser
8fileOwnerUserWWWx
7(PutFileOwnerUserx
aGetFileOwnerFilePatternW
fileOwnerFilePatternx
PutFileOwnerFilePatternWx
GetPropertyNameW
propertyNamex
PutPropertyNameWx
kGetFolderPropertyNameWWW
folderPropertyNameWWx
PutFolderPropertyNameWWWx
GetPropertyFilePatternWW
propertyFilePatternWx
 9PutPropertyFilePatternWWx
GetLargeFileMinimumW
tlargeFileMinimumx
7PutLargeFileMinimumWx
GetLargeFilePatternW
4largeFilePatternx
PutLargeFilePatternWx
$ GetLeastAccessedMinimumW
leastAccessedMinimumx
PutLeastAccessedMinimumWx
j"GetLeastAccessedFilePatternW
JleastAccessedFilePatternx
PutLeastAccessedFilePatternWx
GetMostAccessedMaximumWW
mostAccessedMaximumWx
nPutMostAccessedMaximumWWx
GetMostAccessedFilePatternWW
mostAccessedFilePatternWx
PutMostAccessedFilePatternWWx
GetQuotaMinimumUsage
quotaMinimumUsageWWWx
PutQuotaMinimumUsage
_runDurationHours
cIFsrmClassificationManagerWW
ClassificationReportFormatsW
LoggingW
ClassificationReportMailToWW
ClassificationReportEnabledW
reportEnabledWWW
ClassificationLastReportPathWithoutExtension
lastReportPathWW
ClassificationLastErrorW
ClassificationRunningStatusW
EnumPropertyDefinitionsW
propertyDefinitionsW@
IFsrmPropertyDefinitionW
8-,_FsrmPropertyDefinitionTypeW
"0rpFsrmPropertyDefinitionType_UnknownWW
KFsrmPropertyDefinitionType_OrderedListWW
FsrmPropertyDefinitionType_MultiChoiceListWW
FsrmPropertyDefinitionType_SingleChoiceListW
FsrmPropertyDefinitionType_StringWWW
FsrmPropertyDefinitionType_MultiStringWW
0:aFsrmPropertyDefinitionType_IntWW
FsrmPropertyDefinitionType_BoolW
MFsrmPropertyDefinitionType_DateW@
PossibleValuesWW@
'ValueDescriptionsWWW@
ParametersWW
CreatePropertyDefinition
propertyDefinitionWW
GetPropertyDefinitionWWW
>_FsrmRuleTypeWWW
FsrmRuleType_Unknown
FsrmRuleType_ClassificationW
0{}FsrmRuleType_Generic
EnumRulesWWWl
ruleType
sRulesWWWl
8M>IFsrmRuleWWWl
ModuleDefinitionNamel
RuleFlagsWWWl
LastModified
&xCreateRuleWW
7tRule
GetRuleW
ruleName
%_FsrmPipelineModuleTypeW
FsrmPipelineModuleType_UnknownWW
FsrmPipelineModuleType_StorageWW
FsrmPipelineModuleType_ClassifierWWW
EnumModuleDefinitionsWWW4
yKmoduleTypeWW
-moduleDefinitionsWWW4
IFsrmPipelineModuleDefinitionWWW4
ModuleClsidW4
CompanyW4
VersionW4
EnabledW4
}NeedsFileContent
_FsrmAccountType
FsrmAccountType_UnknownW
(FsrmAccountType_NetworkServiceWW
FsrmAccountType_LocalService
QFsrmAccountType_LocalSystemW
FsrmAccountType_InProcWW
FsrmAccountType_External
*FsrmAccountType_AutomaticWWW4
 AccountW
retrievalAccount4
SupportedExtensionsW
NnCreateModuleDefinitionWW
moduleDefinition
GetModuleDefinitionW
#>moduleNameWW
 (RunClassificationWWW
reserved
WaitForClassificationCompletionW
CancelClassification
\_FsrmGetFilePropertyOptionsW
8FsrmGetFilePropertyOptions_NoneW
FsrmGetFilePropertyOptions_NoRuleEvaluationW
FsrmGetFilePropertyOptions_PersistentWWW
FsrmGetFilePropertyOptions_FailOnPersistErrorsWW
'0?DFsrmGetFilePropertyOptions_SkipOrphanedW
EnumFilePropertiesWW
OfilePath
(lfilePropertiesWW`
8iHIFsrmPropertyWWW`
KValueWWW`
SourcesW`
cPropertyFlagsWWWH
oflagsWWW
GetFilePropertyW
property
SetFilePropertyW
@propertyValueWWW
,ClearFilePropertyWWW
(IFsrmClassificationManager2W
ClassifyFilesWWW
UcfilePathsWWW
propertyNamesWWW
propertyValuesWW(
!8'lIFsrmPipelineModuleImplementationWWW
8} IFsrmPipelineModuleConnector
 ModuleImplementation
pipelineModuleImplementation
userName
HostingUserAccountWW
B;userAccountW
[HostingProcessPidWWW
Bind(
OnLoadWW
moduleConnectorW(
OnUnload
IFsrmClassifierModuleImplementationW
UseRulesAndDefinitionsWWT
VIFsrmPropertyBagT
RelativePathT
VolumeNameWWT
mRelativeNamespaceRootWWWT
VolumeIndexW
volumeIdT
FileIdWWT
ParentDirectoryIdWWWT
SizeT
SizeAllocatedWWWT
O0CreationTimeT
LastAccessTimeWWT
LastModificationTimeT
AttributesWWT
OwnerSidT
FilePropertyNamesWWWT
0hMessagesT
A\PropertyBagFlags
filePropertyT
%cAddMessageWW
messageW
n_FsrmFileStreamingModeWW
FsrmFileStreamingMode_UnknownWWW
0ZkFsrmFileStreamingMode_ReadWW
TFsrmFileStreamingMode_WriteW
_FsrmFileStreamingInterfaceTypeW
FsrmFileStreamingInterfaceType_UnknownWW
vFsrmFileStreamingInterfaceType_ILockBytesWWW
FsrmFileStreamingInterfaceType_IStreamWWT
uGetFileStreamInterfaceWW
%paccessModeWW
interfaceTypeWWW
pStreamInterface
OnBeginFileW
propertyBagW
arrayRuleIds
'DoesPropertyValueApplyWW
applyValueWW
NidRuleWW
idPropDefWWW
GetPropertyValueToApplyW
OnEndFileWWW
 8;!IFsrmStorageModuleImplementation
[uUseDefinitionsWW
LoadPropertiesWW
SavePropertiesWW
IFsrmModuleHostW
CreateHostedInstance
clsidWWW
moduleImplWWH
IFsrmPipelineConsumerWWWH
IdentifierWWH
OnScanBeginW
scanInfoFlagsWWWH
OnFileWWH
OnScanEndWWWH
)OnWarningWWW
IFsrmConsumerModuleW
ConsumerCountWWW
AddConsumerW
MpipelineConsumer
GetConsumerW
CloneWWW
hconsumerModuleWW
IFsrmPipelineManager
RunScanW
kMCancelScanWWt
bIFsrmPipelineModuleImplementationWrappert
FWMIID
<pbstrMIIDWWWt
BindToConnectorW
$realModuleImplementation
LIFsrmTextReaderW
InitReaderWW
NInitializeWW
filterInitFlagsW
PchunkBreakTypeWW
ImaxTokenSize
$:readSize
GetNextTextToken
]VnextTextTokenWWW
pbEndOfTokensWWW
CloseWWW
IcGetErrorContextW
pErrorCxtWWW<
8\0IStorageModuleDefInternalWWW
_FsrmStorageModuleTypeInternalWW
JFsrmStorageModuleTypeInternal_UnknownWWW
2FsrmStorageModuleTypeInternal_CacheW
^FsrmStorageModuleTypeInternal_InFile
FsrmStorageModuleTypeInternal_DatabaseWW
$0\rFsrmStorageModuleTypeInternal_System
FsrmStorageModuleTypeInternal_Secure<
GetInternalStorageTypeWW
0mstorageTypeW
IFsrmRmsActionWW
includeFolderOwnerWW
P&fullControlUsers
oreadUsersWWW
writeUsersWW
rmsTemplateNameW
rmsTemplateLocaleWWW
IsFileProtectedW
ProtectFileW
dataOwnerWWW
LfolderOwnerW
GetLocaleFromNameWWW
localeWWh
eIFsrmGlobalStoreManagerWh
&IsStorePresentWW
strPathW
ZstrNameW
DpbIsStorePresenth
DeleteStoreWh
EnumStoresOnPath
NppStoreNamesh
GetStoreData
strStoreContentsh
D4SetStoreData
IFsrmEmailInternalWW
SendMail
,smtpServerWW
~ from
{replyToW
H_toWW
\ccWW
*xbccW
RPsubjectW
PtextBody
contentMediaType
attachmentsW0
IFsrmActionRunnerWWW
5IFsrmActionW
_FsrmActionTypeW
0?NFsrmActionType_UnknownWW
0[HFsrmActionType_EventLogW
/FsrmActionType_Email
FsrmActionType_CommandWW
FsrmActionType_ReportWWW
ActionTypeWW
RunLimitInterval
OgminutesW
RactionWW
UmacroIds
mmacroValuesW\
IFsrmActionEmail\
MailFrom\
jMailReplyToW\
MailCcWW\
MailBccW\
w/MailSubjectW\
MessageTextW0
RunEmail0
CreateAction0
|GetXmlElementWWW
xmlW0
"NLoadFromStringArrayW
namesWWW
valuesWW
vIFsrmActionCommandWW
RExecutablePathWW
j}ArgumentsWWW
WorkingDirectory
!MonitorCommandWW
KillTimeOutW
LogResultWWW
logResultsWW0
ExpandCommandParametersW
expandedExecutableWW
expandedArgumentsWWW0
wGetActionVariablesWW
uVdescriptions$
IFsrmPropertiesPropSheet$
hwndParentWW
~titleWWW
rIFsrmNrtLoggerWW
uLogItemW
SourceWW
LogTypes
LogLimit
[ItemName
>]SetOutputDir
/RCloseHandles
"8aJIFsrmFileManagementJobManagerToolsWW
ProcessNotifications
CreateNrtFmjModuleWW
ppValWWW
CreateConditionW
GetRunningFMJByNameW
FMJNameW
XTppFMJWWWP
IFileManagementJobActionResultWWP
mGetExitCodeW
KpdwCodeW
IFsrmFileManagementJobActionInternal
)JGetTypeW
PutTypeW
eGetExpirationFolderW
PutExpirationFolderW
VbGetRMSFolderOwnerWWW
{<PutRMSFolderOwnerWWW
GetRMSFullControlUsersWW
{PutRMSFullControlUsersWW
oGetRMSReadUsersW
kPutRMSReadUsersW
GetRMSWriteUsers
PutRMSWriteUsers
GetRMSTemplateWW
ZPutRMSTemplateWW
;yGetCustomActionW
+uPutCustomActionW
IFsrmFileManagementJobInternalWW
GetContinuousWWW
PutContinuousWWW
plnewValWW
+GetContinuousLog
PutContinuousLog
GetContinuousLogSize
PutContinuousLogSize
GetConditionsWWW
DeleteConditions|
8sFIFsrmFMJConditionInternalWWW|
GetPropertyW|
GvPutPropertyW
_FsrmPropertyConditionTypeWW
FsrmPropertyConditionType_UnknownWWW
FsrmPropertyConditionType_EqualW
FsrmPropertyConditionType_NotEqualWW
FsrmPropertyConditionType_GreaterThanWWW
FsrmPropertyConditionType_LessThanWW
FsrmPropertyConditionType_ContainWWW
/FsrmPropertyConditionType_ExistW
FsrmPropertyConditionType_NotExistWW
FsrmPropertyConditionType_StartWithW
!00"FsrmPropertyConditionType_EndWithWWW
FsrmPropertyConditionType_ContainedInWWW
"0nZFsrmPropertyConditionType_PrefixOfWW
*FsrmPropertyConditionType_SuffixOfWW
FsrmPropertyConditionType_MatchesPattern|
GetOperatorW|
;*PutOperatorW|
]GetValue|
0PutValue|
_GetDateOffsetWWW|
PutDateOffsetWWW
AddCondition
GetActionWWW
PutActionWWW
KNpNewValW
PutReportFormatsInternal
PGetReportFormatsInternal
GetFlags
plFlagsWD
8@aIFsrmNrtFmjModuleWWWD
c=RefreshConsumers
changedW
nrtFmjCountW
FsrmReportManagerInprocW
vFsrmFileManagementJobManagerInprocWWp
eIFsrmFileManagementJobManagerWWWp
xActionVariablesW
variablesWWWp
0ActionVariableDescriptionsWWp
5EnumFileManagementJobsWW
fileManagementJobsWW
IFsrmFileManagementJobWW8
_FsrmFileManagementTypeW8
FsrmFileManagementType_UnknownWW8
FsrmFileManagementType_ExpirationWWW8
{FsrmFileManagementType_CustomWWW8
FsrmFileManagementType_RmsWW
.OperationTypeWWW
PZExpirationDirectoryW
_CustomAction
dNotificationsWWW
loggingFlags
ODaysSinceFileCreated
gdaysSinceCreationWWW
DaysSinceFileLastAccessedWWW
}YdaysSinceAccessW
DaysSinceFileLastModifiedWWW
daysSinceModifyW
yPropertyConditionsWW
FromDate
RLLastReportPathWithoutExtensionWW
FileNamePatternW
AddNotificationW
=;days
WDeleteNotificationWW
ModifyNotificationWW
_newDaysW
)CreateNotificationAction
?EnumNotificationActionsW
actionsW
IFsrmPropertyConditionWW
CreatePropertyConditionW
propertyConditionWWW
CreateCustomActionWWp
/CreateFileManagementJobW
QWfileManagementJobWWWp
GetFileManagementJob
FsrmAdsCacheModuleWWd
FsrmFolderClassifierModuleWW
FsrmContentClassifierModuleW,
|FsrmPowerShellClassifierModuleWW
EFsrmSPDocumentParserModuleWW
FsrmConsumerModuleInprocX
8NzFsrmTextReaderWW
!FsrmRmsActionWWW 
8@.FsrmPipelineManagerWrapperWW
FsrmModuleHostWW
IFsdmHostedModuleWWW
TraceWWWL
"FsrmModuleHostCreatorWWW
IFsdmHostCreator
IFsdmHostLifetimeWWW
WLSignalExitEventW
HCHandshakeWWW
cookieWW
qYpHostedObjectWWW
\/pHostProcessLifetimeMgmt
DpvServiceProcessHandleWWx
FsrmGlobalStoreManagerWW
KFsrmEmailInternalWWW@
4FsrmFileManagementJobActionRunnerWWW
9FsrmClassificationManagerService
FsrmPropertiesPropSheetWl 
8O4FsrmSecureModule
FsrmClassificationCtrlInproc4!
aIFsrmClassificationCtrlW4!
J|GetRunningStatus
FsrmClassificationCtrlWW
FsrmNrtLoggerWWW
FSRM 1.0 Internal Type Library
IFsrmCollection InterfaceW
property _NewEnumW<
This property is the accessor to collection entries by indexWW
This property returns the number of entries in the collection.  If the collection is still in the Fetching state, the returned value is the current count and can be expected to increase on a subsequent call.WWWx
This property reveals the state of the collection; whether it is being retrieved, being committed, or complete (stable).WWg
This method will cause the current collection enumeration or commit operation, if any, to be cancelled.WWW
This method is used to wait for the specified period of time or until all objects in the collection are read and return whether or not the collection is completeWV
This method returns from the collection the object at the entry at the specified index,
This method is used to enumerate report jobsWW
IFsrmObject InterfaceW>
This property is the globally unique identifier for the object.
This property is the description of the objectU
This method is used to delete the object.  Commit is required to finalize the delete.WB
This method is used to commit the new, modified, or deleted objectN
This property is the name of the scheduled task associated with the report job>
This property contains the paths on which the reports will runD
This property contains the formats in which the generate the reportsWWH
This property is the e-mail address to which to send the reports, if anyWW8
This property indicates the run status of the report jobWW<
This property indicates the last time the report job was runWW]
This property indicates the last error that occurred when the report job was last run, if anyWh
This property indicates the directory in which the files were generated when the report job was last runWWD
This method is used to enumerate reports belonging to the report jobWW'
This property is the type of the reportWWW'
This property is the name of the reportWWW.
This property is the description of the reportz
This property indicates the filename prefixes of the files that were generated by this report when the report was last run<
This method is used to get the value of the specified filterWW<
This method is used to set the value of the specified filterWW2
This method removes the report from the report job>
This method is used to create a report of the specificied typeU
This method is used to run all the reports in the report job in the specified contextW
This method is used to wait for the specified period of time or until all reports in the job are finished running and return whether or not the job is still runningWW2
This method cancels a currently running report job.
This method is used to create a new report jobM
This method is used to get a report job having a specific scheduled task nameW]
This method is used to get the output directory of generated reports in the specified contextW]
This method is used to set the output directory of generated reports in the specified contextWf
This method is used to indicate whether a specified filter name is valid for the specified report typeb
This method is used to get the default value of the specified filter for the specified report typeb
This method is used to set the default value of the specified filter for the specified report type\
This method is used to get the default value of the specified limit for the specified reportWW\
This method is used to set the default value of the specified limit for the specified reportWW!
IFsrmReportManagerTools InterfaceWJ
IFsrmReportJobInternal interface, used by WMI to implement storage reports$
IFsrmClassificationManager InterfaceWWR
This property contains the formats in which to generate the classification reportsR
This property contains the types of logging that should be done for classificaitonW
This property is the e-mail address to which to send the classification reports, if anyWWW8
This property specifies whether report is enabled or notWWN
This property is the last classification report path without extension, if any6
This property is the last classification error, if any2
This property is the classification running status5
This method is used to enumerate property definitionsW!
IFsrmPropertyDefinition InterfaceW4
This property is the name of the property definitionWW4
This property is the type of the property definitionWWE
This property contains the possible values of the property definitionWY
This property contains the descriptions of the possible values of the property definitionWA
This property contains the parameters for the property definitionW7
This method is used to create a new property definitionWWWG
This method is used to get a property definition having a specific nameWWW:
This method is used to enumerate rules of a specified type
IFsrmRule InterfaceWWW%
This property is the name of the ruleW*
This property returns the type of the ruleM
This property is the name of the module definition on which the rule will runW;
This property contains the paths on which the rule will runWWW.
This property contains the flags for the rules2
This property contains the parameters for the ruleP
This property indicates the last time the rule was modified as a 64-bit FILETIMEWW<
This method is used to create a new rule of a specified typeWWL
This method is used to get a rule having a specific nameand a specified typeWWG
This method is used to enumerate module definitions of a specified typeWWW'
IFsrmPipelineModuleDefinition InterfaceWWW[
This property is the string verison of the COM class ID of the module that is being definedWWW;
This property is the name of the pipeline module definitionWWWC
This property is the company name of the pipeline module definitionWWW>
This property is the version of the pipeline module definition0
This property is the type of the pipeline moduleWW1
This property determines if the module is enabledWN
This property determines if the module needs access to the content of the fileJ
This property is the account to use when running the classification moduleA
This property is the list of file extensions this module supportsWH
This property contains the parameters for the pipeline module definitionWWI
This method is used to create a new module definition of a specified typeWZ
This method is used to get a module definition having a specific name and a specified type3
This method is used to run the classification rulesWWW
This method is used to wait for the specified period of time or until classification is finished running and return whether or not the job is still runningWWW8
This method cancels the currently running classificationWW=
This method is used to enumerate all the properties of a fileW
IFsrmProperty InterfaceWWW)
This property is the name of the propertyW5
This property is the aggregated value of the propertyWq
This property contains the modules and rules that have set the value; entries are strings of the form MODULE,RULEW0
This property contains the flags of the propertyWW:
This method is used to get a specific property from a file:
This method is used to set a specific property from a file?
This method is used to clear the specified property from a fileWWW%
IFsrmClassificationManager2 InterfaceWY
This method is used to perform bulk enumeration, setting, and clearing of file propertiesW+
IFsrmPipelineModuleImplementation InterfaceWWW&
IFsrmPipelineModuleConnector Interface
Get the module implementationW
Get the module nameWWW+
Get the module hosting process user accountWWW"
Get the module hosting process PID>
This method is used to bind the pipeline module implementation5
This method is used to initialize the pipeline moduleWC
This method is used to tell the module to perform any cleanup tasksWWW-
IFsrmClassifierModuleImplementation InterfaceWg
This property contains the last time the classifier's internal rules were modified as a 64-bit FILETIMEWWW
This method is used to tell the classifier the collection of rules and relevant property definitions it should expect to processWW
IFsrmPropertyBag Interface%
This property is the name of the fileW.
This property is the relative path to the file@
This property is the name of the volume on which the file existsWWY
This property is the relative path of the namespace root under which the file was scannedW`
This property is the index that the scanner uses to refer to the volume on which the file existsWW#
This property is the ID of the fileWWW6
This property is the ID of the file's parent directory%
This property is the size of the fileW/
This property is the allocated size of the fileWWWC
This property is the creation time of the file as a 64-bit FILETIMEWWWF
This property is the last access time of the file as a 64-bit FILETIMEL
This property is the last modification time of the file as a 64-bit FILETIMEWW+
This property is the attributes of the fileWWW*
This property is the SID of the file ownerJ
This property contains a list of the names of the file metadata propertiesc
This property contains a list of all messages concerning classification of the file that were addedWWW4
This property is a set of flags for the property bagWW;
This method is used to get a file metadata property by nameWWW3
This method is used to set a file metadata propertyWWW3
This method is used to add a message about the fileWWW7
Gets a file stream interface to access the file contentWWWk
This method is used to tell the classifier to prepare for processing a file with the specified property bagWWWb
This method is used to ask the classifier whether the specified property value applies to the filem
This method is used to ask the classifier what value should be applied for the specified property of the fileWY
This method is used to tell the classifier to perform any cleanup after processing a fileW*
IFsrmStorageModuleImplementation Interfaceb
This method is used to tell the storage module the collection property definitions FSRM recognizesE
This method is used to tell the storage module to load all propertiesWE
This method is used to tell the storage module to save all propertiesW
IFsrmModuleHost InterfaceWI
This method creates a hosted pipeline module implementation and connectorW
IFsrmPipelineConsumer InterfaceWWW@
This property is the unique identifier for the pipeline consumerWW2
This property is the name of the pipeline consumer\
This property contains the paths of which the pipeline consumer will consume file propertiesWW:
This property contains the flags for the pipeline consumer?
This method will be called by the pipeline before a scan beginsWWWD
This method will be called by the pipeline for each file in the scanWWC
This method will be called by the pipeline after a scan is finishedWWW6
This method will be called by the pipeline on warnings
IFsrmConsumerModule InterfaceWT
This property returns the number of pipeline consumers that were added to the moduleWW2
This method adds a pipeline consumer to the module4
This method gets the consumer at the specified indexWWH
This method creates a new consumer module with the same set of consumersWW
IFsrmPipelineManager Interface:
This method is used to create a new classification session9
This method is used to refresh the pipeline configurationW2
IFsrmPipelineModuleImplementationWrapper Interface
Get the Module Instance ID
Set the Module Instance ID
Attach to an existing connectorWWW
IFsrmTextReader InterfaceW"
This method initializes the readerB
This method initializes the text reader with the next property bag@
This method returns the next text token from the file's contentsWW"
This method closes the text reader
Get the last error context#
IStorageModuleDefInternal InterfaceWWW:
This method returns the internal value of the storage type
IFsrmRmsAction InterfaceWW7
This method initializies the RMS action for the FMJ runWWW+
This method checks if the file is protectedWWW$
This method protects a specific fileWW+
This returns a Locale for the template nameWWW!
IFsrmGlobalStoreManager InterfaceW3
This method is used to detect if a store is presentWWW%
This method is used to delete a storeW7
This method is used to enumerate stores on a given pathWWW2
This method is used to set the contents of a store
IFsrmEmailInternal InterfaceWW$
This method is used to send an emailWW
IFsrmActionRunner InterfaceWWW
IFsrmAction InterfaceWA
This property returns a globally unique identifier for the objectW2
This property returns the type of the notification
property RunLimitIntervalW
This method removes the action.WWW$
This method is used to run an actionWW
IFsrmActionEmail Interface
property MailFromW
property MailReplyToWW
property MailToWWW
property MailCcWWW
property MailBccWW
property MailSubjectWW
property MessageTextWW;
This method is used to run an email action with attachmentsWWW'
This method is used to create an actionWWWV
This method is used to serialize an action into an xml element and get the xml elementE
This method is to load properties from a string array into the actionW
IFsrmActionCommand InterfaceWW
property ExecutablePathWWW
property Arguments
property AccountWW
property WorkingDirectoryW
property MonitorCommandWWW
property KillTimeOutWW
property LogResult/
This method is used to expand an action commandWWWF
This method is used enumerate the runtime expanded variables available3
This method shows the FCI properties property sheetWWW
IFsrmNrtLogger InterfaceWW?
Logs an item in the continuous log associated with a log sourceWWW&
Sets the output directory for all logs"
Closes all outstanding log handles,
IFsrmFileManagementJobManagerTools InterfaceWWR
This is called by the storrep app to execute the FMJ notification processing code.%
Creates a new NRT FMJ module instanceW!
Creates a new FMJ action instanceW$
Creates a new FMJ condition instanceWW)
Gets a running instance of an FMJ by nameW(
IFileManagementJobActionResult InterfaceWWJ
IFsrmFileManagementJobActionInternal Interface. Used only by WMI provider.D
IFsrmFileManagementJobInternal Interface. Used only by WMI provider.WW?
IFsrmFMJConditionInternal Interface. Used only by WMI provider.WWWI
IFsrmNrtFmjModule interface, used by real-time file management job engineWC
Refreshes the list of real-time-enabled file management job objectsWWW_
This method is used enumerate the runtime expanded variables available for file management jobsWWWs
This method is used enumerate the descriptions of the runtime expanded variables available for file management jobsWWW3
Enumerate the list of existing file management jobsWWW;
This property specifies the name of the file management jobWWW:
This property contains the paths on which the job will run:
This property specifies whether this job is enabled or notV
This property specifies the operation to perform on a file when all conditions are met
This property specifies the root directory for moving expired files to, when all the conditions are met and expiration is enabledWj
The property specifies the action to execute, when all the conditions are met and custom action is enabled^
This property specifies the list of notifications to perform before the operation is performedT
This property specifies the type(s) of logging, using FsrmFileManagementLoggingFlagsWW4
This property specifies whether reporting is enabledWW<
This property contains the formats of the report to generateWWf
This property is the e-mail address(es), delimited by semi-colon, to which to send the reports, if any
This property specifies a condition: minimum number of days elapsed since a file is created. FsrmDaysNotSpecified indicates this condition is disabled.WWW
This property specifies a condition: minimum number of days elapsed since a file is last accessed. FsrmDaysNotSpecified indicates this condition is disabled.W
This property specifies a condition: minimum number of days elapsed since a file is last modified. FsrmDaysNotSpecified indicates this condition is disabled.W:
This property specifies a list of FSRM property conditions
This property specifies a condition: The date from which the file management operation should be executed. FsrmDateNotSpecified indicates this condition is disabled.WG
This property is the name of the scheduled task associated with the jobWWWA
This property contains the parameters for the file management jobW.
This property is the running status of the job*
This property is the last error of the job7
This property is the last report path without extensionWWWE
This property indicates the last time the file management job was runWr
This property specifies a condition: wildcard filter for names. Empty string indicates this condition is disabled.;
This method is used to run the job in the specified contextWWW
This method is used to wait for the specified period of time or until the job has finished running and return whether or not the job is still runningW+
This method cancels a currently running jobWWW3
This method is used to add a new notification valueWWW,
This method is used to delete a notificationWW,
This method is used to modify a notificationWWF
This method is used to create a notification action of a specific type5
This method is used to enumerate notification actionsW0
This property specifies the name of the propertyWW1
This property specifies the type of the conditionW+
This property specifies the condition valueWWW2
This method is used to delete a property conditiong
This method create a new IFsrmPropertyCondition object and add it to the PropertyConditions collection.WWW[
This method create a new IFsrmActionCommand object and set it to the CustomAction property.WWW 
Create a new file management jobWW.
Get an existing file management job using name 
FsrmSPDocumentParserModule ClassWW
FsrmModuleHost ClassWW
FsrmModuleHostCreator ClassWWW
FsrmGlobalStoreManager ClassWW
FsrmEmailInternal ClassWWW'
FsrmFileManagementJobActionRunner ClassWWW!
IFsrmClassificationCtrl InterfaceW
TYPELIB
en-US
