!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$`H3
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
fA94@u
fA94@u
fA94@u
A_A^_^]
\$ UVWAVAWH
f94Bu
fA94@u
fA94@u
A_A^_^]
\$ UVWATAVH
f94Bu
f94Bu
f94Bu
A^A\_^]
x ATAVAWH
@A_A^A\
@USWH
f9<Bu
f9<Bu
f9<Bu
f9<Ju
@USVWH
f94Bu
f94Ju
L$XE3
D$(E3
L$ E3
D$`E3
D$hE3
\$ UVWATAVH
f94Bu
fA94@u
fA94@u
A^A\_^]
q0R^G'
q0R^G'
q0R^G'
q0R^G'
@SVWH
\$ UH
M H1E
 H3E H3E
u/HcH<H
ntelA
ineID
H SWH
D$PE3
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
\$ VWAVH
D$0H;
@USVWATAVAWH
L$8fD9!u
D9d$(
L$ E3
t)D8%
A_A^A\_^[]
@USVWATAUAVAWH
L$hf99u
L$PE3
t)@8=
A_A^A]A\_^[]
@SUVWATAVAWH
t-D8%
L9cHu
A_A^A\_^][
L$ SUVWH
L$hH+
f9,Cu
(_^][
x AVH
@SVWH
x AWH
L$PH3
VWATAVAWH
 A_A^A\_^
@SUVWAVH
sG@84
@8t$Pt<H
L$XH3
`A^_^][
@UATAUAVAWH
D3] E3
epA_A^A]A\]
@UATAUAVAWH
e`A_A^A]A\]
@UATAUAVAWH
D3] D3
epA_A^A]A\]
@UATAUAVAWH
D3U D+
e`A_A^A]A\]
@UATAUAVAWH
epA_A^A]A\]
f9<Pu
D$@E3
VWAVH
 A^_^
p AWH
%H!y H
.bmnA
.bmnL
.bmnH
E=PfE
E=PfH
E=PfH
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
x AVH
@SUVWAV
A^_^][
@SUVWAV
D$PE3
A^_^][
\$ UVWATAUAVAWH
L$8fD9)u
D9l$(|
D$,D8-
L$ E3
t)D8-
x AVH
t:fA9(t4H
fA9,@u
L$PH3
x AVH
p AWH
t$ UWATAVAWH
T$PE3
H!_(H!_0H!_8H!_@M
A_A^A\_]
jg@& 
l$ VWAVH
L$0E3
L$0fD
UVWATAUAVAWH
D8d$@tCH
t$(E3
D$8E3
L$XE3
D$8E3
D$pE3
A_A^A]A\_^]
L$ UVWATAUAVAWH
pA_A^A]A\_^]
97tEA
A8]8t
3D$H#
VWAVH
D$xE3
D$HE3
WAVAWH
D98tyH
 A_A^_
@USVWAWH
A__^[]
UAVAWH
@A_A^]
D$@E3
` UAVAWH
|$(E3
A_A^]
VWAVH
0A^_^
t$ WH
t$ WH
t#f90t
\$0E3
@USWH
WAVAWH
}0H+}(H
0A_A^_
t$ WAVAWH
s8D8{@uLL9>u
0A_A^_
D$@E3
VWATAVAWH
 A_A^A\_^
UWATAVAWH
A_A^A\_]
VWAVH
~0uSH
D$@E3
 A^_^
WATAUAVAWH
T$0E3
A_A^A]A\_
L$ UVWATAUAVAWH
C D8U@u
A_A^A]A\_^]
t$ UWATAUAVH
D$HD+D$xH
D+D$xH
u2H;u
A^A]A\_]
t$ WH
L$0H3
L$xE3
L$ UWAUAVAWH
@A_A^A]_]
VWAVH
0A^_^
WAVAWH
rHfD9?w
C9fD9?u,
 A_A^_
t$ WATAUAVAWH
f9<Au
f9<Au
fD9<Ou
|$(H;
|$0H;
|$8H;
|$HH;
|$pH;
t$XE3
t4E88t/H
E8<0u
 A_A^A]A\_
UVWATAUAVAWH
fE9,@u
rkfA9L@
t0D8m
t0D8m
A_A^A]A\_^]
@USVWATAUAVAWH
fD9(t
D9l$@t
fD98t
fD9,Gu
A_A^A]A\_^[]
x ATAVAWH
A_A^A\
H UATAUAVAWH
@8|$Hu
@8|$I
A_A^A]A\]
UWAVH
fD94Gu
D9s u
@USVWAVH
A^_^[]
L$ SVWAVH
8A^_^[
x ATAVAWH
 A_A^A\
WAVAWH
 A_A^_
x UAVAWH
T$0H+
L$0fD
HcD$$HcL$ H
A_A^]
WAVAWH
A_A^_
UVWATAUAVAWH
G9]@t
u@uHM
@8u@u H
D$ E3
`A_A^A]A\_^]
x AVH
WAVAWH
fD96u)L
 A_A^_
L$0E3
\$ WH
x AVH
x AVH
x AVH
l$ VWATAVAWH
L$8H3
A_A^A\_^
L$`E3
L$0E3
h UAVAWH
L$@I+
L$PH;
T$PL;
A_A^]
WAVAWH
A_A^_
D$(E3
D$`E3
L$`H3
L$ UH
L$`H3
9NGOC
.rS@'
1z<1y
{SXF.
Z=[NN
'upI>i
0DH3S
9/l,m
BY3@N
=[]$Q
/^?gT
Lg6OM
k=at-
nbi--M 
3BEge
'\_,w
}h)HTp%
],WyS
A%!?(
fj{S!<
2OWh$
=zR8;6%
mz@?2
'=6Xa<
nLv,E)
/KxXkB
w}(e<
^HtF+:7$
mGgdO
w=u(J8sG
a`)M?H
3+wyl
3W?7r
kzS^M3
o6T>Y
9G}F)
vMlX9
$@wgZ
t+?dH
gVt^/>&
v({`;
wh[gx
<mrl{[[
9^&=V
Y0Cc'
Yl!v>6
 P" xg
"QM|a
YSoy 
VWAVH
0A^_^
+Z>Cm
%+)+8
f26]`
c\-qx&
islgq
9O7b7=W
tHC&g
J&h8^
0>4^~r
=Z6kNp
_(scR
_fhD<
qKn?7
jR`]>
`9c``.'
ee!^e
'%y3N
[E<aM
,>< rS
n,GdR
kiBXn
.f9!\SW
5/y^Xv
RdKv[
w_21,
DoL0s!U
Jq&`F"
.P{duI~
Q!`Cu
.R~Az<
,v%1P
L/gB:
%(^=1
2VCS5
fO`R 
E@J;\
HjD4p
qr4%v
l_iqo
Tw8dl}
V4K6`
nAGD[
^@rH8
a=d0'
WQ7@H
v5mwHl
sL"1uC
OMO|c
:ad%q
p`wt1D
'4@^.Cj
q'"=}
^eCn_lu
vfAcn
`+kgX
aq{xy
qOTT\\
dAJ_4
Z;5,J
,x~UP
#1K';
&.Pwq
_lhp-W
3Mu!D
gS[06
A1[6Z
gA|fE
Tbd]RV
lA9ga
KgB*(
q)`3u
"S-Ox
CZhQV
9>Iye
2ai;B
ZA EaWi
,5 s,
uI3{7Z\
9:Sa)
~}*1M
B[~yB
&D&=T
j .fD
v,:\n
vsmVVQ
p>UD 
~<`q=Z-S
*-nbW
R7r+h m|2
_ZRyi
I-3@%
bTDeS
@Aku'
!'Ja^
*<3J[@
UATAUAVAWH
fE9,Fu
A_A^A]A\]
ztQ2%
T1[7}
/JLH0
^Y9=O
Bva8'
D4?;p
$#hF7s
p.m\\
$Hbg9
83MgM
z&!Z82
PmB}:
h{t]M
\?3B[z+
2=t?x
0jgwB
HKv3r
*Bi_>
 V:~0
Vdav)
qd=!b7\T
,<J/P
V::P%
o]xXI
y3gs*
1Fz"0
zk6%E3
0\y\6
s) 9h
9)M@}
deV{h
8|gz5
C x(@
$r=Os8k
J:J[6
L`GwG
-B;v[X`
>.b9u
PL;,;+
Ond)P
m$!vVD
t)8*)c
VD+(1
%?0\6!
>'8xZ
hj%Vx,x
}67`'
#q')B~
}.124
<ijcKa
pN.H11
ay%gN}
NkxwI
pL'; 
pK( *H
:T+8mi
_YN(=
)`Wpf
m"HN5
>~xJA
<xB~9{
CO2IT:
I_D/3
EE#i2
y^m:S
9%B\OX
QECxt
u^5i2
x|+jI
zE$A,
lHBv5Xn
M.Wg~
VYot=
TN1_z
x:rUZ
vU|5 
3@!38
5hF#W
,Jo3\
|$ UAVAWH
A_A^]
USVWAVH
@A^_^[]
UWATAVAWH
8EXt&H
A_A^A\_]
x AVH
x AVH
WATAUAVAWH
0A_A^A]A\_
x AVH
L$1D+
L$`H3
x ATAVAWH
 A_A^A\
<@\t=fB
<@/t5L
t[f9+tV
D$ H;
<P/u(
UVWATAUAVAWH
D$xE3
 A_A^A]A\_^]
WATAUAVAWH
fD9 t
r#fD9
 A_A^A]A\_
WATAUAVAWH
fE9,Pu
A_A^A]A\_
UVWATAUAVAWH
t$xE3
T$0D9E
D9D$0
<A\t$H
A_A^A]A\_^]
$0< u
L$ SVWH
\$ E3
8\$ u
L$PH3
x AVH
UVWATAUAVAWH
|$hE3
D$`D8\$ht
 A_A^A]A\_^]
L$ SVWH
x AVH
L$hE3
WAVAWH
fF9<Nu
fD9<Bu
L$4E3
@A_A^_
SUVWAVH
fD94Cu
fD94Nu
t$ E3
D$ E3
PA^_^][
VWAVH
 A^_^
UVWAVAWH
t$fD98t
A_A^_^]
UAVAWH
A_A^]
L$PH3
VWAVH
USVWATAUAVAWH
xA_A^A]A\_^[]
t$ WH
@USWH
@USVWAVH
A^_^[]
|$ UATAVH
A^A\]
H!\$83
H!\$0H!\$(H!\$ 3
C !C0H
C8!CHH
CP!C`f
]8!E0L
|$ UATAUAVAWH
fD9,Fu
D9m0u?H
A_A^A]A\]
t$ WH
L$0H3
UVWATAUAVAWH
fD9$Gu
?-u<H
A_A^A]A\_^]
x AVH
x AVH
WAVAWH
 A_A^_
{ AVH
L$pH3
UVWATAUAVAWH
fD94Ju
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
t$ UWAWH
f94Qu
E0f;0
 A__]
USWATAUAVAWH
A_A^A]A\_[]
\$ UVWATAUAVAWH
T$hE3
t$fD9(t
A_A^A]A\_^]
x UAVAWH
A_A^]
l$(E3
D$TE3
\$ UVWAVAWH
pA_A^_^]
t$ UWATAVAWH
fD9<Fu
fD9<Fu
fD90t
fD9<Fu
A_A^A\_]
UVWATAUAVAWH
A_A^A]A\_^]
UWAVH
UVWAVAWH
A_A^_^]
@USWH
@USVWAVH
A^_^[]
UVWATAUAVAWH
7D8mPuJ
@A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
@USWH
t$ WH
L$XH3
t$ WH
f94Au
\$ WH
qiZR46
qiZR46
L$HH3
L$@H3
L$@H3
UAVAWH
@A_A^]
VWAVH
L$XE3
0A^_^
UWAVH
@A^_]
^eN??
8+Kx<
f(H%l
q!r&qb*
Q%z>*
PDjMxb
BP}_\
\)odu
N:1Rj
?Yd!6*c$P
C!8om
o+_~C
{00xh
(\[7mqnI
'N>&E
3.,;/
k^3N`;3
zEJ#R
|Q+wj
// 1rM
h'!B2
[4jt4
|not`
1Crz&
5RrP%S/N
ao~JH
:"tkG/
TB,0Nt
W=7e/
KjqgO|
It8w}
V8y!=
]sfPF
PxHX<
_Z1/5
_eM<w
*lU@* l{j#
'w3+&
RA4^R
<Y1pE
8=sF"^
T2wtH
x~4Q)
Jg.c%
9%w`?
~k?ei
D4+8-cb
d-5E]
(?o8m*
RmO/y[
IhM.yt
UVWAVAWH
(D$`H
(D$`H
fD9<Cu
A_A^_^]
L$ USVATAUAVAWH
`A_A^A]A\^[]
$H92t1L
L$ UWAUAVAWH
A_A^A]_]
UVWATAWH
<H9|$htE
A_A\_^]
UVWATAUAVAWH
fD9$Cu
fD9$Nu
`A_A^A]A\_^]
@SUVWH
l$ E3
L$XH3
h_^][
UWAUAVAWH
D8}XtQD8}
A_A^A]_]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
fD9,Fu
D9l$HtSH
D9l$Ht
D9l$8
D8l$0t"A
D9t$8t`H
D9t$8t
A_A^A]A\_^]
UATAUAVAWH
A_A^A]A\]
x UATAUAVAWH
t08\$8t"H
H9\$0v
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
8\$8t
H9\$0
H;|$0r
H9\$0
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
H9\$0
H;|$0r
H9\$0
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
t08\$8t"H
H9\$0v
H;|$0r
A_A^A]A\]
UVWATAUAVAWH
fF94xu
MXH9q,r
fE94Hu
P(9Q(t$
MX9A(
A_A^A]A\_^]
VWATAVAWH
H9)t*H
D$P@@
 A_A^A\_^
UATAUAVAWH
@8t$0t<L
H9t$8t
A_A^A]A\]
L$ UH
L$ UH
UWATAVAWH
A_A^A\_]
@SUVWAVH
D$0E3
L$pH3
A^_^][
UVWAVAWH
E@!E8H!D$0
`A_A^_^]
UWATAVAWH
A_A^A\_]
D$@E3
UWAVH
0A^_]
UWAVH
0A^_]
USVWATAUAVAWH
t1D8e
A_A^A]A\_^[]
t-D8e
t,D8e
EoI9E
x UATAUAVAWH
fF9,qu
A_A^A]A\]
UWAVH
x AVH
VWAWH
 A__^
USVWATAUAVAWH
D9l$ t
D9l$ t
A_A^A]A\_^[]
D9l$ t
UVWAVAWH
A_A^_^]
H ATAVAWH
@A_A^A\
WATAUAVAWH
y&A9h
A_A^A]A\_
@USVWATAUAVAWH
A_A^A]A\_^[]
L$ UWAVH
0A^_]
L$0E3
L$PH3
s WAVAWH
D$@!\$HI
A_A^_
UAVAWH
D$(E3
A_A^]
t$ WH
D$ E3
WAVAWH
 A_A^_
\$ UVWAVAWH
9t$ t
?PKCXt
A_A^_^]
UWAVH
 A^_]
UWAUAVAWH
0A_A^A]_]
WAVAWH
@A_A^_
WAVAWH
 A_A^_
{ AVH
UWAVH
|$ UAVAWH
A_A^]
L$ SVWH
x AVH
x AVH
fD90t
uTH9;u
uTH9;u
x AWH
x UATAUAVAWH
H!\$hH
t$xE3
D8u L
A_A^A]A\]
x AVH
UWAVH
UWAVH
` UAVAWH
@A_A^]
UWAVH
UWAVH
 A^_]
x AVH
` UAVAWH
A_A^]
@SUVWAV
L$PH3
x AVH
t$ WH
L$pH3
UWAWH
H97u%H
L$TE3
L$ WH
9H9t$X
H9{8v6H
H;{8r
D$pHcy
L$pH3
\$ WH
WAVAWH
A_A^_
L$8H3
UWATAVAWH
H+SXH
D$(E3
A_A^A\_]
@USVWH
H WATAUAVAWH
A_A^A]A\_
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
|$0E3
=;\$8t5
Y;\$8tQ
3;\$8t+
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
UWATH
UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
D$ E3
A_A^A]A\_^]
l$ VWATAVAWH
A_A^A\_^
f9,Nu
f9,Pu
VWATAVAWH
@A_A^A\_^
t$ WH
f9,Hu
f9,Vu
` UAVAWH
A_A^]
UVWATAUAVAWH
L!l$XH
H+t$h
@8}`H
A_A^A]A\_^]
UATAVH
0A^A\]
UWAVH
UWAVH
UWAVH
H9}wt)H
UWAVH
 A^_]
VWAVH
0A^_^
UWAVH
VWAVH
0A^_^
UVWAVAWH
A_A^_^]
` UAVAWH
@A_A^]
VWAVH
0A^_^
UWAVH
UVWAVAWH
PA_A^_^]
x AVH
|$ UAVAWH
0A_A^]
|$ UAVAWH
0A_A^]
x AVH
t$ UWATAVAWH
T$PE3
D$@H!\$8H!\$@D
A_A^A\_]
x AVH
T$8H!|$8
UVWATAUAVAWH
wHL9O@t
 A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
` UAVAWH
A_A^]
x AVH
x AVH
t$ WH
t$ WH
t$ WH
x AVH
UWAVH
 A^_]
t$ WH
UAVAWH
A_A^]
UWAVH
0A^_]
D$`E3
L$`H3
x AVH
t$ UWATAVAWH
A_A^A\_]
L$8H3
@USVWATAUAVAWH
A_A^A]A\_^[]
L$pH3
UVWATAUAVAWH
t$ D+
|$ D+
A_A^A]A\_^]
USVWATAUAVAWH
mwt3H
A_A^A]A\_^[]
VWAVH
H!\$0
UVWATAUAVAWH
A_A^A]A\_^]
UATAUAVAWH
fE9$Ju
fE9$Ku
fD9$Ku
fD9$Ou
fD9$Nu
fE9$Nu
fE9$Gu
A_A^A]A\]
VWAVH
0A^_^
VWAVH
0A^_^
UVWATAUAVAWH
i(Lcy H
 A_A^A]A\_^]
UVWAVAWH
A_A^_^]
VWAVH
0A^_^
|$ UH
x AVH
fD94Zu
VWAVH
 A^_^
C H;{
` UAVAWH
@A_A^]
VWAVH
@A^_^
VWAVH
0A^_^
@USVWAVH
0A^_^[]
UWAVH
 A^_]
UWAVH
 A^_]
VWAVH
0A^_^
UVWATAVH
PA^A\_^]
UWAUAVAWH
0A_A^A]_]
VWAVH
0A^_^
UWAVH
VWAVH
0A^_^
` UAVAWH
@A_A^]
VWAVH
@A^_^
VWAVH
0A^_^
@USVWAVH
0A^_^[]
UWAVH
 A^_]
VWAVH
0A^_^
@USVWAVAWH
A_A^_^[]
@SUVWAVH
A^_^][
UATAVH
A^A\]
UWAVH
 A^_]
UWAVH
 A^_]
x AVH
UWAVH
VWAVH
0A^_^
UWAVH
UAVAWH
@8u(t
 A_A^]
UWAWH
E8H!}8H
 @8}(t?L
UVWAVAWH
PA_A^_^]
UATAUAVAWH
xjD8m
A_A^A]A\]
|$ UAVAWH
0A_A^]
WAVAWH
f9,^u
 A_A^_
@SUVWAVH
A^_^][
t$ UWAVH
 A^_]
x AVH
L$`H3
t<Lc@
UVWATAWH
A_A\_^]
|$ UH
T$ E3
UVWATAVH
T$0E3
A^A\_^]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
UVWATAWH
A_A\_^]
UWAVH
D$(E3
D9w8wkL
WATAUAVAWH
L9,%0
D8k@t,H
wmD8k@tHI
 A_A^A]A\_
VWAVH
D$8E3
D$pE3
UVWATAUAVAWH
D8y8uzH
D8{8uOH
@A_A^A]A\_^]
UVWATAUAVAWH
 A_A^A]A\_^]
D$ SRD1H
VWAVH
0A^_^
t$ UWATAVAWH
A_A^A\_]
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
L9|$ u
A_A^A\_]
UVWAVAWH
L9t$(u
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
UVWAVAWH
A_A^_^]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
@USVWAVH
A^_^[]
VWAVH
0A^_^
VWAVH
@A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
0A^_^
VWAVH
@A^_^
VWAVH
0A^_^
VWAVH
0A^_^
UVWATAVH
`A^A\_^]
UWAUAVAWH
0A_A^A]_]
UVWATAVH
`A^A\_^]
UWAUAVAWH
0A_A^A]_]
VWAVH
0A^_^
VWAVH
0A^_^
L$hH3
9s@|+3
WAVAWH
fE9<Au
 A_A^_
WAVAWH
D9~hv@A
0A_A^_
UVWATAUAVAWH
@A_A^A]A\_^]
fD9,Au
UVWATAUAVAWH
wVA97s
|$8E3
`A_A^A]A\_^]
@USVWATAUAVAWH
D$4E3
D;wht
fD9:t
D$pfA
D8|$Pt
A_A^A]A\_^[]
UWATAVAWH
D9aLu
D$ E3
A_A^A\_]
UVWATAUAVAWH
D8a$t
L$xE3
L$hE3
L$hE3
|$ E3
0A_A^A]A\_^]
t$ WATAUAVAWH
D9d$p
fF9du
fD9t}
0A_A^A]A\_
L$ USVWAVH
L$(E3
A^_^[]
 u-fF
x AVH
 Hcy@H
9y<tjH
f9,Au
f9,Au
WATAUAVAWH
H9T$x
 A_A^A]A\_
tLf97tGH
x AVH
WAVAWH
fD9?u
fD98t
tKH;^
0A_A^_
UVWATAUAVAWH
fD9(t
A_A^A]A\_^]
UATAUAVAWH
D$ E3
tAfD9/t.I;
fD9,Gu
A_A^A]A\]
UVWATAUAVAWH
t2H;n
0A_A^A]A\_^]
UAVAWH
fD94Au
0A_A^]
f9<Au
` UAVAWH
fD94Ou
fE94Gu
A_A^]
H9{0v#H
H;{0r
x AVH
|$ UATAUAVAWH
L9e0t)I
 A_A^A]A\]
x UATAUAVAWH
D$HI9
L$PH9
D$HI9
D$PH9
D$HI9
L$PH9
D8d$0H
A_A^A]A\]
UWAVH
|$ UAVAWH
fE9<~u
A_A^]
UWATAVAWH
A_A^A\_]
L$HH3
x AVH
qiYVH
x UAVAWH
A_A^]
USVWATAUAVAWH
A_A^A]A\_^[]
q`W|1/
VWAVH
 A^_^
x UAVAWH
A_A^]
p WAVAWH
0A_A^_
UWATAVAWH
A_A^A\_]
VWAVH
 A^_^
x UAVAWH
A_A^]
p WAVAWH
0A_A^_
qbTT$
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
x UAVAWH
A_A^]
x UAVAWH
A_A^]
qIRtK
x AUAVAWH
0A_A^A]
x AVH
Z2b/8
p WAVAWH
0A_A^_
VWAVH
 A^_^
x AVH
x AVH
x AVH
x AVH
WAVAWH
 A_A^_
UVWAVAWH
 A_A^_^]
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
UVWAVAWH
 A_A^_^]
qsQ~K6
` UAVAWH
A_A^]
` UAVAWH
A_A^]
UWAVH
 A^_]
x AVH
UVWAVAWH
A_A^_^]
UWAVH
VWAVH
 A^_^
p AWH
UWATAVAWH
A_A^A\_]
UWATAVAWH
 A_A^A\_]
x AVH
UVWATAUAVAWH
`A_A^A]A\_^]
x UATAUAVAWH
YD8mgu
A_A^A]A\]
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
t$ WAVAWH
 A_A^_
q#Qz&
t$ WH
|$ UAVAWH
A_A^]
qrU8q
UWATAVAWH
A_A^A\_]
|$ UAVAWH
A_A^]
` UAVAWH
A_A^]
` UAVAWH
A_A^]
VWAVH
 A^_^
WAVAWH
A_A^_
x ATAVAWH
A_A^A\
WAVAWH
A_A^_
WAVAWH
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
UWATAVAWH
A_A^A\_]
|$ UAVAWH
A_A^]
qSY:w
UWATAVAWH
A_A^A\_]
UWATAVAWH
A_A^A\_]
VWAVH
 A^_^
x AVH
q#Qz&
t$ WH
|$ UAVAWH
A_A^]
qrU8q
UWATAVAWH
A_A^A\_]
|$ UAVAWH
A_A^]
` UAVAWH
A_A^]
` UAVAWH
A_A^]
VWAVH
 A^_^
WAVAWH
A_A^_
x ATAVAWH
A_A^A\
WAVAWH
A_A^_
WAVAWH
A_A^_
` UAVAWH
A_A^]
@USVWATAVAWH
A_A^A\_^[]
UVWATAUAVAWH
A_A^A]A\_^]
x AVH
UWAVH
HcO(A
FNHcO(A
x AVH
x AVH
x ATAVAWH
D#CtA
C`#St
D#CtD
 A_A^A\
WATAUAVAWH
C`#St
D#CtA
 A_A^A]A\_
x AVH
WATAUAVAWH
F(D9h,u
D#GtD
 A_A^A]A\_
G()p(H
\$ UVWATAUAVAWD
L$PI#
\$XD;
A_A^A]A\_^]
ATAVAWH
 A_A^A\
WATAUAVAWH
~VHcS(A
HcK(H
~VHcS(A
HcK(H
 A_A^A]A\_
IcS(fA
IcK(H
IcK(f
~1LcA(H
HcI(H
HcQ(H
UVWATAUAVAWH
L$@H3
PA_A^A]A\_^]
SUVWATAUAVAWH
T$xHc
A_A^A]A\_^][
l$ VWATAUAVAW
\$8Lc
Hc\$@E
l$PA_A^A]A\_^
r}6Ic
|$(A^
x ATAVAWH
 A_A^A\
x ATAUAVAWD
~ZIcQ(A
IcI(H
IcQ(fA
IcI(H
~XIcQ(A
IcI(H
~]IcQ(A
IcI(H
~ZIcQ(A
IcI(H
~TIcQ(A
IcI(H
~ZIcQ(A
IcI(H
~WIcQ(A
IcI(H
|$@A_A^A]A\
USVWATAUAVAWH
}`H;yPs
H;~Hu$H
N@H9NPt
MPH;~Hu!H
}`H;~Ps
~XH9~Pt3A
xA_A^A]A\_^[]
x AVH
WATAUAVAWH
~@H9FXu
 A_A^A]A\_
UVWATAUAVAWH
;T$@v,
D$PA;
L$DH+
A_A^A]A\_^]
x ATAVAWH
D$@E3
A_A^A\
WATAUAVAWH
\$8E3
A_A^A]A\_
t$ WATAUAVAWH
\$`L;APs
\$`E3
G@H9GP
\$`L;GPs
\$`L;
G@H9GPt
\$`L;
GXL9GPt
0A_A^A]A\_
WAVAWH
 A_A^_
SUVWATAUAVAWH
d$pL;OPs
G,A_A^A]A\_^][
UVWATAUAVAWH
A_A^A]A\_^]
L$XH3
UVWAVAWH
0A_A^_^]
l$ VWATAVAWH
A_A^A\_^
x AUAVAWH
 A_A^A]
t$ WH
D$@E3
D$ E3
USVWAVH
fD94Cu
fD94su
`A^_^[]
UVWATAUAVAWH
@8uPu
pA_A^A]A\_^]
L$ E3
UAVAWH
@A_A^]
UWATAVAWH
J@8}PtSH
@A_A^A\_]
VWAVH
0A^_^
D$(E3
D$ E3
WAVAWH
 A_A^_
VWATAVAWH
A_A^A\_^
|$ UAVAWH
A_A^]
UWATAVAWH
0A_A^A\_]
@USVWATAVAWH
A_A^A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
|$ UATAUAVAWH
t$fD9(t
fD9.t
t$fD9(t
fD9.t
A_A^A]A\]
<A\t:
UVWATAUAVAWH
fG94yu
D9t$p
D;t$p
L$`E3
|$XE3
A_A^A]A\_^]
fD94Au
9oXv)@8
UWATAVAWH
 A_A^A\_]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
UWATAVAWH
U8H!}
MHH!}
A_A^A\_]
L$ VWAVH
@A^_^
UVWATAUAVAWH
D9d$0u1H
|$HD9d$0tQI
t$HD9d$0t`I
t$HD9d$0tsI
9L$0t
8L$8t
A_A^A]A\_^]
UATAUAVAWH
D9t$H
f94Cu
t$ E3
D;|$H
A_A^A]A\]
UVWATAUAVAWH
D9l$@upH
A_A^A]A\_^]
UVWATAUAVAWH
D9|$@
D;t$@
A_A^A]A\_^]
t$ UWATAVAWH
D9d$8
D$@L+
A_A^A\_]
UAVAWH
0A_A^]
UVWATAUAVAWH
L$xE3
fD9<Xu
HcD$@
t$8E3
Hc\$@
@;|$@
D$ E3
LcL$@L
D$ E3
|$PE3
A_A^A]A\_^]
p WAVAWH
0A_A^_
USVWAVH
0A^_^[]
x AVH
x AVH
bad array new length
api-ms-win-appmodel-runtime-l1-1-1.dll
ext-ms-win-appmodel-deployment-l1-1-0
ext-ms-win-appmodel-deployment-l1-1-1
ext-ms-win-appmodel-deployment-l1-1-0.dll
ext-ms-win-appmodel-deployment-l1-1-1.dll
ext-ms-win-desktopappx-l1-1-0
ext-ms-win-desktopappx-l1-1-1
ext-ms-win-desktopappx-l1-1-2
ext-ms-win-desktopappx-l1-1-3
ext-ms-win-desktopappx-l1-1-4
ext-ms-win-desktopappx-l1-1-5
ext-ms-win-desktopappx-l1-1-6
ext-ms-win-desktopappx-l1-1-7
ext-ms-win-desktopappx-l1-2-0
ext-ms-win-desktopappx-l1-2-1
ext-ms-win-wevtapi-eventlog-l1-1-0
ext-ms-win-wevtapi-eventlog-l1-1-1
ext-ms-win-wevtapi-eventlog-l1-1-2
ext-ms-win-wevtapi-eventlog-l1-1-3
ext-ms-win-wevtapi-eventlog-l1-1-0.dll
ext-ms-win-session-usertoken-l1-1-0
ext-ms-win-session-usertoken-l1-1-0.dll
ext-ms-win-session-wtsapi32-l1-1-0
ext-ms-win-session-wtsapi32-l1-1-1
ext-ms-win-session-wtsapi32-l1-1-0.dll
ext-ms-win-storage-sense-l1-1-0
ext-ms-win-storage-sense-l1-2-0
ext-ms-win-storage-sense-l1-2-1
ext-ms-win-storage-sense-l1-2-2
ext-ms-win-storage-sense-l1-2-3
ext-ms-win-storage-sense-l1-2-4
ext-ms-win-storage-sense-l1-2-5
api-ms-win-core-biplmapi-l1-1-0.dll
AppXDeploymentClient.dll
AppXAllUserStore.dll
api-ms-win-appmodel-unlock-l1-1-0.dll
ext-ms-win-resources-languageoverlay-l1-1-0
ext-ms-win-resources-languageoverlay-l1-1-1
ext-ms-win-resources-languageoverlay-l1-1-2
ext-ms-win-resources-languageoverlay-l1-1-3
ext-ms-win-resources-languageoverlay-l1-1-4
ext-ms-win-resources-languageoverlay-l1-1-5
ext-ms-win-resources-languageoverlay-l1-1-6
ext-ms-win-resources-languageoverlay-l1-1-7
ext-ms-win32-subsystem-query-l1-1-0
ext-ms-win-session-usermgr-l1-1-0
ext-ms-win-session-usermgr-l1-2-0
ext-ms-win-session-usermgr-l1-1-0.dll
api-ms-win-appmodel-runtime-l1-1-0.dll
kernelbase.dll
RaiseFailFastException
ntdll.dll
RtlNtStatusToDosErrorNoTeb
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
onecore\admin\appmodel\appxupgrademigrationplugin\applytrustoffline\applytrustoffline.cpp
AppXSetTrustLabelOnPackageForOfflineUpgrade(%s, TrustLabelFlags::SilentlySkipNonStorePackages, %s) = 0x%X
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
/OfflineSoftwareHive:
RtlAddGrowableFunctionTable
RtlDeleteGrowableFunctionTable
api-ms-win-core-processthreads-l1-1-3.dll
GetProcessMitigationPolicy
SetThreadInformation
GetThreadInformation
api-ms-win-core-localregistry-l1-1-0.dll
RegGetValueW
AcgApi
Software\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform
api-ms-win-core-com-l1-1-1.dll
CoCreateInstanceFromApp
api-ms-win-core-winrt-l1-1-0.dll
RoGetActivationFactory
api-ms-win-core-winrt-string-l1-1-0.dll
WindowsCreateString
WindowsDeleteString
Windows.Internal.SecurityMitigationsBroker
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
onecore\internal\sdk\inc\wil\opensource\wil\result.h
RtlQueryFeatureConfiguration
RtlRegisterFeatureConfigurationChangeNotification
RtlUnregisterFeatureConfigurationChangeNotification
RtlNotifyFeatureUsage
LogStagedFeatureUsage
NtQueryWnfStateData
NtUpdateWnfStateData
onecore\internal\sdk\inc\wil\Staging.h
WilStaging_02
onecore\private\base\inc\appmodel\staterepository\dal\ResourcePriority.hpp
AppxMetadata\AppxBundleManifest.xml
AppxManifest.xml
microsoft.system.package.metadata
AppXMetadata\CodeIntegrity.Cat
EnsureRootFolderInheritAclsAreSet
TrustHelper
onecore\admin\appmodel\trust\trusthelper.cpp
FilePath: %ws
AppxSignature.p7x
AppxBlockMap.xml
The signature origin from the file does not match the registered package.
The blockmap could not be found.
Tampering detected for package with PackageIntegrity Content Enforcement.
The PFN from the AppxManifest did not match the registered PFN.
RootFolder: %ws
Local\SM0:%lu:%lu:%hs
Aonecore\admin\appmodel\trust\filevalidationhelper.cpp
SetFileIntegrity failed for FilePath %ws with Origin %d
BlockMap Validation Failed for FilePath: %ws IsEncrypted: %d EABIT: %d UncompressedSize: %I64u
ValidateFile
onecore\base\appmodel\common\widestring.cpp
0x%08lx
onecore\base\appmodel\common\stringbuilder.cpp
onecore\base\appmodel\common\pathhelpers.cpp
\\?\UNC\
onecore\base\appmodel\common\impersonationcontext.cpp
Unknown exception
0123456789ABCDEFx
arm64
x86a64
neutral
unknown
com1.
com2.
com3.
com4.
com5.
com6.
com7.
com8.
com9.
lpt1.
lpt2.
lpt3.
lpt4.
lpt5.
lpt6.
lpt7.
lpt8.
lpt9.
.xn--
1234567890abcdefghjkmnpqrstvwxyzABCDEFGHJKMNPQRSTVWXYZ
PackageStatus
onecore\base\appmodel\runtime\src\packagestatusinternal.cpp
\Microsoft\Windows\CurrentVersion\AppModel\StateChange\PackageList\
bad allocation
onecore\admin\appmodel\common\packagefullnameutilities.cpp
<Unknown>
<Error 0x%X in OpenProcessToken>
onecore\private\base\inc\appmodel\common\fileinuse.hpp
<None>
<Error 0x%X in GetApplicationUserModelIdFromToken>
<Error 0x%X in GetPackageFullName>
<Error 0x%X getting the user's SID from the process' token>
<Error 0x%X converting the user's SID to a string>
<Error allocating memory>
<Error 0x%X in QueryFullProcessImageNameW>
<Error 0x%X in NtQueryInformationProcess>
<Error 0x%X moving command line>
<No commandline present>
LogFileInUse Telemetry failed: No valid tag.
onecore\admin\appmodel\common\FileInUseTelemetry.hpp
FileInUse PFun: %ws, ImageName: %ws, Cmd: %ws, UserSid: %ws, SessionId: %d, PID: %d
FileInUse
onecore\admin\appmodel\common\mountedfolder.cpp
onecore\admin\appmodel\common\Utilities.hpp
onecore\admin\appmodel\common\volumemanager.cpp
SisPath
MountPoint
MediaId
Flags
RuntimeType
StartPage
EntryPoint
Executable
Category
win32App
packagedClassicApp
windowsApp
appSilo
mediumIL
appContainer
Windows.PartialTrustApplication
Windows.FullTrustApplication
machine
modern
classic
windows
console
onecore\admin\appmodel\common\utilities.cpp
TEMP.xml
_1.0.0.0_neutral_neutral_nopublisherid
onecore\internal\sdk\inc\wil\opensource/wil/token_helpers.h
onecore\private\base\inc\appmodel\staterepository\dal/Database.hpp
onecore\private\base\inc\appmodel\staterepository\dal/ResourcePriority.hpp
onecore\admin\appmodel\PackageRepository\Inc\External\ITable.hpp
windows.hostRuntime
windows.publisherCacheFolders
onecore\admin\appmodel\common\logfileinformation.cpp
HardlinkData File: %ws Hardlink: %ws
FileCreationTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, LastFileWriteTime(UTC): %04hu-%02hu-%02hu %02hu:%02hu:%02hu, FileSize: %I64u, Attributes: 0x%08lx
: could not get security descriptor
: owner is 
<error>
: user has access 0x
: user has no access
: could not check access
: SDDL is 
: could not get SDDL
Logging data because access was denied for file: 
, user SID: 
, could not get user sid
LogIfAccessDenied
onecore\admin\appmodel\common\HardlinkingACLs.hpp
onecore\admin\appmodel\common\contentgrouphelpers.cpp
onecore\admin\appmodel\common\configuration.cpp
PackageRepositoryRoot
P:\WindowsApps
Resources
RedirectMrtResources
onecore\admin\appmodel\common\volume.cpp
onecore\admin\appmodel\common\privilege.cpp
onecore\admin\appmodel\common\StateRepository.hpp
onecore\admin\appmodel\common\packagestatus.cpp
PackageList
RemediationReason
Windows.Internal.StateRepository.Management.RepositoryManager
onecore\admin\appmodel\common\encryption.cpp
onecore\admin\appmodel\common\impersonateself.cpp
onecore\admin\appmodel\common\prefetchfile.cpp
onecore\admin\appmodel\common\bundleutilities.cpp
:{onecore\admin\appmodel\common\optionalpackagehelper.cpp
Unexpected: optional package %ws has %llu main packages and is in a related set
onecore\admin\appmodel\common\packageprocess.cpp
onecore\admin\appmodel\common\sessionutilities.cpp
%s\%s
onecore\private\base\inc\appmodel\package\PackageMoniker.hpp
onecore\admin\appmodel\common\accesshelpers.cpp
onecore\admin\appmodel\common\securitydescriptorbuilder.cpp
onecore\admin\appmodel\common\directoryacls.cpp
D:AI(A;OICI;0x1200A9;;;%s)(A;OICI;0x1200A9;;;BU)
1.3.6.1.4.1.311.76.3.1
CertGetEnhancedKeyUsage failed when sizing EKU buffer
onecore\admin\appmodel\appxsignatureorigin\appxsignatureorigin.cpp
Signing Certificate specifies invalid combination of both Windows Store and Component EKUs
1.3.6.1.4.1.311.10.3.6
CertVerifyCertificateChainPolicy failed
onecore\printscan\appxpackaging\lib\crypto\src\signaturecheckhelper.cpp
TrustedAppRoot
HashDigestLength
Package
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package.cpp
SELECT COUNT(*) FROM Package WHERE _WorkId=0;
SELECT COUNT(*) FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND _WorkId=0;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE PackageFamily=? AND ResourceId IS ? AND Architecture=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM Package WHERE _PackageID=? AND _WorkId=0;
DELETE FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
INSERT INTO Package (_Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
PackageFamily
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
Enterprise
DELETE FROM Package WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM Package WHERE (Enterprise>0) AND (Enterprise NOT IN (SELECT _EnterpriseID FROM Enterprise));
onecore\base\appmodel\staterepository\dataaccesslayer\resourcepriority.cpp
Cpu:%d%s Mem:%d%s Io:%d%s
Cpu:%d%s Mem:%d%s Io:%d%s
onecore\base\appmodel\StateRepository\DataAccessLayer\ResourcePriority.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\blob.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\text.cpp
AppxManifest
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxmanifest.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxManifest WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\statement.cpp
[pre-sqlite3_finalize] #%u Database %p: Statement %p: %s
<no-error-message>
[sqlite3_finalize] #%u Database %p: Statement %p: --: %s
[pre-sqlite3_reset] #%u Database %p: Statement %p: %s
[sqlite3_reset] #%u Database %p: Statement %p: %s: %s
[pre-sqlite3_step] #%u Database %p: Statement %p %s
sqlite3_step
<null>
[sqlite3_step] #%u Database %p: Statement %p %s: Try %u (%llums)%s%s %s : SQL %s
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily.cpp
SELECT _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE _PackageFamilyID=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE Name=? AND PublisherId=?;
SELECT _PackageFamilyID, _Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary FROM PackageFamily WHERE PackageFamilyName=?;
INSERT INTO PackageFamily (_Revision, Name, Publisher, PublisherId, PackageFamilyName, PackageSID, _Dictionary) VALUES(?,?,?,?,?,?,?);
DELETE FROM PackageFamily WHERE (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AppInstaller)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM AutoUpdatePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ConnectedSetPackageFamily)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM DynamicAppUriHandlerGroup)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM EndOfLifePackage)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM Package)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageDependency)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyPolicy)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageFamilyUser)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM PackageIdentity)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM ProvisionedPackageExclude)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournal)) AND (_PackageFamilyID NOT IN (SELECT PackageFamily FROM SRJournalArchive));
onecore\base\appmodel\StateRepository\Common\Inc\Security.hpp
PackageLocation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation.cpp
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND _WorkId=0 LIMIT 1);
SELECT EXISTS(SELECT 1 FROM PackageLocation WHERE _PackageLocationID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND _WorkId=0;
SELECT _PackageLocationID, _Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary FROM PackageLocation WHERE Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
INSERT INTO PackageLocation (_Revision, _WorkId, Package, Volume, InstalledLocation, MutableLink, MutableLocation, ProjectionId, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND _WorkId=0;
UPDATE PackageLocation SET _Revision=?, _WorkId=?, Package=?, Volume=?, InstalledLocation=?, MutableLink=?, MutableLocation=?, ProjectionId=?, _Dictionary=? WHERE _PackageLocationID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
TargetDeviceFamily
onecore\base\appmodel\staterepository\dataaccesslayer\entity-targetdevicefamily.cpp
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND _WorkId=0;
SELECT _Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary FROM TargetDeviceFamily WHERE _TargetDeviceFamilyID=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
INSERT INTO TargetDeviceFamily (_Revision, _WorkId, Package, "Index", Name, MinVersion, MaxVersion, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM TargetDeviceFamily WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser-custom.cpp
DELETE FROM PackageUser WHERE _PackageUserID IN (SELECT _PackageUserID FROM PackageUser INNER JOIN (SELECT User AS U, Package AS P FROM PackageUser WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND User=U AND Package=P);
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)SELECT COUNT(*), GROUP_CONCAT(t.PackageUserID) FROM BundleInfo AS t WHERE t.PackageType=8   AND NOT EXISTS(        SELECT 1 FROM Package AS p         INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID         WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8       );
PackageUser rows for Bundle but no other Package(s) sourced from the bundle
PackageUser
SELECT COUNT(*), GROUP_CONCAT(pu.rowid) FROM PackageUser AS pu INNER JOIN Package AS p on p._PackageID=pu.Package WHERE p.PackageOrigin=2 AND pu.DeploymentState=6;
PackageUser rows for Inbox packages cannot be DeploymentState=Paused
WITH BundleInfo(_PackageID, PackageType, BundleId, PackageUserId, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)DELETE FROM PackageUser WHERE _PackageUserID IN (    SELECT PackageUserId FROM BundleInfo AS t     WHERE t.PackageType=8       AND NOT EXISTS(            SELECT 1 FROM Package AS p             INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID             WHERE pu.User=t.UserId AND p.SourceBundle=t.BundleId AND p.PackageType<>8           ));
UPDATE PackageUser SET DeploymentState=1 WHERE DeploymentState=6 AND Package IN (     SELECT _PackageID FROM Package      WHERE PackageOrigin =2);
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE User=? AND Package=? AND _WorkId=? LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\database.cpp
[sqlite3_close] #%u Database %p: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %s
[sqlite3_open: lastErrNo:0x%X filecontrolrc:%d] #%u Database %p: %hs
MEMORY
temp_store
ATTACH DATABASE '%s' AS '%s';
DETACH DATABASE '%s';
IsInAutoCommitMode() called but !db.IsOpen()
BEGIN EXCLUSIVE /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
COMMIT /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> COMMIT;
ROLLBACK /*%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X*/;
BEGIN -> ROLLBACK;
sqlite3_wal_checkpoint_v2(): Mode:%d EffectiveMode:%d Size:%d Pages:%d
journal_mode
journal_size_limit
locking_mode
synchronous
PRAGMA %s;
PRAGMA %s=%s;
PRAGMA %s=%I64d;
GetChanges() called but !db.IsOpen()
GetTotalChanges() called but !db.IsOpen()
GetLastInsertRowID() called but !db.IsOpen()
cache_size
ANALYZE;
(database)
PRAGMA optimize;
[checkstatements] #%u Database %p: Statement %p: %s SQL %s
cannot start a transaction within a transaction
DELETE
TRUNCATE
PERSIST
NORMAL
EXCLUSIVE
EXTRA
changeid_next_value
execution_flags
is_triggers_enabled
is_srjournal_enabled
sroptions
workid
startswith
endswith
compress
uncompress
hash_base32
gchangeid_next_value() failed
StartsWith(*string*,prefix) error: Invalid type (%d)
StartsWith(string,*prefix*) error: Invalid type (%d)
EndsWith(*string*,suffix) error: Invalid type (%d)
EndsWith(string,*suffix*) error: Invalid type (%d)
Compress(x[,level]) error: Invalid type for level (%d)
Compress(x[,level]) error: Invalid level (%d)
Hasher.Start() failed
Hasher.Update(integer) failed
hash_base32() doesn't support double (%d)
Hasher.Update(text) failed
Unknown SQLite datatype %d
Hasher.GetDigestAsBase32(text) failed
Log(*error*,message) error: Invalid type for error (%d)
Log(error,*message*) error: Invalid type for message (%d)
[pre-sqlite3_prepare] #%u Database %p : SQL %s
sqlite3_prepare_v2
[sqlite3_prepare] #%u Database %p: Try %u (%llums)%s%s %s : SQL %s
[sqlite3_prepare] #%u Database %p: Try %u (%llums) %s : SQL %s
[pre-sqlite3_exec] #%u Database %p {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X} TID:%u : SQL %s
sqlite3_exec
[sqlite3_exec] #%u Database %p: Try %u (%llums) {%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}%s%s TID:%u %s : SQL %s
Analyze
UpdateStatistics
Checkpoint
@NULL
onecore\base\appmodel\StateRepository\DataAccessLayer\Statement.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-package-custom.cpp
SELECT _PackageID FROM Package WHERE PackageFullName=? AND _WorkId=0;
SELECT _PackageID FROM Package WHERE PackageFullName=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.Name=?1 AND (p._WorkId=0 OR p._WorkId=?2);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND p._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE pf.PublisherId=?1 AND (p._WorkId=0 OR p._WorkId=?3);
UPDATE Package SET TargetDeviceFamily=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
UPDATE Package SET SourceBundle=? WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND p._WorkId=0 AND pl._WorkId=0;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageLocation AS pl ON pl.Package=p._PackageID WHERE pl.Volume=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND (pl._WorkId=0 OR pl._WorkId=?2);
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND _WorkId=0;
SELECT PackageOrigin FROM Package WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND p._WorkId=0  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT p._PackageID, p._Revision, p._WorkId, p.PackageFamily, p.ResourceId, p.Architecture, p.Version, p.PackageFullName, p.IsInbox, p.PackageType, p.Flags, p.Flags2, p.DisplayName, p.PublisherDisplayName, p.Description, p.Logo, p.OSMinVersion, p.OSMaxVersionTested, p.TargetDeviceFamily, p.Capabilities, p.SupportedUsers, p.SignatureOrigin, p.PackageOrigin, p.Enterprise, p.SourceBundle, p.EditionId, p.OSVersionWhenIndexed, p.InPlaceUpdateBaseline, p._Dictionary FROM Package AS p INNER JOIN PackageFamily AS pf ON pf._PackageFamilyID=p.PackageFamily WHERE p.PackageFamily=?1 AND p.PackageType & ?2 !=0 AND (p._WorkId=0 OR p._WorkId=?3)  ORDER BY pf.Name, pf.PublisherId, p.ResourceId, p.Version;
SELECT _PackageID, _Revision, _WorkId, PackageFamily, ResourceId, Architecture, Version, PackageFullName, IsInbox, PackageType, Flags, Flags2, DisplayName, PublisherDisplayName, Description, Logo, OSMinVersion, OSMaxVersionTested, TargetDeviceFamily, Capabilities, SupportedUsers, SignatureOrigin, PackageOrigin, Enterprise, SourceBundle, EditionId, OSVersionWhenIndexed, InPlaceUpdateBaseline, _Dictionary FROM Package WHERE _PackageID=?
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
SourceBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
Package.PackageType=Bundle and Package.SourceBundle=BundlePackage but no other Package rows from Bundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser);
Package rows w/no PackageUser references
DELETE FROM Package WHERE (TargetDeviceFamily>0) AND (TargetDeviceFamily NOT IN (SELECT _TargetDeviceFamilyID FROM TargetDeviceFamily));
DELETE FROM Package WHERE (SourceBundle>0) AND (SourceBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM Package WHERE _PackageID IN (SELECT p_PackageID FROM (SELECT p_PackageID, EXISTS(SELECT 1 FROM BundlePackage AS bp INNER JOIN Package AS p ON bp.Version=p.Version AND bp.Architecture=p.Architecture AND ((bp.ResourceId=p.ResourceId) OR (bp.ResourceId IS NULL AND p.ResourceId IS NULL)) WHERE bp.PackageType=0 AND bp.Bundle=p_SourceBundle AND p.PackageFamily=p_PackageFamily AND bp._WorkId=0 AND p._WorkId=0 LIMIT 1) AS hasPackages FROM (SELECT p._PackageID AS p_PackageID, p.PackageFamily AS p_PackageFamily, p.SourceBundle AS p_SourceBundle FROM Package AS p WHERE p.PackageType & 8 != 0 AND p.SourceBundle <> 0 AND p._WorkId=0)) WHERE hasPackages=0);
INSERT OR IGNORE INTO User(_Revision, UserSid, _Dictionary)VALUES(1, X'010100000000000512000000', NULL);
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 1, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin=2;
(Inbox) Package rows w/no PackageUser references
INSERT INTO PackageUser(_Revision, _WorkId, Package, User, InstallTime, IsExplicitlyInstalled, DeploymentState, AppDataVolume)SELECT 1, 0, _PackageID, (SELECT _UserID FROM User WHERE UserSid=X'010100000000000512000000'), now(), 1, 6, 0 FROM Package WHERE _PackageID NOT IN (SELECT Package FROM PackageUser) AND PackageOrigin<>2;
(Non-Inbox) Package rows w/no PackageUser references
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) AND (p.PackageFamily NOT IN (SELECT PackageFamily FROM Package WHERE Flags&0x400!=0 GROUP BY PackageFamily)) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT _PackageID FROM PACKAGE WHERE PackageFamily IN (SELECT PackageFamily FROM Package WHERE (PackageType & 0x29!=0) AND _PackageID IN (SELECT Package FROM PackageUser WHERE _WorkId=?1 AND DeploymentState!=6 AND DeploymentState!=5)) AND _WorkId=0);
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND (p._WorkId=0 OR p._WorkId=?1) AND EXISTS (SELECT 1 FROM PackageUser AS puser WHERE p._PackageID=puser.Package AND puser._WorkId=?1) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?1) AND (p._WorkId=0  OR p._WorkId=?1) LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags=Flags&~0x400 WHERE (PackageType&0x29!= 0) AND PackageFamily=? AND _WorkId=0;
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=? AND p._WorkId=0 AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND pu._WorkId=0 AND p._WorkId=0 LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
 UPDATE Package SET Flags=Flags|0x400 WHERE _PackageID IN (SELECT toSetFlags._PackageID FROM PACKAGE AS toSetFlags INNER JOIN (SELECT p._PackageID, p.SourceBundle, MAX(Version) AS MaxVersion FROM Package AS p WHERE p.PackageType&0x21!=0 AND p.PackageFamily=?1 AND (p._WorkId=0 OR p._WorkId=?2) AND NOT EXISTS (SELECT 1 FROM PackageUser AS pu WHERE p._PackageID=pu.Package AND (pu.DeploymentState=6 OR pu.DeploymentState=5) AND (pu._WorkId=0 OR pu._WorkId=?2) AND (p._WorkId=0  OR p._WorkId=?2)  LIMIT 1) GROUP BY PackageFamily) highestVersion ON CASE WHEN toSetFlags.SourceBundle=0 THEN highestVersion._PackageID=toSetFlags._PackageID ELSE toSetFlags.SourceBundle=highestVersion.SourceBundle AND toSetFlags.PackageType=8 END)
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND _WorkId=0;
UPDATE Package SET Flags2=((Flags2 & ~?) | ?) WHERE _PackageID=? AND (_WorkId=0 OR _WorkId=?);
PackageExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension.cpp
INSERT INTO PackageExtension (_Revision, _WorkId, Package, "Index", Category, Activation, HostId, Executable, Entrypoint, RuntimeType, StartPage, Flags, Parameters, CurrentDirectoryPath, Id, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
Activation
DELETE FROM PackageExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file.cpp
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND _WorkId=0;
SELECT _FileID, _Revision, _WorkId, Package, RelativeFilePath, Size, Digest, Flags, _Dictionary FROM File WHERE Package=? AND RelativeFilePath=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM File WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile-custom.cpp
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND cg._WorkId=0 AND cgf._WorkId=0 LIMIT 1);
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND _WorkId=0;
SELECT EXISTS(SELECT 1 FROM ContentGroup AS cg INNER JOIN ContentGroupFile AS cgf ON cgf.ContentGroup=cg._ContentGroupID WHERE cgf.File=?1 AND cg.Status=3 AND (cg._WorkId=0 OR cg._WorkId=?2) AND (cgf._WorkId=0 OR cgf._WorkId=?2) LIMIT 1);
SELECT _ContentGroupFileID, _Revision, _WorkId, ContentGroup, File, _Dictionary FROM ContentGroupFile WHERE File=? AND (_WorkId=0 OR _WorkId=?);
ContentGroupFile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroupfile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
ContentGroup
DELETE FROM ContentGroupFile WHERE (File>0) AND (File NOT IN (SELECT _FileID FROM File));
DELETE FROM ContentGroupFile WHERE (ContentGroup>0) AND (ContentGroup NOT IN (SELECT _ContentGroupID FROM ContentGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-contentgroup.cpp
DELETE FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ContentGroup WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(pus.rowid) FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus-custom.cpp
PackageUserStatus
PackageIdentity
DELETE FROM PackageUserStatus as pus WHERE pus.PackageIdentity NOT IN ( SELECT _PackageIdentityID FROM PackageIdentity AS pi INNER JOIN Package AS p ON pi.PackageFullName=p.PackageFullName);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency.cpp
Dependency
DependentPackage
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Dependency WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user-custom.cpp
SELECT _UserID FROM User WHERE UserSid=?;
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuser.cpp
SELECT EXISTS(SELECT 1 FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?) LIMIT 1);
SELECT COUNT(*) FROM PackageUser WHERE _WorkId=0;
SELECT COUNT(*) FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE AppDataVolume=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND _WorkId=0;
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _PackageUserID, _Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary FROM PackageUser WHERE User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE _PackageUserID=? AND _WorkId=0;
DELETE FROM PackageUser WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageUser WHERE User=? AND Package=? AND _WorkId=0;
INSERT INTO PackageUser (_Revision, _WorkId, Package, User, InstallTime, OSVersionWhenInstalled, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?,?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND (_WorkId=0 OR _WorkId=?);
UPDATE PackageUser SET _Revision=?, _WorkId=?, Package=?, User=?, InstallTime=?, OSVersionWhenInstalled=?, WhenRestored=?, IsExplicitlyInstalled=?, DeploymentState=?, AppDataVolume=?, _Dictionary=? WHERE _PackageUserID=? AND _Revision=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
Bundle
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundle.cpp
DELETE FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Bundle WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
OptionalBundle
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundle.cpp
MainBundle
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
DELETE FROM OptionalBundle WHERE (MainBundle>0) AND (MainBundle NOT IN (SELECT _BundleID FROM Bundle));
OptionalBundlePackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundlepackage.cpp
DELETE FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundlePackage WHERE (OptionalBundle>0) AND (OptionalBundle NOT IN (SELECT _OptionalBundleID FROM OptionalBundle));
SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph-custom.cpp
SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND "User"=?3 AND _WorkId=?4)
UPDATE DependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
UPDATE DependencyGraph SET DependentPackage=? WHERE DependentPackage=? AND DependencyType=? AND "User"=? AND _WorkId=?;
SELECT _DependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM DependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0 ORDER BY "Index";
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 ORDER BY "Index";
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT SupplierPackage FROM DependencyGraph WHERE DependentPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT DISTINCT DependentPackage FROM DependencyGraph WHERE SupplierPackage=?1 AND DependencyType=?2 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
BundlePackage
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundlepackage.cpp
DELETE FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundlePackage WHERE (Bundle>0) AND (Bundle NOT IN (SELECT _BundleID FROM Bundle));
WilError_03
DatabaseCorruptionFirstDetectedWhen
UserDatabaseStatisticsLastUpdated
:memory:
Machine
Deployment
DatabaseCorruptionLastReported
DatabaseCorruptionFirstDetectedUptime
DeploymentDatabaseStatisticsLastUpdated
DownlevelMachineDatabaseStatisticsLastUpdated
MachineDatabaseStatisticsLastUpdated
@onecore\base\appmodel\staterepository\dataaccesslayer\statementexecution.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtpackage.cpp
MrtPackage
INSERT INTO MrtPackage (_Revision, _WorkId, Package, DisplayNameReference, PublisherDisplayNameReference, DescriptionReference, LogoReference, _Dictionary) VALUES(?,?,?,?,?,?,?,?);
DELETE FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
MrtSharedPri
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtsharedpri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtSharedPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
NamedDependency
onecore\base\appmodel\staterepository\dataaccesslayer\entity-nameddependency.cpp
DELETE FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM NamedDependency WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackageProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageproperty.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageProperty WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
Resource
onecore\base\appmodel\staterepository\dataaccesslayer\entity-resource.cpp
DELETE FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Resource WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage.cpp
XboxPackage
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM XboxPackage WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\texta.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\globals.cpp
CreateSetting: Subkey=%ls
ReadSetting: Name=%ls
OpenSetting: Subkey=%ls
WriteSetting: Name=%ls
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf16String.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\logging.cpp
Profile
Critical
Trace
Warning
Error
Verbose
Information
%02u%02u%02u %02u%02u%02u.%03u [Profile %ums] P%x T%x: %s
%02u%02u%02u %02u%02u%02u.%03u [Trace] P%x T%x: %s
%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X
%02u%02u%02u %02u%02u%02u.%03u [%s 0x%08X] P%x T%x: %s
                                     Callstack: %p %p %p %p %p %p %p %p %p %p %p %p
OpenProcess() failed on %u of %u for %hs
Filename:%s, SQL:%s, TxCallerId:%hs %ls
FailFastBusySnapshot: Statements Total=%u Busy=%u Database=%p FirstBusySQL=%hs
StateRepository.FailFastBusySnapshot.StatementCount
StateRepository.FailFastBusySnapshot.DatabasePtr
StateRepository.FailFastBusySnapshot.FirstBusySQL
StateRepository.FailFastBusySnapshot.BusyCount
StateRepository.FailFastBusySnapshot.Statement#%u.Ptr
FailFastBusySnapshot.StatementInProgress: #%u Index=%u Database=%p Statement=%p SQL=%s
ExpandedSQL=%hs
StateRepository.FailFastBusySnapshot.Statement#%u.ExpandedSQL
StateRepository.FailFastBusySnapshot.Statement#%u.SQL
ApplicationExtension
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationextension.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
Application
DELETE FROM ApplicationExtension WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM ApplicationExtension WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
AppUriHandler
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandler.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
Extension
DELETE FROM AppUriHandler WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppUriHandlerGroup
DELETE FROM AppUriHandler WHERE (AppUriHandlerGroup>0) AND (AppUriHandlerGroup NOT IN (SELECT _AppUriHandlerGroupID FROM AppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation.cpp
SELECT _ActivationID, _Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary FROM Activation WHERE ActivationKey IS ?;
INSERT INTO Activation (_Revision, ActivationKey, Flags, HostId, Executable, Entrypoint, RuntimeType, StartPage, ResourceGroup, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?,?);
DELETE FROM Activation WHERE (_ActivationID NOT IN (SELECT Activation FROM Application)) AND (_ActivationID NOT IN (SELECT Activation FROM ApplicationExtension)) AND (_ActivationID NOT IN (SELECT Activation FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-activation-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-application.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM Application WHERE (Activation>0) AND (Activation NOT IN (SELECT _ActivationID FROM Activation));
DELETE FROM Application WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagelocation-custom.cpp
DELETE FROM PackageLocation WHERE Package IN (SELECT Package FROM PackageLocation WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\datatype-hasher.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\statementcache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\StatementCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\changetracking.cpp
DependencyGraph
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependencygraph.cpp
SELECT EXISTS(SELECT 1 FROM DependencyGraph WHERE _DependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT COUNT(*) FROM DependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=?1) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
UPDATE DependencyGraph SET _IsMarkedForDeletion=1 WHERE _DependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
SELECT _DependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE (_DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _DependencyGraphID IN (SELECT _DependencyGraphID FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _DependencyGraphID NOT IN (SELECT _ShadowId FROM DependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
INSERT INTO DependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM DependencyGraph WHERE _DependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM DependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
UPDATE DependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_DependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
DELETE FROM DependencyGraph WHERE _DependencyGraphID IN (SELECT _ShadowId FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0);
SELECT _DependencyGraphID FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM DependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT _DependencyGraphID, _Revision, _ShadowId FROM DependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
UPDATE DependencyGraph SET _IsMarkedForDeletion=0 WHERE _DependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SupplierPackage
DELETE FROM DependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM DependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appxextension.cpp
AppxExtension
SELECT COUNT(*) FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT COUNT(*) FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND RegistrationInformation=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Category=? AND KeyString IS ? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND _WorkId=0;
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND (_WorkId=0 OR _WorkId=?);
SELECT _AppxExtensionID, _Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary FROM AppxExtension WHERE User=? AND Package=? AND Category=? AND KeyString IS ? AND _WorkId=0;
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM AppxExtension WHERE _AppxExtensionID=? AND _WorkId=0;
INSERT INTO AppxExtension (_Revision, _WorkId, User, Package, Category, KeyString, RegistrationInformation, ExtensionStatus, _Dictionary) VALUES(?,?,?,?,?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppxExtension WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM AppxExtension WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
ApplicationUser
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
ApplicationIdentity
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM ApplicationUser WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM ApplicationUser WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
PackageExternalLocation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageexternallocation.cpp
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT _PackageExternalLocationID, _Revision, _WorkId, User, Package, Path, _Dictionary FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM PackageExternalLocation WHERE User=? AND Package=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageExternalLocation WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageExternalLocation WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
PackagePolicy
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagepolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackagePolicy WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackagePolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
WowDependencyGraph
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _WorkId=0 LIMIT 1);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph.cpp
SELECT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND (_WorkId=?2 OR (_WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?2))) AND _IsMarkedForDeletion=0 LIMIT 1);
SELECT COUNT(*) FROM WowDependencyGraph WHERE _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
SELECT COUNT(*) FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND SupplierPackage=?3 AND _WorkId=?4))) AND _IsMarkedForDeletion=0 ORDER BY _WorkId DESC;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=?1) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=?1))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND _WorkId=?2))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND DependentPackage=?2 AND DependencyType & ?3 !=0 AND _WorkId=?4))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE (_WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3) OR _WowDependencyGraphID IN (SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=?3))) AND _IsMarkedForDeletion=0;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE User=?1 AND SupplierPackage=?2 AND _WorkId=0;
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=1 WHERE _WowDependencyGraphID=? AND _IsMarkedForDeletion=0 AND _WorkId=?;
UPDATE WowDependencyGraph SET _Revision=?1, _WorkId=?2, _ShadowId=?3, _IsMarkedForDeletion=?4, User=?5, DependentPackage=?6, "Index"=?7, SupplierPackage=?8, DependencyType=?9, _Dictionary=?10 WHERE (_WowDependencyGraphID=?11 AND _Revision=?12) AND _IsMarkedForDeletion=0 AND _WorkId=?13;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) VALUES(?1,?2,?3,?4,?5,?6,?7,?8,?9,?10);
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
INSERT INTO WowDependencyGraph (_Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary) SELECT _Revision, ?2, ?1, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE _WowDependencyGraphID=?1 AND _ShadowId=0 AND NOT EXISTS(SELECT 1 FROM WowDependencyGraph WHERE _ShadowId=?1 AND _WorkId<>0 LIMIT 1);
SELECT _WowDependencyGraphID, _Revision, _ShadowId FROM WowDependencyGraph WHERE _ShadowId=? AND _WorkId=? AND _WorkId<>0;
DELETE FROM WowDependencyGraph WHERE _WowDependencyGraphID IN (SELECT _ShadowId FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0);
UPDATE WowDependencyGraph SET _IsMarkedForDeletion=0 WHERE _WowDependencyGraphID=? AND _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
DELETE FROM WowDependencyGraph WHERE _WorkId=? AND _WorkId<>0 AND _IsMarkedForDeletion<>0 AND _ShadowId<>0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM WowDependencyGraph WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (SupplierPackage>0) AND (SupplierPackage NOT IN (SELECT _PackageID FROM Package));
DELETE FROM WowDependencyGraph WHERE (DependentPackage>0) AND (DependentPackage NOT IN (SELECT _PackageID FROM Package));
CustomInstallWork
onecore\base\appmodel\staterepository\dataaccesslayer\entity-custominstallwork.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM CustomInstallWork WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM CustomInstallWork WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\longrunningtransaction.cpp
UPDATE %s SET _Modified=changeid_next_value() WHERE _Modified=-2 AND _WorkId=?;
UPDATE %s SET _Created=changeid_next_value() WHERE _Created=-2 AND _WorkId=?;
UPDATE %s SET _Deleted=changeid_next_value() WHERE _WorkId=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageextension-custom.cpp
HostRuntime
onecore\base\appmodel\staterepository\dataaccesslayer\entity-hostruntime.cpp
INSERT INTO HostRuntime (_Revision, _WorkId, HostId, PackageExtension, _Dictionary) VALUES(?,?,?,?,?);
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
DELETE FROM HostRuntime WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-publishercachefolder.cpp
PublisherCacheFolder
INSERT INTO PublisherCacheFolder (_Revision, _WorkId, PackageExtension, "Index", FolderName, _Dictionary) VALUES(?,?,?,?,?,?);
DELETE FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PublisherCacheFolder WHERE (PackageExtension>0) AND (PackageExtension NOT IN (SELECT _PackageExtensionID FROM PackageExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-file-custom.cpp
DELETE FROM File WHERE _FileID IN (SELECT _FileID FROM File INNER JOIN (SELECT Package AS P, RelativeFilePath AS R FROM File WHERE _WorkId=? AND _WorkId<>0) WHERE _WorkId=0 AND Package=P AND RelativeFilePath=R);
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-user.cpp
SELECT _UserID, _Revision, UserSid, _Dictionary FROM User WHERE UserSid=?;
SELECT _Revision, UserSid, _Dictionary FROM User WHERE _UserID=?;
INSERT INTO User (_Revision, UserSid, _Dictionary) VALUES(?,?,?);
DELETE FROM User WHERE (_UserID NOT IN (SELECT User FROM AppExecutionAliasUser)) AND (_UserID NOT IN (SELECT User FROM ApplicationUser)) AND (_UserID NOT IN (SELECT User FROM AppxExtension)) AND (_UserID NOT IN (SELECT User FROM CustomInstallWork)) AND (_UserID NOT IN (SELECT User FROM DependencyGraph)) AND (_UserID NOT IN (SELECT User FROM DeploymentHistory)) AND (_UserID NOT IN (SELECT User FROM DynamicAppUriHandlerGroup)) AND (_UserID NOT IN (SELECT User FROM MrtUserPri)) AND (_UserID NOT IN (SELECT User FROM PackageDependency)) AND (_UserID NOT IN (SELECT User FROM PackageExternalLocation)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyPolicy)) AND (_UserID NOT IN (SELECT User FROM PackageFamilyUser)) AND (_UserID NOT IN (SELECT User FROM PackagePolicy)) AND (_UserID NOT IN (SELECT User FROM PackageSuperceded)) AND (_UserID NOT IN (SELECT User FROM PackageUser)) AND (_UserID NOT IN (SELECT User FROM PackageUserStatus)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUser)) AND (_UserID NOT IN (SELECT User FROM PrimaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM ProvisionedPackageExclude)) AND (_UserID NOT IN (SELECT User FROM SRHistory)) AND (_UserID NOT IN (SELECT User FROM SRJournal)) AND (_UserID NOT IN (SELECT User FROM SRJournalArchive)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUser)) AND (_UserID NOT IN (SELECT User FROM SecondaryTileUserChangelog)) AND (_UserID NOT IN (SELECT User FROM SharedPackageContainer)) AND (_UserID NOT IN (SELECT User FROM WowDependencyGraph));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageuserstatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageUserStatus WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageUserStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageidentity.cpp
SELECT _PackageIdentityID, _Revision, PackageFamily, PackageFullName, _Dictionary FROM PackageIdentity WHERE PackageFullName=?;
INSERT INTO PackageIdentity (_Revision, PackageFamily, PackageFullName, _Dictionary) VALUES(?,?,?,?);
DELETE FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageIdentity WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageIdentity WHERE (PackageFullName NOT IN (SELECT PackageFullName FROM Package)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM DeploymentHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageMachineStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageSuperceded)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM PackageUserStatus)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackage)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM ProvisionedPackageDeleted)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRHistory)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournal)) AND (_PackageIdentityID NOT IN (SELECT PackageIdentity FROM SRJournalArchive));
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND _WorkId=0 ORDER BY "Index";
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dependency-custom.cpp
SELECT _DependencyID, _Revision, _WorkId, DependentPackage, "Index", DependencyType, Name, Publisher, MinVersion, MaxVersion, Flags, _Dictionary FROM Dependency WHERE DependentPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC, "Index";
onecore\base\appmodel\staterepository\dataaccesslayer\entity-optionalbundleresource.cpp
OptionalBundleResource
DELETE FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM OptionalBundleResource WHERE (OptionalBundlePackage>0) AND (OptionalBundlePackage NOT IN (SELECT _OptionalBundlePackageID FROM OptionalBundlePackage));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-bundleresource.cpp
BundleResource
DELETE FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM BundleResource WHERE (BundlePackage>0) AND (BundlePackage NOT IN (SELECT _BundlePackageID FROM BundlePackage));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-xboxpackage-custom.cpp
DELETE FROM XboxPackage WHERE EditionId IN (SELECT EditionId FROM XboxPackage WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
AppExecutionAlias
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionalias.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExecutionAlias WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextension.cpp
AppExtension
DELETE FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtension WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppExtensionHost
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appextensionhost.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppExtensionHost WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
AppService
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appservice.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM AppService WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appurihandlergroup.cpp
DELETE FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppUriHandlerGroup WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
ApplicationBackgroundTask
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationbackgroundtask.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM ApplicationBackgroundTask WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
FileTypeAssociation
onecore\base\appmodel\staterepository\dataaccesslayer\entity-filetypeassociation.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM FileTypeAssociation WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
Protocol
onecore\base\appmodel\staterepository\dataaccesslayer\entity-protocol.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
DELETE FROM Protocol WHERE (Extension>0) AND (Extension NOT IN (SELECT _ApplicationExtensionID FROM ApplicationExtension));
ApplicationContentUriRule
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationcontenturirule.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationContentUriRule WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
ApplicationProperty
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationproperty.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM ApplicationProperty WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DefaultTile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-defaulttile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM DefaultTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtapplication.cpp
MrtApplication
DELETE FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtApplication WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT LastValue FROM Sequence WHERE Id=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence-custom.cpp
UPDATE Sequence SET LastValue=? WHERE Id=?;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationuser-custom.cpp
INSERT INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
INSERT OR IGNORE INTO ApplicationUser (_Revision, _WorkId, User, ApplicationIdentity, Application, Package, PackageUser)SELECT 1, ?2, pu.User, ai._ApplicationIdentityID, a._ApplicationID, pu.Package, pu._PackageUserID FROM PackageUser AS pu INNER JOIN Application AS a ON a.Package=pu.Package INNER JOIN ApplicationIdentity AS ai ON ai.ApplicationUserModelId=a.ApplicationUserModelId WHERE pu._PackageUserID=?1   AND (pu._WorkId=0 OR pu._WorkId=?2) AND (a._WorkId=0 OR a._WorkId=?2);
SELECT _WowDependencyGraphID FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=0 AND _WowDependencyGraphID NOT IN (SELECT _ShadowId FROM WowDependencyGraph WHERE SupplierPackage=?1 AND "User"=?2 AND _WorkId=?3)
onecore\base\appmodel\staterepository\dataaccesslayer\entity-wowdependencygraph-custom.cpp
DELETE FROM WowDependencyGraph WHERE _WorkId=?;
UPDATE WowDependencyGraph SET SupplierPackage=? WHERE SupplierPackage=? AND "User"=? AND _WorkId=?;
SELECT _WowDependencyGraphID, _Revision, _WorkId, _ShadowId, _IsMarkedForDeletion, User, DependentPackage, "Index", SupplierPackage, DependencyType, _Dictionary FROM WowDependencyGraph WHERE SupplierPackage IN (SELECT DISTINCT SupplierPackage FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND DependencyType=?) and _WorkId=0;
SELECT _WowDependencyGraphID, _Revision, _ShadowId, _IsMarkedForDeletion FROM WowDependencyGraph WHERE User=? AND DependentPackage=? AND SupplierPackage=? AND (_WorkId=0 OR _WorkId=?) ORDER BY _WorkId DESC;
onecore\base\appmodel\staterepository\dataaccesslayer\repository.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Database.hpp
onecore\base\appmodel\StateRepository\DataAccessLayer\Utf8String.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress-custom.cpp
DELETE FROM %s WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0, _ShadowId=0 WHERE _WorkId=? AND _WorkId<>0;
UPDATE %s SET _WorkId=0 WHERE _WorkId=? AND _WorkId<>0;
PackageUser.User has Package(s) with Package.Type!=Bundle but not Package.Type=Bundle
WITH BundleInfo(_PackageID, PackageType, BundleId, _PackageUserID, UserId, DeploymentState) AS(SELECT p._PackageID, p.PackageType, p.SourceBundle AS BundleId, pu._PackageUserID, pu.User, pu.DeploymentState FROM Package AS p INNER JOIN PackageUser AS pu ON pu.Package=p._PackageID WHERE p.SourceBundle>0)INSERT OR IGNORE INTO PackageUser  (_Revision, _WorkId, Package, User, InstallTime, WhenRestored, IsExplicitlyInstalled, DeploymentState, AppDataVolume, _Dictionary)SELECT 1, 0, p._PackageID, UserId, now(), 0, 1, DeploymentState, 0, NULL  FROM Package AS p INNER JOIN (   SELECT BundleId, UserId, DeploymentState FROM BundleInfo AS t    WHERE BundleId NOT IN (        SELECT b.BundleId FROM BundleInfo AS b         WHERE b.PackageType=8           AND b.UserId=t.UserId       )   ) AS b ON b.BundleId=p.SourceBundle AND p.PackageType=8;
PostFixAllCascadingInMachinePartition
PostCheckAllCascadingInMachinePartition
MrtDefaultTile
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtdefaulttile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
DELETE FROM MrtDefaultTile WHERE (DefaultTile>0) AND (DefaultTile NOT IN (SELECT _DefaultTileID FROM DefaultTile));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sequence.cpp
INSERT INTO Sequence (Id, LastValue) VALUES(?,?);
onecore\base\appmodel\staterepository\dataaccesslayer\databasecachesingleton.cpp
Deployment
Machine
AppExecutionAliasUser
AppInstallerUri
AppInstaller
ConnectedSet
AutoUpdatePackage
DeploymentHistory
ConnectedSetPackageFamily
DynamicAppUriHandlerGroup
DynamicAppUriHandler
MigratorPatch
EndOfLifePackage
PackageAppInstaller
MrtUserPri
PackageFamilyPolicy
PackageDependency
PackageFamilyUserResource
PackageFamilyUser
PackageSourceUri
PackageMachineStatus
PrimaryTile
PackageSuperceded
PrimaryTileUserChangelog
PrimaryTileUser
ProvisionedPackageDeleted
ProvisionedPackage
SRHistory
ProvisionedPackageExclude
SRJournalArchive
SRJournal
SecondaryTileUser
SecondaryTile
SharedPackageContainer
SecondaryTileUserChangelog
SharedPackageContainerPackageFamily
onecore\base\appmodel\staterepository\dataaccesslayer\entities-partitions.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser-custom.cpp
DELETE FROM PrimaryTileUser WHERE _PrimaryTileUserId IN (SELECT _PrimaryTileUserId FROM PrimaryTileUser INNER JOIN (SELECT ApplicationIdentity AS ai, User AS usr FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0 ) WHERE _WorkId=0 AND ApplicationIdentity=ai AND User=usr);
DELETE FROM PrimaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM PrimaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
DELETE FROM SecondaryTile WHERE _SecondaryTileID IN (SELECT SecondaryTile FROM SecondaryTileUser WHERE _WorkId=0 AND TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0)) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser-custom.cpp
DELETE FROM SecondaryTileUser WHERE TileUniqueId IN (SELECT TileUniqueId FROM SecondaryTileUser WHERE _WorkId=? AND _WorkId<>0) AND _WorkId=0;
onecore\base\appmodel\staterepository\dataaccesslayer\databasecache.cpp
onecore\base\appmodel\StateRepository\DataAccessLayer\DatabaseCache.hpp
onecore\base\appmodel\staterepository\dataaccesslayer\dictionarywriter.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srhistory.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-workinprogress.cpp
Partition %d not supported by GC()
FixAllCascadingInDeploymentPartition
FixAllCascadingInMachinePartition
CheckAllCascadingInDeploymentPartition
CheckAllCascadingInMachinePartition
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM PrimaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUser WHERE (SecondaryTile>0) AND (SecondaryTile NOT IN (SELECT _SecondaryTileID FROM SecondaryTile));
DELETE FROM SecondaryTileUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-applicationidentity.cpp
DELETE FROM ApplicationIdentity WHERE (ApplicationUserModelId NOT IN (SELECT ApplicationUserModelId FROM Application)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM AppExecutionAliasUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM ApplicationUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM PrimaryTileUser)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournal)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SRJournalArchive)) AND (_ApplicationIdentityID NOT IN (SELECT ApplicationIdentity FROM SecondaryTileUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-enterprise.cpp
DELETE FROM Enterprise WHERE (_EnterpriseID NOT IN (SELECT Enterprise FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstaller.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AppInstaller WHERE (PackageFamily = 0) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AppInstallerUri)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM AutoUpdatePackage)) AND (_AppInstallerID NOT IN (SELECT AppInstaller FROM PackageAppInstaller));
DELETE FROM AppInstaller WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appexecutionaliasuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM AppExecutionAliasUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM AppExecutionAliasUser WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-connectedsetpackagefamily.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
DELETE FROM ConnectedSetPackageFamily WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ConnectedSetPackageFamily WHERE (ConnectedSet>0) AND (ConnectedSet NOT IN (SELECT _ConnectedSetID FROM ConnectedSet));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandlergroup.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DynamicAppUriHandlerGroup WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM DynamicAppUriHandlerGroup WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-endoflifepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM EndOfLifePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagedependency.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageDependency WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageDependency WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilypolicy.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyPolicy WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyPolicy WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuser.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM PackageFamilyUser WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageFamilyUser WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PrimaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackageexclude.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM ProvisionedPackageExclude WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM ProvisionedPackageExclude WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SecondaryTileUserChangelog WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainer.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SharedPackageContainer WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-deploymenthistory.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM DeploymentHistory WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM DeploymentHistory WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-dynamicappurihandler.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
DELETE FROM DynamicAppUriHandler WHERE (DynamicAppUriHandlerGroup>0) AND (DynamicAppUriHandlerGroup NOT IN (SELECT _DynamicAppUriHandlerGroupID FROM DynamicAppUriHandlerGroup));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamilyuserresource.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
DELETE FROM PackageFamilyUserResource WHERE (PackageFamilyUser>0) AND (PackageFamilyUser NOT IN (SELECT _PackageFamilyUserID FROM PackageFamilyUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagemachinestatus.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageMachineStatus WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesuperceded.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM PackageSuperceded WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM PackageSuperceded WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM ProvisionedPackage WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-provisionedpackagedeleted.cpp
DELETE FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM ProvisionedPackageDeleted WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-sharedpackagecontainerpackagefamily.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
DELETE FROM SharedPackageContainerPackageFamily WHERE (SharedPackageContainer>0) AND (SharedPackageContainer NOT IN (SELECT _SharedPackageContainerID FROM SharedPackageContainer));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-mrtuserpri.cpp
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND (_WorkId=0 OR _WorkId=?);
DELETE FROM MrtUserPri WHERE Package=? AND User=? AND _WorkId=0;
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM MrtUserPri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (MrtSharedPri>0) AND (MrtSharedPri NOT IN (SELECT _MrtSharedPriID FROM MrtSharedPri));
DELETE FROM MrtUserPri WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytile.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM PrimaryTile WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PrimaryTile WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournal.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournal WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
DELETE FROM SRJournal WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournal WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournal WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM SRJournal WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournal WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-srjournalarchive.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (User>0) AND (User NOT IN (SELECT _UserID FROM User));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (PackageIdentity>0) AND (PackageIdentity NOT IN (SELECT _PackageIdentityID FROM PackageIdentity));
DELETE FROM SRJournalArchive WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM SRJournalArchive WHERE (Application>0) AND (Application NOT IN (SELECT _ApplicationID FROM Application));
DELETE FROM SRJournalArchive WHERE (ApplicationIdentity>0) AND (ApplicationIdentity NOT IN (SELECT _ApplicationIdentityID FROM ApplicationIdentity));
DELETE FROM SRJournalArchive WHERE (PackageUser>0) AND (PackageUser NOT IN (SELECT _PackageUserID FROM PackageUser));
DELETE FROM SRJournalArchive WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagesourceuri.cpp
DELETE FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageSourceUri WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-appinstalleruri.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AppInstallerUri WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-autoupdatepackage.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
DELETE FROM AutoUpdatePackage WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM AutoUpdatePackage WHERE (PackageFamily>0) AND (PackageFamily NOT IN (SELECT _PackageFamilyID FROM PackageFamily));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packageappinstaller.cpp
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
DELETE FROM PackageAppInstaller WHERE (Package>0) AND (Package NOT IN (SELECT _PackageID FROM Package));
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
DELETE FROM PackageAppInstaller WHERE (AppInstaller>0) AND (AppInstaller NOT IN (SELECT _AppInstallerID FROM AppInstaller));
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytile-custom.cpp
SecondaryTileUser.SecondaryTile->SecondaryTile.rowid
SELECT COUNT(*), GROUP_CONCAT(rowid) FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
DELETE FROM SecondaryTile WHERE SecondaryTile._SecondaryTileID NOT IN (SELECT SecondaryTile FROM SecondaryTileUser);
onecore\base\appmodel\trust\trustlabelhelpersbase.cpp
GetDeploymentError
SetDeploymentError
onecore\admin\appmodel\packagemanager\logging\appxlog.cpp
AppXDeploymentServer
api-ms-win-eventing-tdh-l1-1-0.dll
tdh.dll
TdhFormatProperty
NtQuerySystemInformation
SHA256
PackageRow was not initialized with lazy init info. Cannot query external location info.
onecore\admin\appmodel\packagerepository\common\packagerow.cpp
onecore\admin\appmodel\packagerepository\common\packageextras.cpp
onecore\admin\appmodel\packagerepository\common\visibilityrow.cpp
onecore\admin\appmodel\packagerepository\common\tools.cpp
PerSystemEntries
onecore\admin\appmodel\cleanupmanager\cleanupmanager.cpp
DirtyPackages
ntdll.dll
MicrosoftTelemetryAssertTriggeredUM
onecore\admin\appmodel\packagerepository\staterepository\repository.cpp
PackageRepository.edb
onecore\admin\appmodel\packagerepository\staterepository\repositorysession.cpp
Failed to update State Repository Cache
Windows.Internal.StateRepository.PrimaryTileUserNotificationChannel
onecore\admin\appmodel\packagerepository\staterepository\packagetable.cpp
This should never occur
onecore\admin\appmodel\packagerepository\staterepository\visibilitytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencytable.cpp
onecore\admin\appmodel\packagerepository\staterepository\dependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\extensiontable.cpp
onecore\admin\appmodel\packagerepository\staterepository\wowdependencygraphtable.cpp
onecore\admin\appmodel\packagerepository\staterepository\staterepositoryhelper.cpp
unknown compression method
invalid window size
incorrect data check
incorrect header check
need dictionary
stream error
data error
stream end
file error
incompatible version
insufficient memory
buffer error
invalid block type
invalid bit length repeat
invalid stored block lengths
too many length or distance symbols
oversubscribed dynamic bit lengths tree
incomplete literal/length tree
oversubscribed distance tree
incomplete dynamic bit lengths tree
oversubscribed literal/length tree
incomplete distance tree
empty distance tree with lengths
invalid literal/length code
invalid distance code
onecore\base\appmodel\package\packagesid.cpp
onecore\base\appmodel\common\cryptoprovider.cpp
ObjectLength
onecore\base\appmodel\common\base32encoding.cpp
0123456789abcdefghjkmnpqrstvwxyz
onecore\base\appmodel\common\sidhelper.cpp
AppxPackageVolumes
Software\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes
AppxPurgeList
Software\Microsoft\Windows\CurrentVersion\Appx\PurgeList
AppxPolicies
Software\Policies\Microsoft\Windows\Appx
AppxRoot
Software\Microsoft\Windows\CurrentVersion\Appx
AppxStateChange
Software\Microsoft\Windows\CurrentVersion\AppModel\StateChange
RtlIsStateSeparationEnabled
GetPersistedRegistryLocationW
onecore\base\appmodel\common\stateseparation.cpp
onecore\base\appmodel\common\registrykey.cpp
BCryptGetProperty
BCryptCreateHash
BCryptOpenAlgorithmProvider
BCryptCloseAlgorithmProvider
BCryptDestroyHash
Bcrypt.dll
BCryptHashData
BCryptFinishHash
onecore\base\appmodel\common\bytebuffer.cpp
onecore\admin\appmodel\common\xmltools.cpp
>`onecore\admin\appmodel\common\mrthelper.cpp
%s\resources.pri
Files
\resources.pri
file://
resources.pri
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tileview-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptu.User FROM PrimaryTileUser AS ptu WHERE _WorkId=?1 UNION ALL SELECT stu.User FROM SecondaryTileUser AS stu WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-primarytileuserchangelog-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-secondarytileuserchangelog-custom.cpp
SELECT UserSid FROM User AS u WHERE u._UserID IN (SELECT ptuc.User FROM PrimaryTileUserChangelog AS ptuc WHERE _WorkId=?1 UNION ALL SELECT stuc.User FROM SecondaryTileUserChangelog AS stuc WHERE _WorkId=?1 LIMIT 1) LIMIT 1;
onecore\base\appmodel\staterepository\dataaccesslayer\entity-tilechangelogview-custom.cpp
onecore\base\appmodel\staterepository\dataaccesslayer\entity-packagefamily-custom.cpp
onecore\admin\appmodel\packagerepository\common\extensions.cpp
windows.activatableClass
/*[local-name()='Package']/*[local-name()='Extensions']/*[local-name()='Extension'] |/*[local-name()='Package']/*[local-name()='Extensions']/mx:PackageExtension
*[local-name()='PublisherCacheFolders']/*[local-name()='Folder']
*[local-name()='HostRuntime']
windows.comInterface
windows.comServer
@*[local-name()='HostId']
@*[local-name()='TrustLevel']
Unknown RuntimeBehavior
@*[local-name()='SupportsMultipleInstances']
Unknown TrustLevel
@*[local-name()='RuntimeBehavior']
@*[local-name()='Scope']
@*[local-name()='Parameters']
@*[local-name()='Subsystem']
@*[local-name()='CompatMode']
@*[local-name()='CurrentDirectoryPath']
text()
#text
onecore\base\appmodel\staterepository\dataaccesslayer\dictionaryxmlwriter.cpp
*[local-name()='%s']
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
iginatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityStoppedAutomatically
Unsupported
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
wilActivity
threadId
package
ReapplyAcls
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
EnsureRootFolderInheritAclsAreSet
PartA_PrivTags
wilActivity
hresult
threadId
ProcessInformation
packageFullName
imageName
commandLine
userSid
sessionId
processId
ActivityStoppedAutomatically
FileInUse
PartA_PrivTags
wilActivity
threadId
filename
FileInUse
PartA_PrivTags
wilActivity
hresult
threadId
FileInUse
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
AppxInvestigationFile
FilePath
PackageStatus_DependencyPackageIssue
packageFullName
PackageStatusUpdateBad_ModifiedPackage
packageFullName
currentStatus
desiredStatus
statusToClear
statusToSet
callOrigin
SetPackageStatusModifiedReason
packageFullName
offlineSoftwareHive
modifiedReason
EfsOpenFileRawFailed
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
EfsOpenFileRawFailedAttemptingRetry
NTStatus
fileName
fileAccess
shareAccess
createDist
createOptions
Signing certificate does not chain up to the Microsoft Root Certificate Authority
Signing certificate does not chain up to Microsoft Flighting Root 2014
Signing certificate does not chain up to the Microsoft Application Root Certificate Authority
Signing Certificate has no EKU fields (valid for all EKU)
Analyze
PartA_PrivTags
wilActivity
threadId
UpdateStatistics
PartA_PrivTags
wilActivity
threadId
Checkpoint
PartA_PrivTags
wilActivity
threadId
StateRepository.ResourcePriority.Inadequate
ErrorCode
DatabasePtr
Partition
WorkId
CpuPriority
IoPriority
MemoryPriority
TransactionCallerID
PartA_PrivTags
StateRepository.Database.Statistics
Database
StatementCache.Count
StatementCache.Hits
StatementCache.Misses
StatementCache.Lifespan
CacheUsed
CacheHit
CacheMiss
CacheWrite
CacheSpill
SchemaUsed
StatementUsed
LookasideUsed
LookasideUsedPeak
LookasideHitPeak
LookasideMissSizePeak
LookasideMissFullPeak
DatabasePtr
Partition
WorkId
PartA_PrivTags
Analyze
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Analyze
PartA_PrivTags
wilActivity
hresult
threadId
UpdateStatistics
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
UpdateStatistics
PartA_PrivTags
wilActivity
hresult
threadId
ActivityIntermediateStop
PartA_PrivTags
wilActivity
hresult
threadId
Database.Checkpoint
Filename
CheckpointMode
SizeInPages
NumberOfPagesCheckpointed
PartA_PrivTags
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ActivityError
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
Checkpoint
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Checkpoint
PartA_PrivTags
wilActivity
hresult
threadId
ActivityStoppedAutomatically
StateRepository.FailFastBusySnapshot
ErrorCode
StatementCount
BusyCount
DatabasePtr
FirstBusySQL
ProcessingSQL
PartA_PrivTags
StateRepository.FailFastBusySnapshot.StatementInProgress
ErrorCode
Index
DatabasePtr
StatementPtr
ExpandedSQL
PartA_PrivTags
DatabaseCorruption.Detected
ErrorCode
Action
Partition
Filename
Elapsed
FirstReportedUptime
FirstReportedWhen
PartA_PrivTags
Repository.SetOptions.SetCacheSize
ErrorCode
Filename
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PostFixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostFixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PostCheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
DatabaseCache.Get
DatabaseConnection
PartA_PrivTags
DatabaseCache.Add
DatabaseConnection
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
threadId
ExecutionFlags
PartA_PrivTags
PartA_PrivTags
wilActivity
threadId
Partition
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsCorrected
PartA_PrivTags
FixAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
FixAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInDeploymentPartition
PartA_PrivTags
wilActivity
hresult
threadId
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
ExecutionFlags
CountOfErrorsDetected
PartA_PrivTags
CheckAllCascadingInMachinePartition
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
CheckAllCascadingInMachinePartition
PartA_PrivTags
wilActivity
hresult
threadId
PartA_PrivTags
PartA_PrivTags
wilActivity
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
PartA_PrivTags
wilActivity
hresult
threadId
GetAppXLogMessageFromDataFailure
result
Repository initialize
readOnly
workId
Microsoft.Windows.AppXDeploymentServer
Microsoft.Windows.ApplicationModel.DesktopAppx
Microsoft.Windows.AppxDeploymentFallback
Microsoft.Windows.StateRepository.Service
ApplyTrustOffline.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIAC
.CRT$XIC
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.gehcont
.gfids
.giats
.rdata
.rdata$r
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data$rs$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
08@HPX
08@HPX`h
08@HPX`hpx
"@$8""
l",$0"4
(n*@,:*"
*,,0*j
ApplyStrongProtection
GetVolumeMediaId
IsWPTestEkuSigningAllowed
EvtOpenChannelConfig
EvtGetChannelConfigProperty
EvtClose
QueryActiveSession
QueryUserToken
WTSQueryUserToken
BiChangeApplicationStateForPackageName
IsInboxPackage
IsSideloadingEnabled
IsDeveloperModeEnabled
UMgrEnumerateSessionUsers
UMgrQueryUserToken
UMgrFreeSessionUsers
GetApplicationUserModelIdFromToken
PackageFamilyNameFromFullName
GetStagedPackageOrigin
PackageNameAndPublisherIdFromFamilyName
GetPackageFullName
_initterm
_initterm_e
_c_exit
_register_thread_local_exe_atexit_callback
api-ms-win-crt-runtime-l1-1-0.dll
wcschr
_o___acrt_iob_func
_o___p___argc
_o___p___wargv
_o___p__commode
_o___std_exception_copy
_o___std_exception_destroy
_o___stdio_common_vfwprintf
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsnwprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vswprintf
_o__callnewh
_o__cexit
_o__configthreadlocale
_o__configure_wide_argv
_o__crt_atexit
_o__errno
_o__exit
_o__get_initial_wide_environment
_o__initialize_onexit_table
_o__initialize_wide_environment
_o__invalid_parameter_noinfo
_o__purecall
_o__register_onexit_function
_o__seh_filter_exe
_o__set_app_type
_o__set_fmode
_o__set_new_mode
_o__stricmp
_o__wcslwr
_o__wcsnicmp
_o_exit
_o_free
_o_malloc
_o_memcpy_s
_o_terminate
_o_wcscpy_s
__C_specific_handler
__current_exception
__current_exception_context
memset
_CxxThrowException
api-ms-win-crt-private-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
GetModuleFileNameA
GetModuleHandleExW
FormatMessageW
GetProcAddress
GetModuleHandleW
DebugBreak
CoUninitialize
OutputDebugStringW
GetCurrentThreadId
IsDebuggerPresent
CoInitializeEx
VirtualProtect
SetLastError
VirtualFree
GetCurrentProcess
VirtualAlloc
GetModuleFileNameW
RtlAddFunctionTable
GetLastError
RaiseFailFastException
GetCurrentThread
CloseHandle
RtlDeleteFunctionTable
LoadLibraryExW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
IsProcessorFeaturePresent
QueryPerformanceCounter
GetCurrentProcessId
GetSystemTimeAsFileTime
InitializeSListHead
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-2.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-interlocked-l1-1-0.dll
sqlite3_clear_bindings
sqlite3_bind_null
sqlite3_bind_int
sqlite3_bind_int64
sqlite3_bind_text16
sqlite3_bind_blob
sqlite3_column_int
sqlite3_errcode
sqlite3_column_int64
sqlite3_column_text
sqlite3_column_bytes
sqlite3_column_text16
sqlite3_column_blob
sqlite3_column_type
sqlite3_stmt_busy
sqlite3_sql
sqlite3_db_handle
sqlite3_log
sqlite3_finalize
sqlite3_errmsg
sqlite3_reset
sqlite3_step
sqlite3_next_stmt
sqlite3_get_autocommit
sqlite3_close
sqlite3_open_v2
sqlite3_extended_errcode
sqlite3_file_control
sqlite3_extended_result_codes
sqlite3_db_config
sqlite3_wal_autocheckpoint
sqlite3_wal_checkpoint_v2
sqlite3_changes
sqlite3_total_changes
sqlite3_last_insert_rowid
sqlite3_db_filename
sqlite3_busy_timeout
sqlite3_db_status
sqlite3_create_function_v2
sqlite3_user_data
sqlite3_result_error_nomem
sqlite3_result_error16
sqlite3_result_error_code
sqlite3_result_int64
sqlite3_result_int
sqlite3_value_type
sqlite3_value_text16
sqlite3_value_int
sqlite3_value_blob
sqlite3_value_bytes
sqlite3_malloc
sqlite3_result_blob
sqlite3_free
sqlite3_value_int64
sqlite3_result_text16
sqlite3_value_text
sqlite3_prepare_v2
sqlite3_exec
sqlite3_trace
sqlite3_profile
sqlite3_snprintf
sqlite3_expanded_sql
StateRepository.Core.dll
GetPackageStatus
GetPackageFullNameFromToken
UpdatePackageStatus
GetEffectivePackageStatusForUser
IncrementPackageStatusVersion
api-ms-win-appmodel-runtime-internal-l1-1-1.dll
api-ms-win-appmodel-runtime-internal-l1-1-2.dll
wcsrchr
__CxxFrameHandler4
__std_terminate
wcsstr
__CxxFrameHandler3
EventActivityIdControl
RtlSetSaclSecurityDescriptor
GetSecurityInfo
RtlAddProcessTrustLabelAce
InitOnceBeginInitialize
FindFirstFileW
CreateSemaphoreExW
HeapFree
EnterCriticalSection
FindNextFileW
ReleaseSemaphore
EventUnregister
CompareStringOrdinal
LeaveCriticalSection
CoTaskMemFree
InitializeCriticalSectionEx
WaitForThreadpoolTimerCallbacks
FindClose
WaitForSingleObject
CreateFileW
GetFileAttributesW
ReleaseMutex
NtSetInformationThread
RtlAllocateAndInitializeSid
NtSetSecurityObject
EventSetInformation
RtlLengthSid
SetNamedSecurityInfoW
GetFileAttributesExW
SetSecurityAccessMask
ReleaseSRWLockExclusive
CloseThreadpoolTimer
RtlEnterCriticalSection
InitOnceComplete
AcquireSRWLockExclusive
WaitForSingleObjectEx
OpenSemaphoreW
RtlFreeSid
SetThreadpoolTimer
ReleaseSRWLockShared
CreateThreadpoolTimer
HeapAlloc
EventRegister
EqualSid
GetAce
CreateMutexExW
LocalFree
AcquireSRWLockShared
DeleteCriticalSection
GetProcessHeap
RtlCreateAcl
EventWriteTransfer
NtQueryInformationThread
RtlLeaveCriticalSection
RtlEqualSid
RtlCreateSecurityDescriptor
RtlFindAceByType
GetFileSizeEx
CoCreateInstance
RtlIsStateSeparationEnabled
NtCompareSigningLevels
NtGetCachedSigningLevel
RtlNtStatusToDosErrorNoTeb
RtlInitializeCriticalSection
ImpersonateLoggedOnUser
RevertToSelf
OpenThreadToken
OpenProcessToken
RtlReportException
NtQuerySystemInformation
RaiseException
RtlInitUnicodeString
RtlDowncaseUnicodeString
RtlFreeUnicodeString
RegOpenKeyExW
RegCloseKey
GetLengthSid
RegQueryValueExW
RtlAcquireSRWLockExclusive
RtlReleaseSRWLockExclusive
RegSetValueExW
RegDeleteKeyExW
RegCreateKeyExW
NtQueryInformationFile
QueryFullProcessImageNameW
NtQueryInformationProcess
LookupAccountSidW
ProcessIdToSessionId
OpenProcess
CreateDirectoryW
GetVolumePathNameW
RtlGetDeviceFamilyInfoEnum
GetVolumeInformationW
StringFromGUID2
GetVolumeNameForVolumeMountPointW
GetWindowsDirectoryW
RegEnumKeyExW
CopyFileW
UuidCreate
UuidToStringW
WriteFile
RtlCompareUnicodeString
PathAllocCanonicalize
PathCchRemoveBackslash
PathCchSkipRoot
PathCchCombine
DeleteFileW
GetTokenInformation
GetFileInformationByHandleEx
RtlInsertElementGenericTableAvl
RtlInitializeGenericTableAvl
RtlLookupElementGenericTableAvl
RpcStringFreeW
WindowsCreateStringReference
FileTimeToSystemTime
GetFileSecurityW
AccessCheck
GetSecurityDescriptorOwner
ConvertSecurityDescriptorToStringSecurityDescriptorW
FindFirstFileNameW
FindNextFileNameW
RtlIsMultiUsersInSessionSku
AdjustTokenPrivileges
GetSystemInfo
CopySid
RoActivateInstance
SetThreadToken
RtlDosPathNameToNtPathName_U_WithStatus
NtCreateFile
NtFsControlFile
ImpersonateSelf
CreateFileMappingW
MapViewOfFile
NtSetInformationVirtualMemory
UnmapViewOfFile
SetFileAttributesW
Sleep
ConvertStringSecurityDescriptorToSecurityDescriptorW
K32EnumProcesses
LocalAlloc
RtlFreeHeap
CertGetEnhancedKeyUsage
CertVerifyCertificateChainPolicy
ApiSetQueryApiSetPresence
CryptQueryObject
CryptMsgGetParam
CertGetSubjectCertificateFromStore
CertGetCertificateChain
CertOpenStore
CertCreateCertificateChainEngine
FreeLibrary
CertCloseStore
CryptMsgClose
CertFreeCertificateContext
CertFreeCertificateChain
CertFreeCertificateChainEngine
RtlValidSid
QueryUnbiasedInterruptTime
WideCharToMultiByte
GlobalMemoryStatusEx
RoGetActivationFactory
IsValidSid
ConvertSidToStringSidW
MultiByteToWideChar
GetLocalTime
RtlCaptureStackBackTrace
WerRegisterCustomMetadata
RtlAllocateHeap
TdhGetEventMapInformation
TdhGetEventInformation
TdhEnumerateProviderFieldInformation
TlsAlloc
TlsGetValue
TlsSetValue
RoOriginateErrorW
GetVersionExW
GetModuleHandleExA
ResolveDelayLoadedAPI
DelayLoadFailureHook
api-ms-win-eventing-provider-l1-1-0.dll
ntdll.dll
api-ms-win-security-provider-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-psapi-l1-1-0.dll
api-ms-win-security-lsalookup-l2-1-0.dll
api-ms-win-core-file-l1-2-0.dll
OLEAUT32.dll
api-ms-win-core-file-l2-1-2.dll
RPCRT4.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-file-l2-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-security-sddl-l1-1-0.dll
api-ms-win-core-file-l1-2-2.dll
api-ms-win-core-winrt-l1-1-0.dll
CRYPT32.dll
api-ms-win-core-apiquery-l1-1-0.dll
api-ms-win-core-realtime-l1-1-0.dll
api-ms-win-core-windowserrorreporting-l1-1-1.dll
api-ms-win-eventing-tdh-l1-1-0.dll
api-ms-win-core-winrt-error-l1-1-0.dll
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
PackageSidFromFamilyName
RtlConvertSidToUnicodeString
RtlReleaseSRWLockShared
RtlAcquireSRWLockShared
strcmp
memcmp
memcpy
memmove
.?AVbad_array_new_length@std@@
.?AVbad_alloc@std@@
.?AVResultException@wil@@
.?AVexception@std@@
.?AVtype_info@@
<tock
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
"ApplyTrustOffline.PROGRAM"
FileVersion
10.0.22621.601 (WinBuild.160101.0800)
InternalName
"ApplyTrustOffline.PROGRAM"
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
"ApplyTrustOffline.PROGRAM"
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.601
VarFileInfo
Translation
R2Zpr@
\/IV|
6xJkB>
Fae*c
_bk9b
vm3RB)%
k4h6|
miP\^
>I?7 MT!>
om><8
amyVa
6CD= 7
S$:hG
0Rl8P
V]LR_
ruQey
qF RC
egn)<
@109".}
?YV7z"
sF**}
T]}f^~Y
^u`c(
aCtD|
7iAo^J
!{l)OJ
t\$N,
)Yx7,U
\0Q$]
%I!dk
9ndsq
/uh}{
n>Fpq
/+I i
U`o@0
.g#:R
{Y2_xP
YS`L<
2>k(}
Kbg5 
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
220127193119Z
230126193119Z0z1
Washington1
Redmond1
Microsoft Corporation1$0"
Microsoft Windows Publisher0
*T)u,^
I0G1-0+
$Microsoft Ireland Operations Limited1
230280+4690830
M0K0I
Chttp://www.microsoft.com/pkiops/crl/MicWinProPCA2011_2011-10-19.crl0a
U0S0Q
Ehttp://www.microsoft.com/pkiops/certs/MicWinProPCA2011_2011-10-19.crt0
/C'yrx
]ObB4P
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
111019184142Z
261019185142Z0
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 20110
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
TlP0X
R!s4Z
Washington1
Redmond1
Microsoft Corporation1.0,
%Microsoft Windows Production PCA 2011
,YOwqzlEo3ZT0P8Jx6UhEjaa6N9VYo8mlW6bKz0WZLL4=0Z
"Microsoft Window
 http://www.microsoft.com/windows0
m*NTD
g:B$h
),Z3B
cO.Xx
20220906231545.769Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:12BC-E3AE-74EB1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
211202190524Z
230228190524Z0
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:12BC-E3AE-74EB1%0#
Microsoft Time-Stamp Service0
[oz:h<g
2}>E7
l{RsD
X0V0T
Nhttp://www.microsoft.com/pkiops/crl/Microsoft%20Time-Stamp%20PCA%202010(1).crl0l
`0^0\
Phttp://www.microsoft.com/pkiops/certs/Microsoft%20Time-Stamp%20PCA%202010(1).crt0
u2.7Q 
B3utO
&j#fi
Washington1
Redmond1
Microsoft Corporation1200
)Microsoft Root Certificate Authority 20100
210930182225Z
300930183225Z0|1
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
q\Q17
&S|9a
!]_0t
U0S0Q
3http://www.microsoft.com/pkiops/Docs/Repository.htm0
O0M0K
Ehttp://crl.microsoft.com/pki/crl/products/MicRooCerAut_2010-06-23.crl0Z
N0L0J
>http://www.microsoft.com/pki/certs/MicRooCerAut_2010-06-23.crt0
>NGdx
fg:SM
xSu$W
as.,k{n?,
J>f;O
!TkjE
Washington1
Redmond1
Microsoft Corporation1%0#
Microsoft America Operations1&0$
Thales TSS ESN:12BC-E3AE-74EB1%0#
Microsoft Time-Stamp Service
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 20100
20220906214601Z
20220907214601Z0t0:
1,0*0
1(0&0
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
Washington1
Redmond1
Microsoft Corporation1&0$
Microsoft Time-Stamp PCA 2010
n~j*I
6a16\
MlCIM_
XXJ?+
