!This program cannot be run in DOS mode.
Richf
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
L$XE3
L$pH3
D$`E3
L$ E3
L$pH3
t$ UWAVH
f9<Bu
fA9<@u
fA9<@u
D$pE3
t$ UWAWH
fA9<@u
fA9<@u
fA9<@u
D$pE3
L$0H3
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
D$pE3
D$pE3
qsT>l
qsT>l
|$ UH
x AVH
pcPZt
UVWAVAWH
A_A^_^]
t$ UWATAVAWH
\$0E3
A_A^A\_]
x AVH
WAVAWH
A_A^_
x AWH
VWAUAVAWH
A_A^A]_^
t$ WATAUAVAWH
A_A^A]A\_
UVWAVAW
A_A^_^]
USVWATAUAVAWH
A_A^A]A\_^[]
WAVAWH
A_A^_
WATAUAVAWH
A_A^A]A\_
@USVWATAUAVAWH
fE9'tg
L$XE3
fE9'tg
L$pE3
fE9'tc
D!t$hH
fE9'tc
D!t$DH
D!t$@H
fE9'tc
D!t$HH
fE9'tc
D!t$@H
fE9'tc
D!t$DH
A_A^A]A\_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
 A_A^_
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
WATAUAVAWH
H9A(u
x@D;c
0A_A^A]A\_
D$xE3
D$8E3
@SUVWH
D$0L;
u`f9C
p0\:#7
T$8H!|$8
D$@E3
WAVAWH
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
H9A(u
L$0H9D$@
@USVWATAVAWH
p!PZa
d$(E3
@A_A^A\_^[]
x AVH
UVWATAUAVAWH
ty@8=
t"@8=rL
fA9>u
@A_A^A]A\_^]
L$ SWH
L$XH+
\$ UVWATAUAVAWH
A_A^A]A\_^]
Y u;H
Y(u8H
q0Q0b6
q0Q0b6
q0Q0b6
WATAUAVAWH
}HL9e@t
L97sGI
t;fD9!t5
 A_A^A]A\_
x AVH
uPH9i
HcT$0HcL$4H
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
D$@L;l$8
A_A^A]A\_^]
WATAUAVAWH
|$@E3
A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
.....
..............................................................................
 !"#$%&'()*+,-
qaY<;
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
l$ VWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_^
Y u8H
q0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
E9gXH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p0Q0b6
p0Q0b6
l$ VWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_^
t$ UWAVH
p0Q0b6
p0Q0b6
t$ WH
p0Q0b6
UVWAVAWH
p0Q0b6
p0Q0b6
A_A^_^]
p0Q0b6
p0Q0b6
l$ VWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^
l$ VWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^
T6*6Q
x AUAVAWH
p0Q0b6
A_A^A]
qhP2W
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
D9fXH
A_A^A]A\_^]
WAVAWH
p0Q0b6
p0Q0b6
D9wXtQ
A_A^_
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
l$ VWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
l$ VWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^
l$ VWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^
x AVH
p0Q0b6
p0Q0b6
VWAWH
p0Q0b6
p0Q0b6
p0Q0b6
WAVAWH
A_A^_
WAVAWH
A_A^_
Y u8H
Y0u8H
q0Q0b6
q0Q0b6
t$ WATAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A\_
UWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_]
x AVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
qSUX<6!
x AVH
p0Q0b6
qAW~R
\$ UVWATAUAVAWH
p0Q0b6
D$0tPL
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
t$ fI
p0Q0b6
L$0E3
p0Q0b6
D$0tRL
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
t#HcC
x AWH
p0Q0b6
p0Q0b6
x AWH
p0Q0b6
p0Q0b6
x AWH
f9^2teH
p0Q0b6
p0Q0b6
p0Q0b6
x AWH
p0Q0b6
p0Q0b6
x AWH
p0Q0b6
p0Q0b6
VWAVH
p0Q0b6
WAVAWH
fD9v2tjf
p0Q0b6
p0Q0b6
A_A^_
p0Q0b6
p0Q0b6
x AVH
WAVAWH
p0Q0b6
A_A^_
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
@USVWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_^[]
}HH9y
tBHcI
x AVH
}^H9y
tXHcI
x AVH
}\H9y
tVHcI
x AVH
}^H9y
tXHcI
x AUAVAWH
 A_A^A]
x AUAVAWH
 A_A^A]
Yrm'8
^x:&x
x AWH
p0Q0b6
p0Q0b6
WATAUAVAWH
~8I9~8t
p0Q0b6
A_A^A]A\_
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
WAVAWH
xUHcO
 A_A^_
WAVAWH
x^HcW
 A_A^_
L$ UVWATAUAVAWH
p0Q0b6
I9~0uB
p0Q0b6
A_A^A]A\_^]
x UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
@USVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^[]
` UAVAWH
p0Q0b6
A_A^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
l$ VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
USVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
d$0E3
d$(E3
;L$PtYH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^[]
x UATAUAVAWH
p0Q0b6
p0Q0b6
|kA;w
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
@USVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
;L$@taH
p0Q0b6
L$PE3
LcD$@H
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^[]
\$ UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p WATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_
q#Yr_?
\$ UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
X<o7Q
p#Yr_?
WATAUAVAWH
p0Q0b6
A_A^A]A\_
p0Q0b6
x AVH
O(H91t
M@H99t
t$ WAVAWH
wPH9.t
A_A^_
UWATAUAWH
p0Q0b6
H9w8t3L
H9w@tSL
p0Q0b6
A_A]A\_]
x ATAVAWH
p0Q0b6
F8D9p
D$0fD
p0Q0b6
D$@tNL
A_A^A\
l$ VWAVH
p0Q0b6
H9W@t.L
x AVH
p0Q0b6
H9W@tKL
UVWATAUAVAWH
p0Q0b6
M9n8tML
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
` AUAVAWH
p0Q0b6
L9n@tNL
YL9n8tZL
D$0fD
p0Q0b6
A_A^A]
UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
L9g8tHL
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
q3UZ"
WATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_
x UATAUAVAWH
p0Q0b6
GPD;,
p0Q0b6
A_A^A]A\]
UVWATAVH
~,H93t
A^A\_^]
VWATAVAWH
A_A^A\_^
VWATAVAWH
A_A^A\_^
VWATAVAWH
9~8~pH
A_A^A\_^
WAVAWH
A_A^_
L$ UVWATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_^]
q0Q0b6
x AVH
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
E;w@uYH
p0Q0b6
E;w uvH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
VWAUAVAWH
p0Q0b6
p0Q0b6
H9WptZL
p0Q0b6
A_A^A]_^
p AWH
t$ WH
p0Q0b6
t$ WH
p0Q0b6
t$ WH
p0Q0b6
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
t$ UWAVH
WAVAWH
A_A^_
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
x AVH
p0Q0b6
UVWATAUAVAWH
H!UoL
p0Q0b6
E;w uvH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
X<f>d
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
qxQ~B6
UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
SUVWATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_^][
t$LcC
UVWATAUAVAWH
E9w@uhH
p0Q0b6
T$PH9
HcL$8H
p0Q0b6
p0Q0b6
p0Q0b6
T6*6Q
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
H!\$PH
;\$p|
!D$8!D$`
HcD$8H
!T$`E3
D$P90
HcL$`I
HcT$8D
HcL$83
HcL$8L
HcL$8H
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
q3UZ"
WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
x AUAVAWH
 A_A^A]
9Yx~;3
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
WAVAWH
A_A^_
x AVH
ATAVAWH
p0Q0b6
p0Q0b6
HcWpLc
p0Q0b6
p0Q0b6
A_A^A\
WAVAWH
A_A^_
x UATAUAVAWH
p0Q0b6
A_A^A]A\]
p0Q0b6
WATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
q(Up5
UVWATAUAVAWH
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
A_A^A]A\_^]
x AVH
p0Q0b6
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
UVWAVAWH
p0Q0b6
A_A^_^]
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
VWAVH
p0Q0b6
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
t$ UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
x AUAVAWH
p0Q0b6
A_A^A]
x AUAVAWH
p0Q0b6
A_A^A]
x AUAVAWH
p0Q0b6
A_A^A]
x AUAVAWH
p0Q0b6
A_A^A]
x AUAVAWH
p0Q0b6
A_A^A]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
p0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_^]
x UAVAWH
p0Q0b6
A_A^]
x AUAVAWH
p0Q0b6
A_A^A]
x UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
p0Q0b6
p0Q0b6
yLcGP3
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UWAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
|$(E3
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UWAVH
p0Q0b6
t$ WH
p0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
t$ UWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_]
UWAVH
p0Q0b6
x AUAVAWH
p0Q0b6
A_A^A]
x UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
WAVAWH
p0Q0b6
p0Q0b6
A_A^_
x AWH
p0Q0b6
t$ WH
p0Q0b6
p0Q0b6
p0Q0b6
@USVATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\^[]
UWAVH
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
9EgtdH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
^x:&x
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p0Q0b6
UWAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p(Up5
p0Q0b6
p0Q0b6
D9l$X
D9l$@
p0Q0b6
p0Q0b6
A_A^A]A\_^]
p0Q0b6
x AUAVAWH
p0Q0b6
A_A^A]
x UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
t$ WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
x AVH
p0Q0b6
UVWAVAWH
p0Q0b6
p0Q0b6
A_A^_^]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
@USVWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^[]
O(H91t
WAVAWH
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
q0Q0b6
q0Q0b6
q0Q0b6
VWAVH
p0Q0b6
p0Q0b6
t$ UWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_]
@USVWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^[]
t$ UWATAVAWH
p0Q0b6
p0Q0b6
A_A^A\_]
WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UVWATAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A\_^]
t$ WH
p0Q0b6
\$ UVWATAUAVAWH
L9~8ufH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
fE93t
UVWATAVH
H9wPt
A^A\_^]
x AVH
NPH9)t
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
^pG7a
VWAWH
W<:>I
p0Q0b6
p0Q0b6
x AVH
p0Q0b6
|$ AUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
l$ VWAVH
p0Q0b6
p0Q0b6
t$ WH
p0Q0b6
t$ WH
p0Q0b6
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
WAVAWH
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
x AVH
p0Q0b6
UWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
t$ WH
p0Q0b6
l$ VWAVH
p0Q0b6
p0Q0b6
t$ WH
p0Q0b6
p0Q0b6
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
x AUAVAWH
t!A9]
A_A^A]
UVWATAUAVAWH
A_A^A]A\_^]
WAVAWH
A_A^_
WAVAWH
A_A^_
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
q0Q0b6
x AVH
p0Q0b6
UVWATAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A\_^]
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
@USVWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_^[]
UWAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]_]
O(H91t
t$ UWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_]
t$ UWATAVAWH
p0Q0b6
p0Q0b6
A_A^A\_]
t$ UWATAUAVH
p0Q0b6
p0Q0b6
p0Q0b6
A^A]A\_]
WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UVWATAVH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A^A\_^]
l$ VWAVH
p0Q0b6
t$ WH
p0Q0b6
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p1VZ|
p0Q0b6
p0Q0b6
A_A^A]A\_^]
M(H91t
M0H99t
WAVAWH
A_A^_
q0Q0b6
t$ UWATAVAWH
p0Q0b6
p0Q0b6
A_A^A\_]
WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
l$ VWAVH
p0Q0b6
q3UZ"
VWAVH
p0Q0b6
p0Q0b6
p0Q0b6
x ATAVAWH
f,H9)t
A_A^A\
WAVAWH
A_A^_
WAVAWH
A_A^_
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
q0Q0b6
q0Q0b6
x AVH
p0Q0b6
x UATAUAVAWH
H!UoL
p0Q0b6
E;w@uvH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
qcRz$6
t$ WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
t$ WH
p AWH
p0Q0b6
q!V|(.
L$ USVWAVAWH
A_A^_^[]
\$ UVWAVAWH
H9}8tgL
A_A^_^]
qP^<G
USVWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_^[]
UWATAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A\_]
\$ UVWATAUAVAWH
p0Q0b6
L9l$0t
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
\$ UVWATAUAVAWH
p0Q0b6
L9l$0t
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^]
H UATAUAVAWH
p0Q0b6
T$(E3
p0Q0b6
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
UVWATAUAVAWH
p0Q0b6
p0Q0b6
L9t$XudH
p0Q0b6
D9t$PuYH
p0Q0b6
p0Q0b6
A_A^A]A\_^]
x UATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\]
t$ WH
@SVWH
L$8H3
UVWAVAWH
L$hE3
0A_A^_^]
x AVH
}_H9y
tYHcI
x ATAVAWH
0A_A^A\
x UATAUAVAWH
A_A^A]A\]
p0Q0b6
p0Q0b6
USVWATAUAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^A]A\_^[]
UVWATAUAVAWH
p0Q0b6
A_A^A]A\_^]
x ATAVAWH
thH+Y E3
 A_A^A\
x AVH
WATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_
\$ UVWAVAWH
p0Q0b6
p0Q0b6
A_A^_^]
@USVWATAUAVAWH
p0Q0b6
D$8E3
D$8E3
p0Q0b6
A_A^A]A\_^[]
Y0u8H
I+I H
@SUVWATAVAWH
p0Q0b6
p0Q0b6
A_A^A\_^][
@USVWATAUAVAWH
p0Q0b6
p0Q0b6
A_A^A]A\_^[]
WAVAWH
p0Q0b6
p0Q0b6
p0Q0b6
A_A^_
UAVAWH
t0fE9xl
A_A^]
fD9{l
#D9{hH
L9{Pt
t7LcC
UVWATAUAVAWH
f94Bu
 A_A^A]A\_^]
@USVWATAUAVAWH
u`f9]`tEI
D$ E3
\$0E3
A_A^A]A\_^[]
x AVH
D97|N9
x AVH
p AWH
|$ UATAUAVAWH
L9;t4H
A_A^A]A\]
UWAUAVAWH
py[2>
L9;t4H
py[2>
A_A^A]_]
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
tuL9o
L97t4H
tWf;]
A_A^A]A\_^]
8w1t*
UVWAVAWH
L$hE3
0A_A^_^]
ATAVAWH
A_A^A\
D$8E3
D$8E3
x AVH
x AVH
x AVH
f9l$(u
f9l$(u
USVWAVH
A^_^[]
qi[P%6
@UATAUAVAWH
e A_A^A]A\]
UVWAVAWH
L$0H3
@A_A^_^]
WAVAWH
s I9>uaH
0A_A^_
qh]X=
WAVAWH
L9?t<E
fD9x(u
L9?t|Lc
fD9x(uOH
 A_A^_
UVWAVAWH
@A_A^_^]
t$ UWATAVAWH
}0H9~
A_A^A\_]
t$ UWAVH
p3\TK
@SVWH
AHH98
L$PH3
pJWrx7L
H;C@t
T$XE3
@USVWAVH
A^_^[]
x ATAVAWH
p3\TK
A_A^A\
pZW4'
x ATAVAWH
H;{ r
 A_A^A\
WAVAWH
A_A^_
WAVAWH
A_A^_
WAVAWH
A_A^_
qs^VG
t$ WH
x ATAVAWH
thH+Y E3
 A_A^A\
WAVAWH
fD;1t{fD;9u
fD;8ucH
fD;9u
7fD;6tX
 A_A^_
q3\TK
UVWAVAWH
D$8E3
t,fD9x
L$8H3
@A_A^_^]
L$ SH
q;^:R
'f9l$H
VWAVH
p3\TK
UVWATAUAVAWH
f9<Bu
fB9<Bu
A_A^A]A\_^]
9D$pu
x AVH
L$0H3
@UVWAVAWH
EH9E@u4H
@A_A^_^]
UVWAVAWH
@A_A^_^]
\$ UVWATAUAVAW
f;D$@u^D
A_A^A]A\_^]
@USVWAVH
D$PfD
A^_^[]
@USVWATAUAVAWH
t$XE3
D$@E3
T$pE3
fD94Gu
?{uQH
D$pE3
A_A^A]A\_^[]
q0Q0b6
q0Q0b6
q0Q0b6
WxE.8
qC]P.&
WAVAWH
@A_A^_
p AWH
x~H9\$`tr
x~H9\$`tr
UVWAVAWH
fD9<Au
A_A^_^]
UVWAVAWH
fD9<Au
A_A^_^]
{ UAVAWH
E H9K@t3H
A_A^]
t$ WH
|$ UH
SUVWATAUAVAWH
A_A^A]A\_^][
x AVH
9Hu^3
9i@~.3
xE;k@}@H
{@t H
l$ VWAWH
f;D$0t[
@USVWATAVAWH
A_A^A\_^[]
f;D$ t
f;D$ u
` UAVAWH
A_A^]
L$ SVWH
UVWAVAWH
T$ E3
A_A^_^]
t$ WH
WAVAWH
\$ E3
0A_A^_
WAVAWH
 A_A^_
l$ WH
f9,Bu
!D$`M
D$0E3
|$ E3
D$0E3
t$ E3
L$pE3
D$`E3
D$8E3
;A4t+
L$xH3
L$ SVWH
x UAVAWH
L$4E3
D$0E3
A_A^]
H USH
K SWH
K SWH
L$ SWH
L$ SWH
L$ SVWH
WAVAWH
 A_A^_
H USH
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
u_H9{
D$ E3
D$ E3
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
Invalid parameter passed to C runtime function.
=W4H-C
ForceRemove
NoRemove
Delete
Unknown Error
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
CreateRational
CreateRational
Parameters->(Numerator = %ld, Denominator = %ld, &vResult = 0x%lx)
CreateInstance failed [returning 0x%lx]
Init failed [returning 0x%lx]
QueryInterface failed [returning 0x%lx]
VectorFromPropVector
VectorFromPropVector
Parameters->(vt = %u, cElems = %ld, pSrcBits = 0x%lx, &vResult = 0x%lx)
Appending Bytes
AppendBytes failed [returning 0x%lx]
Appending Shorts
AppendShorts failed [returning 0x%lx]
Appending Longs
AppendLongs failed [returning 0x%lx]
Appending Floats
AppendFloats failed [returning 0x%lx]
Appending Doubles
AppendDoubles failed [returning 0x%lx]
Appending LongLongs
AppendLongLongs failed [returning 0x%lx]
Unsupported vt value (%u)
VariantFromPropVariant
VariantFromPropVariant
Parameters->(pvSrc = 0x%lx, &vResult= 0x%lx)
vt is ByRef
vt is Array
vt is Vector
Arrays not supported [returning E_FAIL]
Process Vector
vt is Vector of VT_I1
VectorFromPropVector failed [returning 0x%lx]
vt is Vector of VT_UI1
vt is Vector of VT_I2
vt is Vector of VT_UI2
vt is Vector of VT_I4
vt is Vector of VT_UI4
vt is Vector of VT_R4
vt is Vector of VT_R8
vt is Vector of VT_BOOL
vt is Vector of VT_ERROR
vt is Vector of VT_CY
vt is Vector of VT_DATE
vt is Vector of VT_I8
Processing Element %ld of %ld
Appending LongLong %I64d as Long %ld
vt is Vector of VT_UI8
Appending ULongLong %I64u as Long %ld
vt is Vector of VT_FILETIME
FileTimeToSystemTime failed [continuing]
SystemTimeToVariantTime failed [continuing]
Appending FileTime as Date %lf
vt is Vector of VT_CLSID
StringFromCLSID failed [bstrGuid = ""]
Appending GUID as String "%ls"
vt is Vector of VT_BSTR, VT_LPSTR, or VT_LPWSTR
Copying from BSTR
Copying from LPSTR
Copying from LPWSTR
Appending String "%ls"
vt is Vector of VT_VARIANT
VariantFromPropVariant failed [Appending VT_ERROR(0x%lx)]
Appending Variant
vt is unsupported (Vector of VT_CF)
vt is unsupported (Vector of VT_BSTR_BLOB)
vt is unsupported (%u)
Process PropVariant
vt is VT_LPSTR
vResult = "%ls"
vt is VT_LPWSTR
vt is VT_FILETIME
FileTimeToSystemTime failed [returning 0x%lx]
SystemTimeToVariantTime failed [return E_FAIL]
vResult = %lf
vt is VT_CLSID
StringFromCLSID failed [returning 0x%lx]
vt is unsupported (VT_CF)
vt is unsupported (VT_BSTR_BLOB)
vt is unsupported (VT_BLOB or VT_BLOB_OBJECT)
vt is unsupported (VT_STREAM or VT_STREAMED_OBJECT)
vt is unsupported (VT_STORAGE or VT_STORED_OBJECT)
vt is unsupported (VT_VERSIONED_STREAM)
vt is VT_VARIANT
VariantFromPropVariant failed [returning 0x%lx]
vt is (%u)
Copy failed [returning 0x%lx]
PropVariantFromVariant
PropVariantFromVariant
Parameters->(vSrc.vt = %u, vtTarget = %u, &pvResult = 0x%lx)
vtSrc is ByRef
vtSrc is Array
vtSrc is Vector
vtTarget is ByRef
vtTarget is Array
vtTarget is Vector
vSrc is not VT_DISPATCH [returning E_FAIL]
vSrc is ByReference
vSrc is not ByReference
CComQIPtr failed [returning E_FAIL]
get_Count failed [returning 0x%lx]
lCount is 0 [returning WIA_ERROR_VECTOR_EMPTY]
vtTarget is Vector of VT_I1
CoTaskMemAlloc failed [returning E_OUTOFMEMORY]
Processing element %ld or %ld
get_Item failed [returning 0x%lx]
ChangeType failed [returning 0x%lx]
pArray[%ld] = 0x%x
vtTarget is Vector of VT_UI1
vtTarget is Vector of VT_I2
pArray[%ld] = %d
vtTarget is Vector of VT_UI2
pArray[%ld] = %u
vtTarget is Vector of VT_I4
pArray[%ld] = %ld
vtTarget is Vector of VT_UI4
pArray[%ld] = %lu
vtTarget is Vector of VT_R4
pArray[%ld] = %f
vtTarget is Vector of VT_R8
pArray[%ld] = %lf
vtTarget is Vector of VT_BOOL
vtTarget is Vector of VT_ERROR
pArray[%ld] = 0x%lx
vtTarget is Vector of VT_DATE
vtTarget is Vector of VT_CY
pArray[%ld] = %I64d
vtTarget is Vector of VT_I8
vtTarget is Vector of VT_UI8
pArray[%ld] = %I64u
vtTarget is Vector of VT_FILETIME
VariantTimeToSystemTime failed [returning E_FAIL]
SystemTimeToFileTime failed [returning E_FAIL]
pArray[%ld] = 0x%lx%lx
vtTarget is Vector of VT_CLSID
CLSIDFromString failed [returning 0x%lx]
pArray[%ld] = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
vtTarget is Vector of VT_BSTR
get_Item failed
ChangeType failed
pArray[%ld] = "%ls"
[returning 0x%lx]
vtTarget is Vector of VT_LPSTR
CoTaskMemAlloc failed
pArray[%ld] = "%hs"
vtTarget is Vector of VT_LPWSTR
vtTarget is Vector of VT_VARIANT
Detach failed
pArray[%ld] = Variant
PropVariantClear failed [hr2 = 0x%lx]
vtTarget is unsupported (Vector of VT_CF)
vtTarget is unsupported (Vector of VT_BSTR_BLOB)
vtTarget is unsupported (Vector of %u)
vtTarget is VT_LPSTR
*pvResult = "%hs"
vtTarget is VT_LPWSTR
*pvResult = "%ls"
vtTarget is VT_FILETIME
SystemTimeToFileTime failed [returning 0x%lx]
*pvResult = 0x%lx%lx
vtTarget is VT_CLSID
*pvResult = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
vtTarget is unsupported (VT_CF) [returning E_FAIL]
vtTarget is unsupported (VT_BSTR_BLOB) [returning E_FAIL]
vtTarget is unsupported (VT_BLOB or VT_BLOB_OBJECT) [returning E_FAIL]
vtTarget is unsupported (VT_STREAM or VT_STREAMED_OBJECT) [returning E_FAIL]
vtTarget is unsupported (VT_STORAGE or VT_STORED_OBJECT) [returning E_FAIL]
vtTarget is unsupported (VT_VERSIONED_STREAM) [returning E_FAIL]
vtTarget is unsupported (VT_VARIANT) [returning E_FAIL]
vtTarget is %u
vtSrc is %u (changing to vtTarget)
VariantFromExifTag
VariantFromExifTag
Parameters->(pProp = 0x%lx, &vResult = 0x%lx)
pProp is NULL [returning E_POINTER]
type is PropertyTagTypeByte or PropertyTagTypeUndefined
vResult = 0x%x
It is a vector
type is PropertyTagTypeASCII
type is PropertyTagTypeShort
vResult = %d
type is PropertyTagTypeLong or PropertyTagTypeSLong
vResult = %ld
type is PropertyTagTypeRational or PropertyTagTypeSRational
vResult = %ld/%ld
Appending Rational %ld/%ld
type is unsupported (%u) [returning E_FAIL]
ExifTagFromVariant
ExifTagFromVariant
Parameters->(nID = %lu, nType = %u, vProp.vt = %u, ppProp = 0x%lx)
ppProp is NULL [returning E_POINTER]
type is UndefinedImagePropertyType or ByteImagePropertyTypePropertyTagTypeByte
new failed [returning E_OUTOFMEMORY]
*value = 0x%x
*value = "%hs"
*value = %u
*value = %ld
*value = %lu
vProp is not VT_DISPATCH [returning E_FAIL]
vProp is ByReference
vProp is not ByReference
get_Numerator failed [returning 0x%lx]
get_Denominator failed [returning 0x%lx]
*value = %lu/%lu
*value = %ld/%ld
*pData = 0x%x
*pData = %u
*pData = %ld
*pData = %lu
CComQIPtr failed for IID_IVector [returning E_FAIL]
vData is not VT_DISPATCH [returning E_FAIL]
vData is ByReference
vData is not ByReference
CComQIPtr failed for IID_Rational [returning E_FAIL]
*pData = %ld/%ld
CComQIPtr failed for IID_IRational [returning E_FAIL]
*pData = %lu/%lu
EnumFromVarType
EnumFromVarType
Parameters->(vtType = %u)
vtType is ByRef
vtType is Array [returning UnsupportedPropertyType]
vtType is Vector
uResult = BooleanPropertyType
uResult = VectorOfBooleansPropertyType
uResult = BytePropertyType
uResult = VectorOfBytesPropertyType
uResult = UnsignedIntegerPropertyType
uResult = VectorOfUnsignedIntegersPropertyType
uResult = IntegerPropertyType
uResult = VectorOfIntegersPropertyType
uResult = LongPropertyType
uResult = VectorOfLongsPropertyType
uResult = UnsignedLongPropertyType
uResult = VectorOfUnsignedLongsPropertyType
uResult = ErrorCodePropertyType
uResult = VectorOfErrorCodesPropertyType
uResult = LargeIntegerPropertyType
uResult = VectorOfLargeIntegersPropertyType
uResult = UnsignedLargeIntegerPropertyType
uResult = VectorOfUnsignedLargeIntegersPropertyType
uResult = SinglePropertyType
uResult = VectorOfSinglesPropertyType
uResult = DoublePropertyType
uResult = VectorOfDoublesPropertyType
uResult = CurrencyPropertyType
uResult = VectorOfCurrenciesPropertyType
uResult = DatePropertyType
uResult = VectorOfDatesPropertyType
uResult = FileTimePropertyType
uResult = VectorOfFileTimesPropertyType
uResult = ClassIDPropertyType
uResult = VectorOfClassIDsPropertyType
uResult = StringPropertyType
uResult = VectorOfStringsPropertyType
uResult = ObjectPropertyType
uResult = UnsupportedPropertyType
uResult = HandlePropertyType
uResult = VariantPropertyType
uResult = VectorOfVariantsPropertyType
EnumFromTagType
EnumFromTagType
Parameters->(type = %u, length = %lu)
uResult = UndefinedImagePropertyType
uResult = VectorOfUndefinedImagePropertyType
uResult = ByteImagePropertyType
uResult = VectorOfBytesImagePropertyType
uResult = StringImagePropertyType
uResult = UnsignedIntegerImagePropertyType
uResult = VectorOfUnsignedIntegersImagePropertyType
uResult = UnsignedLongImagePropertyType
uResult = VectorOfUnsignedLongsImagePropertyType
uResult = LongImagePropertyType
uResult = VectorOfLongsImagePropertyType
uResult = UnsignedRationalImagePropertyType
uResult = VectorOfUnsignedRationalsImagePropertyType
uResult = RationalImagePropertyType
uResult = VectorOfRationalsImagePropertyType
BstrFromTagID
BstrFromTagID
Parameters->(ID = %lu)
ID = PropertyTagExifIFD
ExifIFD
ID = PropertyTagGpsIFD
GpsIFD
ID = PropertyTagNewSubfileType
NewSubfileType
ID = PropertyTagSubfileType
SubfileType
ID = PropertyTagImageWidth
ImageWidth
ID = PropertyTagImageHeight
ImageHeight
ID = PropertyTagBitsPerSample
BitsPerSample
ID = PropertyTagCompression
Compression
ID = PropertyTagPhotometricInterp
PhotometricInterp
ID = PropertyTagThreshHolding
ThreshHolding
ID = PropertyTagCellWidth
CellWidth
ID = PropertyTagCellHeight
CellHeight
ID = PropertyTagFillOrder
FillOrder
ID = PropertyTagDocumentName
DocumentName
ID = PropertyTagImageDescription
ImageDescription
ID = PropertyTagEquipMake
EquipMake
ID = PropertyTagEquipModel
EquipModel
ID = PropertyTagStripOffsets
StripOffsets
ID = PropertyTagOrientation
Orientation
ID = PropertyTagSamplesPerPixel
SamplesPerPixel
ID = PropertyTagRowsPerStrip
RowsPerStrip
ID = PropertyTagStripBytesCount
StripBytesCount
ID = PropertyTagMinSampleValue
MinSampleValue
ID = PropertyTagMaxSampleValue
MaxSampleValue
ID = PropertyTagXResolution
XResolution
ID = PropertyTagYResolution
YResolution
ID = PropertyTagPlanarConfig
PlanarConfig
ID = PropertyTagPageName
PageName
ID = PropertyTagXPosition
XPosition
ID = PropertyTagYPosition
YPosition
ID = PropertyTagFreeOffset
FreeOffset
ID = PropertyTagFreeByteCounts
FreeByteCounts
ID = PropertyTagGrayResponseUnit
GrayResponseUnit
ID = PropertyTagGrayResponseCurve
GrayResponseCurve
ID = PropertyTagT4Option
T4Option
ID = PropertyTagT6Option
T6Option
ID = PropertyTagResolutionUnit
ResolutionUnit
ID = PropertyTagPageNumber
PageNumber
ID = PropertyTagTransferFuncition
TransferFuncition
ID = PropertyTagSoftwareUsed
SoftwareUsed
ID = PropertyTagDateTime
DateTime
ID = PropertyTagArtist
Artist
ID = PropertyTagHostComputer
HostComputer
ID = PropertyTagPredictor
Predictor
ID = PropertyTagWhitePoint
WhitePoint
ID = PropertyTagPrimaryChromaticities
PrimaryChromaticities
ID = PropertyTagColorMap
ColorMap
ID = PropertyTagHalftoneHints
HalftoneHints
ID = PropertyTagTileWidth
TileWidth
ID = PropertyTagTileLength
TileLength
ID = PropertyTagTileOffset
TileOffset
ID = PropertyTagTileByteCounts
TileByteCounts
ID = PropertyTagInkSet
InkSet
ID = PropertyTagInkNames
InkNames
ID = PropertyTagNumberOfInks
NumberOfInks
ID = PropertyTagDotRange
DotRange
ID = PropertyTagTargetPrinter
TargetPrinter
ID = PropertyTagExtraSamples
ExtraSamples
ID = PropertyTagSampleFormat
SampleFormat
ID = PropertyTagSMinSampleValue
SMinSampleValue
ID = PropertyTagSMaxSampleValue
SMaxSampleValue
ID = PropertyTagTransferRange
TransferRange
ID = PropertyTagJPEGProc
JPEGProc
ID = PropertyTagJPEGInterFormat
JPEGInterFormat
ID = PropertyTagJPEGInterLength
JPEGInterLength
ID = PropertyTagJPEGRestartInterval
JPEGRestartInterval
ID = PropertyTagJPEGLosslessPredictors
JPEGLosslessPredictors
ID = PropertyTagJPEGPointTransforms
JPEGPointTransforms
ID = PropertyTagJPEGQTables
JPEGQTables
ID = PropertyTagJPEGDCTables
JPEGDCTables
ID = PropertyTagJPEGACTables
JPEGACTables
ID = PropertyTagYCbCrCoefficients
YCbCrCoefficients
ID = PropertyTagYCbCrSubsampling
YCbCrSubsampling
ID = PropertyTagYCbCrPositioning
YCbCrPositioning
ID = PropertyTagREFBlackWhite
REFBlackWhite
ID = PropertyTagICCProfile
ICCProfile
ID = PropertyTagGamma
Gamma
ID = PropertyTagICCProfileDescriptor
ICCProfileDescriptor
ID = PropertyTagSRGBRenderingIntent
SRGBRenderingIntent
ID = PropertyTagImageTitle
ImageTitle
ID = PropertyTagCopyright
Copyright
ID = PropertyTagResolutionXUnit
ResolutionXUnit
ID = PropertyTagResolutionYUnit
ResolutionYUnit
ID = PropertyTagResolutionXLengthUnit
ResolutionXLengthUnit
ID = PropertyTagResolutionYLengthUnit
ResolutionYLengthUnit
ID = PropertyTagPrintFlags
PrintFlags
ID = PropertyTagPrintFlagsVersion
PrintFlagsVersion
ID = PropertyTagPrintFlagsCrop
PrintFlagsCrop
ID = PropertyTagPrintFlagsBleedWidth
PrintFlagsBleedWidth
ID = PropertyTagPrintFlagsBleedWidthScale
PrintFlagsBleedWidthScale
ID = PropertyTagHalftoneLPI
HalftoneLPI
ID = PropertyTagHalftoneLPIUnit
HalftoneLPIUnit
ID = PropertyTagHalftoneDegree
HalftoneDegree
ID = PropertyTagHalftoneShape
HalftoneShape
ID = PropertyTagHalftoneMisc
HalftoneMisc
ID = PropertyTagHalftoneScreen
HalftoneScreen
ID = PropertyTagJPEGQuality
JPEGQuality
ID = PropertyTagGridSize
GridSize
ID = PropertyTagThumbnailFormat
ThumbnailFormat
ID = PropertyTagThumbnailWidth
ThumbnailWidth
ID = PropertyTagThumbnailHeight
ThumbnailHeight
ID = PropertyTagThumbnailColorDepth
ThumbnailColorDepth
ID = PropertyTagThumbnailPlanes
ThumbnailPlanes
ID = PropertyTagThumbnailRawBytes
ThumbnailRawBytes
ID = PropertyTagThumbnailSize
ThumbnailSize
ID = PropertyTagThumbnailCompressedSize
ThumbnailCompressedSize
ID = PropertyTagColorTransferFunction
ColorTransferFunction
ID = PropertyTagThumbnailData
ThumbnailData
ID = PropertyTagThumbnailImageWidth
ThumbnailImageWidth
ID = PropertyTagThumbnailImageHeight
ThumbnailImageHeight
ID = PropertyTagThumbnailBitsPerSample
ThumbnailBitsPerSample
ID = PropertyTagThumbnailCompression
ThumbnailCompression
ID = PropertyTagThumbnailPhotometricInterp
ThumbnailPhotometricInterp
ID = PropertyTagThumbnailImageDescription
ThumbnailImageDescription
ID = PropertyTagThumbnailEquipMake
ThumbnailEquipMake
ID = PropertyTagThumbnailEquipModel
ThumbnailEquipModel
ID = PropertyTagThumbnailStripOffsets
ThumbnailStripOffsets
ID = PropertyTagThumbnailOrientation
ThumbnailOrientation
ID = PropertyTagThumbnailSamplesPerPixel
ThumbnailSamplesPerPixel
ID = PropertyTagThumbnailRowsPerStrip
ThumbnailRowsPerStrip
ID = PropertyTagThumbnailStripBytesCount
ThumbnailStripBytesCount
ID = PropertyTagThumbnailResolutionX
ThumbnailResolutionX
ID = PropertyTagThumbnailResolutionY
ThumbnailResolutionY
ID = PropertyTagThumbnailPlanarConfig
ThumbnailPlanarConfig
ID = PropertyTagThumbnailResolutionUnit
ThumbnailResolutionUnit
ID = PropertyTagThumbnailTransferFunction
ThumbnailTransferFunction
ID = PropertyTagThumbnailSoftwareUsed
ThumbnailSoftwareUsed
ID = PropertyTagThumbnailDateTime
ThumbnailDateTime
ID = PropertyTagThumbnailArtist
ThumbnailArtist
ID = PropertyTagThumbnailWhitePoint
ThumbnailWhitePoint
ID = PropertyTagThumbnailPrimaryChromaticities
ThumbnailPrimaryChromaticities
ID = PropertyTagThumbnailYCbCrCoefficients
ThumbnailYCbCrCoefficients
ID = PropertyTagThumbnailYCbCrSubsampling
ThumbnailYCbCrSubsampling
ID = PropertyTagThumbnailYCbCrPositioning
ThumbnailYCbCrPositioning
ID = PropertyTagThumbnailRefBlackWhite
ThumbnailRefBlackWhite
ID = PropertyTagThumbnailCopyRight
ThumbnailCopyRight
ID = PropertyTagLuminanceTable
LuminanceTable
ID = PropertyTagChrominanceTable
ChrominanceTable
ID = PropertyTagFrameDelay
FrameDelay
ID = PropertyTagLoopCount
LoopCount
ID = PropertyTagPixelUnit
PixelUnit
ID = PropertyTagPixelPerUnitX
PixelPerUnitX
ID = PropertyTagPixelPerUnitY
PixelPerUnitY
ID = PropertyTagPaletteHistogram
PaletteHistogram
ID = PropertyTagExifExposureTime
ExifExposureTime
ID = PropertyTagExifFNumber
ExifFNumber
ID = PropertyTagExifExposureProg
ExifExposureProg
ID = PropertyTagExifSpectralSense
ExifSpectralSense
ID = PropertyTagExifISOSpeed
ExifISOSpeed
ID = PropertyTagExifOECF
ExifOECF
ID = PropertyTagExifVer
ExifVer
ID = PropertyTagExifDTOrig
ExifDTOrig
ID = PropertyTagExifDTDigitized
ExifDTDigitized
ID = PropertyTagExifCompConfig
ExifCompConfig
ID = PropertyTagExifCompBPP
ExifCompBPP
ID = PropertyTagExifShutterSpeed
ExifShutterSpeed
ID = PropertyTagExifAperture
ExifAperture
ID = PropertyTagExifBrightness
ExifBrightness
ID = PropertyTagExifExposureBias
ExifExposureBias
ID = PropertyTagExifMaxAperture
ExifMaxAperture
ID = PropertyTagExifSubjectDist
ExifSubjectDist
ID = PropertyTagExifMeteringMode
ExifMeteringMode
ID = PropertyTagExifLightSource
ExifLightSource
ID = PropertyTagExifFlash
ExifFlash
ID = PropertyTagExifFocalLength
ExifFocalLength
ID = PropertyTagExifMakerNote
ExifMakerNote
ID = PropertyTagExifUserComment
ExifUserComment
ID = PropertyTagExifDTSubsec
ExifDTSubsec
ID = PropertyTagExifDTOrigSS
ExifDTOrigSS
ID = PropertyTagExifDTDigSS
ExifDTDigSS
ID = PropertyTagExifFPXVer
ExifFPXVer
ID = PropertyTagExifColorSpace
ExifColorSpace
ID = PropertyTagExifPixXDim
ExifPixXDim
ID = PropertyTagExifPixYDim
ExifPixYDim
ID = PropertyTagExifRelatedWav
ExifRelatedWav
ID = PropertyTagExifInterop
ExifInterop
ID = PropertyTagExifFlashEnergy
ExifFlashEnergy
ID = PropertyTagExifSpatialFR
ExifSpatialFR
ID = PropertyTagExifFocalXRes
ExifFocalXRes
ID = PropertyTagExifFocalYRes
ExifFocalYRes
ID = PropertyTagExifFocalResUnit
ExifFocalResUnit
ID = PropertyTagExifSubjectLoc
ExifSubjectLoc
ID = PropertyTagExifExposureIndex
ExifExposureIndex
ID = PropertyTagExifSensingMethod
ExifSensingMethod
ID = PropertyTagExifFileSource
ExifFileSource
ID = PropertyTagExifSceneType
ExifSceneType
ID = PropertyTagExifCfaPattern
ExifCfaPattern
ID = PropertyTagGpsVer
GpsVer
ID = PropertyTagGpsLatitudeRef
GpsLatitudeRef
ID = PropertyTagGpsLatitude
GpsLatitude
ID = PropertyTagGpsLongitudeRef
GpsLongitudeRef
ID = PropertyTagGpsLongitude
GpsLongitude
ID = PropertyTagGpsAltitudeRef
GpsAltitudeRef
ID = PropertyTagGpsAltitude
GpsAltitude
ID = PropertyTagGpsGpsTime
GpsGpsTime
ID = PropertyTagGpsGpsSatellites
GpsGpsSatellites
ID = PropertyTagGpsGpsStatus
GpsGpsStatus
ID = PropertyTagGpsGpsMeasureMode
GpsGpsMeasureMode
ID = PropertyTagGpsGpsDop
GpsGpsDop
ID = PropertyTagGpsSpeedRef
GpsSpeedRef
ID = PropertyTagGpsSpeed
GpsSpeed
ID = PropertyTagGpsTrackRef
GpsTrackRef
ID = PropertyTagGpsTrack
GpsTrack
ID = PropertyTagGpsImgDirRef
GpsImgDirRef
ID = PropertyTagGpsImgDir
GpsImgDir
ID = PropertyTagGpsMapDatum
GpsMapDatum
ID = PropertyTagGpsDestLatRef
GpsDestLatRef
ID = PropertyTagGpsDestLat
GpsDestLat
ID = PropertyTagGpsDestLongRef
GpsDestLongRef
ID = PropertyTagGpsDestLong
GpsDestLong
ID = PropertyTagGpsDestBearRef
GpsDestBearRef
ID = PropertyTagGpsDestBear
GpsDestBear
ID = PropertyTagGpsDestDistRef
GpsDestDistRef
ID = PropertyTagGpsDestDist
GpsDestDist
strType = "%ls"
strType = "<Unknown>"
<Unknown>
bstrResult = "%ls"
GetUniqueTemporaryFilename
GetUniqueTemporaryFilename
Parameters->(&bstrFilename = 0x%lx)
GetTempPath failed [returning 0x%lx]
Overflowed Path [returning E_UNEXPECTED]
GetTempFileName failed [returning 0x%lx]
bstrFilename = "%ls"
GetBestSupportedFormat
GetBestSupportedFormat
Parameters->(pWiaItem = 0x%lx, FormatType = "%ls", guidFormat = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
pWiaItem is NULL [returning E_POINTER]
CComQIPtr failed for IID_IWiaDataTransfer [returning E_FAIL]
idtEnumWIA_FORMAT_INFO failed [returning 0x%lx]
CLSIDFromString failed [returning ox%lx]
GetProperty failed for Preferred Format [guidFormat = GUID_NULL]
Calling Next
Next Succeeded
We have a file media type
We found the requested type
We have a default
Failed to find and formats [returning E_FAIL]
DoTransfer
DoTransfer
Parameters->(pWiaItem = 0x%lx, hwndParent = 0x%lx, FormatType = "%ls", bCancelError = %d, ppResult = 0x%lx)
pWiaItem or ppResult is NULL [returning E_POINTER]
GetUniqueTemporaryFilename failed [returning 0x%lx]
GetBestSupportedFormat failed [returning 0x%lx]
CoCreateInstance failed [returning 0x%lx]
Hiding Progress
TransferItemFile failed [returning 0x%lx]
User Cancelled
Generating User Cancelled Error [returning WIA_ERROR_USER_CANCELLED]
CreateTemporaryImageFile failed [returning 0x%lx]
CreateTemporaryImageFile
CreateTemporaryImageFile
Parameters->(bstrFilename = "%ls", guidFormat = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, ppResult = 0x%lx)
InitTemp failed [returning 0x%lx]
*ppResult = 0x%lx
CreateStreamFromBuffer
CreateStreamFromBuffer
Parameters->(pBuffer = 0x%lx, ulByteCount = %ld, ppResult = 0x%lx)
pBuffer or ppResult is NULL [returning E_POINTER]
GlobalAlloc failed [returning 0x%lx]
GlobalLock failed [returning 0x%lx]
CreateStreamOnHGlobal failed [returning 0x%lx]
CreateStreamFromFile
CreateStreamFromFile
Parameters->(bstrFilename = "%ls", ppResult = 0x%lx)
ppResult is NULL [returning E_POINTER]
CreateFile failed [returning 0x%lx]
GetFileSize failed [returning 0x%lx]
ReadFile failed [returning 0x%lx]
WiaReportError
WiaReportError
Parameters->(clsid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, hr = 0x%lx)
hr = WIA_ERROR_DEVICE_LOCKED
hr = WIA_ERROR_EXCEPTION_IN_DRIVER
hr = WIA_ERROR_GENERAL_ERROR
hr = WIA_ERROR_INCORRECT_HARDWARE_SETTING
hr = WIA_ERROR_INVALID_DRIVER_RESPONSE
hr = WIA_ERROR_PAPER_JAM
hr = WIA_ERROR_PAPER_EMPTY
hr = WIA_ERROR_PAPER_PROBLEM
hr = WIA_ERROR_OFFLINE
hr = WIA_ERROR_BUSY
hr = WIA_ERROR_WARMING_UP
hr = WIA_ERROR_USER_INTERVENTION
hr = WIA_ERROR_ITEM_DELETED
hr = WIA_S_NO_DEVICE_AVAILABLE
hr = WIA_ERROR_DEVICE_COMMUNICATION
hr = WIA_ERROR_INVALID_COMMAND
hr = WIA_ERROR_USER_CANCELLED
hr = WIA_ERROR_INVALID_GUID_FMT
hr = WIA_ERROR_ID_NOT_FOUND
hr = WIA_ERROR_INVALID_PROPERTY_INDEX_TYPE
hr = WIA_ERROR_INVALID_DEVICEINFO_INDEX_TYPE
hr = WIA_ERROR_NAME_NOT_FOUND
hr = WIA_ERROR_INDEX_OUT_OF_RANGE
hr = WIA_ERROR_NO_DEFAULT
hr = WIA_ERROR_NO_VALUES
hr = WIA_ERROR_NO_RANGE
hr = WIA_ERROR_NOT_IMAGE
hr = WIA_ERROR_NO_IMAGE_LOADED
hr = WIA_ERROR_CANNOT_CONVERT
hr = WIA_ERROR_INVALID_MARGINS
hr = WIA_ERROR_EVENT_REGISTERED
hr = WIA_ERROR_EVENT_AMBIGUITY
hr = WIA_ERROR_INVALID_FILE_PARAMETER
hr = WIA_ERROR_NO_FILTERS_TO_APPLY  
hr = WIA_ERROR_CONVERT_MUST_BE_LAST
hr = WIA_ERROR_INVALID_PROPERTY_TYPE
hr = WIA_ERROR_INVALID_BITS
hr = WIA_ERROR_INVALID_VECTOR_TYPE
hr = WIA_ERROR_VECTOR_EMPTY
hr = WIA_ERROR_INVALID_ATTRIBUTE
hr = WIA_ERROR_CANNOT_REMOVE_ALL_FRAMES
hr = WIA_ERROR_CANNOT_ADD_ITEM
hr = WIA_ERROR_NO_DEVICE_SPECIFIED
hr = WIA_ERROR_INVALID_FILTERINFO_INDEX_TYPE
hr = WIA_ERROR_PIXEL_DEPTH_MUST_BE_ONE
hr = WIA_ERROR_ID_OUT_OF_RANGE
MyISupportErrorInfoImpl::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_ImageFile>::ReportError
Parameters->(hr = 0x%lx)
MyISupportErrorInfoImpl::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_ImageFile>::InterfaceSupportsErrorInfo
Parameters->(riid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
riid matches *piid [returning S_OK]
riid doesn't match *piid [returning S_FALSE]
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Rational>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Rational>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Vector>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Vector>::InterfaceSupportsErrorInfo
Local\SM0:%lu:%lu:%hs
$\*SfI
CImageFile::CImageFile
CImageFile::CImageFile
CImageFile::InitTemp
CImageFile::InitTemp
Parameters->(bstrFilename = "%ls", guidFormat = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
CreateStreamFromFile failed (0x%lx) [returning S_OK]
FromStream failed [returning S_OK]
GetLastStatus failed (0x%lx) [returning S_OK]
Not multi-page, checking if animated
It's animated
Not animated
m_lFrameCount = %ld
GetRawFormat failed [m_guidImageFormat = GUID_NULL]
m_guidImageFormat = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
CImageFile::FinalRelease
CImageFile::FinalRelease
Removing Temporary File
CImageFile::get_FormatID
CImageFile::get_FormatID
Parameters->(pbstrResult = 0x%lx)
pbstrResult is NULL [returning E_POINTER]
*pbstrResult = NULL
*pbstrResult = "%ls"
CImageFile::get_FileExtension
CImageFile::get_FileExtension
m_guidWIAFormat is GUID_NULL [returning WIA_ERROR_NOT_IMAGE]
CImageFile::get_FileData
CImageFile::get_FileData
Parameters->(ppResult = 0x%lx)
*ppResult = Nothing
m_bstrFilename is NULL [returning WIA_ERROR_NO_IMAGE_LOADED]
CImageFile::get_ARGBData
CImageFile::get_ARGBData
m_guidImageFormat is GUID_NULL [returning WIA_ERROR_NOT_IMAGE]
CreateStreamFromFile failed [returning 0x%lx]
FromStream failed [returning E_FAIL]
GetLastStatus failed [returning 0x%lx]
This is a multi-frame image
SelectActiveFrame failed [returning 0x%lx]
Height or Width is 0 [returning E_FAIL]
LockBits failed [returning 0x%lx]
UnlockBits failed [returning 0x%lx]
CImageFile::get_Height
CImageFile::get_Height
Parameters->(plResult = 0x%lx)
plResult is NULL [returning E_POINTER]
*plResult = %ld
CImageFile::get_Width
CImageFile::get_Width
CImageFile::get_HorizontalResolution
CImageFile::get_HorizontalResolution
Parameters->(plfResult = 0x%lx)
plfResult is NULL [returning E_POINTER]
*plfResult = %lf
CImageFile::get_VericalResolution
CImageFile::get_VerticalResolution
CImageFile::get_PixelDepth
CImageFile::get_PixelDepth
CImageFile::get_IsIndexedPixelFormat
CImageFile::get_IsIndexedPixelFormat
Parameters->(pboolResult = 0x%lx)
pboolResult is NULL [returning E_POINTER]
*pboolResult = %d
CImageFile::get_IsAlphaPixelFormat
CImageFile::get_IsAlphaPixelFormat
CImageFile::get_IsExtendedPixelFormat
CImageFile::get_IsExtendedPixelFormat
CImageFile::get_IsAnimated
CImageFile::get_IsAnimated
*pboolResult = VARIANT_FALSE
*pboolResult = VARIANT_TRUE
CImageFile::get_FrameCount
CImageFile::get_FrameCount
*plResult  = %ld
CImageFile::get_ActiveFrame
CImageFile::get_ActiveFrame
CImageFile::put_ActiveFrame
CImageFile::put_ActiveFrame
Parameters->(Index = %ld)
Index is out of range (Index = %ld, m_lFrameCount = %ld) [returning WIA_ERROR_INDEX_OUT_OF_RANGE]
m_lActiveFrame  = %ld
CImageFile::get_Properties
CImageFile::get_Properties
*ppResult = NULL
nTotalSize = %u, nProperties = %u
nProperties is non-zero
pBuffer allocated
Initializing Exif Properties collection
GetAllPropertyItems failed
CImageFile::LoadFile
CImageFile::LoadFile
Parameters->(Filename = "%ls")
CImageFile::SaveFile
CImageFile::SaveFile
CopyFile failed [returning 0x%lx]
CImageFile::get_FileName
CImageFile::get_FileName
CImageFile::get_ImageFormat
CImageFile::get_ImageFormat
pguidResult is NULL [returning E_POINTER]
*pguidResult =  {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Properties>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Properties>::InterfaceSupportsErrorInfo
CFilterInfos::CFilterInfos
CFilterInfos::CFilterInfos
CImageProcess::CImageProcess
CImageProcess::CImageProcess
CImageProcess::get_FilterInfos
CImageProcess::get_FilterInfos
CImageProcess::get_Filters
CImageProcess::get_Filters
CImageProcess::Apply
CImageProcess::Apply
Parameters->(Source = 0x%lx, ppResult = 0x%lx)
Filters collection not initialized [returning WIA_ERROR_NO_FILTERS_TO_APPLY]
ApplyFilters failed [returning 0x%lx]
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Filters>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Filters>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_FilterInfos>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_FilterInfos>::InterfaceSupportsErrorInfo
CRational::CRational
CRational::CRational
CRational::Init
CRational::Init
Parameters->(Numerator = %ld, Denominator = %ld)
Denominator is 0 (returning E_INVALIDARG
CRational::get_Value
CRational::get_Value
pResult is NULL [returning E_POINTER]
CRational::get_Numerator
CRational::get_Numerator
m_lNumerator = %ld
CRational::put_Numerator
CRational::put_Numerator
Parameters->(Value = %ld)
CRational::get_Denominator
CRational::get_Denominator
m_lDenominator = %ld
CRational::put_Denominator
CRational::put_Denominator
Value is 0 [returning E_INVALIDARG]
CVector::CVector
CVector::CVector
CVector::FinalRelease
CVector::FinalRelease
CVector::Init
CVector::Init
Parameters->(vt = %u, bUserInit = %d)
vt = %u
type = BYTE
Growing Array(%d)
type = SHORT
type = LONG
type = FLOAT
type = DOUBLE
type = LONGLONG
type = CComBSTRArray
Growing Array(256)
type = CComVariantArray
Growing Array(64)
Failed to allocate m_pArray [returning E_OUTOFMEMORY]
Parameters->(vt = %u, pSrcArray = 0x%lx, ulCurrent = %lu)
pSrcArray = NULL [returning S_OK]
m_vtItemType is unhandled type [returning E_FAIL]
m_vtItemType is not VT_UI1 [returning E_FAIL]
Append returned -1 [returning E_FAIL]
Appended 0x%x
m_vtItemType is not VT_I2 and m_vtItemType is not VT_BOOL [returning E_FAIL]
Appended %d
CVector::AppendLong
CVector::AppendLong
Parameters->(lValue = %ld)
m_vtItemType is not VT_I4 and m_vtItemType is not VT_ERROR [returning E_FAIL]
Appended %ld
m_vtItemType is not VT_R4 [returning E_FAIL]
Appended %f
CVector::AppendDouble
CVector::AppendDouble
Parameters->(dValue = %lf)
m_vtItemType is not VT_R8 and m_vtItemType is not VT_DATE [returning E_FAIL]
Appended %lf
m_vtItemType is not VT_CY [returning E_FAIL]
Appended %I64d
CVector::AppendString
CVector::AppendString
Parameters->(bstrValue = "%ls")
m_vtItemType is not VT_BSTR and m_vtItemType is not VT_CLSID [returning E_FAIL]
Appended "%ls"
CVector::AppendRational
CVector::AppendRational
m_vtItemType is not VT_I8 [returning E_FAIL]
Appended %ld/%ld
CVector::AppendVariant
CVector::AppendVariant
m_vtItemType is not VT_VARIANT [returning E_FAIL]
Appended Variant
CVector::AppendBytes
CVector::AppendBytes
Parameters->(pValues = 0x%lx, lCount = %ld)
GetBuffer failed [returning E_FAIL]
CVector::AppendShorts
CVector::AppendShorts
CVector::AppendLongs
CVector::AppendLongs
CVector::AppendFloats
CVector::AppendFloats
CVector::AppendDoubles
CVector::AppendDoubles
CVector::AppendLongLongs
CVector::AppendLongLongs
CVector::Next
CVector::Next
Parameters->(cElements = %lu, pVar = 0x%lX, pcElementsFetched = 0x%lx)
pVar is NULL [returning E_POINTER]
*pcElementsFetched = 0
m_pArray is NULL [returning S_FALSE]
m_vtItemType = %u
vttype = VT_UI1
pVar[%lu] = m_pArray[%lu] = 0x%x
vttype = VT_I2
pVar[%lu] = m_pArray[%lu] = %d
vttype = VT_BOOL
vttype = VT_I4
pVar[%lu] = m_pArray[%lu] = %ld
vttype = VT_ERROR
vttype = VT_R4
pVar[%lu] = m_pArray[%lu] = %f
vttype = VT_R8
pVar[%lu] = m_pArray[%lu] = %lf
vttype = VT_DATE
vttype = VT_CY
pVar[%lu] = m_pArray[%lu] = %I64d
vttype = VT_BSTR or VT_CLSID
pVar[%lu] = m_pArray[%lu] = "%ls"
vttype = VT_I8
pVar[%lu] = m_pArray[%lu] = %ld/%ld
vttype = VT_VARIANT
pVar[%lu] = m_pArray[%lu]
Copied %lu elements
*pcElementsFetched = %lu
m_ulCurrent = %lu (was = %lu)
Ran out of elements [returning S_FALSE]
CVector::Skip
CVector::Skip
Parameters->(cElements = %lu)
m_ulCurrent(%lu) >= Size(%lu) [returning S_FALSE]
m_ulCurrent = %lu
type = CCOmVariantArray
CVector::Reset
CVector::Reset
CVector::Clone
CVector::Clone
CVector::get_Item
CVector::get_Item
Parameters->(Index = %ld, pvResult = 0x%lx)
pvResult is NULL [returning E_POINTER]
*pvResult = Nothing
Vector is empty [returning WIA_ERROR_VECTOR_EMPTY]
Index is out of range (Index = %ld, Size = %ld) [returning WIA_ERROR_INDEX_OUT_OF_RANGE]
pvResult = m_pArray[%lu] = 0x%x
pvResult = m_pArray[%lu] = %d
pvResult = m_pArray[%lu] = %ld
pvResult = m_pArray[%lu] = %f
pvResult = m_pArray[%lu] = %lf
pvResult = m_pArray[%lu] = %I64d
pvResult = m_pArray[%lu] = "%ls"
pvResult = m_pArray[%lu] = %ld/%ld
pvResult = m_pArray[%lu]
CVector::put_Item
CVector::put_Item
Parameters->(Index = %ld, pvValue = 0x%lx)
pvValue is NULL [returning E_POINTER]
Failed to ChangeType from %u to VT_UI1 [returning 0x%lx]
m_pArray[%lu] = 0x%x
Failed to ChangeType from %u to VT_I2 [returning 0x%lx]
m_pArray[%lu] = %d
Failed to ChangeType from %u to VT_BOOL [returning 0x%lx]
Failed to ChangeType from %u to VT_I4 [returning 0x%lx]
m_pArray[%lu] = %ld
Failed to ChangeType from %u to VT_ERROR [returning 0x%lx]
Failed to ChangeType from %u to VT_R4 [returning 0x%lx]
m_pArray[%lu] = %f
Failed to ChangeType from %u to VT_R8 [returning 0x%lx]
m_pArray[%lu] = %lf
Failed to ChangeType from %u to VT_DATE [returning 0x%lx]
Failed to ChangeType from %u to VT_CY [returning 0x%lx]
m_pArray[%lu] = %I64d
vttype = VT_BSTR
Failed to ChangeType from %u to VT_BSTR [returning 0x%lx]
m_pArray[%lu] = "%ls"
vttype = VT_CLSID
CLSIDFromString failed (Value = "%ls") [returning WIA_ERROR_INVALID_GUID_FMT]
Value is not a Dispatch object [returning E_INVALIDARG]
vValue is ByReference
vValue is not ByReference
Dispatch is not a Rational object [returning E_INVALIDARG]
m_pArray[%lu] = %ld/%ld
m_pArray[%lu] = Variant
CVector::putref_Item
CVector::putref_Item
CVector::get_Count
CVector::get_Count
*plResult = 0
m_pArray == NULL [returning S_OK]
CVector::get_Picture
CVector::get_Picture
Parameters->(Width = %ld, Height = %ld, pvResult = 0x%lx)
Attempting to load ImageFile on Byte Vector
Array failed [returning E_FAIL]
CreateStreamFromBuffer failed [returning 0x%lx]
*pvResult = 0x%lx
OleCreatePictureIndirect failed [attempt to create from RGB data]
GetHBITMAP failed [attempt to create from RGB data]
GetLastStatus failed [attempt to create from RGB data]
FromStream failed [attempt to create from RGB data]
Attempting to load RGB data on Byte Vector
Width (4 byte aligned) x Height != Count [returning E_INVALIDARG]
GetDC failed [returning 0x%lx]
CreateDIBSection failed [returning 0x%lx]
OleCreatePictureIndirect failed [returning 0x%lx]
Attempting to load ARGB data on Long Vector
Vector is wrong size [returning WIA_ERROR_INVALID_BITS]
GetHBITMAP failed [returning 0x%lx]
CVector::get_ImageFile
CVector::get_ImageFile
Parameters->(Width = %ld, Height = %ld, ppvResult = 0x%lx)
WriteFile failed [returning 0x%lx]
Attempting to load RGB Data on Byte Vector
FromBITMAPINFO failed [returning E_FAIL]
CreateImageFileFromBitmap failed [returning 0x%lx]
Attempting to load ARGB Data on Long Vector
CVector::get_BinaryData
CVector::get_BinaryData
Parameters->(pvResult = 0x%lx)
Vector type invalid [returning WIA_ERROR_INVALID_VECTOR_TYPE]
SafeArrayCreateVector failed [returning 0x%lx]
SafeArrayAccessData failed [returning 0x%lx]
SafeArrayDestroy failed [hr2 = 0x%lx]
SafeArrayUnaccessData failed [hr2 = 0x%lx]
CVector::put_BinaryData
CVector::put_BinaryData
Parameters->(pvValue = 0x%lx)
m_pArray is not initialized
pvValue is not a correct array type [returning E_INVALIDARG]
SafeArray is NULL [returning E_INVALIDARG]
SafeArray is not a vector [returning E_INVALIDARG]
SafeArrayGetLBound failed [returning 0x%lx]
SafeArrayGetUBound failed [returning 0x%lx]
SafeArray is not a positive size? [returning E_INVALIDARG]
CVector::get_String
CVector::get_String
Parameters->(Unicode = %d, pbstrResult = 0x%lx)
pBuffer is ANSI
pBuffer is Unicode
CVector::get_Date
CVector::get_Date
Parameters->(pdResult = 0x%lx)
pdResult is NULL [returning E_POINTER]
*pbstrResult = 0
SystemTimeToVariantTime failed [returning E_FAIL]
CVector::put_Date
CVector::put_Date
Parameters->(Value = %lf)
m_pArray is still not initialized
GrowTo failed [returning E_OUTOFMEMORY]
CVector::get__NewEnum
CVector::get__NewEnum
CVector::Add
CVector::Add
Parameters->(Value = 0x%lx, Index = %ld)
Value is NULL [returning E_POINTER]
vValue.vt is a Dispatch object
It's a Rational object
Init(VT_I8, TRUE) failed [returning 0x%lx]
Inserting
Insert returned -1 [returning E_FAIL]
Inserted 0x%x at %ld
Appending
Inserted %d at %ld
Inserted %ld at %ld
Inserted %f at %ld
Inserted %lf at %ld
Inserted %I64d at %ld
Inserted "%ls" at %ld
Dispatch not a Rational object [returning E_INVALIDARG]
Inserted %ld/%ld at %ld
Inserted Variant at %ld
Appeneded Variant
CVector::Remove
CVector::Remove
Removed 0x%x
Removed %d
Removed %ld
Removed %f
Removed %lf
Removed %I64d
Removed "%ls"
Removed %ld/%ld
Removed Variant
CVector::Clear
CVector::Clear
Vector never Initialized
Unhandled type m_vtItemType = %u
CVector::SetFromString
CVector::SetFromString
Parameters->(Value = "%ls", Resizable = %d, Unicode = %d)
Vector Empty and Resizable = False [returning E_INVALIDARG]
lCount = %ld
Generate Unicode String
Resizing (lCount = %ld)
Generate ANSI String
CVector::GetLongs
CVector::GetLongs
Parameters->(plValues = 0x%lx, lCount = %ld)
m_vtItemType is not VT_I4 [returning E_FAIL]
lCount is too large [returning E_INVALIDARG]
CVector::CreateImageFileFromBitmap
CVector::CreateImageFileFromBitmap
Parameters->(pBmp = 0x%lx, ppResult = 0x%lx)
pBmp or ppResult is NULL [returning E_POINTER]
GetClsidOfEncoder failed [returning 0x%lx]
Save failed [returning 0x%lx]
CVector::CleanupArray
CVector::CleanupArray
Parameters->(bInitialized = %d)
deleteing pArray
CProperty::Init
CProperty::Init
Parameters->(pWiaPropertyStorage = 0x%lx, pPropName = "%ls", PropID = %lu)
CProperty::InitExif
CProperty::InitExif
Parameters->(pProperties = 0x%lx, pProp = 0x%lx)
CProperty::InitFilter
CProperty::InitFilter
Parameters->(pFilter = 0x%lx, pPropName = "%ls", lPropPosition = 0x%lx)
CProperty::get_Value
CProperty::get_Value
Get Filter Value
get_PropertyValue failed [returning 0x%lx]
Get Exif Value
VariantFromExifTag failed [returning 0x%lx]
Get WIA Property Value
ReadMultiple failed [returning 0x%lx]
ReadMultiple failed [returning E_FAIL]
Detach failed [returning 0x%lx]
CProperty::put_Value
CProperty::put_Value
Put Filter Value
Value is Read Only [returning E_ACCESSDENIED]
put_PropertyValue failed [returning 0x%lx]
Put Exif Value
Put Item Value
GetPropertyAttributes failed [returning 0x%lx]
PropVariantFromVariant failed [returning 0x%lx]
WriteMultiple failed [returning 0x%lx]
CProperty::putref_Value
CProperty::get_Name
CProperty::get_Name
Get Filter Property Name
Get Exif Tag Name
Get WIA Property Name
CProperty::get_PropertyID
CProperty::get_PropertyID
Get Filter Tag ID
Get Exif Tag ID
Get WIA Property ID
CProperty::get_Type
CProperty::get_Type
Get Filter Property Type
Get Exif Tag Type
Get WIA Property Type
CProperty::get_IsReadOnly
CProperty::get_IsReadOnly
Exif Properties are ReadOnly
Get Filter SubType
Property is ReadOnly [GetPropertyAttributes returned E_ACCESSDENIED]
Property is Writeable
CProperty::get_IsVector
CProperty::get_IsVector
Get Filter Propterty Type
Type is Vector
m_pProp->type = %u
Handle PropertyTagTypeByte and PropertyTagTypeUndefined
There is more than one
Handle PropertyTagTypeASCII
Handle PropertyTagTypeShort
Handle PropertyTagTypeLong and PropertyTagTypeSLONG
Handle PropertyTagTypeRational and PropertyTagTypeSRational
CProperty::get_SubType
CProperty::get_SubType
Parameters->(pResult = 0x%lx)
*pResult = UnspecifiedSubType
Exif Properties don't have a SubType
GetPropertySubTypeInfo failed [returning 0x%lx]
Range Subtype
Flag Subtype
List Subtype
*pResult = %d
CProperty::get_SubTypeDefault
CProperty::get_SubTypeDefault
vResult = Nothing
pvAttributes is wrong type [returning WIA_ERROR_INVALID_ATTRIBUTE]
Range is Unsigned Long
Range is Long
Flag is Unsigned Long
Flag is Long
List is Byte
List is Unsigned Short
List is Short
List is Unsigned Long
List is Long
List is Float
List is Double
List is String
ReadOnly Properties don't have SubTypes [returning WIA_ERROR_NO_DEFAULT]
CProperty::get_SubTypeValues
CProperty::get_SubTypeValues
Processing flag %d of 32
Flag is in mask
Processing element %d of %d
Subtype doesn't have values [returning WIA_ERROR_NO_VALUES]
CProperty::get_SubTypeMin
CProperty::get_SubTypeMin
Subtype doesn't have a Min [returning WIA_ERROR_NO_RANGE]
CProperty::get_SubTypeMax
CProperty::get_SubTypeMax
Subtype doesn't have a Max [returning WIA_ERROR_NO_RANGE]
CProperty::get_SubTypeStep
CProperty::get_SubTypeStep
Subtype doesn't have a Step [returning WIA_ERROR_NO_RANGE]
Exif Properties don't have a SubType [returning WIA_ERROR_NO_DEFAULT]
CProperty::GetPropertySubTypeInfo
Get Filter Property Info
Get Item Property Info
CExifBuffer::CExifBuffer
CProperties::CExifBuffer::CExifBuffer
CExifBuffer::~CExifBuffer
CProperties::CExifBuffer::~CExifBuffer
CExifBuffer initialized with NULL
CExifBuffer::AddRef
CProperties::CExifBuffer::AddRef
m_cRef = %ld
CExifBuffer::Release
CProperties::CExifBuffer::Release
Deleting self
CProperty::CProperty
CProperty::CProperty
CProperties::CProperties
CProperties::CProperties
CProperties::FinalRelease
CProperties::FinalRelease
m_pExifBuffer is not NULL
CProperties::Init
CProperties::Init
Parameters->(pWiaPropertyStorage = 0x%lx, ulCurrent = %lu)
PropertyStorage Enum failed [returning]
Getting Next Property)
Next Successful)
Appending Property with missing name
ChangeType failed [property %lu will not be appended]
Appended "%ls" Property
Next failed [returning]
CProperties::InitExif
CProperties::InitExif
Parameters->(pExifProps = 0x%lx, nExifProps = %u)
new failed
Parameters->(pExifBuffer = 0x%lx, nExifProps = %u, ulCurrent = %lu)
CProperties::InitFilter
CProperties::InitFilter
Parameters->(&aNames, pFilter = 0x%lx, ulCurrent = %lu)
Appended %d PropertyID
CProperties::Next
CProperties::Next
Parameters->(cElements = %lu, pVar = 0x%lx, pcElementsFetched = 0x%lx)
CreateInstance failed
We are Filter properties
Initialize Property from m_aPropNames[%lu]
We are IWiaItem properties
Initialize Property from m_aPropNames[%lu] = "%ls"
We are Exif properties
QueryInterface failed for IID_IProperties
Initialize Property from m_pExifBuffer->m_pExifProps[%lu]
QueryInterface failed for IID_IProperty
Setting pVar[%lu]
VariantClear failed [hr2 = 0x%lx]
CProperties::Skip
CProperties::Skip
CProperties::Reset
CProperties::Reset
CProperties::Clone
CProperties::Clone
Initializing for Filter Properties
Initializing for IWiaItem Properties
Initializing for Exif Properties
CProperties::get_Item
CProperties::get_Item
Parameters->(Index = 0x%lx, ppResult = 0x%lx)
Index or ppResult is NULL [returning E_POINTER]
Index is a String
Assuming Index is a Stringized Property ID
nPropID = "%lu"
Comparing to m_aPropIDs[%ld] = %lu
Found it!
Didn't find it [returning WIA_ERROR_ID_NOT_FOUND]
nIndex = %ld
Assuming Index is a Property Name
Index is a reference to a string
Index is a string
Index = "%ls"
Comparing to m_aPropNames[%ld] = "%ls"
Didn't find it [returning WIA_ERROR_NAME_NOT_FOUND]
Can't convert to Long [returning WIA_ERROR_INVALID_PROPERTY_INDEX_TYPE]
Index is a number
Initializing Property with m_aPropNames[%ld] = "%ls"
QueryInterface failed for IID_IProperties [returning 0x%lx]
Initializing Property with m_pExifBuffer->m_pExifProps[%ld]
CComQIPtr failed for IID_IProperty [returning E_FAIL]
CProperties::get_Count
CProperties::get_Count
*pResult = %ld
CProperties::Exists
CProperties::Exists
Parameters->(Index = 0x%lx, pboolResult = 0x%lx)
CProperties::get__NewEnum
CProperties::get__NewEnum
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Property>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Property>::InterfaceSupportsErrorInfo
CFilterInfo::Init
CFilterInfo::Init
Parameters->(bstrName = "%ls", bstrDescription = "%ls" bstrFilterID = "%ls")
CFilterInfo::get_Name
CFilterInfo::get_Name
CFilterInfo::get_Description
CFilterInfo::get_Description
CFilterInfo::get_FilterID
CFilterInfo::get_FilterID
CFilterInfo::CFilterInfo
CFilterInfo::CFilterInfo
CFilterInfos::Init
CFilterInfos::Init
Parameters->(ulCurrent = %lu)
CFilterInfos::Next
CFilterInfos::Next
QueryInterface failed
Updating m_ulCurrent = %lu (was = %lu)
CFilterInfos::Skip
CFilterInfos::Skip
CFilterInfos::Reset
CFilterInfos::Reset
CFilterInfos::Clone
CFilterInfos::Clone
CFilterInfos::get_Item
CFilterInfos::get_Item
Parameters->(Index = %ld, ppResult = 0x%lx)
Index must be a Filter Name
Index not a String [returning WIA_ERROR_INVALID_DEVICEINFO_INDEX_TYPE]
Comparing to m_aNames[%ld] = "%ls"
*ppResult = 0x%lx)
CFilterInfos::get_Count
CFilterInfos::get_Count
CFilterInfos::get__NewEnum
CFilterInfos::get__NewEnum
MyISupportErrorInfoImpl<&struct _GUID const CLSID_FilterInfo>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_FilterInfo>::InterfaceSupportsErrorInfo
CRotateFlipFilter::CRotateFlipFilter
CRotateFlipFilter::CRotateFlipFilter
CCropFilter::CCropFilter
CCropFilter::CCropFilter
CScaleFilter::CScaleFilter
CScaleFilter::CScaleFilter
CStampFilter::CStampFilter
CStampFilter::CStampFilter
CExifFilter::CExifFilter
CExifFilter::CExifFilter
CFrameFilter::CFrameFilter
CFrameFilter::CFrameFilter
CARGBFilter::CARGBFilter
CARGBFilter::CARGBFilter
CConvertFilter::CConvertFilter
CConvertFilter::CConvertFilter
CFilters::CFilters
CFilters::CFilters
CFilters::Init
CFilters::Init
CFilters::Next
CFilters::Next
CFilters::Skip
CFilters::Skip
m_ulCurrent(%lu) >= m_Filters.Size()(%lu) [returning S_FALSE]
CFilters::Reset
CFilters::Reset
CFilters::Clone
CFilters::Clone
CFilters::get_Item
CFilters::get_Item
Index is out of range (ulIndex = %ld, m_Filters.Size() = %ld) [returning WIA_ERROR_INDEX_OUT_OF_RANGE]
CFilters::get_Count
CFilters::get_Count
CFilters::get__NewEnum
CFilters::get__NewEnum
CFilters::Add
CFilters::Add
Parameters->(FilterID = "%ls", Index = %ld)
Initializing RotateFlipFilter
CreateInstance failed for CRotateFlipFilter[returning 0x%lx]
CComQIPtr failed for pRotateFlipFilter[returning E_FAIL]
Initializing CropFilter
CreateInstance failed for CCropFilter[returning 0x%lx]
CComQIPtr failed for pCropFilter[returning E_FAIL]
Initializing ScaleFilter
CreateInstance failed for CScaleFilter[returning 0x%lx]
CComQIPtr failed for pScaleFilter[returning E_FAIL]
Initializing StampFilter
CreateInstance failed for CStampFilter[returning 0x%lx]
CComQIPtr failed for pStampFilter[returning E_FAIL]
Initializing ExifFilter
CreateInstance failed for CExifFilter[returning 0x%lx]
CComQIPtr failed for pExifFilter[returning E_FAIL]
Initializing FrameFilter
CreateInstance failed for CFrameFilter[returning 0x%lx]
CComQIPtr failed for pFrameFilter[returning E_FAIL]
Initializing ARGBFilter
CreateInstance failed for CARGBFilter[returning 0x%lx]
CComQIPtr failed for pARGBFilter[returning E_FAIL]
Initializing ConvertFilter
CreateInstance failed for CConvertFilter[returning 0x%lx]
CComQIPtr failed for pConvertFilter[returning E_FAIL]
Inserting Convert Filter [returning WIA_ERROR_CONVERT_MUST_BE_LAST]
CFilters::Remove
CFilters::Remove
CFilters::GetFilterCount
CFilters::GetFilterCount
Parameters->(plFilterCount = 0x%lx)
plFilterCount is NULL [returning E_POINTER]
Filter Process is uninitialized [returning E_FAIL]
CFilters::GetTargetFormat
CFilters::GetTargetFormat
Parameters->(pguidFormat = 0x%lx)
pguidFormat is NULL [returning E_POINTER]
CFilters::SetTargetFormat
CFilters::SetTargetFormat
Parameters->(guidFormat = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
Filter Process is not filtering [returning E_FAIL]
CFilters::GetTargetEncoder
CFilters::GetTargetEncoder
Parameters->(pclsidEncoder = 0x%lx)
pclsidEncoder is NULL [returning E_POINTER]
CFilters::SetTargetEncoder
CFilters::SetTargetEncoder
Parameters->(clsidEncoder = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x})
CFilters::AddEncoderParameter
CFilters::AddEncoderParameter
Parameters->(guidProperty = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, type = %lu, pv = 0x%lx)
pv is NULL [returning E_POINTER]
Ecoder Parameter Limit Exceeded [returning E_FAIL]
CFilters::GetFrameCount
CFilters::GetFrameCount
Parameters->(plFrameCount = 0x%lx)
plFrameCount is NULL [returning E_POINTER]
CFilters::GetFrame
CFilters::GetFrame
Parameters->(lFrameIndex = %ld, ppBmp = 0x%lx)
pBmp is NULL [returning E_POINTER]
Getting Active Frame
Getting Frame #%ld
Index is out of range (lFrameIndex = %ld, m_Bitmaps.Size() = %ld) [returning WIA_ERROR_INDEX_OUT_OF_RANGE]
Frame Already Loaded
m_FrameIndexes out of sync [returning E_FAIL]
Selecting Frame #%ld
CFilters::SetFrame
CFilters::SetFrame
Parameters->(lFrameIndex = %ld, pBmp = 0x%lx)
GetFrame failed [returning 0x%lx]
Source Height or Width is 0 [returning E_FAIL]
nItemSize = %u, nProperties = %u
pTotalBuffer allocated
GetAllPropertyItems Succeeded
Copying property %ld of %ld
Fixing ImageWidth
Fixing PixXDim
Fixing ImageHeight
Fixing PixYDim
CFilters::InsertFrame
CFilters::InsertFrame
Appending Frame
Insert Before Frame #%ld
m_lActiveFrame = %ld
CFilters::RemoveFrame
CFilters::RemoveFrame
Parameters->(lFrameIndex = %ld)
Attempting to Remove all frames [returning WIA_ERROR_CANNOT_REMOVE_ALL_FRAMES]
Deleting bitmap
Active Frame removed
CFilters::ApplyFilters
CFilters::ApplyFilters
Parameters->(pSrcImageFile = 0x%lx, ppResult = 0x%lx)
m_Filters empty [returning WIA_ERROR_NO_FILTERS_TO_APPLY]
Checking Properties for Filter (%ld of %ld)
CheckProperties failed [returning 0x%lx]
get_ImageFormat failed [returning 0x%lx]
guidTargetImageFormat is GUID_NULL [returning WIA_ERROR_NOT_IMAGE]
get_FileName failed [returning 0x%lx]
get_FrameCount failed [returning 0x%lx]
lSrcFrameCount = %ld
get_ActiveFrame failed [returning 0x%lx]
get_IsAnimated failed [returning 0x%lx]
bIsAnimated = TRUE
m_guidFrameDimension = Gdiplus::FrameDimensionTime
Process (Filter %ld of %ld)
Process failed [returning 0x%lx]
Image is not TIFF
m_Bitmaps[0] is not  NULL
m_Bitmaps.Size() = %ld
m_Bitmaps[1] is not  NULL
Saving First Frame
m_Bitmaps[0] is NULL
Add encoder flag for multi-page
AddEncoderParameter failed [returning 0x%lx]
pEncoderParams = m_EncoderParams
Saving Subsequent Frame
m_Bitmaps[%ld] is NULL [Selecting Original Frame #%ld
pNextBmp = m_Bitmaps[%ld]
Add encoder flag for last multi-page
SaveAdd failed [returning 0x%lx]
CFilterImpl::CheckProperties
CFilterImpl::ResetProperties
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::ResetProperties
CFilterImpl::get_PropertyInfo
Parameters->(Index = %ld, pvtType = 0x%lx, uplFlags = 0x%lx, &rpvAttributes = 0x%lx)
pvtType or pulFlags is NULL [returning E_POINTER]
CFilterImpl::put_Properties
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::put_PropertyValue
Parameters->(Index = %ld, &rvValue = 0x%lx)
CFilterImpl::get_Properties
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_PropertyValue
Parameters->(Index = %ld, &rvResult = 0x%lx)
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_Properties
QueryInterface failed for IID_IFilter [returning 0x%lx]
CComQIPtr failed for IID_IProperties [returning E_FAIL]
CFilterImpl::get_FilterID
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_FilterID
CFilterImpl::get_Name
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_Description
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_Name
CFilterImpl::CFilterImpl
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::CFilterImpl
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::CheckProperties
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::ResetProperties
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_PropertyInfo
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::put_PropertyValue
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_PropertyValue
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_Properties
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_FilterID
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_Description
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::get_Name
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::CFilterImpl
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::ResetProperties
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_PropertyInfo
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::put_PropertyValue
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_PropertyValue
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_Properties
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_FilterID
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_Description
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::get_Name
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::CFilterImpl
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::ResetProperties
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_PropertyValue
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_Properties
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_FilterID
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_Description
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_Name
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::CFilterImpl
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::ResetProperties
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_PropertyInfo
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::put_PropertyValue
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_PropertyValue
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_Properties
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_FilterID
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_Description
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::get_Name
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::CFilterImpl
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::ResetProperties
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_PropertyInfo
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::put_PropertyValue
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_PropertyValue
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_Properties
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_FilterID
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_Description
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::get_Name
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::CFilterImpl
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::ResetProperties
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_PropertyInfo
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::put_PropertyValue
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_PropertyValue
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_Properties
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_FilterID
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_Description
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::get_Name
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::CFilterImpl
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::ResetProperties
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::put_PropertyValue
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_PropertyValue
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_Properties
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_FilterID
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_Description
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_Name
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::CFilterImpl
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Filter>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Filter>::InterfaceSupportsErrorInfo
{FB912B7A-C57F-479C-9209-4895C1513F2D}
RotateFlip
CRotateFlipFilter::get_PropertyInfo
get_PropertyInfo failed [returning 0x%lx]
CRotateFlipFilter::get_PropertyInfo
CRotateFlipFilter::ResetProperties
CRotateFlipFilter::ResetProperties
RotationAngle
ResetProperties failed [returning 0x%lx]
FlipVertical
FlipHorizontal
CRotateFlipFilter::CheckProperties
FrameIndex
Rotation not 0, 90, 180, or 270 [returning E_INVALIDARG]
CRotateFlipFilter::CheckProperties
CRotateFlipFilter::Process
CRotateFlipFilter::Process
Rotate 90
Parameters->(pFilterProcessHook = 0x%lx)
Flip Horizontal
Flip Horizontal And Vertical
Rotate 180
Flip Vertical
GetFilterCount failed [returning 0x%lx]
Rotate 270
Call RotateFlip
GetTargetFormat failed [returning 0x%lx]
CFilterImpl::Process
RotateFlip failed [returning 0x%lx]
pFilterProcessHook is NULL [returning E_POINTER]
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::Process
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::get_PropertyInfo
CFilterImpl<class CRotateFlipFilter,&struct _GUID CLSID_RotateFlipFilter,&unsigned short const * const c_szFilterNameRotate,1001,&unsigned short const * const c_szFilterID_RotateFlipFilter>::CheckProperties
{C685961E-A385-4f41-A2E5-225A2518BA59}
CCropFilter::ResetProperties
CCropFilter::ResetProperties
Bottom
Right
CCropFilter::CheckProperties
CCropFilter::CheckProperties
CCropFilter::Process
Margin is negative [returning E_INVALIDARG]
Margins overlap [returning WIA_ERROR_INVALID_MARGINS]
CCropFilter::Process
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::Process
SetFrame failed [returning 0x%lx]
CFilterImpl<class CCropFilter,&struct _GUID CLSID_CropFilter,&unsigned short const * const c_szFilterNameCrop,1002,&unsigned short const * const c_szFilterID_CropFilter>::CheckProperties
Scale
{4EBB0166-C18B-4065-9332-109015741711}
CScaleFilter::ResetProperties
CScaleFilter::ResetProperties
MaximumHeight
MaximumWidth
CScaleFilter::CheckProperties
PreserveAspectRatio
MaximumWidth or MaximumHeight is less than 1 [returning E_INVALIDARG]
CScaleFilter::CheckProperties
CScaleFilter::Process
CScaleFilter::Process
Preserve Aspect Ratio
Target Height or Width is 0 [returning E_FAIL]
DrawImage for pSrcBmp failed [returning 0x%lx]
FromImage failed [returning E_FAIL]
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::CheckProperties
CFilterImpl<class CScaleFilter,&struct _GUID CLSID_ScaleFilter,&unsigned short const * const c_szFilterNameScale,1003,&unsigned short const * const c_szFilterID_ScaleFilter>::Process
{F73D0AA9-30B7-417c-8143-23DBD0538F97}
Stamp
CStampFilter::ResetProperties
CStampFilter::ResetProperties
CStampFilter::CheckProperties
ImageFile
Dispatch is not an ImageFile [returning E_INVALIDARG]
CStampFilter::CheckProperties
CStampFilter::Process
CStampFilter::Process
Stamp is animated
Stamp Not multi-page, checking if animated
Stamp Height or Width is 0 [returning E_FAIL]
lStampFrameCount = %ld
DrawImage for pStampBmp failed [returning 0x%lx]
DrawImage for pBmp failed [returning 0x%lx]
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::CheckProperties
CFilterImpl<class CStampFilter,&struct _GUID CLSID_StampFilter,&unsigned short const * const c_szFilterNameStamp,1004,&unsigned short const * const c_szFilterID_StampFilter>::Process
{8F75768F-7D7C-44c4-93FE-E3EF28ECD259}
CExifFilter::get_PropertyInfo
CExifFilter::get_PropertyInfo
CExifFilter::put_PropertyValue
CExifFilter::put_Properties
CExifFilter::ResetProperties
CExifFilter::ResetProperties
Remove
Value
CExifFilter::CheckProperties
CExifFilter::CheckProperties
Invalid Property Type [returning WIA_ERROR_INVALID_PROPERTY_TYPE]
Invalid Property ID [returning WIA_ERROR_ID_OUT_OF_RANGE]
CExifFilter::Process
CExifFilter::Process
RemovePropertyItem failed [returning 0x%lx]
RemovePropertyItem failed to find specified PropertyID [returning WIA_ERROR_ID_NOT_FOUND]
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::Process
ExifTagFromVariant failed [returning 0x%lx]
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::get_PropertyInfo
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::CheckProperties
CFilterImpl<class CExifFilter,&struct _GUID CLSID_ExifFilter,&unsigned short const * const c_szFilterNameExif,1006,&unsigned short const * const c_szFilterID_ExifFilter>::put_PropertyValue
CFrameFilter::ResetProperties
CFrameFilter::CheckProperties
CFrameFilter::ResetProperties
CFrameFilter::Process
CFrameFilter::CheckProperties
RemoveFrame failed [returning 0x%lx]
CFrameFilter::Process
New is animated
New Not multi-page, checking if animated
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::Process
lNewFrameCount = %ld
CFilterImpl<class CFrameFilter,&struct _GUID CLSID_FrameFilter,&unsigned short const * const c_szFilterNameFrame,1007,&unsigned short const * const c_szFilterID_FrameFilter>::CheckProperties
{2C5EB755-63A8-40cb-B10D-7CF8F3E0CE71}
Frame
CARGBFilter::ResetProperties
ARGBData
CARGBFilter::ResetProperties
CARGBFilter::Process
CARGBFilter::Process
GetLongs failed [returning 0x%lx]
Vector is wrong type [returning WIA_ERROR_INVALID_BITS]
CFilterImpl<class CARGBFilter,&struct _GUID CLSID_ARGBFilter,&unsigned short const * const c_szFilterNameArgb,1008,&unsigned short const * const c_szFilterID_ARGBFilter>::Process
{654A6A04-FB39-4d68-9B65-72E50E8323A0}
{00000000-0000-0000-0000-000000000000}
CConvertFilter::get_PropertyInfo
CConvertFilter::get_PropertyInfo
CCITT3
CCITT4
CConvertFilter::ResetProperties
Uncompressed
FormatID
CConvertFilter::ResetProperties
CConvertFilter::CheckProperties
Quality
CLSIDFromString failed [returning WIA_ERROR_INVALID_GUID_FMT]
CConvertFilter::CheckProperties
CConvertFilter::Process
Quality out of range [returning E_INVALIDARG]
guidNewFmt is GUID_NULL [returning WIA_ERROR_CANNOT_CONVERT]
CConvertFilter::Process
SetResolution failed [returning 0x%lx]
GetClsidOfEncoder failed [returning WIA_ERROR_CANNOT_CONVERT]
SetTargetEncoder failed [returning 0x%lx]
SetTargetFormat failed [returning 0x%lx]
GetEncoderParameterList failed [returning 0x%lx]
uSize = %u
Found Quality Param
Examining Param %ld of %ld
Quality = %ld%
Found Compression Param
PixelDepth is not 1 [returning WIA_ERROR_PIXEL_DEPTH_MUST_BE_ONE]
Compression is CCITT3
Compression is RLE
Compression is CCITT4
Compression is LZW
Compression is Uncompressed
m_lCompression is non zero
Compression = %ld%
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::CheckProperties
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::Process
CFilterImpl<class CConvertFilter,&struct _GUID CLSID_ConvertFilter,&unsigned short const * const c_szFilterNameConvert,1005,&unsigned short const * const c_szFilterID_ConvertFilter>::get_PropertyInfo
{42A6E907-1D2F-4b38-AC50-31ADBE2AB3C2}
Convert
CFormats::CFormats
CFormats::Init
CFormats::CFormats
Parameters->(pEnumWiaFormatInfo = 0x%lx)
CFormats::Init
Reset failed [returning]
pEnumWiaFormatInfo is NULL [returning]
Parameters->(&aFormats = 0x%lx, ulCurrent = %lu)
Appending {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}
CFormats::Next
CFormats::Next
pVar[%lu] = "%ls"
StringFromCLSID failed for IID_IProperties
CFormats::Skip
CFormats::Skip
CFormats::Reset
CFormats::Reset
CFormats::Clone
CFormats::Clone
CFormats::get_Item
CFormats::get_Item
StringFromCLSID succeeded
Parameters->(Index = %ld, pbstrResult = 0x%lx)
CFormats::get_Count
CFormats::get_Count
CFormats::get__NewEnum
CFormats::get__NewEnum
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Formats>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Formats>::ReportError
CItem::CItem
CDeviceCommands::CDeviceCommands
CItem::CItem
CItems::Init
CDeviceCommands::CDeviceCommands
CItem::Init
CItems::CItems
Parameters->(pWiaItem = 0x%lx)
CItem::Init
CItem::get_ItemID
CItem::get_ItemID
CItem::get_Properties
GetProperty failed [returning E_FAIL]
CComQIPtr failed for IID_IWiaPropertyStorage [returning E_FAIL]
CItem::get_Properties
CItem::get_Items
CItem::get_Items
CItem::get_Formats
CItem::get_Formats
CComQIPtr failed [Initializing empty collection of formats]
idtEnumWIA_FORMAT_INFO failed [Initializing empty collection of formats]
CItem::get_Commands
CItem::get_Commands
CItem::get_WiaItem
EnumDeviceCapabilities failed [Initializing empty collection of commands]
ppWiaItem is NULL [returning E_POINTER]
CItem::get_WiaItem
CItem::Transfer
CItem::Transfer
DoTransfer failed [returning 0x%lx]
Parameters->(FormatID = "%ls", pvResult = 0x%lx)
CItem::ExecuteCommand
pvResult->pdispVal = 0x%lx
Parameters->(CommandID = "%ls", ppResult = 0x%lx)
CItem::ExecuteCommand
No Item resulted from this command [returning S_OK]
DeviceCommand failed [returning 0x%lx]
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Items>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Items>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceCommands>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceCommands>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Item>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Item>::ReportError
EnumChildItems failed [Initializing empty collection of child items]
Appending (pWiaItem = 0x%lx)
CItems::Init
Parameters->(pWiaParentItem = 0x%lx)
CItems::Next
CItems::Skip
Parameters->(pWiaParentItem = 0x%lx, &apWiaItems = 0x%lx, ulCurrent = %lu)
CItems::Next
CItems::Reset
CItems::Clone
CItems::Skip
CItems::Reset
CItems::get_Item
CItems::get_Count
CItems::Clone
CItems::get_Item
CItems::get__NewEnum
CItems::Add
CItems::get_Count
CItems::get__NewEnum
Attempting to Add to a collection returned by the CommonDialog object [returning WIA_ERROR_CANNOT_ADD_ITEM]
CItems::Add
Parameters->(Name "%ls", Flags = %ld, ppResult = 0x%lx)
CItems::Remove
DeleteItem failed [returning 0x%lx]
CreateChildItem failed [returning 0x%lx]
CItems::Remove
CDeviceCommand::Init
CDeviceCommand::get_CommandID
CDeviceCommand::get_CommandID
CDeviceCommand::Init
Parameters->(guidID = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, bstrName = "%ls", bstrDescription = "%ls")
CDeviceCommand::get_Description
CDeviceCommand::get_Description
CDeviceCommand::get_Name
CDeviceCommand::get_Name
CDeviceCommand::CDeviceCommand
CDeviceCommand::CDeviceCommand
Parameters->(pEnumWiaDevCaps = 0x%lx)
pEnumWiaDevCaps is NULL [returning]
CDeviceCommands::Init
CDeviceCommands::Init
CDeviceCommands::Next
CDeviceCommands::Next
Appending guid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, Name = "%ls", Description = "%ls"
Parameters->(&aGUIDs = 0x%lx, &aNames = 0x%lx, &aDescriptions = 0x%lx, ulCurrent = %lu)
CDeviceCommands::Reset
CDeviceCommands::Reset
CDeviceCommands::Skip
CDeviceCommands::Skip
CDeviceCommands::get_Item
CDeviceCommands::get_Item
CDeviceCommands::Clone
CDeviceCommands::Clone
CDeviceCommands::get__NewEnum
CDeviceCommands::get__NewEnum
CDeviceCommands::get_Count
CDeviceCommands::get_Count
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceCommand>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceCommand>::InterfaceSupportsErrorInfo
CDeviceEvent::Init
CDeviceEvent::get_EventID
CDeviceEvent::get_EventID
CDeviceEvent::Init
Parameters->(guidID = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, bstrName = "%ls", bstrDescription = "%ls", ulFlags = %lu)
CDeviceEvent::get_Name
CDeviceEvent::get_Name
CDeviceEvent::get_Type
CDeviceEvent::get_Type
CDeviceEvent::get_Description
CDeviceEvent::get_Description
CDeviceEvents::CDeviceEvents
CDeviceEvents::CDeviceEvents
CDeviceEvents::Init
CDeviceEvents::Init
CDeviceEvent::CDeviceEvent
CDeviceEvent::CDeviceEvent
CDeviceEvents::Next
CDeviceEvents::Skip
Parameters->(&aGUIDs = 0x%lx, &aNames = 0x%lx, &aDescriptions = 0x%lx, &aFlags = 0x%lx, ulCurrent = %lu)
CDeviceEvents::Next
CDeviceEvents::Reset
CDeviceEvents::Clone
CDeviceEvents::Skip
CDeviceEvents::Reset
CDeviceEvents::get_Item
CDeviceEvents::get_Count
CDeviceEvents::Clone
CDeviceEvents::get_Item
CDeviceEvents::get__NewEnum
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceEvent>::ReportError
CDeviceEvents::get_Count
CDeviceEventsCDeviceEvents::get__NewEnum
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceEvents>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceEvent>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceEvents>::ReportError
CDevice::Init
CDevice::Init
GetProperty failed to find Device ID [returning E_FAIL]
CDevice::get_Type
CDevice::get_DeviceID
CDevice::get_DeviceID
GetProperty failed to find Device Type [returning S_OK]
CDevice::get_Properties
CDevice::get_Type
*pResult = UnspecifiedDeviceType
CDevice::get_Items
CDevice::get_Commands
CDevice::get_Properties
CDevice::get_Items
CDevice::get_Events
EnumDeviceCapabilities failed [Initializing empty collection of events]
CDevice::get_Commands
CDevice::get_Events
*ppWiaItem = 0x%lx
CDevice::GetItem
CDevice::get_WiaItem
CDevice::get_WiaItem
FindItemByName failed [returning 0x%lx]
Item not found
CDevice::GetItem
Parameters->(ItemID = "%ls", ppResult = 0x%lx)
CDevice::ExecuteCommand
GetProperty failed to find Device Type [returning E_FAIL]
pWiaItem is NULL [returning E_FAIL]
CDevice::ExecuteCommand
nType is not StiDeviceTypeStreamingVideo
CDevice::CDevice
CDeviceInfo::Init
Parameters->(pWiaPropertyStorage = 0x%lx, pWiaDevMgr = 0x%lx)
CDevice::CDevice
CDeviceInfo::Init
CDeviceInfo::get_Type
CDeviceInfo::get_Type
CDeviceInfo::get_DeviceID
CDeviceInfo::get_DeviceID
CDeviceInfo::get_Properties
CDeviceInfo::Connect
**pResult = UnspecifiedDeviceType
CDeviceInfo::get_Properties
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Device>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_Device>::InterfaceSupportsErrorInfo
CDeviceInfo::Connect
CreateDevice failed [returning 0x%lx]
UCDeviceInfos::CDeviceInfos
CDeviceInfo::CDeviceInfo
CDeviceInfos::CDeviceInfos
CDeviceInfos::Init
Parameters->(&apWiaDevInfos = 0x%lx, &aDeviceIDs = 0x%lx, pWiaDevMgr = 0x%lx, ulCurrent = %lu)
CDeviceInfo::CDeviceInfo
CDeviceInfos::Init
CDeviceInfos::Skip
CDeviceInfos::Skip
CDeviceInfos::Next
CDeviceInfos::Next
CDeviceInfos::Clone
CDeviceInfos::Clone
CDeviceInfos::Reset
CDeviceInfos::Reset
Index must be a Property Name
Comparing to m_aDeviceIDs[%ld] = "%ls"
CDeviceInfos::get_Item
CDeviceInfos::get_Item
CDeviceInfos::get__NewEnum
CDeviceInfos::get__NewEnum
CDeviceInfos::get_Count
CDeviceInfos::get_Count
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceInfos>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceInfos>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceInfo>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceInfo>::InterfaceSupportsErrorInfo
CCommonDialog::CCommonDialog
CCommonDialog::FinalConstruct
CCommonDialog::ShowAcquisitionWizard
CCommonDialog::CCommonDialog
CCommonDialog::FinalConstruct
Device or pResult is NULL [returning E_POINTER]
get_DeviceID failed [returning 0x%lx]
CCommonDialog::ShowAcquisitionWizard
Parameters->(Device = 0x%lx, pvResult = 0x%lx)
CCommonDialog::ShowAcquireImage
CCommonDialog::ShowAcquireImage
bstrDevID = "%ls"
RunWizard failed [returning 0x%lx]
Adding WIA_DEVICE_DIALOG_USE_COMMON_UI flag
SelectDeviceDlg failed [returning 0x%lx]
Parameters->(DeviceType = %d, Intent = %d, Bias = %d, FormatID = "%ls", AlwaysSelectDevice = %d, UseCommonUI = %d, CancelError = %d, ppResult = 0x%lx)
Adding WIA_SELECT_DEVICE_NODEFAULT flag
User Cancelled DeviceDlg
ppIWiaItem is NULL [returning E_FAIL]
User Cancelled SelectDeviceDlg
DeviceDlg failed [returning 0x%lx]
CCommonDialog::ShowSelectDevice
Parameters->(DeviceType = %d, AlwaysSelectDevice = %d, CancelError = %d, ppResult = 0x%lx)
nItemCount is 0 [returning E_FAIL]
CCommonDialog::ShowSelectDevice
Parameters->(Device = 0x%lx, Intent = %d, Bias = %d, SingleSelect = %d, UseCommonUI = %d, CancelError = %d, ppResult = 0x%lx)
Device or ppResult is NULL [returning E_POINTER]
CCommonDialog::ShowSelectItems
CCommonDialog::ShowSelectItems
CreateInstance Succeeded
Processing Item %d of %d
Adding WIA_DEVICE_DIALOG_SINGLE_IMAGE flag
get_WiaItem failed [returning 0x%lx]
Releasing Item %d
CCommonDialog::ShowDeviceProperties
Appending Item %d
CComQIPtr failed [deleting pItems]
Device is NULL [returning E_POINTER]
GetProperty failed to find Device Name [returning E_FAIL]
CCommonDialog::ShowDeviceProperties
Parameters->(Device = 0x%lx, CancelError = %d)
CCommonDialog::ShowItemProperties
CCommonDialog::ShowItemProperties
SystemPropertySheet failed [returning 0x%lx]
User Cancelled SystemPropertySheet
GetProperty failed to find Item Name [returning E_FAIL]
CCommonDialog::ShowTransfer
Parameters->(Item = 0x%lx, CancelError = %d)
Item is NULL [returning E_POINTER]
Item or pvResult is NULL [returning E_POINTER]
CCommonDialog::ShowPhotoPrintingWizard
CCommonDialog::ShowTransfer
Parameters->(Item = 0x%lx, FormatID = "%ls", CancelError = %d, pvResult = 0x%lx)
Files is NULL [returning E_POINTER]
Files type is VT_BSTR
CCommonDialog::ShowPhotoPrintingWizard
Parameters->(Files = 0x%lx)
SHILCreateFromPath failed [returning 0x%lx]
ILClone failed [returning E_FAIL]
Files is ByReference
Files is not ByReference
Invalid Files Item Parameter [returning WIA_ERROR_INVALID_FILE_PARAMETER]
Invalid Files Parameter [returning WIA_ERROR_INVALID_FILE_PARAMETER]
Files type is VT_DISPATCH
Zeroing PIDL %ld of %ld
Freeing pidlFull
Freeing PIDL %ld of %ld
SetFileListArray failed [returning 0x%lx]
hr = S_OK
GetClientSite Succeeded
pClientSite is not NULL
CCommonDialog::GetDialogOwner
CCommonDialog::GetDialogOwner
Active Window is not in our thread
CCommonDialog::OnDraw
CComQIPtr Succeeded
Calling GetActiveWindow
CCommonDialog::OnDraw
d7u*P
CDeviceManager::FinalConstruct
CDeviceManager::FinalConstruct
CDeviceManager::CDeviceManager
CDeviceManager::CDeviceManager
Releasing EventCallback
CDeviceManager::get_DeviceInfos
CDeviceManager::FinalRelease
CDeviceManager::FinalRelease
CDeviceManager::RegisterEvent
CDeviceManager::RegisterEvent
CDeviceManager::get_DeviceInfos
Calling EnumerateDevInfos
bstrDevID = DeviceID
RegisterEventCallbackInterface failed [returning 0x%lx]
Parameters->(EventID = "%ls", DeviceID = "%ls")
Examining Event %d of %d
EventID matches
CDeviceManager::UnregisterEvent
CDeviceManager::UnregisterEvent
CDeviceManager::RegisterPersistentEvent
CDeviceManager::RegisterPersistentEvent
DeviceID matches
Event not found [returning WIA_ERROR_ID_NOT_FOUND]
Calling RegisterEventCallbackCLSID(WIA_REGISTER_EVENT_CALLBACK)
Calling RegisterEventCallbackProgram(WIA_SET_DEFAULT_HANDLER)
Parameters->(Command = "%ls", Name = "%ls", Description = "%ls", Icon = "%ls", EventID = "%ls", DeviceID = "%ls")
Calling RegisterEventCallbackCLSID(WIA_SET_DEFAULT_HANDLER)
CDeviceManager::UnregisterPersistentEvent
CDeviceManager::UnregisterPersistentEvent
Calling RegisterEventCallbackProgram(WIA_REGISTER_EVENT_CALLBACK)
Call failed [returning 0x%lx]
CDeviceManager::OnDraw
CDeviceManager::OnDraw
RegisterEventCallbackCLSID failed [returning 0x%lx]
RegisterEventCallbackProgram failed [returning 0x%lx]
EnumDeviceInfo failed(0x%lx) [returning]
GetProperty failed to find DeviceType [returning]
CDeviceManager::EnumerateDevInfos
CDeviceManager::EnumerateDevInfos
CDeviceManager::OnEvent
CEventCallback::CEventCallback
Appending "%ls"
CDeviceManager::OnEvent
CDeviceManager::CEventCallback::QueryInterface
Parameters->(iid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x} , ppvObj = 0x%lx)
CDeviceManager::CEventCallback::CEventCallback
CEventCallback::QueryInterface
iid is IID_IWiaEventCallback
iid is not found [returning E_NOINTERFACE]
ppvObj is NULL [returning E_POINTER]
iid is IID_IUnknown
CEventCallback::Release
CDeviceManager::CEventCallback::Release
CEventCallback::AddRef
CDeviceManager::CEventCallback::AddRef
Parameters->(pEventGuid = 0x%lx, bstrEventDescription = "%ls", bstrDevID = "%ls", bstrDeviceDescription = "%ls", dwDeviceType = 0x%lx, bstrFullItemName = "%ls", pulEventType = 0x%lx, ulReserved)ppvObj = %lu)
pEventGuid or pulEventType is NULL [returning E_POINTER]
CEventCallback::ImageEventCallback
CDeviceManager::CEventCallback::ImageEventCallback
StringFromCLSID failed [bstrEventID = GUID_NULL]
bstrFullItemName is NULL[bstrItemID = ""]
m_pDeviceManager is not NULL
StringFromCLSID Succeeded
CProxy_IDeviceManagerEvents::Fire_OnEvent
CProxy_IDeviceManagerEvents<class CDeviceManager>::Fire_OnEvent
CEventCallback::Init
CDeviceManager::CEventCallback::Init
Processing connection %d of %d
Invoking OnEvent
Parameters->(EventID = "%ls", DeviceID = "%ls", ItemID = "%ls")
Failed to allocate pvars [returning E_FAIL]
VariantClear failed [returning 0x%lx]
 #7xA
zX^RegDeleteKeyW
advapi32.dll
RegDeleteKeyExW
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
AppID
CLSID
FileType
Component Categories
Hardware
Interface
TypeLib
Software
SYSTEM
SECURITY
HKEY_CLASSES_ROOT
HKEY_PERFORMANCE_DATA
HKEY_USERS
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
Module_Raw
Module
HKEY_CURRENT_CONFIG
HKEY_DYN_DATA
REGISTRY
ATL:%p
DISPLAY
DllCanUnloadNow
DllGetClassObject
DllGetClassObject
LockCount = %ld [returning S_FALSE]
DllCanUnloadNow
DllUnregisterServer
DllRegisterServer
DllRegisterServer
Parameters->(rclsid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, riid = {%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}, ppv = 0x%lx)
Contents
MyISupportErrorInfoImpl<&struct _GUID const CLSID_ImageProcess>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_ImageProcess>::ReportError
DllUnregisterServer
MyISupportErrorInfoImpl<&struct _GUID const CLSID_CommonDialog>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_CommonDialog>::ReportError
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceManager>::InterfaceSupportsErrorInfo
MyISupportErrorInfoImpl<&struct _GUID const CLSID_DeviceManager>::ReportError
APPID
>;))iPAUx
)iPAUx
s 'zH
R!e;$
s 'zH
H6g#oi
=L9o<
AtlThunk_InitData
AtlThunk_AllocateData
atlthunk.dll
AtlThunk_FreeData
AtlThunk_DataToCode
CGdiPlusHelper::Initialize
CGdiPlusHelper::Initialize
GetImageEncodersSize failed
GetImageEncodersSize succeeded, but cbCodecs was 0
LocalAlloc failed
GetImageEncoders failed
GetImageDecodersSize failed
GetImageDecodersSize succeeded, but cbCodecs was 0
GetImageDecoders failed
PropStorageHelpers::GetProperty
PropStorageHelpers::GetProperty("%s")
GetProperty: Property value type must be VT_I4 or VT_UI4 and it was 0x%08X (%d)
GetProperty: pIUnknown is NULL
GetProperty: pIUnknown->ReadMultiple failed:
GetProperty: pIUnknown->QueryInterface failed:
GetProperty: NULL pvPropValue.puuid
CSharedMemorySection::~CSharedMemorySection
CSharedMemorySection<struct HWND__ *>::CSharedMemorySection
CSharedMemorySection::CSharedMemorySection
CSharedMemorySection<struct HWND__ *>::~CSharedMemorySection
comctl32.dll
PropertySheetW
SuppressProcessOutput
D:(A;OICI;GRGW;;;SY)(A;OICI;GRGW;;;BA)(A;OICI;GRGW;;;LS)(A;OICI;GR;;;AU)
D:(A;OICI;GA;;;SY)(A;OICI;GA;;;BA)(A;OICI;GA;;;LS)(A;OICI;GA;;;AU)
D:(A;OICI;GA;;;SY)(A;OICI;GA;;;BA)(A;OICI;GRGWGXDTSDCCLC;;;LS)(A;OICI;GRGWGXDTSDCCLC;;;AU)
WIATRACE_IncrementIndentLevel
WIATRACE_OutputString
WIATRACE_Term
WIATRACE_Init
WIATRACE_GetTraceSettings
WIATRACE_SetTraceSettings
WIATRACE_GetIndentLevel
WIATRACE_DecrementIndentLevel
SYSTEM\CurrentControlSet\Control\StillImage\Trace
WiaTrace_Init_Trace
GetModuleHandleExA
\kernel32.dll
DefaultTraceLevel
DefaultTraceMask
DefaultTraceFlags
MaxFileSize
TraceFlags
HeapOptions
DefaultEnableObjectTracking
DefaultMaxTraceArraySize
EnableObjectTracking
MaxTraceArraySize
TraceLevel
TraceMask
wiatrace.dll
%systemroot%\Debug\WIA\wiatrace.log
Global\WIATRACE_MUTEX
%systemroot%\Debug\WIA
EXITING:  
ENTERING: 
 : hr = 0x%08lx, '%s'
Destroying an object without an object record, # Active Objects: '%lu'
Destroying Object: '%-20hs', Ptr: '0x%p', Destruction Time: '%lu', # Active Objects: '%lu'
Destroyed Object:  '%-20ls', Ptr: '0x%p', Destruction Time: '%lu', # Active Objects: '%lu'
Destroyed Object:  '%-20hs', Ptr: '0x%p', Destruction Time: '%lu', # Active Objects: '%lu'
Object: '%-20hs', Ptr: '0x%p', Created Time: '%lu'
Total Number of Active Objects: '%lu'
************WIA Registered Object Report************
*****Memory Leak - Not all objects were deleted*****
************End of WIA Registered Object Report************
Object: '%-20ls', Ptr: '0x%p', Created Time: '%lu'
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
TraceWarning
Function
Message
WiaScanInitiated
DeviceId
HResult
TraceError
Function
Message
TraceInfo
Function
Message
Microsoft.Windows.Scan.WiaAutomation
Microsoft.Windows.Scan.WindowsImageAcquisition
RSDSY:
wiaaut.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
ATL$__a
ATL$__z
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.rsrc$01
.rsrc$02
WIAAut.DLL
DllCanUnloadNow
DllGetClassObject
DllRegisterServer
DllUnregisterServer
__C_specific_handler
_resetstkoflw
_vsnwprintf
memcpy_s
_vsnprintf
wcscpy_s
_purecall
malloc
_vscwprintf
calloc
swprintf_s
wcsncpy_s
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
_lock
_unlock
__dllonexit
_onexit
_errno
realloc
__CxxFrameHandler3
EventUnregister
EventSetInformation
EventRegister
EventWriteTransfer
RegDeleteValueW
RegOpenKeyExW
RegSetValueExW
RegEnumKeyExW
RegCreateKeyExW
RegQueryInfoKeyW
RegCloseKey
ADVAPI32.dll
DeleteObject
CreateDIBSection
SelectClipRgn
Rectangle
GetDeviceCaps
CreateRectRgnIndirect
CreateMetaFileW
DeleteMetaFile
SetMapMode
LPtoDP
RestoreDC
SetViewportOrgEx
DeleteDC
SetWindowExtEx
SetWindowOrgEx
CreateDCW
CloseMetaFile
SaveDC
GDI32.dll
ReadFile
GetModuleFileNameA
InitOnceBeginInitialize
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
GetModuleHandleExW
GetModuleFileNameW
LeaveCriticalSection
WaitForSingleObject
CreateFileW
GetCurrentThreadId
ReleaseMutex
MultiByteToWideChar
FormatMessageW
GetLastError
OutputDebugStringW
FileTimeToSystemTime
InitOnceComplete
WaitForSingleObjectEx
GlobalAlloc
DeleteFileW
OpenSemaphoreW
GlobalFree
CloseHandle
RaiseException
HeapAlloc
GetProcAddress
GlobalLock
CreateMutexExW
GetFileSize
GetCurrentProcessId
GetProcessHeap
SystemTimeToFileTime
GetModuleHandleW
WideCharToMultiByte
GetTempFileNameW
GetTempPath2W
DebugBreak
GlobalUnlock
IsDebuggerPresent
CopyFileW
WriteFile
MulDiv
SizeofResource
InitializeCriticalSection
DisableThreadLibraryCalls
FindResourceExW
LoadResource
DeleteCriticalSection
FreeLibrary
lstrcmpiW
LoadLibraryExW
VirtualFree
GetCurrentProcess
VirtualAlloc
LoadLibraryExA
EncodePointer
DecodePointer
FlushInstructionCache
InterlockedPushEntrySList
InterlockedPopEntrySList
Sleep
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
TerminateProcess
ReleaseSRWLockExclusive
AcquireSRWLockExclusive
WakeAllConditionVariable
SleepConditionVariableSRW
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
OutputDebugStringA
KERNEL32.dll
LoadStringW
ReleaseDC
GetDesktopWindow
GetDC
LoadIconW
GetActiveWindow
DrawIcon
DestroyWindow
DefWindowProcW
GetWindowThreadProcessId
EndPaint
BeginPaint
InvalidateRect
PtInRect
GetClassInfoExW
GetClientRect
LoadCursorW
CharNextW
SetFocus
IntersectRect
IsChild
OffsetRect
IsWindow
ShowWindow
RegisterClassExW
GetWindowLongPtrW
UnionRect
CreateWindowExW
SetWindowRgn
SetWindowLongPtrW
EqualRect
SetWindowPos
GetFocus
CallWindowProcW
GetKeyState
UnregisterClassA
CharUpperA
USER32.dll
OLEAUT32.dll
StringFromCLSID
PropVariantClear
CoTaskMemAlloc
PropVariantCopy
CoCreateInstance
CoTaskMemFree
CreateStreamOnHGlobal
CLSIDFromString
ProgIDFromCLSID
OleSaveToStream
CreateOleAdviseHolder
WriteClassStm
CreateDataAdviseHolder
OleRegGetMiscStatus
OleRegEnumVerbs
OleLoadFromStream
CoTaskMemRealloc
OleRegGetUserType
ole32.dll
GdipGetImageWidth
GdipGetImageRawFormat
GdipImageGetFrameCount
GdipBitmapLockBits
GdipImageSelectActiveFrame
GdipFree
GdipGetImageVerticalResolution
GdipGetImagePixelFormat
GdipGetAllPropertyItems
GdipGetPropertySize
GdipGetImageHorizontalResolution
GdipDisposeImage
GdipAlloc
GdipCreateBitmapFromStream
GdipBitmapUnlockBits
GdipCloneImage
GdipGetImageFlags
GdipGetImageHeight
GdipSaveImageToFile
GdipCreateBitmapFromScan0
GdipCreateBitmapFromGdiDib
GdipCreateHBITMAPFromBitmap
GdipSetPropertyItem
GdipSaveAddImage
GdipImageRotateFlip
GdipCloneBitmapAreaI
GdipDeleteGraphics
GdipGetImageGraphicsContext
GdipDrawImageRectI
GdipRemovePropertyItem
GdipBitmapSetResolution
GdipGetEncoderParameterListSize
GdipGetEncoderParameterList
GdipGetImageDecoders
GdipGetImageEncodersSize
GdipGetImageDecodersSize
GdipGetImageEncoders
GdiplusShutdown
GdiplusStartup
gdiplus.dll
SHELL32.dll
_splitpath_s
RegQueryValueExW
ConvertStringSecurityDescriptorToSecurityDescriptorW
RegOpenKeyExA
RegCreateKeyExA
RegQueryValueExA
lstrlenW
LocalAlloc
LocalFree
CreateMutexW
UnmapViewOfFile
ActivateActCtx
DeactivateActCtx
CreateActCtxW
ReleaseActCtx
CreateDirectoryW
ExpandEnvironmentStringsW
RemoveDirectoryW
lstrlenA
lstrcmpA
GetModuleHandleA
GetFileInformationByHandle
GetSystemDirectoryA
GetLocalTime
FormatMessageA
InitializeCriticalSectionAndSpinCount
TranslateMessage
PeekMessageW
DispatchMessageW
MsgWaitForMultipleObjects
SetCursor
CharNextA
CoAllowSetForegroundWindow
memcmp
memcpy
memset
UnknownClassName
REGISTRY
TYPELIB
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity version="5.1.0.0" processorArchitecture="amd64" name="Microsoft.Windows.PrintScan.wiaaut" type="win32"/>
<description>WIA Automation Layer</description>
<dependency>
    <dependentAssembly>
        <assemblyIdentity
            type="win32"
            name="Microsoft.Windows.Common-Controls"
            version="6.0.0.0"
            processorArchitecture="amd64"
            language="*"
            publicKeyToken="6595b64144ccf1df"
        />
    </dependentAssembly>
</dependency>
</assembly>
wwwwwx
wwwwww
wwwwww
wws33330p
0xww33337w
wwxwxxx
wwxwwxx
wwwHKCR
WIA.CommonDialog.1 = s 'CommonDialog Class'
CLSID = s '{850D1D11-70F3-4BE5-9A11-77AA6B2BB201}'
WIA.CommonDialog = s 'CommonDialog Class'
CLSID = s '{850D1D11-70F3-4BE5-9A11-77AA6B2BB201}'
CurVer = s 'WIA.CommonDialog.1'
NoRemove CLSID
ForceRemove {850D1D11-70F3-4BE5-9A11-77AA6B2BB201} = s 'CommonDialog Class'
ProgID = s 'WIA.CommonDialog.1'
VersionIndependentProgID = s 'WIA.CommonDialog'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
ForceRemove 'Control'
ForceRemove 'Insertable'
ForceRemove 'ToolboxBitmap32' = s '%MODULE%, 102'
'MiscStatus' = s '0'
    '1' = s '132497'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
'Version' = s '1.0'
WIA.DeviceManager.1 = s 'DeviceManager Class'
CLSID = s '{E1C5D730-7E97-4D8A-9E42-BBAE87C2059F}'
WIA.DeviceManager = s 'DeviceManager Class'
CLSID = s '{E1C5D730-7E97-4D8A-9E42-BBAE87C2059F}'
CurVer = s 'WIA.DeviceManager.1'
NoRemove CLSID
ForceRemove {E1C5D730-7E97-4D8A-9E42-BBAE87C2059F} = s 'DeviceManager Class'
ProgID = s 'WIA.DeviceManager.1'
VersionIndependentProgID = s 'WIA.DeviceManager'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
ForceRemove 'Control'
ForceRemove 'Insertable'
ForceRemove 'ToolboxBitmap32' = s '%MODULE%, 103'
'MiscStatus' = s '0'
    '1' = s '132497'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
'Version' = s '1.0'
WIA.ImageFile.1 = s 'ImageFile Class'
CLSID = s '{A2E6DDA0-06EF-4df3-B7BD-5AA224BB06E8}'
WIA.ImageFile = s 'ImageFile Class'
CLSID = s '{A2E6DDA0-06EF-4df3-B7BD-5AA224BB06E8}'
CurVer = s 'WIA.ImageFile.1'
NoRemove CLSID
ForceRemove {A2E6DDA0-06EF-4df3-B7BD-5AA224BB06E8} = s 'ImageFile Class'
ProgID = s 'WIA.ImageFile.1'
VersionIndependentProgID = s 'WIA.ImageFile'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
WIA.ImageProcess.1 = s 'ImageProcess Class'
CLSID = s '{BD0D38E4-74C8-4904-9B5A-269F8E9994E9}'
WIA.ImageProcess = s 'ImageProcess Class'
CLSID = s '{BD0D38E4-74C8-4904-9B5A-269F8E9994E9}'
CurVer = s 'WIA.ImageProcess.1'
NoRemove CLSID
ForceRemove {BD0D38E4-74C8-4904-9B5A-269F8E9994E9} = s 'ImageProcess Class'
ProgID = s 'WIA.ImageProcess.1'
VersionIndependentProgID = s 'WIA.ImageProcess'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
WIA.Vector.1 = s 'Vector Class'
CLSID = s '{4DD1D1C3-B36A-4eb4-AAEF-815891A58A30}'
WIA.Vector = s 'Vector Class'
CLSID = s '{4DD1D1C3-B36A-4eb4-AAEF-815891A58A30}'
CurVer = s 'WIA.Vector.1'
NoRemove CLSID
ForceRemove {4DD1D1C3-B36A-4eb4-AAEF-815891A58A30} = s 'Vector Class'
ProgID = s 'WIA.Vector.1'
VersionIndependentProgID = s 'WIA.Vector'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
WIA.Rational.1 = s 'Rational Class'
CLSID = s '{0C5672F9-3EDC-4b24-95B5-A6C54C0B79AD}'
WIA.Rational = s 'Rational Class'
CLSID = s '{0C5672F9-3EDC-4b24-95B5-A6C54C0B79AD}'
CurVer = s 'WIA.Rational.1'
NoRemove CLSID
ForceRemove {0C5672F9-3EDC-4b24-95B5-A6C54C0B79AD} = s 'Rational Class'
ProgID = s 'WIA.Rational.1'
VersionIndependentProgID = s 'WIA.Rational'
ForceRemove 'Programmable'
InprocServer32 = s '%MODULE%'
val ThreadingModel = s 'Apartment'
'TypeLib' = s '{94A0E92D-43C0-494E-AC29-FD45948A5221}'
83333
f`333
wwwww
z'www
wwwww
wwwww
ww~~~
xwww~~~~
wwwwxx
wwwww
wwwwwwxx
wwwwwww
wwwwwwww
wwwwwww
xwwwwwwwx
wwwwwww
wwwwwwwx
wwwwwwwwwwwx
wwwwwwwwwwwx
wwwwwwwwwwwx
wwwwwwwwwwwx
wwwwwwww
wwwwww
wwwwwwww
wwwwwwwwwwwx
wwwwwwwwwwwx
wwwwwwwwwwwx
 #7xA
)iPAUx
s 'zH
stdole2.tlbWWW
MiscellaneousWWW
wiaIDUnknown
wiaAnyDeviceIDWWd
FormatIDd
wiaFormatBMPd
OwiaFormatPNGd
wiaFormatGIFd
wiaFormatJPEGWWWd
wiaFormatTIFFWWW
EventIDW
wiaEventDeviceConnectedW
wiaEventDeviceDisconnectedWW
wiaEventItemCreatedW
wiaEventItemDeletedW
wiaEventScanImageWWW
wiaEventScanPrintImageWW
0u.wiaEventScanFaxImage
wiaEventScanOCRImage
wiaEventScanEmailImageWW
wiaEventScanFilmImageWWW
wiaEventScanImage2WW
wiaEventScanImage3WW
wiaEventScanImage4WW,
CommandIDWWW,
wiaCommandSynchronizeWWW,
wiaCommandTakePictureWWW,
wiaCommandDeleteAllItems,
wiaCommandChangeDocument,
wiaCommandUnloadDocument
jWiaSubTypeWW
UnspecifiedSubTypeWW
08FRangeSubType
ListSubTypeW
FlagSubTypeW
hWiaDeviceTypeWWW
UnspecifiedDeviceTypeWWW
xScannerDeviceTypeWWW
CameraDeviceType
VideoDeviceTypeWX
_WiaItemFlagWX
FreeItemFlagX
0<VImageItemFlagWWWX
>FileItemFlagX
FolderItemFlagWWX
CRootItemFlagX
AnalyzeItemFlagWX
07EAudioItemFlagWWWX
#DeviceItemFlagWWX
DeletedItemFlagWX
DisconnectedItemFlagX
HPanoramaItemFlagWWWX
VPanoramaItemFlagWWWX
BurstItemFlagWWWX
01CStorageItemFlagWX
`TransferItemFlagX
GeneratedItemFlagWWWX
HasAttachmentsItemFlagWWX
0[,VideoItemFlagWWWX
01mRemovedItemFlagW
WiaPropertyTypeW
UnsupportedPropertyTypeW
fBooleanPropertyTypeW
*BytePropertyType
IntegerPropertyTypeW
sUnsignedIntegerPropertyTypeW
LongPropertyType
lUnsignedLongPropertyType
0D1ErrorCodePropertyTypeWWW
0JwLargeIntegerPropertyType
UnsignedLargeIntegerPropertyType
04NSinglePropertyTypeWW
~DoublePropertyTypeWW
CurrencyPropertyType
DatePropertyType
FileTimePropertyType
ClassIDPropertyTypeW
+StringPropertyTypeWW
0lkObjectPropertyTypeWW
HandlePropertyTypeWW
VariantPropertyTypeW
VectorOfBooleansPropertyType
VectorOfBytesPropertyTypeWWW
VectorOfIntegersPropertyType
VectorOfUnsignedIntegersPropertyType
VectorOfLongsPropertyTypeWWW
VectorOfUnsignedLongsPropertyTypeWWW
VectorOfErrorCodesPropertyTypeWW
VectorOfLargeIntegersPropertyTypeWWW
VectorOfUnsignedLargeIntegersPropertyTypeWWW
VectorOfSinglesPropertyTypeW
VectorOfDoublesPropertyTypeW
0.^VectorOfCurrenciesPropertyTypeWW
VectorOfDatesPropertyTypeWWW
cVectorOfFileTimesPropertyTypeWWW
VectorOfClassIDsPropertyType
VectorOfStringsPropertyTypeW
VectorOfVariantsPropertyType 
8T:WiaImagePropertyType 
LUndefinedImagePropertyTypeWW 
[ByteImagePropertyTypeWWW 
0}oStringImagePropertyTypeW 
UnsignedIntegerImagePropertyType 
LongImagePropertyTypeWWW 
0WxUnsignedLongImagePropertyTypeWWW 
RationalImagePropertyTypeWWW 
`UnsignedRationalImagePropertyTypeWWW 
VectorOfUndefinedImagePropertyTypeWW 
VectorOfBytesImagePropertyTypeWW 
VectorOfUnsignedIntegersImagePropertyTypeWWW 
VectorOfLongsImagePropertyTypeWW 
VectorOfUnsignedLongsImagePropertyTypeWW 
ctorOfRationalsImagePropertyTypeWW 
AVectorOfUnsignedRationalsImagePropertyTypeWW
8IIWiaEventFlag
0.nNotificationEventWWW
9ActionEventW
WiaImageIntentWW
UnspecifiedIntentWWW
ColorIntentW
GrayscaleIntentW
TextIntentWWL
8szWiaImageBiasL
MinimizeSizeL
MaximizeQualityW
GIRationalWWW
KValueWWW
DpResultW
NumeratorWWW
#AplResult
DenominatorW
Rationalx
IImageFileWW
pbstrResultWx
FileExtensionWWW
IVectorW
zItem
IndexWWW
0vCountWWW
*PictureWx
hNWidthWWWx
HeightWW
pvResult4
ImageFileWWW
0ppResult
NaBinaryDataWW
StringWW
UnicodeW
;Date
CpdResult
xA_NewEnum
rAddW
RemoveWW
ClearWWW
SetFromStringWWW
ResizableWWWx
FileDatax
ARGBDatax
HorizontalResolution
ZplfResultWWWx
VerticalResolutionWWx
PixelDepthWWx
2IsIndexedPixelFormat
pboolResultWx
fIsAlphaPixelFormatWWx
IsExtendedPixelFormatWWWx
IsAnimatedWWx
FrameCountWWx
ActiveFrameW@
IPropertiesW
8|VIPropertyWWW
PPropertyIDWW
-]IsReadOnlyWW
IsVector
^`SubTypeW
SubTypeDefaultWW
SubTypeValuesWWW
YSubTypeMinWW
XSubTypeMaxWW
SubTypeStepW@
]ExistsWW
PropertiesWWx
LoadFile
Filenamex
SaveFile
mVectorWWl
Property
IFilterInfoW
 DescriptionW
FilterID
-FilterInfoWW`
8TOIFilterInfos
FilterInfosW(
gIFilterW
;FilterWW
oIFiltersT
FiltersW
IImageProcessWWW
ApplyWWW
SourceWW
1ImageProcess
IFormats
FormatsWH
>IDeviceCommandWW
jDeviceCommandWWW
IDeviceCommandsWt
DeviceCommandsWW
86^IItemsWW<
8IItemWWW<
28ItemIDWW
(`hItemsWWW<
Commands<
WiaItemW<
Transfer<
ExecuteCommandWW
oFlagsWWWh
IDeviceEvent
DeviceEventW0
8&mIDeviceEventsWWW
DeviceEvents
oIDeviceW
DeviceID
EventsWW
GetItemW\
"IDeviceInfoW\
ConnectW
|DeviceInfoWW$
IDeviceInfos
DeviceInfosW
8QDDeviceWWP
8`7ICommonDialogWWWP
X:ShowAcquisitionWizardWWWP
N,ShowAcquireImage
!DeviceTypeWW
7IntentWW
AlwaysSelectDeviceWW
UseCommonUIW
CancelErrorWP
G#ShowSelectDeviceP
/TShowSelectItemsW
SingleSelectP
ShowDevicePropertiesP
FShowItemPropertiesWWP
ShowTransferP
ShowPhotoPrintingWizardW
wXFilesWWW
oCommonDialog
IDeviceManagerWW
RegisterEventWWW
UnregisterEventW
.RegisterPersistentEventW
]CommandW
a!Icon
UnregisterPersistentEventWWW|
_IDeviceManagerEventsWWW|
OnEventW
DeviceManagerWWW0
Microsoft Windows Image Acquisition Library v2.0WW
Miscellaneous string constants
Unknown ID.WWW
DeviceID for any Device.WWa
String versions of globally unique identifiers (GUIDs) that indicate the file format of an image.W-
FormatID for the BMP (Windows bitmap) format.W8
FormatID for the PNG (Portable Network Graphics) format.WW:
FormatID for the GIF (Graphics Interchange Format) format.@
FormatID for the JPEG (Joint Photographic Experts Group) format.WW5
FormatID for the TIFF (Tag Image File Format) format.WZ
String versions of globally unique identifiers (GUIDs) that identify DeviceManager events.y
EventID for Device Connected. This event fires when a WIA hardware device is connected to the user's computer or started.W
EventID for Device Disconnected. This event fires when a WIA hardware device is disconnected from the user's computer or stopped.WQ
EventID for Item Created. This event fires when an item is added to a WIA Device.WU
EventID for Item Deleted. This event fires when an item is deleted from a WIA Device.WW
EventID for Scan Image. This event fires when the image button on a scanner is pressed.WWW]
EventID for Scan Print Image. This event fires when the print button on a scanner is pressed.WY
EventID for Scan Fax Image. This event fires when the FAX button on a scanner is pressed.WY
EventID for Scan OCR Image. This event fires when the OCR button on a scanner is pressed.W]
EventID for Scan Email Image. This event fires when the email button on a scanner is pressed.W[
EventID for Scan Film Image. This event fires when the film button on a scanner is pressed.WWW`
EventID for Scan Image 2. This event fires when the second image button on a scanner is pressed.WW_
EventID for Scan Image 3. This event fires when the third image button on a scanner is pressed.WWW`
EventID for Scan Image 4. This event fires when the fourth image button on a scanner is pressed.WWe
String versions of globally unique identifiers (GUIDs) that identify common Device and Item commands.Wk
CommandID for Synchronize. Causes the device's driver to synchronize cached items with the hardware device.WWWD
CommandID for Take Picture. Causes a WIA device to acquire an image.WWi
CommandID for Delete All Items. Tells the device to delete all items that can be deleted from the device.W|
CommandID for Change Document. Used for document scanners. Causes the scanner to load the next page in its document handler.WW
CommandID for Unload Document. Used for document scanners. Tells the device to unload all remaining pages in its document handler.
This property has no subtype.W^
This property takes a range of values from SubTypeMin to SubTypeMax in SubTypeStep increments.?
This property takes one of a list of values from SubTypeValues.WWWu
This property takes a flag composed of bits listed in SubTypeValues. Flag values are combined using the OR operation.W
The WiaSubType enumeration specifies more detail about the property value. Use the SubType property on the Property object to obtain these values for the property.WWW
The Device type is unknown.WWW
The Device is a scanner.WW
The Device is a camera.WWW$
The Device provides streaming video.WW
The WiaDeviceType enumeration specifies the type of device attached to a user's computer. Use the Type property on the DeviceInfo object or the Device object to obtain these values from the device.W.
The item is uninitialized or has been deleted.Y
The item is an image file. Only valid for items that also have the FileItemFlag flag set.W
The item is a file.WWW
The item is a folder.W'
Identifies the root item in the device.WWW&
This item supports the Analyze method.Y
The item is an audio file. Only valid for items that also have the FileItemFlag flag set.W'
The item represents a connected device.WWW
The item is marked as deleted.*
The item represents a disconnected device.1
The item represents a horizontal panoramic image.W/
The item represents a vertical panoramic image.WWW
Images in this folder were taken in a continuous time sequence. Only valid for items that also have the FolderItemFlag flag set.WW%
The item represents a storage medium.W
The item can be transferred.WWF
This item was created, and does not correspond to an item in a device.
The item has file attachments.$
The item represents streaming video.WW*
The item has been removed from the device.
An Item's type is composed of bits from the WiaItemFlags enumeration. You can test an Item's type by using the AND operation with Item.Properties("Item Flags") and a member from the WiaItemFlags enumeration.WWW1
The value of the property is an unsupported type.W'
The value of the property is a Boolean.WWW$
The value of the property is a Byte.WW(
The value of the property is an Integer.WW@
The value of the property is returned as a non-negative Integer.WW$
The value of the property is a Long.WW=
The value of the property is returned as a non-negative Long.W0
The value of the property is returned as a Long.WWJ
The value of the property is a Large Integer returned as a truncated Long.G
The value of the property is returned as a truncated non-negative Long.WWW&
The value of the property is a Single.&
The value of the property is a Double.(
The value of the property is a Currency.WW$
The value of the property is a Date.WW0
The value of the property is returned as a Date.WW2
The value of the property is returned as a String.&
The value of the property is a String.'
The value of the property is an Object.WWW3
The value of the property is returned as a Variant.WWW'
The value of the property is a Variant.WWWI
The value of the property is a Vector object containing Boolean elements.WF
The value of the property is a Vector object containing Byte elements.I
The value of the property is a Vector object containing Integer elements.Wb
The value of the property is returned as a Vector object containing non-negative Integer elements.F
The value of the property is a Vector object containing Long elements._
The value of the property is returned as a Vector object containing non-negative Long elements.WWWR
The value of the property is returned as a Vector object containing Long elements.\
The value of the property is returned as a Vector object containing truncated Long elements.WWi
The value of the property is returned as a Vector object containing truncated non-negative Long elements.WH
The value of the property is a Vector object containing Single elements.WWH
The value of the property is a Vector object containing Double elements.WWJ
The value of the property is a Vector object containing Currency elements.F
The value of the property is a Vector object containing Date elements.R
The value of the property is returned as a Vector object containing Date elements.T
The value of the property is returned as a Vector object containing String elements.WWH
The value of the property is a Vector object containing String elements.WWI
The value of the property is a Vector object containing Variant elements.W
The WiaPropertyType enumeration specifies the type of the value of an item property. Item properties can be found in the Properties collection of a Device or Item object.@
The value of the image property is undefined returned as a Byte.WW*
The value of the image property is a Byte.,
The value of the image property is a String.WWF
The value of the image property is returned as a non-negative Integer.*
The value of the image property is a Long.C
The value of the image property is returned as a non-negative Long.WWWA
The value of the image property is returned as a Rational Object.WX
The value of the image property is returned as a Vector object containing Byte elements.WWL
The value of the image property is a Vector object containing Byte elements.WW[
The value of the image property is returned as a Vector object containing Integer elements.WWWL
The value of the image property is a Vector object containing Long elements.WWX
The value of the image property is returned as a Vector object containing Long elements.WWc
The value of the image property is returned as a Vector object containing Rational object elements.WWW
The WiaImagePropertyType enumeration specifies the type of the value of an image property. Image properties can be found in the Properties collection of an ImageFile object.Wy
Indicates that the DeviceEvent is intended to notify an application that is already running that this event has occurred.W]
Indicates that the DeviceEvent can, if necessary, launch an application if this event occurs.W
A DeviceEvent's type is composed of bits from the WiaEventFlags enumeration. You can test a DeviceEvent's type by using the AND operation with DeviceEvent.Type and a member from the WiaEventFlags enumeration.WW
No intent specified.WW"
The image is a color illustration.
The image is grayscale data.WW<
The image is a text image such as a fax or scanned document.WWb
The WiaImageIntent enumeration helps specify what type of data the image is intended to represent.R
Use a lower quality scan to minimize the size of the file that contains the image.?
Use a higher quality scan to maximize the quality of the image.WWW`
The WiaImageBias enumeration helps specify what type of data the image is intended to represent.WW&
Returns the Rational Value as a Double)
Returns/Sets the Rational Value NumeratorW+
Returns/Sets the Rational Value DenominatorWWW
The Rational object is a container for the rational values found in Exif tags. It is a supported element type of the Vector object and may be created using "WIA.Rational" in a call to CreateObject.W'
Returns the FormatID for this file typeWWW3
Returns the file extension for this image file typeWWW9
Returns/Sets the specified item in the vector by positionW+
Returns the number of members in the vectorWWW
If the Vector of Bytes contains an image file, then Width and Height are ignored. Otherwise a Vector of Bytes must be RGB data and a Vector of Longs must be ARGB data. Returns a Picture object on success. See the ImageFile method for more details.WWW
Used to get the Thumbnail property of an ImageFile which is an image file, The thumbnail property of an Item which is RGB data, or creating an ImageFile from raw ARGB data. Returns an ImageFile object on success. See the Picture method for more details.W5
Returns/Sets the Vector of Bytes as an array of bytesW%
Returns a Vector of Bytes as a StringW/
Returns/Sets the Vector of Integers from a DateWWW
If Index is not zero, Inserts a new element into the Vector collection before the specified Index. If Index is zero, Appends a new element to the Vector collection.WW;
Removes the designated element and returns it if successfulWWW
Removes all elements.W
Stores the string Value into the Vector of Bytes including the NULL terminator. Value may be truncated unless Resizable is True. The string will be stored as an ANSI string unless Unicode is True, in which case it will be stored as a Unicode string.W/
Returns the raw image file as a Vector of BytesWWW5
Returns the raw image bits as a Vector of Long valuesW)
Returns the Height of the image in pixelsW(
Returns the Width of the image in pixelsWW3
Returns the Horizontal pixels per inch of the imageWWW1
Returns the Vertical pixels per inch of the imageW>
Returns the depth of the pixels of the image in bits per pixelO
Indicates if the pixel data is an index into a palette or the actual color dataWWW4
Indicates if the pixel format has an alpha componentWW;
Indicates if the pixel format is extended (16 bits/channel)WWW'
Indicates whether the image is animatedWWW)
Returns the number of frames in the imageW+
Returns/Sets the current frame in the imageWWW
Returns/Sets the Property ValueWWW
Returns the Property NameW'
Returns the PropertyID of this PropertyWWW:
Returns either a WiaPropertyType or a WiaImagePropertyType1
Indicates whether the Property Value is read onlyW0
Indicates whether the Property Value is a vectorWW+
Returns the SubType of the Property, if anyWWWK
Returns the default Property Value if the SubType is not UnspecifiedSubTypeWWW
Returns a Vector of valid Property Values if the SubType is ListSubType or valid flag Values that can be ored together if the SubType is FlagSubTypeWWG
Returns the minimum valid Property Value if the SubType is RangeSubTypeWWWG
Returns the maximum valid Property Value if the SubType is RangeSubTypeWWWL
Returns the step increment of Property Values if the SubType is RangeSubTypeWWH
Returns the specified item in the collection either by position or name.WW/
Returns the number of members in the collectionWWWA
Indicates whether the specified Property exists in the collectionW-
A collection of all properties for this imageW2
Loads the ImageFile object with the specified File/
Save the ImageFile object to the specified FileWWW
The Vector object is a collection of values of the same type. It is used throughout the library in many different ways. The Vector object may be created using "WIA.Vector" in a call to CreateObject.
The Property object is a container for a property associated with a Device, DeviceInfo, Filter, ImageFile or Item object. See the Properties property on any of these objects for details on accessing Property objects.WW
The Properties object is a collection of all the Property objects associated with a given Device, DeviceInfo, Filter, ImageFile or Item object. See the Properties property on any of these objects for detail on accessing the Properties object.
The ImageFile object is a container for images transferred to your computer when you call Transfer or ShowTransfer. It also supports image files through LoadFile. An ImageFile object can be created using "WIA.ImageFile" in a call to CreateObject.
Returns the FilterInfo NameWWW[
Returns a technical Description of what the filter does and how to use it in a filter chainWWW$
Returns the FilterID for this filterWW
The FilterInfo object is a container that describes a Filter object without requiring a Filter to be Added to the process chain. See the FilterInfos property on the ImageProcess object for details on accessing FilterInfo objects.WG
Returns the specified item in the collection either by position or nameWWW
The FilterInfos object is a collection of all the available FilterInfo objects. See the FilterInfos property on the ImageProcess object for detail on accessing the FilterInfos object.WWW
Returns the Filter NameWWW-
Returns a Description of what the filter doesW$
Returns the FilterID for this FilterWW.
A collection of all properties for this filter
The Filter object represents a unit of modification on an ImageFile. To use a Filter, add it to the Filters collection, then set the filter's properties and finally use the Apply method of the ImageProcess object to filter an ImageFile.WWD
Returns the specified item in the collection by position or FilterIDWWO
Appends/Inserts a new Filter of the specified FilterID into a Filter collectionWWW
Removes the designated filterW
The Filters object is a collection of the Filters that will be applied to an ImageFile when you call the Apply method on the ImageProcess object.W%
A collection of all available filtersW9
A collection of the filters to be applied in this processWc
Takes the specified ImageFile and returns the new ImageFile with all the filters applied on successWWW
The ImageProcess object manages the filter chain. An ImageProcess object can be created using "WIA.ImageProcess" in a call to CreateObject.WWW8
Returns the specified item in the collection by positionWW
The Formats object is a collection of supported FormatIDs that you can use when calling Transfer on an Item object or ShowTransfer on a CommonDialog object for this Item.&
Returns the commandID for this Command
Returns the command NameWW
Returns the command DescriptionWWWw
The DeviceCommand object describes a CommandID that can be used when calling ExecuteCommand on a Device or Item object.WWW
The DeviceCommands object is a collection of all the supported DeviceCommands for an imaging device. See the Commands property of a Device or Item object for more details on determining the collection of supported device commands. 
Returns the ItemID for this ItemWW,
A collection of all properties for this itemWW-
A collection of all child items for this itemW8
A collection of all supported format types for this itemWW*
A collection of all commands for this item>
Returns the underlying IWiaItem interface for this Item object
Returns an ImageFile object, in this version, in the format specified in FormatID if supported, otherwise using the preferred format for this imaging device. Future versions may return a collection of ImageFile objects.WWW
Issues the command specified by CommandID. CommandIDs are device dependent. Valid CommandIDs for this Item are contained in the Commands collection.WW
Adds a new Item with the specified Name and Flags. The Flags value is created by using the OR operation with members of the WiaItemFlags enumeration.W
Removes the designated ItemWWW
The Item object is a container for an item on an imaging device object. See the Items property on the Device or Item object for details on accessing Item objects.
The Items object contains a collection of Item objects. See the Items property on the Device or Item object for details on accessing the Items object."
Returns the EventID for this Event
Returns the Type of this Event
Returns the event Name
Returns the event DescriptionW
The DeviceEvent object describes an EventID that can be used when calling RegisterEvent or RegisterPersistentEvent on a DeviceManager object.W
The DeviceEvents object is a collection of all the supported DeviceEvent for an imaging device. See the Events property of a Device object for more details on determining the collection of supported device events.W$
Returns the DeviceID for this DeviceWW
Returns the Type of Device6
A collection of all properties for this imaging device1
A collection of all items for this imaging deviceW4
A collection of all commands for this imaging deviceWW2
A collection of all events for this imaging device@
Returns the underlying IWiaItem interface for this Device objectWW8
Returns the Item object specified by ItemID if it existsWW
Issues the command specified by CommandID to the imaging device. CommandIDs are device dependent. Valid CommandIDs for this Device are contained in the Commands collection.WWk
A collection of all properties for this imaging device that are applicable when the device is not connectedWWWB
Establish a connection with this device and return a Device object
The DeviceInfo object is a container that describes the unchanging (static) properties of an imaging device that is currently connected to the computer.WWL
Returns the specified item in the collection either by position or Device IDWW
The DeviceInfos object is a collection of all the imaging devices currently connected to the computer. See the DeviceInfos property on the DeviceManager object for detail on accessing the DeviceInfos object.WWWG
The Device object represents an active connection to an imaging device.WWW
Launches the Windows Scanner and Camera Wizard and returns Nothing. Future versions may return a collection of ImageFile objects.W
Displays one or more dialog boxes that enable the user to acquire an image from a hardware device for image acquisition and returns an ImageFile object on success, otherwise NothingW
Displays a dialog box that enables the user to select a hardware device for image acquisition. Returns the selected Device object on success, otherwise NothingWWW
Displays a dialog box that enables the user to select an item for transfer from a hardware device for image acquisition. Returns the selection as an Items collection on success, otherwise NothingWWW;
Displays the properties dialog box for the specified DeviceWWW9
Displays the properties dialog box for the specified ItemW
Displays a progress dialog box while transferring the specified Item to the local machine. See Item.Transfer for additional information.WWq
Launches the Photo Printing Wizard with the absolute path of a specific file or Vector of absolute paths to filesW
The CommonDialog control is an invisible-at-runtime control that contains all the methods that display a User Interface. A CommonDialog control can be created using "WIA.CommonDialog" in a call to CreateObject or by dropping a CommonDialog on a form.>
A collection of all imaging devices connected to this computer
Registers the specified EventID for the specified DeviceID. If DeviceID is "*" then OnEvent will be called whenever the event specified occurs for any device. Otherwise, OnEvent will only be called if the event specified occurs on the device specified.WW
Unregisters the specified EventID for the specified DeviceID. UnregisterEvent should only be called for EventID and DeviceID for which you called RegisterEvent.WW
Registers the specified Command to launch when the specified EventID for the specified DeviceID occurs. Command can be either a ClassID or the full path name and the appropriate command-line arguments needed to invoke the application.
Unregisters the specified Command for the specified EventID for the specified DeviceID. UnregisterPersistentEvent should only be called for the Command, Name, Description, Icon, EventID and DeviceID for which you called RegisterPersistentEvent.WW2
Occurs for any event registered with RegisterEvent
The DeviceManager control is an invisible-at-runtime control that manages the imaging devices connected to the computer. A DeviceManager control can be created using "WIA.DeviceManager" in a call to CreateObject or by dropping a DeviceManager on a form.W
{00000000-0000-0000-0000-000000000000}
{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}
{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}
{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}
{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}
{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}
{A28BBADE-64B6-11D2-A231-00C04FA31809}
{143E4E83-6497-11D2-A231-00C04FA31809}
{4C8F4EF5-E14F-11D2-B326-00C04F68CE61}
{1D22A559-E14F-11D2-B326-00C04F68CE61}
{A6C5A715-8C6E-11D2-977A-0000F87A926F}
{B441F425-8C6E-11D2-977A-0000F87A926F}
{C00EB793-8C6E-11D2-977A-0000F87A926F}
{9D095B89-37D6-4877-AFED-62A297DC6DBE}
{C686DCEE-54F2-419E-9A27-2FC7F2E98F9E}
{9B2B662C-6185-438C-B68B-E39EE25E71CB}
{FC4767C1-C8B3-48A2-9CFA-2E90CB3D3590}
{154E27BE-B617-4653-ACC5-0FD7BD4C65CE}
{A65B704A-7F3C-4447-A75D-8A26DFCA1FDF}
{9B26B7B2-ACAD-11D2-A093-00C04F72DC3C}
{AF933CAC-ACAD-11D2-A093-00C04F72DC3C}
{E208C170-ACAD-11D2-A093-00C04F72DC3C}
{04E725B0-ACAE-11D2-A093-00C04F72DC3C}
{1F3B3D8E-ACAE-11D2-A093-00C04F72DC3C}
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
WIA Automation Layer
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
WIAAut
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
WIAAut.DLL
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
REGISTRY
TYPELIB
en-US
