!This program cannot be run in DOS mode.
:}Rich
.text
`.rdata
@.data
.pdata
@.rsrc
@.reloc
t$ WH
H9D$ 
VWAVH
 A^_^
@SVAVH
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USVWATAUAWH
D$ E3
D$ E3
A_A]A\_^[]
\$ UVWATAUAVAWH
+D$0D
L$p+D$0I
QZ^&A
T$(A3
D$0@D
A_A^A]A\_^]
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
USVWH
X_^[]
USVWH
X_^[]
D$PE3
L$ SVWH
@SVWAVH
A^_^[
\$ UVWATAUAVAWH
A9}Dt
<(uFH
D$P H
<;ugH
D$P H
D$P H
D$P}H
D$P H
A_A^A]A\_^]
|$ UH
ISGNH
OSGNH
@USVWATAUAVAWH
L$@E3
A_A^A]A\_^[]
p WAVAWH
9DXBC
SDBGH
@A_A^_
WATAUAVAWH
 A_A^A]A\_
Q(A9P(r
HxA9Kxr2w)A
WAVAWH
A_A^_
UVWATAUAVAWH
A_A^A]A\_^]
WATAUAVAWH
 A_A^A]A\_
WAVAWH
 A_A^_
@USVWATAUAVAWH
A_A^A]A\_^[]
|$(E3
D$xM;
ExL;]
EpL;]
L;\$xw
L;T$xw
H;|$xw
L;D$xw
D$xI;
|$PA;
t$dM+
@USVWATAUAVAWH
|$(E3
|$pM;
t$pL9
L;d$pw
L;T$pw
L;D$pw
L;|$pw
\$pI;
D$PA;
D$PM+
t$TM+
D+L$PL
A_A^A]A\_^[]
x ATAVAWH
\$(E3
6HcB(I
d$(E3
j(9.u,
9j(u$E
(t$0H
@A_A^A\
USVWATAUAVAWH
L$`A;
L$`A;
L$hI+
\$hA+
T$`E;
L$XE3
l$`v 
T$(E3
D$PA;
l$(E3
D9PTtyA
T$(E3
D$TE3
D$ E3
l$(E3
<$E9oT
l$pE3
D9D$Pt
D$(E3
D9D$Pt"
L$(E3
l$(E3
D9d$Pt
9L$Pt5H
D$ E3
l$(E3
$D9hTtuA
D$TE;
D9L$Pt
D$`E3
D9L$Pt
L$(E3
D$ E3
D$(E3
D$`E3
L;}pH
O}pH;uxH
LuxH;UPL
GUPH;MXH
BMXH#}`H
}hH3}(H#
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
@SUVWATAUAVAWH
A_A^A]A\_^][
WAVAWH
K0B9<
0A_A^_
SUVWATAUAVAWH
S(D9,
hA_A^A]A\_^][
UVWATAUAVAWH
@(E9X(t
(t$0H
@A_A^A]A\_^]
@USVWATAUAVAWH
l$(E3
A_A^A]A\_^[]
UVWATAUAVAWH
C(D9,
`A_A^A]A\_^]
X UVWATAUAVAWH
A_A^A]A\_^]
x AUAVAWH
A_A^A]
USVWATAUAVAWH
H!L$P3
D$XE3
A;N(wHA
F,A9E,w>3
A;](r
t$PE3
|$XD;
D$PE3
D$XE3
|$PL+|$XL
d$XM+
u#9Z 
T$PE3
t=D9p
A_A^A]A\_^[]
L$ UVWATAUAVAWH
 uTE3
l$ E3
u*9L$@t$L
pA_A^A]A\_^]
UVWATAUAVAWH
D$pE3
D$pE3
D$XE;A
9\$`t
|$XA;
to;_XtjH
udE9T
D$hE3
C8I9C0t
I9C0u
D$TE3
D$TE3
G$tPH
l$hI9B0u
A_A^A]A\_^]
UVWATAUAVAWH
L$ E3
D88K9D80t
D08I9D00t
A_A^A]A\_^]
UVWATAUAVAWH
D!}`D!}dD!}hL!}XD!}tL!}@D!}HD!}LD!}
UlD!}0H
L!} D!}<
L$(E3
t$0E3
t$(E3
|$8E3
x.D9u
H0E9q,uEE
E9A$v
E;A$r
A_A^A]A\_^]
;F uw
E9)tYH
E9)tYH
E9)tYH
UVWATAUAVAWH
H!|$hH
!l$`L
9V$v(L
u(u+I
BxA9@xu.
I9QptpI9PptjA
@xA9Axu`A
A_A^A]A\_^]
UVWATAUAVAWH
;}$s]
;W$s?
pA_A^A]A\_^]
@USVWATAUAVAWH
L$xE3
D$(E3
L$xD9
D$(E3
\$(E3
L$ E3
D$(E3
D$(E3
D$xE9
T$(E3
D$ E3
D$(E3
D$(E3
uuH9M
uEL9u
t$ E3
D9PXt
D9QXt
D9PXu.
L9u8u~H
D9PXt
s0H9E
T$ E3
tyL9M
tsD9m
tmD9M
u9D9M
u.D9M
A_A^A]A\_^[]
USVWATAUAVAWH
P uYA
L$ E3
L$ E3
D$ E3
d$XL+
D9l$pu
L$ E3
L$ E3
D$ E3
D9l$p
D$h;A
d$PE3
T$`A;
p uqH
 ht*L
PPt{=
@Ptt=
T$ E3
p tn=
l$XE3
l$XE3
D$@E3
D$0E3
A_A^A]A\_^[]
\$ UVWATAUAVAWH
A_A^A]A\_^]
L$ E3
T$XE3
t$(E3
t$(E3
t$(E3
t$(E3
\$(E3
\$(E3
\$(E3
\$(E3
t$(E3
t$(E3
\$(E3
\$(E3
\$(E3
t$(E3
t$(E3
D$`D;
\$(E3
\$(E3
t$(E3
t$(E3
t$(E3
t$(E3
E;H,r
t$(E3
t$`E3
|$xE3
|$xE3
|$xE3
t$`E3
@USVWATAUAVAWH
A_A^A]A\_^[]
@SUVWATAUAVAWH
T$XE3
A_A^A]A\_^][
UVWATAUAVAWH
(t$pH
A_A^A]A\_^]
UATAUAVAWH
|$(E3
t$(E3
t$(E3
t$(E3
t$(E3
(|$pL
A_A^A]A\]
SUVWATAUAVAWH
XA_A^A]A\_^][
USVWATAUAVAWH
D$ A#
A_A^A]A\_^[]
USVWATAUAVAWH
l$|A;
L$|E3
!|$ A
H!|$(E3
E;g,r
D9q8u[H
F ;Ehu
D;d$x
A9G8t
F(F9,
!|$(E3
H!|$ H
!|$ H
D9hTu
D9Phr
D$|!|$ E3
!|$(E3
H!|$ H
!|$(E3
H!|$ H
!|$(E3
H!|$ H
!|$(E3
H!|$ H
A_A^A]A\_^[]
UVWATAUAVAWH
9|$|v)H
9|$|v(L
9|$pt
9D$|tM
l$tA;
D9l$|tXH
9|$tt
9|$tt
9|$tt
D9L$pt\H
A_A^A]A\_^]
USVWATAUAVAWH
|$(E3
D9I t
D$tE;
H9x D
tgD;SXtaE
D;STE
A(tNI
d$(E3
D9d$tv#L
L$(E3
D9d$tv'L
F8H9F0u
L$|E3
L$|A;
H(A;H(u8
L9I u
A_A^A]A\_^[]
K SVWH
H9T$0
\$ UVWATAUAVAWH
D$PA;
L$xH3
A_A^A]A\_^]
L$PH;L$Xt
L$`H3
x ATAUAVAWI
|$@A_A^A]A\
WATAUAVAWH
0A_A^A]A\_
@SUVWATAVAWH
A_A^A\_^][
H WATAUAVAWH
tF;7sdH
D9G$vBA
D;G$r
D;w$szH
A_A^A]A\_
` AUAVAWH
+D$0M
@A_A^A]
x UATAUAVAWH
(H9C(~
0H9C0}
D; H3C H#
L9C(~
L9K0}
H3C H#
H9C(t
A_A^A]A\]
UVWATAUAVAWH
H9C(~
H9C0}
H3C H#
A_A^A]A\_^]
wIttH
t$ WATAUAVAWH
nD9r(vhH
D;w(r
 A_A^A]A\_
VWATAVAWH
0A_A^A\_^
h AVAWE
D;L$8sPB
A@A9B@
D;L$8ssI
B@9G@u
l$0A_A^
UVWATAUAVAWH
D9i@tm
P uhH
(t$@H
PA_A^A]A\_^]
l$ VWAVH
D$XH9D$PuB
D$XH9D$Pu
L$`H3
L$`H3
h AVAWE
D;L$8
B@9G@
D;L$8sDA
A@A9B@u
l$0A_A^
x AVH
x ATAVAWH
D9fTuk
 A_A^A\
x AVH
F ;D$8u
;D$8u
D$(E3
UVWATAUAVAWH
I9y`u
`A_A^A]A\_^]
@USVWATAUAVAWH
t$pD;H
A_A^A]A\_^[]
9O(t/
UVWATAUAVAWH
{$tKI
T$|;A
\$`E3
A9^$t
D9l$tu+M
L$xA;F
A_A^A]A\_^]
H8D9S$vmM
D;S$r
USVWATAUAVAWH
A_A^A]A\_^[]
L9+u<
SUVWATAUAVAWH
D9Y8uhH
u!D9R A
A_A^A]A\_^][
SUVWATAVAWH
0A_A^A\_^][
K SVWH
WATAUAVAWH
E@u)H
A_A^A]A\_
VWATAVAWH
|$h9{$t%H
 A_A^A\_^
x AVH
x AVH
s WATAUAVAWH
A_A^A]A\_
|$0E3
x AUAVAWH
0A_A^A]
\$ UVWAVAWH
L$@H3
PA_A^_^]
x ATAVAWH
A_A^A\
t$0E3
!S(!S,
t$ WATAUAVAWH
A_A^A]A\_
l$0E3
!D$ E3
D$@H;
u#!D$ E3
K SVWH
H USVWH
@SUVWATAVAWH
A_A^A\_^][
UVWATAUAVAWH
)t$@M
)|$0H
H!t$ E3
T$ E3
z6u4f
|$ E;
|$ E3
F(9G(w_
F,9G,wWE3
(|$0H
PA_A^A]A\_^]
WATAUAVAWH
A_A^A]A\_
X UVWATAUAVAWH
T$0E3
D$ E3
t$HL+
L$HL+
T$HH+
t$HL+
D$PL+
T$HH+
D$PL+
t$PL+
T$HH+
T$HH+
D$HH+
D$PH+
d$HD;
T$PH+
L$HL+
E;H,r
A_A^A]A\_^]
WAVAWH
9r(vjH
 A_A^_
L$ UVWATAUAVAWH
pA_A^A]A\_^]
D!l$(M
D!l$ 
!D$ I
!D$ I
K SVWH
VWAUAVAWH
LcO E;
@A_A^A]_^
@USVWATAUAVAWH
floau
thI9~@ubH
09t$`v|L
D;t$`r
D;t$`s'I
D;t$`
t$hA9
?boolu
?halfu
floau
doubu
A_A^A]A\_^[]
@SUVWATAUAVAWH
A_A^A]A\_^][
@USVWATAUAVAWH
6tzD;
|$0E3
|$0E;
L9|$X
L$HE3
D$89|
A_A^A]A\_^[]
WATAUAVAWH
0A_A^A]A\_
UVWATAUAVAWH
t$pt!I
A_A^A]A\_^]
L$ UVWATAUAVAWH
D$@E3
A_A^A]A\_^]
LcB$LcX$E;
x AVH
VWATAVAWH
A_A^A\_^
x AVH
H UATAUAVAWH
A_A^A]A\]
G49F4
G49F4
D9O4u
D9O4t
O4;N4
G49F4
D9N4u
N4;O4
G09F0
C(9G(uOH
C 9G u3
C$9G$u+L
C09G0u
C49G4u
@USVWATAUAVAWH
T$@E3
D$@E3
L!d$(H
A_A^A]A\_^[]
x AVH
|$0E3
SUVWATAUAVH
F8,'u
pA^A]A\_^][
T$PA;
T$`E3
@(9A(t
x ATAVAWH
 A_A^A\
UVWAVAWH
A_A^_^]
x UATAUAVAWH
d$PD9
D$8E3
L$0E3
GP9APt
L9b(t
A_A^A]A\]
WATAUAVAWH
 A_A^A]A\_
H9h@u
,H9h@t&L
D$0E3
x AUAVAWH
(t$@L
A_A^A]
UVWATAUAVAWH
A_A^A]A\_^]
x ATAVAWH
E< t4H
@A_A^A\
{ AVH
D$(9D$8
@<9B<u
D$0E3
|$0E3
x ATAVAWH
0A_A^A\
x ATAVAWH
FX<&tJ<+t<<-t.<<t <>t
FX<<t
A_A^A\
UVWATAUAVAWH
0A_A^A]A\_^]
@USVWATAUAVAWH
D$xE3
Lcx D+
`<`u.J
B<Bu.J
!D$ E3
A9F$u
D$`E3
$0< u:J
A_A^A]A\_^[]
s WATAUAVAWH
D$0E3
t$0E3
A_A^A]A\_
K SVWH
WATAUAVAWH
 A_A^A]A\_
` UAVAWH
A_A^]
WAVAWH
 A_A^_
x AVH
|$ UATAUAVAWH
A_A^A]A\]
UVWATAUAVAWH
;EOu;H
9_ t|
A_A^A]A\_^]
\$`A+
:D$dt
x AVH
(t$ H
(t$0H
x ATAVAWH
(L$ H
0A_A^A\
WAVAWH
 A_A^_
G(D9F(u
C49G4u9
C09G0u1
C89G8u)H
C 9G umH
CHH9GHuc
CP9GPu[
CT9GTuS
CX9GXuKH
C(9G(uk
C,9G,uc
C09G0u[
CH9GHuS
CL9GLuKH
C 9G 
C$9G$
C(9G(
C,9G,
C09G0
C 9G u@
C$9G$u8
C(9G(u0
C,9G,u(
C49G4u 
C09G0u
G89F8u8H
C 9G uDH
C(H9G(u:H
G D9F u
C 9G 
C`9G`u~H
C H9G u2H
C(H9G(u(H
C 9G u8
C$9G$u0
C09G0u(
C49G4u 
C89G8u
G 9F u'H
O ;K uDH
G H+C u
G(H+C(u
G0H+C0H
G 9C 
G$9C$
G89C8
G<9C<
Gp9Cp
G(9C(
G,9C,
G09C0
G49C4
x AVH
L$ UVWATAUAVAWH
d$0E3
@A_A^A]A\_^]
x ATAVAWH
08D$pu
0A_A^A\
VWAVH
0A^_^
J A;H uM
@(8B(
@)8B)
@*8B*
@+8B+
UVWATAUAVAWH
u'9>u#
uW9>uS
H;F@t
I;G@t
|$HE3
A_A^A]A\_^]
WATAUAVAWH
0A_A^A]A\_
PXD9K|t
VWATAVAWH
H9P u#L
A_A^A\_^
VWATAVAWH
)t$PH
L$@H3
(t$PI
A_A^A\_^
x AVH
\$ UVWATAUAVAWH
t$pE3
 A_A^A]A\_^]
L$ SVWH
u?9Cxt,
D$0E3
D;T$(s
D;T$(s
D;T$(s
l$ VWAVH
9kpuV
v$9k|t
sl9klu=H
9k|t<
Cl9k|
D97u)@8o
H9hXt
 A^_^
UATAUAVAWH
M9&t]I
L$0E3
A_A^A]A\]
UVWATAUAVAWH
PA_A^A]A\_^]
x AVH
t$ WAVAWH
 A_A^_
x UAVAWH
H()O(
H(9O(
H(9O(
H(9O(
H(9O(
H(9O(
$tfA+
D9x(A
D9x(A
H(9O(
O(D9~p
A_A^]
T$@9kpuBL
x AUAVAWH
 A_A^A]
L$ SUVWATAVAW
A_A^A\_^][
x ATAVAWH
<0|:<9~>
<'uJM
 A_A^A\
x ATAVAWH
 A_A^A\
@UATAUAVAWH
>-u8A
A_A^A]A\]
x AVH
x AVH
?_t63
WAVAWH
l$HA+
 A_A^_
:0ufE3
8.uOE
t$ WAVAWH
 A_A^_
WAVAWH
;xuoH
 A_A^_
\$ VWAVH
L$PH3
`A^_^
x AUAVAWH
 A_A^A]
8\u9H
9/u|H
8/tyH
8*u`H
9\uJH
|$ UH
L$ SUVWATAUAVAW
A_A^A]A\_^][
D$@H9D$8u
 PtU=
`Pu7D
 htH=
0dte3
0#t<A
w@t$;
@PuoE;
`pt)3
pft)3
0et93
WAVAWH
 A_A^_
USVWATAUAVAWH
L$PfD
.T$8z
XL$8f
D$hLct$h9_
D$(E3
D$\A;
D9z@D
9\$Hu
q,9t$ht
T$XE;
9\$HuhL
d$`D9d$xt
ur9\$Hu
q,D9t5
T$DfD
L)l$8
uZA9B
D;\$0
9\$du
D;\$0
9\$Du
9\$@u
u$E;q
z*u(fF
D;d$0
syB9\
D$hA;
D$\tN
L$DfD
uG9\$`uAA
t$xE;
D$(E3
L$4+L$\H
9\$DuT
D$(E3
l$8H#
l$89\$`
l$8D;W
D$(E3
A_A^A]A\_^[]
r;;D$(s5I
D;B$t
x AVH
x ATAUAVAWL
@ uVA
@ u9I
|$@A_A^A]A\
WAVAWH
 A_A^_
x UATAUAVAWH
`PuAE3
d$8E3
T$HE;
T$lA9P
T$HA;
T$@A;
A A9@ 
A$A9@$
D;L$@A
C\$@3
!|$X%
D$8E3
!|$0E
H!|$ 
!|$0E3
H!|$ H
D$LE3
!|$0H
l$(H!|$ 
!|$XI
D$8E3
!|$0E
H!|$ 
D$LE3
!|$0H
l$(H!|$ 
|$8E3
|$0E3
t)9|$Lt#
|$ A3
D$LE;
D$LD9N
/D+d$@E
A_A^A]A\]
SUVATAUAVAWH
H49J4
l$4E;
`A_A^A]A\^][
x AWE3
|$(A_
x AUAVAWH
E9x<u
u@D9z@u:H
D9yLu3D9y@u-
 A_A^A]
t$ WATAUAVAWH
@ 9B u
@$9B$u
;D$8uPD
D;T$$uE
D$0A;
D9p8u
t$$A;
T$(E;
l$HE3
d$8E3
d$ D;c
L$`H3
A_A^A]A\_
SUVWATAUAVAWH
<0E;<
p t3=
w*9YLu%
l$ D;
p t8I
9B u#A
@$9B$u
8A_A^A]A\_^][
x UATAUAVAWH
|$ D+
A_A^A]A\]
E;PL|
WAVAWH
H A9J 
H$A9J$
rGw>A;
D;H(r
 A_A^_
D;A8s
UVWATAUAVAWM
\$HA_A^A]A\_^]
B09A0
B49A4
B 9A r;w2
B$9A$|1
rjwaI
rMwDI
WATAUAVAWH
D$ L+
D9V4t!9F0u*D9V4u$
L$@H3
A_A^A]A\_
E9A4t
E9Q0u
E9A4u
@SUVWATAUAVAWH
)t$0A
D9y<u
D9z@u
D9zLu
(t$0H
HA_A^A]A\_^][
x ATAVAWH
.uQL!|$(E3
(t$0H
@A_A^A\
@USVWATAUAVAWH
A_A^A]A\_^[]
x ATAVAWH
 A_A^A\
UVWATAUAVAWH
@A_A^A]A\_^]
x ATAVAWH
0A_A^A\
D9J0t
SUVWATAUAVAWH
t#9j@t
(A_A^A]A\_^][
x AUAVAWH
 A_A^A]
SUVWATAUAVAWH
D9~XE
D$T3V
l$`A;
T$ D#
%wrtc
A_A^A]A\_^][
USVWATAUAVAWH
\$hE3
|$|A9
d$`D;
d$xD;
5w=tmA
5wGt>A
|$`E3
%wxtlA
|$@E+2
L$`E3
d$xA9{
t$XA;{
D9Q0u
A_A^A]A\_^[]
@SUVWATAUAVAWH
|$xA9U(
A8A9E8
T$XE9U@
A A9E 
A$A9E$
T$PA9z
D$`A;R
d$@A;R
\$0A9z
A(E;z
D;P(t
A_A^A]A\_^][
WATAUAVAWH
|$pE;
D9i@t
E9j@t
D9h@t
 A_A^A]A\_
x ATAVAWH
D9c tJH
D9b u
@A_A^A\
WATAUAVAWH
 A_A^A]A\_
x AUAVAWH
j0D;G
D9{ v%L
D9{0v%L
 A_A^A]
x AWH
x ATAVAWH
0A_A^A\
@SUVWATAUAVAWH
)t$@H
D9iTt
L9k(t#D9K
l$(E3
u-E9hTt'I
XA_A^A]A\_^][
UVWATAUAVAWH
E9P(u
A9x,u
l$@9},u
D$XA;
A9x,t
D$4+D$0
D$4t&D
L$pH3
A_A^A]A\_^]
t$ WATAUAVAWH
r?A;P
@ A9A u
@$A9A$u
E9Y4u
 A_A^A]A\_
SUVWATAUAVAWH
A$D;W
q$D;G
0$t*=
 $t#=
P$u_3
B E;\$
A 9A(u
A$9A8t
pPu0D
p t/=
,2D9U
D9R@D
GR@9B
D9Q@D
GQ@9B
D9Q@D
GQ@9B t
D9Q@D
D9Q@D
A9A@t
A;Q@A
BQ@A9A
GQ@A9A
GQ@A9A t
t:v$D
8A_A^A]A\_^][
x UATAUAVAWH
D$dD;
D$@D;
D;Y@u
D;i@u
D;i@u)I
\$PI+
\$hE;
d$`L+
A$A9E$
A A9E 
E;bLu
E;bPu
d$`D;
T$dE3
|$HD;
t$4E;
|$pE;
D;t$8u\
|$4A;
A;B@u
D$0A;
A_A^A]A\]
UVWATAUAVAWH
L$4;C 
T$PD;
D;b@vH
L$4;B u
D;Z$t
\$0A;U
l$HD;
D$8E3
L$pH3
A_A^A]A\_^]
WATAUAVAWH
j0D;C
A9@Ps
@PA9hLv
BP9jLv
E9h4u
A9hDt
hDA9hHt A
 A_A^A]A\_
BPA;@PA
t,A9Q
_L9_Ps
t!9^<v
^<9^@s
^H9^@s
x AV3
A(A9B
A(A9B
A9j t
A(A9B E
B A9j0t
A(A9B0E
B0E;Y
x ATAVAWE3
A_A^A\
@SUVWATAUAVAWH
YLA9Z
\$xE;
D9aLu
A;B`v
B`A;R\s
A;A\r
A;A`vp
(A_A^A]A\_^][
WATAUAVAWH
P(E9h4u!H
 A_A^A]A\_
UVWATAUAVAWH
L$ 9_
p t~=
 $ti=
0$tT=
O(D;G
B(E;s
PA_A^A]A\_^]
l$ VWATAVAWH
;_ s!H
0A_A^A\_^
UVWATAUAVAWH
E9r v"I
E;Z r
D9J0u
A_A^A]A\_^]
A;pTu
x AVH
D9JTt3A
JT9z v%H
x ATAVAWH
AH9BHu+E3
D;HHu
A_A^A\
x AVAW
AHA9FHs
A9FHE
D;IHv
D;IHu
|$0A_A^
@SUVWATAUAVAWH
D$x;G
u!E9Y
F A9A u
F$A9A$t
(A_A^A]A\_^][
@SUVWATAUAVAWH
D$x;G
L$xD;W
u*E9Y
F A9A u
F$A9A$t
(A_A^A]A\_^][
@SUVWATAUAVAWH
D$x;G
L$xD;W
u*E9Y
F A9A u
F$A9A$t
(A_A^A]A\_^][
SUVWATAUAVAWH
D$8D;
D$(E3
D$(E3
9Q u(9Y$u#H
9Y$t2
A9x u
A9X$t
(|$PH
xA_A^A]A\_^][
@SUVWATAUAVAWH
)t$`H
i<D;C
D$4E3
D$0D;C
A9R@t
(t$`H
xA_A^A]A\_^][
SUVWATAUAVAWH
E@A9A@u
8A_A^A]A\_^][
x AVAW
|$0A_A^
@SUVWATAUAVAWH
D$(B9
L$(C9
D$8A9
l$8A9
hA_A^A]A\_^][
x ATAVAWE3
A_A^A\
x ATAVAW3
J A;Q
|$8A_A^A\
UVWATAUAVAWH
L$0H3
@A_A^A]A\_^]
VWATAVAWH
reu0H
L$@H3
A_A^A\_^
SUVWATAUAVAWH
T$@E3
D$P9H(u{A
A A9@ 
A$A9@$
D$Pt7C
hA_A^A]A\_^][
\$ UVWATAUAVAWH
b8D;C
t$xD9s
b@D;C
A;{Ls
A;x<s
zLD9J
p t}A
p uTA
A;{@s
A;x<s
zLD9J
A;xHs
zLD9J
E9K t
A;{Ls
A;x@s
zLD9b
A;z<s
zLD9b
A;xLs
xLE9` u
u?D9vT
D$(E3
M;~`t@H
0A_A^A]A\_^]
x AVH
\$ UVWATAUAVAWH
E9Y@t
l$`E3
PPtfA
@Pt]A
pPtKA
PPtd=
@Pt]=
pPtO=
t$pD+
@u>E3
 A_A^A]A\_^]
SUVWATAUAVAWH
D$@A9\$
l$8E3
\$4E3
(t$PH
hA_A^A]A\_^][
SUVWATAUAVAWH
)t$`E3
A@A9@@u+J
A@9B@u
D$0;A
D$4;A
D$8;A
D$<;A@u^C
D$@;A
D$D;A
D$H;A
D$L;A@u2H
(t$`H
xA_A^A]A\_^][
x ATAVAWH
 A_A^A\
x AVH
B 9A u
B$9A$u
SUVWATAUAVAWH
t@A!s
|$$E;
\$@E3
D9T$,vAD
D$(E3
9*t-H
\$HA;
t$$A;
!t$HE3
D9T$,vCD
l$HE3
XA_A^A]A\_^][
x AUAVAWH
(t$0H
@A_A^A]
x AWD
D9{@t%D9{
D9y@t&D9y
|$(A_
x UATAUAVAWH
|$HE;
u4E9h
u.E9p
u(E9X
u"A9p
B4A9@4u
t$@E3
A_A^A]A\]
VWAUAVAWH
D9D$Xv.
D;D$Xr
t$hE3
D;D$X
|$8A;
l$HA_A^A]_^
x UATAUAVAWH
y@A;V
D!D$@I
PPt,=
@Pt%=
PPtW=
@PtP=
Pu)9}
D$(E3
A_A^A]A\]
D$0LcD$0L
x AVH
ATAVAWH
0A_A^A\
L$pH3
x ATAVAWH
 A_A^A\
USVWATAUAVAWH
Z8E;8
(|$PH
xA_A^A]A\_^[]
USVWATAUAVAWH
Z8E;8
XA_A^A]A\_^[]
(|$@D
(D$0D
(L$ H
(|$ H
(t$ H
t$ WATAUAVAWH
/D$Xv
 A_A^A]A\_
WAVAWH
 A_A^_
(|$ H
UVWAVAWH
 A_A^_^]
x ATAVAWH
 A_A^A\
SUVWATAUAVAWH
T$@E3
L$0D;D$<
H#G H;G u$H
H;G0u
t7D;OHuzI
XA_A^A]A\_^][
WATAUAVAWH
P ulH
u*E9&t
D$(E3
z(u&L
A90tCA
z-u+L
!A96t
(t$PL
(|$@I
A_A^A]A\_
UVWATAUAVAWH
0A_A^A]A\_^]
H!D$0H
x UATAUAVAWH
\$P9V
shD9z
ubD9z
L9T$`u.
D$@E3
|$LD9~
P uvH
\$PC9|
|$LD;~
L$X9N
D$\E3
s>D9B
L$X;N
l$@E3
d$XD;f
D$PE3
\$\E9V
d$XD;
D$Pt'H
l$@D;
.3zoum
D$(E3
D$(E3
D$LD;
D$PE3
;T$Xu
T$`A;
9\$punA;
D$(E3
D$hE3
D$(E3
D$(E3
A_A^A]A\]
x UATAUAVAWH
9~TuZH
tKH9U
D$ E3
A_A^A]A\]
@SUVWATAUAVAWH
p u6H
HA_A^A]A\_^][
P u)A
  u}I
D$(E3
SUVWATAUAVAWH
)t$@H
D$(E3
(t$@H
XA_A^A]A\_^][
WAVAWH
t4x^L
0A_A^_
x UATAUAVAWH
A9ATu
t$L9r`u
E9FTu
E9GTu
E9H(t(A
t%M9q`u
A9ATu
E9JTu
E9H(t(A
t%M9q`u
t"L9r`u
D$(E3
D$(E3
(|$pI
A_A^A]A\]
UVWATAUAVAWH
d$@L#
D;l$4u
zAu?A
A_A^A]A\_^]
zIuG3
K SVWH
K SVWH
UWAVH
 A^_]
UWAUAVAWH
0A_A^A]_]
)t$0M
0 t}=
@ tj=
P tW=
` t?=
(t$0H
UVWATAUAVAWH
)T$PD
)\$@D
)d$0;Q
Ugz'u%fE
Uwr$fA
Mwr)fD
A_A^A]A\_^]
.D$@z
.D$@z)u'
/D$@A
/D$ A
UVWAVAWH
/E@vtI
/E@v;
0A_A^_^]
whta=
 !t+=
watW=
0#t6=
@#t$=
UVWATAUAVAWH
 !t\=
A_A^A]A\_^]
H!\$8H
H!\$0H
D$0H!\$(H!\$ 
L$ UVWATAUAVAWH
`A_A^A]A\_^]
H9M@|PH;E@
H9M@|WH;E@
E@H9E
H9E@|
L9u@L
L9u@L
@USVWAVH
`A^_^[]
UWAVH
L9E0L
BE0L9M
L3L$(L#L$`L#L$ L#D$(I
L#L$`L#L$ 
(t$ H
UVWAVAWH
)\$ ;Q
(t$pL
(|$`I
A_A^_^]
/EHv*I
z6u4I
/t$PA
/t$PH
(t$0H
L$ UVWATAUAVAWH
PA_A^A]A\_^]
L9D$0A
|$ UH
VWAVH
0A^_^
T$ H#
H3D$ H
x AVE3
u&D9\$(t
D9\$(t
u+D9\$(t$
D9\$(t
D9\$(u
D9\$(t
(t$ H
USVWATAUAVAWH
D$(H#U`H
xA_A^A]A\_^[]
x ATAVAWH
@A_A^A\
@SUVWATAUAVAWH
L$8M+
uVA9\
|$8I+
l$XD;
L$pH3
A_A^A]A\_^][
p AWA
t$(A_
UVWATAUAVAWH
s(D9>v,
t$ A;
t$0D9u
D;MTs*H
@A_A^A]A\_^]
UVWATAUAVAWH
D$(9B
t$(9u
d$(D;e
PA_A^A]A\_^]
UVWATAUAVAWH
D;ZPD
l$(E9
D$ A;E
\$@A9\$
A_A^A]A\_^]
|$(A^
WATAUAVAWH
 A_A^A]A\_
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
l$,9i
D;Q@u
D$HA;@
D$0E3
d$$E3
D9A u\
L)L$@D
T$(;T$Hu
D$PE3
l$,;o
`A_A^A]A\_^]
SUVWATAUAVAWH
uHE9L$
T$8D;
T$d;U
t$0E;E
T$`A;
D$h;D$l
D;|$l
A_A^A]A\_^][
WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
;WpsBH
PPt6A
@Pt-A
9wpv2H
D;Wpr
 A_A^A\
USVWATAUAVAWH
E9p v1A
B@E;H r
E9p0v(I
B@E;H0r
D9B(u
B(D;)A
E9p v5A
B@E;H r
E9p0v5A
B@E;H0r
vVD9E
GpD9u
A_A^A]A\_^[]
t$ WATAUAVAWE3
D;`Pu
t$HA_A^A]A\_
UVWATAUAVAWH
D$(cH
;D$Dv
G!D91D
XTu99
u"A9p
E!_DA
9YTtjA
CTABA
CLI4A
FXLCA
A_A^A]A\_^]
VWAUAVAWH
L$XH3
`A_A^A]_^
)t$ H
(t$ H
)t$@H
t$ WATAUAVAWH
A9Fdv
A9FTs
 A_A^A]A\_
x AVH
r`wWI
H;Jpr
UWAWH
@49B4u
\$ E3
E9Y4t
UVWATAUAVAWH
D9t$@tm
\$HD!
l$8E3
A_A^A]A\_^]
L$(E3
UWAVH
L$(E3
D$ E3
UWAUAVAWH
D$(E3
A_A^A]_]
L$(E3
x AVH
UWAUAVAWH
D$(E3
A_A^A]_]
VWATAVAWH
A_A^A\_^
@USVWATAVAWH
D$ E3
A_A^A\_^[]
\$ UVWATAUAVAWH
D$@E3
A_A^A]A\_^]
UVWATAUAVAWH
@ ta=
P tB=
@!tB=
P!t#=
0$wkt/=
P#tJ=
`#t.=
@$tU=
bwztn=
bw?t3=
`fti=
0gt(=
 qt6=
 ttr=
A_A^A]A\_^]
UWATAUAVH
D$ E3
L$HE3
|$BA;
A^A]A\_]
x UATAUAVAWH
A_A^A]A\]
UWAVH
x UATAUAVAWH
A_A^A]A\]
t$ WAVAWH
A_A^_
@SVWH
x UATAVH
Pit&=
D$ E3
L$DE3
A^A\]
D$ E3
t$ WH
UVWATAUAVAWH
1u;L9y`u
D9i,t/D9i
u1H9r`u
D9z,t%D9z
L9@`u
D9x,u
D9@,t
A_A^A]A\_^]
|$HA;
T$HE;t$
W0D;j
d$pD;
t$ WH
UWATAUAVH
D$ E3
L$HE3
D$ E3
\$BA;
A^A]A\_]
UWATAUAVH
D$ E3
L$DE3
D$ E3
L$(E3
L$(E3
A^A]A\_]
UVWATAUAVAWH
D$ E3
L$@E3
D$ E3
L$(E3
\$BA;
A_A^A]A\_^]
UWAUAVAWH
D$(E3
A_A^A]_]
UVWATAUAVAWH
OSGNu,
ISGNu
!t$D3
t$HA;
L$pH;
D$DE3
ISGNt
T$XA+
OSGNu
ISGNu
|$@OSGND
d$LE3
A_A^A]A\_^]
x ATAVAWH
 A_A^A\
WAVAWH
@A_A^_
@USVWATAUAVAWH
#tlA+
A_A^A]A\_^[]
UWAUAVAWH
D$(E3
A_A^A]_]
UWAUAVAWH
D$(E3
A_A^A]_]
UWAUAVAWH
D$(E3
A_A^A]_]
UVWATAUAVAWH
pjQ0G
q$D;G
$A<Au8A
A9B s
H0A;H
D$(sL
D$(tL
A_A^A]A\_^]
ISGNH
OSGNH
d$HD9w
D9r$E
u9E9p4u3A
J`;J\r
D9t$Pu
SHDRA
STATH
|$ E3
SDBGD
t$ E3
p WATAUAVAWH
|$(E3
(t$0L
A_A^A]A\_
qjQ0G
WAVAWH
 A_A^_
t$ WATAUAVAWH
D$0D;
l$(E3
L$`H3
A_A^A]A\_
@!t1=
P!t*=
 `tT=
p`t.=
wNtC=
wjt_=
wttT=
0tt%=
t$ WAVAWH
@A_A^_
@SUVWATAUAVAWH
u?E9^
E9^(t:A9V(t4A
L$8E3
(t$PH
hA_A^A]A\_^][
x ATAVAWH
@A_A^A\
qk\xc
x AVH
E9H@t-3
H@A9x v!H
SUVWATAUAVAWH
l$89Y
u6A9\
t/A9\
tGA9j
XA_A^A]A\_^][
x AVH
I9RHL
EBHI9SHM
ECHL+
-x&M;
D9Q0t
x UATAUAVAWH
u)D9P
u#D9X
A_A^A]A\]
UVWATAUAVAWH
 A_A^A]A\_^]
UVWAVAWH
M0;KPr*L
M0;KX
0A_A^_^]
x UATAUAVAWH
L9Z`t
B`H9A`t
L;a`u5D
L;``u
L;b`u_
M;``u+A;
A_A^A]A\]
|$ UH
PRESH
x UATAUAVAWH
T$hE3
L9B`t
@`H9A`u
t+D9`
H9x(t
\$XE3
\$XD;
A`I9B`u-A
M9}`t)H
E9epvHI
E;Mpr
E9}pvo
E;Mpr
E9}$v\A
E;M$r
A_A^A]A\]
D8l$@t?
@USVWATAUAVAWH
#tlA+
A_A^A]A\_^[]
;AHr$H
x AVH
SUVWATAUAVAWH
A_A^A]A\_^][
D!i(;V
D$(vH
D$(sH
T$HE3
@xA9Axu
L$PH9
pjQ0G
D$(cH
D$(bH
D$(iH
ufA9@0u`H
uRA9@0uLH
D;vlv
UVWATAUAVAWH
D9]pt
E9M$E
d$(E3
xt7E3
t(E9M$u"H
E9M$u
d$(E3
d$ E3
d$(E3
D9R t
D9]hu
\$(E3
C$9B$t
(t$pH
A_A^A]A\_^]
x AVH
t$0H9rpu3H
K UVWATAUAVAWH
A9~0u
E;f r
D;f rDH
u9~,up
PA_A^A]A\_^]
@49A4u"A
@`H9A`u
@h9Ahu
A43C4=
@USVWATAUAVAWH
sX9t$Tt
A_A^A]A\_^[]
@USVWATAUAVAWH
D$hA;
t$`E3
;D$Pt
t';A0u"H
E9X0t
A9@0u
A;A4tLA
9\$`t
A_A^A]A\_^[]
x UATAUAVAWH
uVD!d$@H
L$PE3
L$PE3
Dd$`M
uED!d$@H
H@D;L
T$h;T
;T$hu 
T$hD;
t+9A0u&
A9B4u
t(9A0u#
l$`tML
|$`E;
Z@D;\
|$TE3
D$XE3
|$TA;
|$XD9n
D9*toA
uQD9j
D9l$Pv
);T$Pr
A_A^A]A\]
x UATAUAVAWH
|$$M+
D$,M+
E9uLM
BuLA9}P
G}PA;@
A9MHs
A9HHA
\$0E3
|$ D9
L$0L;
A_A^A]A\]
p WATAUAVAWH
H9>thH
H9>thH
(t$0L
A_A^A]A\_
|$(E3
D$(E3
qjQ0G
t$ WATAUAVAWH
u"D9g
A_A^A]A\_
x AVAWE3
|$0A_A^
WATAUAVAWH
F`H;C`u
H|D9n<D
F`H;C`u
(t$0L
A_A^A]A\_
USWATAUAVAWH
D!D$(M
uVD!T$0
A_A^A]A\_[]
UVWATAUAVAWH
T$xE3
0A_A^A]A\_^]
VWATAUAVH
A9~@t
@ A9A u|A
@$A9A$urD
T$XE3
 A^A]A\_^
x UATAUAVAWH
t$(E3
E9F0tWH
A_A^A]A\]
p WATAUAVAWH
q,D;C
D9p,t
q,D;K
l$(E3
A_A^A]A\_
x AUAVAWH
0A_A^A]
x AUAVAWH
 A_A^A]
t$ UWAVH
M(;KPr*L
M(;Kt
M(;Kh
M(;KX
0A^_]
A89B8u
A0H9B0u
WATAUAVAWH
;CPs%D9z@s
D9zPr
(t$0L
A_A^A]A\_
x UATAUAVAWH
C|9F|
F|3C|
D$0;G
A_A^A]A\]
t$ WH
D$PE3
ISGNH
D$PE3
OSGNH
t$ WATAUAVAWH
 A_A^A]A\_
x ATAVAWH
 A_A^A\
VWAVH
 A^_^
@USVWAUAVAWH
A_A^A]_^[]
x AVH
K SVWH
x UATAUAVAWH
7t*E+
Lt7E+
RtNE+
YtJA+
_t?A+
A_A^A]A\]
x UATAUAVAWH
=t)A+
A98t0A
A9x(t,A
D$@E;
D$@E;
T$x@8|
D$@#D
D$hA;
l$4H;
A_A^A]A\]
9~ht&@8
T$hA8:
L$xA;
D$x@88t|
@USVWATAVAWH
;Lt2D
D$ fI
93t2D
;Lt2D
t)D8x
;,t5D
pA_A^A\_^[]
x UATAUAVAWH
D$@E3
D$`E3
A_A^A]A\]
@USVWATAUAVAWH
A9?u A
D$ E3
A_A^A]A\_^[]
L$ SVW
L$ SW
x AVH
x AVH
WAVAWH
A_A^_
x AVH
x AVH
x AVH
qX]\9
qX]\9
;A4s5L
;A,s9L
8;A,r
` UAVAWH
RDEFH
OSGND
STATD
SHDRD
@A_A^]
WATAUAVAWH
 A_A^A]A\_
UVWATAUAVAWH
 A_A^A]A\_^]
t$ WATAUAVAWH
D;}$s,K
 A_A^A]A\_
WATAUAVAWH
D$pD;8
D$P9H
 A_A^A]A\_
x AVH
WAVAWH
 A_A^_
x ATAVAWH
r49\$h
@;\$hr
@D;D$h
 A_A^A\
WAVAWH
 A_A^_
x ATAVAWH
r49\$h
@;\$hr
@D;D$h
 A_A^A\
WAVAWH
 A_A^_
x ATAVAWH
@D;D$h
+9\$hv%
@;\$hr
 A_A^A\
WAVAWH
 A_A^_
x ATAVAWH
@D;D$h
+9\$hv%
@;\$hr
 A_A^A\
t$(E3
WAVAWH
 A_A^_
t$ UWAVH
D9spv;
SUVWATAUAVAWH
XA_A^A]A\_^][
t$ WATAUAVAWH
A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
E9J(vDI
J0B;\
E;B(r
E9J8vEI
J@D;\
E;B8r
J D;\
H!H0H
H!H0H
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
YR_7a
WAVAWH
 A_A^_
YR_7a
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
qK_6s
qK_6s
t$ WH
t$ WH
t$ WH
ISGNH
rwA;*r
x AVH
(t$ H
(t$0H
A;Q@s1
E;A`s>I
B09A0
B(9A(
q[R\8>
I D;\
E9A(vSA
I0D;\
E;Q(r
UATAUAVAWH
D9c@vL
D9h(u
KhF9d
KhF;T
D9cpv
E;~0s;I
A_A^A]A\]
9A@v$
\$ UVWATAUAVAWH
L!|$0
L!|$0H
`A_A^A]A\_^]
D9IpvgI
E;Jpr
x AVH
^TX&%
^TX&%
^TX&%
^TX&%
^TX&%
^TX&%
^TX&%
^TX&%
^TX&%
q0U4]
q0U4]
q0U4]
x AVH
x AVH
SUVWATAUAVAWH
D$pA;E
(A_A^A]A\_^][
SUVWATAUAVAWH
D$pA;E
(A_A^A]A\_^][
SUVWATAUAVAWH
D$pA;E
(A_A^A]A\_^][
SUVWATAUAVAWH
D$pA;E
(A_A^A]A\_^][
SUVWATAUAVAWH
D$pA;E
(A_A^A]A\_^][
x AVH
x AVH
u+9r(u&
w-t{A
CTABM
UVWATAUAVAWH
RDEF!]
!_(!_H!_8!_
A_A^A]A\_^]
x AVH
(t$ H
(t$0H
VWAVH
 A^_^
@SUVWATAUAVAWH
G(D;h
I+N A
8A_A^A]A\_^][
@SUVWATAVAWH
D$hL+
 A_A^A\_^][
USVWATAUAVAWH
hA_A^A]A\_^[]
@USVWATAUAVAWH
T$l;U
BpD;@D
JP;HH
H+B H
H+J H
H+A H
A_A^A]A\_^[]
t$ WAVAWH
 A_A^_
|$ UATAUAVAWH
FX10H
BDA9BH
O0;qps 
AD9Bp
AH9BP
A_A^A]A\]
@USVWATAUAVAWH
xA_A^A]A\_^[]
UVWAVAWH
t$`Hk
l$`E3
E 9D$`u'
0A_A^_^]
@USVWATAUAVAWH
C(;PD
C(;P$
C(;P(
C(;P<
C(;P@wHI
hA_A^A]A\_^[]
WATAUAVAWH
t6D;"u&L
 A_A^A]A\_
UVWATAUAVAWH
T$xHi
0A_A^A]A\_^]
USVWATAUAVAWH
D!q|H
t+D;'u
xA_A^A]A\_^[]
x ATAVAWH
umD9a(ug
 A_A^A\
@SUVWATAUAVAWH
DkEph
@Dke@XDk
D9u`v=K
D;u`r
O0;i@sF
O0A;Y@
rhEiF
G0A;XPs"I
HA_A^A]A\_^][
WAVAWH
S0;z@s*
;r`spH
BhA;|
D9Bpv;A
D;Bpr
K0;y@spH
Qh;t:
 A_A^_
t$ WATAUAVAWH
;s(suL
;s8siL
t$PD;rp
 A_A^A]A\_
UVWATAUAVAWH
D;{0sZH
D$(D+
0A_A^A]A\_^]
x UATAUAVAWH
D$DD;B`
t$@A;
OSGNI
ISGNI
t$@E3
A_A^A]A\]
UVWATAUAVAWH
}PD9{0
9K(t7
0A_A^A]A\_^]
x AVH
x AVH
UWAWH
@A__]
{0"uzH
p(uPH
UVWATAUAVAWH
E;ADs5I
D$ E3
L$(E3
L$@E3
A_A^A]A\_^]
UVWATAUAVAWH
t$ E3
A_A^A]A\_^]
VWATAUAVH
D9GXv
A^A]A\_^
WAVAWH
A_A^_
x ATAVAWH
 A_A^A\
x AVH
x AVH
VWATAVAWH
H!\$hA
9H(u+
tkE9a
0A_A^A\_^
x AUAVAWH
at3A+
u!D9h 
0A_A^A]
UVWATAUAVAWH
A(D9v u
`A_A^A]A\_^]
UVWAVAWH
T$pD;
@A_A^_^]
VWAVH
 A^_^
x ATAVAWH
iD;jD
B(9A(
 A_A^A\
VWATAVAWH
!\$x3
A_A^A\_^
WATAUAVAWH
D$(E3
T$@E3
A_A^A]A\_
t$ WAVAWH
 A_A^_
WATAUAVAWH
to9{0ueH
t\D9k
 A_A^A]A\_
VWATAVAWH
D$ E3
@A_A^A\_^
VWATAVAWH
 A_A^A\_^
UVWATAUAVAWH
L$`E3
A_A^A]A\_^]
x AVH
D9A@u
UVWATAUAVAWH
@A_A^A]A\_^]
@USVWAVAWH
hA_A^_^[]
@SUVWAVAWH
9\$<v&H
;\$<r
L$HH3
XA_A^_^][
9^pv!H
@SUWAVH
L$8H3
HA^_][
@USVWATAUAVAWH
uL9s(uG3
XA_A^A]A\_^[]
WAVAWH
0A_A^_
t=;*u#H
UVWATAUAVAWH
A_A^A]A\_^]
;u$s2H
;u,s/H
;u0s2H
;u8s/H
T$pE3
D;t$t
T$@E3
;t$Ds\I
z@8sX
UVWATAUAVAWH
t.D;#u
PA_A^A]A\_^]
t$ WATAUAVAWH
!|$hH
|$hE3
0A_A^A]A\_
\$ UVWATAUAVAWH
OSGNH
ISGNH
A_A^A]A\_^]
H USWH
K SVWH
x ATAVAWH
A_A^A\
@84:u
K !S(
WATAVH
 A^A\_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
WAVAWH
 A_A^_
x AVH
WATAUAVAWH
 A_A^A]A\_
WAVAWH
|$`E3
H9B u
H9j0t
H(H;)r
D3x8H
D1x8H
 A_A^_
YR_7a
B E9A@v$E
R E;A@r
x AVH
qK_6s
q1QP /
q1QP /
q1QP /
p1QP /
q1QP /
qhUX!
WAVAWH
 A_A^_
;{@s1
;{@u(H
q[R\8>
^TX&%
 t9E3
D9YHv6A
B8E;ZHr
L$pH3
WAVAWH
 A_A^_
WATAUAVAWH
T$0E3
T$0E3
A_A^A]A\_H
x AVH
H9A8s
H9A8s
H9A8s
x UATAUAVAWH
D$0H+
D$0H+
D$0H+
D$0H+
D$0H+
D$0H+
L$0E9,
L$0E9,
D$0H+
L$0E9,
`#tN=
L$0H+
L$0H+
  tQ=
T$ H+
T$ H+
T$ H+
T$ H+
T$ H+
0!tG=
D$ H+
D$ H+
T$ L+
T$ L+
T$ L+
T$ H+
D$ H+
D$ H+
L$0F9,
L$0F9,
D$ H+
L$0F9,
D$ H+
D$ H+
D$ H+
D$ H+
D$ H+
D$ H+
D$ H+
D$ H+
T$ L+
L$0H+
D$@H+
T$ L+
T$@L+
D$ H+
T$ L+
T$ L+
A_A^A]A\]
(t$ H
x AVH
(t$@L
(|$0I
VWATAVAWH
FXLCH
CLI4H
A_A^A\_^
x AVH
|$(A^
w.t]=
P#t*=
`#t#=
UWAUAVAWH
RDEFH
ISGNH
OSGNH
SHDRH
A_A^A]_]
UWATAVAWH
D$@E3
D$HH9D$8
HcD$PH
L$PE3
T$XHi
A_A^A\_]
WATAUAVAWH
D$(fI
0A_A^A]A\_
UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
        E
        
        E
`A_A^A]A\_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
WAVAWH
 A_A^_
\$ UVWATAUAVAWH
D$hA;
D$HE3
L$0v1H
phUX!
p[R\8>
D$HE3
A_A^A]A\_^]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
psR>X.
pPVPe7
T~m7Y
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
pAU6g
psR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
q8[:d
qsR>X.
WATAUAVAWH
p8[:d
p8[:d
A_A^A]A\_
qAU6g
psR>X.
qAU6g
psR>X.
qAU6g
psR>X.
pAU6g
qAU6g
H!sHH
psR>X.
qAU6g
psR>X.
qAU6g
psR>X.
UVWATAUAVAWH
D$ D;
A_A^A]A\_^]
SHDRH
@SUVWATAUAVAWH
(A_A^A]A\_^][
WAVAWH
 A_A^_
SDBG;
FX10tQ
CLI4tI
CTABtA
FXLCt9
SMIDt1
SDTLt!
x ATAVAWH
DXBCfD
 A_A^A\
UVWATAUAVAWH
D$0E3
:DXBC
H+D$ u
H+D$(H
L$0H3
@A_A^A]A\_^]
WAVAWH
 A_A^_
WATAUAVAWH
 A_A^A]A\_
D$@E3
x AVH
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
Software\Microsoft\Direct3D
DXEnableCapture
DXCaptureReplay.dll
Software\Microsoft\DXTools
LoadFromAnywhere
D3D10LoadDebugRuntime
d3d10d.dll
D3D10CreateDeviceGenerated
GetRealPtrPtrD3D10CreateDevice
D3D10.1 ERROR: D3D10.1 header version mismatch.
The application was compiled against and will only work with D3D10_1_SDK_VERSION (%d), but the currently installed runtime is version (%d).
Recompile the application against the appropriate SDK for the installed runtime.
D3D10CreateDeviceAndSwapChainGenerated
GetRealPtrPtrD3D10CreateDeviceAndSwapChain
LazyAttachToMonitor
gy3D3D10CompileShader
Shader@0x%p
ps_4_0
vs_4_0
gs_4_0
#pragma pack_matrix(row_major)
#pragma pack_matrix(column_major)
#pragma pack_matrix()
#pragma ruledisable 0x%08x
#pragma def (%s, %s, %g, %g, %g, %g)
#pragma warning (once:%d)
#pragma warning (disable:%d)
#pragma warning (error:%d)
D3D10PreprocessShader
internal error: expression expected
expressions returning objects in an array or struct not yet implemented
asm blocks have not yet been implemented
non-trivial object expressions not yet implemented
fx_4_0
unrecognized compiler target '%s'
vs_3_sw
ps_3_sw
'%s': entrypoint not found
overloaded function not found
cannot mix packoffset elements with nonpackoffset elements in a cbuffer
stream object '%s' cannot be declared on the global scope
unroll
branch
flatten
forcecase
internal error: unrecognized statement
can't use branch, flatten, call  or case attributes together
non-empty case statements must have break or return
Fall-throughs in switch statements are not allowed.
internal error: no storage type for switch output
internal error: invalid range data on switch output
error, duplicate default in switch statement
error, duplicate case %u
can't use branch and flatten attributes together
case ordinal too large for floating poing representation
can't flatten with flow control when variable is bound to b register
cant use flow control on this profile
can't emit if statement with both gradients and program flow control
can't force branch with gradients
can't flatten if statements that contain side effects
can't flatten if statements that contain out of bounds array accesses
can't flatten if statements that contain out of bounds array accesses, forcing loop to unroll
internal error: flattened side effect
can't use loop and unroll attributes together
Can't unroll loops marked with loop attribute
Loop only executes for %d iteration(s), forcing loop to unroll
Cannot map loop to shader target, target does not support breaks
Cannot map loop to shader target, forcing loop to unroll
Can't use gradient instructions in loops with break
Can't use gradient instructions in loops with break, forcing loop to unroll
Loop doesn't seem to do anything, forcing loop to unroll
Infinite loop detected
texture access must have literal offset and multisample index
Forced to unroll loop, but unrolling failed.
Unable to unroll loop, loop does not appear to terminate in a timely manner (%d iterations)
internal error: invalid sequence/cast expression
internal error: l-value expected
Bitwise operations not supported on legacy targets.
internal error: AND operater inputs not bool
internal error: OR operater inputs not bool
function '%s' missing implementation
internal error: unrecognized expression
internal error: inconsitent addressing
internal error: addressing inconsistent pool
internal error: result register invalid
internal error: out of memory
DX9-style intrinsics are disabled when not in dx9 compatibility mode.
Texture objects/streams not supported on legacy targets
Sampler parameter must come from a literal expression.
tex1D will considered dependent since texcoord was not declared as at least float2
texcube instructions cannot have integer offsets
intrinsic function '%s' is not yet implemented
return type of texture too large. Cannot exceed 4 components
duplicate attribute %s
internal error: unable to emit attribute parameters
unknown attribute %s, or attribute invalid for this statement
'%s': input parameter '%s' conflicts with geometry specifier of previous input parameters
'%s': stream input parameter '%s' must be an inout parameter 
'%s': stream input parameter '%s' can only be used in geometry shaders
'%s': input parameter '%s' cannot have a geometry specifier
'%s': input parameter '%s' must have a geometry specifier
'%s': input parameter '%s' missing semantics
'%s': function return value missing semantics
'%s': stream output parameter '%s' must be an inout parameter 
'%s': stream output parameter '%s' can only be used in geometry shaders
'%s': output parameter '%s' missing semantics
'%s': output parameter '%s' not completely initialized
'%s': Geometry shaders can't return values
'%s': recursive functions not yet implemented
maxvertexcount
MaxVertexCount
'%s' must have a max vertex count
'%s' must have a max vertex count greater then 0
'%s': Not all control paths return
internal error: unassociated return
array index out of bounds
array reference cannot be used as an l-value; not natively addressable
array reference cannot be used as an l-value; not natively addressable, forcing loop to unroll
sampler array index must be a literal expression
sampler array index must be a literal expression, forcing loop to unroll
break must be inside loop
continue must be inside loop
Structure being emitted has elements with no semantic defined
'%s': undefined variable
internal error: unrecognized value
internal error: chain register invalid
internal error: operand type mismatch
Integer divides may be much slower, try using uints if possible.
Integer modulus may be much slower, try using uints if possible.
internal error: argument missing context (A%u)
internal error: unknown node
constant
texture
user defined %s buffers cannot be target specific
invalid register specification, expected '%c' binding
input types for geometry shader must be arrays
point
triangle
lineadj
triangleadj
array dimension for %s must be %i
GS Input
$Globals
register or offset bind %s.%s not valid
SV_PrimitiveId
Duplicated input semantics can't change type, size, or layout ('%s').
Cannot declare streams as an input for geometry shader primitives, it must be its own parameter.
SV_PrimitiveId is an invalid input semantic for geometry shader primitives, it must be its own parameter.
D3DCOLORtoUBYTE4
asfloat
asint
asuint
atan2
clamp
cross
degrees
determinant
distance
faceforward
floor
frexp
fwidth
isfinite
isinf
isnan
ldexp
length
log10
noise
normalize
radians
reflect
refract
round
rsqrt
saturate
sincos
smoothstep
tex1D
tex1Dbias
tex1Dgrad
tex1Dlod
tex1Dproj
tex2D
tex2Dbias
tex2Dgrad
tex2Dlod
tex2Dproj
tex3D
tex3Dbias
tex3Dgrad
tex3Dlod
tex3Dproj
texCUBE
texCUBEbias
texCUBEgrad
texCUBElod
texCUBEproj
transpose
trunc
Append
RestartStrip
GetDimensions
width
levels
Sample
SampleBias
SampleCmp
SampleCmpLevelZero
SampleGrad
SampleLevel
elements
height
depth
samples
syntax error
yacc stack overflow
asm_fragment
break
BlendState
Buffer
catch
cbuffer
class
centroid
column_major
compile
compile_fragment
const
const_cast
continue
CompileShader
default
delete
discard
double
dynamic_cast
DepthStencilState
DepthStencilView
explicit
extern
false
float
friend
GeometryShader
inline
inout
linear
LineStream
matrix
mutable
nointerpolation
namespace
noperspective
operator
packoffset
pixelfragment
private
protected
public
pixelshader
the 'pixelshader' keyword is deprecated and reserved in strict mode
PointStream
PixelShader
register
reinterpret_cast
row_major
return
RasterizerState
RenderTargetView
sampler1D
sampler2D
sampler3D
samplerCUBE
sampler_state
shared
short
signed
sizeof
snorm
stateblock_state
static
static_cast
string
struct
switch
sampler
stateblock
String
SamplerState
SamplerComparisonState
tbuffer
template
throw
typedef
typename
technique
technique10
texture1D
texture2D
texture3D
textureCUBE
alternate cases for 'Texture1D' are deprecated in strict mode
alternate cases for 'Texture2D' are deprecated in strict mode
alternate cases for 'Texture3D' are deprecated in strict mode
alternate cases for 'TextureCube' are deprecated in strict mode
Texture1D
Texture1DArray
Texture2D
Texture2DArray
Texture3D
TextureCube
TriangleStream
Texture2DMS
Texture2DMSArray
uniform
union
unorm
unsigned
using
vector
vertexfragment
virtual
volatile
vertexshader
the 'vertexshader' keyword is deprecated and reserved in strict mode
VertexShader
while
alternate cases for 'asm' are deprecated in strict mode
alternate cases for 'decl' are deprecated in strict mode
alternate cases for 'pass' are deprecated in strict mode
alternate cases for 'technique' are deprecated in strict mode
internal error: stack underflow
TypeDefs
invalid use of '%s'
untyped textures are deprecated in strict mode
the 'sampler1D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'sampler2D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'sampler3D' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'samplerCUBE' keyword is deprecated in strict mode; use 'SamplerState' instead
the 'stateblock' keyword is deprecated in strict mode
non-numeric sample count
Semantics
Value
VariableDim
'%s' already has a body
Stmts
Passes
States
DX9-style 'LHS = <RHS>' syntax is deprecated in strict mode
CaseConditions
DwordExpr
DX9-style 'compile' syntax is deprecated in strict mode
DX9-style '= sampler_state' syntax is deprecated in strict mode
Arguments
comma expression used where an initializer list may have been intended
internal error: unhandled production
Stack
version token
token '%s'
integer constant
float constant
string constant
end of line
end of file
token
syntax error: unexpected %s
internal error: production failed!
internal error: scope underflow
internal error: scope missing
redefinition of '%s'
redefinition of formal parameter '%s'
DeclStmts
variable
function
'%s': identifier represents a %s, not a %s
'%s': loop control variable used outside for-loop scope conflicts with a previous declaration in the outer scope; most recent definition used
unsigned can not be used with type %s
%cnorm can not be used with type %s
'%s': ambiguous function call
Values
dword
undeclared identifier '%s'
Decls
TypeDeclStmts
'%s': array dimensions must be literal scalar expressions
'%s': array dimensions of type must be explicit
'%s': array dimension must be between 1 and 65536
invalid usage modifier applied to cbuffer
invalid usage modifier applied to tbuffer
CBUFFER
NameSpace
global variables
structure members
function parameters
local variables
loop control variables
annotation members
initial value
initializer
default value
value
VarDeclStmts
'%s': secondary array dimensions must be explicit
'%s': array dimensions of %s must be explicit
'%s': implicit array missing %s
'%s': implicit array type does not match %s
'%s': invalid shader target/usage
'%s': %s cannot be target specific
'%s': %s cannot be declared 'inline'
'%s': %s cannot be declared 'const'
'%s': output paramaters cannot be declared 'const'
'%s': %s must be numeric
'%s': extern %s cannot be declared 'static'
'%s': uniform %s cannot be declared 'static'
'%s': %s cannot be declared 'static'
'%s': %s cannot be declared 'uniform'
'%s': %s cannot be declared 'uniform out'
'%s': %s cannot be declared 'extern'
'%s': %s cannot be declared 'shared'
'%s': %s cannot be declared 'volatile'
'%s': %s cannot have %ss
'%s': non-numeric uniform %s cannot have %ss
'%s': output only %s cannot have %ss
'%s': %s must be a literal expression
'%s': missing %s
'%s': %s cannot have semantics
'%s': %s cannot have annotations
'%s': functions cannot be declared 'uniform'
'%s': functions cannot be declared 'extern'
'%s': function return value must be numeric
'%s': missing default value for parameter '%s'
'%s': void function cannot have a semantic
'%s': function return value differs from prototype
CBuffer
UsageType
non-matrix types cannot be declared 'row_major' or 'column_major'
Attributes
duplicate usages specified
constinterp usage cannot be used with linear, noperspective, or centroid usage
conflicting geometry types
vector dimension must be a literal scalar expression
vector dimension must be between 1 and %u
matrix dimensions must be literal scalar expressions
matrix dimensions must be between 1 and %u
array dimensions must be literal scalar expressions
const 
snorm float
snorm half
snorm double
unorm float
unorm half
unorm double
Texture2DArrayMS
geometryshader
unknown
%s%s%u
%s%s%ux%u
%sstruct{%u}
implicitly 
cannot %sconvert from '%s' to '%s'
'%s': cannot %sconvert from '%s' to '%s'
Inputs
Outputs
'%s': function does not take %u parameter%s
'%s': intrinsic function does not take %u parameter%s
Parameters
object literals are not allowed inside functions
Types
constructors only defined for numeric base types
cannot convert from 'object type' to 'numeric type'
incorrect number of arguments to numeric-type constructor
%s object does not have methods
%s method of object %s does not take these arguments
%s object does not have method '%s'
'%s': method  does not take %u parameter%s
Method and Parameters
Swizzle
invalid subscript '%s'
conditional must be numeric
type mismatch between conditional values
dimension of conditional does not match value
array expected
scalar expected
unsupported compiler target '%s'
geometry shader fragments are not supported
int, or unsigned int type required for bitwise operators
scalar, vector, or matrix expected
l-value specifies const object
object assignments are not allowed inside functions
type mismatch
Couldn't cast expression to boolean for logical not operator
Couldn't cast expression to boolean for logical operator
'%s': void functions cannot return a value
'%s': function must return a value
if statement conditional expressions must evaluate to a scalar
could not cast condition to boolean
scalar value expected
could not cast condition to uint
non-scalar case expression
non-numeric case expression
CaseStmts
non-constant attribute parameter
AttrParams
}O'()
;A>C[>C
),O}C}S}UC<,>}C
^bc=<d>
stuvwxyz{,}<[
()[>,
'()Co
;()<),[,{
))),,,.'()
{)<A,
>>>>>:;
4>:{{
(({{((
(stuvwxyz{
(?.,)
),=])
),(])
:;,.(?
;:;<=;
:)(},)[)
,;<=;
))=:;
)?{))
)*+,-
stuvwxyz{
+)-+,-
(&?+)-
+)-+,-
(&?+)-
+)-+,-
*+,-./
;<=>?
)*+,-./
^:;<=>?
)*+,-./
]^:;<=>?
)*+,-./
]^:;<=>?
)*+,-./
]^:;<=>?
[)*+,-
:;<=>?
YYYYYYYYY
>Y[YSYg
^^[\^
gc]Oad
>hta>?
>?ua??
ss``g
YSYSWWhggU
Ul[[f55
WWWWWWWWW
*+,-./012
456789:;<=
*+,-./012
456789:;<=
*+,-./012
456789:;<=
*+,-./012
456789:;<=
*+,-./012
456789:;<=
*+,-./012
456789:;<=
*+,-./012
6789:;
*+,-./012
56789:;<=
*+,-./012
6789:;<
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
*+,-./012
()*+,-./012@
456789:;<=
()*+,-./012@
456789:;<=
()*+,-./012
456789:;<=
 !A"#$
()*+,-./012
456789:;<=
*+,-./012
56789:;<=
*+,-./012
56789:;<=
*+,-./012
56789:;<=
*+,-./012
56789:;<=
*+,-./012
56789:;<=
*+,-./012
6789:;<
*+,-./012
6789:;<
*+,-./012
6789:;<
*+,-./012
6789:;<
????-
HIJKLMe
)20*u}P$OoN&M(
v~1ghijkl'
<=>HIJK
abcdef
  ''$$$$$)))))))))**++,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,%%
""/1102224455
333366
7998:<<=====@@
AAB###CCDDEEE
FFHHHIJKKLMMNNOOOOOOOOOOOOOO
QQRSTTU;;VWXXYYYZZ[]GGbcddfffffffffffffggggggeeeeeeeeeeeemmnnollhiiijjkkpppppppsssssuuuttttttttttyyzzzzzz{{{{{{{||}}}}---...`````~~~
>>>>>>>>>>>>
??(\\
aaaqqqqrr
&^vwx
`SetPixelShader
SetVertexShader
SetGeometryShader
SetRasterizerState
SetBlendState
SetDepthStencilState
SetRenderTargets
ConstructGSWithSO
parameter count mismatch (%s)
this FX API is not available in this part your program (%s)
Unrecognized FX function call (%s)
invalid function call
D3D10_SHADER_SKIP_OPTIMIZATION
D3D10_SHADER_AVOID_FLOW_CONTROL
D3D10_SHADER_PREFER_FLOW_CONTROL
invalid compiler flag %s
No include handler specified, can't perform a #include. Use D3DX APIs or provide your own include handler.
failed to open source file: '%s'
unexpected tokens following preprocessor directive
unexpected end of file
__FILE__
__LINE__
DIRECT3D
D3D10_COMPILER
HLSL_VERSION
DIRECT3D_VERSION
D3DX_VERSION
D3D10
define
endif
error
ifdef
fndef
include
pragma
undef
defined
invalid or unsupported integer constant expression
division by zero in preprocessor expression
invalid preprocessor command '%s'
duplicate macro parameter '%s'
include interface required to support #include from resource or memory
too many nested #includes
error: %s
unexpected #elif
unexpected #elif following #else
unexpected #else
unexpected #else following #else
unexpected #endif
pack_matrix
warning
ruledisable
disable
'%s' : macro redefinition
functional defines in preprocessor expressions not yet implemented
unexpected end of file in macro expansion
not enough actual parameters for macro '%s'
internal error: production failed
<(>/+
4567+
+)-))
>?:)<
>?:)<:>?:)<
>?:)<
>?:)<
>?:)<)>?:<<;>?:
CDEF3!289AB"GH
! !(!!"#")""
 K J  #
!!!!!!""""""
      
$$$$&&
%+7DP\
 !"#$%
(%u): 
error X%u: 
Error creating error string
%s X%u: 
Unable to create warning string
integer '%u'
integer '%dl'
integer '%uul'
float '%g'
float '%gh'
float '%gf'
float '%gl'
syntax error : unexpected %s
comment continues past end of file
hex value truncated to 32bits
octal value truncated to 32bits
decimal value truncated to 32bits
string continues past end of file
string continues past end of line
character continues past end of file
Semantic length is limited to %d characters
_centroid
Zero character semantics aren't allowed
SV_ClipDistance
SV_CullDistance
VFace
internal error: not all rules initialized
internal error: Rule class id invalid
$Params
(unknown)
internal error: memory argument used without address (I%u, A%u)
variable '%s' used without having been completely initialized
internal error: argument used without having been initialized (A%u, I%u)
internal error: output argument was never initialized (A%u)
internal error: cannot write to argument pool (A%u, I%u)
internal error: cannot read from argument pool (A%u)
internal error: argument was never used (A%u, I%u)
internal error: argument was never used (A%u)
Use of potentially uninitialized variable (%s)
internal warning: optimization did not converge
internal error: legacy preshader support not in this version of the compiler
preshader
optimizations not converging
Internal error: unpredicated endif input
Internal error: invalid read of more specific predicate
internal error: unpredicated incomplete
internal error: unpredicated loop_in
Internal error: unread predicate
cannot have divergent gradient operations inside flow control
cannot have divergent gradient operations inside loops
internal error: argument pulled into unrelated predicate
internal error: consume instruction does not have unique input
internal error: consume instruction expects input from mov not have unique input
internal error: consume move read by multiple instructions
internal error: component out of range
internal error: invalid register
%s semantic '%s'
input
output
Internal error: conflicting range data
reduce literal lit instruction
symmetric min or max on value
symmetric cmp
reduce mov instruction
Eval range add inf flag if range not bound
Eval range add pos flag if range bound positive
Eval range add neg flag if range bound negative
Eval range add unit flag if range bound unit
eval mov
eval neg
eval rcp
eval frc
eval exp
eval log
eval rsq
eval sin
eval cos
eval asin
eval acos
eval atan
eval dsx
eval dsy
frc of bool to zero
frc of int to zero
double negative to original
eval cmp
ABS(a), a negative -> NEG(a)
ABS(a), a positive -> a
double rcp identity
exp(log(x)) identity
log(exp(x)) identity
positive sqrt(x*x) identity
rcp( mul ( x, rsq(x)) = rsq(x) identity
exp(a*log(0)) = 0 identity
XXX who knows???
min of known positive identity
max of known positive identity
lt of known range reduction
ge of known range reduction
add of zero identity
mul of zero identity
mul of one identity
mul of a half times add of same value identity
atan of knwn 0 or 1 identity
add of negative of itself identity
mul of a number times its inverse identity
A * B/A with negative variations on A
negative bool less then another bool identity
sqrt times sqrt of positive value equals the original value identity
bool multiply chain reduction
dot of partial nullity reduction
rsq(x) * rsq(x) -> rcp(x) for positive x
1 / sqrt(x) -> rsq(x)
1 / x -> rcp(x)
eval lt
eval ge
eval add
eval mul
eval atan2
binary expression with negative symmetry reduction
cmp of known positive identity
cmp of known negative identity
cmp of negated bool identity
cmp diff to basic logic identity
movc(!a,b,c) -> movc(a,c,b)
movc(movc(a,TRUE,FALSE),b,c) -> movc(a,b,c)
movc(bool b, TRUE, FALSE) -> mov b
movc(bool b, FALSE, TRUE) -> not b
movc(bool b, TRUE, bool c) -> or(b,c)
movc(bool b, bool b, false) -> mov b
movc and comparitor sequence reductions
movc(TRUE,b,c) -> mov(b)
movc(FALSE,b,c) -> mov(c)
MOVC(a,b,b) -> MOV(b)
movc((a<b),a,b) -> min(a,b)
movc((a>=b),a,b) -> max(a,b)
movc((a<b),b,a) -> max(a,b)
movc((a>=b),b,a) -> min(a,b)
integer movc((a<b),a,b) -> min(a,b)
integer movc((a>=b),a,b) -> max(a,b)
integer movc((a<b),b,a) -> max(a,b)
integer movc((a>=b),b,a) -> min(a,b)
unsigned integer movc((a<b),a,b) -> min(a,b)
unsigned integer movc((a>=b),a,b) -> max(a,b)
unsigned integer movc((a<b),b,a) -> max(a,b)
unsigned integer movc((a>=b),b,a) -> min(a,b)
nullify clip ops on known positive values
Negative values for cmp and clip can be rordered
Negative value compared with zero
Sequence of compares
FRC of add with integer can bypass add
Mulitply by 1 reduces to no-op move
Multiply by -1 reduces to NEG operation
shift of communitive literals
combine of communitive literals
shift of communtiive inputs
ILT a,a -> false
IGE a,a -> true
ULT a,a -> false
UGE a,a -> true
iadd zero reduces to no-op mov
imul one reduces to no-op mov
imul zero reduces to literal zero
Integer addition negative identities
negate modifier match
min max to saturate modifier match
min of positive value to saturate modifier match
abs instruction to abs modifier match
integer negate modifier match
mad match 1 (a + b*c)
mad match 2 (a - b*c)
mad match 3 (a + (b+b)
mad match 4 (a - (b+b)
imad match 1 (a + b*c)
imad match 2 (a + (b+b)
breakn match
continuen match
breaka match
continuea match
break never match (to NOP)
continue never match (to NOP
breakge match
breaklt match
max of neg idenity to abs instruction match
1 / resinfo with float parameters to rcpfloat modifier match
propogate swizzles
vectorize tunnel through mul
vectorize tunnel through neg
vectorize tunnel through add
Emit return instructions
Emit output arrays
reorder instructions to minimize register load
Use replicate swizzles to squish literal arrays
Try swizzling literal arrays to fit them together
Try to match temp array loads to their original store
Remove temp array stores that are immediately overwritten
Try to reduce known values to movs
Try to combine like instructions
mov of sampler register reduction
Compact Registers - Paint 
Compact Registers - Press Moves
Compact Registers - Press Loop Ins
Compact Registers - Compress
rsq(x) * rsq(x) -> rcp(x)
Literal in Log * Mul * Exp pattern
Addition of same argument is same as multiply by 2
Multiply by 2, 4, or 8
range sequence reduction
Multiply by 0 reduces to literal 0
Known literals reduced to mov
NOT BLT => BGE
NOT BGE => BLT
NOT BEQ => BNE
NOT BNE => BEQ
NOT BILT => BIGE
NOT BIGE => BILT
NOT BIEQ => BINE
NOT BINE => BIEQ
NOT BULT => BUGE
NOT BUGE => BULT
X AND TRUE => X
X OR FALSE => X
A + B for boolean A & B -> OR A, B
A * B for boolean A & B -> AND A, B
Needs to be replaced with a real rule
propagate floating point value flags through mov
propagate floating point integer flag through neg
propagate floating point integer flag through exp
generate unit flag for non special input to sin
generate unit flag for non special input to cos
propagate floating point integer flag through dsx/y
sqrt(bool) -> bool
round -> integer
floor -> integer
ceil -> integer
trunc -> integer
min(int,int) -> integer
max(int,int) -> integer
lt -> bool
ge -> bool
int + int -> int
int * int -> int
endif int, int -> int
cmp(X,int,int) -> int
movc(X,int float,int float) -> int float
propagate literal value through mov
propagate floating point range through mov
propagate integer range through mov
propagate known bits through mov
evaluate literal neg
evaluate literal rcp
evaluate literal rsq
evaluate literal frc
evaluate literal exp
evaluate literal log
evaluate literal sin
evaluate literal cos
evaluate literal asin
evaluate literal acos
evaluate literal atan
evaluate literal dsx/y
evaluate literal sqrt
evaluate literal ftoi
evaluate literal ftou
evaluate literal ftob
evaluate literal round
evaluate literal floor
evaluate literal ceil
evaluate literal trunc
evaluate literal min
evaluate literal max
evaluate literal lt
evaluate literal ge
evaluate literal add
evaluate literal mul
evaluate literal atan2
evaluate literal div
evaluate literal blt
evaluate literal bge
evaluate literal beq
evaluate literal bne
evaluate literal cmp
evaluate literal movc
evaluate range neg
evaluate range rcp
evaluate range rsq
evaluate range frc
evaluate range exp
evaluate range log
evaluate range sin
evaluate range cos
evaluate range asin
evaluate range acos
evaluate range atan
evaluate range dsx/y
evaluate range sqrt
evaluate range ftoi
evaluate range ftou
evaluate range ftob
evaluate range round
evaluate range floor
evaluate range ceil
evaluate range trunc
generate floating point special flags from mov
generate floating point special flags from neg
generate floating point special flags from rcp
generate floating point special flags from rsq
generate floating point special flags from frc
generate floating point special flags from exp
generate floating point special flags from log
generate floating point special flags from sin
generate floating point special flags from cos
generate floating point special flags from asin
generate floating point special flags from acos
generate floating point special flags from atan
generate floating point special flags from dsx/y
generate floating point special flags from sqrt
generate floating point special flags from round
generate floating point special flags from floor
generate floating point special flags from ceil
generate floating point special flags from trunc
frc(integer) -> 0
eval literal ineg
eval literal not
eval literal itof
eval literal itob
eval literal utof
eval literal btof
eval literal btoi
eval ineg with known range
eval itof with known range
eval utof with known range
eval ineg with some bits known
eval not with some bits known
eval itof with some bits known
eval itob with some bits known
eval utof with some bits known
eval btof with some bits known
eval btoi with some bits known
itof -> INT
utof -> INT
evaluate range min
evaluate range max
evaluate range lt
evaluate range ge
evaluate range add
evaluate range mul
evaluate range atan2
evaluate range div
evaluate range blt
evaluate range bge
evaluate range beq
evaluate range bne
evaluate range endif
generate floating point special flags from min
generate floating point special flags from max
generate floating point special flags from add
generate floating point special flags from mul
generate floating point special flags from atan2
generate floating point special flags from div
generate floating point special flags from endif
eval literal bilt
eval literal bige
eval literal bieq
eval literal bine
eval literal bult
eval literal buge
eval literal iadd
eval literal idiv
eval literal imod
eval literal imul
eval literal udiv
eval literal umod
eval literal umul
eval literal imin
eval literal imax
eval literal umin
eval literal umax
eval literal and
eval literal or
eval literal xor
eval literal ishl
eval literal ishr
eval literal ushr
eval bilt with known range
eval bige with known range
eval bieq with known range
eval bine with known range
eval bult with known range
eval buge with known range
eval iadd with known range
eval idiv with known range
eval imod with known range
eval imul with known range
eval udiv with known range
eval umod with known range
eval umul with known range
eval imin with known range
eval imax with known range
eval umin with known range
eval umax with known range
eval ENDIF with known range
eval bilt with some bits known
eval bige with some bits known
eval bieq with some bits known
eval bine with some bits known
eval bult with some bits known
eval buge with some bits known
eval iadd with some bits known
eval idiv with some bits known
eval imod with some bits known
eval imul with some bits known
eval udiv with some bits known
eval umod with some bits known
eval umul with some bits known
eval imin with some bits known
eval imax with some bits known
eval umin with some bits known
eval umax with some bits known
eval and with some bits known
eval or with some bits known
eval xor with some bits known
eval ishl with some bits known
eval ishr with some bits known
eval ushr with some bits known
eval ENDIF with some bits known
eval movc with some bits known
evaluate range cmp
evaluate range movc
eval movc with known range
generate floating point special flags from cmp
generate floating point special flags from movc
floating point division by zero
imaginary square root
indefinite logarithm
indefinite arcsine
indefinite arccosine
Literal float out of integer range for conversion: %f
Literal float out of unsigned range for conversion: %f
Integer divide by zero
Unsigned integer divide by zero
Floating-point Value out of integer range for conversion: %f
Floating-point Value out of unsigned range for conversion: %f
indefinite derivative calculation
Possible integer divide by zero
UNKNOWN
fxl_4_0
too many arguments to target TX
too many outputs to target TX
clip not supported in texture shaders
position
psize
invalid reference to input semantic '%s%d'
color
invalid reference to output semantic '%s%d'
SV_Position
Position
SV_InstanceID
SV_VertexID
SV_IsFrontFace
SV_RenderTargetArrayIndex
SV_ViewportArrayIndex
SV_PrimitiveID
SV_Depth
SV_Target
Color
Failed to log error, redirecting to debug output:
unknown D3D10 target
maximum cbuffer exceeded. target has %u slots, manual bind to slot %u failed
maximum cbuffer exceeded. target has %u slots
internal error: statistics append failed, byte count (%d) too large?
internal error: debug info append failed, byte count (%d) too large?
internal error: non ordinal input/output found
internal error: scalar instruction with too many inputs
internal error: expected binary instruction for scalar RHS
geometry shader can only emit to 1 stream
Geometry shader didn't emit anything
internal error: modifier used on address
internal error: Constant buffer used as address
internal error: Invalid source modifier
internal error: unexpected input register type
internal error: binary instruction expected
internal error: vectorized instruction too large
internal error: expected scalar RHS for instruction
MSAA Sample Index must resolve to an integer literal in the range 0 to 127
offset texture instructions must take offset which can resolve to integer literal in the range -8 to 7
relative address refrences too deep
Reading uninitialized value
texture mismatch: texture used inconsistently, can only use one DX9-style texture intrinsic on individual samplers or sampler arrays
texture2DMS cannot be more then 127 samples
idiv currently not supported (instruction deprecated). For now, try using unsigned int types for div instead
cannot map expression to vertex shader instruction set
cannot map expression to pixel shader instruction set
cannot map expression to geometry shader instruction set
internal error: failed to emit instruction
SV_Position cannot be constinterp
invalid semantic '%s' on pixel shader output
Maximum number of outputs (%d) exceeded.
Maximum number of inputs (%d) exceeded.
internal error: no semantic found on i/o argument
internal error: output found with no semantic
Not all elements of SV_Position were written
Microsoft (R) HLSL Shader Compiler
`UUe?
Inconsistent semantic definition: %s and %s
Duplicate system value semantic definition: %s and %s
Duplicate non-system value semantic definition: %s and %s
maximum number of samplers exceeded. %s target can have a maximum of %i samplers
%s target does not support texture lookups
internal error: output register missing semantic
internal error: input register missing semantic
maximum number of inputs exceeded
overlapping output semantics
cannot bind the same variable to multiple constants in the same constant bank
invalid register semantic '%s', or variable must be bound to multiple register banks (%c register binding required)
maximum input register index exceeded
maximum boolean register index exceeded - Try reducing number of constant branches
maximum sampler register index exceeded
maximum texture register index exceeded
maximum iterator register index exceeded - Try reducing number of loops
maximum constant register index exceeded - Try reducing number of constants referenced
overlapping register semantics not yet implemented '%c%u'
maximum boolean register index exceeded - Try reducing number of constant branches, take bools out of structs/arrays or move them to the start of the struct
maximum iterator register index exceeded - Try reducing number of loops, take loop counters out of structs/arrays or move them to the start of the struct
maximum iterator register index exceeded - Try reducing number of loops and depth of loops
Invalid %s semantics - POSITIONT0
invalid %s %s
%s semantic '%s' cannot be centroid
%s semantic '%s' has been deprecated; use '%s%d' instead
invalid %s semantic '%s': Legal indices are in [%d,%d]
invalid type used for '%s' %s semantics
internal error: result violated port constraints
internal error: non-vectorized pool violated port constraints
internal error: instruction missing outputs
internal error: IF with size greater then 1 found
constant table info exceeds maximum comment size
Microsoft (R) D3D Shader Compiler
debug info exceeds maximum comment size; no debug info emitted
maximum temp register index exceeded
maximum address register index exceeded
maximum predicate register index exceeded
internal error: unexpected output register type
internal error: overlapping output writes
maximum bool register index exceeded
maximum loop register index exceeded
target does not support relative addressing
sampler mismatch: sampler used inconsistently
Constant variable '%s' bound to register greater than 8191 (%d requested)
D3D10 Assembler Error: Invalid Bytecode: %s
D3D10 Internal Compiler Error: Invalid Bytecode: %s
Validation Error: %s
Bytecode appears corrupt - integrity check failed.
Failed to extract driver shader code.
Failed to extract input signature.
Failed to extract output signature.
Unrecognized shader type.
Failed to parse shader using reference shader parser: 0x%x
Can't continue validation - aborting.
Declaration statements must appear before other instructions.
Incorrect number of operands for opcode #%d (count is 1-based).  Expecting %d, encountered %d.
Saturate modifier not permitted for opcode #%d (counts are 1-based). 
Invalid operand type for operand #%d of opcode #%d (counts are 1-based). 
Expected component count of 0 for operand #%d of opcode #%d (counts are 1-based). 
Expected component count of 1 (or 4 component with select-1 mode) for operand #%d of opcode #%d (counts are 1-based). 
Expected component count of 4 (or 1 component immediate32, or in certain cases NULL or scalar operand allowed) for operand #%d of opcode #%d (counts are 1-based). 
Expected nonzero component mask (or in certain cases also NULL or oDepth operand allowed) for operand #%d of opcode #%d (counts are 1-based). 
Negate modifier not allowed for operand #%d of opcode #%d (counts are 1-based). 
Abs modifier not allowed for operand #%d of opcode #%d (counts are 1-based). 
.rrrr swizzle expected for operand #%d of opcode #%d (counts are 1-based). 
Immediate32 indexing only permitted for operand #%d of opcode #%d (counts are 1-based). Aborting.
4 component with no swizzle expected for operand #%d of opcode #%d (counts are 1-based). 
Unexpected indexing dimension for operand #%d of opcode #%d (counts are 1-based). Aborting.
Invalid indexing mode for first dimension.  Opcode #%d, operand #%d (counts are 1-based). 
Invalid index dimension %d for relative address temp register within dimension 1 of operand.  Opcode #%d, operand #%d (counts are 1-based). 
Index Dimension %d's relative address temp is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Invalid index dimension for relative address indexable temp register within dimension %d of operand.  Opcode #%d, operand #%d (counts are 1-based). 
Index Dimension %d's relative address indexable temp is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d's relative address indexable temp's dimension %d index is out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Invalid relative indexing register type for dimension %d.  Operand #%d of opcode #%d (counts are 1-based). Aborting.
Index Dimension %d out of range (%d specified, max allowed is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Invalid representation for index dimension %d.  Opcode #%d, operand #%d (counts are 1-based). 
GS input primitive not declared. 
GS has no input primitive, so no input regisers may be declared.  Input v[][%d] was declared.
All GS input v[][] registers must have vertex count (first dimension) declared with size equal to the number of vertices in the declared input primitive (%d vertices in this case). Input %d has %d vertices declared. 
GS output topology not declared. 
Input index range defined from %d to %d includes input register %s[%d] that was not declared. 
Registers in an input index range cannot have system names associated with them.  Input register %s[%d] has a name and is in an index range from %d to %d. 
Masks (and if pixel shader, also interpolation mode) on all input registers in an index range must be identical. Input register %s[%d] does not match with others in the index range from %d to %d. 
Named register components cannot appear to the left (xyzw order) of components that are not named in a given register. Affected register is input %d. 
Output index range defined from %d to %d includes output register %d that was not declared. 
Registers in an input index range cannot have system names associated with them.  Output register o%d has a name and is in an index range from o%d to o%d. 
Masks on all output registers in an ndex range must be identical. Output register o%d does not match with others in the index range from o%d to o%d. 
Named register components cannot appear to the left (xyzw order) of components that are not named in a given register. Affected register is output %d. 
CB[%d] already declared, repeated declaration on opcode #%d (count is 1-based). 
Immediate constant buffer already declared, repeated declaration on opcode #%d (count is 1-based). 
Immediate constant buffer size must be a multiple (not incl. 0) of 32bit*4-tuples in size, but no larger than %d 32bit*4-tuples (%d bytes declared).  Opcode #%d (count is 1-based). 
Temp decl already encountered.  Repeated declaration on opcode #%d (count is 1-based). 
Too many temp registers declared (%d).  Max allowed is %d.  Opcode #%d (count is 1-based). 
Sum of temp registers and indexable temp registers exceeds limit of %d..  Opcode #%d (count is 1-based). 
Indexable temp register index, [%d], too high.  Opcode #%d (count is 1-based). Aborting.
Indexable temp x%d already declared.  Opcode #%d (count is 1-based). 
Sum of temp registers and indexable temp registers exceeds limit of %d..  Opcode #%d (count is 1-based). Aborting. 
Invalid component mask in indexable temp decl: 0x%x.  Opcode #%d (count is 1-based). Aborting. 
Resource t%d already declared.  Opcode #%d (count is 1-based). 
Expected sample count of 0 but encountered %d for resource t%d.  Opcode #%d (count is 1-based). 
Texture2DMS resources are only available for input to Pixel Shaders. Opcode #%d (count is 1-based). 
Expected sample count > 0 but encountered %d for resource t%d.  Opcode #%d (count is 1-based). 
Invalid resource dimension on resource t%d.  Opcode #%d (count is 1-based). 
Invalid resource return type on component %d of resource t%d.  Opcode #%d (count is 1-based). 
Sampler s%d already declared.  Opcode #%d (count is 1-based). 
Invalid sampler mode on sampler s%d.  Opcode #%d (count is 1-based). 
Input index range declaration out of range.  Opcode #%d (count is 1-based). 
Overlapping input index range decl encountered.  Opcode #%d (count is 1-based). 
Output index range declaration out of range.  Opcode #%d (count is 1-based). 
Overlapping output index range decl encountered.  Opcode #%d (count is 1-based). 
GS output topology already declared.  Opcode #%d (count is 1-based). 
GS output primitive topology unrecognized.  Opcode #%d (count is 1-based). 
GS output vertex count declaration can't be more than %d vertices (%d specified).  Opcode #%d (count is 1-based). 
GS input primitive already declared.  Opcode #%d (count is 1-based). 
GS input primitive unrecognized.  Opcode #%d (count is 1-based). 
GS input primID already declared.  Opcode #%d (count is 1-based). 
Components of input declaration for register %d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Invalid name or shader for SGV dcl.  Opcode #%d (count is 1-based). 
SGV must have scalar mask in declaration.  Opcode #%d (count is 1-based). 
vertexID already declared for input.  Opcode #%d (count is 1-based). 
instanceID already declared for input.  Opcode #%d (count is 1-based). 
Invalid name or shader for SIV dcl.  Opcode #%d (count is 1-based). 
position already declared for input.  Opcode #%d (count is 1-based). 
Too many unique registers contain clip/cull distance values.  At most %d unique registers can have clip/cull distance in components.  Opcode #%d (count is 1-based). 
Too many total clip/cull distance values.  At most %d allowed (clip+cull total).  Opcode #%d (count is 1-based). 
Components of input declaration for register v%d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Invalid interpolation mode for register v%d.  Opcode #%d (count is 1-based). 
Interpolation mode cannot vary for different components of a single input register (v%d).  Opcode #%d (count is 1-based). 
primitiveID already declared for input.  Opcode #%d (count is 1-based). 
isFrontFace already declared for input.  Opcode #%d (count is 1-based). 
Interpolation mode for PS SGV must be constant (register v%d).  Opcode #%d (count is 1-based). 
Interpolation mode for PS clip or cull distance must be linear or linear centroid (register v%d).  Opcode #%d (count is 1-based). 
renderTargetArrayIndex or viewportArrayIndex must have scalar mask in declaration.  Opcode #%d (count is 1-based). 
renderTargetArrayIndex already declared for input.  Opcode #%d (count is 1-based). 
viewportArrayIndex already declared for input.  Opcode #%d (count is 1-based). 
Interpolation mode for PS renderTargetArrayIndex or viewportArrayIndex must be constant (register v%d).  Opcode #%d (count is 1-based). 
PS output depth already declared.  Opcode #%d (count is 1-based). 
Components of output declaration for register o%d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
Components of output declaration for register %d overlap with previous declaration for same register.  Opcode #%d (count is 1-based). 
primitiveID already declared for output.  Opcode #%d (count is 1-based). 
isFrontFace already declared for output.  Opcode #%d (count is 1-based). 
position declaration must have xyzw mask.  Opcode #%d (count is 1-based). 
position already declared for output.  Opcode #%d (count is 1-based). 
renderTargetArrayIndex already declared for output.  Opcode #%d (count is 1-based). 
viewportArrayIndex already declared for output.  Opcode #%d (count is 1-based). 
Global flags already declared once.  Opcode #%d (count is 1-based). 
Unrecognized global flags.  Opcode #%d (count is 1-based). 
Reference of undeclared temp r%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of range on vertex axis for input v[%d][].  Input primitive type has %d vertices.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared input or undeclared components of input v%s[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing input register from base %s[0] not allowed when register 0 has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared input or undeclared components of index range input starting at base v%s[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing input register from base %s[%d] not allowed when register %d has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared output or undeclared components of output o%d.  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing output register from base o[0] not allowed when register 0 has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared output or undeclared components of index range output starting at base o[%d].  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing output register from base o[%d] not allowed when register %d has not been declared in an index range.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared indexable temp x%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on x%d[size==%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared components of indexable temp x%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared sampler s%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared resource t%d.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared constant buffer cb%d[].  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on cb%d[size==%d] (if size is listed as 0, it means default size is used, which is %d.  Opcode #%d, operand #%d (counts are 1-based). 
Relative indexing not allowed for cb%d since it was not decalred for dynamic indexing..  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared immediate constant buffer.  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of bounds, [%d], on immediate constant buffer [size==%d].  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared register vPrimID.  Opcode #%d, operand #%d (counts are 1-based). 
Reference of undeclared register oDepth.  Opcode #%d, operand #%d (counts are 1-based). 
Index Dimension %d's relative address temp is out of range (%d specified, max allowed based on temp declaration is %d) for operand #%d of opcode #%d (counts are 1-based). Aborting.
Reference of undeclared components of indexable temp x%d[] within relative index of an operand.  Opcode #%d, operand #%d (counts are 1-based). 
Reference out of range of indexable temp x%d[] within relative index of an operand.  Index [%d] specified, but based on the indexable temp declaration, the max index allowed is [%d].  Operand #%d of opcode #%d (counts are 1-based). Aborting.
ld requires resource declared as texture1D/2D/3D/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
ld2dms requires resource declared as texture2DMS/texture2DMSArray.  Opcode #%d, operand #%d (counts are 1-based). 
sample/_l/_d instructions require sampler declared in default mode.  Opcode #%d, operand #%d (counts are 1-based). 
sample/_l/_d requires resource declared as texture1D/2D/3D/Cube/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c_* instructions require sampler declared in comparison mode.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c_* instructions require resource declared as texture1D/2D/Cube, but arrays not allowed.  Opcode #%d, operand #%d (counts are 1-based). 
sample_c/_c_lz instructions require resource to be declared to return UNORM, SNORM or FLOAT.  Opcode #%d, operand #%d (counts are 1-based). 
sample_b requires sampler declared in default mode.  Opcode #%d, operand #%d (counts are 1-based). 
bias amount for sample_b must be in the range [%f,%f], but %f was specified as an immediate. Opcode #%d, operand #%d (counts are 1-based). 
sample_b requires resource declared as texture1D/2D/3D/Cube/1DArray/2DArray.  Opcode #%d, operand #%d (counts are 1-based). 
else statement doesn't match to an if statement. Opcode #%d (count 1-based). Aborting validation.
else statement seen already.  Opcode #%d (count 1-based). Aborting validation.
endif statement doesn't match to an if statement. Opcode #%d (count 1-based). Aborting validation.
endloop statement doesn't match to a loop statement. Opcode #%d (count 1-based). Aborting validation.
endswitch statement doesn't match to a switch statement. Opcode #%d (count 1-based). Aborting validation.
case statement doesn't match to the scope of a switch statement. Opcode #%d (count 1-based). Aborting validation.
case %d (or if bits to be interpreted as float: %f) already seen. Opcode #%d (count 1-based).
default statement doesn't match to the scope of a switch statement. Opcode #%d (count 1-based). Aborting validation.
default statement seen already.  Opcode #%d (count 1-based).
continue/continuec statement not inside loop.  Opcode #%d (count 1-based).
break/breakc statement not inside loop or switch.  Opcode #%d (count 1-based).
label (%d) already defined. Opcode #%d (count 1-based). 
label (%d) must be preceded by a ret. Opcode #%d (count 1-based). Aborting validation.
label (%d) must not be nested inside flow control. Opcode #%d (count 1-based). Aborting validation.
ret can only be followed by case/default/endswitch/endloop/else/endif/label. Opcode #%d (count 1-based). Aborting validation.
break/continue can only be followed by case/default/endswitch/endloop/else/endif. Opcode #%d (count 1-based). Aborting validation.
label (%d) called but not defined.
label (%d) defined but never called.
End of program reached with incomplete flow control structure.
When code ends in subroutine definition, it must end with ret.
Input
Output
%s signature parameter %s (1-based Entry %d) specifies invalid interpolation mode for integer component type. 
%s signature parameter %s (1-based Entry %d) specifies unrecognized or invalid component type. 
%s array signature parameter %s must be indexed literally.
Non system-generated input signature parameter (%s) cannot appear after a system generated value.
%s signature parameter %s (1-based Entry %d) type must be float32. 
%s signature parameter %s (1-based Entry %d) type must be float32 and mask must be xyzw. 
Too many %s signature parameters of type SV_ClipDistance or SV_CullDistance.  Maximum number of registers usable is %i.
%s signature parameter %s (1-based Entry %d) type must be a scalar uint. 
%s signature parameter %s (1-based Entry %d) has an unrecognized system name. 
Input signature parameter #%d (1-based) specifies out of range register %d. 
Input signature parameter #%d (1-based) specifies register %d (or components in the register) that have already been defined. 
Pixel Shader allows output semantics to be SV_Target or SV_Depth only.  Output signature parameter #%d (1-based) specifies semantic %s. 
Output signature parameter #%d (1-based) specifies out of range register %d. 
Output signature parameter #%d (1-based) specifies register %d (or components in the register) that have already been defined. 
Input signature name mismatch with declaration in shader code for component %d in register %d. 
Input signature does not specify component %d of register %d which is declared in the shader code. 
Output signature name mismatch with declaration in shader code for component %d in register %d. 
Output signature does not specify component %d of register %d which is declared in the shader code. 
Unrecognized instruction or instruction not valid in vertex shader.
Unrecognized instruction or instruction not valid in geometry shader.
Declared output vertex count (%d) multiplied by the total number of declared scalar components of output data (%d) equals %d.  This value cannot be greater than %d.
Unrecognized instruction or instruction not valid in pixel shader.
Dest register relative index temp register component %d in r%d uninitialized. Opcode #%d (count is 1-based)
Dest register relative index indexable-temp register component %d in x[%d][%d] uninitialized. Opcode #%d (count is 1-based)
source register relative index temp register component %d in r%d uninitialized. Opcode #%d (count is 1-based)
source register relative index indexable-temp register component %d in x[%d][%d] uninitialized. Opcode #%d (count is 1-based)
source component %d in temp r%d not initialized. Opcode #%d (count is 1-based)
source indexable temp register component %d in x%d[%d] not initialized. Opcode #%d (count is 1-based)
source indexable temp register component %d in x%d[*] never initialized anywhere.Opcode #%d (count is 1-based)
Instructions calculating derivatives across pixels, and using temp storage or indexed values for input coordinates, are not permitted within flow control that has a branch condition that could vary across pixels. Opcode %d (count is 1-based).
D3D10CreateEffectFromMemory
D3D10CreateEffectPoolFromMemory
D3D10CompileEffectFromMemory
SV_TARGET
SV_DEPTH
D3D10ReflectShader
$Invalid
FALSE
WIREFRAME
SOLID
MIN_MAG_MIP_POINT
MIN_MAG_POINT_MIP_LINEAR
MIN_POINT_MAG_LINEAR_MIP_POINT
MIN_POINT_MAG_MIP_LINEAR
MIN_LINEAR_MAG_MIP_POINT
MIN_LINEAR_MAG_POINT_MIP_LINEAR
MIN_MAG_LINEAR_MIP_POINT
MIN_MAG_MIP_LINEAR
ANISOTROPIC
COMPARISON_MIN_MAG_MIP_POINT
COMPARISON_MIN_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_POINT_MAG_MIP_LINEAR
COMPARISON_MIN_LINEAR_MAG_MIP_POINT
COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR
COMPARISON_MIN_MAG_LINEAR_MIP_POINT
COMPARISON_MIN_MAG_MIP_LINEAR
COMPARISON_ANISOTROPIC
TEXT_1BIT
SRC_COLOR
INV_SRC_COLOR
SRC_ALPHA
INV_SRC_ALPHA
DEST_ALPHA
INV_DEST_ALPHA
DEST_COLOR
INV_DEST_COLOR
SRC_ALPHA_SAT
BLEND_FACTOR
INV_BLEND_FACTOR
SRC1_COLOR
INV_SRC1_COLOR
SRC1_ALPHA
INV_SRC1_ALPHA
CLAMP
MIRROR
BORDER
MIRROR_ONCE
FRONT
NEVER
EQUAL
LESS_EQUAL
GREATER
NOT_EQUAL
GREATER_EQUAL
ALWAYS
REPLACE
INCR_SAT
DECR_SAT
INVERT
SUBTRACT
REV_SUBTRACT
Stage linkeage warning: Semantic %s has been placed in different registers in the two stages.
Stage linkeage warning: Semantic %s has been inconsistently defined in the two stages.
Stage linkeage warning: Semantic %s is read from, but it's never written to.
%s: ERROR: No valid VertexShader-GeometryShader-PixelShader combination could be found in Technique %s, Pass %s.
%s: WARNING: There exist invalid VertexShader-GeometryShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
%s: ERROR: No valid VertexShader-PixelShader combination could be found in Technique %s, Pass %s (this is an issue because the GeometryShader is always NULL).
%s: WARNING: There exist invalid VertexShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen (this is an issue because the GeometryShader is always NULL).
%s: ERROR: No valid VertexShader-GeometryShader combination could be found in Technique %s, Pass %s.
%s: ERROR: No valid GeometryShader-PixelShader combination could be found in Technique %s, Pass %s.
%s: WARNING: There exist invalid VertexShader-GeometryShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
%s: WARNING: There exist invalid GeometryShader-PixelShader combinations in Technique %s, Pass %s, depending on which elements of the specified shader array(s) are chosen.
9_D3D10EffectLoader
(unnamed)
RASTERIZERSTATE
DEPTHSTENCILSTATE
BLENDSTATE
RENDERTARGETVIEW
DEPTHSTENCILVIEW
GENERATEMIPS
VERTEXSHADER
PIXELSHADER
GEOMETRYSHADER
DS_STENCILREF
AB_BLENDFACTOR
AB_SAMPLEMASK
FILLMODE
CULLMODE
FRONTCOUNTERCLOCKWISE
DEPTHBIAS
DEPTHBIASCLAMP
SLOPESCALEDDEPTHBIAS
DEPTHCLIPENABLE
SCISSORENABLE
MULTISAMPLEENABLE
ANTIALIASEDLINEENABLE
DEPTHENABLE
DEPTHWRITEMASK
DEPTHFUNC
STENCILENABLE
STENCILREADMASK
STENCILWRITEMASK
FRONTFACESTENCILFAIL
FRONTFACESTENCILDEPTHFAIL
FRONTFACESTENCILPASS
FRONTFACESTENCILFUNC
BACKFACESTENCILFAIL
BACKFACESTENCILDEPTHFAIL
BACKFACESTENCILPASS
BACKFACESTENCILFUNC
ALPHATOCOVERAGEENABLE
BLENDENABLE
SRCBLEND
DESTBLEND
BLENDOP
SRCBLENDALPHA
DESTBLENDALPHA
BLENDOPALPHA
RENDERTARGETWRITEMASK
FILTER
ADDRESSU
ADDRESSV
ADDRESSW
MIPMAPLODBIAS
MAXANISOTROPY
COMPARISONFUNC
BORDERCOLOR
MINLOD
MAXLOD
TEXTURE
D3D10EffectCompiler
register or offset bind %s not valid
There was an unexpected error in the parse tree
float1
float2
float3
float4
uint1
uint2
uint3
uint4
bool1
bool2
bool3
bool4
float1x1
float1x2
float1x3
float1x4
float2x1
float2x2
float2x3
float2x4
float3x1
float3x2
float3x3
float3x4
float4x1
float4x2
float4x3
float4x4
int1x1
int1x2
int1x3
int1x4
int2x1
int2x2
int2x3
int2x4
int3x1
int3x2
int3x3
int3x4
int4x1
int4x2
int4x3
int4x4
uint1x1
uint1x2
uint1x3
uint1x4
uint2x1
uint2x2
uint2x3
uint2x4
uint3x1
uint3x2
uint3x3
uint3x4
uint4x1
uint4x2
uint4x3
uint4x4
bool1x1
bool1x2
bool1x3
bool1x4
bool2x1
bool2x2
bool2x3
bool2x4
bool3x1
bool3x2
bool3x3
bool3x4
bool4x1
bool4x2
bool4x3
bool4x4
Variable has an invalid type; is the structure definition empty?
Incorrect number of rows or columns
Objects not allowed in structures
Only single-dimensional object arrays are allowed
Unexpected template type
Unexpected component type
Unexpected node encountered when trying to determine type
There was a problem getting annotations
Only numeric types and strings are allowed as annotations
This object can only be bound to one slot in this version of Effects
Numeric variables ('%s') can't be shared; share the containing cbuffer instead
Only numeric variables ('%s') can be added to a cbuffer
Error: constant buffer %s has both user-defined offset and compiler-assigned offsets
Constant buffers, functions, and techniques cannot be nested inside of constant buffers
Unnamed objects are not allowed
Only passes are allowed within a technique
Redefinition of pass "%s"
Rasterizer
DepthStencil
Blend
Sampler
<unknown>
DX9-style assignment syntax is deprecated in technique10 pass blocks in favor of new function call syntax
Unrecognized state '%s'
State '%s' belongs in %s blocks, not %s blocks
State '%s' is not indexed
Max index for effect state '%s' is %d
Index is required for state '%s'
Internal error: unrecognized SB API Call
Internal error: unrecognized assignment type
Unrecognized RHS value in assignment: '%s'
There was an error compiling HLSL shader variable
StreamOut declarations must be a literal string
Invalid StreamOut decl: %s
Invalid StreamOut decl
Undefined shader variable '%s'
ConstructGSWithSO can't operate on array references
Stream output geometry shaders can only be created from valid 4.0 vertex and geometry shaders
Stream output geometry shaders can only be created from non-NULL shaders
Identifier invalid or not found (were you attempting a forward reference?)
Illegal initializer for a numeric variable
Can't create/set an invalid shader. Make sure your shader is valid, and make sure you're not using asm shaders in SM4.0
Illegal initializer
Unrecognized token %s
Only shader model 4.0 is allowed in D3D10 techniques
There was an error compiling expression
Assignment %s: Only literal right-hand side values are allowed in state blocks in Effects performance mode
Assignment %s: Non-array right-hand type expected
Assignment %s: Reference to shader variable '%s' not valid for D3D10 techniques because it contains deprecated shader models
Assignment %s: Left-hand side type does not match right-hand side type
Assignment %s: Attempting to assign an incompatible inline shader
Assignment %s: Only 0 and NULL are valid constants for an object assignment
Assignment %s: Dimensionality mismatch (LHS expects %d, RHS has %d)
Invalid assignment index (%u). Maximum allowed is %u.
TEXTURE assignments inside of samplers cannot be variable indexed
TEXTURE assignments inside of samplers cannot be expression indexed
Assignment %s: Expressions cannot be evaluated to produce objects, though they may be used to index into arrays of objects
Assignment %s: Objects left-hand sides cannot be assigned to expressions
output slot must be less than 256
invalid mask declaration '%s'
$Anonymous
a0a0a0
ffff40
e0e0e0
00ffff
<font color = "#%s">
</font>
//   
Texture
row_major %s%ux%u
%s%ux%u
struct
// Offset: %4u
// Buffer Definitions: 
// cbuffer %s
// tbuffer %s
 [unused]
// Offset: %4u Size: %5u%s
// Resource Bindings:
// Name                   Type  Format         Dim Slot Elements
// ---------------- ---------- ------- ----------- ---- --------
sampler_c
1darray
2darray
mixed
%sMS%d
// %-16s %10s %7s %11s %4u %8u
// Approximately %i instruction slots used
// %s signature:
// Name             Index   Mask Register SysValue Format   Used
// ---------------- ----- ------ -------- -------- ------ ------
// no %s
// %-16s %5u
    N/A
   oDepth
   primID
   %c%c%c%c
CLIPDST
CULLDST
RTINDEX
VPINDEX
VERTID
PRIMID
INSTID
FFACE
TARGET
DEPTH
    YES
     NO
label
primID
oDepth
_%d_%d.
 + %d]
(%f, %f, %f, %f)
(0x%08x)
0x%08x
undefined
clip_distance
cull_distance
rendertarget_array_index
viewport_array_index
vertex_id
primitive_id
instance_id
is_front_face
ps_%d_%d
vs_%d_%d
gs_%d_%d
_O(%i,%i,%i)
_rcpfloat 
_uint 
 x%i[%i], %d
refactoringAllowed
 pointlist 
 linestrip 
 triangestrip 
 undefined 
 ??? 
 point 
 line 
 triangle 
 lineadj 
 triangleadj 
 constant 
 linear 
 linear centroid 
 linear noperspective 
 linear noperspective centroid 
cb%d[%d]
, dynamicIndexed
, immediateIndexed
_buffer
_texture1d
_texture2d
_texture2dms
_texture3d
_texturecube
_texture1darray
_texture2darray
_texture2dmsarray
 mixed
 unorm
 snorm
 sint
 uint
 float
dcl_immediateConstantBuffer
                              
undecipherable custom data
, mode_default
, mode_comparison
, mode_mono
<pre>
<body bgcolor="#000000">
// Generated by 
Microsoft (R) D3D10 Shader Disassembler
</pre>
D3D10DisassembleShader
D3D10DisassembleEffect
%s %s = 
%s %s[%d] = 
    asm {
    },
asm {
    NULL,
technique10 
    pass 
    {
        // No embedded %s
        %s = %s[%d];
        %s = %s;
        %s = asm {
        %s = NULL;
    }
D3D10CreateStateBlock
breakc
callc
continuec
emit_then_cut
endloop
endswitch
resinfo
round_ne
round_ni
round_pi
round_z
sample
sample_b
sample_l
sample_d
sample_c
sample_c_lz
dcl_input
dcl_output
dcl_input_sgv
dcl_inputprimitive
dcl_outputtopology
dcl_maxout
dcl_constantbuffer
dcl_sampler
dcl_resource
dcl_input_siv
dcl_output_siv
dcl_output_sgv
dcl_temps
dcl_indexableTemp
dcl_indexrange
dcl_globalFlags
MostRecentApplication
%s\%s
D3DX10: (WARN) Overloaded ::new and ::delete operators do not conform to C++ standards:
D3DX10: (WARN) An allocation of zero bytes should return a unique non-null pointer to at
D3DX10: (WARN) least zero bytes. Deletion of a null pointer should quietly do nothing.
D3DX10: (WARN) D3DX10 relies upon this behavior.
ps.1.0
ps.1.1
ps.1.2
ps.1.3
ps.1.4
ps.2.0
ps.2.a
ps.2.b
ps.2.sw
ps.2.x
ps.3.0
ps.3.sw
ps_1_0
ps_1_1
ps_1_2
ps_1_3
ps_1_4
ps_2_0
ps_2_a
ps_2_b
ps_2_sw
ps_2_x
ps_3_0
tx_1_0
vs.1.0
vs.1.1
vs.2.0
vs.2.a
vs.2.sw
vs.2.x
vs.3.0
vs.3.sw
vs_1_0
vs_1_1
vs_2_0
vs_2_a
vs_2_sw
vs_2_x
vs_3_0
d3d10.pdb
.text$lp00SPGO
.text$mn
.text$mn$00
.text$x
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.gehcont
.gfids
.rdata
.rdata$voltmd
.rdata$zzzdbg
.xdata
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.pdata
.rsrc$01
.rsrc$02
d3d10.dll
D3D10CompileEffectFromMemory
D3D10CompileShader
D3D10CreateBlob
D3D10CreateDevice
D3D10CreateDeviceAndSwapChain
D3D10CreateEffectFromMemory
D3D10CreateEffectPoolFromMemory
D3D10CreateStateBlock
D3D10DisassembleEffect
D3D10DisassembleShader
D3D10GetGeometryShaderProfile
D3D10GetInputAndOutputSignatureBlob
D3D10GetInputSignatureBlob
D3D10GetOutputSignatureBlob
D3D10GetPixelShaderProfile
D3D10GetShaderDebugInfo
D3D10GetVersion
D3D10GetVertexShaderProfile
D3D10PreprocessShader
D3D10ReflectShader
D3D10RegisterLayers
D3D10StateBlockMaskDifference
D3D10StateBlockMaskDisableAll
D3D10StateBlockMaskDisableCapture
D3D10StateBlockMaskEnableAll
D3D10StateBlockMaskEnableCapture
D3D10StateBlockMaskGetSetting
D3D10StateBlockMaskIntersect
D3D10StateBlockMaskUnion
D3D10CoreGetVersion
D3D10CoreRegisterLayers
d3d10core.dll
_vsnprintf
_controlfp
_clearfp
strchr
_finite
tolower
isdigit
isalpha
_stricmp
_isnan
_fpclass
_strnicmp
_strdup
setlocale
isxdigit
isalnum
_purecall
malloc
__CxxFrameHandler4
strstr
_callnewh
_XcptFilter
_amsg_exit
_initterm
__C_specific_handler
msvcrt.dll
??1type_info@@UEAA@XZ
?terminate@@YAXXZ
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
ntdll.dll
GetModuleHandleExW
OutputDebugStringA
RegGetValueW
RegOpenKeyExW
DisableThreadLibraryCalls
OpenSemaphoreW
CloseHandle
RegQueryValueExA
GetProcAddress
FreeLibrary
RegCloseKey
LoadLibraryExW
Sleep
InitializeCriticalSection
EnterCriticalSection
LeaveCriticalSection
DeleteCriticalSection
GetFullPathNameA
GetModuleFileNameA
CreateFileA
GetFileSize
RegOpenKeyExA
RegEnumKeyExA
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetCurrentProcessId
GetCurrentThreadId
GetSystemTimeAsFileTime
GetTickCount
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
D3D11CreateDeviceAndSwapChain
d3d11.dll
VirtualFree
VirtualAlloc
GetSystemInfo
UnmapViewOfFile
api-ms-win-core-memory-l1-1-0.dll
DeleteObject
GDI32.dll
_CxxThrowException
acosf
asinf
atan2
atan2f
atanf
ceilf
floor
floorf
memcmp
memcpy
memmove
memset
sqrtf
strcmp
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Direct3D 10 Runtime
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
D3D10.dll
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
D3D10.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
