!This program cannot be run in DOS mode.
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
L$0H3
)D$@H
D$0fH
D$8H+D$HH
)D$PH
L$0fH
L$8H+L$XH
)D$PH
L$0fH
L$8H+L$XH
)D$PH
T$0fH
T$8H+T$XH
)D$PH
T$0fH
T$8H+T$XH
)D$PH
T$0fH
T$8H+T$XH
t$ AWH
pcPZt
@USVWATAUAVAWH
D$pE3
A_A^A]A\_^[]
pcPZt
(D$pf
|$ UAVAWH
A_A^]
VWATAVAWH
GPI90
0A_A^A\_^
pcPZt
UVWATAUAVAWH
0A_A^A]A\_^]
UATAUAVAWH
p*^xm
A_A^A]A\]
UATAUAVAWH
d$8L9d$xu H
L9d$pu
A_A^A]A\]
\$ UVWATAUAVAWH
T$xLc
D$ E3
U(H+P
pbSX3
A_A^A]A\_^]
UWATAVAWH
A_A^A\_]
L$PfH
L$XH+M
L$ SWH
UATAUAVAWH
A_A^A]A\]
UVWAVAWH
PA_A^_^]
t$ UWAUAVAWH
A_A^A]_]
UVWATAUAVAWH
A_A^A]A\_^]
t$ UWAUAVAWH
A_A^A]_]
UWAVH
0A^_]
|$ AVH
H0H!K@H!KHL
UVWATAUAVAWH
D$ E3
D$DIi
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
UVWATAUAVAWH
`A_A^A]A\_^]
t$ WATAUAVAWH
0A_A^A]A\_
pcPZt
VWATAVAWH
GPI90
0A_A^A\_^
pcPZt
WATAUAVAWH
D;#ryI
A_A^A]A\_
D9;v0
\$ UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWH
VWATAVAWH
GXI90
0A_A^A\_^
pcPZt
UVWATAUAVAWH
|$ E3
A_A^A]A\_^]
UVWATAUAVAWH
A_A^A]A\_^]
UWATAVAWH
u-D9%
A_A^A\_]
t$ WH
t$ WATAUAVAWH
0A_A^A]A\_
pcPZt
\$ UVWAVAWH
)D$pH
L$PfH
L$XH+L$xH
A_A^_^]
|$ AVH
UVWATAUAVAWH
@A_A^A]A\_^]
VWAVH
WATAUAVAWH
(D$@f
)D$`H
L$0fH
L$8H+L$hH
A_A^A]A\_
|$ UATAUAVAWH
<$>uZA
L9l$Hu
A_A^A]A\]
L$xH3
)D$@H
D$0fH
D$8H+D$HH
xKt#H
UVWAVAWH
L$xH3
A_A^_^]
t$ WH
USVWAVH
H93t E
H93t%
A^_^[]
)D$@H
D$0fH
D$8H+D$HH
)D$ H
FhH+D$(H
D$`H+
D$hH+
t$ WH
L$xH3
L$xH3
VWAVH
t$ E3
D$ E3
L$hH3
UVWAVAWH
)D$@H
D$0fH
D$8H+D$HH
pA_A^_^]
L$HH3
t$ WH
qY^vW
\$ UVWAVAWH
A_A^_^]
UVWATAUAVAWH
A_A^A]A\_^]
|$ UAVAWH
H!] L
A_A^]
t$ WH
L$`H3
D$xfD
WAVAWH
89:u69z
pcPZt
0A_A^_
WAVAWH
89:u69z
pcPZt
0A_A^_
WAVAWH
89:u69z
pcPZt
0A_A^_
|$ UH
H0H!K@H!KHL
x ATAVAWH
 A_A^A\
qCS0n
q*Z~:
q*Z~:
SVWAVH
8A^_^[
w|H9{
;@8:t
q0R^G'
p AWH
D$$I;
u.L93t
p0R^G'
D$HE3
D$HE3
q0R^G'
u*9Q<|%
HcA<H
f9H\u
LcA<E3
HcQ<H
\$ UH
 H3E H3E
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
H0H!K@H!KHH
H0H!K@H!KHH
WAVAWH
A_A^_
VWAVH
PA^_^
VWAVH
PA^_^
t$ UWAWH
VWAVH
 A^_^
qcUrR
VWAVH
 A^_^
VWAVH
PA^_^
qbQvZ
pbQvZ
H0H!KHH!KPL
H0H!KHH!KPL
H0H!KHH!KPL
H0H!KHH!KPL
H0H!K@H!KHL
H0H!KpH!KxL
x ATAVAWH
 A_A^A\
@UATAUAVAWH
H;E t
fE9,Du
fA9L]
e@A_A^A]A\]
UWAVH
UVWAVAWH
tKD9;u I
CD9;u I
PA_A^_^]
8w1t*
x AVH
VWAVH
 A^_^
t$ WH
H0H!K@H!KHL
t$ WH
H0H!K@H!KHL
t$ WH
H0H!K@H!KHL
t$ WH
H0H!K@H!KHL
t$ WH
H0H!K@H!KHL
t$ WH
H0H!K@H!KHL
@SVWH
tSf93tNH
x UATAUAVAWH
D$ E3
H!D$(
A_A^A]A\]
VWAVH
 A^_^
VWATAVAWH
 A_A^A\_^
VWATAVAWH
 A_A^A\_^
t$ WAVAWH
 A_A^_
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
VWAVH
 A^_^
t$ WAVAWH
 A_A^_
|$ UATAUAVAWH
A_A^A]A\]
WAVAWH
fD;1t
fD;9u
fD;8ugH
fD;9u
fD;0tgfD
 A_A^_
t$ UWATAVAWH
fD9<Bu
fD9"u
fD9 u(H
fD9?t
A_A^A\_]
pcUrR
WATAUAVAWH
0A_A^A]A\_
@UATAUAVAWH
A8<4te
A8<6u
e A_A^A]A\]
UWAWH
|$8H!t$0L
@USVWATAUAVAWH
t$ E3
A_A^A]A\_^[]
?=u#D
?{uCD
d$ E3
p Qp)
p!ZTu
?=u;H
t$ WAVAWH
 A_A^_
x AVH
VWAVH
L$PH3
D$8E3
L$8H3
\$ UVWH
x UATAUAVAWH
fE9,Fu
fE9,Nu
A_A^A]A\]
t$ WH
L$HH3
@USVWATAVAWH
A_A^A\_^[]
UATAUAVAWH
D$ E3
d$ E3
fC94bu
A_A^A]A\]
WATAUAVAWH
A_A^A]A\_
t$ WH
9sPv8H
 ;sPr
VWAVH
L$`H3
L$xH3
|$ UH
|$ UH
p3[\).p
WAVAWH
|$(E3
D$ E3
0A_A^_
|$ UH
pSVPn
\$ UVWATAUAVAWH
l$ E3
D$8?B
A_A^A]A\_^]
SUVWATAUAVAWH
A_A^A]A\_^][
@USVWATAVAWH
fD9$Au
fD9$Yu
fE9$Pu
fE9$ru
A_A^A\_^[]
qp_><
UVWATAVH
H!]oL
A^A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
H+H@u
H+HHH
H+H@u
H+HHH
` UAVAWH
A_A^]
UVWATAUAVAWH
9u$vnH
D93v%D
A_A^A]A\_^]
X UVWATAUAVAWH
H!t$0!t$(D
l$ E3
H!t$8H
D$ E3
t$ E3
A_A^A]A\_^]
\$ UVWATAUAVAWH
A_A^A]A\_^]
@USWATAUAVAWH
H!|$ E3
H!|$(H
H!|$ A
A_A^A]A\_[]
t$ UWAVH
UWAWH
H!]8!]0L
D$ E3
UVWATAUAVAWH
H!uXE3
L!eXH
`A_A^A]A\_^]
X UVWATAUAVAWH
fD9,Au
fD9,Yu
fE9,Pu
fE9,ru
A_A^A]A\_^]
x UATAUAVAWH
fF9,pu
D$ E3
A_A^A]A\]
WAVAWH
 A_A^_
WAVAWH
 A_A^_
USVWATAUAVAWH
t$x;\$H
A_A^A]A\_^[]
UWAVH
` UAVAWH
fD9<Au
D$8D9 t9D98u
)D$PH
L$xfH
H+L$XH
D8|$0t
A_A^]
UVWATAUAVAWH
A_A^A]A\_^]
x AUAVAWH
0A_A^A]
t$ UWAVH
t$ UWAVH
UVWATAVH
`A^A\_^]
t$ UWATAUAVH
D$ E3
d$ E3
A^A]A\_]
x UATAUAVAWH
|$ E3
d$ E3
l$ E3
d$ E3
A_A^A]A\]
UWAWH
UVWATAUAVAWH
T$xLcmgL
|$ E3
|$ E3
A_A^A]A\_^]
@USVWAVH
A^_^[]
|$ UH
VWAVH
UAVAWH
A_A^]
|$ UAVAWH
A_A^]
|$ UH
L$xH3
x UATAVH
A^A\]
p*^xm
p*^xm
qBZ~$
D$(L+
D$ E3
@USVWATAUAVAWH
t$ E3
D8t$qE
A_A^A]A\_^[]
UVWATAUAVAWH
fD9,Fu
l$ E3
A_A^A]A\_^]
t$ UWATAUAVH
A^A]A\_]
qQU\x
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
PA^_]
WAVAWH
A_A^_
\$ UVWATAVH
A^A\_^]
@SUVWAVH
PA^_^][
VWATAVAWH
A_A^A\_^
VWAVH
@A^_^
t$ UWAVH
t$ UWAUAVAWH
L$(fH
A_A^A]_]
\$ UVWAVAWH
A_A^_^]
H+HHu
H+HPH
x AVH
q Qp)
UVWATAUAVAWH
fF9<pu
L9|$x
L9|$@
L9|$`
L9|$P
A_A^A]A\_^]
s WAVAWH
A_A^_
\$ UVWATAUAVAWH
D$@9H
u$9L$Tt
9L$Ht
A_A^A]A\_^]
WAVAWH
@A_A^_
t$ UWAVH
UWAVH
)D$0H
L$ fH
L$(H+L$8H
@USVWAUAVAWH
A_A^A]_^[]
x AVH
@USVWATAVAWH
pp\x,
A_A^A\_^[]
\$ UVWAVAWH
A_A^_^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UATAUAVAWH
A_A^A]A\]
` UAVAWH
A_A^]
@USVWATAUAVAWH
Hct$HH
9\$Du
9\$`t
D$xIc
H9\$xt[M
A_A^A]A\_^[]
UVWATAUAVAWH
`A_A^A]A\_^]
UVWATAVH
PA^A\_^]
t$ UWAVH
UVWATAUAVAWH
fD9,Fu
fF9,vu
A_A^A]A\_^]
UWAVH
UWAVH
x AVH
UVWATAUAVAWH
fD9,Au
A_A^A]A\_^]
UVWATAUAVAWH
;t$8|
9t$HueH
9t$Hu
A_A^A]A\_^]
t$ UWAUAVAWH
A_A^A]_]
L$@H3
@USVWATAUAVAWH
D$ E3
E@LcD$XH
A_A^A]A\_^[]
L!l$(
H#D$PH
L$`H3
@SUVWAVH
A^_^][
UWAVH
@USVWATAUAVAWH
t$ E3
D$@fD
A_A^A]A\_^[]
@USVWATAUAVAWH
A_A^A]A\_^[]
UVWATAUAVAWH
ePt@H
fD;:t
pA_A^A]A\_^]
|$ UATAUAVAWH
fD;(u;
A_A^A]A\]
t$ UWAVH
@USVWAUAVAWH
A_A^A]_^[]
t$ UWAVH
fD94Hu
fE94Xu
UVWAVAWH
A_A^_^]
t$ UWAWH
T$ E3
D$ E3
f9t$@t
t$ UWATAUAVH
L9fxu*
fD9$Au
A^A]A\_]
L$`H3
t$ UWAVH
@8t$0
D$X90u
D$H90uA
L$XH3
f9<Zu
L$@H3
UWAVH
UWAWH
x UAVAWH
A_A^]
@USVWAVH
A^_^[]
UWAVH
@A^_]
t$ UWATAVAWH
pK\pE
A_A^A\_]
t$ UWAVH
\$ UVWATAUAVAWH
D9t$0u
HcD$0H
HcD$0L
D$L;D$0
fD94Au
fD94Au
fE94Wu
l$hHc
|$hA;
fE94Wu
l$ E3
ID;l$0}.Ic
D9t$0~CL
D;|$0|
d$(E3
A_A^A]A\_^]
\$ UVWATAVH
A^A\_^]
UWAVH
UWATAVAWH
D9d$Du%
T$ E3
A_A^A\_]
\$ UVWATAVH
A^A\_^]
WATAUAVAWH
fD9,_u
fD9,Wu
fE9,^u
fE9,nu
A_A^A]A\_
UVWATAUAVAWH
I9~pu"
L$HE3
H9t$Xu5H
A_A^A]A\_^]
@USVWATAUAVAWH
L$@9t$P
pK\pE
A_A^A]A\_^[]
UVWATAUAVAWH
D!eoL!e
A_A^A]A\_^]
t$ WH
!|$`H
UAVAWH
A_A^]
UWAVH
PA^_]
\$ UVWATAVH
A^A\_^]
@USVWATAVAWH
9T$@u4
D$xH+
A_A^A\_^[]
x AVH
@USVWATAUAVAWH
A9~Tt0
A_A^A]A\_^[]
UVWATAVH
A^A\_^]
q:U> 
t$ UWAWH
p:U> 
` UAVAWH
A_A^]
` UAVAWH
A_A^]
\$ UVWATAVH
A^A\_^]
qr]\W'
@USVWATAVAWH
D$x!D$@!D$D!D$HH
pr]\W'
A_A^A\_^[]
q"\\<
x UATAUAVAWH
A_A^A]A\]
t$ UWATAVAWH
A_A^A\_]
x AUAVAWH
A_A^A]
UVWATAUAVAWH
A_A^A]A\_^]
\$ UVWATAUAVAWH
L!l$hH
D$ E3
D$@8D$l
D$A8D$m
D$B8D$n
D$C8D$o
A_A^A]A\_^]
qB^\Z
@SUVWAVH
A^_^][
@USVWATAUAVAWH
D$@fD
A_A^A]A\_^[]
t$ UWAWH
D$ ?B
\$ UVWATAVH
A^A\_^]
x UATAUAVAWH
A_A^A]A\]
t$ UWAWH
@USVWAVH
!D$(!E
A^_^[]
@USVWAVH
A^_^[]
\$ UVWATAUAVAWH
#L9%%
D$DHc
LcD$DI
L9d$H
D;l$D
H9\$H
H9\$p
H9\$Hu
D9d$D~JI
@;t$D|
A_A^A]A\_^]
L9d$`
D;t$D
L9d$X
L9d$H
D;t$D
H9\$H
H9\$p
H9\$h
L9d$`
L9d$X
l$0E3
UVWATAUAVAWH
A_A^A]A\_^]
UWAWH
USVWATAUAVAWH
A94$t'
t$097t 
A_A^A]A\_^[]
VWAUAVAWH
fD9<Gu
fD9<Gu
D$ E3
A_A^A]_^
VWAVH
@A^_^
VWAVH
@A^_^
VWAVH
@A^_^
x AVH
UVWATAUAVAWH
M9,$uiH
M9(uiH
M9(uRH
M9(uRH
M9(uRH
M9(uRH
M9(uRH
@A_A^A]A\_^]
@USVWAVAWH
A_A^_^[]
VWAVH
@A^_^
t$ UWAVH
@A^_]
x UATAUAVAWH
A_A^A]A\]
UWAVH
PA^_]
UVWATAVH
A^A\_^]
x UATAUAVAWH
HcEPH
HcEPH
xaHcEPH
A_A^A]A\]
x UATAVH
A^A\]
\$ UVWATAUAVAWH
L;|$pr
D$pI+
H9D$0r
H+D$0H=
A_A^A]A\_^]
H0H!KpH!KxL
VWATAVAWH
A_A^A\_^
WAVAWH
A_A^_
VWAVH
PA^_^
p WAVAWH
A_A^_
qi^2h
pi^2h
UVWAVAWH
L$4E3
A_A^_^]
q!ZTu
p WAVAWH
@A_A^_
VWAVH
@A^_^
VWAVH
@A^_^
VWAVH
@A^_^
VWAVH
@A^_^
q9_6t
p9_6t
UVWAVAWH
|$ E3
L9|$hu
fD9<Gu
A_A^_^]
H0H!KPH!KXL
Q<</t
Q<</t
VWAVH
@A^_^
VWAVH
@A^_^
VWAVH
@A^_^
H0H!KPH!KXL
|$ UAVAWH
A_A^]
USVWATAUAVAWH
hA_A^A]A\_^[]
q:U> 
qr]\W'
qB^\Z
UVWATAUAVAWH
D8m@t
`A_A^A]A\_^]
UVWAVAWH
PA_A^_^]
UVWATAUAVAWH
D8m@t
D8mXt
`A_A^A]A\_^]
\$ UVWATAUAVAWH
D8d$@t
D8d$Bt
D8d$Ct
fD9$^u
fD9$Vu
D8d$Dt
D;L$`u!A
A_A^A]A\_^]
t$ UWAVH
t$ UWAVH
UVWAVAWH
|$ fD
A_A^_^]
q0Yv4
p0Yv4
VWAVH
@A^_^
@USVWATAVAWH
H!t$`H!t$PH!t$HH!t$@H!t$8H!t$0I
A_A^A\_^[]
t$ UWAVH
VWAVH
@A^_^
VWAVH
@A^_^
UWAVH
PA^_]
qP]V^
pP]V^
VWAVH
@A^_^
UWAVH
PA^_]
t$ UWAVH
@A^_]
x AVH
UVWATAUAVAWH
M9n`t
@A_A^A]A\_^]
9_pt'
)D$0H
L$ fH
L$(H+L$8H
UVWATAUAVAWH
A_A^A]A\_^]
Q~;6}
UWAVH
USVWATAUAVAWH
fF9$nu
L9e`u,H
XA_A^A]A\_^[]
uaA9@
@USVWATAVAWH
L$8fH
A_A^A\_^[]
|$ UH
UWATAVAWH
A_A^A\_]
D$8@2
uH9D$ ubD
L$HH3
x ATAVAWH
@A_A^A\
t$ UWAVH
D$`H+
D$hH+
t$ UWATAVAWH
A_A^A\_]
UWAVH
UWAVH
u$H+G
UWATAVAWH
A_A^A\_]
UWAUAVAWH
}HH!}
A_A^A]_]
t@f;*t;I
VWAVH
tmfD;2tgH
 A^_^
UWATAVAWH
!]@H!]HM
A_A^A\_]
t$ UWAVH
@A^_]
t$ UWAVH
@A^_]
@USVWAVH
A^_^[]
t$ UWAVH
(L$0I
|$ UH
D$(E3
@H!\$(L
H!\$ 3
x UATAVH
L$`fB
A^A\]
UVWATAUAVAWH
L$0E3
D$pH;
D$`E3
D$pH;
A_A^A]A\_^]
H!D$lH
H!D$8D
D$0E3
xu*9]
\$PufI
VWAVH
9\$`t
@A^_^
VWAVH
9|$@@
D$0E3
T$DE3
L$hH3
D$8E3
L$(E3
L$ SVWAVH
(A^_^[
DG fE
x AVH
x AVH
x AVH
CVdsService::Uninitialize()
CVdsService::CanProvidersUnload()
CVdsService::UnloadProviders()
.h96]/K
@kon|
CVdsDiskLun::ValidateDiskInterfaces()
CVdsDiskLun::ValidateDiskInterfaces, 1, hr=%lX
CVdsDiskLun::InternalQueryInterface, 1, hr=%lX
CVdsDiskLun::GetProperties() (IVdsDisk)
NCVdsEnumVdsObject::InternalQueryInterface, 1, hr=%lX
root\wmi
CVdsService::InitializeThread()
CVdsService::LoadAndInitializeProviders()
%s\%s
CVdsService::GetNextProviderClsid()
VDS(0X02040011): Drive letter arrives: %c
\\?\GLOBALROOT
CVdsService::InitializeThread: *ppVdsProviderNext Alloc: Out of memory.
CVdsService::IsBuiltinProvider()
FCVdsVolumePlex::QueryExtents()
fveapi.dll
CVdsPack::QueryDisks()
CVdsProvider::QueryPacks()
VdsCreateInstance() (2)
VdsCreateInstance() (1)
CVdsService::QueryProviders()
CVdsPack::GetProperties()
CVdsProvider::QueryPacks, 1, hr=%lX
CVdsService::QueryProviders, 3, hr=%lX
CVdsPack::QueryDisks, 1, hr=%lX
VdsCreateInstance, 1
CVdsVolume::GetProperties()
CdRom
FindFSPropertiesInMap
CVdsVolume::GetVolumeName()
CVdsPack::QueryVolumes()
CVdsPack::QueryVolumes, 1, hr=%lX
MSiSCSI_PortalInfoClass
CVdsService::LoadIscsiInitiator()
InstanceName
IpV6Address
TextAddress
IpV6FlowInfo
Index
IPAddr
IpV6ScopeId
PortalInformation
PortalType
IpV4Address
CVdsService::LoadHbaPorts()
CVdsVolume::QueryFileSystemFormatSupportInternal, 2, hr=%lX
CVdsService::InitializeNetworkShareConstants()
vds.exe
CVdsService::LoadSasPorts()
hbaapi.dll
CVdsService::LoadHbaPorts, 1
CVdsPnPNotificationManager::AuxThread()
CVdsVolume::QueryFileSystemFormatSupportInternal: failed to get supported file systems: %ld
CVdsVolume::QueryFileSystemFormatSupportInternal()
CVdsProvider::InternalQueryInterface, 5, hr=%lX
CVdsProvider::InternalQueryInterface, 7, hr=%lX
CVdsProvider::InternalQueryInterface, 1, hr=%lX
CVdsProvider::InternalQueryInterface, 4, hr=%lX
CVdsVolumePlex::InternalQueryInterface, 1, hr=%lX
CVdsEnumObject::Next()
CVdsService::FindOrCreateWrapper()
CVdsService::FindOrCreateWrapper, temp: object found: %p
CVdsService::FindOrCreateWrapper, temp: object not found.
WrapObject()
WrapObject, 1
CVdsEnumObject::Next, 2
ObjectMap: Wrapper added to map: %p, %p
CVdsService::AddObjectToMap()
ObjectMap: Wrapper could not be added to map: %p, %p, error=%ld
NCVdsPack::InternalQueryInterface, 1, hr=%lX
#CVdsService::AssignOneDiskToProviders()
CVdsService::ClaimDiskIfRaw()
CVdsService::ClaimDiskIfRaw, 1, name=%s, error=%ld
UNKNOWN
CVdsService::AssignDisksToProvidersInClass()
CVdsService::AssignDisksToProvidersInClass, 2, error=%ld
CVdsEnumObject::~CVdsEnumObject()
CVdsVolume::InternalQueryInterface, 1, hr=%lX
CVdsService::GetVolumeId()
CVdsService::GetVolumeId, 1, error=%ld
VDS(0X02040002): WM_DEVICECHANGE: wParam=%lX lParam=%ld
m2VDS(0X02040007): Disk layout change notification received
TMP: GUID_IO_VOLUME_MOUNT event received.
VDS(0X02040006): Label Change notification received
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler()
Jess*
/TMP: GUID_IO_VOLUME_DISMOUNT event received.
CVdsDiskLun::~CVdsDiskLun()
CVdsVolume::QueryAccessPathsToVolume()
.h96]/K
S"@kon|
CVdsService::_IsServiceReady()
CVdsCallbackObject::OnNotify()
CVdsProvider::~CVdsProvider()
CVdsVolume::~CVdsVolume()
NotificationThread, 3 hr=%lX
NotificationThread()
CVdsService::RemoveObjectFromMap()
CVdsPack::~CVdsPack()
CVdsService::AddDiskToVdProviders()
CVdsService::AddDiskToVdProviders()
jOHi'
FCVdsVolume::OpenHandle, 1, hr=%lX
CVdsVolume::OpenHandle()
CVdsVolumePlex::~CVdsVolumePlex()
CVdsService::InternalQueryProviders()
CVdsProvider::CVdsProvider()
ConnectEnumWrapper()
ConnectEnumWrapper, 1, hr=%lX
CVdsMessageQueue::DequeueEx()
MCcQF
Y&iSan
CVdsServiceModule::ServiceMain()
CVdsServiceModule::SetServiceStatus()
CVdsServiceModule::Run()
CVdsService::Initialize: CoInitializeEx failed: %X
|Fi!h
CVdsService::CVdsService()
CVdsService::RemoveDiskFromVdProviders()
CPrvEnumObject::~CPrvEnumObject()
CVdsEnumObject::CVdsEnumObject()
CVdsPnPNotificationManager::VolumeChangeNotificationHandler
CVdsPnPNotificationManager::FindVolumeInMap()
CVdsPnPNotificationManager::FindVolumeInMap: not enoughmemory to make a copy of device path. Notificationmay be lost.
CVdsService::GetDisk()
CVdsPnPNotificationManager::RegisterForCustomVolumeEventAll
CVdsService::GetObjectFromProviders, 3, %lX
CVdsService::GetObjectFromProviders()
CVdsService::GetObjectFromProviders, 1, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsDisk, hr=%lX
CVdsDiskLun::QueryDiskInterfaces()
CVdsProvider::GetVDiskFromDisk, pDisk=%p, ppVDisk=%p, hr=%lX
CVdsProvider::GetVDiskFromDisk
CVdsService::SendFileSystemNotificaiton()
CVdsVolume::CheckVolumeDirtyFlag()
VDS(0X0204000B): failed to insert volume notification handle to map because of lack of memory.
CVdsPnPNotificationManager::InsertVolumeToMap()
CVdsService::GetObject()
CVdsService::FindFSPropertiesInMap, 1, pObject=%p
CPrvEnumObject::CPrvEnumObject()
CVdsServiceModule::_Handler()
CVdsDiskLun::CVdsDiskLun()
CVdsVolumePlex::CVdsVolumePlex()
CVdsService::DumpUnallocatedDisks()
CVdsServiceModule::Handler()
CVdsService::AssignDisksToProviders()
CVdsCallbackObject::Initialize()
Virtual Disk Service
CVdsDiskLun::QueryExtents()
bad allocation
generic
unknown error
iostream
iostream stream error
system
invalid string position
string too long
permission denied
file exists
no such device
filename too long
device or resource busy
io error
directory not empty
invalid argument
no space on device
no such file or directory
function not supported
no lock available
not enough memory
resource unavailable try again
cross device link
operation canceled
too many files open
permission_denied
address_in_use
address_not_available
address_family_not_supported
connection_already_in_progress
bad_file_descriptor
connection_aborted
connection_refused
connection_reset
destination_address_required
bad_address
host_unreachable
operation_in_progress
interrupted
invalid_argument
already_connected
too_many_files_open
message_size
filename_too_long
network_down
network_reset
network_unreachable
no_buffer_space
no_protocol_option
not_connected
not_a_socket
operation_not_supported
protocol_not_supported
wrong_protocol_type
timed_out
operation_would_block
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
destination address required
executable format error
file too large
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
invalid seek
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no message available
no message
no protocol option
no stream resources
no such device or address
no such process
not a directory
not a socket
not a stream
not connected
not supported
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
protocol error
protocol not supported
read only file system
resource deadlock would occur
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many links
too many symbolic link levels
value too large
wrong protocol type
OLEAUT32.dll
srvcli.dll
api-ms-win-core-shutdown-l1-1-0.dll
CLUSAPI.dll
ForceRemove
NoRemove
Delete
CVdsVDisk::InternalQueryInterface, 1, hr=%lX
CVdsVDisk::CVdsVDisk
CVdsVDisk::~CVdsVDisk
CVdsVDisk::Open
CVdsVDisk::Open, 1, error=%lX
CVdsVDisk::Open, 2, hr=%lX
CVdsVDisk::Open, 3, hr=%lX
CVdsVDisk::GetProperties
CVdsVDisk::GetProperties, 1, hr=%lX
CVdsVDisk::GetHostVolume
CVdsVDisk::GetHostVolume, 1, hr=%lX
CVdsVDisk::GetHostVolume, 2, hr=%lX
CVdsVDisk::GetHostVolume, 3, hr=%lX
CVdsVDisk::GetHostVolume, 4, hr=%lX
CVdsVDisk::GetDeviceName
CVdsVDisk::GetDeviceName, 1, hr=%lX
CVdsOpenVDisk::CVdsOpenVDisk
CVdsOpenVDisk::~CVdsOpenVDisk
CVdsOpenVDisk::Attach
CVdsOpenVDisk::Attach, 1, hr=%lX
VDS(%X): unexpected failure connecting async wrapper: %X
CVdsOpenVDisk::Detach
CVdsOpenVDisk::Detach, 1, hr=%lX
CVdsOpenVDisk::DetachAndDelete
CVdsOpenVDisk::DetachAndDelete, 1, hr=%lX
CVdsOpenVDisk::Compact
CVdsOpenVDisk::Compact, 1, error=%lX
CVdsOpenVDisk::Merge, 1, error=%lX
CVdsOpenVDisk::Expand
CVdsOpenVDisk::Expand, 1, error=%lX
CVdsHbaPort::CVdsHbaPort()
CVdsIscsiInitiatorAdapter::CVdsIscsiInitiatorAdapter()
CVdsIscsiInitiatorPortal::CVdsIscsiInitiatorPortal()
CVdsProvider::InternalQueryInterface, 2, hr=%lX
CVdsProvider::InternalQueryInterface, 3, hr=%lX
CVdsProvider::InternalQueryInterface, 4.1, hr=%lX
CVdsProvider::InternalQueryInterface, 6, hr=%lX
CVdsPack::CVdsPack()
CVdsVolume::CVdsVolume()
CVdsVolume::InternalQueryInterface, 2, hr=%lX
CVdsDiskLun::InternalQueryInterface, 2, hr=%lX
CVdsDiskLun::InternalQueryInterface, 3, hr=%lX
CVdsDiskLun::InternalQueryInterface, 4, hr=%lX
CVdsDiskLun::InternalQueryInterface, 5 DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::InternalQueryInterface, 6, hr=%lX
CVdsDiskLun::InternalQueryInterface, 7, hr=%lX
CVdsDiskLun::InternalQueryInterface, 8, hr=%lX
CVdsDiskLun::InternalQueryInterface, 9 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::InternalQueryInterface, 10, hr=%lX
CVdsDiskLun::InternalQueryInterface, 11
CVdsDiskLun::InternalQueryInterface, 12, Win32 error=%ld
CVdsDiskLun::InternalQueryInterface, 13, hr=%lX
CVdsSubSystem::InternalQueryInterface, 1, hr=%lX
CVdsSubSystem::InternalQueryInterface, 2, hr=%lX
CVdsSubSystem::InternalQueryInterface, 3, hr=%lX
CVdsSubSystem::InternalQueryInterface, 4, hr=%lX
CVdsSubSystem::InternalQueryInterface, 4.5
CVdsSubSystem::InternalQueryInterface, 5, hr=%lX
CVdsSubSystem::InternalQueryInterface, 6, hr=%lX
CVdsSubSystem::InternalQueryInterface, 7, hr=%lX
CVdsSubSystem::InternalQueryInterface, 8, hr=%lX
CVdsSubSystem::InternalQueryInterface, 9, hr=%lX
CVdsController::InternalQueryInterface, 1, hr=%lX
CVdsController::InternalQueryInterface, 2, hr=%lX
CVdsController::InternalQueryInterface, 3, hr=%lX
CVdsControllerPort::InternalQueryInterface, 1, hr=%lX
CVdsControllerPort::InternalQueryInterface, 2, hr=%lX
CVdsDrive::InternalQueryInterface, 1, hr=%lX
CVdsDrive::InternalQueryInterface, 2, hr=%lX
CVdsDrive::InternalQueryInterface, 3, hr=%lX
CVdsLunPlex::InternalQueryInterface, 1, hr=%lX
CVdsStoragePool::InternalQueryInterface, 1, hr=%lX
CVdsStoragePool::InternalQueryInterface, 2, hr=%lX
AppID\{F290BFB2-1864-45B1-8804-2654194A87E7}
ConnectAsyncWrapper()
ConnectAsyncWrapper, 1, hr=%lX
ConnectAsyncWrapper, 2, hr=%lX
FindOneOf()
CVdsServiceModule::RegisterServer()
CVdsServiceModule::RegisterServer, 1, %lX
CVdsServiceModule::RegisterServer, 2, %lX
CVdsServiceModule::RegisterServer, 3, %lX
CVdsServiceModule::RegisterServer, 4, %lX
CVdsServiceModule::RegisterServer, 5, %lX
CVdsServiceModule::RegisterServer, 6, %lX
CVdsServiceModule::RegisterServer, 7, %lX
LaunchPermission
CVdsServiceModule::RegisterServer, 8, %lX
AccessPermission
CVdsServiceModule::RegisterServer, 9, %lX
CVdsServiceModule::RegisterServer, 10, %lX
CVdsServiceModule::UnregisterServer()
CVdsServiceModule::Init()
CVdsServiceModule::IsInstalled()
CVdsServiceModule::DisplayMessage()
CVdsServiceModule::Install()
RPCSS
CVdsServiceModule::Uninstall()
CVdsServiceModule::Start()
Error code for StartServiceCtrlDispatcher: %u.
CVdsService::ServiceMain,1: Error, out of memory
CVdsService::ServiceMain,2: Failed to initialize the Global Resources
CVdsServiceModule::_ServiceMain()
CVdsServiceModule::Run: failed to initialize security descriptor: %X
CVdsServiceModule::Run: CoInitializeSecurity failed: %X
CVdsServiceModule::Run: VdsDisableCOMFatalExceptionHandling failed: 0x%08X
CVdsServiceModule::Run: failed to initialize semaphore: %X
CVdsServiceModule::Run: StartReferenceHistory failed: %X
CVdsServiceModule::Run: RegisterClassObjects failed: %X
_tMain, 1, error=%ld
UnregServer
Service
CVdsAsyncObject::CVdsAsyncObject()
CVdsAsync::InternalQueryInterface, 1, hr=%lX
9z<--
oleaut32.dll
UnRegisterTypeLib
'=t/5
9z<--
REGISTRY
HKEY_CLASSES_ROOT
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
HKEY_USERS
HKEY_PERFORMANCE_DATA
HKEY_DYN_DATA
HKEY_CURRENT_CONFIG
LocalServer32
Module
CLSID
TYPELIB
API-MS-Win-Core-LocalRegistry-L1-1-0.dll
RegDeleteKeyExW
advapi32.dll
RegDeleteKeyW
CVdsCallbackObject()
~CVdsCallbackObject()
CVdsRawDiskLun::CVdsRawDiskLun()
CVdsHbaPortInternal::CVdsHbaPortInternal()
CVdsIscsiInitiatorAdapterInternal::CVdsIscsiInitiatorAdapterInternal()
CVdsService::~CVdsService()
CVdsService::Initialize()
CVdsService::Initialize, 1, error=%lX
CVdsService::Initialize, 2, error=%ld
CVdsService::Initialize, 3, error=%ld
CVdsService::Initialize, 4, error=%ld
CVdsService::CanProvidersUnloadHelper, 1
CVdsService::CanProvidersUnloadHelper: 2 QueryInterface(IVdsProviderPrivate) failed.
CVdsService::UnloadProviders, 1
CVdsService::UnloadProviders: 2 QueryInterface(IVdsProviderPrivate) failed: %x
CVdsService::UnloadProviders: 3 QueryInterface(IVdsProviderPrivate) failed: %x
CVdsService::Uninitialize: CoUninitialize triggered exception.
CVdsService::RegisterServiceInstance()
CVdsService::UnregisterServiceInstance()
CVdsService::InitializeThread: CoInitializeEx failed: %lX
CVdsService::InitializeThread exiting due to shutdown
CVdsService::GetNextProviderClsid: 1, %ld
CVdsService::GetNextProviderClsid: 2, %lX
CVdsService::GetNextProviderClsid: 3, %ld
CVdsService::GetNextProviderClsid: 4, %ld
CVdsService::GetNextProviderClsid: 5, %ld
CVdsService::LoadAndInitializeProviders, 1, error=%ld
CVdsService::LoadAndInitializeProviders, 2, error=%ld
CVdsService::LoadAndInitializeProviders, 2b, hr=%lX
CVdsService::LoadAndInitializeProviders, 2c, hr=%lX
CVdsService::LoadAndInitializeProviders, 3, hr=%lX
CVdsService::LoadAndInitializeProviders, 4, hr=%lX
CVdsService::LoadAndInitializeProviders, 5, hr=%lX
CVdsService::LoadAndInitializeProviders, 6, hr=%lX
CVdsService::AssignDisksToProvidersInClass, 1, error=%ld
CVdsService::AssignDisksToProvidersInClass, 3, error=%ld
CVdsService::AssignDisksToProvidersInClass, 4, error=%lX
CVdsService::AssignDisksToProvidersInClass, 5, name=%S, hr=%lX
CVdsService::AssignDisksToProvidersInClass, 6, error=%lX
CVdsService::AssignDisksToProvidersInClass, 7, error=%lX
CVdsService::AssignDisksToProvidersInClass, 8, error=%lX
CVdsService::AssignOneDiskToProviders, 0, name=%s, hr=%lX
CVdsService::AssignOneDiskToProviders, 1
CVdsService::AssignOneDiskToProviders, 2, name=%s
CVdsService::RemoveOneDiskFromProviders()
CVdsService::RemoveOneDiskFromProviders(), 1
CVdsService::RemoveOneDiskFromProviders(), 2, hr=%lX
CVdsService::RemoveOneDiskFromProviders(), 3, hr=%lX
CVdsService::AddDiskToVdProviders, %d, hr=%lX, name=%s
CVdsService::FinishAddDiskToVdProviders()
CVdsService::FinishAddDiskToVdProviders, %d, hr=%lX, name=%s
CVdsService::RemoveDiskFromVdProviders, 1
CVdsService::RemoveDiskFromVdProviders, 2, hr=%lX
CVdsService::RemoveDiskFromVdProviders, 3, hr=%lX
HBA_GetNumberOfAdapters
HBA_GetAdapterName
HBA_OpenAdapter
HBA_GetAdapterAttributes
HBA_GetAdapterPortAttributes
HBA_CloseAdapter
CVdsService::LoadHbaPorts hbaStatus=%lX, 2
CVdsService::LoadHbaPorts, 3
CVdsService::LoadHbaPorts hbaStatus=%lX, 4
CVdsService::LoadHbaPorts, 5, hr=%lX
CVdsService::LoadHbaPorts hbaStatus=%lX, 6
CVdsService::LoadHbaPorts, 7
CVdsService::LoadHbaPorts, 8, hr=%lX
CVdsService::LoadHbaPorts, 9, hr=%lX
iscsidsc.dll
CVdsService::LoadIscsiInitiator: CVdsIscsiInitiatorAdapterInternal CreateInstance: Out of memory.
CVdsService::LoadIscsiInitiator: Invalid IP address retrieved.
CVdsService::FindLunFromId()
CVdsService::FindLunFromId, 1 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
Unknown
CVdsService::FindLunFromId, 2 disk path %ws
CVdsService::GetDiskIdFromMap()
CVdsService::GetDiskIdFromMap, 1
LUN-Disk lookup from map hResult:0x%08x IN LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}, OUT DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws]
CVdsService::GetLunIdFromMap()
LUN-Disk lookup from map hResult:0x%08x IN [%ws] OUT LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsService::GetLunIdFromProviders()
CVdsService::GetLunIdFromProviders, 1, path=%ws, hr=%lX
CVdsService::GetLunIdFromProviders, 2, path=%ws
CVdsService::GetLunIdFromProviders, 3 [%ws] to LUN-disk map, hr=%lX
CVdsService::GetLunIdFromProviders, 4, Type=%ld, CodeSet=%ld, size=%lu
ID identifier={%.2x}
LUN-Disk lookup from providers hResult:0x%08x IN [%ws] OUT LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsService::AddLunIdToMap()
CVdsService::AddLunIdToMap, 1, hr=%lX
CVdsService::AddLunIdToMap, 2, path=%S, %s
CVdsService::AddLunIdToMap, 3 LunId: path=%S, %s, hr=%lX
CVdsService::AddLunIdToMap, 4 LunId: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}path=%S, %s
CVdsService::AddLunIdToMap, 5
CVdsService::AddLunIdToMap, 6
Added LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}[%ws] to LUN-disk map
EXIT CVdsService::AddLunIdToMap, hr=%lX
CVdsService::RemoveLunIdFromMap()
Removing LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}[%ws] from LUN-disk map
CVdsService::RemoveFromLunIdMap,1: Failed to find entry to delete{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsService::CopyStorageDescriptorString
CVdsService::CopyStorageDescriptorString, 1
CVdsService::CopyStorageDescriptorString, 2
CVdsService::CopyStorageDescriptorString, 3
CVdsService::CopyStorageDeviceIdDescriptorToLun
CVdsService::CopyStorageDeviceIdDescriptorToLun, 1, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 2, Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 4, size=%ld, offset=%ld, count=%ld, assoc count=%ld, version=%lu
CVdsService::CopyStorageDeviceIdDescriptorToLun, 5, Device Assoc. Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 6, Device Assoc. Count=%ld
CVdsService::CopyStorageDeviceIdDescriptorToLun, 7, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 8, field offset:%lX, Id size:%lX, Next:%lX, Index:%lu, dwIdCount:%lu, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 9, hr=%lX
CVdsService::CopyStorageDeviceIdDescriptorToLun, 10, Assoc=%ld, Type=%ld, CodeSet=%ld, size=%lu
CVdsService::EmptyLunInformation
CVdsService::GetLunInformationForDisk
CVdsService::GetLunInformationForDisk, pathname=%S
CVdsService::GetLunInformationForDisk, 1, hr=%lX
CVdsService::GetLunInformationForDisk, 2, hr=%lX
CVdsService::GetLunInformationForDisk, 3, hr=%lX
CVdsService::GetLunInformationForDisk, 4, error=%ld
CVdsService::GetLunInformationForDisk, 4.5, hr=%lX
CVdsService::GetLunInformationForDisk, 5, hr=%lX
CVdsService::GetLunInformationForDisk, 5b, VendorIdOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 6, hr=%lX
CVdsService::GetLunInformationForDisk, 6b, ProductIdOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 7, hr=%lX
CVdsService::GetLunInformationForDisk, 7b, ProductRevisionOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 8, hr=%lX
CVdsService::GetLunInformationForDisk, 8b, SerialNumberOffset=%ld, cbQueryBuffer=%ld, propertiesOffset=%ld
CVdsService::GetLunInformationForDisk, 9, hr=%lX
CVdsService::GetLunInformationForDisk, 9b, error=%ld
CVdsService::GetLunInformationForDisk, 10, hr=%lX
CVdsService::GetLunInformationForDisk, 10b, Size=%ld, cbSize=%ld, header size=%ld, error=%ld
CVdsService::GetLunInformationForDisk, 11, hr=%lX
CVdsService::GetLunInformationForDisk, 11.5, dwSize=%lu, Buffer=%lu, Size=%lu, hr=%lX
CVdsService::GetLunInformationForDisk, 11.7, hr=%lX, cbQueryBuffer=%ld, dwSize=%ld
CVdsService::GetLunInformationForDisk, 12, hr=%lX
CVdsService::AddNetworkShare()
CVdsService::AddNetworkShare: Skipping NetShareAdd(): GetDriveType() == %u
CVdsService::AddNetworkShare: NetShareAdd() failed: %ld
CVdsService::IsLetterInMountMgrDB()
\DosDevices\%c:
CVdsService::IsLetterInMountMgrDB, 1, hr=%lX
CVdsService::IsLetterInMountMgrDB, 2
\\.\MountPointManager
CVdsService::IsLetterInMountMgrDB, 4, error=%ld
CVdsService::IsLetterInMountMgrDB, 5
CVdsService::IsLetterInMountMgrDB, 6, (%S): error=%ld
CVdsService::ToggleAutoMountPoint()
CVdsService::ToggleAutoMountPoint: CreateFile failed: %X
CVdsService::ToggleAutoMountPoint: IOCTL_MOUNTMGR_SET_AUTO_MOUNT failed: %X
CVdsService::GetObjectFromProviders, 2, hr=%lX
CVdsService::GetObjectFromProviders, 4, %lX
CVdsService::GetObjectFromProviders, 5, %lX
CVdsService::GetDiskId()
CVdsService::GetDiskId: unexpected error from provider: %X
CVdsService::GetVolumeId, 2, error=%ld
CVdsService::GetVolumeId: unexpected error from provider: %X
CVdsService::ResetDiskWrapper()
CVdsService::ResetDiskWrapper: 0: %lX.
CVdsService::ResetDiskWrapper: 1: %lX.
CVdsService::ResetDiskWrapper: 2: %lX.
CVdsService::ResetDiskWrapper: 3: %lX.
CVdsService::ResetDiskWrapper: 4: %lX.
CVdsService::ResetDiskWrapper: 5: %lX.
CVdsService::ResetDiskWrapper: 6: %lX.
CVdsService::ResetLunWrapper()
CVdsService::ResetLunWrapper, 1, hr=%lX
CVdsService::ClaimDiskIfRaw, 2, error=%ld
CVdsService::ClaimDiskIfRaw, 3, name=%s, error=%ld
CVdsService::ClaimDiskIfRaw, 4, name=%s, error=%ld
CVdsService::ClaimDiskIfRaw, 5, name=%s, error=%ld
CVdsService::ClaimRawDisk()
CVdsService::ClaimRawDisk, 0, name=%s
CVdsService::ClaimRawDisk, 1, name=%s, error=%ld
CVdsService::ClaimRawDisk, 1.1, name=%s, error=%ld
CVdsService::ClaimRawDisk, 2, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3.5, name=%s, error=%ld
CVdsService::ClaimRawDisk, 3.7, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4.3, name=%s, error=%ld
CVdsService::ClaimRawDisk, 4.4, name=%s, error=%ld
CVdsService::ClaimRawDisk, 5, name=%s, error=%ld
CVdsService::ClaimRawDisk, 6, name=%s, hr=%lX
CVdsService::FindRawDisk()
CVdsService::FindRawDisk, 0
CVdsService::FindRawDisk, 1
CVdsService::FindRawDisk, 2
CVdsService::FindRawDisk, 3
CVdsService::FindRawDisk, 4
CVdsService::FindRawDisk, 5
CVdsService::RemoveRawDisk()
CVdsService::RemoveRawDisk()(2)
CVdsService::RemoveObsoleteObject()
CVdsService::OnDiskLayoutChange()
CVdsService::OnDiskLayoutChange, 1
CVdsService::OnDiskLayoutChange, 2
CVdsService::OnDiskLayoutChange, 2.9, %lX
CVdsService::OnDiskLayoutChange, 3, %lX, path=%s
CVdsService::OnDiskLayoutChange, 4
CVdsService::OnDiskLayoutChange, 5
CVdsService::OnDiskLayoutChange, 6, path=%s, %ld
CVdsService::OnDiskLayoutChange, 7, path=%s, %ld
CVdsService::HandleDiskLayoutChange()
CVdsService::HandleDiskLayoutChange, 1, Path=%p, Layout=%p, pbDisable=%p, name=%s
CVdsService::HandleDiskLayoutChange, 1a
CVdsService::HandleDiskLayoutChange, 1b, hr=%lX
CVdsService::HandleDiskLayoutChange, 2, name=%s, hr=%lX
CVdsService::OnDiskLayoutChange(2)
CVdsService::OnDiskLayoutChange(2), 1, name=%s, Layout=%p
CVdsService::OnDiskLayoutChange(2), 1a
CVdsService::OnDiskLayoutChange(2), 1b, hr=%1X
CVdsService::OnDiskLayoutChange(2), 2, name=%s, hr=%lX
CVdsService::OnDiskLayoutChange(2), 3, name=%s, hr=%lX
CVdsService::SendDiskNotification()
CVdsService::SendDriveLetterNotification()
CVdsService::SendMountPointsNotificaiton()
CVdsService::SendVolumeNotification()
CVdsService::GetHbaPort()
CVdsService::GetInitiatorAdapter()
CVdsService::GetInitiatorAdapter(), 1
CVdsService::GetInitiatorAdapter(), 2
CVdsService::GetInitiatorPortal()
CVdsService::GetInitiatorPortal(), 1
CVdsService::GetInitiatorPortal(), 2
CVdsService::GetDisk(), 1
CVdsService::GetDisk(), 2, hr=%lX
CVdsService::GetDisk(), 3, hr=%lX
CVdsService::GetDiskIUnknown()
CVdsService::InternalQueryDisks()
CVdsService::DumpUnallocatedDisks, 1, hr=%lX
CVdsService::DumpUnallocatedDisks, 2, hr=%lX
CVdsService::DumpUnallocatedDisks, 3, hr=%lX
UNALLOCATED DISK UNALLOCATED DISK UNALLOCATED DISK
Name = %s
Deleted = %s
Disk Number = %ld
Being Cleaned = %s
Offline Reason = %ld
Status = %ld
Health = %ld
Device Type = %ld
Media Type = %ld
Size = %I64u
%I64X
BPS = %lu
SPT = %lu
TPC = %lu
Flags = 0x%lX
BusType = %lu
Partition Type = %lu
Address = %s
FriEndly Name = %s
Adapter Name = %s
Device Path = %s
DWORD sig = 0x%lX
GUID sig: %s
VDS ID= %s
Location Path = %s
AddObjectToGlobalMap()
CVdsService::AddObjectToGlobalMap, 2, error = %ld
CVdsService::AddObjectToGlobalMap, 3, error = %ld
FindOrCreateCookieInGlobalMap()
AddFSPropertiesToMap
CVdsService::AddFSPropertiesToMap, 1, pObject=%p, pFSProp=%p
CVdsService::AddFSPropertiesToMap, 2, error = %ld
CVdsService::AddFSPropertiesToMap, 3, error = %ld
RemoveFSPropertiesFromMap
CVdsService::RemoveFSPropertiesFromMap, 1, pObject=%p
CVdsService::RemoveFSPropertiesFromMap, 2, error = %ld
CVdsService::RemoveFSPropertiesFromMap, 3, error = %ld
RemoveAllFSPropertiesFromMap
CVdsService::RemoveObjectFromMap(),1: The map is corrupt, elements can be found but not removed!!!!
CVdsService::FindWrapperInMap()
CVdsService::GetDiskObjectWrapper()
GetDiskObjectWrapper, 1: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p hr:0x%08x
GetDiskObjectWrapper, 2: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetDiskObjectWrapper, 3: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetDiskObjectWrapper, 4: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
Looking for wrapper in LUN-disk map for disk: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p hr:0x%08x
CVdsService::GetLunObjectWrapper()
GetLunObjectWrapper, 1: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetLunObjectWrapper, 2: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
GetLunObjectWrapper, 3: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} hr=%lX
Looking for wrapper in LUN-disk map for LUN: {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} Wrapper:%p, Unknown:%p, hr:0x%08x
CVdsService::FindOrCreateWrapper, 4, hr=%lX
Disk {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] is LUN Id {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} from LUN-disk map; reusing wrapper (Unk:%p, Wrapper:%p)
No match in LUN-disk map for Disk {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] (Unk: %p)
LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws] is disk Id:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} from LUN-disk map; re-using wrapper (Unk:%p Wrapper:%p)
No match in LUN-disk map for LUN {%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x} [%ws]; (Unk: %p)
CVdsService::GetProperties()
CVdsService::IsServiceReady()
CVdsService::WaitForServiceReady()
CVdsService::QueryProviders, 1
CVdsService::QueryProviders, 2
CVdsService::GetObject, 1, hr=%lX
CVdsService::GetObject, 2, hr=%lX
CVdsService::GetObject, 3
CVdsService::QueryDriveLetters()
CVdsService::QueryDriveLetters, 1
CVdsService::QueryDriveLetters, 2
CVdsService::QueryDriveLetters, 3
CVdsService::QueryFileSystemTypes()
CVdsService::QueryFileSystemTypes, 1
CVdsService::QueryFileSystemTypes, 2
CVdsService::QueryFileSystemTypes, 3
CVdsService::QueryFileSystemTypes, 4
FAT32
CVdsService::QueryMaskedDisks
CVdsService::QueryUnallocatedDisks
CVdsService::QueryUnallocatedDisks, 1, hr=%lX
CVdsService::Reenumerate()
CVdsService::Reenumerate(), 1, hr=%lX
CVdsService::Reenumerate(), 2, hr=%lX
CVdsService::Reenumerate(), 3, hr=%lX
CVdsService::Reenumerate, 4, %lX
CVdsService::Reenumerate, 5, %lX
CVdsService::Reenumerate, 6, hr = %lX
CVdsService::Reenumerate(), 7, hr=%lX
CVdsService::Reenumerate(), 8, hr=%lX
CVdsService::Reenumerate(), 9, hr=%lX
CVdsService::Reenumerate, 10, hr=%lX
CVdsService::Reenumerate(), 11, hr=%lX
CVdsService::Reenumerate(), 12, IOCTL_SCSI_RESCAN_BUS succeeded
CVdsService::Reenumerate(), 13, Error %1X for IOCTL_SCSI_RESCAN_BUS
CVdsService::Reenumerate, 14, hr=%lX
CVdsService::Reenumerate, 15, %lX
CVdsService::Refresh()
CVdsService::Refresh: failed to get the private interface from a software provider: %X
CVdsService::CleanupObsoleteMountPoints()
CVdsService::CleanupObsoleteMountPoints, 1, error=%ld
CVdsService::CleanupObsoleteMountPoints, 2, error=%ld
CVdsService::CleanupObsoleteMountPoints, 3, error=%ld
CVdsService::CleanupObsoleteMountPoints, 4, error=%ld
CVdsService::CleanupObsoleteMountPoints, 5, name=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 6, path=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 7, path=%S, error=%ld
CVdsService::CleanupObsoleteMountPoints, 8, error=%ld
CVdsService::Advise()
CVdsService::Advise, 1, %lX
CVdsService::Unadvise()
CVdsService::Unadvise, 1, %lX
CVdsService::Reboot()
CVdsService::Reboot: CoImpersonateClient failed: %X
CVdsService::Reboot: failed to enable shutdown privilege: %X
CVdsService::Reboot: FormatMessage failed: %X
CVdsService::Reboot: failed to restart the system: %X
CVdsService::Reboot: failed to disable shutdown privilege: %X
CVdsService::Reboot: CoRevertToSelf failed: %X
CVdsService::SetFlags()
CVdsService::ClearFlags()
CVdsService::QueryHbaPorts()
CVdsService::InternalQueryHbaPorts()
CVdsService::GetInitiatorName()
GetIScsiInitiatorNodeNameW
CVdsService::GetInitiatorName: Could not access necessary function in iSCSI library.
CVdsService::GetInitiatorName: Out of memory.
CVdsService::GetInitiatorName: GetIScsiInitiatorNodeName failed: %X
CVdsService::QueryInitiatorAdapters()
CVdsService::QueryInitiatorAdapters: Could not load iSCSI library.
CVdsService::QueryInitiatorAdapters, hr=%lX
CVdsService::InternalQueryInitiatorAdapters()
CVdsService::InternalQueryInitiatorAdapters, hr=%lX
CVdsService::SetIpsecGroupPresharedKey()
CVdsService::SetIpsecGroupPresharedKey: IPsec functionality currently not supported
CVdsService::SetAllIpsecTunnelAddresses()
CVdsService::SetAllIpsecTunnelAddresses: IPsec functionality currently not supported
CVdsService::SetAllIpsecSecurity()
CVdsService::SetAllIpsecSecurity: IPsec functionality currently not supported
CVdsService::SetInitiatorSharedSecret()
SetIScsiInitiatorCHAPSharedSecret
CVdsService::SetInitiatorSharedSecret: Could not access necessary function in iSCSI library.
CVdsService::SetInitiatorSharedSecret, 1, hr=%lX
CVdsService::SetInitiatorSharedSecret, 2, %X
CVdsService::SetInitiatorSharedSecret, 3, %X
CVdsService::SetInitiatorSharedSecret, 4, status=%X
CVdsService::RememberTargetSharedSecret()
AddIScsiStaticTargetW
CVdsService::RememberTargetSharedSecret: Could not access necessary function in iSCSI library.
CVdsService::RememberTargetSharedSecret, 1, %lX
CVdsService::RememberTargetSharedSecret: Could not retrieve target object from provider: %X
CVdsService::RememberTargetSharedSecret: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsService::RememberTargetSharedSecret: spTarget->GetProperties: %X
CVdsService::RememberTargetSharedSecret: Invalid target target iSCSI name retrieved from provider.
CVdsService::RememberTargetSharedSecret: AddIScsiStaticTarget failed: %X
CVdsService::RegisterProvider()
CVdsService::RegisterProvider, 1
CVdsService::RegisterProvider, 2
CVdsService::RegisterProvider, 3
CVdsService::RegisterProvider, 4
CVdsService::RegisterProvider, 5
CVdsService::RegisterProvider, 6
CVdsService::RegisterProvider, 7, error=%ld
CVdsService::RegisterProvider, 8, error=%ld
CVdsService::RegisterProvider, 9, error=%ld
CVdsService::RegisterProvider, 10
CVdsService::RegisterProvider, 11, error=%ld
CVdsService::RegisterProvider, 12, error=%ld
CVdsService::RegisterProvider, 13, error=%ld
CVdsService::RegisterProvider, 14, error=%ld
CVdsService::UnregisterProvider()
%s\%s\%s
CVdsService::UnregisterProvider: Failed to delete %s key(%lX)
CVdsService::GetDiskIdFromLunInfo
CVdsService::GetDiskIdFromLunInfo, 1, hr=%lX, pLunInfo=%p, pDiskId=%p
CVdsService::GetDiskIdFromLunInfo, 2, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 3, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 4, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 5, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 6, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 7, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 8, hr=%lX
CVdsService::GetDiskIdFromLunInfo, 9, hr=%lX
EXIT CVdsService::GetDiskIdFromLunInfo, hr=%lX
CVdsService::GetDeviceDetailData
CVdsService::GetDeviceDetailData, 1, hDevInfo=%p, pDeviceIntfData=%p, ppDetailData=%p
CVdsService::GetDeviceDetailData, 2, hr=%lX
CVdsService::GetDeviceDetailData, 3, hr=%lX
CVdsService::GetDeviceDetailData, 4, hr=%lX
CVdsService::GetDeviceDetailData, 5
EXIT CVdsService::GetDeviceDetailData, hr=%lX
CVdsService::UninstallDisks
CVdsService::UninstallDisks, 1, pDiskIdArray=%p, ulCount=%ld,pbReboot=%p, pResults=%p
CVdsService::UninstallDisks, 2, hr=%lX
CVdsService::UninstallDisks, 3
CVdsService::UninstallDisks, 4
%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x
CVdsService::UninstallDisks, 5, ObjectId=%s, hr=%lX
CVdsService::UninstallDisks, 6, %lX, name=%s
CVdsService::UninstallDisks, 7, %lX, name=%s
CVdsService::UninstallDisks, 8, hr=%lX, name=%s
CVdsService::UninstallDisks, 9, hr=%lX, name=%s
CVdsService::UninstallDisks, 10, hr=%lX, DiskId=%s
CVdsService::UninstallDisks, 11, hr=%lX, name=%s
CVdsService::UninstallDisks, 12, hr=%lX, DiskId=%s
EXIT CVdsService::UninstallDisks, hr=%lX
CVdsService::UninstallOneDisk
CVdsService::UninstallOneDisk, 1, hr=%lX, pName=%p, pbRebootReq=%p
CVdsService::UninstallOneDisk, 2, hr=%lX
CVdsService::UninstallOneDisk, 3, hr=%lX
CVdsService::UninstallOneDisk, 4, error=%ld
CVdsService::UninstallOneDisk, 5, error=%ld, name=%s
CVdsService::UninstallOneDisk, 6, error=%ld, name=%s
CVdsService::UninstallOneDisk, 7, error=%ld, name=%s
CVdsService::UninstallOneDisk, 8, error=%lX, name=%s
CVdsService::UninstallOneDisk, 9, hr=%lX
CVdsService::UninstallOneDisk, 10, hr=%lX
CVdsService::UninstallOneDisk, 11, hr=%lX
EXIT CVdsService::UninstallOneDisk, hr=%lX
CVdsService::UninstallDevice
CVdsService::UninstallDevice, hDevInfo=%p, pDevInfoData=%p, pbRebootReq=%p
CVdsService::UninstallDevice, query removal was vetoed by %ws (veto type %u)
EXIT CVdsService::UninstallDevice, hr=%lX
CVdsService::GetDiskNameById
CVdsService::GetDiskNameById, 1, pDiskId=%p, ppName=%p, nRet=%ld
CVdsService::GetDiskNameById, 2, hr=%lX
CVdsService::GetDiskNameById, 3, hr=%lX
CVdsService::GetDiskNameById, 4, hr=%lX
CVdsService::GetDiskNameById, 5, %lX
CVdsService::GetDiskNameById, 6, %lX
CVdsService::GetDiskNameById, 7, %lX
CVdsService::GetDiskNameById, 8
EXIT CVdsService::GetDiskNameById, hr=%lX
CVdsService::GetNameByIdForRaw
CVdsService::GetNameByIdForRaw, 1, pDiskId=%p, ppName=%p
CVdsService::GetNameByIdForRaw, 2, hr=%lX
CVdsService::GetNameByIdForRaw, 3, hr=%lX
CVdsService::GetNameByIdForRaw, 4, hr=%lX
CVdsService::GetNameByIdForRaw, 5
CVdsService::GetNameByIdForRaw, 6, hr=%lX
CVdsService::GetNameByIdForRaw, 7, error=%ld, name=%s
CVdsService::GetNameByIdForRaw, 8, error=%ld, name=%s
CVdsService::GetNameByIdForRaw, 9
\\?\PhysicalDrive%lu
CVdsService::GetNameByIdForRaw, 10, hr=%lX
EXIT CVdsService::GetNameByIdForRaw, hr=%lX
CVdsService::UninstallVolume
CVdsService::UninstallVolume, 1, hr=%lX, pName=%p, pbRebootReq=%p
CVdsService::UninstallVolume, 2, hr=%lX
CVdsService::UninstallVolume, 3, hr=%lX
CVdsService::UninstallVolume, 4, error=%ld
CVdsService::UninstallVolume, 5, error=%ld, name=%s
CVdsService::UninstallVolume, 6, error=%ld, name=%s
CVdsService::UninstallVolume, 7, error=%ld, name=%s
CVdsService::UninstallVolume, 7.5, hr=%lX, name=%s
CVdsService::UninstallVolume, 7.7,  name=%s
CVdsService::UninstallVolume, 8, error=%lX, name=%s
CVdsService::UninstallVolume, 9, hr=%lX
CVdsService::UninstallVolume, 10, hr=%lX
CVdsService::UninstallVolume, 11, hr=%lX
EXIT CVdsService::UninstallVolume, hr=%lX
CVdsService::GetVolumeNameById
CVdsService::GetVolumeNameById, 1, hr=%lX, nRet=%ld, ppName=%p
CVdsService::GetVolumeNameById, 2, hr=%lX
CVdsService::GetVolumeNameById, 2b, hr=%lX
CVdsService::GetVolumeNameById, 3, %lX
CVdsService::GetVolumeNameById, 4, %lX
CVdsService::GetVolumeNameById, 5, %lX
CVdsService::GetVolumeNameById, 6
EXIT CVdsService::GetVolumeNameById, hr=%lX
CVdsService::GetVolumeIdList
CVdsService::GetVolumeIdList, 1, pDiskIdArray=%p, ulDiskCount=%lu, pUninstallInfo=%p
CVdsService::GetVolumeIdList, 2
CVdsService::GetVolumeIdList, 3
CVdsService::GetVolumeIdList, 4, %lX
CVdsService::GetVolumeIdList, 5, %lX
CVdsService::GetVolumeIdList, 6
CVdsService::GetVolumeIdList, 7, %lX
EXIT CVdsService::GetVolumeIdList, hr=%lX
CVdsService::IsMatchLun
EXIT CVdsService::IsMatchLun, return=%d
CVdsService::IsMatchDeviceIdDescriptor
CVdsService::IsMatchDeviceIdDescriptor, 1
EXIT CVdsService::IsMatchDeviceIdDescriptor, return=%d
CVdsService::IsMatchingIdentifier
CVdsService::IsMatchingIdentifier, 1
CVdsService::IsMatchingIdentifier, NO IDENTIFIERS ON TARGET. OK for IDE.
EXIT CVdsService::IsMatchingIdentifier, return=%d
CVdsService::cmp_str_eq()
CVdsService::RemoveObsoleteDevNodes
CVdsService::RemoveObsoleteDevNodes, 1, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 2, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 3, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 4, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 5, hr=%lX
CVdsService::RemoveObsoleteDevNodes, 6, hr=%lX
CVdsService::MigrateSaveMountPoints()
CVdsService::MigrateSaveMountPoints, 1
CVdsService::MigrateSaveMountPoints, 2, hr=%lX
CVdsService::MigrateSaveMountPoints, 3, hr=%lX
CVdsService::MigrateSaveMountPoints, 4, hr=%lX
CVdsService::MigrateSaveMountPoints, 5, hr=%lX
CVdsService::MigrateSaveMountPoints, 6, hr=%lX
CVdsService::MigrateSaveMountPoints, 7, hr=%lX
CVdsService::MigrateSaveMountPoints, 8, hr=%lX
CVdsService::MigrateSaveMountPoints, 9, hr=%lX, name=%S
CVdsService::MigrateSaveMountPoints, 10, hr=%lX, name=%S
CVdsService::MigrateSaveMountPoints, 11, hr=%lX, name=%S
CVdsService::MigrateSaveMountPoints, 12, name=%S
MigrateAssignClearMountPoints()
MigrateAssignClearMountPoints, No mount points.
CVdsService::GetSANPolicy()
CVdsService::GetSANPolicy, 1
\\.\PartmgrControl
CVdsService::GetSANPolicy, 4, hr=%lX
CVdsService::GetSANPolicy, 5, hr=%lX
CVdsService::GetSANPolicy, 6
CVdsService::SetSANPolicy()
CVdsService::SetSANPolicy, 1
CVdsService::SetSANPolicy, 3, hr=%lX
CVdsService::SetSANPolicy, 4, hr=%lX
CVdsService::GetDiskObject()
CVdsService::GetDiskObject, 1, hr=%lX
CVdsService::GetDiskObject, 2, hr=%lX
CVdsService::GetDiskObject, 3
CVdsService::RemoveUnallocatedDiskFromMap()
CVdsService::RemoveUnallocatedDiskFromMap, 1, Key=%S
CVdsService::GetRawDiskByDeviceID()
CVdsService::GetRawDiskByDeviceID(), 1, hr=%lX
CVdsService::GetRawDiskByDeviceID(), 2
CVdsService::GetRawDiskByDeviceID(), 3, hr=%lX
CVdsService::GetRawDiskByDeviceID(), 4, hr=%lX
CVdsService::GetDiskFromSwProviders()
CVdsService::GetDiskFromSwProviders, 2, %lX
CVdsService::GetDiskFromSwProviders, 3, %lX
:*+=|\;.,<>?/[]"
:*+=|\;.,<>?/[]"
%CVdsProvider::GetProperties()
CVdsProvider::GetProperties, 1, error=%lX
CVdsProvider::GetVersionSupport()
CVdsProvider::GetVersionSupport, 1, error=%lX
CVdsProvider::CreatePack()
VDS(0X02080003): failed to get IUnknown interface: %X
VDS(0X02080004): failed to add pack to ObjectMap
CVdsProvider::QuerySubSystems()
CVdsProvider::QuerySubSystems, 1, hr=%lX
CVdsProvider::Reenumerate()
CVdsProvider::Reenumerate, 1, error=%lX
CVdsProvider::Refresh()
CVdsProvider::Refresh, 1, error=%lX
CVdsProvider::QueryVDisks
CVdsProvider::QueryVDisks, 1, error=%lX
CVdsProvider::CreateVDisk
CVdsProvider::CreateVDisk, 1, error=%lX
CVdsProvider::AddVDisk
CVdsProvider::AddVDisk, 1, error=%lX
CVdsProvider::AddVDisk, 2, hr=%lX
CVdsProvider::AddVDisk, 3, hr=%lX
CVdsProvider::GetDiskFromVDisk
CVdsProvider::GetDiskFromVDisk, pVDisk=%p, ppDisk=%p, hr=%lX
CVdsProvider::GetDiskFromVDisk, 1, hr=%lX
CVdsProvider::GetDiskFromVDisk, 1.1, hr=%lX
CVdsProvider::GetDiskFromVDisk, 2, hr=%lX
CVdsProvider::GetDiskFromVDisk, 3, hr=%lX
CVdsProvider::GetDiskFromVDisk, 4, hr=%lX
CVdsProvider::GetVDiskFromDisk, 1, hr=%lX
CVdsProvider::GetVDiskFromDisk, 2, hr=%lX
CVdsProvider::GetVDiskFromDisk, 3, hr=%lX
CVdsProvider::GetVDiskFromDisk, 4, hr=%lX
CVdsProvider::GetVDiskFromDisk, 5, hr=%lX
CVdsProvider::GetProviderType()
CVdsProvider::GetProviderType, 1, error=%lX
CVdsProvider::GetProviderType2()
CVdsProvider::GetProviderType2, 1, hr=%lX
CVdsProvider::GetProviderType2, 2, hr=%lX
CVdsProvider::GetProviderType2, 3, hr=%lX
CVdsProvider::QueryStoragePools()
CVdsProvider::QueryStoragePools, 1, hr=%lX
CVdsProvider::QueryStoragePools, 2, hr=%lX
CVdsProvider::QueryStoragePools, 3, hr=%lX
CVdsProvider::CreateLunInStoragePool()
CVdsProvider::CreateLunInStoragePool, 1, hr=%lX
CVdsProvider::CreateLunInStoragePool, 2, NULL StoragePoolId
CVdsProvider::CreateLunInStoragePool, 3, hr=%lX
CVdsProvider::CreateLunInStoragePool, 4, hr=%lX
CVdsProvider::QueryMaxLunCreateSizeInStoragePool()
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 1, hr=%lX
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 2, NULL StoragePoolId
CVdsProvider::QueryMaxLunCreateSizeInStoragePool, 3, error=%lX
CVdsHbaPortInternal::~CVdsHbaPortInternal()
CVdsHbaPortInternal::Initialize()
CVdsHbaPortInternal::Initialize: NULL input arguments
CVdsHbaPortInternal::GetProperties()
CVdsHbaPortInternal::GetProperties: NULL input arguments
CVdsHbaPortInternal::SetAllPathStatuses()
CVdsHbaPort::~CVdsHbaPort()
CVdsHbaPort::GetProperties()
CVdsHbaPort::GetProperties, 1, error=%lX
CVdsHbaPort::SetAllPathStatuses()
CVdsHbaPort::SetAllPathStatuses, 1, hr=%lX
CVdsHbaPort::SetAllPathStatuses, 2, hr=%lX
CVdsServiceAsyncObject::CVdsServiceAsyncObject()
CVdsServiceAsyncObject::~CVdsServiceAsyncObject()
CVdsIscsiInitiatorPortalInternal::CVdsIscsiInitiatorPortalInternal()
CVdsIscsiInitiatorAdapterInternal::~CVdsIscsiInitiatorAdapterInternal()
CVdsIscsiInitiatorAdapterInternal::Initialize()
CVdsIscsiInitiatorAdapterInternal::Initialize: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::~CVdsIscsiInitiatorAdapterInternal, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal()
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal: CVdsIscsiInitiatorPortalInternal CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::AddInitiatorPortal, 3, hr=%lX
CVdsIscsiInitiatorAdapterInternal::RemoveInitiatorPortals()
CVdsIscsiInitiatorAdapterInternal::GetInitiatorPortal()
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread()
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread exiting due to shutdown
LoginIScsiTargetW
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget (persistent) failed, already logged in: %lX
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget (persistent) failed: %lX
CVdsIscsiInitiatorAdapterInternal::LoginToTargetThread: LoginIScsiTarget failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread()
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread exiting due to shutdown
LogoutIScsiTarget
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread: LogoutIScsiTarget failed: %X, session ID: %X:%X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTargetThread, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::GetProperties()
CVdsIscsiInitiatorAdapterInternal::GetProperties: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::GetProperties: Out of memory.
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals()
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals: pEnum CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::QueryInitiatorPortals: pEnum->Append: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget()
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: NULL input arguments
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not access necessary functions in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pwszInitiatorName Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: GetInitiatorPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spInitPortalUnk->QueryInterface IID_IVdsIscsiInitiatorPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spInitPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not retrieve target portal object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pIscsiTargetPortal Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: VdsIscsiIpAddressToString &vdsTargetPortalProp.address: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Could not retrieve target object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTarget->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: Invalid target iSCSI name retrieved from provider.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pLoginParam->pwszTargetName Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: pIscsiTargetPortalGroup Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spTarget->QueryPortalGroups: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spEnumPortalGroup->Next: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalGroupUnk->QueryInterface IID_IVdsIscsiPortalGroup: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalGroup->QueryAssociatedPortals: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spEnumPortal->Next: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spPortal->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: VdsIscsiIpAddressToString &vdsPortalProp.address: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: AddIScsiStaticTarget failed: %X
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: spAsync CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LoginToTarget: CreateThread failed: %X
MSiSCSI_InitiatorSessionInfo
UniqueAdapterId
SessionsList
TargetiSCSIName
UniqueSessionId
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget()
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: NULL input arguments
ReportIScsiPersistentLoginsW
RemoveIScsiPersistentTargetW
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Could not access necessary functions in iSCSI library.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: pLogoutParam Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget, 1, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Could not retrieve target object from provider: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spTargetUnk->QueryInterface IID_IVdsIscsiTarget: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spTarget->GetProperties: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: Invalid target iSCSI name retrieved from provider.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: ReportIScsiPersistentLoginsW: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: pPersistentLogins Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: RemoveIScsiPersistentTargetW: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiConnectToNamespace failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiFindInstanceOfClass MSiSCSI_InitiatorSessionInfo failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetUlonglongFromInstance UniqueAdapterId failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetVariantObjectArrayFromInstance SessionsList failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: vdsSessionsListEnum.Attach failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: vdsSessionsListEnum.Next failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetVariantStringFromInstance TargetiSCSIName failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: *ppCurrentSession Alloc: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: VdsWmiGetUlonglongFromInstance UniqueSessionId failed: %X
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget, 2, hr=%lX
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: spAsync CreateInstance: Out of memory.
CVdsIscsiInitiatorAdapterInternal::LogoutFromTarget: CreateThread failed: %X
CVdsIscsiInitiatorAdapter::~CVdsIscsiInitiatorAdapter()
CVdsIscsiInitiatorAdapter::GetProperties()
CVdsIscsiInitiatorAdapter::GetProperties, 1, error=%lX
CVdsIscsiInitiatorAdapter::QueryInitiatorPortals()
CVdsIscsiInitiatorAdapter::QueryInitiatorPortals, 1, hr=%lX
CVdsIscsiInitiatorAdapter::LoginToTarget()
CVdsIscsiInitiatorAdapter::LoginToTarget, 1, error=%lX
CVdsIscsiInitiatorAdapter::LogoutFromTarget()
CVdsIscsiInitiatorAdapter::LogoutFromTarget, 1, error=%lX
CVdsIscsiInitiatorPortalInternal::~CVdsIscsiInitiatorPortalInternal()
CVdsIscsiInitiatorPortalInternal::Initialize()
CVdsIscsiInitiatorPortalInternal::Initialize, 1, hr=%lX
CVdsIscsiInitiatorPortalInternal::Initialize: Invalid IP address retrieved.
CVdsIscsiInitiatorPortalInternal::Initialize, 2, hr=%lX
CVdsIscsiInitiatorPortalInternal::GetProperties()
CVdsIscsiInitiatorPortalInternal::GetProperties, 1, hr=%lX
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter()
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter, 1, hr=%lX
CVdsIscsiInitiatorPortalInternal::GetInitiatorAdapter, 2, hr=%lX
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress()
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: NULL input arguments
SetIScsiTunnelModeOuterAddressW
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: m_pParentAdapter->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: VdsIscsiIpAddressToString pTunnelAddress: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: VdsIscsiIpAddressToString pDestinationAddress: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: SetIScsiTunnelModeOuterAddressW failed: %X
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity()
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: NULL input arguments
GetIScsiIKEInfoW
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::GetIpsecSecurity: m_pParentAdapter->GetProperties: %X
IVdsIscsiInitiatorAdapter::GetProperties, 1, hr: %x
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: Could not retrieve target portal object from provider: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: spPortalUnk->QueryInterface IID_IVdsIscsiPortal: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: spPortal->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: GetIScsiIKEInfoW failed: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecTunnelAddress: pIkeAuthInfo Alloc: Out of memory.
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: VdsIscsiIpsecIdToIpAddress: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity()
SetIScsiIKEInfoW
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: Could not access necessary function in iSCSI library.
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: m_pParentAdapter->GetProperties: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: VdsIscsiIpAddressToIpsecId: %X
CVdsIscsiInitiatorPortalInternal::SetIpsecSecurity: SetIScsiIKEInfoW failed: %X
CVdsIscsiInitiatorPortal::~CVdsIscsiInitiatorPortal()
CVdsIscsiInitiatorPortal::GetProperties()
CVdsIscsiInitiatorPortal::GetProperties, 1, error=%lX
CVdsIscsiInitiatorPortal::GetInitiatorAdapter()
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 1, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 2, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 3, hr: %x
CVdsIscsiInitiatorPortal::GetInitiatorAdapter, 4, hr: %x
CVdsIscsiInitiatorPortal::SetIpsecTunnelAddress()
CVdsIscsiInitiatorPortal::SetIpsecTunnelAddress: IPsec functionality currently not supported
CVdsIscsiInitiatorPortal::GetIpsecSecurity()
CVdsIscsiInitiatorPortal::GetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiInitiatorPortal::SetIpsecSecurity()
CVdsIscsiInitiatorPortal::SetIpsecSecurity: IPsec functionality currently not supported
CVdsPack::GetProvider()
VDS(0x02070001): failed to get provider: %X
VDS(0x02070002): failed to get IUnknown interface: %X
CVdsPack::CreateVolume()
CVdsPack::CreateVolume, 1, hr=%lX
CVdsPack::AddDisk()
CVdsPack::AddDisk, 1
CVdsPack::AddDisk, 2
CVdsPack::AddDisk, 3: %lX
CVdsPack::AddDisk, 4: %lX
CVdsPack::AddDisk, 5: %ld
CVdsPack::AddDisk, 6: %lX
CVdsPack::AddDisk, 7: %lX
CVdsPack::AddDisk, 8: %X
CVdsPack::AddDisk, 9: %lX
CVdsPack::AddDisk, 10: %lX
CVdsPack::MigrateGetTargetInfo()
CVdsPack::MigrateGetTargetInfo, 1
CVdsPack::MigrateGetTargetInfo, 2
CVdsPack::MigrateGetTargetInfo, 2b
CVdsPack::MigrateGetTargetInfo, 3, hr=%lX
CVdsPack::MigrateGetTargetInfo, 4, hr=%lX
CVdsPack::MigrateGetTargetInfo, 5, hr=%lX
CVdsPack::MigrateGetTargetInfo, 6, hr=%lX
CVdsPack::MigrateGetSourceInfo()
CVdsPack::MigrateGetSourceInfo, 1, hr=%lX
CVdsPack::MigrateGetSourceInfo, 2, hr=%lX
CVdsPack::MigrateGetSourceInfo, 3, hr=%lX
CVdsPack::MigrateGetSourceInfo, 4, hr=%lX
CVdsPack::MigrateGetSourceInfo, 5, hr=%lX
CVdsPack::MigrateGetSourceInfo, 6, hr=%lX
CVdsPack::MigrateGetSourceInfo, 7, hr=%lX
CVdsPack::MigrateDisks()
CVdsPack::MigrateDisks, 1, %lX
CVdsPack::MigrateDisks, 2, %lX
CVdsPack::MigrateDisks, 3, hr=%lX
CVdsPack::MigrateDisks, 4, error=%ld
CVdsPack::MigrateDisks, 5, %lX
CVdsPack::MigrateDisks, 6, %lX
CVdsPack::MigrateDisks, 7, %lX
CVdsPack::MigrateDisks, 8, %lX
CVdsPack::MigrateDisks, 9, %lX
CVdsPack::MigrateDisks, 10, %lX
CVdsPack::MigrateDisks, 11, %lX
CVdsPack::MigrateDisks, 11.1, %lX, Finish Export failed will ignore
CVdsPack::MigrateDisks, 11.2, %lX, Finish Import failed will ignore
CVdsPack::MigrateDisks, 11.3, %lX, Result vector error found in element %i
CVdsPack::MigrateDisks, 12, %lX
CVdsPack::MigrateDisks, 13, %lX
CVdsPack::MigrateDisks, 14, %lX
CVdsPack::MigrateDisks, 15, %lX
CVdsPack::MigrateDisks, 16, hr=%lX
CVdsPack::MigrateDisks, 17, %lX
CVdsPack::MigrateDisks, 18, %lX, %lX
CVdsPack::MigrateDisks, 19, %lX
CVdsPack::MigrateDisks, 20, hr=%lX
CVdsPack::MigrateDisks, 21, hr=%lX
CVdsPack::ReplaceDisk()
CVdsPack::RemoveMissingDisk()
CVdsPack::RemoveMissingDisk, 1, hr=%lX
CVdsPack::Recover()
CVdsPack::Recover, 1, hr=%lX
CVdsPack::CreateVolume2()
CVdsPack::CreateVolume2, 1, %lX
CVdsPack::CreateVolume2, 2, %lX
CVdsPack::CreateVolume2, 3, %lX
CVdsPack::CreateVolume2, 4, %lX
CVdsVolume::PostExtendVolumeHandler()
CVdsVolume::PostExtendVolumeHandler: pAsync QueryInterface failed: %lX
CVdsVolume::PostExtendVolumeHandler: pAsync->Wait failed: %lX
CVdsVolume::PostExtendVolumeHandler: pAsync->Wait returned error: %lX
CVdsVolume::PostExtendVolumeHandler,1: Failed to get volume properties returned error: %lX
CVdsVolume::PostExtendVolumeHandler,2: Volume properties invalid: %lX
CVdsVolume::PostExtendVolumeHandler,3: Failed to open handle to the volume: %lX
CVdsVolume::PostExtendVolumeHandler: NtQueryVolumeInformationFile (2) failed: %ld
CVdsVolume::PostExtendVolumeHandler, 100: DeviceIoControl (FSCTL_EXTEND_VOLUME) failed: %lX
CVdsVolume::PostExtendVolumeHandler, 101: DeviceIoControl (FSCTL_EXTEND_VOLUME) failed.
CVdsVolume::ShrinkFileSystem()
CVdsVolume::ShrinkFileSystem: GetProperties failed: %X
CVdsVolume::ShrinkFileSystem: CoCreateInstance failed to launch shrink engine: %X
CVdsVolume::ShrinkFileSystem: IVoluemShrink::Shrink() failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() Defrag Cancel operation failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() wait for completion failed: %X
CVdsVolume::ShrinkFileSystem: IVolumeShrink::Shrink() operation failed: %X
CVdsVolume::ShrinkFileSystem: IVoluemShrink::Shrink() getting volume statistics failed: %X
CVdsVolume::ShrinkRoutine()
CVdsVolume::ShrinkRoutine exiting due to shutdown
CVdsVolume::ShrinkRoutine: CoInitializeEx failed: %X
CVdsVolume::ShrinkRoutine: ShrinkFileSystem failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider call failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider pAsync->Wait failed: %X
CVdsVolume::ShrinkRoutine: IVdsVolume::Shrink provider pAsync->Wait returned error: %X
CVdsVolume::FormatRoutine()
CVdsVolume::FormatRoutine exiting due to shutdown
CVdsVolume::FormatRoutine,1: Thread Map is corrupt
FormatRoutine: failed to get FormatEx2 or EnableVolumeCompression address
CVdsVolume::FormatCallback()
CVdsVolume::FormatCallback, 1
CVdsVolume::FormatCallback: failed to compress volume: %X
CVdsVolume::OpenHandle, 1.3, volume=(%S)
CVdsVolume::OpenHandle, 1.5, hr=%lX
CVdsVolume::OpenHandle, 1.7, hr=%lX
CVdsVolume::OpenHandle, 2
CVdsVolume::OpenHandle, 3, hr=%lX
CVdsVolume::OpenHandle, 3.3, NO MEDIA
CVdsVolume::OpenHandle, 3.6, VOLUME_OFFLINE
CVdsVolume::OpenHandle, 4, volume=(%S), error=%ld
CVdsVolume::QueryAccessPathsToVolume: GetVolumePathNamesForVolumeName failed: %X
CVdsVolume::GetFileSystemPropertiesInternal()
CVdsVolume::GetFileSystemPropertiesInternal, 1, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 1b, file system name=%s
EXFAT
CSVFS
CVdsVolume::GetFileSystemPropertiesInternal, 2, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 3, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 4, status=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 5, hr=%lX
CVdsVolume::GetFileSystemPropertiesInternal, 6, hr=%lX
CVdsVolume::GetFileSystemTypeNameInternal()
CVdsVolume::GetFileSystemTypeNameInternal, 1, status=%lX
CVdsVolume::GetFileSystemTypeNameInternal, 2, hr=%lX
CVdsVolume::GetFileSystemTypeNameInternal, 3, hr=%lX
CVdsVolume::QueryFileSystemFormatSupportInternal: failed to get GetDefaultFileSystem address: %ld
CVdsVolume::QueryFileSystemFormatSupportInternal, 3, hr=%lX
CVdsVolume::IsPackOffline()
CVdsVolume::GetVolumeName, 1, hr=%lX
CVdsVolume::GetVolumeName: volume name is missing.
CVdsVolume::GetVolumeName: volume name is too long: %S.
CVdsVolume::GetVolumeName: StringCchCopyW: %S, error=%ld.
CVdsVolume::GetVolumeName: bad volume name: %s
CVdsVolume::GetVolumeName: volume name not found: %s.
CVdsVolume::SetClearFsFlags()
CVdsVolume::SetClearFsFlags, 1, hr=%lX
CVdsVolume::SetClearFsFlags, 2, hr=%lX
CVdsVolume::SetClearFsFlags, 3, hr=%lX
CVdsVolume::SetClearFsFlags, 4, name=%s, %ld
CVdsVolume::SetClearFsFlags, 5, name=%s, %ld
CVdsVolume::GetFsFlags()
CVdsVolume::GetFsFlags, 1, hr=%lX
CVdsVolume::GetFsFlags, 2, hr=%lX
CVdsVolume::GetFsFlags, 3, error=%ld
CVdsVolume::SetClearFsFlags, 4, name=%s, error=%ld
CVdsVolume::IsVolumeOnDynamicDisk()
CVdsVolume::IsVolumeOnDynamicDisk, 1, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 2, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 3, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 4, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 5, hr=%lX
CVdsVolume::IsVolumeOnDynamicDisk, 6, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags()
CVdsVolume::IsBasicMbrAndCriticalFlags, 1, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 2, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 3, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 4, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 5, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 6, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 7, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 8, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 9, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 10, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 11, hr=%lX
\Device\Harddisk%ld\Partition0
CVdsVolume::IsBasicMbrAndCriticalFlags, 12, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 13, hr=%lX
CVdsVolume::IsBasicMbrAndCriticalFlags, 14, hr=%lX
CVdsVolume::CheckVolumeDirtyFlag, 2, volume=(%S), hr=%lX
CVdsVolume::CheckVolumeDirtyFlag, 3, volume=(%S), hr=%lX
CVdsVolume::GetProperties, 1, error= %lX
CVdsVolume::GetProperties, 2, error=%lX
CVdsVolume::GetProperties, 3, hr= %lX
CVdsVolume::GetProperties, 4a, Perhaps the volume is RAW (E_INVALIDARG is returned), hr=%lX
CVdsVolume::GetProperties, 4b, hr=%lX
CVdsVolume::GetProperties, 4c, error=%ld
CVdsVolume::GetProperties, 4d, Memory allocation failure
CVdsVolume::GetPack()
CVdsVolume::GetPack: provider returned %X from GetPack.
CVdsVolume::QueryPlexes()
CVdsVolume::QueryPlexes, 1, hr=%lX
CVdsVolume::Extend()
CVdsVolume::Extend 1: hr=%lX
CVdsVolume::Extend 2: hr=%lX
CVdsVolume::Extend, 3: NtQueryVolumeInformationFile failed: %lX
CVdsVolume::Extend, 3.0: Unknown file system, do not support Extend. File system name=%s
CVdsVolume::Extend, 3.1: File systems other than NTFS, RAW, REFS and CSVFS do not support Extend
CVdsVolume::Extend, 3.15: DeviceIoControl(FSCTL_CSV_QUERY_DOWN_LEVEL_FILE_SYSTEM_CHARACTERISTICS) failed: %lX
CVdsVolume::Extend, 3.2: NtQueryVolumeInformationFile failed: %lX
CVdsVolume::Extend, 3.3: NTFS file system size cannot extend to more than 2^32 - 2 clusters
CVdsVolume::Extend, 3.4: ReFS file system size cannot extend to more than 2^63 bytes
CVdsVolume::Extend, 4: CreateEvent failed: %ld
CVdsVolume::Extend, 5: CreateThread failed: %ld
CVdsVolume::Shrink() old
CVdsVolume::AddPlex()
CVdsVolume::BreakPlex()
CVdsVolume::RemovePlex()
CVdsVolume::Delete()
CVdsVolume::Delete, .5, hr=%lX
CVdsVolume::Delete, 1
CVdsVolume::Delete, 2, hr=%lX
CVdsVolume::Delete, 3
CVdsVolume::Delete, 4
CVdsVolume::Delete, 5
CVdsVolume::Delete, 6, hr=%lX
CVdsVolume::Delete, 7
CVdsVolume::Delete, 9, hr=%ld
CVdsVolume::SetFlags()
CVdsVolume::SetFlags, 1, hr=%lX
CVdsVolume::SetFlags, 2, hr=%lX
CVdsVolume::SetFlags, 3, hr=%lX
CVdsVolume::SetFlags, 4, hr=%lX
CVdsVolume::SetFlags, 5, hr=%lX
CVdsVolume::SetFlags, 6, hr=%lX
CVdsVolume::ClearFlags()
CVdsVolume::GetFileSystemProperties()
CVdsVolume::GetFileSystemProperties, 1, hr=%lX
CVdsVolume::GetFileSystemProperties, 2, hr=%lX
CVdsVolume::GetFileSystemProperties, 3, hr=%lX
CVdsVolume::Format()
CVdsVolume::Format, 1, hr=%lX
CVdsVolume::Format, 2, hr=%lX
CVdsVolume::AddAccessPath()
CVdsVolume::AddAccessPath, .5, hr=%lX
CVdsVolume::AddAccessPath, 1, path=%ws
CVdsVolume::AddAccessPath, 1, hr=%lX
CVdsVolume::AddAccessPath, **********HIDDEN********
CVdsVolume::AddAccessPath, 2a
CVdsVolume::AddAccessPath, 2b, Drive letter=%ws, DeviceName=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 2c, Drive letter=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 2d, Access Path=%ws, win32 error=%ld
CVdsVolume::AddAccessPath, 3
CVdsVolume::AddAccessPath, 4
CVdsVolume::AddAccessPath, 5
CVdsVolume::AddAccessPath, 6
CVdsVolume::AddAccessPath, 7, win32 error=%ld
CVdsVolume::AddAccessPath, 9, win32 error=%ld
CVdsVolume::QueryAccessPaths()
CVdsVolume::QueryAccessPaths, 1, hr=%lX
CVdsVolume::QueryAccessPaths, 2, error=%ld
CVdsVolume::QueryReparsePoints()
CVdsVolume::QueryReparsePoints, 1, hr=%lX
CVdsVolume::QueryReparsePoints, 3
CVdsVolume::QueryReparsePoints, 4
CVdsVolume::QueryReparsePoints, 5
CVdsVolume::QueryReparsePoints, 6
CVdsVolume::QueryReparsePoints, 7, error=%ld
CVdsVolume::QueryReparsePoints, 8, error=%ld
CVdsVolume::QueryReparsePoints, 9, error=%ld
CVdsVolume::QueryReparsePoints, 10, error=%ld
CVdsVolume::QueryReparsePoints, 11, hr=%lX
CVdsVolume::QueryReparsePoints, 12, hr=%lX
CVdsVolume::QueryReparsePoints, 13
CVdsVolume::IsVolumeGuidPathname, 1, hr=%lX
\\?\volume{
CVdsVolume::DeleteAccessPath()
CVdsVolume::DeleteAccessPath, .5, hr=%lX
CVdsVolume::DeleteAccessPath, 0, hr=%lX
CVdsVolume::DeleteAccessPath, 1, hr=%lX
CVdsVolume::DeleteAccessPath, 2, hr=%lX
CVdsVolume::DeleteAccessPath, 3
CVdsVolume::DeleteAccessPath, 4
CVdsVolume::DeleteAccessPath, 5
CVdsVolume::DeleteAccessPath, 6, error=%ld
CVdsVolume::DeleteAccessPath, 7, error=%ld
CVdsVolume::DeleteAccessPath, 8
CVdsVolume::DeleteAccessPath, 9, hr=%lX
CVdsVolume::DeleteAccessPath, 10, error=%ld
CVdsVolume::DeleteAccessPath, 11, error=%ld
CVdsVolume::DeleteAccessPath, 13, error=%ld
CVdsVolume::DeleteAccessPath, 15
CVdsVolume::Mount()
CVdsVolume::Mount, .5, hr=%lX
CVdsVolume::Mount, 1, (%S) failed: %lX
CVdsVolume::Mount, 2, (%S) failed: %lX
CVdsVolume::Mount, 3
CVdsVolume::Mount, 4, %lX
CVdsVolume::Dismount()
CVdsVolume::Dismount, 1, hr=%lX
CVdsVolume::Dismount, 2, hr=%lX
CVdsVolume::Dismount, 3, hr=%lX
CVdsVolume::Dismount, 4, hr=%lX
CVdsVolume::Dismount, 5, hr=%lX
CVdsVolume::Dismount, 6, hr=%lX
CVdsVolume::Dismount, 7, hr=%lX
CVdsVolume::Dismount, 8, hr=%lX
CVdsVolume::Dismount, 9, hr=%lX
CVdsVolume::Dismount, 10, hr=%lX
CVdsVolume::Dismount: IOCTL_VOLUME_OFFLINE(%S) failed: %X
CVdsVolume::OfflineVolume()
CVdsVolume::OfflineVolume, 0, hr=%lX
CVdsVolume::OfflineVolume, .5, hr=%lX
CVdsVolume::OfflineVolume failed, 1, hr=%lX
CVdsVolume::OfflineVolume failed, 2, hr=%lX
CVdsVolume::OfflineVolume failed, 3, hr=%lX
CVdsVolume::OfflineVolume: IOCTL_VOLUME_OFFLINE(%S) failed, 4, hr=%lX
CVdsVolume::SetFileSystemFlags()
CVdsVolume::ClearFileSystemFlags()
CVdsVolume::GetFileSystemTypeName()
CVdsVolume::GetFileSystemTypeName, 1, hr=%lX
CVdsVolume::GetFileSystemTypeName, 2, hr=%lX
CVdsVolume::GetFileSystemTypeName, 3, hr=%lX
CVdsVolume::GetFileSystemTypeName, 3b, file system name=%s
CVdsVolume::GetFileSystemTypeName, 3c, file system name=%s, err=%ld
CVdsVolume::QueryFileSystemFormatSupport()
CVdsVolume::QueryFileSystemFormatSupport, 1, hr=%lX
CVdsVolume::QueryFileSystemFormatSupport, 2, hr=%lX
CVdsVolume::FormatEx()
CVdsVolume::FormatEx, 1, hr=%lX
CVdsVolume::Online()
CVdsVolume::Online, 1, hr=%lX
CVdsVolume::Online, 2, hr=%lX
FveGetStatusW
CVdsVolume::QueryMaxReclaimableBytes()
CVdsVolume::QueryMaxReclaimableBytes(), BITLOCKER NOT ON STACK (expected for CDROMS), hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 1.5, hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 2, NtQueryVolumeInformationFile failed: %X
CVdsVolume::QueryMaxReclaimableBytes(), 3 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 4 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 5 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 6 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 7 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 8 hr=%lX
CVdsVolume::QueryMaxReclaimableBytes(), 9: Unknown file system, do not support shrink. File system name=%s
CVdsVolume::Shrink()
CVdsVolume::Shrink,  1, hr=%lX
CVdsVolume::Shrink, 2, path=%s, hr=%lX
CVdsVolume::Shrink, 3, path=%s, hr=%lX
CVdsVolume::Shrink, 4, hr=%lX
CVdsVolume::Shrink 5, status=%lX
CVdsVolume::Shrink, 5.1: Unknown file system, do not support shrink. File system name=%s
CVdsVolume::Shrink 6, hr=%lX
CVdsVolume::Shrink 7, hr=%lX
CVdsVolume::Shrink 8, hr=%lX
CVdsVolume::Shrink 9, error=%ld
CVdsVolume::GetProperties2()
CVdsVolume::GetProperties2, 1, hr= %lX
CVdsVolume::GetProperties2, 2, hr= %lX
CVdsVolume::GetProperties2, 3, hr= %lX
CVdsVolume::GetProperties2, 4, hr= %lX
CVdsVolume::GetProperties2, 5, hr= %lX
CVdsVolume::QueryVolumeGuidPathnames()
CVdsVolume::QueryVolumeGuidPathnames, 1, hr= %lX
CVdsVolume::QueryVolumeGuidPathnames, 2, hr= %lX
CVdsVolume::QueryVolumeGuidPathnames, 2a, hr=%lX
CVdsVolume::QueryVolumeGuidPathnames, 3, hr=%lX
CVdsVolume::FormatEx2()
CVdsVolume::FormatEx2, 1, hr=%lX, Type=%p (%s)
CVdsVolume::FormatEx2, 1.5, hr=%lX
CVdsVolume::FormatEx2, 2, hr=%lX
CVdsVolume::FormatEx2, 3, hr=%lX
CVdsVolume::FormatEx2, 4a, hr=%lX
CVdsVolume::FormatEx2, 4b, hr=%lX
CVdsVolume::FormatEx2, 5, hr=%lX
CVdsVolume::FormatEx2, 6, hr=%lX
CVdsVolume::FormatEx2, 7, hr=%lX
CVdsVolume::FormatEx2, 8, hr=%lX
CVdsVolume::FormatEx2, 9, hr=%lX
CVdsVolume::FormatInternal()
CVdsVolume::FormatInternal, 1, hr=%lX, Volume=%p, Device=%p, Async=%p
CVdsVolume::FormatInternal, 2, hr=%lX
CVdsVolume::FormatInternal, 3, hr=%lX
CVdsVolume::FormatInternal, 4, hr=%lX
CVdsVolume::FormatInternal, 5, hr=%lX
CVdsVolume::FormatInternal, 6, hr=%lX
CVdsVolume::FormatInternal, 7, hr=%lX
CVdsVolume::FormatInternal, 8, path=%s, error=%lX
CVdsVolume::FormatInternal, 9, path=%s, hr=%lX
CVdsVolume::FormatInternal, 10, path=%s, hr=%lX
CVdsVolume::FormatInternal, 11, path=%s, hr=%lX
CVdsVolume::FormatInternal, 12, path=%s, hr=%lX
CVdsVolume::FormatInternal, 13, path=%s, hr=%lX
CVdsVolume::FormatInternal, 14, path=%s, hr=%lx
CVdsVolume::SetupFormatThreadParam()
CVdsVolume::SetupFormatThreadParam, 1, hr=%lX, Volume=%p, Device=%p, Asynch=%p
CVdsVolume::SetupFormatThreadParam, 2, hr=%lX
CVdsVolume::SetupFormatThreadParam, 3, hr=%lX
CVdsVolume::SetupFormatThreadParam, 4, hr=%lX
CVdsVolume::SetupFormatThreadParam, 5, hr=%lX
CVdsVolume::SetupFormatThreadParam, 6, hr=%lX
CVdsVolume::SetupFormatThreadParam, 7, hr=%lX
CVdsVolume::SetupFormatThreadParam, 8, hr=%lX
CVdsVolume::SetupFormatThreadParam, 9, hr=%lX
CVdsVolume::GetFSType()
CVdsVolume::GetFSType, 1, hr=%lX, Type=%p, Size=%p
CVdsVolume::GetFSType, 2, error=%ld
CVdsVolume::GetFSType, 3, hr=%lX
CVdsVolume::GetFSType, 4, hr=%lX
CVdsVolume::GetFSType, 5, hr=%lX
CVdsVolume::GetFSType, 6, hr=%lX
CVdsVolume::CreateAsynchObj()
CVdsVolume::CreateAsynchObj, 1, hr=%lX
CVdsVolume::CreateAsynchObj, 2, hr=%lX
CVdsVolume::ValidateCall()
CVdsVolume::ValidateCall, 1, hr=%lX
CVdsVolume::ValidateCall, 2, hr=%lX
CVdsVolumePlex::GetProperties()
CVdsVolumePlex::GetVolume()
CVdsVolumePlex::Repair()
CVdsDiskLun::PostCleanDiskHandlerEntry()
CVdsDiskLun::PostCleanDiskHandler()
CVdsDiskLun::PostCleanDiskHandler: pAsync QueryInterface failed: %lX
CVdsDiskLun::PostCleanDiskHandler, 1, %lX, %lX
CVdsDiskLun::PostCleanDiskHandler, 2, status=%lX
CVdsDiskLun::PostCleanDiskHandler, 3, m_pUnk == NULL
CVdsDiskLun::PostCleanDiskHandler, 4, %lX
CVdsDiskLun::PostCleanDiskHandler, 5, %lX
CVdsDiskLun::PostCleanDiskHandler, 6, %lX
CVdsDiskLun::PostCleanDiskHandler, 7, %lX
CVdsDiskLun::PostCleanDiskHandler, 8, %lX
CVdsDiskLun::PostCleanDiskHandler, 9, %lX
CVdsDiskLun::PostCleanDiskHandler, 10, %lX
CVdsDiskLun::PostCleanDiskHandler, 11, %lX
CVdsDiskLun::BuildOEMPartitionName()
CVdsDiskLun::BuildOEMPartitionName, 1, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 2, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 3, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 4, hr=%lX
\\?\PhysicalDrive
CVdsDiskLun::BuildOEMPartitionName, 5, %S, hr=%lX
CVdsDiskLun::BuildOEMPartitionName, 6, %lX
CVdsDiskLun::BuildOEMPartitionName, 7, %lX
CVdsDiskLun::BuildOEMPartitionName, 8, %lX
CVdsDiskLun::BuildOEMPartitionName, 9, %lX
\Device\Harddisk%s\Partition%d
CVdsDiskLun::FindMpioGetDescriptor()
CVdsDiskLun::FindMpioGetDescriptor, 1
CVdsDiskLun::FindMpioGetDescriptor, 2, hr=%lX
CVdsDiskLun::FindMpioGetDescriptor, 3, hr=%lX
CVdsDiskLun::FindMpioGetDescriptor, 4, error=%ld
CVdsDiskLun::FindMpioGetDescriptor, 5, error=%ld
MPIO_GET_DESCRIPTOR
PdoInformation
ScsiAddress
PortNumber
ScsiPathId
TargetId
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiCreateInstanceEnum MPIO_GET_DESCRIPTOR: WBEM_E_INVALID_CLASS
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiCreateInstanceEnum MPIO_GET_DESCRIPTOR failed: %X
CVdsDiskLun::FindMpioGetDescriptor: spMpioGetDescriptorEnum->Next: WBEM_E_INVALID_CLASS
CVdsDiskLun::FindMpioGetDescriptor: spMpioGetDescriptorEnum->Next failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetVariantObjectArrayFromInstance PdoInformation failed: %X
CVdsDiskLun::FindMpioGetDescriptor: vdsPdoInformationEnum.Attach failed: %X
CVdsDiskLun::FindMpioGetDescriptor: vdsPdoInformationEnum.Next failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance ScsiAddress failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance PortNumber failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance ScsiPathId failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance TargetId failed: %X
CVdsDiskLun::FindMpioGetDescriptor: VdsWmiGetObjectFromInstance Lun failed: %X
CVdsDiskLun::FindMpioGetDescriptor: Could not find MPIO instance corresponding to LUN.
CVdsDiskLun::ValidateDiskInterfaces, 2, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 3, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 4 LunId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::ValidateDiskInterfaces, 5, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 6, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 7 DiskId:{%.8x-%.4x-%.4x-%.2x%.2x-%.2x%.2x%.2x%.2x%.2x%.2x}
CVdsDiskLun::ValidateDiskInterfaces, 8, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 9, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 10, hr=%lX
CVdsDiskLun::ValidateDiskInterfaces, 11, Win32 error=%ld
CVdsDiskLun::ValidateDiskInterfaces, 12, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsDisk3, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk2, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsCreatePartitionEx, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsRemovable, hr=%lX
CVdsDiskLun::QueryDiskInterfaces, IID_IVdsAdvancedDisk3, hr=%lX
CVdsDiskLun::QueryLunInterfaces()
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLun, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLun2, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunNaming, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunControllerPorts, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunIscsi, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunNumber, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsMaintenance, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 1, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 2, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 3, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 4, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 5, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 6, hr=%lX
CVdsDiskLun::QueryLunInterfaces, IID_IVdsLunMpio, 15, hr=%lX
CVdsDiskLun::GetPack()
CVdsDiskLun::GetPack, 1, hr=%lX
CVdsDiskLun::GetPack, 1.5, hr=%lX
CVdsDiskLun::GetPack, 2.1, DISK NOT INITIALIZED, hr=%lX
CVdsDiskLun::GetPack, 2, hr=%lX
CVdsDiskLun::GetPack, 2.5, hr=%lX
CVdsDiskLun::GetPack, 3, hr=%lX
CVdsDiskLun::GetPack, 4, hr=%lX
CVdsDiskLun::GetProperties, 1, hr=%lX
CVdsDiskLun::GetProperties, 2, hr=%lX
CVdsDiskLun::GetProperties2() (IVdsDisk3)
CVdsDiskLun::GetProperties2, 1, hr=%lX
CVdsDiskLun::GetProperties2, 2, hr=%lX
CVdsDiskLun::GetIdentificationData
CVdsDiskLun::GetIdentificationData, 1, hr=%lX
CVdsDiskLun::GetIdentificationData, 2, hr=%lX
CVdsDiskLun::GetIdentificationData, 2.1, hr=%lX
CVdsDiskLun::GetIdentificationData, 3, hr=%lX
CVdsDiskLun::QueryExtents, 1, hr=%lX
CVdsDiskLun::QueryExtents, 2, hr=%lX
CVdsDiskLun::QueryFreeExtents()
CVdsDiskLun::QueryFreeExtents, 1, hr=%lX
CVdsDiskLun::QueryFreeExtents, 2, hr=%lX
CVdsDiskLun::ConvertStyle()
CVdsDiskLun::ConvertStyle, 1, hr=%lX
CVdsDiskLun::ConvertStyle, 2, hr=%lX
CVdsDiskLun::ConvertStyle, 2.1, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.2, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.3, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 2.4, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 3.2, NOT CONVERTABLE
CVdsDiskLun::ConvertStyle, 4, hr=%lX
CVdsDiskLun::DismountDiskVolumes
CVdsDiskLun::DismountDiskVolumes, 1, hr=%lX
CVdsDiskLun::GetIdentificationData, 1.5
CVdsDiskLun::DismountDiskVolumes, 2, hr=%lX
CVdsDiskLun::DismountDiskVolumes, 3, ObjectId=%s, hr=%lX
CVdsDiskLun::DismountDiskVolumes, 4, %lX, name=%s
CVdsDiskLun::DismountDiskVolumes, 5, %lX, name=%s
CVdsDiskLun::RemountDiskVolumes
CVdsDiskLun::RemountDiskVolumes, 1, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 1.5
CVdsDiskLun::RemountDiskVolumes, 2, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 3, ObjectId=%s, hr=%lX
CVdsDiskLun::RemountDiskVolumes, 4, %lX, name=%s
CVdsDiskLun::SetFlags
CVdsDiskLun::SetFlags, 1, hr=%lX
CVdsDiskLun::SetFlags, 2, hr=%lX
CVdsDiskLun::SetFlags, 3, hr=%lX
CVdsDiskLun::SetFlags, 3.5, system disk, hr=%lX
CVdsDiskLun::SetFlags, 3.75, boot from disk, hr=%lX
CVdsDiskLun::SetFlags, 4, hr=%lX
CVdsDiskLun::SetFlags, 5, hr=%lX
CVdsDiskLun::SetFlags, 6, hr=%lX
CVdsDiskLun::SetFlags, 7, hr=%lX
CVdsDiskLun::SetFlags, 8, hr=%lX
CVdsDiskLun::SetFlags, 9, hr=%lX
CVdsDiskLun::ClearFlags
CVdsDiskLun::ClearFlags, 1, hr=%lX
CVdsDiskLun::ClearFlags, 2, hr=%lX
CVdsDiskLun::ClearFlags, 3, hr=%lX
CVdsDiskLun::ClearFlags, 3.5, system disk, hr=%lX
CVdsDiskLun::ClearFlags, 3.75, Boot from disk, hr=%lX
CVdsDiskLun::ClearFlags, 4, hr=%lX
CVdsDiskLun::ClearFlags, 5, hr=%lX
CVdsDiskLun::ClearFlags, 6, hr=%lX
CVdsDiskLun::GetPartitionProperties()
CVdsDiskLun::GetPartitionProperties, 1, hr=%lX
CVdsDiskLun::GetPartitionProperties, 2, hr=%lX
CVdsDiskLun::QueryPartitions()
CVdsDiskLun::QueryPartitions, 1, hr=%lX
CVdsDiskLun::QueryPartitions, 2.1, DISK NOT INITIALIZED, hr=%lX
CVdsDiskLun::QueryPartitions, 2, hr=%lX
CVdsDiskLun::CreatePartition()
CVdsDiskLun::CreatePartition, 1, hr=%lX
CVdsDiskLun::CreatePartition, 2, hr=%lX
CVdsDiskLun::DeletePartition()
CVdsDiskLun::DeletePartition, 1, hr=%lX
CVdsDiskLun::DeletePartition, 2, hr=%lX
CVdsDiskLun::DeletePartition, 4
\\?\PhysicalDrive%d
CVdsDiskLun::DeletePartition, 5
CVdsDiskLun::DeletePartition, 6, hr=%lX
\Device\Harddisk%d\Partition%d
CVdsDiskLun::DeletePartition, 7
CVdsDiskLun::DeletePartition, 9.5, hr=%lX
CVdsDiskLun::DeletePartition, 10, hr=%lX
CVdsDiskLun::DeletePartition, 10.5, hr=%lX
CVdsDiskLun::DeletePartition, 12, status=%lX
CVdsDiskLun::ChangeAttributes()
CVdsDiskLun::ChangeAttributes, 1, hr=%lX
CVdsDiskLun::ChangeAttributes, 2, hr=%lX
CVdsDiskLun::AssignDriveLetter()
CVdsDiskLun::AssignDriveLetter, 1, hr=%lX
CVdsDiskLun::AssignDriveLetter, 1.5, hr=%lX
CVdsDiskLun::AssignDriveLetter, 2, hr=%lX
CVdsDiskLun::AssignDriveLetter, 3, hr=%lX
CVdsDiskLun::AssignDriveLetter, 4, hr=%lX
CVdsDiskLun::AssignDriveLetter, 5, error=%lX
CVdsDiskLun::DeleteDriveLetter()
CVdsDiskLun::DeleteDriveLetter, 1, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 1.5, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 2, hr=%lX
CVdsDiskLun::DeleteDriveLetter, 3, name(%S): %ld
CVdsDiskLun::DeleteDriveLetter, 4, name(%S): %ld
CVdsDiskLun::DeleteDriveLetter, 5, error=%ld
CVdsDiskLun::DeleteDriveLetter, 6, error=%ld
CVdsDiskLun::GetDriveLetter()
CVdsDiskLun::GetDriveLetter, 1, hr=%lX
CVdsDiskLun::GetDriveLetter, 2, hr=%lX
CVdsDiskLun::GetDriveLetter, 3, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 4, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 5, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 6, name(%S): %ld
CVdsDiskLun::GetDriveLetter, 7, name(%S): %ld
CVdsDiskLun::FormatPartition()
CVdsDiskLun::FormatPartition, 1, hr=%lX
CVdsDiskLun::FormatPartition, 2, hr=%lX
CVdsDiskLun::Clean()
CVdsDiskLun::Clean, 1, hr=%lX
CVdsDiskLun::Clean, 2
CVdsDiskLun::Clean, 3, %lX
CVdsDiskLun::Clean, 4
CVdsDiskLun::Clean, 4.1, %lX
CVdsDiskLun::Clean, 5
CVdsDiskLun::Clean, 6
CVdsDiskLun::Clean, 7, %lX
CVdsDiskLun::Clean, 8, %lX
CVdsDiskLun::Clean, 9, %lX
CVdsDiskLun::Clean, 10, %lX
CVdsDiskLun::Clean, 12, %lX
CVdsDiskLun::SetSANMode()
CVdsDiskLun::SetSANMode, 1, hr=%lX
CVdsDiskLun::SetSANMode, 2, hr=%lX
CVdsDiskLun::SetSANMode, 3, hr=%lX
CVdsDiskLun::SetSANMode, 4, hr=%lX
CVdsDiskLun::SetSANMode, 5, hr=%lX
CVdsDiskLun::Offline()
CVdsDiskLun::DoOfflineOnline, 1
CVdsDiskLun::DoOfflineOnline, 2 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 3 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 4 Name=%s, hr=%lX
CVdsDiskLun::DoOfflineOnline, 5, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 6, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 7, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 8, disk number=%ld, hr=%lX
CVdsDiskLun::DoOfflineOnline, 9 Name=%s, hr=%lX
CVdsDiskLun::Offline, 1, hr=%lX
CVdsDiskLun::Offline, 2, hr=%lX
CVdsDiskLun::Offline, 3
CVdsDiskLun::Offline, 3.5, boot disk, hr=%lX
CVdsDiskLun::Offline, 4, system disk, hr=%lX
CVdsDiskLun::Offline, 5, hr=%lX
CVdsDiskLun::Offline, 6, hr=%lX
CVdsDiskLun::Offline, 7, hr=%lX
CVdsDiskLun::Offline, 8, hr=%lX
CVdsDiskLun::Offline, 8b, hr=%lX
CVdsDiskLun::Offline, 9 Name=%s, hr=%lX
CVdsDiskLun::Online()
CVdsDiskLun::Online, 1, hr=%lX
CVdsDiskLun::Online, 2, hr=%lX
CVdsDiskLun::Online, 3, hr=%lX
CVdsDiskLun::Online, 4 Name=%s, hr=%lX
CVdsDiskLun::ChangePartitionType()
CVdsDiskLun::ChangePartitionType, 1, hr=%lX
CVdsDiskLun::ChangePartitionType, 2, hr=%lX
CVdsDiskLun::CreatePartitionEx()
CVdsDiskLun::CreatePartitionEx, 1, hr=%lX
CVdsDiskLun::CreatePartitionEx, 2, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties()
CVdsDiskLun::GetPartitionFileSystemProperties, 1, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties, 2, hr=%lX
CVdsDiskLun::GetPartitionFileSystemProperties: failed to open device (%s), error=%lX
CVdsDiskLun::GetPartitionFileSystemProperties, 3, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName()
CVdsDiskLun::GetPartitionFileSystemTypeName, 1, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName, 2, hr=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName: failed to open device (%s), error=%lX
CVdsDiskLun::GetPartitionFileSystemTypeName, 3, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport()
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 1, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 2, hr=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport: failed to open device (%s), error=%lX
CVdsDiskLun::QueryPartitionFileSystemFormatSupport, 3, hr=%lX
CVdsVolume::FormatPartitionEx()
CVdsVolume::FormatPartitionEx, 1, hr=%lX
CVdsDiskLun::QueryMedia()
CVdsDiskLun::QueryMedia, 1, hr=%lX
CVdsDiskLun::QueryMedia, 1.5, hr=%lX
CVdsDiskLun::QueryMedia, 2, hr=%lX
CVdsDiskLun::Eject()
CVdsDiskLun::Eject, 1, hr=%lX
CVdsDiskLun::Eject, 1.5, hr=%lX
CVdsDiskLun::Eject, 2, hr=%lX
CVdsDiskLun::GetSubSystem()
CVdsDiskLun::GetSubSystem, 1, hr=%lX
CVdsDiskLun::GetSubSystem, 2, hr=%lX
CVdsDiskLun::GetSubSystem, 3, hr=%lX
CVdsDiskLun::GetProperties() (IVdsLun)
CVdsDiskLun::GetProperties, 1, error=%lX
CVdsDiskLun::IVdsLun::GetIdentificationData
CVdsDiskLun::IVdsLun::GetIdentificationData, 1, error=%lX
CVdsDiskLun::QueryActiveControllers()
CVdsDiskLun::QueryActiveControllers, 1, hr=%lX
CVdsDiskLun::QueryActiveControllers, 2, hr=%lX
CVdsDiskLun::Extend()
CVdsDiskLun::Extend, 0, hr=%lX
CVdsDiskLun::Extend, 1, hr=%lX
CVdsDiskLun::Extend, 2, hr=%lX
CVdsDiskLun::Extend, 3, %lX
CVdsDiskLun::FindEndOfLastVolume()
CVdsDiskLun::FindEndOfLastVolume, 1, disk=%p, prop=%p, offset=%p, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 2, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 3, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 3.5, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 4, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 5, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 6, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 7, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 8, hr=%lX
CVdsDiskLun::FindEndOfLastVolume, 9, hr=%lX
CVdsDiskLun::Shrink()
CVdsDiskLun::Shrink, 0, hr=%lX
CVdsDiskLun::Shrink, 1, hr=%lX
CVdsDiskLun::Shrink, 2, hr=%lX
CVdsDiskLun::Shrink, 3, hr=%lX
CVdsDiskLun::Shrink, 4, hr=%lX
CVdsDiskLun::Shrink, 5, hr=%lX
CVdsDiskLun::Shrink, 6, hr=%lX
CVdsDiskLun::Shrink, 7, hr=%lX
CVdsDiskLun::Shrink, 8, hr=%lX
CVdsDiskLun::Shrink, 9, hr=%lX
CVdsDiskLun::Shrink, 10, name=%S
CVdsDiskLun::Shrink, 11, hr=%lX
CVdsDiskLun::Shrink, 12, hr=%lX
CVdsDiskLun::Shrink, 14, hr=%lX
CVdsDiskLun::Shrink, 15, hr=%lX
CVdsDiskLun::Shrink, 16, hr=%lX
CVdsDiskLun::Shrink, 17, hr=%lX
CVdsDiskLun::Shrink, 18, hr=%lX
CVdsDiskLun::Shrink, 19, hr=%lX
CVdsDiskLun::Shrink, 20, hr=%lX
CVdsDiskLun::Shrink, 21, hr=%lX
CVdsDiskLun::Shrink, 22, %lX
CVdsDiskLun::QueryPlexes()
CVdsDiskLun::QueryPlexes, 1, hr=%lX
CVdsDiskLun::QueryPlexes, 2, hr=%lX
CVdsDiskLun::AddPlex()
CVdsDiskLun::AddPlex, 1, hr=%lX
CVdsDiskLun::RemovePlex()
CVdsDiskLun::RemovePlex, 1, hr=%lX
CVdsDiskLun::Recover()
CVdsDiskLun::Recover, 1, hr=%lX
CVdsDiskLun::SetMask()
CVdsDiskLun::SetMask, 1, error=%lX
CVdsDiskLun::SetStatus()
CVdsDiskLun::SetStatus, 1, error=%lX
CVdsDiskLun::Delete()
CVdsDiskLun::Delete, 1, error=%lX
CVdsDiskLun::AssociateControllers()
CVdsDiskLun::AssociateControllers, 1, error=%lX
CVdsDiskLun::QueryHints()
CVdsDiskLun::QueryHints, 1, error=%lX
CVdsDiskLun::ApplyHints()
CVdsDiskLun::ApplyHints, 1, error=%lX
CVdsDiskLun::QueryMaxLunExtendSize()
CVdsDiskLun::QueryMaxLunExtendSize, 1, error=%lX
CVdsDiskLun::SetFriendlyName()
CVdsDiskLun::SetFriendlyName, 1, error=%lX
CVdsDiskLun::AssociateControllerPorts()
CVdsDiskLun::AssociateControllerPorts, 1, error=%lX
CVdsDiskLun::QueryActiveControllerPorts()
CVdsDiskLun::QueryActiveControllerPorts, 1, hr=%lX
CVdsDiskLun::QueryActiveControllerPorts, 2, hr=%lX
CVdsDiskLun::GetPathInfo()
CVdsDiskLun::GetPathInfo: NULL input arguments
CVdsDiskLun::GetPathInfo: Could not load iSCSI library.
DSM_QueryUniqueId
DsmUniqueId
PathIdentifier
ConnectionsList
RemoteAddr
RemotePort
LocalAddr
LocalPort
CVdsDiskLun::GetPathInfo: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor NOT SUPPORTED: hr=%lX
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor failed, 1: %lX
CVdsDiskLun::GetPathInfo: FindMpioGetDescriptor failed, 2: %lX
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiFindInstanceOfClass DSM_QueryUniqueId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance DsmUniqueId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantObjectArrayFromInstance PdoInformation failed: %X
CVdsDiskLun::GetPathInfo: SafeArrayGetLBound failed: %X
CVdsDiskLun::GetPathInfo: SafeArrayGetUBound failed: %X
CVdsDiskLun::GetPathInfo: pPaths Alloc: Out of memory.
CVdsDiskLun::GetPathInfo: VdsWmiCreateInstanceEnum MSiSCSI_InitiatorSessionInfo failed: %X
CVdsDiskLun::GetPathInfo: VdsIscsiCacheSessionDevices failed: %X
CVdsDiskLun::GetPathInfo: m_pService->QueryInitiatorAdapters failed: %X
CVdsDiskLun::GetPathInfo: GetSubSystem failed: %X
CVdsDiskLun::GetPathInfo: spSubsystem->QueryInterface IID_IVdsSubSystemIscsi failed: %X
CVdsDiskLun::GetPathInfo: spSubsystemIscsi->QueryPortals failed: %X
CVdsDiskLun::GetPathInfo: GetLoadBalancePolicy failed: %X
CVdsDiskLun::GetPathInfo: vdsPdoInformationEnum.Attach failed: %X
CVdsDiskLun::GetPathInfo: vdsPdoInformationEnum.Next failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance PathIdentifier failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetObjectFromInstance ScsiAddress failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance PortNumber failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance ScsiPathId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance TargetId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetByteFromInstance Lun failed: %X
CVdsDiskLun::GetPathInfo: Could not find session cache entry corresponding to path.
CVdsDiskLun::GetPathInfo: spInitiatorSessionInfoEnum->Reset failed: %X
CVdsDiskLun::GetPathInfo: spInitiatorSessionInfoEnum->Next failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance UniqueAdapterId failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitAdap->Reset failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitAdap->Next failed: %X
CVdsDiskLun::GetPathInfo: spInitAdapUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spInitAdap->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: Could not find initiator adapter endpoint for path.
CVdsDiskLun::GetPathInfo: VdsWmiGetVariantObjectArrayFromInstance SessionsList failed: %X
CVdsDiskLun::GetPathInfo: vdsSessionsListEnum.Attach failed: %X
CVdsDiskLun::GetPathInfo: vdsSessionsListEnum.Next failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlonglongFromInstance UniqueSessionId failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetObjectInVariantObjectArray ConnectionsList[0] failed: %X
CVdsDiskLun::GetPathInfo: VdsIscsiGetIpAddressFromInstance RemoteAddr failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlongFromInstance RemotePort failed: %X
CVdsDiskLun::GetPathInfo: spEnumPortals->Reset failed: %X
CVdsDiskLun::GetPathInfo: spPortalUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spPortal->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: Could not find target portal endpoint for path.
CVdsDiskLun::GetPathInfo: VdsIscsiGetIpAddressFromInstance LocalAddr failed: %X
CVdsDiskLun::GetPathInfo: VdsWmiGetUlongFromInstance LocalPort failed: %X
CVdsDiskLun::GetPathInfo: pPaths[lCurrentPdo].pInitiatorPortalIpAddr Alloc: Out of memory.
CVdsDiskLun::GetPathInfo: Could not find session corresponding to cache entry.
CVdsDiskLun::GetPathInfo: m_pLunMpio->GetPathInfo failed: %X
CVdsDiskLun::GetPathInfo: m_pService->QueryHbaPorts failed: %X
CVdsDiskLun::GetPathInfo: Invalid path FC\SAS HBA returned
CVdsDiskLun::GetPathInfo: spEnumHbaPorts->Next failed: %X
CVdsDiskLun::GetPathInfo: spHbaPortUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spHbaPort->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: spEnumHbaPorts->Reset failed: %X
CVdsDiskLun::GetPathInfo: spSubsystem->QueryInterface IID_IVdsSubSystemInterconnect failed: %X
CVdsDiskLun::GetPathInfo: spSubsystemInterconnect->GetSupportedInterconnects failed: %X
CVdsDiskLun::GetPathInfo: Invalid path returned
CVdsDiskLun::GetPathInfo: Invalid path iSCSI returned
CVdsDiskLun::GetPathInfo: spInitAdap->QueryInitiatorPortals failed: %X
CVdsDiskLun::GetPathInfo: spEnumInitPort->Next failed: %X
CVdsDiskLun::GetPathInfo: spInitPortUnk->QueryInterface failed: %X
CVdsDiskLun::GetPathInfo: spInitPortal->GetProperties failed: %X
CVdsDiskLun::GetPathInfo: Unsupported provider type
CVdsDiskLun::GetLoadBalancePolicy()
CVdsDiskLun::GetLoadBalancePolicy: NULL input arguments
CVdsDiskLun::GetLoadBalancePolicy: Could not load iSCSI library.
DSM_QueryLBPolicy
LoadBalancePolicy
DSMPathCount
DSM_Paths
DSMPathId
PathWeight
PrimaryPath
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor failed, 1: %lX
CVdsDiskLun::GetLoadBalancePolicy: FindMpioGetDescriptor failed, 2: %lX
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_QueryUniqueId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlonglongFromInstance DsmUniqueId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_QueryLBPolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetObjectFromInstance LoadBalancePolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance LoadBalancePolicy failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance DSMPathCount failed: %X
CVdsDiskLun::GetLoadBalancePolicy: Too many paths returned.
CVdsDiskLun::GetLoadBalancePolicy: pPaths Alloc: Out of memory.
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantObjectArrayFromInstance DSM_Paths failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsDsmPathsEnum.Attach failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsDsmPathsEnum.Next failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlonglongFromInstance DSMPathId failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance PathWeight failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetUlongFromInstance PrimaryPath failed: %X
CVdsDiskLun::GetLoadBalancePolicy: m_pLunMpio->GetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy()
CVdsDiskLun::SetLoadBalancePolicy: Could not load iSCSI library.
DSM_LB_Operations
DSM_Load_Balance_Policy
Version
Reserved
MPIO_DSM_Path
DsmSetLoadBalancePolicy
Status
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::SetLoadBalancePolicy, 1, hr=%lX
CVdsDiskLun::SetLoadBalancePolicy: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::SetLoadBalancePolicy: FindMpioGetDescriptor failed: %lX
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiFindInstanceOfClass DSM_LB_Operations failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateClassInstance DSM_Load_Balance_Policy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance Version failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance LoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance DSMPathCount failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance Reserved failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateVariantArray failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCreateClassInstance MPIO_DSM_Path failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlonglongInInstance DSMPathId failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlonglongInInstance Reserved failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance PathWeight failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetUlongInInstance PrimaryPath failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetVariantInInstance DSM_Paths failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetMethodArgumentObject DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiSetObjectInInstance LoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiCallMethod DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: VdsWmiGetUlongFromInstance Status failed: %X
CVdsDiskLun::SetLoadBalancePolicy: DsmSetLoadBalancePolicy failed: %X
CVdsDiskLun::SetLoadBalancePolicy: m_pLunMpio->SetLoadBalancePolicy failed: %X
CVdsDiskLun::GetSupportedLbPolicies()
DSM_QuerySupportedLBPolicies
Supported_LB_Policies
CVdsDiskLun::GetSupportedLbPolicies: NULL input arguments
CVdsDiskLun::GetSupportedLbPolicies: Could not load iSCSI library.
CVdsDiskLun::GetSupportedLbPolicies: VdsWmiConnectToNamespace failed: %X
CVdsDiskLun::GetSupportedLbPolicies: FindMpioGetDescriptor NOT SUPPORTED
CVdsDiskLun::GetSupportedLbPolicies: FindMpioGetDescriptor failed: %lX
CVdsDiskLun::GetSupportedLbPolicies: VdsWmiGetVariantStringFromInstance InstanceName failed: %X
CVdsDiskLun::GetLoadBalancePolicy: VdsWmiGetVariantObjectArrayFromInstance Supported_LB_Policies failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsSupportedLbPoliciesEnum.Attach failed: %X
CVdsDiskLun::GetLoadBalancePolicy: vdsSupportedLbPoliciesEnum.Next failed: %X
CVdsDiskLun::GetSupportedLbPolicies: m_pLunMpio->GetSupportedLbPolicies failed: %X
CVdsDiskLun::AssociateTargets()
CVdsDiskLun::AssociateTargets, 1, error=%lX
CVdsDiskLun::QueryAssociatedTargets()
CVdsDiskLun::QueryAssociatedTargets, 1, hr=%lX
CVdsDiskLun::QueryAssociatedTargets, 2, hr=%lX
CVdsDiskLun::GetLunNumber()
CVdsDiskLun::GetLunNumber, 1, error=%lX
CVdsDiskLun::GetLunNumber, 2, error=%lX
CVdsDiskLun::GetLunNumber, 3, error=%lX
CVdsDiskLun::StartMaintenance()
CVdsDiskLun::StartMaintenance, 1, error=%lX
CVdsDiskLun::StopMaintenance()
CVdsDiskLun::StopMaintenance, 1, error=%lX
CVdsDiskLun::PulseMaintenance()
CVdsDiskLun::PulseMaintenance, 1, error=%lX
CVdsDiskLun::QueryHints2()
CVdsDiskLun::QueryHints2, 1, error=%lX
CVdsDiskLun::QueryHints2, 2, error=%lX
CVdsDiskLun::ApplyHints2()
CVdsDiskLun::ApplyHints2, 1, error=%lX
CVdsDiskLun::ApplyHints2, 2, error=%lX
CVdsVolume::FormatPartitionEx2()
CVdsDiskLun::FormatPartitionEx2, 1, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 2, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 3, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 4, name=%s, hr=%lX
CVdsDiskLun::FormatPartitionEx2, 5, name=%s, hr=%lX
CVdsDiskLun::GetProperties() (IVdsAdvancedDisk3)
CVdsDiskLun::GetProperties (IVdsAdvancedDisk3), 1, hr=%lX
CVdsDiskLun::GetProperties (IVdsAdvancedDisk3), 2, hr=%lX
CVdsDiskLun::GetUniqueId()
CVdsDiskLun::GetUniqueId, 1, hr=%lX
CVdsDiskLun::GetUniqueId, 2, hr=%lX
CVdsDiskLun::PrepareCancelVolumeDelete()
CVdsDiskLun::PrepareCancelVolumeDelete: CoTaskMemAlloc() failed: hr=%lX
CVdsDiskLun::PrepareCancelVolumeDelete: CreateFile() failed: hr=%lX
CVdsDiskLun::PrepareCancelVolumeDelete: DeviceIoControl() failed: hr=%lX
CVdsSubSystem::CVdsSubSystem()
CVdsSubSystem::~CVdsSubSystem()
CVdsSubSystem::GetProviderId()
CVdsSubSystem::GetProviderId, 1, %lX
CVdsSubSystem::GetProvider()
CVdsSubSystem::GetProvider, 1, %lX
CVdsSubSystem::GetProvider, 2, %lX
CVdsSubSystem::GetProvider, 3, %lX
CVdsSubSystem::GetProperties()
CVdsSubSystem::GetProperties, 1, error=%lX
CVdsSubSystem::QueryControllers()
CVdsSubSystem::QueryControllers 1, NOT SUPPORTED, hr=%lX
CVdsSubSystem::QueryControllers, 1, error=%lX
CVdsSubSystem::QueryControllers 1a, NOT SUPPORTED, hr=%lX
CVdsSubSystem::QueryControllers, 1b, hr=%lX
CVdsSubSystem::QueryLuns()
CVdsSubSystem::QueryLuns, 1, hr=%lX
CVdsSubSystem::QueryLuns, 2, hr=%lX
CVdsSubSystem::QueryDrives()
CVdsSubSystem::QueryDrives, 1, hr=%lX
CVdsSubSystem::QueryDrives, 2, hr=%lX
CVdsSubSystem::GetDrive()
CVdsSubSystem::GetDrive, 1, hr=%lX
CVdsSubSystem::GetDrive, 2, hr=%lX
CVdsSubSystem::GetDrive, 3, hr=%lX
CVdsSubSystem::Reenumerate()
CVdsSubSystem::Reenumerate, 1, error=%lX
CVdsSubSystem::SetControllerStatus()
CVdsSubSystem::SetControllerStatus, 1, error=%lX
CVdsSubSystem::CreateLun()
CVdsSubSystem::CreateLun, NULL pDriveIdArray
CVdsSubSystem::CreateLun, 1, hr=%lX
CVdsSubSystem::ReplaceDrive()
CVdsSubSystem::ReplaceDrive, 1, error=%lX
CVdsSubSystem::SetStatus()
CVdsSubSystem::SetStatus, 1, error=%lX
CVdsSubSystem::QueryMaxLunCreateSize()
CVdsSubSystem::QueryMaxLunCreateSize, 1, error=%lX
CVdsSubSystem::SetFriendlyName
CVdsSubSystem::SetFriendlyName, 1, error=%lX
CVdsSubSystem::QueryTargets()
CVdsSubSystem::QueryTargets, 1, hr=%lX
CVdsSubSystem::QueryTargets, 2, hr=%lX
CVdsSubSystem::QueryPortals()
CVdsSubSystem::QueryPortals, 1, hr=%lX
CVdsSubSystem::QueryPortals, 2, hr=%lX
CVdsSubSystem::CreateTarget()
CVdsSubSystem::CreateTarget, 1, hr=%lX
CVdsSubSystem::SetIpsecGroupPresharedKey()
CVdsSubSystem::SetIpsecGroupPresharedKey: IPsec functionality currently not supported
CVdsSubSystem::GetImportTarget()
CVdsSubSystem::GetImportTarget, 1
CVdsSubSystem::GetImportTarget, 2
CVdsSubSystem::GetImportTarget, 3, %ld
CVdsSubSystem::GetImportTarget, 4, %ld
CVdsSubSystem::GetImportTarget, 5, hr=%lX
CVdsSubSystem::GetImportTarget, 6
CVdsSubSystem::GetImportTarget, 7.
CVdsSubSystem::GetImportTarget, 8
CVdsSubSystem::GetImportTarget, 9
CVdsSubSystem::SetImportTarget()
CVdsSubSystem::SetImportTarget, 1, hr=%lX
CVdsSubSystem::SetImportTarget, 2, error=%ld
CVdsSubSystem::SetImportTarget, 3, error=%ld
CVdsSubSystem::SetImportTarget, 4, hr=%lX
CVdsSubSystem::SetImportTarget, 5
CVdsSubSystem::SetImportTarget, 6, error=%ld
CVdsSubSystem::SetImportTarget, 7, %lX
CVdsSubSystem::SetImportTarget, 8
CVdsSubSystem::SetImportTarget, 9, hr=%lX
CVdsSubSystem::SetImportTarget, 10
CVdsSubSystem::SetImportTarget, 11, %lX
CVdsSubSystem::SetImportTarget, 12
CVdsSubSystem::SetImportTarget, 13, hr=%lX
CVdsSubSystem::SetImportTarget, 14, error=%ld
CVdsSubSystem::StartMaintenance()
CVdsSubSystem::StartMaintenance, 1, error=%lX
CVdsSubSystem::StopMaintenance()
CVdsSubSystem::StopMaintenance, 1, error=%lX
CVdsSubSystem::PulseMaintenance()
CVdsSubSystem::PulseMaintenance, 1, error=%lX
CVdsSubSystem::GetProperties2()
CVdsSubSystem::GetProperties2, 1, hr=%lX
CVdsSubSystem::GetProperties2, 2, error=%lX
CVdsSubSystem::GetDrive2()
CVdsSubSystem::GetDrive2, 1, hr=%lX
CVdsSubSystem::GetDrive2, 2, hr=%lX
CVdsSubSystem::GetDrive2, 3, hr=%lX
CVdsSubSystem::GetDrive2, 4, hr=%lX
CVdsSubSystem::CreateLun2()
CVdsSubSystem::CreateLun2, NULL pDriveIdArray
CVdsSubSystem::CreateLun2, 1, hr=%lX
CVdsSubSystem::QueryMaxLunCreateSize2()
CVdsSubSystem::QueryMaxLunCreateSize2, 1, hr=%lX
CVdsSubSystem::QueryMaxLunCreateSize2, 2, error=%lX
CVdsSubSystem::GetSupportedInterconnects()
CVdsSubSystem::GetSupportedInterconnects, 1, hr=%lX
CVdsSubSystem::GetSupportedInterconnects, 2, hr=%lX
CVdsSubSystem::GetSupportedInterconnects, 3, hr=%lX
CVdsController::CVdsController()
CVdsController::~CVdsController()
CVdsController::GetSubSystem()
CVdsController::GetSubSystem, 1, error=%lX
CVdsController::GetSubSystem, 2, error=%lX
CVdsController::GetSubSystem, 3, error=%lX
CVdsController::GetProperties()
CVdsControllerPort::GetProperties, 1, error=%lX
CVdsController::GetPortProperties()
CVdsControllerPort::GetPortProperties, 1, error=%lX
CVdsController::FlushCache()
CVdsControllerPort::FlushCache, 1, error=%lX
CVdsController::InvalidateCache()
CVdsControllerPort::InvalidateCache, 1, error=%lX
CVdsController::Reset()
CVdsControllerPort::Reset, 1, error=%lX
CVdsController::QueryAssociatedLuns()
CVdsController::QueryAssociatedLuns, 1, error=%lX
CVdsController::QueryAssociatedLuns, 2, hr=%lX
CVdsController::SetStatus()
CVdsControllerPort::SetStatus, 1, error=%lX
CVdsController::QueryControllerPorts()
CVdsControllerPort::QueryControllerPorts, 1, error=%lX
CVdsController::QueryControllerPorts, 2, hr=%lX
CVdsController::StartMaintenance()
CVdsControllerPort::StartMaintenance, 1, error=%lX
CVdsController::StopMaintenance()
CVdsControllerPort::StopMaintenance, 1, error=%lX
CVdsController::PulseMaintenance()
CVdsControllerPort::PulseMaintenance, 1, error=%lX
CVdsControllerPort::CVdsControllerPort()
CVdsControllerPort::~CVdsControllerPort()
CVdsControllerPort::GetController()
CVdsControllerPort::GetController, 1, error=%lX
CVdsControllerPort::GetController, 3, error=%lX
CVdsControllerPort::GetProperties()
CVdsControllerPort::Reset()
CVdsControllerPort::QueryAssociatedLuns()
CVdsControllerPort::QueryAssociatedLuns, 1, error=%lX
CVdsControllerPort::QueryAssociatedLuns, 2, hr=%lX
CVdsControllerPort::SetStatus()
CVdsControllerPort::StartMaintenance()
CVdsControllerPort::StopMaintenance()
CVdsControllerPort::PulseMaintenance()
CVdsDrive::CVdsDrive()
CVdsDrive::~CVdsDrive()
CVdsDrive::GetSubSystem()
CVdsDrive::GetSubSystem, 1, error=%lX
CVdsDrive::GetSubSystem, 2, error=%lX
CVdsDrive::GetSubSystem, 3, error=%lX
CVdsDrive::GetProperties()
CVdsDrive::GetProperties, 1, error=%lX
CVdsDrive::QueryExtents()
CVdsDrive::QueryExtents, 1, error=%lX
CVdsDrive::SetFlags()
CVdsDrive::SetFlags, 1, error=%lX
CVdsDrive::ClearFlags()
CVdsDrive::ClearFlags, 1, error=%lX
CVdsDrive::SetStatus
CVdsDrive::SetStatus, 1, error=%lX
CVdsDrive::GetProperties2()
CVdsDrive::GetProperties2, 1, error=%lX
CVdsDrive::GetProperties2, 2, error=%lX
CVdsDrive::StartMaintenance()
CVdsDrive::StartMaintenance, 1, error=%lX
CVdsDrive::StopMaintenance()
CVdsDrive::StopMaintenance, 1, error=%lX
CVdsDrive::PulseMaintenance()
CVdsDrive::PulseMaintenance, 1, error=%lX
CVdsLunPlex::CVdsLunPlex()
CVdsLunPlex::~CVdsLunPlex()
CVdsLunPlex::GetProperties()
CVdsLunPlex::GetProperties, 1, error=%lX
CVdsLunPlex::GetLun()
CVdsLunPlex::GetLun, 1, %lX
CVdsLunPlex::GetLun, 2, %lX
CVdsLunPlex::GetLun, 3, %lX
CVdsLunPlex::QueryExtents()
CVdsLunPlex::QueryExtents, 1, error=%lX
CVdsLunPlex::QueryHints()
CVdsLunPlex::QueryHints, 1, error=%lX
CVdsLunPlex::ApplyHints()
CVdsLunPlex::ApplyHints, 1, error=%lX
CVdsRawDiskLun::~CVdsRawDiskLun()
CVdsRawDiskLun::Initialize()
CVdsRawDiskLun::Initialize(), 0, path=%s
CVdsRawDiskLun::Initialize(), 1, hr=%lX
CVdsRawDiskLun::Initialize(), 2, error=%ld
CVdsRawDiskLun::Initialize(), 3, error=%ld
CVdsRawDiskLun::Initialize(), 3b, Disk Number=%ld
CVdsRawDiskLun::Initialize(), 3c, error=%ld
CVdsRawDiskLun::Initialize(), 4, error=%ld
CVdsRawDiskLun::Initialize(), 5, error=%ld
CVdsRawDiskLun::Initialize(), 5b, error=%ld
CVdsRawDiskLun::Initialize, 6a, error=%ld
CVdsRawDiskLun::Initialize, 6b, error=%ld
CVdsRawDiskLun::Initialize, 7, error=%ld
CVdsRawDiskLun::Initialize(), 8, error=%ld
CVdsRawDiskLun::Initialize(), 8b, error=%ld
CVdsRawDiskLun::Initialize(), 9, error=%ld
CVdsRawDiskLun::Initialize(), 9b, error=%ld
CVdsRawDiskLun::Initialize(), 10, error=%ld
CVdsRawDiskLun::Initialize(), 11, error=%ld
CVdsRawDiskLun::Initialize(), 12, error=%ld
CVdsRawDiskLun::Initialize(), 12b, error=%ld
CVdsRawDiskLun::Initialize(), 13, error=%ld
CVdsRawDiskLun::Initialize(), 13.5, error=%ld
\\?\CdRom%d
CVdsRawDiskLun::Initialize(), 14, error=%ld
CVdsRawDiskLun::Initialize, 15, error=%ld
CVdsRawDiskLun::Initialize, 25.25, hr=%lX
CVdsRawDiskLun::Initialize, BOOT FROM DISK:%lu
CVdsRawDiskLun::GetPack()
CVdsRawDiskLun::GetProperties() (IVdsDisk)
CVdsRawDiskLun::GetProperties() (IVdsDisk), 1, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 2, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 3, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 4, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk), 5, %lX
CVdsRawDiskLun::GetProperties() (IVdsDisk)), 6
CVdsRawDiskLun::GetProperties() (IVdsDisk), 7, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 8, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 9, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsDisk), 10, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::IVdsDisk::GetIdentificationData
CVdsRawDiskLun::QueryExtents()
CVdsRawDiskLun::QueryFreeExtents()
CVdsRawDiskLun::QueryFreeExtents, 1, ppFreeExtentArray=%p, plNumberOfFreeExtents=%p, hr=%lX
CVdsRawDiskLun::ConvertStyle()
CVdsRawDiskLun::SetFlagsInternal
CVdsRawDiskLun::SetFlagsInternal, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlagsInternal, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlagsInternal, 4 Name=%s, Number=%ld, hr=%lX
EXIT CVdsRawDiskLun::SetFlagsInternal, Name=%s, Number=%ld, status=%lX
CVdsRawDiskLun::SetFlags
CVdsRawDiskLun::SetFlags, 1 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::SetFlags, 2 Name=%s, Number=%ld, hr=%lX
EXIT CVdsRawDiskLun::SetFlags, Name=%s, Number=%ld, status=%lX
CVdsRawDiskLun::ClearFlags
CVdsRawDiskLun::ClearFlags, 1 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::ClearFlags, 2 Name=%s, Number=%ld, hr=%lX
EXIT CVdsRawDiskLun::ClearFlags, Name=%s, Number=%ld, status=%lX
CVdsRawDiskLun::GetPartitionProperties()
CVdsRawDiskLun::QueryPartitions()
CVdsRawDiskLun::CreatePartition()
CVdsRawDiskLun::DeletePartition()
CVdsRawDiskLun::ChangePartition()
CVdsRawDiskLun::AssignDriveLetter()
CVdsRawDiskLun::DeleteDriveLetter()
CVdsRawDiskLun::GetDriveLetter()
CVdsRawDiskLun::Clean()
CVdsRawDiskLun::Clean(), 1
CVdsRawDiskLun::Clean(), 2
CRawDiskLun::Clean: CreateThread failed: %X
CVdsRawDiskLun::CleanDiskThreadEntry()
CVdsRawDiskLun::CleanDiskThreadEntry exiting due to shutdown
CVdsRawDiskLun::CleanDiskThread()
CRawDiskLun::Clean, 1, error=%ld
CRawDiskLun::Clean, 2, hr=%lX
CRawDiskLun::Clean, 3, error=%ld
CRawDiskLun::Clean, 4, error=%ld
CRawDiskLun::CleanDiskThread, 5, error=%ld
CRawDiskLun::CleanDiskThread, 6, %ld
CVdsRawDiskLun::SetSANMode()
CVdsRawDiskLun::SetSANMode, 1, hr=%lX
CVdsRawDiskLun::Offline()
CVdsRawDiskLun::Offline, 1, hr=%lX
CVdsRawDiskLun::Offline, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Offline, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Online()
CVdsRawDiskLun::Online, 1, hr=%lX
CVdsRawDiskLun::Online, 2 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Online, 3 Name=%s, Number=%ld, hr=%lX
CVdsRawDiskLun::Offline2()
CVdsRawDiskLun::Offline2, 1 Number=%ld, hr=%lX
CVdsRawDiskLun::Online2()
CVdsRawDiskLun::Online2, 1 Number=%ld, hr=%lX
CVdsRawDiskLun::ChangePartitionType()
CVdsRawDiskLun::CreatePartitionEx()
CVdsRawDiskLun::GetProperties2() (IVdsDisk)
CVdsRawDiskLun::GetProperties2(), 1
CVdsRawDiskLun::GetProperties2(), 2, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 3, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 4, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 5, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties2(), 6, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3)
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 1
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 2, error=%ld, name=%s, number=%ld
CVdsRawDiskLun::GetProperties() (IVdsAdvancedDisk3), 3, line=%ld error=%lX
CVdsRawDiskLun::GetUniqueId()
CVdsRawDiskLun::GetUniqueId(), line=%ld error=%lX
CVdsRawDiskLun::UpdateSize(), line=%ld error=%lX
CVdsIscsiPortal::CVdsIscsiPortal()
CVdsIscsiPortal::~CVdsIscsiPortal()
CVdsIscsiPortal::GetSubSystem()
CVdsIscsiPortal::GetSubSystem, 1, error=%lX
CVdsIscsiPortal::GetSubSystem, 2, error=%lX
CVdsIscsiPortal::GetSubSystem, 3, error=%lX
CVdsIscsiPortal::GetProperties()
CVdsIscsiPortal::GetProperties, 1, error=%lX
CVdsIscsiPortal::QueryAssociatedPortalGroups()
CVdsIscsiPortal::QueryAssociatedPortalGroups, 1, error=%lX
CVdsIscsiPortal::SetStatus
CVdsIscsiPortal::SetStatus, 1, error=%lX
CVdsIscsiPortal::SetIpsecTunnelAddress
CVdsIscsiPortal::SetIpsecTunnelAddress: IPsec functionality currently not supported
CVdsIscsiPortal::GetIpsecSecurity
CVdsIscsiPortal::GetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiPortal::SetIpsecSecurity
CVdsIscsiPortal::SetIpsecSecurity: IPsec functionality currently not supported
CVdsIscsiPortal::SetIpsecSecurityLocal
CVdsIscsiPortal::SetIpsecSecurityLocal, 1, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 2, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 3, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 4, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 5, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 6, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 7, hr = %lX
CVdsIscsiPortal::SetIpsecSecurityLocal, 8
CVdsIscsiPortal::SetIpsecSecurityLocal, 9, hr = %lX
CVdsIscsiTarget::CVdsIscsiTarget()
CVdsIscsiTarget::~CVdsIscsiTarget()
CVdsIscsiTarget::GetSubSystem()
CVdsIscsiTarget::GetSubSystem, 1, error=%lX
CVdsIscsiTarget::GetSubSystem, 2, error=%lX
CVdsIscsiTarget::GetSubSystem, 3, error=%lX
CVdsIscsiTarget::GetProperties()
CVdsIscsiTarget::GetProperties, 1, error=%lX
CVdsIscsiTarget::QueryPortalGroups()
CVdsIscsiTarget::QueryPortalGroups, 1, error=%lX
CVdsIscsiTarget::QueryAssociatedLuns()
CVdsIscsiTarget::QueryAssociatedLuns, 1, error=%lX
CVdsIscsiTarget::CreatePortalGroup()
CVdsIscsiTarget::CreatePortalGroup, 1, error=%lX
CVdsIscsiTarget::Delete()
RemoveIScsiStaticTargetW
CVdsIscsiTarget::Delete, 1, error=%lX
CVdsIscsiTarget::Delete, 2, error=%lX
CVdsIscsiTarget::SetFriendlyName
CVdsIscsiTarget::SetFriendlyName, 1, error=%lX
CVdsIscsiTarget::SetSharedSecret
CVdsIscsiTarget::SetSharedSecret, 1, error=%lX
CVdsIscsiTarget::RememberInitiatorSharedSecret
CVdsIscsiTarget::RememberInitiatorSharedSecret, 1, error=%lX
CVdsIscsiTarget::GetConnectedInitiators
CVdsIscsiTarget::GetConnectedInitiators, 1, error=%lX
CVdsIscsiPortalGroup::CVdsIscsiPortalGroup()
CVdsIscsiPortalGroup::~CVdsIscsiPortalGroup()
CVdsIscsiPortalGroup::GetTarget()
CVdsIscsiPortalGroup::GetTarget, 1, error=%lX
CVdsIscsiPortalGroup::GetTarget, 2, error=%lX
CVdsIscsiPortalGroup::GetTarget, 3, error=%lX
CVdsIscsiPortalGroup::GetProperties()
CVdsIscsiPortalGroup::GetProperties, 1, error=%lX
CVdsIscsiPortalGroup::QueryAssociatedPortals()
CVdsIscsiPortalGroup::QueryAssociatedPortals, 1, error=%lX
CVdsIscsiPortalGroup::AddPortal()
CVdsIscsiPortalGroup::AddPortal, 1, error=%lX
CVdsIscsiPortalGroup::RemovePortal()
CVdsIscsiPortalGroup::RemovePortal, 1, hr=%lX
CVdsIscsiPortalGroup::Delete()
CVdsIscsiPortalGroup::Delete, 1, error=%lX
CVdsEnumObject::Next, 1
VDS(0X020B0000): unexpected provider failure: failed to reset enumerator position: %X.
VDS(0X020B0001): unexpected provider failure: failed to skip enumerator position: %X.
CVdsEnumObject::Skip()
CVdsEnumObject::Skip, 1
CVdsEnumObject::Reset()
CVdsEnumObject::Reset, 1
CVdsEnumObject::Clone()
CVdsEnumObject::Clone, 1, %lX
CVdsAsyncObject::~CVdsAsyncObject()
CVdsAsyncObject::Cancel()
CVdsAsyncObject::Wait()
CVdsAsyncObject::Wait, 1, hr=%lX
CVdsAsyncObject::Wait, 2, hr=%lX
CVdsAsyncObject::Wait, 3, hr=%lX
CVdsAsyncObject::Wait, 4, hr=%lX
CVdsAsyncObject::Wait, 4.1, hr=%lX
CVdsAsyncObject::Wait, 5, hr=%lX
CVdsAsyncObject::Wait:5.5 provider returned NULL object pointer
CVdsAsyncObject::Wait, 6, hr=%lX
CVdsAsyncObject::Wait, 7, hr=%lX
CVdsAsyncObject::Wait:7.5 provider returned NULL object pointer
CVdsAsyncObject::Wait, 8, hr=%lX
CVdsAsyncObject::Wait:8.5 provider returned NULL object pointer
CVdsAsyncObject::Wait, 9, hr=%lX
CVdsAsyncObject::Wait, 10, hr=%lX
CVdsAsyncObject::Wait: provider returned NULL object pointer
CVdsAsyncObject::Wait, 11, hr=%lX
CVdsAsyncObject::Wait, 12, hr=%lX
CVdsAsyncObject::Wait:15 provider returned NULL object pointer
CVdsAsyncObject::Wait, 16, hr=%lX
CVdsAsyncObject::Wait, 17, hr=%lX
CVdsAsyncObject::QueryStatus()
CVdsAsyncObject::QueryStatus, 1, hr=%lX
CVdsAsyncObject::QueryStatus, 2, hr=%lX
CVdsServiceAsyncObject::Cancel()
CVdsServiceAsyncObject::Wait()
CVdsMessageQueue::Initialize()
CVdsMessageQueue::EnqueueEx()
CVdsCallbackObject::EnqueuEx, 1
DequeueEx Unknown count=%lu
DequeueEx Skip count=%lu
NotificationThread, 1, hr=%lX
NotificationThread, 2, hr=%lX
NotificationThread exiting due to shutdown.
NotificationThread, 4, hr=%X
CVdsCallbackObject::Advise()
CVdsCallbackObject::Advise, 1 error=%lX, pService=%p, pSink=%p, pulCookie=%p
CVdsCallbackObject::Advise, 2 error=%lX
CVdsCallbackObject::Advise, 3 error=%lX
CVdsCallbackObject::Advise, 4 error=%lX
CVdsCallbackObject::Advise, 5 error=%lX
CVdsCallbackObject::Advise, 6 error=%lX
CVdsCallbackObject::Advise, 7 error=%lX
CVdsCallbackObject::Advise, 8, error=%ld
CVdsCallbackObject::Advise, 9, state=%ld
CVdsCallbackObject::Advise, 10, state=%ld
CVdsCallbackObject::Advise, 11 error=%lX
CVdsCallbackObject::Advise, 12 error=%lX
CVdsCallbackObject::Advise, 13, error=%ld
CVdsCallbackObject::Advise, 14, state=%ld
CVdsCallbackObject::Advise, 15, state=%ld
CVdsCallbackObject::Unadvise()
CVdsCallbackObject::Unadvise, 1 error=%lX
CVdsCallbackObject::Unadvise, 2 error=%lX
CVdsCallbackObject::Unadvise, 3, error=%ld
CVdsCallbackObject::Unadvise, 4, state=%ld
CVdsCallbackObject::Unadvise, 5, state=%ld
CVdsCallbackObject::FindClientInQueue()
CVdsCallbackObject::RemoveClientFromQueue()
CVdsCallbackObject::OnNotify - Notification lost
CVdsCallbackObject::QueryClaim()
CVdsCallbackObject::QueryClaim, 1, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 2, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 2.5, hr=%lX
CVdsCallbackObject::QueryClaim, 3, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::QueryClaim, 3.5, hr=%lX
CVdsCallbackObject::QueryClaim, 3.75, hr=%lX
CVdsCallbackObject::QueryClaim, 4, hr=%lX, pwszDevicePath=%s
CVdsCallbackObject::InitiateSecondAuctionIfLayoutChanged()
CVdsCallbackObject::InitiateSecondAuctionIfLayoutChanged: failed to auction %s: %X
CVdsCallbackObject::InitiateSecondAuction()
CVdsCallbackObject::InitiateSecondAuction, 1, error=%lX, pwszDevicePath=%s, pLayout=%p
CVdsCallbackObject::InitiateSecondAuction, 2, error=%lX, pwszDevicePath=%s
CVdsCallbackObject::InitiateSecondAuction, 3, %s
CVdsCallbackObject::InitiateSecondAuction, 4, %s, error=%ld
AuctionThread()(Service)
AuctionThread exiting due to shutdown
VDEST
/#|HS
CVdsPnPNotificationManager::RegisterPnPNotifications()
RegisterDeviceNotification, 1, error=%ld
VDS(0X0204000E): RegisterDeviceNotification failed: %ld
VDS(0X02040000): RegisterDeviceNotification failed: %lX
VDS(0X02040001): RegisterDeviceNotification failed: %ld
VDS(0X02040016): RegisterDeviceNotification failed: %ld
CVdsPnPNotificationManager::UnregisterPnPNotifications()
VDS(0X02040003): Drive letter notification received: mask: %X
VDS(0X02040003): Drive letter notification received, DBTF_MEDIA
arrival
removal
VDS(0X02040004): Volume Notification: %S %s.
VDS(0X02040005): Disk Notification: %S %s.
VDS(0X0204000D: mount points change notification received.
TMP: GUID_IO_VOLUME_DISMOUNT_FAILED event received.
TMP: GUID_IO_VOLUME_LOCK event received.
TMP: GUID_IO_VOLUME_LOCK_FAILED event received.
TMP: GUID_IO_VOLUME_UNLOCK event received.
TMP: GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE event received.
VDS(0X02040014: BitLocker full-volume encryption status change notification received.
TMP: GUID_IO_VOLUME_DEVICE_INTERFACE event received.
TMP: GUID_IO_DEVICE_BECOMING_READY event received.
TMP: GUID_IO_DEVICE_EXTERNAL_REQUEST event received.
TMP: GUID_IO_MEDIA_EJECT_REQUEST event received.
TMP: GUID_IO_DISK_LAYOUT_CHANGE event received.
TMP: CUSTOM event received.
VDS(0X02040008): failed to initialize device info list: %X
VDS(0X02040008): failed to get volume device info set: %X
CVdsPnPNotificationManager::RegisterForCustomVolumeEventAll, 1, error=%ld
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 1, error=%ld
VDS(0X02040009): failed to register for volume device notification(%S): %X
VDS(0X0204000A): failed to get volume handle(%S): %X
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 2, error=%ld
CVdsPnPNotificationManager::RegisterForCustomVolumeEvent, 3, hr=%lX
CVdsPnPNotificationManager::InsertVolumeToMap, 1, error=%ld
CVdsPnPNotificationManager::RemoveVolumeFromMap()
CVdsPnPNotificationManager::RemoveVolumeFromMap, 1, hr=%lX
RemoveVolumeFromMap: volume not found: %S
FindVolumeInMap: volume not found.
CVdsPnPNotificationManager::FreeVolumeEventHandleMap()
CVdsPnPNotificationManager::ForwardDiskNotification()
CVdsPnPNotificationManager::ForwardDiskNotification: Out of memory. A disk arrival/removal notification is lost: %S
CVdsPnPNotificationManager::ForwardDiskNotification: PostThreadMessage failed: %X 
CVdsPnPNotificationManager::DiskNotificationHandler()
CVdsPnPNotificationManager::DiskNotificationHandler, 1, hr=%lX
CVdsPnPNotificationManager::DiskNotificationHandler, 2, error=%ld
CVdsPnPNotificationManager::VolumeNotificationHandler()
CVdsPnPNotificationManager::VolumeNotificationHandler, 1, hr=%lX
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 1, error=%ld
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 2, hr=%lX
VDS(0X0204000C): failed to send volume label change notification(%S): %X
CVdsPnPNotificationManager::LabelMountPointsNotificationHandler, 3, hr=%lX
CVdsPnPNotificationManager::ForwardLayoutChangeNotification()
CVdsPnPNotificationManager::ForwardLayoutChangeNotification: Out of memory. A disk layout change notification is lost.
CVdsPnPNotificationManager::ForwardLayoutChangeNotification: PostThreadMessage failed: %X 
CVdsPnPNotificationManager::LayoutChangeNotificationHandler()
CVdsPnPNotificationManager::DriveLetterNotificationHandler()
Drive letter arrival: %C
Drive letter removal: %C
CVdsPnPNotificationManager::ForwardVolumeChangeNotification()
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 1, error=%ld
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 2, hr=%lX
VDS(0X02040015): failed to send volume change notification(%S): %X
CVdsPnPNotificationManager::VolumeChangeNotificationHandler, 3, hr=%lX
CVdsPnPNotificationManager::InitializeAuxThread()
VDS(0X0204000F): CreateThread failed: %X
VDS(0X02040010): PostThreadMessage failed: %X
CVdsPnPNotificationManager::AuxThread, 1
VDS(0X02040012): failed to get volume id for %S
VDS(0X02040013): QueryDosDevice failed(%S): %X
m2GetVariantFromInstance, 1, hr=%x
GetVariantFromInstance, 2, hr=%x
GetVariantFromInstance, 3, Failed to get property(Name(%S), Type(%d)): %x
GetUlongFromInstance, 1, hr=%x
GetUlongFromInstance, 2, hr=%x
GetStringFromInstance, 1, hr=%x
GetStringFromInstance, 2, hr=%x
GetStringFromInstance, 3, hr=%x
GetObjectFromInstance, 1, hr=%x
GetObjectFromInstance, 2, hr=%x
GetStringFromInstance, 4, Failed to get WideCharToMultiByte from '%S': %x
GetByteArrayFromInstance, 2, hr=%x
GetByteArrayFromInstance, 3, Failed to get Property '%S': %x
SetVariantInstance, 1, hr=%x
SetVariantInstance, 2, hr=%x
SetVariantInstance, 3, Failed to set Property '%S': %x
SetUlongInInstance, 1, hr=%x
SmHbaAdapterEnum::Initialize, 1, hr=%x
MS_SM_AdapterInformationQuery
SmHbaAdapterEnum::Initialize, 2, hr=%x
SmHbaAdapterEnum::Initialize, 3, Failed to connect to %S namespace: %x
SmHbaAdapterEnum::Initialize, 4, Failed to create WMI instance enum of %S: %x
SmHbaAdapterEnum::MoveNext, 2, hr=%x
SmHbaAdapterEnum::MoveNext, 3, Failed to IEnumWbemClassObject::Next: %x
SmHbaAdapterEnum::MoveNext, 4, Expect to IEnumWbemClassObject::Next to return non-NULL IWbemClassObject: %x
SmHbaAdapterEnum::MoveNext, 5, hr: %x
SmHbaAdapter::Initialize, 1, hr: %x
SmHbaAdapter::Initialize, 2, hr: %x
SmHbaAdapter::Initialize, 3, hr: %x
MS_SM_PortInformationMethods
SmHbaAdapter::Initialize, 4, hr: %x
Failed to find instance '%S' of class '%S': %x
SmHbaAdapter::GetPortCount, 2, hr: %x
NumberOfPorts
SmHbaAdapter::GetPortCount, 3, hr: %x
SmHbaAdapter::GetPort, 2, hr: %x
SmHbaAdapter::GetPort, 3, hr: %x
SmHbaAdapter::GetPort, 4, hr: %x
SmHbaAdapter::GetPort, 5, hr: %x
SmHbaAdapter::GetPort, 6, hr: %x
SmHbaAdapter::GetPort, 7, Failed to SmGetAdapterPortAttributes(%d,%d,...): HBA_STATUS(%d)
SmHbaAdapter::GetPort, 8, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 1, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 2, hr: %x
SM_GetAdapterPortAttributes
SmHbaAdapter::SmGetAdapterPortAttributes, 3, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 4, Failed to get input argument object for '%S' :: '%S': %x
PortIndex
SmHbaAdapter::SmGetAdapterPortAttributes, 5, hr: %x
PortSpecificAttributesMaxSize
SmHbaAdapter::SmGetAdapterPortAttributes, 6, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 7, Failed to call method '%S' :: '%S': %x
HBAStatus
SmHbaAdapter::SmGetAdapterPortAttributes, 8, hr: %x
PortAttributes
SmHbaAdapter::SmGetAdapterPortAttributes, 9, hr: %x
SmHbaAdapter::SmGetAdapterPortAttributes, 10, Expect method '%S' :: '%S' return non-NULL '%S' when succeeded: %x
SM_RefreshInformation
SmHbaAdapter::SmRefreshInformation, 1, hr: %x
SmHbaAdapter::SmRefreshInformation, 2, Failed to call method '%S' :: '%S': %x
SmHbaAdapterPort::Initialize, 1, hr: %x
SmHbaAdapterPort::GetType, 1, hr: %x
SmHbaAdapterPort::GetType, 2, hr: %x
PortType
SmHbaAdapterPort::GetType, 3, hr: %x
SmHbaAdapterPort::GetSasAttributes, 1, hr: %x
SmHbaAdapterPort::GetSasAttributes, 2, hr: %x
SmHbaAdapterPort::GetSasAttributes, 3, hr: %x
SmHbaAdapterPort::GetSasAttributes, 4, Expect '%S' to be SAS, but was '%d': %x
PortSpecificAttributesSize
SmHbaAdapterPort::GetSasAttributes, 5, hr: %x
SmHbaAdapterPort::GetSasAttributes, 6, Expect '%S' to be '%d', but was '%d': %x
PortState
SmHbaAdapterPort::GetSasAttributes, 7, hr: %x
OSDeviceName
SmHbaAdapterPort::GetSasAttributes, 8, hr: %x
PortSpecificAttributes
SmHbaAdapterPort::GetSasAttributes, 9, hr: %x
K.$CVdsStoragePool::CVdsStoragePool()
CVdsStoragePool::~CVdsStoragePool()
CVdsStoragePool::GetProvider()
CVdsStoragePool::GetProvider, 1, hr=%lX
CVdsStoragePool::GetProvider, 2, hr=%lX
CVdsStoragePool::GetProvider, 2, %lX
CVdsStoragePool::GetProvider, 3, %lX
CVdsStoragePool::GetProperties()
CVdsStoragePool::GetProperties, 1, hr=%lX
CVdsStoragePool::GetProperties, 2, hr=%lX
CVdsStoragePool::GetProperties, 3, error=%lX
CVdsStoragePool::GetAttributes()
CVdsStoragePool::GetAttributes, 1, hr=%lX
CVdsStoragePool::GetAttributes, 2, hr=%lX
CVdsStoragePool::GetAttributes, 3, error=%lX
CVdsStoragePool::QueryDriveExtents()
CVdsStoragePool::QueryDriveExtents, 1, hr=%lX
CVdsStoragePool::QueryDriveExtents, 2, hr=%lX
CVdsStoragePool::QueryDriveExtents, 3, hr=%lX
CVdsStoragePool::QueryDriveExtents, 4, error=%lX
CVdsStoragePool::QueryAllocatedLuns()
CVdsStoragePool::QueryAllocatedLuns, 1, hr=%lX
CVdsStoragePool::QueryAllocatedLuns, 2, hr=%lX
CVdsStoragePool::QueryAllocatedLuns, 3, error=%lX
CVdsStoragePool::QueryAllocatedStoragePools()
CVdsStoragePool::QueryAllocatedStoragePools, 1, hr=%lX
CVdsStoragePool::QueryAllocatedStoragePools, 2, hr=%lX
CVdsStoragePool::QueryAllocatedStoragePools, 3, error=%lX
CVdsStoragePool::StartMaintenance()
CVdsStoragePool::StartMaintenance, 1, hr=%lX
CVdsStoragePool::StartMaintenance, 2, error=%lX
CVdsStoragePool::StopMaintenance()
CVdsStoragePool::StopMaintenance, 1, hr=%lX
CVdsStoragePool::StopMaintenance, 2, error=%lX
CVdsStoragePool::PulseMaintenance()
CVdsStoragePool::PulseMaintenance, 1, hr=%lX
CVdsStoragePool::PulseMaintenance, 1, error=%lX
\FVEAPI.DLL
FveOpenVolumeW
FveGetStatusBasicW
FveSetFipsAllowDisabled
FveDisableAuthenticationW
FveEnableAuthenticationW
FveCloseVolume
FveGetStatus
FveAddAuthMethodInformation
FveGetAuthMethodInformation
FveDeleteAuthMethod
FveCommitChanges
FveGetSecureBootBindingState
\System Volume Information\FVE.{e40ad34d-dae9-4bc7-95bd-b16218c10f72}.X
\System Volume Information\FVE2.{e40ad34d-dae9-4bc7-95bd-b16218c10f72}.X
bitlocker                       
CacheDisable
SOFTWARE\Microsoft\Windows NT\CurrentVersion\FveDetect
SOFTWARE\Microsoft\Windows NT\CurrentVersion\FveDetect\Cache
Cache
-FVE-FS-
EXFAT   
NTFS    
VDSProviderDetails
ProviderGUID
ProviderType
IsVDSProviderInbox
FveCheckSuspendBitLockerOnUpgrade
ShouldSuspendBitlocker
IsSecureBootBound
IsOsPreRS1
AuthUsesFlags
LineNumber
FveRemoveTrustedWimData
FveAddTrustedWimData
Microsoft.Windows.Storage.VDS.Service
FveDetectTelemetry
RSDSd.
vds.pdb
.text
.text$di
.text$lp00SPGO
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCAA
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIY
.CRT$XIZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.xdata
.xdata$x
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data$r$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
6@8!K6(4
NetShareAdd
InitiateSystemShutdownExW
GetNodeClusterState
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
vds.exe
??0?$CVdsCoTaskPtr@G@@QEAA@XZ
??0?$CVdsHandleImpl@$0?0@@QEAA@XZ
??0?$CVdsHandleImpl@$0A@@@QEAA@XZ
??0?$CVdsHeapPtr@D@@QEAA@XZ
??0?$CVdsHeapPtr@G@@QEAA@XZ
??0?$CVdsHeapPtr@J@@QEAA@XZ
??0?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??0?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@D@@QEAA@XZ
??0?$CVdsPtr@G@@QEAA@XZ
??0?$CVdsPtr@J@@QEAA@XZ
??0?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??0?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??0?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??0?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??0?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??0CPrvEnumObject@@QEAA@XZ
??0CRtlSharedLock@@QEAA@XZ
??0CVdsCriticalSection@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
??0CVdsPnPNotificationBase@@QEAA@XZ
??0CVdsUnlockIt@@QEAA@AEAJ@Z
??1?$CVdsCoTaskPtr@G@@QEAA@XZ
??1?$CVdsHandleImpl@$0?0@@QEAA@XZ
??1?$CVdsHandleImpl@$0A@@@QEAA@XZ
??1?$CVdsHeapPtr@D@@QEAA@XZ
??1?$CVdsHeapPtr@G@@QEAA@XZ
??1?$CVdsHeapPtr@J@@QEAA@XZ
??1?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??1?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@D@@QEAA@XZ
??1?$CVdsPtr@G@@QEAA@XZ
??1?$CVdsPtr@J@@QEAA@XZ
??1?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAA@XZ
??1?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAA@XZ
??1?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAA@XZ
??1?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAA@XZ
??1?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAA@XZ
??1CPrvEnumObject@@QEAA@XZ
??1CRtlSharedLock@@QEAA@XZ
??1CVdsCriticalSection@@QEAA@XZ
??1CVdsPnPNotificationBase@@QEAA@XZ
??1CVdsUnlockIt@@QEAA@XZ
??4?$CVdsHandleImpl@$0?0@@QEAAPEAXPEAX@Z
??4?$CVdsHandleImpl@$0A@@@QEAAPEAXPEAX@Z
??4?$CVdsHeapPtr@D@@QEAAPEADPEAD@Z
??4?$CVdsHeapPtr@G@@QEAAPEAGPEAG@Z
??4?$CVdsHeapPtr@J@@QEAAPEAJPEAJ@Z
??4?$CVdsHeapPtr@UFMIFS_DEF_FS_OUT@@@@QEAAPEAUFMIFS_DEF_FS_OUT@@PEAU1@@Z
??4?$CVdsHeapPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAAPEAU_AUCTION_THREAD_PARAMETER@@PEAU1@@Z
??4?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEAAPEAU_MOUNTMGR_MOUNT_POINT@@PEAU1@@Z
??4?$CVdsHeapPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEAAPEAU_MOUNTMGR_MOUNT_POINTS@@PEAU1@@Z
??4?$CVdsHeapPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@PEAU1@@Z
??8?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??8?$CVdsHandleImpl@$0A@@@QEBA_NPEAX@Z
??8?$CVdsPtr@D@@QEBA_NPEAD@Z
??8?$CVdsPtr@G@@QEBA_NPEAG@Z
??8?$CVdsPtr@J@@QEBA_NPEAJ@Z
??8?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEBA_NPEAUFMIFS_DEF_FS_OUT@@@Z
??8?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBA_NPEAU_AUCTION_THREAD_PARAMETER@@@Z
??8?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBA_NPEAU_MOUNTMGR_MOUNT_POINT@@@Z
??8?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBA_NPEAU_MOUNTMGR_MOUNT_POINTS@@@Z
??8?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBA_NPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@@Z
??9?$CVdsHandleImpl@$0?0@@QEBA_NPEAX@Z
??9?$CVdsPtr@G@@QEBA_NPEAG@Z
??9?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEBA_NPEAU_DRIVE_LAYOUT_INFORMATION_EX@@@Z
??A?$CVdsPtr@J@@QEAAAEAJJ@Z
??A?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEAAAEAUFMIFS_DEF_FS_OUT@@K@Z
??B?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
??B?$CVdsHandleImpl@$0A@@@QEAAPEAXXZ
??B?$CVdsPtr@G@@QEBAPEAGXZ
??B?$CVdsPtr@J@@QEBAPEAJXZ
??B?$CVdsPtr@UFMIFS_DEF_FS_OUT@@@@QEBAPEAUFMIFS_DEF_FS_OUT@@XZ
??B?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBAPEAU_AUCTION_THREAD_PARAMETER@@XZ
??B?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEBAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
??B?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@XZ
??B?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINT@@XZ
??B?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINTS@@XZ
??B?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
??C?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEBAPEAU_AUCTION_THREAD_PARAMETER@@XZ
??C?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEBAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
??C?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEBAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
??C?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEBAPEAU_EXTEND_VOLUME_HANDLER_PARAMETER@@XZ
??C?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@XZ
??C?$CVdsPtr@U_MOUNTMGR_MOUNT_POINT@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINT@@XZ
??C?$CVdsPtr@U_MOUNTMGR_MOUNT_POINTS@@@@QEBAPEAU_MOUNTMGR_MOUNT_POINTS@@XZ
??C?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEBAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
??I?$CVdsHandleImpl@$0?0@@QEAAPEAPEAXXZ
??I?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAPEAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
??_FCRtlList@@QEAAXXZ
??_FCRtlMap@@QEAAXXZ
?AcquireRead@CRtlSharedLock@@AEAAXXZ
?AcquireWrite@CRtlSharedLock@@AEAAXXZ
?AllowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Attach@?$CVdsPtr@G@@QEAAXPEAG@Z
?Attach@?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAAXPEAU_CLEAN_DISK_HANDLER_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAXPEAU_DRIVE_LAYOUT_INFORMATION_EX@@@Z
?Attach@?$CVdsPtr@U_EXTEND_VOLUME_HANDLER_PARAMETER@@@@QEAAXPEAU_EXTEND_VOLUME_HANDLER_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_FORMAT_VOLUME_THREAD_PARAMETER@@@@QEAAXPEAU_FORMAT_VOLUME_THREAD_PARAMETER@@@Z
?Attach@?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAXPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@@Z
?Close@?$CVdsHandleImpl@$0?0@@QEAAXXZ
?CurrentThreadIsWriter@CRtlSharedLock@@QEAAHXZ
?Detach@?$CVdsHandleImpl@$0?0@@QEAAPEAXXZ
?Detach@?$CVdsHandleImpl@$0A@@@QEAAPEAXXZ
?Detach@?$CVdsPtr@G@@QEAAPEAGXZ
?Detach@?$CVdsPtr@U_AUCTION_THREAD_PARAMETER@@@@QEAAPEAU_AUCTION_THREAD_PARAMETER@@XZ
?Detach@?$CVdsPtr@U_CLEAN_DISK_HANDLER_PARAMETER@@@@QEAAPEAU_CLEAN_DISK_HANDLER_PARAMETER@@XZ
?Detach@?$CVdsPtr@U_DRIVE_LAYOUT_INFORMATION_EX@@@@QEAAPEAU_DRIVE_LAYOUT_INFORMATION_EX@@XZ
?Detach@?$CVdsPtr@U_SHRINK_VOLUME_THREAD_PARAMETER@@@@QEAAPEAU_SHRINK_VOLUME_THREAD_PARAMETER@@XZ
?DisallowCancel@CVdsAsyncObjectBase@@QEAAXXZ
?Downgrade@CRtlSharedLock@@AEAAXXZ
?GetOutputType@CVdsAsyncObjectBase@@QEAA?AW4_VDS_ASYNC_OUTPUT_TYPE@@XZ
?IsCancelRequested@CVdsAsyncObjectBase@@QEAAHXZ
?Release@CRtlSharedLock@@AEAAXXZ
?SetOutput@CVdsAsyncObjectBase@@QEAAXU_VDS_ASYNC_OUTPUT@@@Z
?SetOutputType@CVdsAsyncObjectBase@@QEAAXW4_VDS_ASYNC_OUTPUT_TYPE@@@Z
?SetPositionToLast@CPrvEnumObject@@QEAAXXZ
?Upgrade@CRtlSharedLock@@AEAAXXZ
?ZeroAsyncOut@CVdsAsyncObjectBase@@QEAAXXZ
?m_ExtraLogging@CVdsTraceSettings@@QEAAHXZ
?m_NoDebuggerLogging@CVdsTraceSettings@@QEAAHXZ
CharNextW
CharPrevW
LoadStringW
MessageBoxW
PostThreadMessageW
GetMessageW
DispatchMessageW
RegisterDeviceNotificationW
UnregisterDeviceNotification
DefWindowProcW
PeekMessageW
USER32.dll
__CxxFrameHandler4
??3@YAXPEAX@Z
_purecall
__C_specific_handler
malloc
wcscat_s
realloc
wcscpy_s
_vsnwprintf
_wcsicmp
_wcsnicmp
srand
?_set_se_translator@@YAP6AXIPEAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z
_wtol
wcsstr
wcsncmp
towupper
swscanf_s
_ltow
_callnewh
??0exception@@QEAA@AEBQEBD@Z
??0exception@@QEAA@AEBQEBDH@Z
??0exception@@QEAA@AEBV0@@Z
??1exception@@UEAA@XZ
?what@exception@@UEBAPEBDXZ
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
_XcptFilter
_amsg_exit
__wgetmainargs
__set_app_type
_exit
_cexit
__setusermatherr
_initterm
_wcmdln
_fmode
_commode
msvcrt.dll
?terminate@@YAXXZ
_lock
_unlock
__dllonexit
_onexit
??1type_info@@UEAA@XZ
EnterCriticalSection
LeaveCriticalSection
RtlDeleteResource
RtlAcquireResourceShared
RtlReleaseResource
RtlInitializeResource
RtlAcquireResourceExclusive
RtlConvertExclusiveToShared
DeleteCriticalSection
RtlConvertSharedToExclusive
CoTaskMemFree
GetProcessHeap
FreeLibrary
GetLastError
GetProcAddress
LoadLibraryExW
GetModuleHandleW
RegCloseKey
RegEnumKeyExW
RegOpenKeyExW
lstrcmpiW
RegQueryInfoKeyW
RegEnumValueW
lstrcpynW
VirtualProtect
VirtualAlloc
VirtualQuery
GetSystemInfo
RegSetValueExW
RegCreateKeyExW
RegDeleteValueW
CoTaskMemRealloc
CoTaskMemAlloc
MultiByteToWideChar
SizeofResource
LoadResource
FindResourceExW
GetModuleFileNameW
InitializeCriticalSection
EventUnregister
EventRegister
EventSetInformation
CoInitializeEx
CoCreateInstance
MakeSelfRelativeSD
GetSecurityDescriptorLength
CoUninitialize
OpenSCManagerW
OpenServiceW
CloseServiceHandle
CreateServiceW
ChangeServiceConfig2W
QueryServiceObjectSecurity
MakeAbsoluteSD
IsValidSid
GetLengthSid
AddAccessAllowedAce
SetServiceObjectSecurity
FreeSid
ControlService
DeleteService
StartServiceCtrlDispatcherW
OutputDebugStringW
RegisterServiceCtrlHandlerW
SetServiceStatus
GetCurrentThreadId
CoInitializeSecurity
CreateSemaphoreW
CloseHandle
CoRegisterClassObject
CoRevokeClassObject
SetProcessMitigationPolicy
HeapSetInformation
GetCommandLineW
CreateEventW
CreateThread
Sleep
LoadLibraryW
SetEvent
CLSIDFromString
RegQueryValueExW
StringFromGUID2
DevObjCreateDeviceInfoList
DevObjGetClassDevs
DevObjEnumDeviceInterfaces
DevObjDestroyDeviceInfoList
CoCreateGuid
CreateFileW
DeviceIoControl
GetDriveTypeW
ReleaseSemaphore
WaitForSingleObject
QueryDosDeviceW
DevObjEnumDeviceInfo
CM_Reenumerate_DevNode_Ex
FindFirstVolumeW
FindFirstVolumeMountPointW
GetVolumeNameForVolumeMountPointW
RemoveDirectoryW
FindNextVolumeMountPointW
FindVolumeMountPointClose
FindNextVolumeW
FindVolumeClose
CoImpersonateClient
RtlAdjustPrivilege
FormatMessageW
LocalFree
CoRevertToSelf
lstrlenW
RegDeleteTreeW
DevObjGetDeviceInterfaceDetail
CM_Query_And_Remove_SubTreeW
CM_Get_DevNode_Status
DevObjDeleteDevice
NtQueryVolumeInformationFile
GetVolumePathNamesForVolumeNameW
DeleteVolumeMountPointW
SetVolumeMountPointW
DefineDosDeviceW
GetVolumePathNameW
WriteFile
SetFilePointerEx
ResumeThread
CM_Get_Parent
HeapFree
HeapAlloc
SetLastError
WaitForMultipleObjects
WideCharToMultiByte
EventWriteTransfer
GetStartupInfoW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetCurrentProcessId
GetSystemTimeAsFileTime
GetTickCount
api-ms-win-core-synch-l1-1-0.dll
ntdll.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-string-obsolete-l1-1-0.dll
api-ms-win-core-memory-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-service-management-l1-1-0.dll
api-ms-win-service-management-l2-1-0.dll
api-ms-win-service-winsvc-l1-1-0.dll
api-ms-win-service-core-l1-1-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-handle-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-1.dll
api-ms-win-core-processenvironment-l1-1-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
DEVOBJ.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-io-l1-1-0.dll
CFGMGR32.dll
api-ms-win-core-kernel32-legacy-l1-1-1.dll
api-ms-win-core-file-l1-2-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-devices-config-l1-1-1.dll
api-ms-win-core-rtlsupport-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
??0CRtlMap@@QEAA@KP6AXPEAVCRtlEntry@@@Z1@Z
??1CVdsCallTracer@@QEAA@XZ
??0CVdsCallTracer@@QEAA@KPEBD@Z
?Prev@CRtlListIter@@QEAAAEAV1@XZ
?Next@CRtlListIter@@QEAAAEAV1@XZ
?GetEntry@CRtlListIter@@QEAAPEAVCRtlEntry@@XZ
?RemoveAll@CRtlList@@QEAAXXZ
?End@CRtlList@@QEAA?AVCRtlListIter@@XZ
?Begin@CRtlList@@QEAA?AVCRtlListIter@@XZ
??1CRtlList@@QEAA@XZ
??0CRtlList@@QEAA@P6AXPEAVCRtlEntry@@@Z@Z
VdsTraceEx
AllocateAndGetVolumePathName
VdsHeapFree
LogError
LogInfo
InitializeSecurityDescriptorHelper
AddEventSource
VdsHeapAlloc
RemoveEventSource
??0CGlobalResource@@QEAA@XZ
?Initialize@CGlobalResource@@QEAAJXZ
UnInitializeGlobalResouce
??1CGlobalResource@@QEAA@XZ
VdsDisableCOMFatalExceptionHandling
InitializeRundownProtection
StartReferenceHistory
WaitForRundownProtectionRelease
StopReferenceHistory
??1CRtlMap@@UEAA@XZ
?RemoveAll@CRtlMap@@QEAAXH@Z
VdsInitializeCriticalSection
?GetEntryPointer@CRtlListIter@@QEAAPEAXXZ
VdsTraceW
?Begin@CRtlMap@@QEAA?AVCRtlMapIter@@XZ
?Next@CRtlMapIter@@QEAAAEAV1@XZ
?Uninitialize@CVdsPnPNotificationBase@@QEAAXXZ
?Uninitialize@CVdsAsyncObjectBase@@SAXXZ
?InsertTailPointer@CRtlList@@QEAAHPEAX@Z
?Remove@CRtlList@@QEAAXAEAVCRtlListIter@@@Z
IsWinPE
AcquireRundownProtection
?Initialize@CVdsAsyncObjectBase@@SAKXZ
?Initialize@CVdsPnPNotificationBase@@QEAAKXZ
ReleaseRundownProtection
IsRunningOnAMD64
IsClientSKU
?InsertHeadPointer@CRtlList@@QEAAHPEAX@Z
GetInterfaceDetailData
InvalidateDiskCache
??0CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
??1CVdsWmiVariantObjectArrayEnum@@QEAA@XZ
VdsWmiConnectToNamespace
?Attach@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAUtagVARIANT@@@Z
?Next@CVdsWmiVariantObjectArrayEnum@@QEAAJPEAPEAUIWbemClassObject@@@Z
VdsWmiGetByteFromInstance
VdsWmiGetUlongFromInstance
VdsWmiGetObjectFromInstance
VdsWmiCopyFromVariantByteArray
?Detach@CVdsWmiVariantObjectArrayEnum@@QEAAJXZ
?Find@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAV2@@Z
VdsTrace
?Insert@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
?FindPtr@CRtlMap@@QEAAHAEAVCRtlEntry@@PEAPEAV2@@Z
?Remove@CRtlMap@@QEAAHAEAVCRtlEntry@@@Z
OpenDevice
GetDeviceName
GetDeviceAndMediaType
GetDiskLayout
GetPartitionInformation
?RegisterHandle@CVdsPnPNotificationBase@@QEAAKPEAXPEAPEAX@Z
?Append@CPrvEnumObject@@QEAAJPEAUIUnknown@@@Z
?Reset@CPrvEnumObject@@UEAAJXZ
IsVdsLoggingEnabled
VdsTraceExW
GuidToString
?InsertUnique@CRtlMap@@QEAAHAEAVCRtlEntry@@0@Z
IsNoAutoMount
IsEfiFirmware
?Clear@CPrvEnumObject@@QEAAXXZ
LockDismountVolume
GetDeviceNumber
IsDriveLetter
?Next@CPrvEnumObject@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Skip@CPrvEnumObject@@UEAAJK@Z
?Clone@CPrvEnumObject@@UEAAJPEAPEAUIEnumVdsObject@@@Z
??0CVdsAsyncObjectBase@@QEAA@XZ
??1CVdsAsyncObjectBase@@QEAA@XZ
?SetCompletionStatus@CVdsAsyncObjectBase@@QEAAXJK@Z
?Signal@CVdsAsyncObjectBase@@QEAAXXZ
VdsIscsiIpAddressToString
VdsWmiFindInstanceOfClass
VdsWmiGetUlonglongFromInstance
?QueryStatus@CVdsAsyncObjectBase@@UEAAJPEAJPEAK@Z
VdsIscsiIpsecIdToIpAddress
VdsIscsiCheckEqualIpAddress
VdsIscsiIpAddressToIpsecId
WriteBootCode
CoFreeStringArray
GetFMIFSFormatEx2Routine
GetFMIFSEnableCompressionRoutine
RemoveTempVolumeName
MountVolume
GetFileSystemRecognitionName
GetFMIFSGetDefaultFilesystemRoutine
AssignTempVolumeName
GetVolumeName
GetVolumeDiskExtentInfo
GarbageCollectDriveLetters
LockVolume
DeleteNetworkShare
GetVolumeUniqueId
GetVolumeGuidPathnames
DeleteBcdObjects
VdsIscsiCacheSessionDevices
VdsWmiGetObjectInVariantObjectArray
VdsIscsiGetIpAddressFromInstance
VdsWmiCreateClassInstance
VdsWmiSetUlongInInstance
VdsWmiCreateVariantArray
VdsWmiSetUlonglongInInstance
VdsWmiGetMethodArgumentObject
VdsWmiSetObjectInInstance
VdsWmiCallMethod
?UnregisterHandle@CVdsPnPNotificationBase@@QEAAXPEAX@Z
GetDeviceManufacturerInfo
GetMediaGeometryEx
GetStorageAccessAlignmentProperty
IsDiskClustered
IsDiskReadOnly
IsDiskCurrentStateReadOnly
CreateDeviceInfoSet
GetDeviceId
GetDeviceRegistryPropertyByInfo
VdsAllocateEmptyString
GetDeviceRegistryPropertyByInst
GetDeviceLocationEx
VdsDoesDiskHaveArcPath
GetBootFromDiskNumber
GetDiskOfflineReason
GetDiskRedundancyCount
VdsAllocateString
GetDiskIdentifiers
?WaitImpl@CVdsAsyncObjectBase@@QEAAJPEAJ@Z
vdsutil.dll
GetSystemDirectoryW
OpenThreadToken
GetCurrentThread
OpenProcessToken
DuplicateTokenEx
AdjustTokenPrivileges
SetThreadToken
GetFileAttributesW
ReadFile
VirtualFree
RegGetValueW
ResolveDelayLoadedAPI
DelayLoadFailureHook
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
RtlCompareMemory
memcmp
memset
.?AVbad_alloc@std@@
.?AVexception@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVSEHelperException@CVdsService@@
ImportTargets
VersionId
Version
Clsid
Uknown
SoftwareProviders
HardwareProviders
VirtualDiskProviders
System\CurrentControlSet\Services\vds
REGISTRY
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Copyright (c) Microsoft Corporation -->
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<assemblyIdentity
    version="5.1.0.0"
    processorArchitecture="amd64"
    name="Microsoft.Windows.VDS"
    type="win32"
<description>Virtual Disk Service</description>
<trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    <security>
        <requestedPrivileges>
            <requestedExecutionLevel
                level="asInvoker"
                uiAccess="false"
            />
        </requestedPrivileges>
    </security>
</trustInfo>
</assembly>
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Virtual Disk Service
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
vds.exe
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
vds.exe
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
    NoRemove AppID
    {
        ForceRemove {F290BFB2-1864-45B1-8804-2654194A87E7} = s 'Virtual Disk Service'
        {
            val LocalService = s 'vds'
        }
    }
    NoRemove CLSID
    {
        ForceRemove {7D1933CB-86F6-4A98-8628-01BE94C9A575} = s 'Vds Class'
        {
            val AppID = s '{F290BFB2-1864-45B1-8804-2654194A87E7}'
        }
    }
KcviB
REGISTRY
en-US
