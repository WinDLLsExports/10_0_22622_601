!This program cannot be run in DOS mode.
:Rich
.text
`.rdata
@.data
.pdata
@.didat
.rsrc
@.reloc
D$hE3
t$ UWAVH
f9<Bu
fA9<@u
fA9<@u
D$pE3
t$ UWAWH
fA9<@u
fA9<@u
fA9<@u
D$pE3
L$0H3
T$XE3
L$`H3
D$pE3
D$`E3
T$XE3
L$pH3
q0R^G'
ATAVAWH
p0R^G'
 A_A^A\
q:_0#
VWAVH
\$ E3
D$HE3
D$HE3
LcA<E3
HcQ<H
\$ UH
 H3E H3E
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
oD$ f
oL$0f
oT$@f
o\$PH
D$pE3
D$pE3
WAVAWH
D$ L;
@A_A^_
|$ UH
x AVH
x AVH
pcPZt
x AVH
VWAVH
x AVH
WAVAWH
 A_A^_
\$ UVWAVAWH
t,D8=
L9{Hu
A_A^_^]
D$xE3
D$8E3
@SUVWH
D$0L;
T$8H!|$8
D$@E3
UVWATAUAVAWH
ty@8=
t"@8=
fA9>u
@A_A^A]A\_^]
K SVWH
f94Cu
WATAUAVAWH
}HL9e@t
L97sGI
t;fD9!t5
 A_A^A]A\_
x AVH
uPH9i
p AWH
UWAVH
HcT$ HcL$$H
qcPZt
R$fA;Z*
fA9Z*v#A
L$ E3
t$ UWAVH
p;S>D.X
\$ UVWH
UVWATAUAVAWH
fD9.t=H
A_A^A]A\_^]
l$ VWAVH
 A^_^
t$ WH
t$ WH
L$@H3
UAVAWH
A_A^]
@USWH
VWAVH
fD94yu
0A^_^
D$ E3
t(H9Y
H+A H
t,H9y
H+A H
|$ UAVAWH
H95-f
A_A^]
UVWATAUAVAWH
t)H9=Wd
H9=.d
s8I9>
A_A^A]A\_^]
p{]0L
u]H!D$XH
HpH99t
UVWATAVH
PA^A\_^]
(D$0L
t$ UWATAVAWH
t2H9y
H+A H
A_A^A\_]
T$@H;
UWAWH
@A__]
UATAVH
@A^A\]
x AVH
VWAVH
 A^_^
UATAVH
K@H91t
@A^A\]
UWATAVAWH
L9>tiL9~
A_A^A\_]
HhH99t
x ATAVAWH
0A_A^A\
x AVH
L$ H3
(t$0H
D$8H9D$0u
x AVH
@USWH
x AVH
x AVH
x AVH
x AVH
@SVWH
@SVWH
@SVWH
@SVWH
@SVWH
H!\$P2
@USVWATAUAVAWH
fE;4$
A_A^A]A\_^[]
@USVWAVH
A^_^[]
t$ UWAVH
\$ UVWAVAWH
ttfD;?tnH
A_A^_^]
@USVWAWH
@A__^[]
pjVz2
UWATAVAWH
A_A^A\_]
@USVWAVH
A^_^[]
UAVAWH
A_A^]
VWAVH
` UAVAWH
A_A^]
@SVWH
T$hE3
@USVWATAVAWH
`A_A^A\_^[]
t$ UWAVH
x ATAVAWH
(D$ H
0A_A^A\
L$PH3
L$`H3
q0R^G'
L$0H3
q0R^G'
q[V0?7
t$ WH
UWAVH
@A^_]
D$HE3
9D$Hu
9D$Lu
D$HE3
9D$Lu
9\$Ht
t$ WH
9|$`@
WATAUAVAWH
 A_A^A]A\_
UWAVH
USVWATAUAVAWH
fA90t
HA_A^A]A\_^[]
ATAVAWH
 A_A^A\
WATAUAVAWH
0A_A^A]A\_
(D$ H
x AVH
\$0fD
t$ WH
UWATAUAVH
A^A]A\_]
UWAUAVAWH
D$@E3
L+t$XI
A_A^A]_]
UWAVH
D$0E3
fB94@u
t$ UWAVH
fD;7t
D$@E3
q;Vx"
UWAVH
UVWATAUAVAWH
@A_A^A]A\_^]
UVWATAUAVAWH
H!\$8L
H!\$03
H!\$ 3
H!\$8E
H!\$03
PA_A^A]A\_^]
L$PH3
UWAVH
`A^_]
t$ UWAVH
t$ UWATAVAWH
A_A^A\_]
q8RTZ
UVWAVAWH
A_A^_^]
@SVWH
@USVWAVH
A^_^[]
UVWATAUAVAWH
`A_A^A]A\_^]
x AVH
u;L9R
|$ UH
qXV~(
UWAVH
9E4u4H
@A^_]
D$@E3
\$ UVWAVAWH
pA_A^_^]
t$ UATAUAVAWH
L$ E3
A_A^A]A\]
phQtQ
UVWATAUAVAWH
L+\$8H
A_A^A]A\_^]
pQTzQ.
D$0E3
T$0E3
L$@H3
q"T<(
UVWATAUAVAWH
0A_A^A]A\_^]
UWAVH
qYQPu
D$0E3
tfH!]
D$(E3
t>HcM
D$(E3
UAVAWH
A_A^]
D$PE3
L$PH3
\$ UVWH
x UATAUAVAWH
uDH;|$pt
H;t$Xt
G(I;G0t
A_A^A]A\]
x AVH
\$ UVWH
NXH!E0L
@USVWAVH
H!EHH
PA^_^[]
@USWAVAWH
PA_A^_[]
\$ UVWH
NXH!E0L
t$ WH
H+D$0u
H+D$8H
L$@H3
L$8H3
t$ WH
H;AXH
A0H9QPt
H+QPH
UVWAVAWH
O0L;E
A_A^_^]
UVWAVAWH
A_A^_^]
UAVAWH
A_A^]
VWAWH
0A__^
C8!C@H!CHH!CPH!CXH
WAVAWH
H!|$x2
0A_A^_
H!\$H2
L$@H3
!L$ L
L$8+CHD
L$XH3
VWAVH
 A^_^
x AVH
x AVH
x AVH
t$ WAVAWH
;\$hu(
@A_A^_
\$ WH
K9\$@tC
(D$0H
L$0E3
(D$`H
UVWATAUAVAWH
A_A^A]A\_^]
@USVWAVAWH
L$8E3
A_A^_^[]
t$ WH
UATAUAVAWH
A_A^A]A\]
@USVWATAVAWH
A_A^A\_^[]
t$ WH
L$0E3
@USWH
UVWATAUAVAWH
fE9<Nu
A_A^A]A\_^]
q@XvX
@USWAVH
A^_[]
q8RTZ
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
D$ E3
L$0E3
L$@H3
L$HH3
D9}'t9
L$pH3
q;S>D.X
t$ UWAVH
fD;2u
D$ E3
D9t$0vz
;|$0r
|$ UH
l$ VWAWH
@USVWATAVAWH
A_A^A\_^[]
UVWATAUAVAWH
`A_A^A]A\_^]
pZX2F
c UAVAWH
A_A^]
c UAVAWH
A_A^]
\$ UVAVH
@USVWATAUAVAWH
pP\>o>
A_A^A]A\_^[]
q+Z6;
` UAVAWH
tCI9z
r.w;I
@A_A^]
UWATAVAWH
L9 uU
D$PH;
D$PH;
D$PH;
D$PH;
fD;'t}H
D$PH;
D$PH;
D$PH;
D$PH;
D$PH;
A_A^A\_]
(D$0M
@USVWAVH
@A^_^[]
|$ UAVAWH
A_A^]
x UAVAWH
phV6*'
A_A^]
@USWH
UATAUAVAWH
A_A^A]A\]
p3QXI
|$ UH
UWATAVAWH
A_A^A\_]
@USVWH
8_^[]
@USVWAVH
pA^_^[]
UWAVH
|$@H;|$H
UVWAVAWH
A_A^_^]
q;Y~l
|$ UH
D$ E3
|$ E3
D$ E3
D$ E3
tO99t:H
|$ UH
L$0H3
UATAUAVAWH
A_A^A]A\]
UATAUAVAWH
D9e`u@
A_A^A]A\]
UWATAVAWH
A_A^A\_]
qA\0i
L$ UATAUAVAWH
A_A^A]A\]
UVWAVAWH
D$(E3
@A_A^_^]
A;J8s%
@USVWAVH
fF94@u
A^_^[]
D$0E3
VWAWH
`A__^
\$ VH
L$PE3
D$ E3
9D$@t
D$P;G
SUVWH
D$(E3
H_^][
UVWATAUAVAWH
0A_A^A]A\_^]
@USVWATAUAVAWH
kD$H<
kD$`<A
kD$x<A
A_A^A]A\_^[]
UVWAVAWH
D$ E3
@A_A^_^]
L$ SWH
Q(9Q0~
Q,9Q4}
VWAVH
0A^_^
\$ UVWH
x UATAVH
D$ E3
A^A\]
@USVWAWH
PA__^[]
T$`E3
T$`E3
t$ UWATAVAWH
T$HE3
D$pI;
A_A^A\_]
UVWAVAWH
|$(E3
D$H9D$8r'3
A_A^_^]
<AfA99uFL
x ATAVAWH
0A_A^A\
x AVH
@USVWAUAVAWH
x`uuH
PA_A^A]_^[]
q3\pN
L$0H3
@USVWAVH
0A^_^[]
@USVWAVH
0A^_^[]
WAVAWH
@A_A^_
WAVAWH
@A_A^_
x ATAVAWH
@A_A^A\
x ATAVAWH
@A_A^A\
L$ SH
UWAVH
H+D$Hu
H+D$PH
L$XH3
D$ E3
|$ UAVAWH
A_A^]
L$HE3
|$ UAVAWH
A_A^]
@USVWATAUAVAWH
A_A^A]A\_^[]
UWAVH
\$PH+\$HH
L$`Hc
UWATAVAWH
A_A^A\_]
\$ UVWATAUAVAWH
fD9,su
A_A^A]A\_^]
VWAVH
@A^_^
UATAUAVAWH
phV6*'
A_A^A]A\]
D$`E3
L$`H3
WAVAWH
@A_A^_
(D$@L
f;3ucL
WAVAWH
@A_A^_
tEM9Z
r5w=H
D$(H+
UVWAVAWH
A_A^_^]
D$(I;
WAVAWH
@A_A^_
phU8U
pX]r&
pHXZ"
@USWH
pX]r&
@SVWH
E'H;G
H;L$(sJL
x AVH
|$ UH
UVWAVAWH
@A_A^_^]
\$ WH
WAVAWH
0A_A^_
UVWATAUAVAWH
pY]>_?
d$0H9
A_A^A]A\_^]
UVWATAUAVAWH
fB9\v
@A_A^A]A\_^]
x ATAVAWH
A_A^A\
t$ UWAVH
pQZ0}
pQZ0}
UATAUAVAWH
L$@M+
A_A^A]A\]
x UAVAWH
A_A^]
|$ UH
UVWATAUAVAWH
zeucA
fF9,@u
A_A^A]A\_^]
UAVAWH
I+>I+
A_A^]
D$HHi
UATAUAVAWH
phV6*'
A_A^A]A\]
VWAVH
0A^_^
x AVH
UAVAWH
A_A^]
UAVAWH
A_A^]
UWAVH
\$(E3
\$ E3
9\$0t
x AVH
;3s!H
VWAVH
D$0E3
PA^_^
WAVAWH
\$0M+
l$8L;
A_A^_
t$ UWAUAVAWH
A_A^A]_]
` UAVAWH
E'H9E
A_A^]
WATAUAVAWH
 A_A^A]A\_
WAVAWH
l$ E;
@A_A^_
9L$0H
qJW6p
x ATAVAWH
T$ H!\$ H
0I9\$
0A_A^A\
|$ UATAUAVAWH
A_A^A]A\]
@USVWAVH
@A^_^[]
D$(E3
\$ E3
WAVAWH
@A_A^_
\$ WH
x,f9|$0t
x`D9L$@uWH
D$hE3
WAVAWH
D$0E3
@A_A^_
x AVH
qzV|=
D$@E3
\$8E3
D$ E3
D$@E3
R:#'8
9L$0H
x,f9|$@t
R:#'8
q`Y>#
q`Y>#
@SUVWAVH
A^_^][
t$ WAVAWH
|$@E3
A_A^_
UVWAVAWH
 A_A^_^]
qKSxt?
q;Vx"
UVWATAUAVAWH
A_A^A]A\_^]
fD9,_u
\$0H+\$@L
fD9,pu
@SUVWAVH
D$HE3
txfD91trA
L$HH3
PA^_^][
WAVAWH
pKR^a
A_A^_
E(=csm
E8=csm
EH=csm
EX=csm
Eh=csm
Ex=csm
SspiCli.dll
WINHTTP.dll
CRYPT32.dll
CRYPTSP.dll
api-ms-win-shcore-stream-l1-1-0.dll
api-ms-win-shell-shdirectory-l1-1-0.dll
ext-ms-win-shell32-shellfolders-l1-1-0.dll
ext-ms-win-ole32-bindctx-l1-1-0.dll
api-ms-win-security-accesshlpr-l1-1-0.dll
CEMAPI.dll
PIMSTORE.dll
UserDataTypeHelperUtil.dll
UserDataTimeUtil.dll
InprocLogger.dll
Exception
ReturnNt
ReturnHr
LogNt
LogHr
FailFast
%hs(%u)\%hs!%p: 
%hs!%p: 
(caller: %p) 
%hs(%d) tid(%x) %08X %ws
Msg:[%ws] 
CallContext:[%hs] 
[%hs(%hs)]
[%hs]
kernelbase.dll
RaiseFailFastException
onecore\internal\sdk\inc\wil\opensource\wil\resource.h
WilError_03
ntdll.dll
RtlDllShutdownInProgress
RtlDisownModuleHeapAllocation
WilFailureNotifyWatchers
onecoreuap\base\MailContactsCalendarSync\
MCCS\
onecoreuap\base\appmodel\UserDataAccess\
APPID
Local\SM0:%lu:%lu:%hs
InProcLogger.DLL
FlushInProcTraceSession
ShouldReportAssertionFailure
DefaultStoreDirty
GoldenPartnershipId
Software\Microsoft\ActiveSync
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\contactsyncutils.cpp
success
FALSE
( ( 0x10a40000 | 31 ) ) == propertyValues[0].propid
PIMPR_DISPLAY_NAME == propertyValues[0].propid
nullptr != pDisplayName
((*pPropNotEmptyFilterIndices)[i] >= 0) && ((*pPropNotEmptyFilterIndices)[i] < c_numGalContactPimProps)
TempContact:DisplayName
0.w/X#
onecoreuap\private\base\inc\HashKeyHelper.h
pKey != 0
pKey != NULL
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\SyncPersistentObjectManager.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncpersistentobjectmanager.cpp
s_objectManager != 0
s_objectManager != NULL
info != nullptr
pDisplayState != nullptr
RtlIsCriticalSectionLockedByThread(&(_pAtlModule->m_csStaticDataInitAndTypeInfo.m_sec))
accountAbsent
it != m_objectMap.npos()
(((HRESULT)(hr)) >= 0) && (info != 0)
SUCCEEDED(hr) && (info != NULL)
(((HRESULT)(hr)) >= 0) && (info != nullptr)
SUCCEEDED(hr) && (info != nullptr)
!( ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwLower != ((ULONG_PTR) ((INT_PTR) -1 ))) && ( ((PSecHandle) (&info->sslCredentialHandle[(UINT)handleType]))->dwUpper != ((ULONG_PTR) ((INT_PTR) -1 ))) )
!SecIsValidHandle(&info->sslCredentialHandle[(UINT)handleType])
SsoId
Padding
Scope
Scheme
Authority
AuthUri
RefreshUri
%s\WebAuth\%s
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthsettings.cpp
tlx::assign_sprintf( keyPath, L"%s\\WebAuth\\%s", c_wszActiveSyncKey, pProviderId)
_statusTemp == 0L
((HRESULT)(50L) <= 0 ? ((HRESULT)(50L)) : ((HRESULT) (((50L) & 0x0000FFFF) | (7 << 16) | 0x80000000))) == hr
0 == (clientSecretSize % sizeof(WCHAR))
clientSecret.reserve(clientSecretSize / sizeof(WCHAR))
WinHttpCrackUrl(providerUri.c_str(), 0, 0, &urlComponents)
Software\Microsoft\ActiveSync
onecoreuap\internal\base\inc\WRLWinRTHelpers.h
m_completedEvent != 0
hr == ((HRESULT)0L)
hr == S_OK
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncResettableTimer.h
nullptr != m_pTpTimer
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\tokenbrokerutils.cpp
WebTokenRequestStatus_Success != requestStatus
%x - %s
authority
accountInternal->get_Properties(&accountProperties)
accountProperties->HasKey( HStringReference(AccountAutorityPropertyName).Get(), &hasAuthrority)
accountProperties->Lookup( HStringReference(AccountAutorityPropertyName).Get(), authority.GetAddressOf())
pRequest->get_Properties(&requestProperties)
requestProperties->Insert( HStringReference(RequestAutorityPropertyName).Get(), authority.Get(), &replaced)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebAuthenticationCoreManager).Get(), &webAuthCore)
webAuthCore->FindAccountProviderAsync( HStringReference(pProviderUri).Get(), &findAccountProviderOperation)
webAuthCore->FindAccountProviderWithAuthorityAsync( HStringReference(pProviderUri).Get(), HStringReference(pAuthority).Get(), &findAccountProviderOperation)
_TranslateNotFoundErrors(AwaitOperationResult( findAccountProviderOperation.p, &webAccountProvider))
webAuthCore->FindAccountAsync( pProvider, HStringReference(pAccountId).Get(), &findAccountOperation)
_TranslateNotFoundErrors(AwaitOperationResult( findAccountOperation.p, &webAccount))
GetActivationFactory( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &tokenBroker)
tokenBroker->GetDefaultSignInAccountAsync( &getDefaultSignInAccountResultOperation)
_TranslateNotFoundErrors(AwaitOperationResult( getDefaultSignInAccountResultOperation.p, &result))
result->get_DefaultWebAccount(&account)
consumers
organizations
pProvider->get_Id(providerId.GetAddressOf())
https://login.microsoft.com
providerWithAuthotity->get_Authority(authority.GetAddressOf())
pAccount->get_UserName(userName.GetAddressOf())
pUserName->assign( WindowsGetStringRawBuffer(userName.Get(), nullptr))
accountInternal->get_Id(accountId.GetAddressOf())
pAccountId->assign( WindowsGetStringRawBuffer(accountId.Get(), nullptr))
accountInternal->get_Properties(&properties)
properties->HasKey( HStringReference(pPropertyName).Get(), &hasProperty)
properties->Lookup( HStringReference(pPropertyName).Get(), propertyValue.GetAddressOf())
pProperty->assign( WindowsGetStringRawBuffer(propertyValue.Get(), nullptr))
pAccount->get_WebAccountProvider(&provider)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_Core_WebTokenRequest).Get(), &requestFactory)
requestFactory->Create( pProvider, HStringReference(pScope).Get(), HStringReference(pClientId).Get(), &request)
request->get_Properties(&properties)
properties->Insert( HStringReference(parameter.first.c_str()).Get(), HStringReference(parameter.second.c_str()).Get(), &replaced)
client_secret
properties->Insert( HStringReference(L"client_secret").Get(), HStringReference(pClientSecret).Get(), &replaced)
webAuthCore->GetTokenSilentlyWithWebAccountAsync( pRequest, pAccount, &webTokenRequestResultOperation)
webAuthCore->GetTokenSilentlyAsync( pRequest, &webTokenRequestResultOperation)
AwaitOperationResult( webTokenRequestResultOperation.p, &result)
pResult->get_ResponseStatus(&requestStatus)
pResult->get_ResponseData(&responseData)
responseData->GetAt(0, &response)
response->get_Token(token.GetAddressOf())
pToken->assign( WindowsGetStringRawBuffer(token.Get(), nullptr))
outcome
GetWebTokenSilentlyEx
RefreshWebTokenSilentlyEx
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchDog.h
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
Windows.Security.Authentication.Web.WebAuthenticationBroker
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
Windows.Security.Authentication.Web.Core.WebTokenRequest
Windows.Foundation.Uri
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\serverreadyindictor.cpp
g_hServerReady != 0
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\registryutils.cpp
WindowsLiveServiceTarget
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\AutoVariant.h
GO:#cR
(accessorType == __uuidof(PopImapAccountAccessor)) || (accessorType == __uuidof(ExternalAccountAccessor)) || (accessorType == __uuidof(ActiveSyncAccountAccessor))
mode != Access_Create
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Idl\objfre\amd64\AccountAccessorTypes.h
SUCCEEDED(hr)
(((HRESULT)(hr)) >= 0)
IsNotSupposedToSync
ScheduledSyncPeriod
LastSyncSuccess
LastSyncAttempt
Software\Microsoft\ActiveSync\Environment
.hotmail.com
.outlook.com
MSFT-
DeviceID
Device
EnabledDavFeatures
WindowsMail
DeviceType
outlook.at
outlook.be
outlook.ca
outlook.ch
outlook.cl
outlook.cn
outlook.co.id
outlook.co.il
outlook.co.in
outlook.co.jp
outlook.co.kr
outlook.co.nz
outlook.co.th
outlook.co.uk
outlook.co.za
outlook.com
outlook.com.ar
outlook.com.au
outlook.com.br
outlook.com.hk
outlook.com.mx
outlook.com.my
outlook.com.pt
outlook.com.sg
outlook.com.tr
outlook.com.tw
outlook.com.vn
outlook.cz
outlook.de
outlook.dk
outlook.es
outlook.fi
outlook.fr
outlook.gr
outlook.hk
outlook.hu
outlook.ie
outlook.in
outlook.it
outlook.jp
outlook.lt
outlook.lv
outlook.my
outlook.nl
outlook.no
outlook.ph
outlook.rs
outlook.ru
outlook.se
outlook.sg
outlook.sk
icloud.com
mac.com
me.com
gmail.com
163.com
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\asutil.cpp
pName
pszMultiByteStr
*ppwszWideCharStr == 0
*ppwszWideCharStr == NULL
pwszWideCharStr
*ppszMultiByteStr == 0
*ppszMultiByteStr == NULL
WLAccountSyncEnabled
pPeriod != nullptr
accessor.CoCreateInstance(__uuidof(ActiveSyncAccountAccessor))
0 != pServerName
NULL != pServerName
CryptAcquireContextW( tlx::replace(provider), 0, 0, 1, 0xF0000000)
CryptCreateHash( provider, ((4 << 13) | (0) | 4), 0, 0, tlx::replace(hash))
CryptHashData(hash, (LPBYTE)pUserId, (DWORD)[](size_t num) { DWORD out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(ULongLongToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\asutil.cpp", 524 ); } } while(0,0); return out; }(userIdSize), 0)
CryptGetHashParam( hash, 0x0004, (LPBYTE)&hashValueSize, &dwordSize, 0)
0 != hashValueSize
CryptGetHashParam( hash, 0x0002, hashValue, &hashValueSize, 0)
accountId.reserve(accountIdBufferLength)
tempUserId.assign(pDomain)
tempUserId.append(L"\\")
tempUserId.append(pUserName)
m.google.com
pServerName->assign(L"m.google.com")
deviceID.valid()
ASync3dF[^
(size > 0)
pDeviceId->assign(deviceID)
accessor.CoCreateInstance(__uuidof(PopImapAccountAccessor))
ConvertVariantTimeToFileTime(0, &(lastSyncTimeAsDate.date), &lastSyncTime)
syncPeriodInMinutes != invalidPeriod
deviceFamily < 100
%s%s-%d/%u.%u.%u
tlx::assign_sprintf(userAgent, L"%s%s-%d/%u.%u.%u", c_wszHttpUserAgent, pwszDevice.get(), deviceFamily, OSVersionInfo.dwMajorVersion, OSVersionInfo.dwMinorVersion, OSVersionInfo.dwBuildNumber)
::StringCchCopyW(pwszUserAgent, userAgentLength, userAgent.c_str())
StringCchPrintfExW( deviceTypeFamily, sizeof(*__countof_helper(deviceTypeFamily)), nullptr, nullptr, 0x00000800, L"%u", deviceFamily)
::StringCchCatW(deviceTypeDefault, sizeof(*__countof_helper(deviceTypeDefault)), deviceTypeFamily)
pDeviceType->assign(deviceTypeDefault)
(((NTSTATUS)(_ntStatus)) >= 0)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\updaterestoreutils.cpp
Gmail
www.google.com
apidata.googleusercontent.com
Email
Yahoo
carddav.address.yahoo.com
caldav.calendar.yahoo.com
pszValue
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourcelock.cpp
hr == ((HRESULT)0L) || 0 != rghObjects[1]
hr == S_OK || NULL != rghObjects[1]
hr == ((HRESULT)0L) || hMutex != 0
hr == S_OK || hMutex != 0
StringFromGUID2 ( partnerGuid, wszDataStoresLockName, 40 )
CloseHandle ( lockHandle )
ActiveSyncUnistoreLockTemplate
( *pMutexHandle ) != 0
it == 0
#$#$#DataStoresLock#$#$#
onecoreuap\private\base\inc\SafeMapiProps.h
props==0
props==NULL
props!=0
props!=NULL
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatshelpers.cpp
added.first != nullptr
MailReceivedCountOver40k
MailReceivedCount20kTo40k
MailReceivedCount10kTo20k
MailReceivedCount5kTo10k
MailReceivedCountUnder5k
ClientUnreadToReadCount
MailReceivedKB
UpdatedMailCount
DeletedMailCount
ReceivedMailCount
SentMailCount
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\DelayedDBPropertiesStream.h
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\EnumMAPITable.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\mapiutils.cpp
pMsgStore
cNames
rgName
ppTagArray
OneStopFactory
resourcesLib.valid()
StringCchLengthW(pBody, c_maxNDRBodySize, &contentLength)
StringCchLengthW(pSubjectFormat, c_maxSubjectSize, &subjectFormatSize)
tlx::assign_sprintf( subject, pSubjectFormat, c_maxSubjectSize - subjectFormatSize, pOriginalSubject)
ndrPropValues[0].ulPropTag == ((((ULONG)(0x0037))<<16)|((ULONG)(((ULONG) 31))))
ndrPropValues[1].ulPropTag == ((((ULONG)(0x0C1F))<<16)|((ULONG)(((ULONG) 31))))
syncServices.CoCreateInstance(__uuidof(POSyncServices))
SyncRes.dll
AirSync:SyncOptionsHash
AirSync:IsSearchResult
AirSync:ParentServerID
AirSync:LongID
Meeting:Occurences
Meeting:DisallowNewTimeProposal
Meeting:Timezone
Meeting:Reminder
Meeting:AllDay
REPORT.IPM.Note.NDR
AirSync:PermanentDelete
ServerSync:FolderName
ServerSync:AttOID
ServerSync:FileURI
AirSync:ParentID
AirSync:PermanentID
AirSync:FolderSyncFlags
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\domutil.cpp
(((HRESULT)(error)) < 0)
FAILED(error)
XPath
SelectionLanguage
SelectionNamespaces
Elevation:Highest!new:%s
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\comelevation.cpp
tlx::assign_sprintf( monikerName, L"Elevation:Highest!new:%s", classIdString)
CoGetObject( monikerName.c_str(), &bindOptions, interfaceId, ppInstance)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourcereg.cpp
res == 0L
hr == ((HRESULT)0x85050013)
hr == E_ACCOUNT_NOTFOUND
serverSourcesList.push_back(guidSource)
CLSID_MailSyncEngine == sds.engineID
mailSourcesList.push_back(guidSource)
m_sources.push_back(serverSourcesList[i])
m_sources.push_back(mailSourcesList[i])
Software\Microsoft\ActiveSync\Partners
Fonecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\sourceinfo.cpp
wszName != 0
accessor.CoCreateInstance(m_accessorType)
((&nameVar)->vt) == VT_BSTR
V_VT(&nameVar) == VT_BSTR
m_Name != 0
pSyncAttemptTime
pSyncSuccessTime
pdhrResult != 0
pGuid != 0
m_EngineGuid != GUID_INVALID
StoreId
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authhandler.cpp
backendType == c_pMSAServiceType
%s\%s
tlx::assign_sprintf( m_account, L"%s\\%s", domain.c_str(), userId.c_str())
credential.assign(password)
OMTP11
Microsoft.PPI.CredentialManagement.PPIDeviceCredentialReader
Microsoft.PPI.CredentialManagement.DeviceCredentialUtility
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\radiomanager.cpp
m_activityRefCount == 0
0 != m_activityRefCount
RadioManager::MarkInterfaceAsActive
m_pPdcReference
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncPdcReference.h
nullptr != m_activationHandle
true == m_watchdogDisabled
m_watchdogDisabled
nullptr == m_activationHandle
onecoreuap\base\MailContactsCalendarSync\PublishedInternal\Inc\SyncDeadlockWatchdog.h
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncbufferedstream.cpp
cbWrite == chunkSize
bytesWritten == bytesToCommit
Exchange
MailIncoming
MailOutgoing
OAuth
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\credutil.cpp
source != GUID_NULL
StringFromGUID2(source, wszDataSource, (sizeof(*RtlpNumberOf(wszDataSource)))) != 0
StringCchCopyW(pwszBuffer, cchBufferSize, wszCredentialName)
StringCchCatW(pwszBuffer, cchBufferSize, wszDataSource)
StringCchCatW(pwszBuffer, cchBufferSize, s_ServerTypeTable[type])
StringCchLengthW(pwszBuffer, cchBufferSize, &cchTempTargetName)
ActiveSyncCredentialSchema
ActiveSyncCredential
ActiveSyncCredentialDefaultUser
pUser->assign(((&userVar)->bstrVal))
StringCchCopyExW( target, targetLength, pPrefix, &pEnd, &countCharsRemaining, 0)
(StringFromGUID2(accountId, pEnd, (INT)[](size_t num) { INT out = 2147483647; do { HRESULT _hrTemp = Typecheck::CheckChrType(UIntPtrToInt(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\credutil.cpp", 580  ); } } while(0,0); return out; }(countCharsRemaining)) > 0)
SYNC_CERT
SyncUseSSL
SyncServer
SyncPassword
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\base64.cpp
CryptBinaryToStringW( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptBinaryToStringA( pInputBuffer, inputBufferLength, 0x00000001 | 0x40000000, pOutputString, outputStringLength)
CryptStringToBinaryW( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
CryptStringToBinaryA( pInputString, inputStringLength, 0x00000001, pOutputBuffer, pOutputBufferLength, 0, 0)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\password.cpp
StringCchCopyW(pPassword, passwordLen, pTmp)
StringCbLengthW( credentialValue, credentialValueMaxLength * sizeof(WCHAR), &pwdSizeInBytes)
ULongAdd((ULONG)[](size_t num) { ULONG out = 0xffffffffUL; do { HRESULT _hrTemp = Typecheck::CheckChrType(ULongLongToULong(num, &out)); if ((0,((((HRESULT)(_hrTemp)) < 0)))) { Log_HREvent(_hrTemp, 0, "onecoreuap\\base\\mailcontactscalendarsync\\utils\\syncutil\\lib\\password.cpp", 139  ); } } while(0,0); return out; }(pwdSizeInBytes), sizeof(WCHAR), &blobSizeInBytes)
StringCchLengthW(pwszServer, MAX_SERVER_NAME_LENGTH, &cchServerSize)
ppwszPassword
StringCchCopyW(pwszPassword, dwPasswordLen, szNoPassword)
OAuthRefreshToken
SyncUseSSL
SyncServer
SyncPassword
DefaultWindowsLiveCid
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncds.cpp
StringFromGUID2(dataTypeID, wszType, (sizeof(*RtlpNumberOf(wszType))))
outlookApp.CoCreateInstance(__uuidof(Application))
pTags->cValues == (sizeof(*RtlpNumberOf(spta.aulPropTag)))
pTags->cValues == ARRAYSIZE(spta.aulPropTag)
pCidTemp.valid()
DeleteInProgress
Domain
Enabled
StoreId
StoreType
Server
Engine
Software\Microsoft\ActiveSync\Partners
ServerLog
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\fileutil.cpp
%s\%s-%d.txt
%s\Ping %s-%d.txt
%s\SKZ %s.txt
packages\ActiveSync\LocalState\DiagOutputDir
SHGetKnownFolderPath( knownFolderId, KF_FLAG_DONT_VERIFY, nullptr, replace(localDataPath))
PathCchCombine(pPath, pathLength, localDataPath, pRelativePath)
PathCchAddBackslash(pPath, pathLength)
StringCchCatW(filePath, (sizeof(*RtlpNumberOf(filePath))), pFileName)
fileHandle != ((HANDLE)(LONG_PTR)-1)
NumberOfLogs
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synccalendaringutils.cpp
storeIds[0] != storeIds[1]
sizeof(CEENTRYID) == storeEntryIdPropVal->Value.bin.cb
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncsessionhelpers.cpp
0 != pSyncPartner
NULL != pSyncPartner
0 == sessionScope
NULL == sessionScope
0 != pScopeMetadata
NULL != pScopeMetadata
0 != sessionScope
NULL != sessionScope
0 != ppResumeState
NULL != ppResumeState
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoutils.cpp
WinHttpCrackUrl(pResourceUri, 0, 0, &urlComponents)
resourceUri.assign(pResourceUri, uriLength)
resource
requestParameters.emplace(L"resource", utl::move(resourceUri)).first != nullptr
requestParameters.emplace(L"authority", pAuthUri).first != nullptr
_GetAADToken
(((HRESULT)(hr)) >= 0) || (((HRESULT)0x85050002) == hr)
account->get_WebAccountProvider(&provider)
GoogleOAuthURI
GoogleOAuthTokenURI
GoogleOAuthRedirectURI
GoogleUserInfoURI
GoogleDefaultPadding
862726500644-mba83qqf9kq69c5mk9u5h2dn4iocdspq.apps.googleusercontent.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email
https%3A%2F%2Fmail.google.com
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcarddav
https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar
YahooOAuthURI
YahooOAuthTokenURI
YahooOAuthRedirectURI
YahooUserInfoURI
YahooDefaultPadding
dj0yJmk9QzFFaHJsUnphMjlnJmQ9WVdrOVZUVk9iMWhCTXpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1lYw--
sdpp-w
mail-x
sdct-w
ycal-w
MicrosoftOAuthURI
MicrosoftOAuthTokenURI
MicrosoftOAuthRedirectURI
MicrosoftUserInfoURI
MicrosoftDefaultPadding
000000004011621F
service::ssl.live.com::MBI_SSL
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthaccountutil.cpp
scopes->append(pProviderInfo->ScopeAccountInfo)
scopes->append(pProviderInfo->ScopeSeperator)
scopes->append(pProviderInfo->ScopeMail)
scopes->append(pProviderInfo->ScopeContacts)
scopes->append(pProviderInfo->ScopeCalendar)
emails
account
pUsername->assign(hstrAccount.GetRawBuffer(nullptr))
email
pUsername->assign(account.GetRawBuffer(nullptr))
url.append(pAppend->c_str(), c_MaxParamSize)
url.append(pAppend->c_str())
pUrlParam->append(escapedUrl.c_str())
device_id=
pIdParams->append(L"device_id=")
deviceName.assign(values)
&device_name=
pIdParams->append(L"&device_name=")
deviceModel.assign(values)
&device_model=
pIdParams->append(L"&device_model=")
username=
customAuthParams.append(L"username=")
customAuthParams.append(escapedUsername.c_str())
access_type=offline
customAuthParams.append(L"access_type=offline")
customAuthParams.append(L"&")
customAuthParams.append(idParams)
((HRESULT)0x80070057L) != hr
E_INVALIDARG != hr
request.append(accountInfoURI)
?access_token=
request.append(L"?access_token=")
request.append(pAccessToken)
(200 == httpStatus)
StringCchCopyW(retVal, bufferLength, localUsername.c_str())
accountConfig.CoCreateInstance(__uuidof(ActiveSyncApp))
RPSToken
StringCchLengthW(pMatchedAddress, (2147483647 - 1), &addressLength)
StringCchCopyW(retVal, addressLength, pMatchedAddress)
2UuwarE
Windows.Data.Json.JsonObject
SNProviderAccountName
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\msautils.cpp
SsoProviderMSA == providerType
SafeCustomerId
SafeCustomerId is: '%S', parsed value: %I64d, end index: %d
GetMsaCustomerId
0 != *pCustomerId
Software\Microsoft\AccountSettings
HRESULT
LASTATTEMPTTIME
LASTSUCCESSTIME
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\pluginerror.cpp
dwRC == 0L
dwSize == sizeof(DWORD)
WindowsLiveActiveSync
WindowsLiveStorage
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\liveendpoints.cpp
pEndPoint->assign(pStringValue.get())
((HRESULT)0x80070057L)
onecoreuap\base\MailContactsCalendarSync\Porting\Inc\EntryIdEx.h
(0 != nSize)
pEntryId->assign(tempEntryId)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synchttputils.cpp
packageName.assign(c_emailProductId)
packageName.append(L"!")
packageName.append(storeIdAsString)
{5B04B775-356B-4AA0-AAF8-6491FFEA5614}
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthtokenutil.cpp
currRefreshTokenValid
newAccessTokenValid
(((HRESULT)(_IsValidToken(currentToken, &valid))) >= 0) && (0 != valid)
SUCCEEDED(_IsValidToken(currentToken, &valid)) && (FALSE != valid)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accountpropertyutils.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\policyutil.cpp
StringFromGUID2(partner, partnerString, (sizeof(*RtlpNumberOf(partnerString))))
policyKey.append(pPolicyInfo->pwszPolicyKey)
policyKey.append(L"\\")
policyKey.append(pPolicyInfo->pwszPolicyName)
policyKey.append(partnerString)
0L == lResult
(dwType == ( 4ul ))
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\guidenumerator.cpp
gvType == GUID_VALIDATION_GUID || gvType == GUID_VALIDATION_DATASOURCE
DeleteInProgress
Engine
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easheartbeatcontroller.cpp
pReportError
pIsTimeoutError
LastSuccessfulHeartbeat
StoreType
MaxEmailHTMLBodyTruncationSize
MaxAttachmentSize
MaxEmailBodyTruncationSize
MaxEmailAgeFilter
MaxCalendarAgeFilter
RequireManualSyncWhenRoaming
RequiredSignedSMIMEAlgorithm
RequiredEncryptionSMIMEAlgorithm
AllowSMIMESoftCerts
AllowSMIMEEncryptionAlgorithmNegotiation
RequireSignedSMIMEMessages
RequireEncryptedSMIMEMessages
SMIMEAlwaysSign
SMIMEAlwaysEncrypt
Software\Microsoft\ActiveSync\Security\Provision
HTMLTruncation
MailBodyTruncation
MailFileAttachments
PreferredBodyType
CalendarAgeFilter
EmailAgeFilter
SyncWhenRoaming
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\heartbeatalgorithmbase.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\synclogger.cpp
StringCchCopyW( m_logPrefix, (sizeof(*RtlpNumberOf(m_logPrefix))), pSettings->logFilePrefix)
StringCchCopyW( m_logPostfix, (sizeof(*RtlpNumberOf(m_logPostfix))), pSettings->logFilePostfix)
m_accountName.assign(pSettings->pAccountName)
StringCchCopyW(pDestinationFileName, 260, pDefaultName)
m_accountName.assign(L"ServerLog")
%s%s%s-%d.txt
StringCchPrintfW( pFileName, 260, L"%s%s%s-%d.txt", m_logPrefix, sanitizedFileName, m_logPostfix, logNumber)
originTag.assign(pOriginTag)
[%02d/%02d/%04d %02d:%02d:%02d.%03d] 
StringCchPrintfA(timeStamp, (sizeof(*RtlpNumberOf(timeStamp))), "[%02d/%02d/%04d %02d:%02d:%02d.%03d] \r\n", SystemTime.wDay, SystemTime.wMonth, SystemTime.wYear, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wMilliseconds)
originTag.append(timeStamp)
StringCchPrintfA( partnerHeader, (sizeof(*RtlpNumberOf(partnerHeader))), c_partnerMapping, partnerGuid, TraceGetPartnerId(m_partner))
StringCchCopyW(lineBuffer + HEX_LINE_CHARS, destinationSize, L"\r\n\0")
StringCbLengthA(pData, 2147483647 * sizeof(CHAR), &stringSize)
data.reserve((1024 * 60)+1)
*pEndToken == 0
*pEndToken == NULL
pEndToken == pToken
--= Protocol logs for PARTNER='%S', CTRLLOG ID=0x%08X =--
=-=-=-= Client Request =-=-=-  Timestamp: 
=-=-=-= Server Response =-=-=- Timestamp: 
=-= Build %d =-=
NextLogNumber
DefaultLogging
DisablePIIStripping
LogRollOverSize
NumberOfLogs
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsource.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\popimapsourceinfo.cpp
source != GUID_INVALID
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\activesyncsourceinfo.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\authtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\basicauthhandler.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhandler.cpp
!accessToken.empty() && !_IsCurrentTimePastExpirationTime(expirationTime)
EASAccountId
Software\Microsoft\PPI\Settings\DeviceAccount
UseBuiltInTeamDeviceAccount
https://outlook.office.com
GetActivationFactory( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_DeviceCredentialUtility).Get(), &credentialUtilities)
ResourceUrl
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(resource.get()).Get(), tokenResult.GetAddressOf())
credentialUtilities->GetAccessToken( HStringReference(c_scope).Get(), HStringReference(c_defaultResource).Get(), tokenResult.GetAddressOf())
_IsValidToken(refreshToken)
client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s
tlx::assign_sprintf( requestBody, L"client_id=%s&client_secret=%s&grant_type=refresh_token&refresh_token=%s&scope=%s", _GetClientId().c_str(), _GetClientSecret().c_str(), pRefreshToken, _GetScope().c_str())
ULongLongToULong(utf8RequestBody.length(), &contentLength)
postLocation.assign(m_refreshUri)
Content-Type: application/x-www-form-urlencoded
(!!parsed)
access_token
jsonObject->GetNamedString( HStringReference(L"access_token").Get(), accessToken.GetAddressOf())
_IsValidToken(accessToken.GetRawBuffer(nullptr))
token_type
refresh_token
expires_in
pRefreshToken->assign(refreshToken.GetRawBuffer(nullptr))
pAccessToken->assign(accessToken.GetRawBuffer(nullptr))
nullptr == buffer.insert( buffer.end(), readBuffer, readBuffer + readCount)
UIntPtrToInt(buffer.size(), &bufferSize)
0 != wideCount
responseBody.reserve(++wideCount)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easauthtargettype.cpp
ACTIVESYNC_DATASOURCE_EXCHANGE == accountType
pBackendServiceType->assign(pServiceType)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\easaadauthhandler.cpp
pTargetType == AuthTargetType::GetAuthTargetType(AuthTargetKind::ExchangeActiveSync)
_GetBackendType() == c_pExchangeServiceType
(nullptr != pAuthTarget) && (L'\0' != *pAuthTarget)
https://
http://
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoauthhandler.cpp
name.assign(pName)
value.assign(pValue)
position != nullptr
SsoTokenTarget
!token.empty() && ((nullptr == pCurrentToken) || (token != pCurrentToken))
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ppiauthhandler.cpp
ActivateInstance( HStringReference(RuntimeClass_Microsoft_PPI_CredentialManagement_PPIDeviceCredentialReader).Get(), &reader)
reader->Read(&credential)
credential->get_Password(&securePassword)
securePassword->Get(&passwordLength, &pPassword)
pCredential->assign(pPassword, passwordLength)
pCredential->get_UserPrincipalName(&userPrincipalName)
pCredential->get_Username(&userName)
pCredential->get_Domain(&domain)
pString->Get(&length, &pStringValue)
pValue == tlx::iwstring_view_ascii(pStringValue, length)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumsourceregsimple.cpp
m_ge.IsInitialized()
Software\Microsoft\ActiveSync\Partners
m_datatypeList.reserve(4)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\enumdatatypereg.cpp
m_datatypeList.push_back(guidType)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\syncstatusnotification.cpp
onecoreuap\private\base\inc\CommsPoomHelpers.h
notificationData && (0 != byteCountNotificationData)
pEventData
ppSyncStatusNotification
SyncStatusEventType_None == pEventData->eventType || SyncStatusEventType_Reset == pEventData->eventType
ActivateInstance( HStringReference(RuntimeClass_Windows_Internal_Security_Authentication_Web_TokenBrokerInternal).Get(), &listener)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\ssoaccountscallbackregistration.cpp
listener->add_AccountChanged(changedHandler.Get(), &changedToken)
listener->add_AccountAdded(addedHandler.Get(), &addedToken)
listener->add_AccountDeleted(deletedHandler.Get(), &deletedToken)
requestedBytes <= 0xffffffffUL
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\jsonhelpers.cpp
convertedBufferSize != 0
requestedBytes <= ULONG_MAX
charsConverted != 0
m_startURL.assign(pStartURL)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\oauthhelper.cpp
m_refreshURL.assign(pRefreshURL)
m_endURL.assign(pEndURL)
m_clientSecret.assign(pClientSecret)
m_clientId.assign(pClientId)
m_redirectURL.assign(pRedirectURL)
m_scopes.assign(pScopes)
m_customAuthParams.assign(pCustomAuthParams)
m_userNameHint.assign(pUsernameHint)
?client_id=
request.append(m_startURL)
request.append(m_clientId)
request.append(L"?client_id=")
request.append(L"&response_type=")
&response_type=
token
&scope=
request.append( (OAuthGrantType::Implicit == grantType) ? L"token" : L"code")
request.append(m_scopes)
request.append(L"&scope=")
request.append(L"&login_hint=")
&login_hint=
&redirect_uri=
request.append(escapedUsername.c_str())
request.append(escapedRedirectUri.c_str())
request.append(L"&redirect_uri=")
request.append(m_customAuthParams)
request.append(L"&")
uriFactory->CreateUri(HStringReference(request.c_str()).Get(), &startUri)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Foundation_Uri).Get(), &uriFactory)
GetActivationFactory( HStringReference(RuntimeClass_Windows_Security_Authentication_Web_WebAuthenticationBroker).Get(), &wabBrokerStatics)
uriFactory->CreateUri(HStringReference(m_redirectURL.c_str()).Get(), &callbackUri)
inspectable.As(&initWithWindow)
factory->ActivateInstance(&inspectable)
wabBrokerStatics->AuthenticateWithCallbackUriAndContinue( startUri.Get(), callbackUri.Get())
initWithWindow->Initialize(callerWindow)
code=
protocolReturnData.assign(pAuthCodeResponse)
client_id=
(utl::wstring::npos != beginIndex)
&client_secret=
request.append(L"client_id=")
request.append(m_clientSecret)
request.append(L"&client_secret=")
request.append(L"&grant_type=authorization_code")
&grant_type=authorization_code
request.append(L"&code=")
&code=
uri.assign(pProtocolReturnData)
request.append(protocolReturnData, beginIndex, authCodeLength)
request.append(L"&grant_type=refresh_token")
&grant_type=refresh_token
request.append(L"&refresh_token=")
&refresh_token=
(expirationTime == (double)((int)expirationTime))
request.append(pRefreshToken)
pAcessToken->assign(accessToken.GetRawBuffer(nullptr))
(_itow_s((int)expirationTime, conversionBuffer, 10) == 0)
pTokenType->assign(tokenType.GetRawBuffer(nullptr))
pTokenExpirationTime->assign(conversionBuffer)
StringCchCopyW(pBuffer, bufferLength, value.c_str())
pValue->append(uri, beginIndex, valueLength)
tlx::append_sprintf(tempString, L"%s=", paramName)
UrlUnescapeW(pValue->data(), nullptr, nullptr, 0x00100000)
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\internetmailauthtargettype.cpp
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\smtpauthtargettype.cpp
Basic
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\plaintextauthhandler.cpp
%s:%s
tlx::assign_wide( multiByteCredentials, wideCredentials, 0)
tlx::assign_sprintf( wideCredentials, L"%s:%s", GetAccount(), pCredential)
encodedCredentials.reserve(encodedSize)
ULongLongToULong(multiByteCredentials.length(), &multiByteLength)
tlx::assign_sprintf( *pAuthorization, L"Basic %hs", encodedCredentials.c_str())
Basic %hs
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\webauthhandler.cpp
%s %s
tlx::assign_sprintf( *pAuthorization, L"%s %s", m_authScheme.c_str(), pCredential)
pValue->assign(GetVariantString(&propValue, L""))
onecoreuap\base\mailcontactscalendarsync\utils\syncutil\lib\accessorutils.cpp
EOe4^
1.3.6.1.4.1.311.71.1.2
1.3.6.1.4.1.311.71.1.1
Microsoft Smart Card Key Storage Provider
1.3.6.1.5.5.7.3.2
Software\Microsoft\ActiveSync\Partners
Software\Microsoft\ActiveSync\Security\Provision
Software\Microsoft\ActiveSync
\MailContactsCalendarSync\LiveDomainList.txt
onecoreuap\base\mailcontactscalendarsync\utils\syncsqm\lib\sqmpartnertype.cpp
yahoo
pDomain->assign(pszDomainName)
(0 != ret)
*~*~*~*~*~*~*~*~*~*
IeRtUtil.dll
00000000-0000-0000-0000-000000000000
IPM.Schedule.Meeting.Notification.Forward
rpmsg.message
IPM.Schedule.Meeting.Resp.Tent
IPM.Schedule.Meeting.Canceled
IPM.Schedule.Meeting.Resp.Pos
IPM.Schedule.Meeting.Resp.Neg
IPM.Schedule.Meeting.Request
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
failureId
failureCount
function
FallbackError
PartA_PrivTags
wilResult
hresult
fileName
lineNumber
module
failureType
message
threadId
callContext
originatingContextId
originatingContextName
originatingContextMessage
currentContextId
currentContextName
currentContextMessage
Assert
FailureTrigger
errorCode
expression
Warning
Error
GetWebTokenTimedOut
componentId
componentName
functionName
watchdogStartTime
watchdogDurationMs
TokenBrokerError
Status
TokenBrokerError
OneSyncError
providerErrorText
SyncUtil_XMLParse_LoadFailFilePos
filePos
SyncUtil_XMLParse_LoadFailSrcText
srcText
SyncUtil_XMLParse_LoadFailUrl
SyncUtil_XMLParse_LoadFailReason
reason
SyncUtil_XMLParse_LoadFailHresult
error
CredUtil_UpdatePasswordForAccount
partnerId
hrDelete
hrRewrite
Trace
SyncUtil_OAuth_RefreshTokens
partnerId
tokenType
expirationTime
SyncUtil_OAuth_RefreshTokens
tokenType
expirationTime
SyncUtil_OAuth_GetTokensFromAuthCode
tokenType
expirationTime
Microsoft.Windows.OneSync.DiagCritical
Microsoft.Windows.Unistack.FailureTrigger
Microsoft.Windows.OneSync.DiagWarning
Microsoft.Windows.OneSync.DiagError
Microsoft.Windows.OneSync.SyncUtil
Microsoft.Windows.OneSync.DiagTrace
RSDS?
SyncUtil.pdb
.text
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.rdata$brc
.rdata$T$brc
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XIA
.CRT$XIAA
.CRT$XIZ
.CRT$XLA
.CRT$XLZ
.gehcont
.gfids
.giats
.rdata
.rdata$voltmd
.rdata$zETW0
.rdata$zETW1
.rdata$zETW2
.rdata$zETW9
.rdata$zzzdbg
.tls$
.tls$ZZZ
.xdata
ATL$__a
ATL$__m
ATL$__z
.didat$2
.didat$3
.didat$4
.didat$6
.didat$7
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data$brc
.data
.pdata
.didat$5
.rsrc$01
.rsrc$02
FreeCredentialsHandle
WinHttpCrackUrl
CryptBinaryToStringW
CryptBinaryToStringA
CryptStringToBinaryW
CryptStringToBinaryA
CertFreeCertificateChain
CertFreeCertificateChainEngine
CertGetEnhancedKeyUsage
CertGetCertificateContextProperty
CertGetNameStringW
CertCompareCertificateName
CertGetCertificateChain
CryptAcquireContextW
CryptCreateHash
CryptHashData
CryptGetHashParam
CryptDestroyHash
CryptReleaseContext
SHCreateMemStream
SHGetKnownFolderPath
CoGetObject
QueryTransientObjectSecurityDescriptor
FreeTransientObjectSecurityDescriptor
MAPIFreeBuffer
HrGetOneProp
GetMsgStoreFromMessage
FreeProws
MAPILogonEx
MAPIUninitialize
MAPIInitialize
HrSetOneProp
SetConversationId
USOIDfromCEENTRYID
MAPIAllocateBuffer
POutlookAppManager_CreateInstance
GetPartnerGUID
GetMeetingNotificationFromMessage
SafeLPWSTR
BytesToDigits
CreateWrapFileStm
EscapeURL
ParseDelimitedString
ConvertVariantTimeToFileTime
MinutesBetweenFT
EnableInProcTracingForProvider
CompressWhitespaceNW
LMNOPQYZ[_`abdemq
SYNCUTIL.dll
DeviceNeedsProvisioning
GetAuthority
GetGalSearchResultsFolderAndPartnerGuidEx
GetProviderUri
GetWebAccountId
GetWebAccountProvider
GetWebAccountProviderFromProviderId
InitializeServerReadyEvents
IsACOn
IsScreenOn
MarkServerReady
MarkServerShutdown
OpenProviderKey
UninitializeServerReadyEvents
UpdateYahooAccountType
WaitForServerReady
WaitForSignalOrShutdown
AcquireDataStoreLock
AcquireDataStoreLockEx
AggregateAccountSyncStats
AggregateSessionSyncStats
CloseDataStoreLock
CoCreateInstanceElevated
CreateAuthHandler
CreateDataStoreLock
CreateSyncBufferedStream
CredVaultDelete
CredVaultRead
CredVaultWrite
DeleteAuthCertHash
DeleteDataSource
DeleteHttpTransport
DeleteOAuthRefreshTokenForPartnership
DeletePwd
DllCanUnloadNow
DllGetClassObject
DoesServerSupportAutoMoveSentItem
FindErrorCode
GetAADToken
GetAccountSyncStats
GetAccountUsernameFromToken
GetAuthCertHash
GetAuthCertTargetAndUser
GetBatterySaverWnfName
GetCurrentSyncStats
GetCurrentSyncStatsForMessage
GetCurrentSyncStatsForStore
GetDefaultDeviceType
GetDefaultMsaWebAccountId
GetDefaultStoreDirty
GetDomainFromEmail
GetGoldenPartnershipId
GetMonitorDisplayState
GetMsaCustomerId
GetOAuthAccessTokenForPartnership
GetOAuthHelperForAccount
GetOAuthHelperForProvider
GetOutgoingMessageSizeLimit
GetSHA1HashOfString
GetSessionSyncStats
GetSyncTargetName
GetSyncWorkOnBehalfTicket
HasNeverSyncedSuccessfully
InitializeCredVault
InitializeMeContact
InitializeMsaStore
InitializeSyncStatus
InvalidateOAuthAccessTokenForPartnership
IsFirstSyncEver
IsMatchingClientCertificateEx
IsPwdSaved
IsValidAADAuthUri
LoadHeartbeatValues
LogSyncBiweeklySQM
MarkUserDataAccountAsHidden
OAuthHelper_CreateInstance
OpenMimeBufferedStream
ReadOAuthRefreshTokenForPartnership
ReadPasswordForPartnership
RegisterSsoAccountsCallback
ReleaseDataStoreLock
SetAuthCertHash
SetBatterySaverWnfName
SetDefaultStoreDirty
SetMonitorDisplayState
SetOutgoingMessageSizeLimit
SetSyncWorkOnBehalfTicket
SyncSqmUpdateStats
TryGetDefaultSignInAccountInfo
VerifyDataStoreLockOwner
WriteOAuthRefreshTokenForPartnership
WritePasswordForPartnership
__C_specific_handler
_vsnwprintf
memcpy_s
_purecall
_strnicmp
malloc
_callnewh
_XcptFilter
_amsg_exit
_initterm
msvcrt.dll
_lock
_unlock
__dllonexit
_onexit
_errno
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
RtlReportException
ntdll.dll
MCCSPal.dll
VaultGetItemType
VaultCreateItemType
VaultOpenVault
VaultAddItem
VaultGetItem
VaultRemoveItem
VaultCloseVault
VaultFree
VAULTCLI.dll
GetModuleFileNameA
InitOnceBeginInitialize
CreateSemaphoreExW
HeapFree
SetLastError
EnterCriticalSection
ReleaseSemaphore
GetModuleHandleExW
CoCreateInstance
EventUnregister
LeaveCriticalSection
InitializeCriticalSection
WaitForSingleObject
GetCurrentThreadId
ReleaseMutex
EventSetInformation
FormatMessageW
GetLastError
OutputDebugStringW
InitOnceComplete
WaitForSingleObjectEx
OpenSemaphoreW
CloseHandle
RaiseException
HeapAlloc
EventRegister
GetProcAddress
CreateMutexExW
DeleteCriticalSection
GetCurrentProcessId
GetProcessHeap
EventWriteTransfer
GetModuleHandleW
DebugBreak
IsDebuggerPresent
MultiByteToWideChar
WideCharToMultiByte
Sleep
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
QueryPerformanceCounter
GetSystemTimeAsFileTime
GetTickCount
RegGetValueW
LoadLibraryW
FreeLibrary
LocalAlloc
LocalFree
RoGetActivationFactory
WindowsDeleteString
WindowsGetStringRawBuffer
WindowsCreateStringReference
SetEvent
CreateEventExW
CoWaitForMultipleObjects
GetTickCount64
SetThreadpoolTimer
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
CreateThreadpoolTimer
CoInitializeEx
CoUninitialize
GetSystemTime
RegCloseKey
CreateEventW
ResetEvent
WaitForMultipleObjects
SystemTimeToFileTime
GetVersionExW
OpenThreadToken
GetCurrentThread
OpenProcessToken
GetTokenInformation
StringFromGUID2
CreateMutexW
OpenMutexW
InitializeCriticalSectionEx
LoadLibraryExW
LoadStringW
RegOpenKeyExW
CLSIDFromString
ReleaseSRWLockExclusive
RegDeleteTreeW
DeleteFileW
PathCchCombine
PathCchAddBackslash
CreateFileW
GetFileAttributesExW
CoTaskMemFree
GetLocalTime
RegQueryValueExW
FileTimeToSystemTime
RegQueryInfoKeyW
RegEnumKeyExW
GetModuleFileNameW
InitializeSRWLock
AcquireSRWLockExclusive
CompareFileTime
GetProductInfo
RegSetValueExW
CoTaskMemAlloc
RoActivateInstance
WindowsCreateString
DuplicateHandle
GetFileSize
ReadFile
RegCreateKeyExW
RegDeleteValueW
RegEnumValueW
LCMapStringW
api-ms-win-core-libraryloader-l1-2-0.dll
api-ms-win-core-synch-l1-2-0.dll
api-ms-win-core-synch-l1-1-0.dll
api-ms-win-core-heap-l1-1-0.dll
api-ms-win-core-errorhandling-l1-1-0.dll
api-ms-win-core-com-l1-1-0.dll
api-ms-win-eventing-provider-l1-1-0.dll
api-ms-win-core-processthreads-l1-1-0.dll
api-ms-win-core-localization-l1-2-0.dll
api-ms-win-core-debug-l1-1-0.dll
api-ms-win-core-handle-l1-1-0.dll
OLEAUT32.dll
api-ms-win-core-string-l1-1-0.dll
api-ms-win-core-profile-l1-1-0.dll
api-ms-win-core-sysinfo-l1-1-0.dll
api-ms-win-core-registry-l1-1-0.dll
api-ms-win-core-libraryloader-l1-2-1.dll
api-ms-win-core-heap-l2-1-0.dll
api-ms-win-core-winrt-l1-1-0.dll
api-ms-win-core-winrt-string-l1-1-0.dll
api-ms-win-core-threadpool-l1-2-0.dll
api-ms-win-core-synch-l1-2-1.dll
api-ms-win-core-timezone-l1-1-0.dll
api-ms-win-security-base-l1-1-0.dll
api-ms-win-core-file-l1-1-0.dll
api-ms-win-core-path-l1-1-0.dll
api-ms-win-core-sysinfo-l1-2-0.dll
GetSystemPowerStatus
RegOpenKeyW
RegDeleteKeyW
api-ms-win-core-kernel32-legacy-l1-1-0.dll
api-ms-win-core-registry-l2-1-0.dll
lstrcmpiW
api-ms-win-core-string-obsolete-l1-1-0.dll
UrlUnescapeW
api-ms-win-core-url-l1-1-0.dll
SyncGetDeviceUniqueID
DMCfgUtils.dll
GetOrCreateNullPowerDependencyCoordinatorManager
CHttpTransport_CreateInstance
SyncWerReportComponentName
SyncWerReportGenerator
SyncPdcReference_WatchdogsEnabled
SyncPdcReference_WatchdogReport
NetworkHelper.dll
StrStrIW
api-ms-win-downlevel-shlwapi-l1-1-0.dll
_vscwprintf
_vsnwprintf_s
_wcsicmp
wcschr
wcscat_s
wcsnlen
wcsncmp
_i64tow_s
_wcstoui64
_vsnprintf
wcsrchr
isalnum
strspn
strcspn
_wtoi
_itow_s
wcstok_s
wcsstr
wcscspn
__CxxFrameHandler4
__CxxFrameHandler3
RtlIsCriticalSectionLockedByThread
RtlGetDeviceFamilyInfoEnum
RtlIsMultiSessionSku
RtlGetThreadWorkOnBehalfTicket
RtlClearThreadWorkOnBehalfTicket
RtlSetThreadWorkOnBehalfTicket
WinSqmStartSession
WinSqmEndSession
WinSqmAddToStreamEx
ResolveDelayLoadedAPI
DelayLoadFailureHook
WakeAllConditionVariable
SleepConditionVariableSRW
api-ms-win-core-delayload-l1-1-1.dll
api-ms-win-core-delayload-l1-1-0.dll
lstrcmpW
memcmp
memcpy
memmove
memset
wcscmp
WEVT_TEMPLATE
EventData
P1_HResult
P2_String
P3_UInt32
P1_HResult
P2_String
P3_UInt32
EventData
P1_HexInt32
P1_HexInt32
EventData
P1_UnicodeString
P1_UnicodeString
H!ZIg\
EventData
P1_Int32
P1_Int32
TEMPP
EventData
Prop_String1
Prop_String2
Prop_String3
Prop_AnsiString
Prop_String1
Prop_String2
Prop_String3
Prop_AnsiString
EventData
Prop_Dword
Prop_StringA_1
Prop_StringA_2
Prop_Dword
Prop_StringA_1
Prop_StringA_2
TEMPT
f&8).
EventData
Prop_String1
Prop_FileTime1
Prop_String1
Prop_FileTime1
TEMPH
EventData
Prop_HexInt32
Prop_String
Prop_HexInt32
Prop_String
PRVAT
Microsoft-Windows-MCCS-SyncUtil
OPCOT
win:Start
win:Stop
win:Error
win:Warning
win:Informational
win:Verbose
TASKX
SPERF_TAG_LOAD_XMLDOM
Error
Performance
CommsService
Warning
StateTransition
VS_VERSION_INFO
StringFileInfo
040904B0
CompanyName
Microsoft Corporation
FileDescription
Sync utilities for mail, contacts, calendar
FileVersion
10.0.22621.1 (WinBuild.160101.0800)
InternalName
SyncUtil
LegalCopyright
 Microsoft Corporation. All rights reserved.
OriginalFilename
SyncUtil.dll
ProductName
Microsoft
 Windows
 Operating System
ProductVersion
10.0.22621.1
VarFileInfo
Translation
WEVT_TEMPLATE
en-US
